{"id":128942,"title":"03 | 轮询与长连接：如何解决消息的实时到达问题？","content":"<p>你好，我是袁武林。</p><p>我在前面第一篇文章中，从使用场景的需求方面，讲到了IM系统的几个比较重要的特性。其中之一就是“消息到达的实时性”。</p><p>实时性场景是所有的IM系统绕不开的话题，为了支持互联网的“实时互联”的概念，大部分的App都需要实时技术的支持。</p><p>我们现在使用的聊天类App、直播互动类App都已经在实时性方面做得很好了，消息收发延迟基本都能控制在毫秒级别。</p><p>当然这一方面得益于快速发展的移动网络，让网络延迟越来越低、网络带宽越来越高；另一个重要原因是：社交网络App在实时性提升方面的技术，也在不断升级迭代。</p><p>实时性主要解决的问题是：当一条消息发出后，我们的系统如何确保这条消息最快被接收人感知并获取到，并且尽量让耗费的资源较少。这里关键的几个点是：最快触达，且耗费资源少。</p><p>想好了吗？下面我们来看一看，IM在追求“消息实时性”的架构上，所经历过的几个代表性阶段。</p><h2>短轮询场景</h2><p>在PC Web的早期时代，对于数据的获取，大部分应用采用一问一答的“请求响应”式模式，实际上，像现在我们浏览大部分门户网站的新闻，以及刷微博其实都是采用的“请求响应”模式。</p><p>但这种依赖“手动”触发的模式，在即时消息系统中当有新消息产生时并不能很好地感知并获取到，所以明显不适用于对实时性要求高的场景。</p><!-- [[[read_end]]] --><p>因此，这个时期的IM软件很多采用了一种“短轮询”的模式，来定期、高频地轮询服务端的新消息。</p><p>在短轮询模式中，服务器接到请求后，如果有新消息就会将新消息返回给客户端，如果没有新消息就返回空列表，并关闭连接。</p><p>这种短轮询的方式就好像一位焦急等待重要信件的人，每天骑车跑到家门口的邮局去问是否有自己的信件，有就拿回家，没有第二天接着去邮局问。</p><p><img src=\"https://static001.geekbang.org/resource/image/f0/db/f0de61adecb8925483517cb5df2aecdb.png?wh=1505*1614\" alt=\"\"></p><p>作为从一问一答的请求响应模式孵化出来的短轮询模式，具有较低的迁移升级成本，比较容易落地。但劣势也很明显：</p><ul>\n<li>为了提升实时性，短轮询的频率一般较高，但大部分轮询请求实际上是无用的，客户端既费电也费流量；</li>\n<li>高频请求对服务端资源的压力也较大，一是大量服务器用于抗高频轮询的QPS（每秒查询率），二是对后端存储资源也有较大压力。</li>\n</ul><p>因此，“短轮询”这种方式，一般多用在用户规模比较小，且不愿花费太多服务改造成本的小型应用上。</p><h2>长轮询场景</h2><p>正是由于“短轮询”存在着高频无用功的问题，为了避免这个问题，IM逐步进化出“长轮询”的消息获取模式。</p><p>长轮询和短轮询相比，一个最大的改进之处在于：短轮询模式下，服务端不管本轮有没有新消息产生，都会马上响应并返回。而长轮询模式当本次请求没有获取到新消息时，并不会马上结束返回，而是会在服务端“悬挂（hang）”，等待一段时间；如果在等待的这段时间内有新消息产生，就能马上响应返回。</p><p>这种方式就像等待收信的人每天跑到邮局去问是否有自己的信件，如果没有，他不是马上回家，而是在邮局待上一天，如果还是没有就先回家，然后第二天再来。</p><p><img src=\"https://static001.geekbang.org/resource/image/55/8b/55b526787ddc5761508df251c5f76d8b.png?wh=1555*1392\" alt=\"\"></p><p>比较之下，我们会发现，长轮询能大幅降低短轮询模式中客户端高频无用的轮询导致的网络开销和功耗开销，也降低了服务端处理请求的QPS，相比短轮询模式而言，显得更加先进。</p><p>长轮询的使用场景多见于： 对实时性要求比较高，但是整体用户量不太大。它在不支持WebSocket的浏览器端的场景下还是有比较多的使用。</p><p>但是长轮询并没有完全解决服务端资源高负载的问题，仍然存在以下问题。</p><ol>\n<li>\n<p>服务端悬挂（hang）住请求，只是降低了入口请求的QPS，并没有减少对后端资源轮询的压力。假如有1000个请求在等待消息，可能意味着有1000个线程在不断轮询消息存储资源。</p>\n</li>\n<li>\n<p>长轮询在超时时间内没有获取到消息时，会结束返回，因此仍然没有完全解决客户端“无效”请求的问题。</p>\n</li>\n</ol><h2>服务端推送：真正的边缘触发</h2><p>短轮询和长轮询之所以没法做到基于事件的完全的“边缘触发（当状态变化时，发生一个IO事件）”，这是因为服务端在有新消息产生时，没有办法直接向客户端进行推送。</p><p>这里的根本原因在于短轮询和长轮询是基于HTTP协议实现的，由于HTTP是一个无状态协议，同一客户端的多次请求对于服务端来说并没有关系，也不会去记录客户端相关的连接信息。</p><p>因此，所有的请求只能由客户端发起，服务端由于并不记录客户端状态，当服务端接收到新消息时，没法找到对应的客户端来进行推送。</p><p>随着HTML5的出现，全双工的WebSocket彻底解决了服务端推送的问题。</p><p><img src=\"https://static001.geekbang.org/resource/image/3c/6b/3c2eaba794372659e78bb9d678d16d6b.png?wh=1614*1474\" alt=\"\"><br>\n这就像之前信件处理的逻辑，等待收信的用户不需要每天都跑到邮局去询问，而只要在邮局登记好自己家里的地址。等真正有信件时，邮局会派专门的邮递员按照登记的地址来把信送过去。</p><p>同样，当他需要写信给别人时，也只需要填好收件人地址，然后把信交给邮递员就可以了，不需要再自己跑邮局。</p><h3>WebSocket</h3><p>WebSocket正是一种服务端推送的技术代表。</p><p>随着HTML5的出现，基于单个TCP连接的全双工通信的协议WebSocket在2011年成为RFC标准协议，逐渐代替了短轮询和长轮询的方式，而且由于WebSocket协议获得了Web原生支持，被广泛应用于IM服务中，特别是在Web端基本属于IM的标配通信协议。</p><p>和短轮询、长轮询相比，基于WebSocket实现的IM服务，客户端和服务端只需要完成一次握手，就可以创建持久的长连接，并进行随时的双向数据传输。当服务端接收到新消息时，可以通过建立的WebSocket连接，直接进行推送，真正做到“边缘触发”，也保证了消息到达的实时性。</p><p>WebSocket的优点是：</p><ol>\n<li>支持服务端推送的双向通信，大幅降低服务端轮询压力；</li>\n<li>数据交互的控制开销低，降低双方通信的网络开销；</li>\n<li>Web原生支持，实现相对简单。</li>\n</ol><h3>TCP长连接衍生的IM协议</h3><p>除了WebSocket协议，在IM领域，还有其他一些常用的基于TCP长连接衍生的通信协议，如XMPP协议、MQTT协议以及各种私有协议。</p><p>这些基于TCP长连接的通信协议，在用户上线连接时，在服务端维护好连接到服务器的用户设备和具体TCP连接的映射关系，通过这种方式客户端能够随时找到服务端，服务端也能通过这个映射关系随时找到对应在线的用户的客户端。</p><p>而且这个长连接一旦建立，就一直存在，除非网络被中断。这样当有消息需要实时推送给某个用户时，就能简单地通过这个长连接实现“服务端实时推送”了。</p><p>但是上面提到的这些私有协议都各有优缺点，如：XMPP协议虽然比较成熟、扩展性也不错，但基于XML格式的协议传输上冗余比较多，在流量方面不太友好，而且整体实现上比较复杂，在如今移动网络场景下用得并不多。</p><p>而轻量级的MQTT基于代理的“发布/订阅”模式，在省流量和扩展性方面都比较突出，在很多消息推送场景下被广泛使用，但这个协议并不是IM领域的专有协议，因此对于很多IM下的个性化业务场景仍然需要大量复杂的扩展和开发，比如不支持群组功能、不支持离线消息。</p><p>因此，对于开发人力相对充足的大厂，目前很多是基于TCP（或者UDP）来实现自己的私有协议，一方面私有协议能够贴合业务需要，做到真正的高效和省流；另一方面私有协议相对安全性更高一些，被破解的可能性小。目前主流的大厂很多都是采用私有协议为主的方式来实现。</p><h2>小结</h2><p>这一篇我们介绍了即时消息服务中是如何解决“消息实时性”这个难题。</p><p>为了更好地解决实时性问题，即时消息领域经历过的几次技术的迭代升级：</p><ul>\n<li>从简单、低效的短轮询逐步升级到相对效率可控的长轮询；</li>\n<li>随着HTML5的出现，全双工的WebSocket彻底解决了服务端推送的问题；</li>\n<li>同时基于TCP长连接衍生的各种有状态的通信协议，也能够实现服务端主动推送，从而更好解决“消息收发实时性”的问题。</li>\n</ul><p>最后给你留一个思考题，TCP长连接的方式是怎么实现“当有消息需要发送给某个用户时，能够准确找到这个用户对应的网络连接”？</p><p>你可以给我留言，我们一起讨论，感谢你的收听，我们下期再见。</p>","neighbors":{"left":{"article_title":"02 | 消息收发架构：为你的App，加上实时通信功能","id":127978},"right":{"article_title":"04 | ACK机制：如何保证消息的可靠投递？","id":129751}},"comments":[{"had_liked":false,"id":130199,"user_name":"王棕生","can_delete":false,"product_type":"c1","uid":1337944,"ip_address":"","ucode":"901BD0447A871E","user_header":"https://static001.geekbang.org/account/avatar/00/14/6a/58/f2c6d65b.jpg","comment_is_top":false,"comment_ctime":1567401070,"is_pvip":false,"replies":[{"id":"48621","content":"👍","user_name":"作者回复","user_name_real":"coldwalker","uid":"1297490","ctime":1567425160,"ip_address":"","comment_id":130199,"utype":1}],"discussion_count":10,"race_medal":0,"score":"349459752046","product_id":100034901,"comment_content":"TCP 长连接的方式是怎么实现“当有消息需要发送给某个用户时，能够准确找到这个用户对应的网络连接”？<br>答： 首先用户有一个登陆的过程： (1)tcp客户端与服务端通过三次握手建立tcp连接；(2)基于该连接客户端发送登陆请求；(3)服务端对登陆请求进行解析和判断，如果合法，就将当前用户的uid和标识当前tcp连接的socket描述符(也就是fd)建立映射关系； (4)这个映射关系一般是保存在本地缓存或分布式缓存中。<br>         然后，当服务端收到要发送给这个用户的消息时，先从缓存中根据uid查找fd，如果找到，就基于fd将消息推送出去。","like_count":82,"discussions":[{"author":{"id":1297490,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/DYAIOgq83epK1zyWib7IKYCoRSxIa6dDjrcyBqObGfj1lDVia1pOrSVxyltKI7RfGekdXPQNObwaBQg3gwvarlQA/132","nickname":"coldwalker","note":"","ucode":"AF9AF257A745C9","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":465853,"discussion_content":"👍","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1567425160,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1444145,"avatar":"https://static001.geekbang.org/account/avatar/00/16/09/31/535d60bc.jpg","nickname":"RuBy","note":"","ucode":"C677C3358CB295","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":7664,"discussion_content":"只要找到fd就好了，socket的实现是向fd缓冲区写数据，内核会将数据发到协议栈去，由它最终实际交给网卡","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1567605188,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1725691,"avatar":"https://static001.geekbang.org/account/avatar/00/1a/54/fb/d533b03e.jpg","nickname":"Andy","note":"","ucode":"BDA2AEB353ECC4","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":571432,"discussion_content":"socket不能保存在缓存中，肯定是有状态服吧。但是登录连接的用户肯定是存在redis中的","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1652225676,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1748441,"avatar":"https://static001.geekbang.org/account/avatar/00/1a/ad/d9/6b4c397b.jpg","nickname":"长草嘟嘟","note":"","ucode":"D22349E0B88EEC","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":545539,"discussion_content":"如果服务端有多个进程或者实例呢？","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1641992029,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1351597,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTJM2Y17W5mKU1icTg4OTKd3xYMhANenFDsYewjBlzWMujIh3vA2Yj9yG8ibr6WQMqUjjTgeNicXTp9kw/132","nickname":"jfwwlong","note":"","ucode":"215753DB23A02A","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":373010,"discussion_content":"请问这里是不是假设不同的用户一定连到了同一台机器呢？如果建立的连接分散到了不同的机器 请问如何工作呢？","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1620567653,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1441606,"avatar":"https://static001.geekbang.org/account/avatar/00/15/ff/46/7e4039ea.jpg","nickname":"伟平","note":"","ucode":"2D3E55238FC8B3","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":352085,"discussion_content":"如果是保存到分布式缓存,又是一套负责的方案了巴","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1614597507,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1572382,"avatar":"https://static001.geekbang.org/account/avatar/00/17/fe/1e/8b46bc68.jpg","nickname":"Vigo","note":"","ucode":"5F2ED517791FF8","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":344818,"discussion_content":"秀儿，是你吗？","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1611579652,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1667714,"avatar":"https://static001.geekbang.org/account/avatar/00/19/72/82/24fb9d18.jpg","nickname":"慕然","note":"","ucode":"8622102560A80F","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":315292,"discussion_content":"java不提供这种通过fd找对应socket的api吧？","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1603261072,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1556079,"avatar":"","nickname":"秋风辞","note":"","ucode":"B678F58A6BF3BB","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":292383,"discussion_content":"这种方案解决断线重连还是有点麻烦,使用token会不会好一点?","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1595211038,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1075950,"avatar":"https://wx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTJTywPCdTDoRAaLBN20JfD50dQPic0B3OeUgYMHA3x7ptvF3iaCRTqrNZsF3Cz8TCibcwSsCichdOiallQ/0","nickname":"geekymv","note":"","ucode":"B119ACE47B8C0C","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":7297,"discussion_content":"映射关系保存在分布式缓存中，意思是 socket 可以保存在分布式缓存中么？","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1567478531,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":130332,"user_name":"菜菜菜菜菜鸟","can_delete":false,"product_type":"c1","uid":1642890,"ip_address":"","ucode":"C6A2018F4E8772","user_header":"https://static001.geekbang.org/account/avatar/00/19/11/8a/65a7a63d.jpg","comment_is_top":false,"comment_ctime":1567426919,"is_pvip":false,"replies":[{"id":"48927","content":"是个好问题。因为很多时候消息由tcp层交给应用层之后还可能出现丢失的情况，比如客户端落本地db失败了，类似这种。","user_name":"作者回复","user_name_real":"coldwalker","uid":"1297490","ctime":1567519078,"ip_address":"","comment_id":130332,"utype":1}],"discussion_count":6,"race_medal":0,"score":"126121478503","product_id":100034901,"comment_content":"TCP不是可靠的吗，为什么还需要在应用层实现ack，不应该是消息发出对方就一定可以收到的吗","like_count":30,"discussions":[{"author":{"id":1477992,"avatar":"https://static001.geekbang.org/account/avatar/00/16/8d/68/d61806f7.jpg","nickname":"Maje","note":"","ucode":"F61871D494844F","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":11792,"discussion_content":"所谓的可靠是指接受方收到数据的时候，数据的顺序和内容是完整的，不是说发出去一定能收到，也不代表没收到的情况下发送方一定会立刻感知异常。","likes_number":5,"is_delete":false,"is_hidden":false,"ctime":1568433156,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1618633,"avatar":"https://static001.geekbang.org/account/avatar/00/18/b2/c9/b414a77c.jpg","nickname":"HelloTalk","note":"","ucode":"F898E6A7C61D39","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":7289,"discussion_content":"还有一种半连接的状态，可能导致丢消息","likes_number":2,"is_delete":false,"is_hidden":false,"ctime":1567474671,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1297490,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/DYAIOgq83epK1zyWib7IKYCoRSxIa6dDjrcyBqObGfj1lDVia1pOrSVxyltKI7RfGekdXPQNObwaBQg3gwvarlQA/132","nickname":"coldwalker","note":"","ucode":"AF9AF257A745C9","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":465912,"discussion_content":"是个好问题。因为很多时候消息由tcp层交给应用层之后还可能出现丢失的情况，比如客户端落本地db失败了，类似这种。","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1567519078,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1572382,"avatar":"https://static001.geekbang.org/account/avatar/00/17/fe/1e/8b46bc68.jpg","nickname":"Vigo","note":"","ucode":"5F2ED517791FF8","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":344821,"discussion_content":"tcp是逻辑通道不是物理通道","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1611579752,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":2392994,"avatar":"https://static001.geekbang.org/account/avatar/00/24/83/a2/dc9cf909.jpg","nickname":"Matthias Meng","note":"","ucode":"BDE679B2DB862A","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":552468,"discussion_content":"tcp连接黑洞（tcp假链接）","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1645489882,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1486895,"avatar":"https://static001.geekbang.org/account/avatar/00/16/b0/2f/e2096905.jpg","nickname":"马成","note":"","ucode":"664F2BAA2E0F0B","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":7262,"discussion_content":"tcp长链接可能断掉，这个时候失败了需要等到客户端建立新链接再重新推送","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1567438302,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":131792,"user_name":"技术带头","can_delete":false,"product_type":"c1","uid":1656584,"ip_address":"","ucode":"46BF9285014FB7","user_header":"","comment_is_top":false,"comment_ctime":1567908331,"is_pvip":false,"replies":[{"id":"50499","content":"可以考虑推拉结合，离线消息太多如果全部都推的话性能和带宽上都不太友好，可以离线推送一页，后续的再由客户端来拉取。","user_name":"作者回复","user_name_real":"coldwalker","uid":"1297490","ctime":1568035548,"ip_address":"","comment_id":131792,"utype":1}],"discussion_count":1,"race_medal":0,"score":"74582352363","product_id":100034901,"comment_content":"老师你好，我们也落地了一套im，服务端和本地都有存储，和用websoket。现在存在一个问题。群聊离线推送是将离线后产生的所有消息再用户上线的时候推送，还是客户端分页拉取","like_count":18,"discussions":[{"author":{"id":1297490,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/DYAIOgq83epK1zyWib7IKYCoRSxIa6dDjrcyBqObGfj1lDVia1pOrSVxyltKI7RfGekdXPQNObwaBQg3gwvarlQA/132","nickname":"coldwalker","note":"","ucode":"AF9AF257A745C9","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":466623,"discussion_content":"可以考虑推拉结合，离线消息太多如果全部都推的话性能和带宽上都不太友好，可以离线推送一页，后续的再由客户端来拉取。","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1568035548,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":131884,"user_name":"yic","can_delete":false,"product_type":"c1","uid":1201577,"ip_address":"","ucode":"C8DC471B7C28B8","user_header":"https://static001.geekbang.org/account/avatar/00/12/55/a9/5282a560.jpg","comment_is_top":false,"comment_ctime":1567950055,"is_pvip":false,"replies":[{"id":"50506","content":"以前有大厂测试过国内各家运营商的NAT超时情况，有的运营商在2&#47;3G网络下NAT超时是5分钟。","user_name":"作者回复","user_name_real":"coldwalker","uid":"1297490","ctime":1568036299,"ip_address":"","comment_id":131884,"utype":1}],"discussion_count":2,"race_medal":0,"score":"70287426791","product_id":100034901,"comment_content":"客户端发送心跳包，一般多久一次比较合适？ 我看老师有回复国内不超过5分钟，微信用的是4分半。这个时间有什么依据吗？","like_count":16,"discussions":[{"author":{"id":1297490,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/DYAIOgq83epK1zyWib7IKYCoRSxIa6dDjrcyBqObGfj1lDVia1pOrSVxyltKI7RfGekdXPQNObwaBQg3gwvarlQA/132","nickname":"coldwalker","note":"","ucode":"AF9AF257A745C9","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":466664,"discussion_content":"以前有大厂测试过国内各家运营商的NAT超时情况，有的运营商在2/3G网络下NAT超时是5分钟。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1568036299,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1201577,"avatar":"https://static001.geekbang.org/account/avatar/00/12/55/a9/5282a560.jpg","nickname":"yic","note":"","ucode":"C8DC471B7C28B8","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":9068,"discussion_content":"谢谢","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1568127916,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":130394,"user_name":"魏巍","can_delete":false,"product_type":"c1","uid":1191572,"ip_address":"","ucode":"DA07FCBF838D62","user_header":"https://static001.geekbang.org/account/avatar/00/12/2e/94/68ebd69f.jpg","comment_is_top":false,"comment_ctime":1567440614,"is_pvip":false,"replies":[{"id":"48939","content":"进程kill是会对socket执行close操作的哈，所以客户端是能感知到的。真要是通过拔网线的方式把服务端网络断开，这种情况客户端在发送数据时就会失败，然后短连后重连其他服务器就可以了。","user_name":"作者回复","user_name_real":"coldwalker","uid":"1297490","ctime":1567520205,"ip_address":"","comment_id":130394,"utype":1}],"discussion_count":2,"race_medal":0,"score":"61696982758","product_id":100034901,"comment_content":"服务器端如果突然进程被kill掉，客户端如何及时得到通知并下线？","like_count":15,"discussions":[{"author":{"id":1297490,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/DYAIOgq83epK1zyWib7IKYCoRSxIa6dDjrcyBqObGfj1lDVia1pOrSVxyltKI7RfGekdXPQNObwaBQg3gwvarlQA/132","nickname":"coldwalker","note":"","ucode":"AF9AF257A745C9","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":465937,"discussion_content":"进程kill是会对socket执行close操作的哈，所以客户端是能感知到的。真要是通过拔网线的方式把服务端网络断开，这种情况客户端在发送数据时就会失败，然后短连后重连其他服务器就可以了。","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1567520205,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1262780,"avatar":"https://static001.geekbang.org/account/avatar/00/13/44/bc/c71070e7.jpg","nickname":"落誓布偶","note":"","ucode":"38AA3E6A9A135F","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":7467,"discussion_content":"我是这样解决的，心跳连接，发现掉线不断重连。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1567515738,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":130055,"user_name":"飞翔","can_delete":false,"product_type":"c1","uid":1068571,"ip_address":"","ucode":"65AF6AF292DAD6","user_header":"https://static001.geekbang.org/account/avatar/00/10/4e/1b/f4b786b9.jpg","comment_is_top":false,"comment_ctime":1567379072,"is_pvip":true,"replies":[{"id":"48591","content":"一种做法是用户上线时维护一个全局的 uid-&gt;网关机 的映射，下发的时候就能做到精确定位；另一种方式是：下发时把所有消息下发给所有机器，每台机器如果发现当前用户连接在本机就下发，其他的就丢掉，这种会有一定的资源浪费。","user_name":"作者回复","user_name_real":"coldwalker","uid":"1297490","ctime":1567420344,"ip_address":"","comment_id":130055,"utype":1}],"discussion_count":12,"race_medal":0,"score":"57401953920","product_id":100034901,"comment_content":"服务器维护一个hashmap   key是 userid，value 是socket instance， 这样 用户A 发给用户B的信息里边含有用户B 的id， 用usedBid 到hashmap 里边查到 用户B的socket 就可以用socket 发送信息给用户B了，老师我还有一个问题 就是如果一台机器连接数有限， 如果需要多台机器，如果用户A的socker 和用户B的socket 不在一台机器上，这样怎么解决呀","like_count":14,"discussions":[{"author":{"id":1297490,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/DYAIOgq83epK1zyWib7IKYCoRSxIa6dDjrcyBqObGfj1lDVia1pOrSVxyltKI7RfGekdXPQNObwaBQg3gwvarlQA/132","nickname":"coldwalker","note":"","ucode":"AF9AF257A745C9","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":465781,"discussion_content":"一种做法是用户上线时维护一个全局的 uid-&amp;gt;网关机 的映射，下发的时候就能做到精确定位；另一种方式是：下发时把所有消息下发给所有机器，每台机器如果发现当前用户连接在本机就下发，其他的就丢掉，这种会有一定的资源浪费。","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1567420344,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1439908,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/IPdZZXuHVMibwfZWmm7NiawzeEFGsaRoWjhuN99iaoj5amcRkiaOePo6rH1KJ3jictmNlic4OibkF4I20vOGfwDqcBxfA/132","nickname":"鱼向北游","note":"","ucode":"580EC7DCE57E9A","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":41377,"discussion_content":"老师还在么，我现在搞得是用的类似第二种模式，业务收到哪个网关的消息就处理完就丢到原网关，然后网关层做了个简单缓存，来确保不是每次都广播（有缓存消息只需要转发就行了，无缓存就广播），感觉搞一个全局的在线中心好难啊，一致性、单点问题、还要支持大并发","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1572413645,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":2,"child_discussions":[{"author":{"id":2037540,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/qgbQytfwErGXuIZaRzA28iagmfnZDHKMYIGwZ7sJ6NAicVicDewic8S266eA9L4wO2q1y4XwcMGE6urK9L6vuQBpMA/132","nickname":"Geek_6e6dba","note":"","ucode":"E7B1A5DC90760D","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1439908,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/IPdZZXuHVMibwfZWmm7NiawzeEFGsaRoWjhuN99iaoj5amcRkiaOePo6rH1KJ3jictmNlic4OibkF4I20vOGfwDqcBxfA/132","nickname":"鱼向北游","note":"","ucode":"580EC7DCE57E9A","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":283678,"discussion_content":"“广播” 指的是一个网关机广播给其他网关机？老师讲过网关机服务器之间好像不通讯。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1592323186,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":41377,"ip_address":""},"score":283678,"extra":""},{"author":{"id":1667714,"avatar":"https://static001.geekbang.org/account/avatar/00/19/72/82/24fb9d18.jpg","nickname":"慕然","note":"","ucode":"8622102560A80F","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":1439908,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/IPdZZXuHVMibwfZWmm7NiawzeEFGsaRoWjhuN99iaoj5amcRkiaOePo6rH1KJ3jictmNlic4OibkF4I20vOGfwDqcBxfA/132","nickname":"鱼向北游","note":"","ucode":"580EC7DCE57E9A","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":315293,"discussion_content":"redis cluster解决不了这个问题么？","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1603261232,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":41377,"ip_address":""},"score":315293,"extra":""}]},{"author":{"id":1043738,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/ed/1a/ce7f7d54.jpg","nickname":"asdf100","note":"","ucode":"39D8D71453E575","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":7213,"discussion_content":"存储到redis里怎么存储，没有搞过？","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1567419895,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":1,"child_discussions":[{"author":{"id":1027781,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/ae/c5/09c2dd48.jpg","nickname":"M$画像","note":"","ucode":"B7298F0CC7ADC8","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":1043738,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/ed/1a/ce7f7d54.jpg","nickname":"asdf100","note":"","ucode":"39D8D71453E575","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":7229,"discussion_content":"用一个Hash或者n个string来存储","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1567426075,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":7213,"ip_address":""},"score":7229,"extra":""}]},{"author":{"id":1337944,"avatar":"https://static001.geekbang.org/account/avatar/00/14/6a/58/f2c6d65b.jpg","nickname":"王棕生","note":"","ucode":"901BD0447A871E","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":7142,"discussion_content":"用户的uid和socket的fd的映射关系，不要保存在本地，一般是保存在用分布式的缓存中，如:  memcache或codis","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1567401543,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1178756,"avatar":"https://static001.geekbang.org/account/avatar/00/11/fc/84/9f8afa9b.jpg","nickname":"瑜斌","note":"","ucode":"171FAF5736F334","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":7106,"discussion_content":"存redis","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1567387674,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":4,"child_discussions":[{"author":{"id":1642766,"avatar":"https://static001.geekbang.org/account/avatar/00/19/11/0e/23d6a88f.jpg","nickname":"Shuai","note":"","ucode":"BE705668C66225","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1178756,"avatar":"https://static001.geekbang.org/account/avatar/00/11/fc/84/9f8afa9b.jpg","nickname":"瑜斌","note":"","ucode":"171FAF5736F334","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":7121,"discussion_content":"正解","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1567391068,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":7106,"ip_address":""},"score":7121,"extra":""},{"author":{"id":1195409,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTJZuwMDaoJviaf3lZ5BOgAvTzLzmbGrMrCZ22krLSRyxpKUrVicU9pSnWsyuSHjksyNldBpXrRzUqeA/132","nickname":"挨踢菜鸟","note":"","ucode":"CC208C8749B228","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1642766,"avatar":"https://static001.geekbang.org/account/avatar/00/19/11/0e/23d6a88f.jpg","nickname":"Shuai","note":"","ucode":"BE705668C66225","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":7128,"discussion_content":"Redis存socket好像有问题，不知道你是怎么存进去的","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1567393807,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":7121,"ip_address":""},"score":7128,"extra":""},{"author":{"id":1027781,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/ae/c5/09c2dd48.jpg","nickname":"M$画像","note":"","ucode":"B7298F0CC7ADC8","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":1195409,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTJZuwMDaoJviaf3lZ5BOgAvTzLzmbGrMrCZ22krLSRyxpKUrVicU9pSnWsyuSHjksyNldBpXrRzUqeA/132","nickname":"挨踢菜鸟","note":"","ucode":"CC208C8749B228","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":7230,"discussion_content":"难道你说的是序列化socket后出入redis？","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1567426126,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":7128,"ip_address":""},"score":7230,"extra":""}]}]},{"had_liked":false,"id":137829,"user_name":"探索无止境","can_delete":false,"product_type":"c1","uid":1044178,"ip_address":"","ucode":"91D2A9907DFA79","user_header":"https://static001.geekbang.org/account/avatar/00/0f/ee/d2/7024431c.jpg","comment_is_top":false,"comment_ctime":1569885164,"is_pvip":false,"replies":[{"id":"53267","content":"不具备读写操作仅仅只是维护静态连接的话基本上就是个拼内存的活，调整tcp单连接的读写缓冲区大小到4k，优化下其他系统参数比如句柄限制啥的，建连速度稍微慢点，有个200g内存是没问题的。这里其实想说的是，不要光看单机能维护多少连接，每秒收发包数这些才是关键。","user_name":"作者回复","user_name_real":"coldwalker","uid":"1297490","ctime":1570273083,"ip_address":"","comment_id":137829,"utype":1}],"discussion_count":1,"race_medal":0,"score":"44519558124","product_id":100034901,"comment_content":"老师你好，为什么说一台服务器可以最多可以支持1000万的连接请求，这个数值是怎么推算出来的？","like_count":11,"discussions":[{"author":{"id":1297490,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/DYAIOgq83epK1zyWib7IKYCoRSxIa6dDjrcyBqObGfj1lDVia1pOrSVxyltKI7RfGekdXPQNObwaBQg3gwvarlQA/132","nickname":"coldwalker","note":"","ucode":"AF9AF257A745C9","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":469279,"discussion_content":"不具备读写操作仅仅只是维护静态连接的话基本上就是个拼内存的活，调整tcp单连接的读写缓冲区大小到4k，优化下其他系统参数比如句柄限制啥的，建连速度稍微慢点，有个200g内存是没问题的。这里其实想说的是，不要光看单机能维护多少连接，每秒收发包数这些才是关键。","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1570273083,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":130402,"user_name":"魏巍","can_delete":false,"product_type":"c1","uid":1191572,"ip_address":"","ucode":"DA07FCBF838D62","user_header":"https://static001.geekbang.org/account/avatar/00/12/2e/94/68ebd69f.jpg","comment_is_top":false,"comment_ctime":1567441806,"is_pvip":false,"replies":[{"id":"48942","content":"连接数一般不是问题哈，服务端单机几百万上千万都可以的，受限于分配给每个连接的buffer占用的内存。业务层持久化会慢会导致客户端掉线这个没看懂呀，能具体一点吗？第三个问题可以做db的读写分离，第四个问题应该是说db的自动切主吧，这个是可以的哈，很成熟的方案。","user_name":"作者回复","user_name_real":"coldwalker","uid":"1297490","ctime":1567520533,"ip_address":"","comment_id":130402,"utype":1}],"discussion_count":1,"race_medal":0,"score":"35927180174","product_id":100034901,"comment_content":"一个linux服务器可以接受多少tcp连接，如何量化这个数字？当业务层对持久化层操作响应慢时，为何客户端会频繁掉线？聊天数据的持久化与下发操作查库对数据库的读写压力如何缓解？实时聊天的数据库如果宕机，能否做自动切换数据库服务器的操作？","like_count":8,"discussions":[{"author":{"id":1297490,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/DYAIOgq83epK1zyWib7IKYCoRSxIa6dDjrcyBqObGfj1lDVia1pOrSVxyltKI7RfGekdXPQNObwaBQg3gwvarlQA/132","nickname":"coldwalker","note":"","ucode":"AF9AF257A745C9","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":465940,"discussion_content":"连接数一般不是问题哈，服务端单机几百万上千万都可以的，受限于分配给每个连接的buffer占用的内存。业务层持久化会慢会导致客户端掉线这个没看懂呀，能具体一点吗？第三个问题可以做db的读写分离，第四个问题应该是说db的自动切主吧，这个是可以的哈，很成熟的方案。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1567520533,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":130707,"user_name":"sam","can_delete":false,"product_type":"c1","uid":1000417,"ip_address":"","ucode":"8D48F4B9045947","user_header":"https://static001.geekbang.org/account/avatar/00/0f/43/e1/b7be5560.jpg","comment_is_top":false,"comment_ctime":1567515038,"is_pvip":false,"replies":[{"id":"48946","content":"和http没关系哈，实现上比如接收到一个请求后，通过while循环判断，如果请求时间和当前时间的时间差没有到达超时阈值，就继续查询后端是否有新消息，直到超时或者查询到新消息。","user_name":"作者回复","user_name_real":"coldwalker","uid":"1297490","ctime":1567521293,"ip_address":"","comment_id":130707,"utype":1}],"discussion_count":2,"race_medal":0,"score":"31632286110","product_id":100034901,"comment_content":"轮询就是前段定时请求，这个比较了解。但长轮询第一次听说，实际开发也没用过，特别是服务器的“悬挂（hang）”怎么理解？ 是HTTP协议的机制吗？","like_count":8,"discussions":[{"author":{"id":1297490,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/DYAIOgq83epK1zyWib7IKYCoRSxIa6dDjrcyBqObGfj1lDVia1pOrSVxyltKI7RfGekdXPQNObwaBQg3gwvarlQA/132","nickname":"coldwalker","note":"","ucode":"AF9AF257A745C9","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":466079,"discussion_content":"和http没关系哈，实现上比如接收到一个请求后，通过while循环判断，如果请求时间和当前时间的时间差没有到达超时阈值，就继续查询后端是否有新消息，直到超时或者查询到新消息。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1567521293,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1048218,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/fe/9a/791d0f5e.jpg","nickname":"阿凯啊","note":"","ucode":"781D46376B67DE","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":211516,"discussion_content":"例如 java的异步servlet，client长轮询过来后，将连接句柄放到内存缓存，有响应的时候重新获取这个句柄，通过这个句柄响应http请求。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1584860768,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":130403,"user_name":"魏巍","can_delete":false,"product_type":"c1","uid":1191572,"ip_address":"","ucode":"DA07FCBF838D62","user_header":"https://static001.geekbang.org/account/avatar/00/12/2e/94/68ebd69f.jpg","comment_is_top":false,"comment_ctime":1567442232,"is_pvip":false,"replies":[{"id":"48943","content":"国内的话最好不要超过5分钟，微信应该是4分半。","user_name":"作者回复","user_name_real":"coldwalker","uid":"1297490","ctime":1567520655,"ip_address":"","comment_id":130403,"utype":1}],"discussion_count":3,"race_medal":0,"score":"27337246008","product_id":100034901,"comment_content":"客户端发送心跳包，一般多久一次比较合适？","like_count":7,"discussions":[{"author":{"id":1297490,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/DYAIOgq83epK1zyWib7IKYCoRSxIa6dDjrcyBqObGfj1lDVia1pOrSVxyltKI7RfGekdXPQNObwaBQg3gwvarlQA/132","nickname":"coldwalker","note":"","ucode":"AF9AF257A745C9","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":465941,"discussion_content":"国内的话最好不要超过5分钟，微信应该是4分半。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1567520655,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1201577,"avatar":"https://static001.geekbang.org/account/avatar/00/12/55/a9/5282a560.jpg","nickname":"yic","note":"","ucode":"C8DC471B7C28B8","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":8365,"discussion_content":"请问一下这个时间间隔有什么依据吗？","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1567949622,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":1,"child_discussions":[{"author":{"id":1033096,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/c3/88/d16816a8.jpg","nickname":"如来神掌","note":"","ucode":"45E20FF935BD2F","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1201577,"avatar":"https://static001.geekbang.org/account/avatar/00/12/55/a9/5282a560.jpg","nickname":"yic","note":"","ucode":"C8DC471B7C28B8","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":297667,"discussion_content":"有个运营商的超时表，可以查一下","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1597020663,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":8365,"ip_address":""},"score":297667,"extra":""}]}]},{"had_liked":false,"id":130094,"user_name":"小可","can_delete":false,"product_type":"c1","uid":1006735,"ip_address":"","ucode":"8834AF621FA67D","user_header":"https://static001.geekbang.org/account/avatar/00/0f/5c/8f/551b5624.jpg","comment_is_top":false,"comment_ctime":1567385791,"is_pvip":false,"replies":[{"id":"48602","content":"👍","user_name":"作者回复","user_name_real":"coldwalker","uid":"1297490","ctime":1567423501,"ip_address":"","comment_id":130094,"utype":1}],"discussion_count":2,"race_medal":0,"score":"23042222271","product_id":100034901,"comment_content":"用户使用客户端与服务器建立连接时携带了userid与clientid，连接建立成功后，服务器端记录用户、客户端及连接之间的关系。一个可以用户使用多个客户端建立连接，一般是不同类型的客户端(网页、APP），后续有消息可根据此关系进行多端推送。","like_count":5,"discussions":[{"author":{"id":1297490,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/DYAIOgq83epK1zyWib7IKYCoRSxIa6dDjrcyBqObGfj1lDVia1pOrSVxyltKI7RfGekdXPQNObwaBQg3gwvarlQA/132","nickname":"coldwalker","note":"","ucode":"AF9AF257A745C9","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":465800,"discussion_content":"👍","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1567423501,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1667714,"avatar":"https://static001.geekbang.org/account/avatar/00/19/72/82/24fb9d18.jpg","nickname":"慕然","note":"","ucode":"8622102560A80F","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":315296,"discussion_content":"clientId怎么生成呢？如何标识，和userId有关系吗？","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1603261457,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":130062,"user_name":"超威丶","can_delete":false,"product_type":"c1","uid":1180753,"ip_address":"","ucode":"1A18DE885D3C44","user_header":"https://static001.geekbang.org/account/avatar/00/12/04/51/da465a93.jpg","comment_is_top":false,"comment_ctime":1567380946,"is_pvip":false,"replies":[{"id":"48592","content":"websocket支持双向全双工的传输，所以可以做到服务端推送，让消息接收更加实时。","user_name":"作者回复","user_name_real":"coldwalker","uid":"1297490","ctime":1567420506,"ip_address":"","comment_id":130062,"utype":1}],"discussion_count":4,"race_medal":0,"score":"23042217426","product_id":100034901,"comment_content":"请问websocket为什么能实现实时通信","like_count":5,"discussions":[{"author":{"id":1297490,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/DYAIOgq83epK1zyWib7IKYCoRSxIa6dDjrcyBqObGfj1lDVia1pOrSVxyltKI7RfGekdXPQNObwaBQg3gwvarlQA/132","nickname":"coldwalker","note":"","ucode":"AF9AF257A745C9","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":465783,"discussion_content":"websocket支持双向全双工的传输，所以可以做到服务端推送，让消息接收更加实时。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1567420506,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1337944,"avatar":"https://static001.geekbang.org/account/avatar/00/14/6a/58/f2c6d65b.jpg","nickname":"王棕生","note":"","ucode":"901BD0447A871E","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":7140,"discussion_content":"websocket是基于tcp协议的应用层的长连接协议，客户端与服务端建立连接之后，连接会一直存在； 这样当服务器端有消息要推送时，就可以直接基于这条连接将消息推送出去；反过来，如果是http协议的话，就无法做到这一点，因为http是短连接的无状态协议，服务端不会保存连接信息。","likes_number":5,"is_delete":false,"is_hidden":false,"ctime":1567401229,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1004641,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/54/61/68160639.jpg","nickname":"五天几年","note":"","ucode":"C5BAB0AA1813AD","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":7125,"discussion_content":"底层是TCP连接","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1567392156,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1178756,"avatar":"https://static001.geekbang.org/account/avatar/00/11/fc/84/9f8afa9b.jpg","nickname":"瑜斌","note":"","ucode":"171FAF5736F334","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":7108,"discussion_content":"他是全双工","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1567387791,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":187186,"user_name":"zombo","can_delete":false,"product_type":"c1","uid":1904120,"ip_address":"","ucode":"87F34EB0C442E2","user_header":"","comment_is_top":false,"comment_ctime":1584054598,"is_pvip":false,"replies":[{"id":"72302","content":"最大的区别在于websocket是支持全双工的，也就是说是可以由服务端主动进行推送的，http 1.1 的keep alive只是能够多次http请求复用同一个tcp连接，但只能由客户端发起请求。","user_name":"作者回复","user_name_real":"coldwalker","uid":"1297490","ctime":1584086815,"ip_address":"","comment_id":187186,"utype":1}],"discussion_count":1,"race_medal":0,"score":"18763923782","product_id":100034901,"comment_content":"老师请教一个区分，长连接是不是 &quot;header: keep-alive&quot; 的连接? 英文对应 persistent HTTP connection，但大家用得不多。而 webSocket 是HTML5才出来的，类似的机制，但各种浏览器支持得比较多。<br>因为机制和实现上，我好像看不出它们有太大的区别? 还是说 persistent HTTP 仍然是3次握手，websocket是一次?","like_count":5,"discussions":[{"author":{"id":1297490,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/DYAIOgq83epK1zyWib7IKYCoRSxIa6dDjrcyBqObGfj1lDVia1pOrSVxyltKI7RfGekdXPQNObwaBQg3gwvarlQA/132","nickname":"coldwalker","note":"","ucode":"AF9AF257A745C9","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":487022,"discussion_content":"最大的区别在于websocket是支持全双工的，也就是说是可以由服务端主动进行推送的，http 1.1 的keep alive只是能够多次http请求复用同一个tcp连接，但只能由客户端发起请求。","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1584086815,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":140844,"user_name":"来自清真寺的圣诞树","can_delete":false,"product_type":"c1","uid":1537219,"ip_address":"","ucode":"184248ABB77DF6","user_header":"https://static001.geekbang.org/account/avatar/00/17/74/c3/5c3d7a4d.jpg","comment_is_top":false,"comment_ctime":1571058274,"is_pvip":false,"replies":[{"id":"54729","content":"有这么玩的，STOMP Over Websocket，可以基于STOMP的消息队列模式来实现消息推送。","user_name":"作者回复","user_name_real":"coldwalker","uid":"1297490","ctime":1571224203,"ip_address":"","comment_id":140844,"utype":1}],"discussion_count":1,"race_medal":0,"score":"18750927458","product_id":100034901,"comment_content":"如果是websocket可以使用stomp协议解决？","like_count":4,"discussions":[{"author":{"id":1297490,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/DYAIOgq83epK1zyWib7IKYCoRSxIa6dDjrcyBqObGfj1lDVia1pOrSVxyltKI7RfGekdXPQNObwaBQg3gwvarlQA/132","nickname":"coldwalker","note":"","ucode":"AF9AF257A745C9","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":470588,"discussion_content":"有这么玩的，STOMP Over Websocket，可以基于STOMP的消息队列模式来实现消息推送。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1571224203,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":130203,"user_name":"冷笑的花猫","can_delete":false,"product_type":"c1","uid":1119029,"ip_address":"","ucode":"6C368FBB577470","user_header":"https://static001.geekbang.org/account/avatar/00/11/13/35/45391914.jpg","comment_is_top":false,"comment_ctime":1567402554,"is_pvip":false,"replies":[{"id":"48622","content":"基于mqtt做二次开发是可以的呀，而且目前也有很多公司已经是这么做的了。只是说有开发能力的大厂更愿意自己来实现一套私有协议，主要是完全根据业务定制化，协议设计上会更高效一些。","user_name":"作者回复","user_name_real":"coldwalker","uid":"1297490","ctime":1567425279,"ip_address":"","comment_id":130203,"utype":1}],"discussion_count":1,"race_medal":0,"score":"18747271738","product_id":100034901,"comment_content":"请问老师，假设mqtt有两个缺点，不支持离线和群组功能，但可以修改源码增加这两类功能，而且mqtt已基本成熟，在mqtt之上开发不更方便和快捷吗？为啥要在tcp基础上自己开发呢？如果仅仅因为这些选择了了基于tcp自己开发，感觉说服力没那么强啊。<br>所以请老师能详细说下这些的优缺点吗？晚上搜索到的感觉不太靠谱，谢谢。","like_count":5,"discussions":[{"author":{"id":1297490,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/DYAIOgq83epK1zyWib7IKYCoRSxIa6dDjrcyBqObGfj1lDVia1pOrSVxyltKI7RfGekdXPQNObwaBQg3gwvarlQA/132","nickname":"coldwalker","note":"","ucode":"AF9AF257A745C9","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":465854,"discussion_content":"基于mqtt做二次开发是可以的呀，而且目前也有很多公司已经是这么做的了。只是说有开发能力的大厂更愿意自己来实现一套私有协议，主要是完全根据业务定制化，协议设计上会更高效一些。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1567425279,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":130149,"user_name":"Shuai","can_delete":false,"product_type":"c1","uid":1642766,"ip_address":"","ucode":"BE705668C66225","user_header":"https://static001.geekbang.org/account/avatar/00/19/11/0e/23d6a88f.jpg","comment_is_top":false,"comment_ctime":1567391533,"is_pvip":false,"replies":[{"id":"48616","content":"据我了解微信是私有二进制协议。","user_name":"作者回复","user_name_real":"coldwalker","uid":"1297490","ctime":1567424727,"ip_address":"","comment_id":130149,"utype":1}],"discussion_count":1,"race_medal":0,"score":"18747260717","product_id":100034901,"comment_content":"请问，XMPP是基于 XML 格式的协议，那像微信这种成熟的IM软件的私有通信协议是基于什么格式的呢？二进制吗？","like_count":4,"discussions":[{"author":{"id":1297490,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/DYAIOgq83epK1zyWib7IKYCoRSxIa6dDjrcyBqObGfj1lDVia1pOrSVxyltKI7RfGekdXPQNObwaBQg3gwvarlQA/132","nickname":"coldwalker","note":"","ucode":"AF9AF257A745C9","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":465835,"discussion_content":"据我了解微信是私有二进制协议。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1567424727,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":130063,"user_name":"Geek_发现","can_delete":false,"product_type":"c1","uid":1643741,"ip_address":"","ucode":"39C23F2D574A09","user_header":"https://static001.geekbang.org/account/avatar/00/19/14/dd/17892edc.jpg","comment_is_top":false,"comment_ctime":1567381294,"is_pvip":false,"replies":[{"id":"48593","content":"嗯，ack机制是确保消息被正确接收了，下节课会讲到哈","user_name":"作者回复","user_name_real":"coldwalker","uid":"1297490","ctime":1567420571,"ip_address":"","comment_id":130063,"utype":1}],"discussion_count":3,"race_medal":0,"score":"18747250478","product_id":100034901,"comment_content":"说一下我的猜想吧:不管是websocket全双工还是tcp有状态链接，都是应用了ack机制，用户访问服务器，ack会保存用户的信息，服务器收到ack后会开辟一块专有内存来保存所有的客户的ack信息；同理，服务器发送信息至客户，客户端也会保存服务器的ack信息。<br>总的来说，客户端和服务器应该都是采用异步方式来提升效率和客户体验，并且降低服务器连接压力","like_count":4,"discussions":[{"author":{"id":1297490,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/DYAIOgq83epK1zyWib7IKYCoRSxIa6dDjrcyBqObGfj1lDVia1pOrSVxyltKI7RfGekdXPQNObwaBQg3gwvarlQA/132","nickname":"coldwalker","note":"","ucode":"AF9AF257A745C9","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":465784,"discussion_content":"嗯，ack机制是确保消息被正确接收了，下节课会讲到哈","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1567420571,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1643741,"avatar":"https://static001.geekbang.org/account/avatar/00/19/14/dd/17892edc.jpg","nickname":"Geek_发现","note":"","ucode":"39C23F2D574A09","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":7239,"discussion_content":"ack是一种机制，不是实现。tcp三次握手实际上也是应用了ack机制。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1567426948,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1642890,"avatar":"https://static001.geekbang.org/account/avatar/00/19/11/8a/65a7a63d.jpg","nickname":"菜菜菜菜菜鸟","note":"","ucode":"C6A2018F4E8772","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":7235,"discussion_content":"TCP不是可靠的吗，为什么还需要在应用层实现ack","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1567426786,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":141513,"user_name":"lecy_L","can_delete":false,"product_type":"c1","uid":1127659,"ip_address":"","ucode":"7C96DDBB3D1F7E","user_header":"https://static001.geekbang.org/account/avatar/00/11/34/eb/d00aedb0.jpg","comment_is_top":false,"comment_ctime":1571187187,"is_pvip":false,"replies":[{"id":"54744","content":"这个实现也比较简单，用户上线的时候把用户和连接的网关ip作为映射存在中央存储，然后消息推送时读取这个映射，查询待推送消息的接收人所在的网关机，再通过rpc方式把这条消息发给这台网关机就可以了。","user_name":"作者回复","user_name_real":"coldwalker","uid":"1297490","ctime":1571226312,"ip_address":"","comment_id":141513,"utype":1}],"discussion_count":1,"race_medal":0,"score":"14456089075","product_id":100034901,"comment_content":"老师你好，请问如果维护一个全局在线状态的情况下，精确定位通知的方案怎么做呢？","like_count":4,"discussions":[{"author":{"id":1297490,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/DYAIOgq83epK1zyWib7IKYCoRSxIa6dDjrcyBqObGfj1lDVia1pOrSVxyltKI7RfGekdXPQNObwaBQg3gwvarlQA/132","nickname":"coldwalker","note":"","ucode":"AF9AF257A745C9","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":470779,"discussion_content":"这个实现也比较简单，用户上线的时候把用户和连接的网关ip作为映射存在中央存储，然后消息推送时读取这个映射，查询待推送消息的接收人所在的网关机，再通过rpc方式把这条消息发给这台网关机就可以了。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1571226312,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":135892,"user_name":"devil","can_delete":false,"product_type":"c1","uid":1259625,"ip_address":"","ucode":"BB6090411BAA23","user_header":"https://static001.geekbang.org/account/avatar/00/13/38/69/864569a4.jpg","comment_is_top":false,"comment_ctime":1569293380,"is_pvip":false,"replies":[{"id":"52222","content":"tcp连接的维护并不是一个耗资源的事情，只是占用一个句柄而已，没有消息传输时基本不怎么费资源，真正有压力的是连接上消息的下推。除了加机器，还可以通过优化系统参数等来提升单机的承载能力。","user_name":"作者回复","user_name_real":"coldwalker","uid":"1297490","ctime":1569410778,"ip_address":"","comment_id":135892,"utype":1}],"discussion_count":1,"race_medal":0,"score":"10159227972","product_id":100034901,"comment_content":"海量用户场景如QQ，微信，除了加机器以外，还有些什么方式可以处理海量的tcp连接吗？","like_count":3,"discussions":[{"author":{"id":1297490,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/DYAIOgq83epK1zyWib7IKYCoRSxIa6dDjrcyBqObGfj1lDVia1pOrSVxyltKI7RfGekdXPQNObwaBQg3gwvarlQA/132","nickname":"coldwalker","note":"","ucode":"AF9AF257A745C9","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":468370,"discussion_content":"tcp连接的维护并不是一个耗资源的事情，只是占用一个句柄而已，没有消息传输时基本不怎么费资源，真正有压力的是连接上消息的下推。除了加机器，还可以通过优化系统参数等来提升单机的承载能力。","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1569410778,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":130391,"user_name":"魔曦","can_delete":false,"product_type":"c1","uid":1045408,"ip_address":"","ucode":"87BA5EC5B0BC42","user_header":"https://static001.geekbang.org/account/avatar/00/0f/f3/a0/a693e561.jpg","comment_is_top":false,"comment_ctime":1567440282,"is_pvip":false,"replies":[{"id":"48936","content":"普通一对一场景消息扇出小，一般网关服务器没啥压力。大型直播间可能会有你刚才说的情况，这种情况可以通过扩容，限流，熔断来解决。单台服务器如果只是挂连接的话几百万上千万都没问题哈，但对于线上实际业务一般都不会真挂这么多，一般单机实际会控制在100w以内。","user_name":"作者回复","user_name_real":"coldwalker","uid":"1297490","ctime":1567519482,"ip_address":"","comment_id":130391,"utype":1}],"discussion_count":3,"race_medal":0,"score":"10157374874","product_id":100034901,"comment_content":"有新的消息是全部推送给客户端吗？那么瞬间服务器压力飙高？如何解决？每个服务器能维护多少长链接？如果数量有限那么微博抖音需要多大的集群支撑？","like_count":3,"discussions":[{"author":{"id":1297490,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/DYAIOgq83epK1zyWib7IKYCoRSxIa6dDjrcyBqObGfj1lDVia1pOrSVxyltKI7RfGekdXPQNObwaBQg3gwvarlQA/132","nickname":"coldwalker","note":"","ucode":"AF9AF257A745C9","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":465936,"discussion_content":"普通一对一场景消息扇出小，一般网关服务器没啥压力。大型直播间可能会有你刚才说的情况，这种情况可以通过扩容，限流，熔断来解决。单台服务器如果只是挂连接的话几百万上千万都没问题哈，但对于线上实际业务一般都不会真挂这么多，一般单机实际会控制在100w以内。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1567519482,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1134529,"avatar":"https://static001.geekbang.org/account/avatar/00/11/4f/c1/1872249a.jpg","nickname":"Alfred","note":"","ucode":"AE80D51772FAE5","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":377313,"discussion_content":"“但对于线上实际业务一般都不会真挂这么多，一般单机实际会控制在100w以内。“ 对应的服务器是啥配置","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1622599616,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1439908,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/IPdZZXuHVMibwfZWmm7NiawzeEFGsaRoWjhuN99iaoj5amcRkiaOePo6rH1KJ3jictmNlic4OibkF4I20vOGfwDqcBxfA/132","nickname":"鱼向北游","note":"","ucode":"580EC7DCE57E9A","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":41375,"discussion_content":"大型直播要限流了。。因为瓶颈往往不是再服务器。。。一下子推那么多消息，客户端首先扛不住。。。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1572413427,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":130110,"user_name":"云师兄","can_delete":false,"product_type":"c1","uid":1010459,"ip_address":"","ucode":"4475AF1598FBFD","user_header":"https://static001.geekbang.org/account/avatar/00/0f/6b/1b/4b397b80.jpg","comment_is_top":false,"comment_ctime":1567387195,"is_pvip":false,"replies":[{"id":"48605","content":"可以是无状态的，一种做法是用户上线时维护一个全局的 uid-&gt;网关机 的映射，下发的时候就能做到精确定位；另一种方式是：下发时把所有消息下发给所有机器，每台机器如果发现当前用户连接在本机就下发，其他的就丢掉，这种会有一定的资源浪费。","user_name":"作者回复","user_name_real":"coldwalker","uid":"1297490","ctime":1567423887,"ip_address":"","comment_id":130110,"utype":1}],"discussion_count":1,"race_medal":0,"score":"10157321787","product_id":100034901,"comment_content":"多终端场景下，用户维度上的应该是一个socket列表。网关接入层是否是有状态的？在进行推送时候需要定位到某台机器？多终端要定位多台机器？","like_count":2,"discussions":[{"author":{"id":1297490,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/DYAIOgq83epK1zyWib7IKYCoRSxIa6dDjrcyBqObGfj1lDVia1pOrSVxyltKI7RfGekdXPQNObwaBQg3gwvarlQA/132","nickname":"coldwalker","note":"","ucode":"AF9AF257A745C9","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":465811,"discussion_content":"可以是无状态的，一种做法是用户上线时维护一个全局的 uid-&amp;gt;网关机 的映射，下发的时候就能做到精确定位；另一种方式是：下发时把所有消息下发给所有机器，每台机器如果发现当前用户连接在本机就下发，其他的就丢掉，这种会有一定的资源浪费。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1567423887,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":222901,"user_name":"`","can_delete":false,"product_type":"c1","uid":1556919,"ip_address":"","ucode":"BBE7BE85F22CEE","user_header":"https://static001.geekbang.org/account/avatar/00/17/c1/b7/e638e5a7.jpg","comment_is_top":false,"comment_ctime":1590947450,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"5885914746","product_id":100034901,"comment_content":"袁老师，想请教一个关于长链接的问题。在实际应用场景中，可能出现由于网络不稳定，导致用户短暂掉线的情况（比如一秒钟的WIFI掉线）， 那么当用户重新上线以后，需要重新建立长链接吗？另外，在实际应用场景中，用户短暂掉线的情况普遍吗？（没有做过IM，所以缺乏相关数据）","like_count":1},{"had_liked":false,"id":188306,"user_name":"骆","can_delete":false,"product_type":"c1","uid":1905478,"ip_address":"","ucode":"47A83F69657F6A","user_header":"https://static001.geekbang.org/account/avatar/00/1d/13/46/8bd0cb14.jpg","comment_is_top":false,"comment_ctime":1584338008,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"5879305304","product_id":100034901,"comment_content":"&quot;当有消息需要发送给某个用户时，能够准确找到这个用户对应的网络连接&quot;<br>当建立tcp连接之后，服务器端会保存用户设备user_id + device_id和tcp连接的对应关系。当有消息产生的时候，先从缓存中根据用户user_id查找active的tcp连接，再将消息推送给相应的device。这样的理解是对的吗？","like_count":1},{"had_liked":false,"id":161311,"user_name":"海罗沃德","can_delete":false,"product_type":"c1","uid":1165364,"ip_address":"","ucode":"8704F1D6980FA0","user_header":"https://static001.geekbang.org/account/avatar/00/11/c8/34/fb871b2c.jpg","comment_is_top":false,"comment_ctime":1576179052,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"5871146348","product_id":100034901,"comment_content":"李玥老師的消息對列高手課裡有一講專門說MQTT協議的，這個協議廣泛使用在IoT領域中","like_count":1},{"had_liked":false,"id":150254,"user_name":"大土豆","can_delete":false,"product_type":"c1","uid":1121636,"ip_address":"","ucode":"67445DC3EC9DB0","user_header":"https://static001.geekbang.org/account/avatar/00/11/1d/64/52a5863b.jpg","comment_is_top":false,"comment_ctime":1573485273,"is_pvip":true,"replies":[{"id":"57913","content":"也是可以的哈，考虑到web端很多浏览器都原生支持websocket协议，实现上更简单，而且web端对于流量相对没有那么敏感，所以web端更多的可以考虑websocket。","user_name":"作者回复","user_name_real":"coldwalker","uid":"1297490","ctime":1573563800,"ip_address":"","comment_id":150254,"utype":1}],"discussion_count":1,"race_medal":0,"score":"5868452569","product_id":100034901,"comment_content":"一直有一个疑问，为什么web端不能像客户端一样，用tcp呢","like_count":1,"discussions":[{"author":{"id":1297490,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/DYAIOgq83epK1zyWib7IKYCoRSxIa6dDjrcyBqObGfj1lDVia1pOrSVxyltKI7RfGekdXPQNObwaBQg3gwvarlQA/132","nickname":"coldwalker","note":"","ucode":"AF9AF257A745C9","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":474107,"discussion_content":"也是可以的哈，考虑到web端很多浏览器都原生支持websocket协议，实现上更简单，而且web端对于流量相对没有那么敏感，所以web端更多的可以考虑websocket。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1573563800,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":147177,"user_name":"唯我天棋","can_delete":false,"product_type":"c1","uid":1015960,"ip_address":"","ucode":"B925246C92727A","user_header":"https://static001.geekbang.org/account/avatar/00/0f/80/98/5591d99d.jpg","comment_is_top":false,"comment_ctime":1572832874,"is_pvip":true,"replies":[{"id":"57197","content":"嗯，连接服务唯一标识和connid可以整合一下。","user_name":"作者回复","user_name_real":"coldwalker","uid":"1297490","ctime":1573034917,"ip_address":"","comment_id":147177,"utype":1}],"discussion_count":1,"race_medal":0,"score":"5867800170","product_id":100034901,"comment_content":"TCP 长连接的方式是怎么实现“当有消息需要发送给某个用户时，能够准确找到这个用户对应的网络连接”？<br><br>会在连接服务器维护一个用户id到连接id映射关系。<br>在分布式场景下，需要维护用户id到 连接服务唯一标识 + connid","like_count":1,"discussions":[{"author":{"id":1297490,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/DYAIOgq83epK1zyWib7IKYCoRSxIa6dDjrcyBqObGfj1lDVia1pOrSVxyltKI7RfGekdXPQNObwaBQg3gwvarlQA/132","nickname":"coldwalker","note":"","ucode":"AF9AF257A745C9","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":473180,"discussion_content":"嗯，连接服务唯一标识和connid可以整合一下。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1573034917,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":145136,"user_name":"ly","can_delete":false,"product_type":"c1","uid":1221628,"ip_address":"","ucode":"5E2B85252DABF3","user_header":"https://static001.geekbang.org/account/avatar/00/12/a3/fc/379387a4.jpg","comment_is_top":false,"comment_ctime":1572222965,"is_pvip":false,"replies":[{"id":"56362","content":"可以看一下我课程中有介绍消息表的设计。","user_name":"作者回复","user_name_real":"coldwalker","uid":"1297490","ctime":1572437932,"ip_address":"","comment_id":145136,"utype":1}],"discussion_count":1,"race_medal":0,"score":"5867190261","product_id":100034901,"comment_content":"在IM领域，我一直非常好奇微信、微博这些社交类软件的表设计，例如朋友关系、明星发微博等。不知道这些数据表如何设计的。","like_count":1,"discussions":[{"author":{"id":1297490,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/DYAIOgq83epK1zyWib7IKYCoRSxIa6dDjrcyBqObGfj1lDVia1pOrSVxyltKI7RfGekdXPQNObwaBQg3gwvarlQA/132","nickname":"coldwalker","note":"","ucode":"AF9AF257A745C9","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":472260,"discussion_content":"可以看一下我课程中有介绍消息表的设计。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1572437932,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":135276,"user_name":"张磊","can_delete":false,"product_type":"c1","uid":1657620,"ip_address":"","ucode":"1E9A80B7B9C131","user_header":"https://static001.geekbang.org/account/avatar/00/19/4b/14/1494bb21.jpg","comment_is_top":false,"comment_ctime":1569116402,"is_pvip":false,"replies":[{"id":"52012","content":"没问题的~","user_name":"作者回复","user_name_real":"coldwalker","uid":"1297490","ctime":1569236823,"ip_address":"","comment_id":135276,"utype":1}],"discussion_count":1,"race_medal":0,"score":"5864083698","product_id":100034901,"comment_content":"如果同时需要支持移动APP和Web端，选用websocket协议是否可以？","like_count":1,"discussions":[{"author":{"id":1297490,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/DYAIOgq83epK1zyWib7IKYCoRSxIa6dDjrcyBqObGfj1lDVia1pOrSVxyltKI7RfGekdXPQNObwaBQg3gwvarlQA/132","nickname":"coldwalker","note":"","ucode":"AF9AF257A745C9","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":468122,"discussion_content":"没问题的~","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1569236823,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":131404,"user_name":"飘洋过海的鱼","can_delete":false,"product_type":"c1","uid":1039542,"ip_address":"","ucode":"8812E7F91C6FA1","user_header":"https://static001.geekbang.org/account/avatar/00/0f/dc/b6/01e0a253.jpg","comment_is_top":false,"comment_ctime":1567740406,"is_pvip":false,"replies":[{"id":"49872","content":"这种目前也没有太好的办法：一个是加入“保活联盟”类似的组织通过app间的互相拉起来提升；另外就是通过多个第三方系统推送sdk来提升系统push的到达率。","user_name":"作者回复","user_name_real":"coldwalker","uid":"1297490","ctime":1567770145,"ip_address":"","comment_id":131404,"utype":1}],"discussion_count":1,"race_medal":0,"score":"5862707702","product_id":100034901,"comment_content":"抛开使用通讯协议本身，现在面临的一个挑战是Android程序保活。现在国内Android手机的系统都是各大厂商自己定制修改的。为了保证使用电量，杀程序，杀后台服务情况严重，包括一些第三方的推送也会被杀死。这样消息的及时推送就是一个很大的问题。请问有什么好的应对策略么？","like_count":2,"discussions":[{"author":{"id":1297490,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/DYAIOgq83epK1zyWib7IKYCoRSxIa6dDjrcyBqObGfj1lDVia1pOrSVxyltKI7RfGekdXPQNObwaBQg3gwvarlQA/132","nickname":"coldwalker","note":"","ucode":"AF9AF257A745C9","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":466435,"discussion_content":"这种目前也没有太好的办法：一个是加入“保活联盟”类似的组织通过app间的互相拉起来提升；另外就是通过多个第三方系统推送sdk来提升系统push的到达率。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1567770145,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":131044,"user_name":"Csquare","can_delete":false,"product_type":"c1","uid":1137203,"ip_address":"","ucode":"23CAC353A82D1D","user_header":"https://static001.geekbang.org/account/avatar/00/11/5a/33/9a66d0b8.jpg","comment_is_top":false,"comment_ctime":1567607672,"is_pvip":false,"replies":[{"id":"49533","content":"那还是websocket更好一些，很多浏览器默认就支持了呀。。。","user_name":"作者回复","user_name_real":"coldwalker","uid":"1297490","ctime":1567683551,"ip_address":"","comment_id":131044,"utype":1}],"discussion_count":1,"race_medal":0,"score":"5862574968","product_id":100034901,"comment_content":"如果产品只有Web端，TCP 长连接和WebSocket相比，还有别的优势么？","like_count":1,"discussions":[{"author":{"id":1297490,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/DYAIOgq83epK1zyWib7IKYCoRSxIa6dDjrcyBqObGfj1lDVia1pOrSVxyltKI7RfGekdXPQNObwaBQg3gwvarlQA/132","nickname":"coldwalker","note":"","ucode":"AF9AF257A745C9","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":466263,"discussion_content":"那还是websocket更好一些，很多浏览器默认就支持了呀。。。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1567683551,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":130720,"user_name":"瞬间","can_delete":false,"product_type":"c1","uid":1161939,"ip_address":"","ucode":"3F9BFC4AEF134E","user_header":"https://static001.geekbang.org/account/avatar/00/11/ba/d3/dd25a96f.jpg","comment_is_top":false,"comment_ctime":1567519031,"is_pvip":false,"replies":[{"id":"48947","content":"一般只需要衡量服务端内部消息流转的延时就可以，标准这一块貌似没听到过有公开的。服务端内部耗时优化就不说了，到公网传输的耗时可以考虑：1. 多线接入，选择最优路径。2. 优化传输的包大小，比如协议精简，压缩等。","user_name":"作者回复","user_name_real":"coldwalker","uid":"1297490","ctime":1567521695,"ip_address":"","comment_id":130720,"utype":1}],"discussion_count":1,"race_medal":0,"score":"5862486327","product_id":100034901,"comment_content":"有两个问题想请教一下<br>1.及时率的统计方案是什么样的呢？业界各个的及时率大概是什么样的标准？<br>2.从移动客户端的角度如果想优化及时率的话，有什么切入点可以分享么？<br>多谢！","like_count":1,"discussions":[{"author":{"id":1297490,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/DYAIOgq83epK1zyWib7IKYCoRSxIa6dDjrcyBqObGfj1lDVia1pOrSVxyltKI7RfGekdXPQNObwaBQg3gwvarlQA/132","nickname":"coldwalker","note":"","ucode":"AF9AF257A745C9","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":466087,"discussion_content":"一般只需要衡量服务端内部消息流转的延时就可以，标准这一块貌似没听到过有公开的。服务端内部耗时优化就不说了，到公网传输的耗时可以考虑：1. 多线接入，选择最优路径。2. 优化传输的包大小，比如协议精简，压缩等。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1567521695,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":130298,"user_name":"asdf100","can_delete":false,"product_type":"c1","uid":1043738,"ip_address":"","ucode":"39D8D71453E575","user_header":"https://static001.geekbang.org/account/avatar/00/0f/ed/1a/ce7f7d54.jpg","comment_is_top":false,"comment_ctime":1567420036,"is_pvip":false,"replies":[{"id":"48629","content":"防止客户端的连接伪造是比较困难的哈，比如你的app源代码泄露了，稍微改一改就能仿冒APP连接上来。这种情况可以考虑采用人机验证（比如极验，比如手机验证码）来排除“机器行为”，更极端的可以采取网银的方式，通过客户端插入的U盾来提供真实访问的验证。","user_name":"作者回复","user_name_real":"coldwalker","uid":"1297490","ctime":1567425854,"ip_address":"","comment_id":130298,"utype":1}],"discussion_count":4,"race_medal":0,"score":"5862387332","product_id":100034901,"comment_content":"对于连接安全如何搞，如只允许合法的websocket连接到服务器，不允许非法的连接。目前我们是在连接的时候传递一个加密串，在服务器进行解密，不知道是否可行？","like_count":1,"discussions":[{"author":{"id":1297490,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/DYAIOgq83epK1zyWib7IKYCoRSxIa6dDjrcyBqObGfj1lDVia1pOrSVxyltKI7RfGekdXPQNObwaBQg3gwvarlQA/132","nickname":"coldwalker","note":"","ucode":"AF9AF257A745C9","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":465895,"discussion_content":"防止客户端的连接伪造是比较困难的哈，比如你的app源代码泄露了，稍微改一改就能仿冒APP连接上来。这种情况可以考虑采用人机验证（比如极验，比如手机验证码）来排除“机器行为”，更极端的可以采取网银的方式，通过客户端插入的U盾来提供真实访问的验证。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1567425854,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1027781,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/ae/c5/09c2dd48.jpg","nickname":"M$画像","note":"","ucode":"B7298F0CC7ADC8","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":7234,"discussion_content":"手打此问题评论两百字，结果没评论上也没报错。。。伤心了","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1567426682,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1111899,"avatar":"https://static001.geekbang.org/account/avatar/00/10/f7/5b/d2e7c2c4.jpg","nickname":"时隐时现","note":"","ucode":"DA4D622FF84920","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":580048,"discussion_content":"&#34;在连接的时候传递一个加密串，在服务器进行解密&#34; 采用非对称加密吗","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1657850125,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":1,"child_discussions":[{"author":{"id":1043738,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/ed/1a/ce7f7d54.jpg","nickname":"asdf100","note":"","ucode":"39D8D71453E575","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1111899,"avatar":"https://static001.geekbang.org/account/avatar/00/10/f7/5b/d2e7c2c4.jpg","nickname":"时隐时现","note":"","ucode":"DA4D622FF84920","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":581103,"discussion_content":"对称加密算法","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1658497920,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":580048,"ip_address":""},"score":581103,"extra":""}]}]},{"had_liked":false,"id":130183,"user_name":"滚滚","can_delete":false,"product_type":"c1","uid":1260703,"ip_address":"","ucode":"C3751164A1470B","user_header":"https://static001.geekbang.org/account/avatar/00/13/3c/9f/b5857fcb.jpg","comment_is_top":false,"comment_ctime":1567398465,"is_pvip":false,"replies":[{"id":"48618","content":"消息的可靠性可以通过应用层实现的类似tcp的ack机制来让消息接收方收到后”确认“给IM服务器。","user_name":"作者回复","user_name_real":"coldwalker","uid":"1297490","ctime":1567425075,"ip_address":"","comment_id":130183,"utype":1}],"discussion_count":5,"race_medal":0,"score":"5862365761","product_id":100034901,"comment_content":"老师，websocket长连接，服务端推消息给客户端，怎么样确保消息到达了？就是有回调函数吗？","like_count":2,"discussions":[{"author":{"id":1297490,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/DYAIOgq83epK1zyWib7IKYCoRSxIa6dDjrcyBqObGfj1lDVia1pOrSVxyltKI7RfGekdXPQNObwaBQg3gwvarlQA/132","nickname":"coldwalker","note":"","ucode":"AF9AF257A745C9","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":465846,"discussion_content":"消息的可靠性可以通过应用层实现的类似tcp的ack机制来让消息接收方收到后”确认“给IM服务器。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1567425075,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1642890,"avatar":"https://static001.geekbang.org/account/avatar/00/19/11/8a/65a7a63d.jpg","nickname":"菜菜菜菜菜鸟","note":"","ucode":"C6A2018F4E8772","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":7238,"discussion_content":"TCP不是可靠的吗，不应该是消息发出就一定会接收到吗","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1567426841,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1337944,"avatar":"https://static001.geekbang.org/account/avatar/00/14/6a/58/f2c6d65b.jpg","nickname":"王棕生","note":"","ucode":"901BD0447A871E","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":7154,"discussion_content":"确保消息到达客户端，必须由客户端发送一条ack消息才可以.....回调函数仅仅是语言层面，表示消息已经写入到本地tcp发送缓存区了，对方有没有收到，不一定。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1567405325,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":2,"child_discussions":[{"author":{"id":1642890,"avatar":"https://static001.geekbang.org/account/avatar/00/19/11/8a/65a7a63d.jpg","nickname":"菜菜菜菜菜鸟","note":"","ucode":"C6A2018F4E8772","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1337944,"avatar":"https://static001.geekbang.org/account/avatar/00/14/6a/58/f2c6d65b.jpg","nickname":"王棕生","note":"","ucode":"901BD0447A871E","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":7237,"discussion_content":"TCP不是可靠的吗，为什么还需要在应用层实现ack","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1567426816,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":7154,"ip_address":""},"score":7237,"extra":""},{"author":{"id":1027781,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/ae/c5/09c2dd48.jpg","nickname":"M$画像","note":"","ucode":"B7298F0CC7ADC8","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":1642890,"avatar":"https://static001.geekbang.org/account/avatar/00/19/11/8a/65a7a63d.jpg","nickname":"菜菜菜菜菜鸟","note":"","ucode":"C6A2018F4E8772","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":7240,"discussion_content":"他说的是对的，应用层ack解决。tcp的可靠不是你理解的那样，比如发送过程中我把你网线都拔了，你可靠给我看。所以没有收到ack前，服务端不要设置状态为已接收，转离线消息的逻辑。用户再次上线通过seq拉取离线消息。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1567427034,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":7237,"ip_address":""},"score":7240,"extra":""}]}]},{"had_liked":false,"id":130100,"user_name":"川杰","can_delete":false,"product_type":"c1","uid":1099750,"ip_address":"","ucode":"815211E1D698E6","user_header":"https://static001.geekbang.org/account/avatar/00/10/c7/e6/11f21cb4.jpg","comment_is_top":false,"comment_ctime":1567386298,"is_pvip":false,"replies":[{"id":"48603","content":"1. 映射关系需要服务端存储，有一定的资源开销。<br>2. 和html没关系哈，微服务里面的rpc调用也是可以通过tcp长连实现，不一定需要队列。","user_name":"作者回复","user_name_real":"coldwalker","uid":"1297490","ctime":1567423764,"ip_address":"","comment_id":130100,"utype":1}],"discussion_count":7,"race_medal":0,"score":"5862353594","product_id":100034901,"comment_content":"老师您好，请教两个问题：<br>1、客户端和服务端只需要完成一次握手，就可以创建持久的长连接，并进行随时的双向数据传输；如果是这样的话，那是不是意味着需要服务器资源去存储这个长连接，那当客户端很多的情况下，服务器资源会不会被大量消耗。<br>2、在一些不是html的场景下，如微服务中消息推送，是不是还是只能通过消息队列等方式发送消息？","like_count":1,"discussions":[{"author":{"id":1297490,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/DYAIOgq83epK1zyWib7IKYCoRSxIa6dDjrcyBqObGfj1lDVia1pOrSVxyltKI7RfGekdXPQNObwaBQg3gwvarlQA/132","nickname":"coldwalker","note":"","ucode":"AF9AF257A745C9","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":465804,"discussion_content":"1. 映射关系需要服务端存储，有一定的资源开销。\n2. 和html没关系哈，微服务里面的rpc调用也是可以通过tcp长连实现，不一定需要队列。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1567423764,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1027781,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/ae/c5/09c2dd48.jpg","nickname":"M$画像","note":"","ucode":"B7298F0CC7ADC8","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":7228,"discussion_content":"王同学的回答很赞，补充一下单纯tcp长连接并不会占用太多资源。比如单机一个进程中，你要提供10万个长连接没什么问题。今天刚刚测试，一个springboot启动的netty服务端，本机另外一个进程使用一个线程启动10000个客户端，由于时间匆忙忘记看建立这10000个长连接两个进程各自增长了多少内存。两个进程都是小几百兆。但是如果你的线程模型选择一个连接一个线程就非常占用资源。","likes_number":2,"is_delete":false,"is_hidden":false,"ctime":1567425916,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":3,"child_discussions":[{"author":{"id":1099750,"avatar":"https://static001.geekbang.org/account/avatar/00/10/c7/e6/11f21cb4.jpg","nickname":"川杰","note":"","ucode":"815211E1D698E6","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1027781,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/ae/c5/09c2dd48.jpg","nickname":"M$画像","note":"","ucode":"B7298F0CC7ADC8","race_medal":0,"user_type":1,"is_pvip":true},"discussion":{"id":7248,"discussion_content":"请问tcp的长连接是websocket吗？","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1567428506,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":7228,"ip_address":""},"score":7248,"extra":""},{"author":{"id":1027781,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/ae/c5/09c2dd48.jpg","nickname":"M$画像","note":"","ucode":"B7298F0CC7ADC8","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":1099750,"avatar":"https://static001.geekbang.org/account/avatar/00/10/c7/e6/11f21cb4.jpg","nickname":"川杰","note":"","ucode":"815211E1D698E6","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":7253,"discussion_content":"嗯，我用的是websocket ","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1567430998,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":7248,"ip_address":""},"score":7253,"extra":""},{"author":{"id":1099750,"avatar":"https://static001.geekbang.org/account/avatar/00/10/c7/e6/11f21cb4.jpg","nickname":"川杰","note":"","ucode":"815211E1D698E6","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1027781,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/ae/c5/09c2dd48.jpg","nickname":"M$画像","note":"","ucode":"B7298F0CC7ADC8","race_medal":0,"user_type":1,"is_pvip":true},"discussion":{"id":7257,"discussion_content":"谢谢你的帮助","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1567433731,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":7253,"ip_address":""},"score":7257,"extra":""}]},{"author":{"id":1337944,"avatar":"https://static001.geekbang.org/account/avatar/00/14/6a/58/f2c6d65b.jpg","nickname":"王棕生","note":"","ucode":"901BD0447A871E","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":7143,"discussion_content":"第一个问题：  客户端很多的情况下，肯定会消耗服务器端大量的资源，所以这个时候就要做好压测和评估； 量大后，一般都是采用分布式解决方案，用多台机器去抗tcp连接的压力。\n第二个问题： 微服务架构中，服务之间的交互有两种： RPC和MQ， 一般如果需要其返回值的用户RPC，否则用MQ。 RPC的实现方式有很多种，一般都是基于TCP协议或是http协议的； 如果系统有解耦、异步需求或是抗流量高峰的，会选用MQ方式。","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1567401785,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1088169,"avatar":"https://static001.geekbang.org/account/avatar/00/10/9a/a9/ae10f6cd.jpg","nickname":"影随","note":"","ucode":"48BC4CFCAD3C2F","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":8559,"discussion_content":"有个疑问，这边提到的长链接连接的建立过程只需要一次握手，这里的长链接也是基于 tcp协议的吧？  那tcp协议的连接不是要三次握手吗？  ","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1568017363,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":304277,"user_name":"Jialin","can_delete":false,"product_type":"c1","uid":1112955,"ip_address":"","ucode":"12583269732A75","user_header":"https://static001.geekbang.org/account/avatar/00/10/fb/7b/2d4b38fb.jpg","comment_is_top":false,"comment_ctime":1627311757,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1627311757","product_id":100034901,"comment_content":"有点像配置中心","like_count":0},{"had_liked":false,"id":280407,"user_name":"Geek_821c96","can_delete":false,"product_type":"c1","uid":1092407,"ip_address":"","ucode":"B07B528F2E12C6","user_header":"https://static001.geekbang.org/account/avatar/00/10/ab/37/455d6a8d.jpg","comment_is_top":false,"comment_ctime":1614180245,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1614180245","product_id":100034901,"comment_content":"您好，老师。我现在有个系统做了个websocket,期间遇到了个问题您帮忙看有没有更好的方案。服务端订阅拨打电话的事件消息并将此消息通过websocket推送到web客户端，期间有个问题服务端的消费消息的策略策略是轮询的，这导致部分消息没有落到与客户端建立链接的那台服务端机器，导致消息丢失。<br>我的解决方案是消息消费变成广播模式，每个服务端都会收到拨打电话的事件消息，但是只有与客户端建立websocket通道的才推送。","like_count":0},{"had_liked":false,"id":257709,"user_name":"梨还羽","can_delete":false,"product_type":"c1","uid":1243267,"ip_address":"","ucode":"F6C89EF10DFC89","user_header":"https://static001.geekbang.org/account/avatar/00/12/f8/83/008b7b58.jpg","comment_is_top":false,"comment_ctime":1604071839,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1604071839","product_id":100034901,"comment_content":"TCP长连接本质上是在客户端和服务器端各自维护一个成对的传输层Socket，Socket由dip, sip, dport, sport, protocol五元组唯一标识，在服务器端把用户uid和socket相关联，就可以把消息精准发给对应用户","like_count":0},{"had_liked":false,"id":243593,"user_name":"Niud","can_delete":false,"product_type":"c1","uid":1573367,"ip_address":"","ucode":"4E9355D6F11F03","user_header":"https://static001.geekbang.org/account/avatar/00/18/01/f7/d3f3429b.jpg","comment_is_top":false,"comment_ctime":1598206816,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1598206816","product_id":100034901,"comment_content":"老师，websocket集群环境下，离线消息应该怎么处理  我是通过redis发布订阅功能实现的消息转发","like_count":0},{"had_liked":false,"id":237609,"user_name":"kabuka","can_delete":false,"product_type":"c1","uid":1246009,"ip_address":"","ucode":"932DD1E875D850","user_header":"https://static001.geekbang.org/account/avatar/00/13/03/39/18956b2e.jpg","comment_is_top":false,"comment_ctime":1595899405,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1595899405","product_id":100034901,"comment_content":"雖然WebSocket 通過HTTP  僅一次握手就可以，但是本質還是3次握手吧，，，","like_count":0},{"had_liked":false,"id":236895,"user_name":"豁豁哒","can_delete":false,"product_type":"c1","uid":1933191,"ip_address":"","ucode":"1ED540DD2AA822","user_header":"https://thirdwx.qlogo.cn/mmopen/vi_32/kLy68licCYb9N4dzLWqOqAiaiaDqWSQpFYen2f5wqtwQtxj6T0cerE1icJUMeF2o7ZGtoicKCGAxqwUYrebkq5aCjng/132","comment_is_top":false,"comment_ctime":1595579738,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1595579738","product_id":100034901,"comment_content":"老师好！<br>我这边场景是直播间聊天室，请教老师一些不明白的问题。<br>1 接入层这边，使用Netty的话，是使用Http长连接还是使用Websocket。<br>2 接入层服务是直接本地Map保持连接信息吗？<br>3 接入层服务怎么动态扩容连接能力。<br>4 业务层发送一条消息后，想要寻找聊天室内所有的观众，要发送到所有的接入层服务器吗，然后每个接入层服务本地Map寻找一个聊天室内的观众。","like_count":0},{"had_liked":false,"id":232040,"user_name":"慎独明强","can_delete":false,"product_type":"c1","uid":1965699,"ip_address":"","ucode":"DC2F7F2C0C8F60","user_header":"https://static001.geekbang.org/account/avatar/00/1d/fe/83/df562574.jpg","comment_is_top":false,"comment_ctime":1593840435,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1593840435","product_id":100034901,"comment_content":"要想精准找到，那么就得维护一份数据的映射关系，用户的uid和socket的文件描述符，映射关系是保存在哪呢？本地内存或者分布式缓存。 多个tcp连接，那么就出现了pool，epool，selector等多路复用处理。 对于这块半知半解，后面可能就会串起来了。","like_count":0},{"had_liked":false,"id":229713,"user_name":"Liang","can_delete":false,"product_type":"c1","uid":1007044,"ip_address":"","ucode":"FC79724F187245","user_header":"https://static001.geekbang.org/account/avatar/00/0f/5d/c4/abb7bfe3.jpg","comment_is_top":false,"comment_ctime":1593118399,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1593118399","product_id":100034901,"comment_content":"短轮询让我想起这个笑话：<br><br>一天小白兔想吃胡萝卜，就去街上买。它来到一家药店，想也不想就进去了。<br><br> 它问老板：“你好!请问你这有胡萝卜卖吗?” <br><br>老板说：“我这是药店，没有胡萝卜的!”<br><br>小白兔没买到胡萝卜就回家了! <br><br>第二天，小白兔又来到了这家药店。 <br><br>进门就问：“你好!请问你这有胡萝卜卖吗?”<br><br>老板有点不耐烦地说：“你是不是来捣乱的!?昨天不是告诉你了吗!这是药店，哪来的胡萝卜卖给你？你要是再来捣乱，我就拿钳子把你的牙给拔下来!”<br><br>小白兔没买到胡萝卜就回家了!<br><br>第三天，小白兔再次来到这家药店。<br><br>进门之后就问：“你好!请问你这有钳子卖吗?” 老板看这回它没要胡萝卜就耐心的告诉它：“我这里是药店，没有钳子!”小白兔说：“那你这有胡萝卜卖吗?","like_count":0},{"had_liked":false,"id":227546,"user_name":"贾智文","can_delete":false,"product_type":"c1","uid":1100235,"ip_address":"","ucode":"600CF0AB215D1A","user_header":"https://static001.geekbang.org/account/avatar/00/10/c9/cb/7b6802cc.jpg","comment_is_top":false,"comment_ctime":1592405187,"is_pvip":false,"discussion_count":1,"race_medal":0,"score":"1592405187","product_id":100034901,"comment_content":"不知道还有没有希望被看到，最后问题的解法放到hashmap我是理解的，放到分布式缓存后面要怎么用呢","like_count":0,"discussions":[{"author":{"id":1439763,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTLiaTMbYb0icR1J45HouBibAMa7Wb1dBjvicWCe9MnImy8WFibGsvyU11XocErfqH6l7MliaXuZ9vichjicoQ/132","nickname":"*盖＆聂*","note":"","ucode":"BA6FD2083FB264","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":316595,"discussion_content":"分布式缓存好像是存储，用户到链接机器的映射，消息最后还是要通过链接机器发给用户。不知道理解的对不对😂","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1603429896,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":222882,"user_name":"Geek_373e87","can_delete":false,"product_type":"c1","uid":1763335,"ip_address":"","ucode":"9DBAD30E4ED24A","user_header":"","comment_is_top":false,"comment_ctime":1590939110,"is_pvip":false,"discussion_count":2,"race_medal":0,"score":"1590939110","product_id":100034901,"comment_content":"想问下长连接网关如果是集群，客户端如何负载均衡，需要借助注册中心吗？客户端应能订阅注册中心吗？还是说本地缓存下集群ip，进行负载均衡？","like_count":0,"discussions":[{"author":{"id":2037540,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/qgbQytfwErGXuIZaRzA28iagmfnZDHKMYIGwZ7sJ6NAicVicDewic8S266eA9L4wO2q1y4XwcMGE6urK9L6vuQBpMA/132","nickname":"Geek_6e6dba","note":"","ucode":"E7B1A5DC90760D","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":282494,"discussion_content":"没看懂“客户端如何负载均衡” 是啥意思","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1591989974,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":1,"child_discussions":[{"author":{"id":1763335,"avatar":"","nickname":"Geek_373e87","note":"","ucode":"9DBAD30E4ED24A","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":2037540,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/qgbQytfwErGXuIZaRzA28iagmfnZDHKMYIGwZ7sJ6NAicVicDewic8S266eA9L4wO2q1y4XwcMGE6urK9L6vuQBpMA/132","nickname":"Geek_6e6dba","note":"","ucode":"E7B1A5DC90760D","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":283159,"discussion_content":"长连接网关层的负载均衡方案是什么","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1592199014,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":282494,"ip_address":""},"score":283159,"extra":""}]}]},{"had_liked":false,"id":193675,"user_name":"Mr.moon","can_delete":false,"product_type":"c1","uid":1904546,"ip_address":"","ucode":"57FD56BDC33C27","user_header":"https://static001.geekbang.org/account/avatar/00/1d/0f/a2/0f67d4c6.jpg","comment_is_top":false,"comment_ctime":1584947070,"is_pvip":false,"discussion_count":2,"race_medal":0,"score":"1584947070","product_id":100034901,"comment_content":"请问Websocket连接是连到网关上，还是转发到后台service.","like_count":0,"discussions":[{"author":{"id":1439763,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTLiaTMbYb0icR1J45HouBibAMa7Wb1dBjvicWCe9MnImy8WFibGsvyU11XocErfqH6l7MliaXuZ9vichjicoQ/132","nickname":"*盖＆聂*","note":"","ucode":"BA6FD2083FB264","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":316600,"discussion_content":"nginx可以转发websocket请求，用户是和后端的服务器直接建立链接吧。我们的websocket目前是这样","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1603430095,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":2037540,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/qgbQytfwErGXuIZaRzA28iagmfnZDHKMYIGwZ7sJ6NAicVicDewic8S266eA9L4wO2q1y4XwcMGE6urK9L6vuQBpMA/132","nickname":"Geek_6e6dba","note":"","ucode":"E7B1A5DC90760D","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":282493,"discussion_content":"应该是网关","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1591989956,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":178724,"user_name":"江龙","can_delete":false,"product_type":"c1","uid":1033442,"ip_address":"","ucode":"1865E545060CC9","user_header":"https://static001.geekbang.org/account/avatar/00/0f/c4/e2/3de4371d.jpg","comment_is_top":false,"comment_ctime":1581789280,"is_pvip":true,"replies":[{"id":"72279","content":"长轮询实际上也并不是一直hang在服务端，而是会有一个timeout超时，因此当没有消息时浏览器还是会每隔一段时间重新发起一次轮询请求，实际上这个时候是会去查询资源是否有新消息的，当没有新消息的时候这些轮询请求都是无效的。长连接的方式避免了这种无效请求，真正实现了“有消息时服务端主动推送”。在websocket基本普及的今天，应该是web端更多应该采取的策略。","user_name":"作者回复","user_name_real":"coldwalker","uid":"1297490","ctime":1584083832,"ip_address":"","comment_id":178724,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1581789280","product_id":100034901,"comment_content":"老师，您好，在《网页端收消息，究竟是推还是拉？》文章中却是讲，网页端的消息发送是用长轮询机制，而不是长连接。貌似长轮询并不会造成后端资源轮询的压力。文章链接是https:&#47;&#47;mp.weixin.qq.com&#47;s&#47;Z_xItxDUmUJO-W3bgYwb5Q。我被搞糊涂了，还请老师不吝赐教。","like_count":0,"discussions":[{"author":{"id":1297490,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/DYAIOgq83epK1zyWib7IKYCoRSxIa6dDjrcyBqObGfj1lDVia1pOrSVxyltKI7RfGekdXPQNObwaBQg3gwvarlQA/132","nickname":"coldwalker","note":"","ucode":"AF9AF257A745C9","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":483937,"discussion_content":"长轮询实际上也并不是一直hang在服务端，而是会有一个timeout超时，因此当没有消息时浏览器还是会每隔一段时间重新发起一次轮询请求，实际上这个时候是会去查询资源是否有新消息的，当没有新消息的时候这些轮询请求都是无效的。长连接的方式避免了这种无效请求，真正实现了“有消息时服务端主动推送”。在websocket基本普及的今天，应该是web端更多应该采取的策略。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1584083832,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":146651,"user_name":"潇洒哥","can_delete":false,"product_type":"c1","uid":1618106,"ip_address":"","ucode":"2D65853897E2C6","user_header":"https://static001.geekbang.org/account/avatar/00/18/b0/ba/4bbc709a.jpg","comment_is_top":false,"comment_ctime":1572593806,"is_pvip":false,"replies":[{"id":"57187","content":"一般是需要的，如果客户端发送的心跳包没有收到服务端的回应，可能是中间网络出现了问题或者连接的服务器出现故障，这种情况客户端可以断线重连。","user_name":"作者回复","user_name_real":"coldwalker","uid":"1297490","ctime":1573030677,"ip_address":"","comment_id":146651,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1572593806","product_id":100034901,"comment_content":"这种客户端发送心跳需要服务端响应吗?毕竟连接数较多","like_count":1,"discussions":[{"author":{"id":1297490,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/DYAIOgq83epK1zyWib7IKYCoRSxIa6dDjrcyBqObGfj1lDVia1pOrSVxyltKI7RfGekdXPQNObwaBQg3gwvarlQA/132","nickname":"coldwalker","note":"","ucode":"AF9AF257A745C9","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":472956,"discussion_content":"一般是需要的，如果客户端发送的心跳包没有收到服务端的回应，可能是中间网络出现了问题或者连接的服务器出现故障，这种情况客户端可以断线重连。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1573030677,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":144957,"user_name":"Geek_wei","can_delete":false,"product_type":"c1","uid":1642564,"ip_address":"","ucode":"BA0AB5B24E8C0D","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/FjibTwsP0HG1pfr3TcXSYsfAEIm6iclnIcnmbnyglemgOwxkkpHTS5tLkUJGhQxiaLj8fxDZfu0T8g1TLyr9vklicw/132","comment_is_top":false,"comment_ctime":1572140245,"is_pvip":false,"replies":[{"id":"56361","content":"grpc更多建议用在后端服务器间的调用上，客户端和网关机之间不推荐，对客户端的实现要求也比较高。","user_name":"作者回复","user_name_real":"coldwalker","uid":"1297490","ctime":1572437891,"ip_address":"","comment_id":144957,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1572140245","product_id":100034901,"comment_content":"grpc stream 适用吗？","like_count":0,"discussions":[{"author":{"id":1297490,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/DYAIOgq83epK1zyWib7IKYCoRSxIa6dDjrcyBqObGfj1lDVia1pOrSVxyltKI7RfGekdXPQNObwaBQg3gwvarlQA/132","nickname":"coldwalker","note":"","ucode":"AF9AF257A745C9","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":472186,"discussion_content":"grpc更多建议用在后端服务器间的调用上，客户端和网关机之间不推荐，对客户端的实现要求也比较高。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1572437891,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":139997,"user_name":"把头发还我","can_delete":false,"product_type":"c1","uid":1690779,"ip_address":"","ucode":"936FEBCEC4C124","user_header":"https://static001.geekbang.org/account/avatar/00/19/cc/9b/4cb06225.jpg","comment_is_top":false,"comment_ctime":1570782074,"is_pvip":false,"replies":[{"id":"54453","content":"springcloud的熔断干啥用的？为啥需要这个？熔断阈值是可以调整的吧","user_name":"作者回复","user_name_real":"coldwalker","uid":"1297490","ctime":1571057112,"ip_address":"","comment_id":139997,"utype":1}],"discussion_count":4,"race_medal":0,"score":"1570782074","product_id":100034901,"comment_content":"老师，请教一个长轮询的问题。如果使用spring的DeferredResult进行长轮询操作，设置超时时间为1分钟，可是springcloud的熔断策略配置的是10秒。这种情况怎么处理呢？","like_count":0,"discussions":[{"author":{"id":1297490,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/DYAIOgq83epK1zyWib7IKYCoRSxIa6dDjrcyBqObGfj1lDVia1pOrSVxyltKI7RfGekdXPQNObwaBQg3gwvarlQA/132","nickname":"coldwalker","note":"","ucode":"AF9AF257A745C9","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":470205,"discussion_content":"springcloud的熔断干啥用的？为啥需要这个？熔断阈值是可以调整的吧","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1571057112,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1270005,"avatar":"https://static001.geekbang.org/account/avatar/00/13/60/f5/55ea8114.jpg","nickname":"风旋碧浪(严唯嘉)","note":"","ucode":"1DC5986B813067","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":40004,"discussion_content":"熔断阈值可以根据请求path来的吧，这样设置可能靠谱些","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1572058072,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":1,"child_discussions":[{"author":{"id":1690779,"avatar":"https://static001.geekbang.org/account/avatar/00/19/cc/9b/4cb06225.jpg","nickname":"把头发还我","note":"","ucode":"936FEBCEC4C124","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1270005,"avatar":"https://static001.geekbang.org/account/avatar/00/13/60/f5/55ea8114.jpg","nickname":"风旋碧浪(严唯嘉)","note":"","ucode":"1DC5986B813067","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":40232,"discussion_content":"ribbon应该可以设置超时时间，但是即使这样，hystrix的熔断时间也应该大于ribbon的超时时间吧","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1572133529,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":40004,"ip_address":""},"score":40232,"extra":""}]},{"author":{"id":1690779,"avatar":"https://static001.geekbang.org/account/avatar/00/19/cc/9b/4cb06225.jpg","nickname":"把头发还我","note":"","ucode":"936FEBCEC4C124","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":32682,"discussion_content":"熔断阈值是可以调整的，但是我们公司配置的最长不超过20秒，如果把长轮询应用在这个场景下，应该怎么处理好呢？只能是为了长轮询而调高阈值吗？有其他的好的处理方式吗？","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1571057480,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":137682,"user_name":"Michael","can_delete":false,"product_type":"c1","uid":1676713,"ip_address":"","ucode":"9140B30F643638","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTKsBRgibKxD2M0ibmgPqfcoaZOxmUrwCCGlex8xehyYeeTOEN2ibtQ5S6t30LoOKFvMR5KDm5gnU99PQ/132","comment_is_top":false,"comment_ctime":1569822918,"is_pvip":false,"replies":[{"id":"53270","content":"如果是用户和接入的ip的映射那肯定是单独的中央存储或者服务来维护了。当然，可以不去记录这个映射，让每台网关机自己维护自己的，所有消息发给所有网关机去认领也是可以的。","user_name":"作者回复","user_name_real":"coldwalker","uid":"1297490","ctime":1570273701,"ip_address":"","comment_id":137682,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1569822918","product_id":100034901,"comment_content":"老师，想请问一下，维护用户tcp链接到tcp-gateway的IP的映射，是在tcp-gateway上实现还是单独做一个服务来维护呢？","like_count":0,"discussions":[{"author":{"id":1297490,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/DYAIOgq83epK1zyWib7IKYCoRSxIa6dDjrcyBqObGfj1lDVia1pOrSVxyltKI7RfGekdXPQNObwaBQg3gwvarlQA/132","nickname":"coldwalker","note":"","ucode":"AF9AF257A745C9","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":469209,"discussion_content":"如果是用户和接入的ip的映射那肯定是单独的中央存储或者服务来维护了。当然，可以不去记录这个映射，让每台网关机自己维护自己的，所有消息发给所有网关机去认领也是可以的。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1570273701,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":136721,"user_name":"大魔王汪汪","can_delete":false,"product_type":"c1","uid":1010680,"ip_address":"","ucode":"4B205CB52FC95F","user_header":"https://static001.geekbang.org/account/avatar/00/0f/6b/f8/b4da7936.jpg","comment_is_top":false,"comment_ctime":1569497943,"is_pvip":false,"replies":[{"id":"52551","content":"你说的这种的没怎么见过，具体是什么场景呢？即使只需要服务端推送到客户端，客户端也需要能找到服务端连接上才可以呀，所以客户端是需要通过长连和服务端通信的，至少是建立告知自己的身份这些吧，而且基于tcp的实现都是全双工的。","user_name":"作者回复","user_name_real":"coldwalker","uid":"1297490","ctime":1569578197,"ip_address":"","comment_id":136721,"utype":1}],"discussion_count":2,"race_medal":0,"score":"1569497943","product_id":100034901,"comment_content":"请问老师，因为WebSocke是全双工的push方案，如果某些场景只需要服务端推送到客户端，而不需要客户端通过长链接和服务端打交道，换一种单工的socket方案是不是值得呢？","like_count":0,"discussions":[{"author":{"id":1297490,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/DYAIOgq83epK1zyWib7IKYCoRSxIa6dDjrcyBqObGfj1lDVia1pOrSVxyltKI7RfGekdXPQNObwaBQg3gwvarlQA/132","nickname":"coldwalker","note":"","ucode":"AF9AF257A745C9","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":468772,"discussion_content":"你说的这种的没怎么见过，具体是什么场景呢？即使只需要服务端推送到客户端，客户端也需要能找到服务端连接上才可以呀，所以客户端是需要通过长连和服务端通信的，至少是建立告知自己的身份这些吧，而且基于tcp的实现都是全双工的。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1569578197,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1270005,"avatar":"https://static001.geekbang.org/account/avatar/00/13/60/f5/55ea8114.jpg","nickname":"风旋碧浪(严唯嘉)","note":"","ucode":"1DC5986B813067","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":40005,"discussion_content":"可以搜索一下sse推送技术，只能服务端推送给客户端。不过还是建议websocket，也很简单，将来有了客户端给服务端发消息也能复用部分代码","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1572058257,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":136155,"user_name":"天天平安","can_delete":false,"product_type":"c1","uid":1119208,"ip_address":"","ucode":"C4850F9655F4DD","user_header":"https://static001.geekbang.org/account/avatar/00/11/13/e8/08b829a9.jpg","comment_is_top":false,"comment_ctime":1569374523,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1569374523","product_id":100034901,"comment_content":"老师麻烦推荐一个市面上收费的IM产品，因为现在急需用了，您的课程还没有完，等不到自己实现了","like_count":0},{"had_liked":false,"id":133870,"user_name":"Gavin","can_delete":false,"product_type":"c1","uid":1496945,"ip_address":"","ucode":"3C793CE1572D4E","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTKe2HwTYcQ0hwoicaa9rlwIicoaI4BD1cS424x2icPfbUIbox2TrbpMC6MYuQ1Miaf1xHNxqatLD9DBrQ/132","comment_is_top":false,"comment_ctime":1568687449,"is_pvip":false,"replies":[{"id":"51494","content":"udp也是可以的呀，早期QQ的通信协议就是采用的udp。只不过针对udp协议，由于不能保证连接层的可靠性，所以需要应用层来保证。对于早期互联网场景，网络状况大都不好，网络经常容易断开，tcp的三次握手和四次挥手的开销会比较大，另外TCP有拥塞控制，会导致弱网情况下传输消息不高，这应该也是QQ早期采用udp的原因。但是随着网络状况的改善，而且udp在网络穿透能力上相比tcp还是会差一些，现在大部分IM（包括QQ）实际上都是采用tcp为主的传输协议了。","user_name":"作者回复","user_name_real":"coldwalker","uid":"1297490","ctime":1568807167,"ip_address":"","comment_id":133870,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1568687449","product_id":100034901,"comment_content":"有个疑问：为什么不选用UDP呢？<br><br>1. 用户基于UDP登录注册到服务侧以后，服务侧也可以根据用户IP+Port找到用户。<br>2. 即使基于TCP，也需要有应用层可靠性机制，来保证可靠投递；那基于UDP也可以通过应用层保证可靠性。<br>3. TCP还容易拥塞，产生较大时延。<br>","like_count":0,"discussions":[{"author":{"id":1297490,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/DYAIOgq83epK1zyWib7IKYCoRSxIa6dDjrcyBqObGfj1lDVia1pOrSVxyltKI7RfGekdXPQNObwaBQg3gwvarlQA/132","nickname":"coldwalker","note":"","ucode":"AF9AF257A745C9","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":467540,"discussion_content":"udp也是可以的呀，早期QQ的通信协议就是采用的udp。只不过针对udp协议，由于不能保证连接层的可靠性，所以需要应用层来保证。对于早期互联网场景，网络状况大都不好，网络经常容易断开，tcp的三次握手和四次挥手的开销会比较大，另外TCP有拥塞控制，会导致弱网情况下传输消息不高，这应该也是QQ早期采用udp的原因。但是随着网络状况的改善，而且udp在网络穿透能力上相比tcp还是会差一些，现在大部分IM（包括QQ）实际上都是采用tcp为主的传输协议了。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1568807167,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":132752,"user_name":"ZK47","can_delete":false,"product_type":"c1","uid":1313402,"ip_address":"","ucode":"073286D06B186C","user_header":"https://static001.geekbang.org/account/avatar/00/14/0a/7a/c6df8b08.jpg","comment_is_top":false,"comment_ctime":1568213738,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1568213738","product_id":100034901,"comment_content":"果然有websocket。上动态网页课的时候，我自己在下面录了一个基于websocket的网页在线聊天。发现websocket还是有些不足，比如信息的长度并不是无限的，我的解决方法是将这个长消息post到servlet中处理，servlet会存储它生成一个uuid，同时服务器推送一条拉取指令让浏览器通过servlet去get这个uuid获取这条消息。。。","like_count":0},{"had_liked":false,"id":132346,"user_name":"Geek_123","can_delete":false,"product_type":"c1","uid":1643832,"ip_address":"","ucode":"6041CD3C786A66","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/2jNKZqm7nMHmU567L4TrAbDZTxA0uhERx16icb2fSxso54RgkAOMJSI1FFsrwxfDxCAuAnpmSVd7X1k8DRIW9YA/132","comment_is_top":false,"comment_ctime":1568093807,"is_pvip":false,"replies":[{"id":"50658","content":"在线连接数不是问题呀，很多用户只是连接在，没有消息收发的。集群化部署需要让用户能随机连接到任意的接入服务器，也就是接入服务器需要无状态。一般不要让某一个用户定点连某一台服务器，这种的扩展性和可靠性都比较低。","user_name":"作者回复","user_name_real":"coldwalker","uid":"1297490","ctime":1568129497,"ip_address":"","comment_id":132346,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1568093807","product_id":100034901,"comment_content":"老师，请教个问题，qq、微信这种同时在线人数好几亿，这么多连接，应该有服务集群来支撑。是怎么做到连接的负载均衡？怎么做到某个用户端连接哪个IM的接入服务端的，如何定位要链接的服务器的？","like_count":0,"discussions":[{"author":{"id":1297490,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/DYAIOgq83epK1zyWib7IKYCoRSxIa6dDjrcyBqObGfj1lDVia1pOrSVxyltKI7RfGekdXPQNObwaBQg3gwvarlQA/132","nickname":"coldwalker","note":"","ucode":"AF9AF257A745C9","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":466889,"discussion_content":"在线连接数不是问题呀，很多用户只是连接在，没有消息收发的。集群化部署需要让用户能随机连接到任意的接入服务器，也就是接入服务器需要无状态。一般不要让某一个用户定点连某一台服务器，这种的扩展性和可靠性都比较低。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1568129497,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":132044,"user_name":"影随","can_delete":false,"product_type":"c1","uid":1088169,"ip_address":"","ucode":"48BC4CFCAD3C2F","user_header":"https://static001.geekbang.org/account/avatar/00/10/9a/a9/ae10f6cd.jpg","comment_is_top":false,"comment_ctime":1568012923,"is_pvip":false,"replies":[{"id":"50518","content":"呃，貌似保留消息只能为每个topic保留最后的一条消息？","user_name":"作者回复","user_name_real":"coldwalker","uid":"1297490","ctime":1568037742,"ip_address":"","comment_id":132044,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1568012923","product_id":100034901,"comment_content":"老师您好，我最近在看MQTT协议，离线消息好像可以用 &quot;保留消息&quot;来做吧， 我看保留消息的介绍为如下：<br><br>MQTT客户端向服务器发布(PUBLISH)消息时，可以设置保留消息(Retained Message)标志。保留消息(Retained Message)会驻留在消息服务器，后来的订阅者订阅主题时仍可以接收该消息。","like_count":0,"discussions":[{"author":{"id":1297490,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/DYAIOgq83epK1zyWib7IKYCoRSxIa6dDjrcyBqObGfj1lDVia1pOrSVxyltKI7RfGekdXPQNObwaBQg3gwvarlQA/132","nickname":"coldwalker","note":"","ucode":"AF9AF257A745C9","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":466735,"discussion_content":"呃，貌似保留消息只能为每个topic保留最后的一条消息？","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1568037742,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":131500,"user_name":"朱朱","can_delete":false,"product_type":"c1","uid":1548814,"ip_address":"","ucode":"CE56C6773736D4","user_header":"https://static001.geekbang.org/account/avatar/00/17/a2/0e/62f10b10.jpg","comment_is_top":false,"comment_ctime":1567769681,"is_pvip":false,"replies":[{"id":"50316","content":"轮询的话服务端需要不停去查询存储有没有新消息，不管实际有没有新消息。长连接的话可以做到服务端推送，真正有新消息时只需要推送一次就可以了，不需要一直轮询。","user_name":"作者回复","user_name_real":"coldwalker","uid":"1297490","ctime":1567841455,"ip_address":"","comment_id":131500,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1567769681","product_id":100034901,"comment_content":"长连续缺点说虽然减少了Qps，但是并没有减小服务器读盘动作，想问一个问题，我觉得webSocket在替代客户端和服器轮询请求是有优势的，但好像他也没缓解服务器读盘。这一块服务端内怎么处理的呢，可以说一下吗","like_count":0,"discussions":[{"author":{"id":1297490,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/DYAIOgq83epK1zyWib7IKYCoRSxIa6dDjrcyBqObGfj1lDVia1pOrSVxyltKI7RfGekdXPQNObwaBQg3gwvarlQA/132","nickname":"coldwalker","note":"","ucode":"AF9AF257A745C9","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":466488,"discussion_content":"轮询的话服务端需要不停去查询存储有没有新消息，不管实际有没有新消息。长连接的话可以做到服务端推送，真正有新消息时只需要推送一次就可以了，不需要一直轮询。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1567841455,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":130922,"user_name":"","can_delete":false,"product_type":"c1","uid":1421920,"ip_address":"","ucode":"5E97D5D6E7D89F","user_header":"https://static001.geekbang.org/account/avatar/00/15/b2/60/ae8240aa.jpg","comment_is_top":false,"comment_ctime":1567577356,"is_pvip":false,"replies":[{"id":"49174","content":"断网重连一般需要先建连并提供本地存储的最新的消息信息，然后服务端根据这些信息去取离线消息，然后再推送给客户端。","user_name":"作者回复","user_name_real":"coldwalker","uid":"1297490","ctime":1567598215,"ip_address":"","comment_id":130922,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1567577356","product_id":100034901,"comment_content":"请问老师。断网后，我们可以在浏览器断网后，触发offline之前，在做一些什么行动去链接么","like_count":1,"discussions":[{"author":{"id":1297490,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/DYAIOgq83epK1zyWib7IKYCoRSxIa6dDjrcyBqObGfj1lDVia1pOrSVxyltKI7RfGekdXPQNObwaBQg3gwvarlQA/132","nickname":"coldwalker","note":"","ucode":"AF9AF257A745C9","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":466196,"discussion_content":"断网重连一般需要先建连并提供本地存储的最新的消息信息，然后服务端根据这些信息去取离线消息，然后再推送给客户端。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1567598215,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":130912,"user_name":"dylen","can_delete":false,"product_type":"c1","uid":1644340,"ip_address":"","ucode":"622561321A0CC3","user_header":"https://static001.geekbang.org/account/avatar/00/19/17/34/478ce1b0.jpg","comment_is_top":false,"comment_ctime":1567572078,"is_pvip":false,"replies":[{"id":"49169","content":"消息类型和消息内容是一起在数据包里推送到客户端的，解析出来就好啦","user_name":"作者回复","user_name_real":"coldwalker","uid":"1297490","ctime":1567597921,"ip_address":"","comment_id":130912,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1567572078","product_id":100034901,"comment_content":"请教下 客户端接收到服务器的数据后 如何确定消息的类型","like_count":0,"discussions":[{"author":{"id":1297490,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/DYAIOgq83epK1zyWib7IKYCoRSxIa6dDjrcyBqObGfj1lDVia1pOrSVxyltKI7RfGekdXPQNObwaBQg3gwvarlQA/132","nickname":"coldwalker","note":"","ucode":"AF9AF257A745C9","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":466193,"discussion_content":"消息类型和消息内容是一起在数据包里推送到客户端的，解析出来就好啦","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1567597921,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":130863,"user_name":"木木","can_delete":false,"product_type":"c1","uid":1099966,"ip_address":"","ucode":"A06897B733D05A","user_header":"https://static001.geekbang.org/account/avatar/00/10/c8/be/308eb293.jpg","comment_is_top":false,"comment_ctime":1567561281,"is_pvip":false,"replies":[{"id":"49144","content":"这种的有很多第三方推送服务了，比如：腾讯的信鸽，极光等等。","user_name":"作者回复","user_name_real":"coldwalker","uid":"1297490","ctime":1567596647,"ip_address":"","comment_id":130863,"utype":1}],"discussion_count":2,"race_medal":0,"score":"1567561281","product_id":100034901,"comment_content":"如果APP不在线，需要通过第三方系统推送，但是现在Android系统厂商很多，是不是需要APP服务商封装一个统一的API去自适配多个厂商的系统推送？","like_count":0,"discussions":[{"author":{"id":1297490,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/DYAIOgq83epK1zyWib7IKYCoRSxIa6dDjrcyBqObGfj1lDVia1pOrSVxyltKI7RfGekdXPQNObwaBQg3gwvarlQA/132","nickname":"coldwalker","note":"","ucode":"AF9AF257A745C9","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":466162,"discussion_content":"这种的有很多第三方推送服务了，比如：腾讯的信鸽，极光等等。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1567596647,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1643560,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/DYAIOgq83ertu3Vz0acS8GDHFMk3jJk2icEcMnIibuHFibTMibCVZaEQSGkgbF9FOebkILGibWiaW0E71SicfNrgMEgvw/132","nickname":"Geek Wang","note":"","ucode":"FD8DCC1FB1AEB0","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":7875,"discussion_content":"像微信，企鹅大厂基本和厂商合作，链接随系统启动，基本上只要开机就在线了，第三方的像极光，个推还是做不到即时收消息","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1567694788,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":130371,"user_name":"一步","can_delete":false,"product_type":"c1","uid":1005391,"ip_address":"","ucode":"73CEA468CE70C3","user_header":"https://static001.geekbang.org/account/avatar/00/0f/57/4f/6fb51ff1.jpg","comment_is_top":false,"comment_ctime":1567436106,"is_pvip":true,"replies":[{"id":"48931","content":"文件描述符一般情况下不是问题哈，单台机器句柄数开到1000w都没问题。真要是耗尽了就连不上了来了，可以通过客户端的重连机制来尝试其他机器。","user_name":"作者回复","user_name_real":"coldwalker","uid":"1297490","ctime":1567519288,"ip_address":"","comment_id":130371,"utype":1}],"discussion_count":2,"race_medal":0,"score":"1567436106","product_id":100034901,"comment_content":"Linux 服务器的socket文件描述符，一般都是有数量限制的，当一个用户保持一个 tcp 连接，就会占用一个文件描述符，这样当socket文件描述符耗尽的时候，在有新的连接进来，就会堵塞等待了？ 这个地方逻辑是怎么处理的呢？","like_count":0,"discussions":[{"author":{"id":1297490,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/DYAIOgq83epK1zyWib7IKYCoRSxIa6dDjrcyBqObGfj1lDVia1pOrSVxyltKI7RfGekdXPQNObwaBQg3gwvarlQA/132","nickname":"coldwalker","note":"","ucode":"AF9AF257A745C9","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":465929,"discussion_content":"文件描述符一般情况下不是问题哈，单台机器句柄数开到1000w都没问题。真要是耗尽了就连不上了来了，可以通过客户端的重连机制来尝试其他机器。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1567519288,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1645701,"avatar":"","nickname":"叶艺文","note":"","ucode":"62A6D71390CBD9","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":7329,"discussion_content":"个人理解:文件描述符数量限制是可以调整的，针对进程可以设置成无限制，这时候取决于系统内存可以支持的大小，资源耗尽连接是建立不起来的；一般会通过用户请求--》负载均衡--》服务器集群，负载均衡负责根据后端服务器的实际负载进行调度","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1567494736,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":130346,"user_name":"川杰","can_delete":false,"product_type":"c1","uid":1099750,"ip_address":"","ucode":"815211E1D698E6","user_header":"https://static001.geekbang.org/account/avatar/00/10/c7/e6/11f21cb4.jpg","comment_is_top":false,"comment_ctime":1567429955,"is_pvip":false,"replies":[{"id":"48930","content":"本质上是一样的，rpc的实现上大多是基于tcp的长连接来提升调用效率。","user_name":"作者回复","user_name_real":"coldwalker","uid":"1297490","ctime":1567519157,"ip_address":"","comment_id":130346,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1567429955","product_id":100034901,"comment_content":"老师，概念太多我有点绕糊涂了。我自己写的（学习用）rpc框架里用的socket去做的。是您说的tcp长连接的方式吗？","like_count":0,"discussions":[{"author":{"id":1297490,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/DYAIOgq83epK1zyWib7IKYCoRSxIa6dDjrcyBqObGfj1lDVia1pOrSVxyltKI7RfGekdXPQNObwaBQg3gwvarlQA/132","nickname":"coldwalker","note":"","ucode":"AF9AF257A745C9","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":465915,"discussion_content":"本质上是一样的，rpc的实现上大多是基于tcp的长连接来提升调用效率。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1567519157,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":130317,"user_name":"糊涂难得","can_delete":false,"product_type":"c1","uid":1317608,"ip_address":"","ucode":"98DBCD29A9F1D8","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/DYAIOgq83eoUibQTZvtGHCwG3ia6aIK9oOsbOTwsEUjqzOgeFm6Mwiaf4d5VzK4l9dI43mtqllxdLyfictGgScDoRg/132","comment_is_top":false,"comment_ctime":1567424369,"is_pvip":false,"replies":[{"id":"48925","content":"will message是用来当某一个设备离线时留下一条遗嘱好用来告知其他设备这个设备下线了。","user_name":"作者回复","user_name_real":"coldwalker","uid":"1297490","ctime":1567518948,"ip_address":"","comment_id":130317,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1567424369","product_id":100034901,"comment_content":"老师，我想问一下mqtt的遗嘱消息，不是可以实现离线消息吗？","like_count":0,"discussions":[{"author":{"id":1297490,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/DYAIOgq83epK1zyWib7IKYCoRSxIa6dDjrcyBqObGfj1lDVia1pOrSVxyltKI7RfGekdXPQNObwaBQg3gwvarlQA/132","nickname":"coldwalker","note":"","ucode":"AF9AF257A745C9","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":465902,"discussion_content":"will message是用来当某一个设备离线时留下一条遗嘱好用来告知其他设备这个设备下线了。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1567518948,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":130198,"user_name":"liangjf","can_delete":false,"product_type":"c1","uid":1058812,"ip_address":"","ucode":"681A6CCF098F55","user_header":"https://static001.geekbang.org/account/avatar/00/10/27/fc/b8d83d56.jpg","comment_is_top":false,"comment_ctime":1567400958,"is_pvip":false,"replies":[{"id":"48619","content":"嗯，是一种方式，不过还需要考虑维护这个全局在线状态时的开销和一致性问题。","user_name":"作者回复","user_name_real":"coldwalker","uid":"1297490","ctime":1567425140,"ip_address":"","comment_id":130198,"utype":1}],"discussion_count":2,"race_medal":0,"score":"1567400958","product_id":100034901,"comment_content":"一般链接量大了，不用内存缓存连接映射信息。而是放在redis集群中，key是mid，valie是server:channel。就可以在集群中，找到对应server的连接","like_count":0,"discussions":[{"author":{"id":1297490,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/DYAIOgq83epK1zyWib7IKYCoRSxIa6dDjrcyBqObGfj1lDVia1pOrSVxyltKI7RfGekdXPQNObwaBQg3gwvarlQA/132","nickname":"coldwalker","note":"","ucode":"AF9AF257A745C9","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":465852,"discussion_content":"嗯，是一种方式，不过还需要考虑维护这个全局在线状态时的开销和一致性问题。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1567425140,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1027781,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/ae/c5/09c2dd48.jpg","nickname":"M$画像","note":"","ucode":"B7298F0CC7ADC8","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":7236,"discussion_content":"谢谢分享，感觉你的做法和我们有点类似。你的mid是设备id还是用户id？","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1567426802,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":130128,"user_name":"落誓布偶","can_delete":false,"product_type":"c1","uid":1262780,"ip_address":"","ucode":"38AA3E6A9A135F","user_header":"https://static001.geekbang.org/account/avatar/00/13/44/bc/c71070e7.jpg","comment_is_top":false,"comment_ctime":1567388164,"is_pvip":false,"replies":[{"id":"48614","content":"一个是分析一下cpu资源消耗在哪了？另外，指令存储db可以放到异步的进程或者服务中处理，连接层只处理连接相关的轻量操作。","user_name":"作者回复","user_name_real":"coldwalker","uid":"1297490","ctime":1567424700,"ip_address":"","comment_id":130128,"utype":1}],"discussion_count":3,"race_medal":0,"score":"1567388164","product_id":100034901,"comment_content":"最近用java做了一个与物联网设备的连接应用，是将连接存储到map中，然后通过设备的唯一标识为key从中取出连接。将每一个指令状态存到了db中。但这就会有种情况发生，当连接数量过大时，的服务器端cpu资源消耗过大，整个系统出现明显卡顿。这个该怎么解决？","like_count":0,"discussions":[{"author":{"id":1297490,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/DYAIOgq83epK1zyWib7IKYCoRSxIa6dDjrcyBqObGfj1lDVia1pOrSVxyltKI7RfGekdXPQNObwaBQg3gwvarlQA/132","nickname":"coldwalker","note":"","ucode":"AF9AF257A745C9","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":465823,"discussion_content":"一个是分析一下cpu资源消耗在哪了？另外，指令存储db可以放到异步的进程或者服务中处理，连接层只处理连接相关的轻量操作。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1567424700,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1317608,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/DYAIOgq83eoUibQTZvtGHCwG3ia6aIK9oOsbOTwsEUjqzOgeFm6Mwiaf4d5VzK4l9dI43mtqllxdLyfictGgScDoRg/132","nickname":"糊涂难得","note":"","ucode":"98DBCD29A9F1D8","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":7223,"discussion_content":"一般我们做会维护channelId与设备ID的映射关系，这样通过channel去找连接就可以了","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1567424506,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1337944,"avatar":"https://static001.geekbang.org/account/avatar/00/14/6a/58/f2c6d65b.jpg","nickname":"王棕生","note":"","ucode":"901BD0447A871E","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":7145,"discussion_content":"我觉得先要找出卡顿的具体原因，再有针对性的去解决： 如果卡顿的原因是读写db，这个时候就要优化db或是优化查询了，能否用缓存代替？ 如果卡顿的原因是连接量大，这个时候就要去升级系统硬件了或修改配置了.......","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1567402069,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":130116,"user_name":"琚致远","can_delete":false,"product_type":"c1","uid":1003012,"ip_address":"","ucode":"F4AA06D5C2AE03","user_header":"https://static001.geekbang.org/account/avatar/00/0f/4e/04/68eb84d0.jpg","comment_is_top":false,"comment_ctime":1567387535,"is_pvip":false,"replies":[{"id":"48612","content":"更准确的说是指：无法从服务端主动发起操作。","user_name":"作者回复","user_name_real":"coldwalker","uid":"1297490","ctime":1567424545,"ip_address":"","comment_id":130116,"utype":1}],"discussion_count":3,"race_medal":0,"score":"1567387535","product_id":100034901,"comment_content":"HTTP 可以是有状态的吧","like_count":0,"discussions":[{"author":{"id":1297490,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/DYAIOgq83epK1zyWib7IKYCoRSxIa6dDjrcyBqObGfj1lDVia1pOrSVxyltKI7RfGekdXPQNObwaBQg3gwvarlQA/132","nickname":"coldwalker","note":"","ucode":"AF9AF257A745C9","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":465815,"discussion_content":"更准确的说是指：无法从服务端主动发起操作。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1567424545,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1027781,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/ae/c5/09c2dd48.jpg","nickname":"M$画像","note":"","ucode":"B7298F0CC7ADC8","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":7241,"discussion_content":"请举例说明你的有状态具体是怎么样的？难道是.net viewstate来回传？一个几十k的请求和响应这货能够来回传上兆的数据为了就是现实有状态。。。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1567427256,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1337944,"avatar":"https://static001.geekbang.org/account/avatar/00/14/6a/58/f2c6d65b.jpg","nickname":"王棕生","note":"","ucode":"901BD0447A871E","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":7144,"discussion_content":"http本质上是无状态的，但是为了实现基于http协议的用户在线等业务需求，我们将session会话植入其中，可以做到有状态.....但是http协议容易被拦截，所以一般采用https","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1567401920,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":130114,"user_name":"🐾","can_delete":false,"product_type":"c1","uid":1087256,"ip_address":"","ucode":"D0AD0260351C31","user_header":"https://static001.geekbang.org/account/avatar/00/10/97/18/a5218104.jpg","comment_is_top":false,"comment_ctime":1567387455,"is_pvip":false,"replies":[{"id":"48606","content":"是这样的","user_name":"作者回复","user_name_real":"coldwalker","uid":"1297490","ctime":1567423905,"ip_address":"","comment_id":130114,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1567387455","product_id":100034901,"comment_content":"请问袁老师，长轮询实现是不是这样：客户端发起一个请求，服务端通常是在200ms内返回结果，但长轮询的话，是有消息才立马返回；没有消息时，就先让客户端等个30s，然后服务端在这个30s内还是不停地查询消息数据，如果有新消息，就立马返回，如果还是没有新消息，就让他自己超时处理（此时客户端收到timeout响应），也有可能是正常返回空列表？","like_count":0,"discussions":[{"author":{"id":1297490,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/DYAIOgq83epK1zyWib7IKYCoRSxIa6dDjrcyBqObGfj1lDVia1pOrSVxyltKI7RfGekdXPQNObwaBQg3gwvarlQA/132","nickname":"coldwalker","note":"","ucode":"AF9AF257A745C9","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":465814,"discussion_content":"是这样的","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1567423905,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":130103,"user_name":"胡胜","can_delete":false,"product_type":"c1","uid":1048597,"ip_address":"","ucode":"B7D383B3E16E87","user_header":"https://static001.geekbang.org/account/avatar/00/10/00/15/de689391.jpg","comment_is_top":false,"comment_ctime":1567386526,"is_pvip":false,"replies":[{"id":"48604","content":"代码演示不涉及第三方协议哈","user_name":"作者回复","user_name_real":"coldwalker","uid":"1297490","ctime":1567423839,"ip_address":"","comment_id":130103,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1567386526","product_id":100034901,"comment_content":"请问本课写的demo是基于mqtt么","like_count":0,"discussions":[{"author":{"id":1297490,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/DYAIOgq83epK1zyWib7IKYCoRSxIa6dDjrcyBqObGfj1lDVia1pOrSVxyltKI7RfGekdXPQNObwaBQg3gwvarlQA/132","nickname":"coldwalker","note":"","ucode":"AF9AF257A745C9","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":465807,"discussion_content":"代码演示不涉及第三方协议哈","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1567423839,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":130076,"user_name":"geekymv","can_delete":false,"product_type":"c1","uid":1075950,"ip_address":"","ucode":"B119ACE47B8C0C","user_header":"https://wx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTJTywPCdTDoRAaLBN20JfD50dQPic0B3OeUgYMHA3x7ptvF3iaCRTqrNZsF3Cz8TCibcwSsCichdOiallQ/0","comment_is_top":false,"comment_ctime":1567383832,"is_pvip":false,"replies":[{"id":"48596","content":"连接层的信息映射保存时不需要关心客户端的ip和port哈，一般可以保存为socket对象或者channel对象就可以。","user_name":"作者回复","user_name_real":"coldwalker","uid":"1297490","ctime":1567422800,"ip_address":"","comment_id":130076,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1567383832","product_id":100034901,"comment_content":"客户端与服务端通过三次握手建立连接后，服务端会保存唯一的socket连接，socket包含了客户端的ip和port，服务端需要保存连接用户的ID和socket的映射关系（&lt;userId，socket&gt;）。这样当服务端需要给某个用户发送消息时，通过映射关系就可以获取到socket，通过socket发送数据给客户端。","like_count":1,"discussions":[{"author":{"id":1297490,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/DYAIOgq83epK1zyWib7IKYCoRSxIa6dDjrcyBqObGfj1lDVia1pOrSVxyltKI7RfGekdXPQNObwaBQg3gwvarlQA/132","nickname":"coldwalker","note":"","ucode":"AF9AF257A745C9","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":465789,"discussion_content":"连接层的信息映射保存时不需要关心客户端的ip和port哈，一般可以保存为socket对象或者channel对象就可以。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1567422800,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":130071,"user_name":"墙角儿的花","can_delete":false,"product_type":"c1","uid":1258474,"ip_address":"","ucode":"EE5CAD76175CCF","user_header":"","comment_is_top":false,"comment_ctime":1567383187,"is_pvip":false,"replies":[{"id":"48595","content":"简单实现的话：ajax发起一个请求，超时比如设置为60s，后端servlet接收到之后，while循环判断当前时刻和请求时刻是否到达超时时间，没有的话调用后端service获取数据，如果没有获取到就sleep 1s，继续while循环。","user_name":"作者回复","user_name_real":"coldwalker","uid":"1297490","ctime":1567422677,"ip_address":"","comment_id":130071,"utype":1}],"discussion_count":3,"race_medal":0,"score":"1567383187","product_id":100034901,"comment_content":"tcp链接和用户id以及设备id 绑定，消息体有发送目标，进行匹配即可.<br>问下老师，http基础上实现能控制timeout的长轮询，这个怎么做的啊，谢谢","like_count":0,"discussions":[{"author":{"id":1297490,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/DYAIOgq83epK1zyWib7IKYCoRSxIa6dDjrcyBqObGfj1lDVia1pOrSVxyltKI7RfGekdXPQNObwaBQg3gwvarlQA/132","nickname":"coldwalker","note":"","ucode":"AF9AF257A745C9","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":465787,"discussion_content":"简单实现的话：ajax发起一个请求，超时比如设置为60s，后端servlet接收到之后，while循环判断当前时刻和请求时刻是否到达超时时间，没有的话调用后端service获取数据，如果没有获取到就sleep 1s，继续while循环。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1567422677,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1337944,"avatar":"https://static001.geekbang.org/account/avatar/00/14/6a/58/f2c6d65b.jpg","nickname":"王棕生","note":"","ucode":"901BD0447A871E","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":7141,"discussion_content":"http客户端发起请求到服务端，服务端接收到http请求后，先hold住，也就是不要返回，等到15秒以后(时间可配置，根据具体业务)，再返回一个空body的response，或是在这15秒的时间内如果有消息了，就立刻返回。","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1567401444,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1027781,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/ae/c5/09c2dd48.jpg","nickname":"M$画像","note":"","ucode":"B7298F0CC7ADC8","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":7246,"discussion_content":"听老师一说让我想到用netty的时间轮做一个后端这个任务","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1567428207,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]}]}