{"id":381810,"title":"13 | 第一个C函数：如何实现板级初始化？","content":"<p>你好，我是LMOS。</p><p>前面三节课，我们为调用Cosmos的<strong>第一个C函数hal_start做了大量工作。</strong>这节课我们要让操作系统Cosmos里的第一个C函数真正跑起来啦，也就是说，我们会真正进入到我们的内核中。</p><p>今天我们会继续在这个hal_start函数里，首先执行板级初始化，其实就是hal层（硬件抽象层，下同）初始化，其中执行了平台初始化，hal层的内存初始化，中断初始化，最后进入到内核层的初始化。</p><p>这节课的配套代码，你可以从<a href=\"https://gitee.com/lmos/cosmos/tree/master/lesson13/Cosmos\">这里</a>下载。</p><h2>第一个C函数</h2><p>任何软件工程，第一个函数总是简单的，因为它是总调用者，像是一个管理者，坐在那里发号施令，自己却是啥活也不干。</p><p>由于这是第一个C函数，也是初始化函数，我们还是要为它单独建立一个文件，以显示对它的尊重，依然在Cosmos/hal/x86/下建立一个hal_start.c文件。写上这样一个函数。</p><pre><code>void hal_start()\n{\n    //第一步：初始化hal层\n    //第二步：初始化内核层\n    for(;;);\n    return;\n}\n</code></pre><p>根据前面的设计，Cosmos是有hal层和内核层之分，所以在上述代码中，要分两步走。第一步是初始化hal层；第二步，初始化内核层。只是这两步的函数我们还没有写。</p><p>然而最后的死循环却有点奇怪，其实它的目的很简单，就是避免这个函数返回，因为这个返回了就无处可去，避免走回头路。</p><!-- [[[read_end]]] --><h3>hal层初始化</h3><p>为了分离硬件的特性，我们设计了hal层，把硬件相关的操作集中在这个层，并向上提供接口，目的是让内核上层不用关注硬件相关的细节，也能方便以后移植和扩展。(关于hal层的设计，可以回顾<a href=\"https://time.geekbang.org/column/article/372609\">第3节课</a>)</p><p>也许今天我们是在x86平台上写Cosmos，明天就要在ARM平台上开发Cosmos，那时我们就可以写个ARM平台的hal层，来替换Cosmos中的x86平台的hal层。</p><p>下面我们在Cosmos/hal/x86/下建立一个halinit.c文件，写出hal层的初始化函数。</p><pre><code>void init_hal()\n{\n    //初始化平台\n    //初始化内存\n    //初始化中断\n    return;\n}\n</code></pre><p>这个函数也是一个调用者，没怎么干活。不过根据代码的注释能看出，它调用的函数多一点，但主要是完成初始化平台、初始化内存、初始化中断的功能函数。</p><h4>初始化平台</h4><p>我们先来写好平台初始化函数，因为它需要最先被调用。</p><p>这个函数主要负责完成两个任务，一是<strong>把二级引导器建立的机器信息结构复制到hal层中的一个全局变量中</strong>，方便内核中的其它代码使用里面的信息，之后二级引导器建立的数据所占用的内存都会被释放。二是要<strong>初始化图形显示驱动</strong>，内核在运行过程要在屏幕上输出信息。</p><p>下面我们在Cosmos/hal/x86/下建立一个halplatform.c文件，写上如下代码。</p><pre><code>void machbstart_t_init(machbstart_t *initp)\n{\n    //清零\n    memset(initp, 0, sizeof(machbstart_t));\n    return;\n}\n\nvoid init_machbstart()\n{\n    machbstart_t *kmbsp = &amp;kmachbsp;\n    machbstart_t *smbsp = MBSPADR;//物理地址1MB处\n    machbstart_t_init(kmbsp);\n    //复制，要把地址转换成虚拟地址\n    memcopy((void *)phyadr_to_viradr((adr_t)smbsp), (void *)kmbsp, sizeof(machbstart_t));\n    return;\n}\n//平台初始化函数\nvoid init_halplaltform()\n{\n    //复制机器信息结构\n    init_machbstart();\n    //初始化图形显示驱动\n    init_bdvideo();\n    return;\n}\n</code></pre><p>这个代码中别的地方很好理解，就是kmachbsp你可能会有点奇怪，它是个结构体变量，结构体类型是machbstart_t，这个结构和二级引导器所使用的一模一样。</p><p>同时，它还是一个hal层的全局变量，我们想专门有个文件定义所有hal层的全局变量，于是我们在Cosmos/hal/x86/下建立一个halglobal.c文件，写上如下代码。</p><pre><code>//全局变量定义变量放在data段\n#define HAL_DEFGLOB_VARIABLE(vartype,varname) \\\nEXTERN  __attribute__((section(&quot;.data&quot;))) vartype varname\n\nHAL_DEFGLOB_VARIABLE(machbstart_t,kmachbsp);\n</code></pre><p>前面的EXTERN，在halglobal.c文件中定义为空，而在其它文件中定义为extern，告诉编译器这是外部文件的变量，避免发生错误。</p><p>下面，我们在Cosmos/hal/x86/下的bdvideo.c文件中，写好init_bdvideo函数。</p><pre><code>void init_bdvideo()\n{\n    dftgraph_t *kghp = &amp;kdftgh;\n    //初始化图形数据结构，里面放有图形模式，分辨率，图形驱动函数指针\n    init_dftgraph();\n    //初始bga图形显卡的函数指针\n    init_bga();\n    //初始vbe图形显卡的函数指针\n    init_vbe();\n    //清空屏幕 为黑色\n    fill_graph(kghp, BGRA(0, 0, 0));\n    //显示背景图片 \n    set_charsdxwflush(0, 0);\n    hal_background();\n    return;\n}\n</code></pre><p>init_dftgraph()函数初始了dftgraph_t结构体类型的变量kdftgh，我们在halglobal.c文件中定义这个变量，结构类型我们这样来定义。</p><pre><code>typedef struct s_DFTGRAPH\n{\n    u64_t gh_mode;         //图形模式\n    u64_t gh_x;            //水平像素点\n    u64_t gh_y;            //垂直像素点\n    u64_t gh_framphyadr;   //显存物理地址 \n    u64_t gh_fvrmphyadr;   //显存虚拟地址\n    u64_t gh_fvrmsz;       //显存大小\n    u64_t gh_onepixbits;   //一个像素字占用的数据位数\n    u64_t gh_onepixbyte;\n    u64_t gh_vbemodenr;    //vbe模式号\n    u64_t gh_bank;         //显存的bank数\n    u64_t gh_curdipbnk;    //当前bank\n    u64_t gh_nextbnk;      //下一个bank\n    u64_t gh_banksz;       //bank大小\n    u64_t gh_fontadr;      //字库地址\n    u64_t gh_fontsz;       //字库大小\n    u64_t gh_fnthight;     //字体高度\n    u64_t gh_nxtcharsx;    //下一字符显示的x坐标\n    u64_t gh_nxtcharsy;    //下一字符显示的y坐标\n    u64_t gh_linesz;       //字符行高\n    pixl_t gh_deffontpx;   //默认字体大小\n    u64_t gh_chardxw;\n    u64_t gh_flush;\n    u64_t gh_framnr;\n    u64_t gh_fshdata;      //刷新相关的\n    dftghops_t gh_opfun;   //图形驱动操作函数指针结构体\n}dftgraph_t;\ntypedef struct s_DFTGHOPS\n{\n    //读写显存数据\n    size_t (*dgo_read)(void* ghpdev,void* outp,size_t rdsz);\n    size_t (*dgo_write)(void* ghpdev,void* inp,size_t wesz);\n    sint_t (*dgo_ioctrl)(void* ghpdev,void* outp,uint_t iocode);\n    //刷新\n    void   (*dgo_flush)(void* ghpdev);\n    sint_t (*dgo_set_bank)(void* ghpdev, sint_t bnr);\n    //读写像素\n    pixl_t (*dgo_readpix)(void* ghpdev,uint_t x,uint_t y);\n    void   (*dgo_writepix)(void* ghpdev,pixl_t pix,uint_t x,uint_t y);\n    //直接读写像素 \n    pixl_t (*dgo_dxreadpix)(void* ghpdev,uint_t x,uint_t y);\n    void   (*dgo_dxwritepix)(void* ghpdev,pixl_t pix,uint_t x,uint_t y);\n    //设置x，y坐标和偏移\n    sint_t (*dgo_set_xy)(void* ghpdev,uint_t x,uint_t y);\n    sint_t (*dgo_set_vwh)(void* ghpdev,uint_t vwt,uint_t vhi);\n    sint_t (*dgo_set_xyoffset)(void* ghpdev,uint_t xoff,uint_t yoff);\n    //获取x，y坐标和偏移\n    sint_t (*dgo_get_xy)(void* ghpdev,uint_t* rx,uint_t* ry);\n    sint_t (*dgo_get_vwh)(void* ghpdev,uint_t* rvwt,uint_t* rvhi);\n    sint_t (*dgo_get_xyoffset)(void* ghpdev,uint_t* rxoff,uint_t* ryoff);\n}dftghops_t;\n//刷新显存\nvoid flush_videoram(dftgraph_t *kghp)\n{\n    kghp-&gt;gh_opfun.dgo_flush(kghp);\n    return;\n}\n</code></pre><p>不难发现，我们正是把这些实际的图形驱动函数的地址填入了这个结构体中，然后通过这个结构体，我们就可以调用到相应的函数了。</p><p>因为写这些函数都是体力活，我已经帮你搞定了，你直接使用就可以。上面的flush_videoram函数已经证明了这一想法。</p><p>来，我们测试一下，看看结果，我们图形驱动程序初始化会显示背景图片——background.bmp，这是在打包映像文件时包含进去的，你自己可以随时替换，只要是满足<strong>1024*768，24位的位图文件</strong>就行了。</p><p>下面我们要把这些函数调用起来：</p><pre><code>//在halinit.c文件中\nvoid init_hal()\n{\n    init_halplaltform();\n    return;\n}\n//在hal_start.c文件中\nvoid hal_start()\n{\n    init_hal();//初始化hal层，其中会调用初始化平台函数，在那里会调用初始化图形驱动\n    for(;;);\n    return;\n}\n</code></pre><p>接下来，让我们一起make vboxtest，应该很有成就感。一幅风景图呈现在我们面前，上面有Cosmos的版本、编译时间、CPU工作模式，内存大小等数据。这相当一个我们Cosmos的水印信息。</p><p><img src=\"https://static001.geekbang.org/resource/image/c0/83/c08ebf3fb25fddab6d4dbd24326aae83.jpg?wh=1044*921\" alt=\"\" title=\"图形驱动测试\"></p><h4>初始化内存</h4><p>首先，我们在Cosmos/hal/x86/下建立一个halmm.c文件，用于初始化内存，为了后面的内存管理器作好准备。</p><p>hal层的内存初始化比较容易，只要向内存管理器提供内存空间布局信息就可以。</p><p>你可能在想，不对啊，明明我们在二级引导器中已经获取了内存布局信息，是的，<strong>但Cosmos的内存管理器需要保存更多的信息，最好是顺序的内存布局信息，这样可以增加额外的功能属性，同时降低代码的复杂度。</strong></p><p>不难发现，BIOS提供的结构无法满足前面这些要求。不过我们也有办法解决，只要以BIOS提供的结构为基础，设计一套新的数据结构就搞定了。这个结构可以这样设计。</p><pre><code>#define PMR_T_OSAPUSERRAM 1\n#define PMR_T_RESERVRAM 2\n#define PMR_T_HWUSERRAM 8\n#define PMR_T_ARACONRAM 0xf\n#define PMR_T_BUGRAM 0xff\n#define PMR_F_X86_32 (1&lt;&lt;0)\n#define PMR_F_X86_64 (1&lt;&lt;1)\n#define PMR_F_ARM_32 (1&lt;&lt;2)\n#define PMR_F_ARM_64 (1&lt;&lt;3)\n#define PMR_F_HAL_MASK 0xff\n\ntypedef struct s_PHYMMARGE\n{\n    spinlock_t pmr_lock;//保护这个结构是自旋锁\n    u32_t pmr_type;     //内存地址空间类型\n    u32_t pmr_stype;\n    u32_t pmr_dtype;    //内存地址空间的子类型，见上面的宏\n    u32_t pmr_flgs;     //结构的标志与状态\n    u32_t pmr_stus;\n    u64_t pmr_saddr;    //内存空间的开始地址\n    u64_t pmr_lsize;    //内存空间的大小\n    u64_t pmr_end;      //内存空间的结束地址\n    u64_t pmr_rrvmsaddr;//内存保留空间的开始地址\n    u64_t pmr_rrvmend;  //内存保留空间的结束地址\n    void* pmr_prip;     //结构的私有数据指针，以后扩展所用\n    void* pmr_extp;     //结构的扩展数据指针，以后扩展所用\n}phymmarge_t;\n</code></pre><p>有些情况下内核要另起炉灶，不想把所有的内存空间都交给内存管理器去管理，所以要保留一部分内存空间，这就是上面结构中那两个pmr_rrvmsaddr、pmr_rrvmend字段的作用。</p><p>有了数据结构，我们还要写代码来操作它：</p><pre><code>u64_t initpmrge_core(e820map_t *e8sp, u64_t e8nr, phymmarge_t *pmargesp)\n{\n    u64_t retnr = 0;\n    for (u64_t i = 0; i &lt; e8nr; i++)\n    {\n        //根据一个e820map_t结构建立一个phymmarge_t结构\n        if (init_one_pmrge(&amp;e8sp[i], &amp;pmargesp[i]) == FALSE)\n        {\n            return retnr;\n        }\n        retnr++;\n    }\n    return retnr;\n}\nvoid init_phymmarge()\n{\n    machbstart_t *mbsp = &amp;kmachbsp;\n    phymmarge_t *pmarge_adr = NULL;\n    u64_t pmrgesz = 0;\n    //根据machbstart_t机器信息结构计算获得phymmarge_t结构的开始地址和大小\n    ret_phymmarge_adrandsz(mbsp, &amp;pmarge_adr, &amp;pmrgesz);\n    u64_t tmppmrphyadr = mbsp-&gt;mb_nextwtpadr;\n    e820map_t *e8p = (e820map_t *)((adr_t)(mbsp-&gt;mb_e820padr));\n    //建立phymmarge_t结构\n    u64_t ipmgnr = initpmrge_core(e8p, mbsp-&gt;mb_e820nr, pmarge_adr);\n    //把phymmarge_t结构的地址大小个数保存machbstart_t机器信息结构中\n    mbsp-&gt;mb_e820expadr = tmppmrphyadr;\n    mbsp-&gt;mb_e820exnr = ipmgnr;\n    mbsp-&gt;mb_e820exsz = ipmgnr * sizeof(phymmarge_t);\n    mbsp-&gt;mb_nextwtpadr = PAGE_ALIGN(mbsp-&gt;mb_e820expadr + mbsp-&gt;mb_e820exsz);\n    //phymmarge_t结构中地址空间从低到高进行排序，我已经帮你写好了\n    phymmarge_sort(pmarge_adr, ipmgnr);\n    return;\n}\n</code></pre><p>结合上面的代码，你会发现这是根据e820map_t结构数组，建立了一个phymmarge_t结构数组，init_one_pmrge函数正是把e820map_t结构中的信息复制到phymmarge_t结构中来。理解了这个原理，即使不看我的，你自己也会写。</p><p>下面我们把这些函数，用一个总管函数调动起来，这个总管函数叫什么名字好呢？当然是init_halmm，如下所示。</p><pre><code>void init_halmm()\n{\n    init_phymmarge();\n    //init_memmgr();\n    return;\n}\n</code></pre><p>这里init_halmm函数中还调用了init_memmgr函数，这个正是这我们内存管理器初始化函数，我会在内存管理的那节课展开讲。而init_halmm函数将要被init_hal函数调用。</p><h4>初始化中断</h4><p>什么是中断呢？为了帮你快速理解，我们先来看两种情景：</p><ol>\n<li>你在开车时，突然汽车引擎坏了，你需要修复它才能继续驾驶汽车……</li>\n<li>你在外旅游，你女朋友突然来电话了，你可以选择接电话或者不接电话，当然不接电话的后果很严重（笑）……</li>\n</ol><p>在以上两种情景中，虽然不十分恰当，但都是在做一件事时，因为一些原因而要切换到另一件事上。其实计算机中的CPU也是一样，在做一件事时，因为一些原因要转而做另一件事，于是中断产生了……</p><p>根据原因的类型不同，中断被分为两类。</p><p>异常，这是同步的，原因是错误和故障，就像汽车引擎坏了。不修复错误就不能继续运行，所以这时，CPU会跳到这种错误的处理代码那里开始运行，运行完了会返回。</p><p>为啥说它是同步的呢？这是因为如果不修改程序中的错误，下次运行程序到这里同样会发生异常。</p><p>中断，这是异步的，我们通常说的中断就是这种类型，它是因为外部事件而产生的，就好像旅游时女朋友来电话了。通常设备需要CPU关注时，会给CPU发送一个中断信号，所以这时CPU会跳到处理这种事件的代码那里开始运行，运行完了会返回。</p><p>由于不确定何种设备何时发出这种中断信号，所以它是异步的。</p><p>在x86 CPU上，最多支持256个中断，还记得前面所说的中断表和中断门描述符吗，这意味着我们要准备256个中断门描述符和256个中断处理程序的入口。</p><p>下面我们来定义它，如下所示：</p><pre><code>typedef struct s_GATE\n{\n        u16_t   offset_low;     /* 偏移 */\n        u16_t   selector;       /* 段选择子 */\n        u8_t    dcount;         /* 该字段只在调用门描述符中有效。如果在利用调用门调用子程序时引起特权级的转换和堆栈的改变，需要将外层堆栈中的参数复制到内层堆栈。该双字计数字段就是用于说明这种情况发生时，要复制的双字参数的数量。*/\n        u8_t    attr;           /* P(1) DPL(2) DT(1) TYPE(4) */\n        u16_t   offset_high;    /* 偏移的高位段 */\n        u32_t   offset_high_h;\n        u32_t   offset_resv;\n}__attribute__((packed)) gate_t;\n//定义中断表\nHAL_DEFGLOB_VARIABLE(gate_t,x64_idt)[IDTMAX];\n</code></pre><p>说到这里你会发现，中断表其实是个gate_t结构的数组，由CPU的IDTR寄存器指向，IDTMAX为256。</p><p>但是光有数组还不行，还要设置其中的数据，下面我们就来设计这个函数，建立一个文件halsgdidt.c，在其中写一个函数，代码如下。</p><pre><code>//vector 向量也是中断号\n//desc_type 中断门类型，中断门，陷阱门\n//handler 中断处理程序的入口地址\n//privilege 中断门的权限级别\nvoid set_idt_desc(u8_t vector, u8_t desc_type, inthandler_t handler, u8_t privilege)\n{\n    gate_t *p_gate = &amp;x64_idt[vector];\n    u64_t base = (u64_t)handler;\n    p_gate-&gt;offset_low = base &amp; 0xFFFF;\n    p_gate-&gt;selector = SELECTOR_KERNEL_CS;\n    p_gate-&gt;dcount = 0;\n    p_gate-&gt;attr = (u8_t)(desc_type | (privilege &lt;&lt; 5));\n    p_gate-&gt;offset_high = (u16_t)((base &gt;&gt; 16) &amp; 0xFFFF);\n    p_gate-&gt;offset_high_h = (u32_t)((base &gt;&gt; 32) &amp; 0xffffffff);\n    p_gate-&gt;offset_resv = 0;\n    return;\n}\n</code></pre><p>上面的代码，正是按照要求，把这些数据填入中断门描述符中的。有了中断门之后，还差中断入口处理程序，中断入口处理程序只负责这三件事：</p><p>1.保护CPU 寄存器，即中断发生时的程序运行的上下文。<br>\n2.调用中断处理程序，这个程序可以是修复异常的，可以是设备驱动程序中对设备响应的程序。<br>\n3.恢复CPU寄存器，即恢复中断时程序运行的上下文，使程序继续运行。</p><p>以上这些操作又要用汇编代码才可以编写，我觉得这是内核中最重要的部分，所以我们建立一个文件，并用kernel.asm命名。</p><p>我们先来写好完成以上三个功能的汇编宏代码，避免写256遍同样的代码，代码如下所示。</p><pre><code>//保存中断后的寄存器\n%macro\tSAVEALL\t0\n\tpush rax\n\tpush rbx\n\tpush rcx\n\tpush rdx\n\tpush rbp\n\tpush rsi\n\tpush rdi\n\tpush r8\n\tpush r9\n\tpush r10\n\tpush r11\n\tpush r12\n\tpush r13\n\tpush r14\n\tpush r15\n\txor r14,r14\n\tmov r14w,ds\n\tpush r14\n\tmov r14w,es\n\tpush r14\n\tmov r14w,fs\n\tpush r14\n\tmov r14w,gs\n\tpush r14\n%endmacro\n//恢复中断后寄存器\n%macro\tRESTOREALL\t0\n\tpop r14\n\tmov gs,r14w\n\tpop r14 \n\tmov fs,r14w\n\tpop r14\n\tmov es,r14w\n\tpop r14\n\tmov ds,r14w\n\tpop r15\n\tpop r14\n\tpop r13\n\tpop r12\n\tpop r11\n\tpop r10\n\tpop r9\n\tpop r8\n\tpop rdi\n\tpop rsi\n\tpop rbp\n\tpop rdx\n\tpop rcx\n\tpop rbx\n\tpop rax\n\tiretq\n%endmacro\n//保存异常下的寄存器\n%macro\tSAVEALLFAULT 0\n\tpush rax\n\tpush rbx\n\tpush rcx\n\tpush rdx\n\tpush rbp\n\tpush rsi\n\tpush rdi\n\tpush r8\n\tpush r9\n\tpush r10\n\tpush r11\n\tpush r12\n\tpush r13\n\tpush r14\n\tpush r15\n\txor r14,r14\n\tmov r14w,ds\n\tpush r14\n\tmov r14w,es\n\tpush r14\n\tmov r14w,fs\n\tpush r14\n\tmov r14w,gs\n\tpush r14\n%endmacro\n//恢复异常下寄存器\n%macro\tRESTOREALLFAULT\t0\n\tpop r14\n\tmov gs,r14w\n\tpop r14 \n\tmov fs,r14w\n\tpop r14\n\tmov es,r14w\n\tpop r14\n\tmov ds,r14w\n\tpop r15\n\tpop r14\n\tpop r13\n\tpop r12\n\tpop r11\n\tpop r10\n\tpop r9\n\tpop r8\n\tpop rdi\n\tpop rsi\n\tpop rbp\n\tpop rdx\n\tpop rcx\n\tpop rbx\n\tpop rax\n\tadd rsp,8\n\tiretq\n%endmacro\n//没有错误码CPU异常\n%macro\tSRFTFAULT 1\n\tpush\t  _NOERRO_CODE\n\tSAVEALLFAULT\n\tmov r14w,0x10\n\tmov ds,r14w\n\tmov es,r14w\n\tmov fs,r14w\n\tmov gs,r14w\n\tmov \trdi,%1 ;rdi, rsi\n\tmov \trsi,rsp\n\tcall \thal_fault_allocator\n\tRESTOREALLFAULT\n%endmacro\n//CPU异常\n%macro\tSRFTFAULT_ECODE 1\n\tSAVEALLFAULT\n\tmov r14w,0x10\n\tmov ds,r14w\n\tmov es,r14w\n\tmov fs,r14w\n\tmov gs,r14w\n\tmov \trdi,%1\n\tmov \trsi,rsp\n\tcall \thal_fault_allocator\n\tRESTOREALLFAULT\n%endmacro\n//硬件中断\n%macro\tHARWINT\t1\n\tSAVEALL\n\tmov r14w,0x10\n\tmov ds,r14w\n\tmov es,r14w\n\tmov fs,r14w\n\tmov gs,r14w\n\tmov\trdi, %1\n\tmov \trsi,rsp\n\tcall    hal_intpt_allocator\n\tRESTOREALL\n%endmacro\n</code></pre><p>别看前面的代码这么长，其实<strong>最重要的只有两个指令：push、pop</strong>，这两个正是用来压入寄存器和弹出寄存器的，正好可以用来保存和恢复CPU所有的通用寄存器。</p><p>有的CPU异常，CPU自动把异常码压入到栈中，而有的CPU异常没有异常码，<strong>为了统一，我们对没有异常码的手动压入一个常数，维持栈的平衡。</strong></p><p>有了中断异常处理的宏，我们还要它们变成中断异常的处理程序入口点函数。汇编函数其实就是一个标号加一段汇编代码，C编译器把C语言函数编译成汇编代码后，也是标号加汇编代码，函数名就是标号。</p><p>下面我们在kernel.asm中写好它们：</p><pre><code>//除法错误异常 比如除0\nexc_divide_error:\n\tSRFTFAULT 0\n//单步执行异常\nexc_single_step_exception:\n\tSRFTFAULT 1\nexc_nmi:\n\tSRFTFAULT 2\n//调试断点异常\nexc_breakpoint_exception:\n\tSRFTFAULT 3\n//溢出异常\nexc_overflow:\n\tSRFTFAULT 4\n//段不存在异常\nexc_segment_not_present:\n\tSRFTFAULT_ECODE 11\n//栈异常\nexc_stack_exception:\n\tSRFTFAULT_ECODE 12\n//通用异常\nexc_general_protection:\n\tSRFTFAULT_ECODE 13\n//缺页异常\nexc_page_fault:\n\tSRFTFAULT_ECODE 14\nhxi_exc_general_intpfault:\n\tSRFTFAULT 256\n//硬件1～7号中断\nhxi_hwint00:\n\tHARWINT\t(INT_VECTOR_IRQ0+0)\nhxi_hwint01:\n\tHARWINT\t(INT_VECTOR_IRQ0+1)\nhxi_hwint02:\n\tHARWINT\t(INT_VECTOR_IRQ0+2)\nhxi_hwint03:\n\tHARWINT\t(INT_VECTOR_IRQ0+3)\nhxi_hwint04:\n\tHARWINT\t(INT_VECTOR_IRQ0+4)\nhxi_hwint05:\n\tHARWINT\t(INT_VECTOR_IRQ0+5)\nhxi_hwint06:\n\tHARWINT\t(INT_VECTOR_IRQ0+6)\nhxi_hwint07:\n\tHARWINT\t(INT_VECTOR_IRQ0+7)\n</code></pre><p>为了突出重点，这里没有全部展示代码 ，你只用搞清原理就行了。那有了中断处理程序的入口地址，下面我们就可以在halsgdidt.c文件写出函数设置中断门描述符了，代码如下。</p><pre><code>void init_idt_descriptor()\n{\n//一开始把所有中断的处理程序设置为保留的通用处理程序\n    for (u16_t intindx = 0; intindx &lt;= 255; intindx++)\n    {\n        set_idt_desc((u8_t)intindx, DA_386IGate, hxi_exc_general_intpfault, PRIVILEGE_KRNL);\n    }\n    set_idt_desc(INT_VECTOR_DIVIDE, DA_386IGate, exc_divide_error, PRIVILEGE_KRNL);\n    set_idt_desc(INT_VECTOR_DEBUG, DA_386IGate, exc_single_step_exception, PRIVILEGE_KRNL);\n    set_idt_desc(INT_VECTOR_NMI, DA_386IGate, exc_nmi, PRIVILEGE_KRNL);\n    set_idt_desc(INT_VECTOR_BREAKPOINT, DA_386IGate, exc_breakpoint_exception, PRIVILEGE_USER);\n    set_idt_desc(INT_VECTOR_OVERFLOW, DA_386IGate, exc_overflow, PRIVILEGE_USER);\n//篇幅所限，未全部展示\n    set_idt_desc(INT_VECTOR_PAGE_FAULT, DA_386IGate, exc_page_fault, PRIVILEGE_KRNL);\n    set_idt_desc(INT_VECTOR_IRQ0 + 0, DA_386IGate, hxi_hwint00, PRIVILEGE_KRNL);\n    set_idt_desc(INT_VECTOR_IRQ0 + 1, DA_386IGate, hxi_hwint01, PRIVILEGE_KRNL);\n    set_idt_desc(INT_VECTOR_IRQ0 + 2, DA_386IGate, hxi_hwint02, PRIVILEGE_KRNL);\n    set_idt_desc(INT_VECTOR_IRQ0 + 3, DA_386IGate, hxi_hwint03, PRIVILEGE_KRNL);\n    //篇幅所限，未全部展示\n     return;\n}\n</code></pre><p>上面的代码已经很明显了，一开始把所有中断的处理程序设置为保留的通用处理程序，避免未知中断异常发生了CPU无处可去，然后对已知的中断和异常进一步设置，这会覆盖之前的通用处理程序，这样就可以确保万无一失。</p><p>下面我们把这些代码整理一下，安装到具体的调用路径上，让上层调用者调用到就好了。</p><p>我们依然在halintupt.c文件中写上init_halintupt()函数：</p><pre><code>void init_halintupt()\n{\n    init_idt_descriptor();\n    init_intfltdsc();\n    return;\n}\n</code></pre><p>到此为止，CPU体系层面的中断就初始化完成了。你会发现，我们在init_halintupt()函数中还调用了<strong>init_intfltdsc()函数</strong>，这个函数是干什么的呢？请往下看。</p><p>我们先来设计一下Cosmos的中断处理框架，后面我们把中断和异常统称为中断，因为它们的处理方式相同。</p><p>前面我们只是解决了中断的CPU相关部分，而CPU只是响应中断，但是并不能解决产生中断的问题。</p><p>比如缺页中断来了，我们要解决内存地址映射关系，程序才可以继续运行。再比如硬盘中断来了，我们要读取硬盘的数据，要处理这问题，就要写好相应的处理函数。</p><p>因为有些处理是内核所提供的，而有些处理函数是设备驱动提供的，想让它们和中断关联起来，就要好好设计<strong>中断处理框架</strong>了。</p><p>下面我们来画幅图，描述中断框架的设计：</p><p><img src=\"https://static001.geekbang.org/resource/image/fd/7a/fd2cd9e5b63cd7e52cd68b65e81aee7a.jpg?wh=4705*2362\" alt=\"\" title=\"中断框架设计图\"></p><p>可以看到，中断、异常分发器的左侧的东西我们已经处理完成，下面需要写好中断、异常分发器和中断异常描述符。</p><p>我们先来搞定中断异常描述，结合框架图，中断异常描述也是个表，它在C语言中就是个结构数组，让我们一起来写好这个数组：</p><pre><code>typedef struct s_INTFLTDSC{    \n    spinlock_t  i_lock;    \n    u32_t       i_flg;    \n    u32_t       i_stus;    \n    uint_t      i_prity;        //中断优先级    \n    uint_t      i_irqnr;        //中断号    \n    uint_t      i_deep;         //中断嵌套深度    \n    u64_t       i_indx;         //中断计数    \n    list_h_t    i_serlist;      //也可以使用中断回调函数的方式\n    uint_t      i_sernr;        //中断回调函数个数   \n    list_h_t    i_serthrdlst;   //中断线程链表头    \n    uint_t      i_serthrdnr;    //中断线程个数    \n    void*       i_onethread;    //只有一个中断线程时直接用指针    \n    void*       i_rbtreeroot;   //如果中断线程太多则按优先级组成红黑树\n    list_h_t    i_serfisrlst;      \n    uint_t      i_serfisrnr;       \n    void*       i_msgmpool;     //可能的中断消息池    \n    void*       i_privp;    \n    void*       i_extp;\n}intfltdsc_t;\n</code></pre><p>上面结构中，记录了中断的优先级。因为有些中断可以稍后执行，而有的中断需要紧急执行，所以要设计一个优先级。其中还有中断号，中断计数等统计信息。</p><p>中断可以由线程的方式执行，也可以是一个回调函数，该函数的地址放另一个结构体中，这个结构体我已经帮你写好了，如下所示。</p><pre><code>typedef drvstus_t (*intflthandle_t)(uint_t ift_nr,void* device,void* sframe); //中断处理函数的指针类型\ntypedef struct s_INTSERDSC{    \n    list_h_t    s_list;        //在中断异常描述符中的链表\n    list_h_t    s_indevlst;    //在设备描述描述符中的链表\n    u32_t       s_flg;        \n    intfltdsc_t* s_intfltp;    //指向中断异常描述符 \n    void*       s_device;      //指向设备描述符\n    uint_t      s_indx;    \n    intflthandle_t s_handle;   //中断处理的回调函数指针\n}intserdsc_t;\n</code></pre><p>如果内核或者设备驱动程序要安装一个中断处理函数，就要先申请一个intserdsc_t结构体，然后把中断函数的地址写入其中，最后把这个结构挂载到对应的intfltdsc_t结构中的i_serlist链表中。</p><p>你可能要问了，为什么不能直接把中断处理函数放在intfltdsc_t结构中呢，还要多此一举搞个intserdsc_t结构体呢？</p><p>这是因为我们的计算机中可能有很多设备，每个设备都可能产生中断，但是中断控制器的中断信号线是有限的。你可以这样理解：中断控制器最多只能产生几十号中断号，而设备不止几十个，所以会有多个设备共享一根中断信号线。</p><p>这就导致一个中断发生后，无法确定是哪个设备产生的中断，所以我们干脆让设备驱动程序来决定，因为它是最了解设备的。</p><p>这里我们让这个intfltdsc_t结构上的所有中断处理函数都依次执行，查看是不是自己的设备产生了中断，如果是就处理，不是则略过。</p><p>好，明白了这两个结构之后，我们就要开始初始化了。首先是在halglobal.c文件定义intfltdsc_t结构。</p><pre><code>//定义intfltdsc_t结构数组大小为256\nHAL_DEFGLOB_VARIABLE(intfltdsc_t,machintflt)[IDTMAX];\n</code></pre><p>下面我们再来实现中断、异常分发器函数，如下所示。</p><pre><code>//中断处理函数\nvoid hal_do_hwint(uint_t intnumb, void *krnlsframp)\n{    \n    intfltdsc_t *ifdscp = NULL;    \n    cpuflg_t cpuflg;\n    //根据中断号获取中断异常描述符地址    \n    ifdscp = hal_retn_intfltdsc(intnumb);\n    //对断异常描述符加锁并中断    \n    hal_spinlock_saveflg_cli(&amp;ifdscp-&gt;i_lock, &amp;cpuflg);    \n    ifdscp-&gt;i_indx++;    \n    ifdscp-&gt;i_deep++;\n    //运行中断处理的回调函数\n    hal_run_intflthandle(intnumb, krnlsframp);    \n    ifdscp-&gt;i_deep--;\n    //解锁并恢复中断状态    \n    hal_spinunlock_restflg_sti(&amp;ifdscp-&gt;i_lock, &amp;cpuflg);    \n    return;\n}\n//异常分发器\nvoid hal_fault_allocator(uint_t faultnumb, void *krnlsframp)\n{\n    //我们的异常处理回调函数也是放在中断异常描述符中的\n    hal_do_hwint(faultnumb, krnlsframp);\n    return;\n}\n//中断分发器\nvoid hal_hwint_allocator(uint_t intnumb, void *krnlsframp)\n{\n    hal_do_hwint(intnumb, krnlsframp);\n    return;\n}\n</code></pre><p>前面的代码确实是按照我们的中断框架设计实现的，下面我们去实现hal_run_intflthandle函数，它负责调用中断处理的回调函数。</p><pre><code>void hal_run_intflthandle(uint_t ifdnr, void *sframe)\n{    \n    intserdsc_t *isdscp;    \n    list_h_t *lst;\n    //根据中断号获取中断异常描述符地址    \n    intfltdsc_t *ifdscp = hal_retn_intfltdsc(ifdnr);\n    //遍历i_serlist链表    \n    list_for_each(lst, &amp;ifdscp-&gt;i_serlist)    \n    {   \n        //获取i_serlist链表上对象即intserdsc_t结构\n        isdscp = list_entry(lst, intserdsc_t, s_list);  \n        //调用中断处理回调函数      \n        isdscp-&gt;s_handle(ifdnr, isdscp-&gt;s_device, sframe);    \n    }\n    return;\n}\n</code></pre><p>上述代码已经很清楚了，循环遍历intfltdsc_t结构中，i_serlist链表上所有挂载的intserdsc_t结构，然后调用intserdsc_t结构中的中断处理的回调函数。</p><p>我们Cosmos链表借用了Linux所用的链表，代码我已经帮你写好了，放在了list.h和list_t.h文件中，请自行查看。</p><h4>初始化中断控制器</h4><p>我们把CPU端的中断搞定了以后，还有设备端的中断，这个可以交给设备驱动程序，但是CPU和设备之间的中断控制器，还需要我们出面解决。</p><p>多个设备的中断信号线都会连接到中断控制器上，中断控制器可以决定启用或者屏蔽哪些设备的中断，还可以决定设备中断之间的优先线，所以它才叫中断控制器。</p><p>x86平台上的中断控制器有多种，最开始是8259A，然后是IOAPIC，最新的是MSI-X。为了简单的说明原理，我们选择了8259A中断控制器。</p><p>8259A在任何x86平台上都可以使用，x86平台使用了两片8259A芯片，以级联的方式存在。它拥有15个中断源（即可以有15个中断信号接入）。让我们看看8259A在系统上的框架图：</p><p><img src=\"https://static001.geekbang.org/resource/image/4d/09/4d81f7feb668abf30c5cced619549709.jpg?wh=3808*2164\" alt=\"\" title=\"8259A在系统上的框架图\"></p><p>上面直接和CPU连接的是主8259A，下面的是从8259A，每一个8259A芯片都有两个I/O端口，我们可以通过它们对8259A进行编程。主8259A的端口地址是0x20，0x21；从8259A的端口地址是0xA0，0xA1。</p><p>下面我们来做代码初始化，我们程序员可以向8259A写两种命令字： ICW和OCW；ICW这种命令字用来实现8259a芯片的初始化。而OCW这种命令用来向8259A发布命令，以对其进行控制。OCW可以在8259A被初始化之后的任何时候被使用。</p><p>我已经把代码定好了，放在了8259.c文件中，如下所示：</p><pre><code>void init_i8259()\n{\n    //初始化主从8259a\n    out_u8_p(ZIOPT, ICW1);    \n    out_u8_p(SIOPT, ICW1);    \n    out_u8_p(ZIOPT1, ZICW2);    \n    out_u8_p(SIOPT1, SICW2);    \n    out_u8_p(ZIOPT1, ZICW3);    \n    out_u8_p(SIOPT1, SICW3);    \n    out_u8_p(ZIOPT1, ICW4);    \n    out_u8_p(SIOPT1, ICW4);\n    //屏蔽全部中断源\n    out_u8_p(ZIOPT1, 0xff);    \n    out_u8_p(SIOPT1, 0xff);        \n    return;\n}\n\n</code></pre><p>如果你要了解8259A的细节，就是上述代码中为什么要写入这些数据，你可以自己在Intel官方网站上搜索8259A的数据手册，自行查看。</p><p>这里你只要在init_halintupt()函数的最后，调用这个函数就行。你有没有想过，既然我们是研究操作系统不是要写硬件驱动，为什么要在初始化中断控制器后，屏蔽所有的中断源呢？因为我们Cosmos在初始化阶段还不能处理中断。</p><p>到此，我们的Cosmos的hal层初始化就结束了。关于内存管理器的初始化，我会在内存管理模块讲解，你先有个印象就行。</p><h3>进入内核层</h3><p>hal层的初始化已经完成，按照前面的设计，我们的Cosmos还有内核层，我们下面就要进入到内核层，建立一个文件，写上一个函数，作为本课程的结尾。</p><p>但是这个函数是个<strong>空函数</strong>，目前什么也不做，它是为Cosmos内核层初始化而存在的，但是由于课程只进行到这里，所以我只是写个空函数，为后面的课程做好准备。</p><p>由于内核层是从hal层进入的，必须在hal_start()函数中被调用，所以在此完成这个函数——init_krl()。</p><pre><code>void init_krl()\n{ \n    //禁止函数返回    \n    die(0);    \n    return;\n}\n\n</code></pre><p>下面我们在hal_start()函数中调用它就行了，如下所示</p><pre><code>void hal_start()\n{   \n    //初始化Cosmos的hal层 \n    init_hal();\n    //初始化Cosmos的内核层    \n    init_krl();    \n    return;\n}\n</code></pre><p>从上面的代码中，不难发现Cosmos的hal层初始化完成后，就自动进入了Cosmos内核层的初始化。至此本课程已经结束。</p><h2>重点回顾</h2><p>写一个C函数是容易的，但是写操作系统的第一个C函数并不容易，好在我们一路坚持，没有放弃，才取得了这个阶段性的胜利。但温故而知新，对学过的东西要学而时习之，下面我们来回顾一下本课程的重点。</p><p>1.Cosmos的第一个C函数产生了，它十分简单但极其有意义，它的出现标志着C语言的运行环境已经完善。从此我们可以用C语言高效地开发操作系统了，由爬行时代进入了跑步前行的状态，可喜可贺。</p><p>2.第一个C函数，干的第一件重要工作就是<strong>调用hal层的初始化函数。</strong>这个初始化函数首先初始化了平台，初始化了机器信息结构供内核的其它代码使用，还初始化了我们图形显示驱动、显示了背景图片；其次是初始化了内存管理相关的数据结构；接着初始了中断，中断处理框架是两层，所以最为复杂；最后初始化了中断控制器。</p><p>3.当hal层初始化完成了，我们就进入了内核层，由于到了课程的尾声，我们先暂停在这里。</p><p>在这节课里我帮你写了很多代码，那些代码非常简单和枯燥，但是必须要有它们才可以。综合我们前面讲过的知识，我相信你有能力看懂它们。</p><h2>思考题</h2><p>请你梳理一下，Cosmos hal层的函数调用关系。</p><p>欢迎你在留言区跟我交流互动，也欢迎把这节课转发给你的朋友和同事。</p><p>好，我是LMOS，咱们下节课见！</p>","comments":[{"had_liked":false,"id":296533,"user_name":"老王","can_delete":false,"product_type":"c1","uid":2246251,"ip_address":"","ucode":"D629648D2F2FFA","user_header":"https://static001.geekbang.org/account/avatar/00/22/46/6b/e766c18d.jpg","comment_is_top":false,"comment_ctime":1623032861,"is_pvip":false,"replies":[{"id":"107724","content":"感谢老铁的分享，特别赞。","user_name":"编辑回复","comment_id":296533,"uid":"1501385","ip_address":"","utype":2,"ctime":1623067015,"user_name_real":"赵宇新"}],"discussion_count":8,"race_medal":0,"score":"156241855517","product_id":100078401,"comment_content":"有了前面基础实验很快就做通了，只是实验步骤课程没有说<br>1.下载最新源码<br>git clone https:&#47;&#47;gitee.com&#47;lmos&#47;cosmos.git<br>2 进入课程的目录 <br>cd   cosmos&#47;lesson13&#47;Cosmos <br>3 编译<br>make all<br>这个过程中可能会报告错误<br>..&#47;hal&#47;x86&#47;kernel.asm:6: fatal: unable to open include file `kernel.inc&#39;<br>krnlbuidrule.mk:14: recipe for target &#39;kernel.o&#39; failed<br>make[2]: *** [kernel.o] Error 1<br>Makefile.x86:28: recipe for target &#39;all&#39; failed<br>make[1]: *** [all] Error 2<br>Makefile:59: recipe for target &#39;all&#39; failed<br>make: *** [all] Error 2<br>警告不管<br>解决错误即可<br>使用 find -name &quot;kernel.inc&quot; 搜索头文件的位置<br>.&#47;include&#47;halinc&#47;kernel.inc<br>把这个头文件拷贝到和kernel.asm相同的目录。或者是更改..&#47;hal&#47;x86&#47;kernel.asm<br>第6行 改为%include &quot;..&#47;include&#47;halinc&#47;kernel.inc&quot;<br>再次make 可以正常编译<br>4.生成内核镜像文件<br>make cplmildr    （这一步会拷贝  initldrimh.bin  initldrkrl.bin initldrsve.bin 到源码顶层目录的release下 ）<br>make cprelease   （这一步会拷贝 Cosmos.bin 到源码顶层目录的release下 ）<br>make KIMG （这一步会调用lmoskrlimg 把initldrimh.bin initldrkrl.bin initldrsve.bin <br>Cosmos.bin logo.bmp background.bmp   font.fnt按一定的格式打包成Cosmos.eki镜像文件 ）<br>5.拷贝Cosmos.eki镜像文件到虚拟磁盘<br>源码目录已经创建了磁盘文件hd.img（如果没有这个文件可以按照前面的课程自己创建）<br>sudo mount -o loop .&#47;hd.img .&#47;hdisk&#47; (挂载虚拟磁盘到hidsk目录，hd.img hidsk目录已经存在)<br>sudo cp release&#47;Cosmos.eki  hdisk&#47;boot  (拷贝编译好的镜像Cosmos.eki 到虚拟磁盘中)<br>sudo umount hdisk  (卸载挂载目录&#47;或者是目录和磁盘中的内容)<br>VBoxManage convertfromraw .&#47;hd.img --format VDI .&#47;hd.vdi (把hd.img转为hd.vdi格式，因为课程使用的虚拟机是VirtualBox)<br>6.参考前面课程使用hd.vdi启动系统<br> <br>总结：<br>要想搞清楚整个程序的流程，除了分析代码本身，还需要深入分析Makefile和各个链接脚本","like_count":37,"discussions":[{"author":{"id":1501385,"avatar":"https://static001.geekbang.org/account/avatar/00/16/e8/c9/59bcd490.jpg","nickname":"听水的湖","note":"","ucode":"B1759F90165D81","race_medal":0,"user_type":8,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":521476,"discussion_content":"感谢老铁的分享，特别赞。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1623067015,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":4}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":2621577,"avatar":"https://static001.geekbang.org/account/avatar/00/28/00/89/e5f1b3c3.jpg","nickname":"刘博昊","note":"","ucode":"35EBABB0B574C0","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":378077,"discussion_content":"感谢整理，make cplmildr 和 make cprelease 中间好像还需要一个make cpkrnl, 参考Makefile 第 104行","likes_number":2,"is_delete":false,"is_hidden":false,"ctime":1623051244,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1182103,"avatar":"https://static001.geekbang.org/account/avatar/00/12/09/97/a13db556.jpg","nickname":"徐旭","note":"","ucode":"0B00D3C3070A43","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":578852,"discussion_content":"启动报错 INITKLDR DIE ERROR:S  ,不知道是不是 和 物理机cpu(Intel(R) Core(TM) i7-10700F CPU @ 2.90GHz   2.90 GHz)有关 (详情见截图:  http://t.csdn.cn/tN2Vz)","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1657068210,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":2811311,"avatar":"","nickname":"Geek5167","note":"","ucode":"1892D84F47E887","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":543857,"discussion_content":"是的，要使用make vboxtest命令","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1641312170,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1449550,"avatar":"https://static001.geekbang.org/account/avatar/00/16/1e/4e/56a0b904.jpg","nickname":"sakura","note":"","ucode":"D382C3325F2F59","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":389823,"discussion_content":"感谢步骤分享","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1629444374,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1977717,"avatar":"https://static001.geekbang.org/account/avatar/00/1e/2d/75/4936ecc2.jpg","nickname":"的是","note":"","ucode":"BA89D6AB9801E4","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":379368,"discussion_content":"@老王 @东哥，帮忙是否可以帮忙看一下是什么情况","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1623849000,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1977717,"avatar":"https://static001.geekbang.org/account/avatar/00/1e/2d/75/4936ecc2.jpg","nickname":"的是","note":"","ucode":"BA89D6AB9801E4","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":379367,"discussion_content":"make all编译完了没有，release/Cosmos.eki这个文件","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1623848967,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":1,"child_discussions":[{"author":{"id":2732861,"avatar":"https://static001.geekbang.org/account/avatar/00/29/b3/3d/e027e747.jpg","nickname":"dodo","note":"","ucode":"50387ADA2DEA54","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1977717,"avatar":"https://static001.geekbang.org/account/avatar/00/1e/2d/75/4936ecc2.jpg","nickname":"的是","note":"","ucode":"BA89D6AB9801E4","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":389422,"discussion_content":"用make vboxtest","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1629273338,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":379367,"ip_address":""},"score":389422,"extra":""}]}]},{"had_liked":false,"id":296711,"user_name":"neohope","can_delete":false,"product_type":"c1","uid":1043475,"ip_address":"","ucode":"C0268F6E7E2B6E","user_header":"https://static001.geekbang.org/account/avatar/00/0f/ec/13/49e98289.jpg","comment_is_top":false,"comment_ctime":1623124947,"is_pvip":false,"replies":[{"id":"107863","content":"老哥 6666","user_name":"作者回复","comment_id":296711,"uid":"1345199","ip_address":"","utype":1,"ctime":1623245622,"user_name_real":"LMOS"}],"discussion_count":2,"race_medal":0,"score":"61752667091","product_id":100078401,"comment_content":"稍微整理了一下：<br><br>一、HAL层调用链<br>hal_start()<br><br>A、先去处理HAL层的初始化<br>-&gt;init_hal()<br><br>-&gt;-&gt;init_halplaltform()初始化平台<br>-&gt;-&gt;-&gt;init_machbstart()<br>主要是把二级引导器建立的机器信息结构，复制到了hal层一份给内核使用，同时也为释放二级引导器占用内存做好准备。<br>其做法就是拷贝了一份mbsp到kmbsp，其中用到了虚拟地址转换hyadr_to_viradr<br>-&gt;-&gt;-&gt;init_bdvideo()<br>初始化图形机构<br>初始化BGA显卡 或 VBE图形显卡信息【函数指针的使用】<br>清空屏幕<br>找到&quot;background.bmp&quot;，并显示背景图片<br>-&gt;-&gt;-&gt;-&gt;hal_dspversion（）<br>输出版本号等信息【vsprintfk】<br>其中，用ret_charsinfo根据字体文件获取字符像素信息<br><br>-&gt;-&gt;move_img2maxpadr()<br>将移动initldrsve.bin到最大地址<br><br>-&gt;-&gt;init_halmm()初始化内存<br>-&gt;-&gt;-&gt;init_phymmarge<br>申请phymmarge_t内存<br>根据 e820map_t 结构数组，复制数据到phymmarge_t 结构数组<br>按内存开始地址进行排序<br><br>-&gt;-&gt;init_halintupt();初始化中断<br>-&gt;-&gt;-&gt;init_descriptor();初始化GDT描述符x64_gdt<br>-&gt;-&gt;-&gt;init_idt_descriptor();初始化IDT描述符x64_idt，绑定了中断编号及中断处理函数<br>-&gt;-&gt;-&gt;init_intfltdsc();初始化中断异常表machintflt，拷贝了中断相关信息<br>-&gt;-&gt;-&gt;init_i8259();初始化8529芯片中断<br>-&gt;-&gt;-&gt;i8259_enabled_line(0);好像是取消mask，开启中断请求<br><br>最后，跳转去处理内核初始化<br>-&gt;init_krl()<br><br>二、中断调用链，以硬件中断为例<br>A、kernel.inc中，通过宏定义，进行了中断定义。以硬件中断为例，可以在kernel.inc中看到：<br>宏为HARWINT，硬件中断分发器函数为hal_hwint_allocator<br>%macro  HARWINT 1<br>    保存现场......<br>    mov   rdi, %1<br>    mov   rsi,rsp<br>    call    hal_hwint_allocator<br>    恢复现场......<br>%endmacro<br><br>B、而在kernel.asm中，定义了各种硬件中断编号，比如hxi_hwint00，作为中断处理入口<br>ALIGN   16<br>hxi_hwint00:<br>    HARWINT (INT_VECTOR_IRQ0+0)<br><br>C、有硬件中断时，会先到达中断处理入口，然后调用到硬件中断分发器函数hal_hwint_allocator<br>第一个参数为中断编号，在rdi<br>第二个参数为中断发生时的栈指针，在rsi<br>然后调用异常处理函数hal_do_hwint<br><br>D、hal_do_hwint<br>加锁<br>调用中断回调函数hal_run_intflthandle<br>释放锁<br><br>E、hal_run_intflthandle<br>先获取中断异常表machintflt<br>然后调用i_serlist 链表上所有挂载intserdsc_t 结构中的中断处理的回调函数，是否处理由函数自己判断<br><br>F、中断处理完毕<br><br>G、异常处理类似，只是触发源头不太一样而已","like_count":15,"discussions":[{"author":{"id":1345199,"avatar":"https://static001.geekbang.org/account/avatar/00/14/86/af/99219321.jpg","nickname":"LMOS","note":"","ucode":"B037712C8B8B3C","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":521559,"discussion_content":"老哥 6666","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1623245622,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1361412,"avatar":"http://thirdwx.qlogo.cn/mmopen/uqaRIfRCAhJ6t1z92XYEzQw2NWsxDM2TtawdN4tGyCDHf3SgymGbkTAypjNEYa5JH5jW2RR2Fepa6OqCy9VWHwmw7S3kTbXa/132","nickname":"憨蛋儿","note":"","ucode":"4AFD425F007812","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":555062,"discussion_content":"这个nb","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1646730632,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":296542,"user_name":"pedro","can_delete":false,"product_type":"c1","uid":1200704,"ip_address":"","ucode":"F40C839DDFD599","user_header":"https://static001.geekbang.org/account/avatar/00/12/52/40/e57a736e.jpg","comment_is_top":false,"comment_ctime":1623035411,"is_pvip":false,"replies":[{"id":"107732","content":"铁汁牛皮","user_name":"作者回复","comment_id":296542,"uid":"1345199","ip_address":"","utype":1,"ctime":1623072776,"user_name_real":"LMOS"}],"discussion_count":3,"race_medal":0,"score":"57457610259","product_id":100078401,"comment_content":"[ hal_start ] --&gt; [ init_hal ] --&gt; [ init_krl ]<br>[ init_hal ] --&gt; [ init_halplaltform ] --&gt; [ move_img2maxpadr ] --&gt; [ init_halmm ] --&gt; [ init_halintupt ]<br>[ init_krl ] --&gt; [ die ]<br>[ init_halplaltform ] --&gt; [ init_machbstart ] --&gt; [ init_bdvideo ]<br>[ init_halmm ] --&gt; [ init_phymmarge ]<br>[ init_halintupt ] --&gt; [ init_descriptor ] --&gt; [ init_idt_descriptor ] --&gt; [ init_intfltdsc ] --&gt; [ init_i8259 ] --&gt; [ i8259_enabled_line ]<br><br><br>如果有 graph-easy 的同学，直接 CV，然后：<br>```sh<br>graph-easy calltree.txt<br>```","like_count":13,"discussions":[{"author":{"id":1345199,"avatar":"https://static001.geekbang.org/account/avatar/00/14/86/af/99219321.jpg","nickname":"LMOS","note":"","ucode":"B037712C8B8B3C","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":521478,"discussion_content":"铁汁牛皮","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1623072776,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1115232,"avatar":"https://static001.geekbang.org/account/avatar/00/11/04/60/64d166b6.jpg","nickname":"Fan","note":"","ucode":"3BF28670FD9407","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":378260,"discussion_content":"graph-easy  是什么？贴个链接来看看","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1623133818,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":1,"child_discussions":[{"author":{"id":1200704,"avatar":"https://static001.geekbang.org/account/avatar/00/12/52/40/e57a736e.jpg","nickname":"pedro","note":"","ucode":"F40C839DDFD599","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1115232,"avatar":"https://static001.geekbang.org/account/avatar/00/11/04/60/64d166b6.jpg","nickname":"Fan","note":"","ucode":"3BF28670FD9407","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":378268,"discussion_content":"Google一下啥都有","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1623135124,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":378260,"ip_address":""},"score":378268,"extra":""}]}]},{"had_liked":false,"id":317055,"user_name":"LunaElf","can_delete":false,"product_type":"c1","uid":1001745,"ip_address":"","ucode":"22E002C13C6EF2","user_header":"https://static001.geekbang.org/account/avatar/00/0f/49/11/75a31d88.jpg","comment_is_top":false,"comment_ctime":1634651526,"is_pvip":false,"replies":[{"id":"114788","content":"66666","user_name":"作者回复","comment_id":317055,"uid":"1345199","ip_address":"","utype":1,"ctime":1634689077,"user_name_real":"LMOS"}],"discussion_count":1,"race_medal":0,"score":"14519553414","product_id":100078401,"comment_content":"Cosmos hal 层函数调用关系：<br><br>1. `hal_start()`<br>    1. `init_hal()`<br>        1. `init_halplatform()`<br>            1. `init_machbstart()`<br>                1. `machbstart_t_init()`<br>            2. `init_bdvideo()`<br>        2. `init_halmm()`<br>            1. `init_phymmarge()`<br>                1. `initpmrge_core()`<br>        3. `init_halintupt()`<br>            1. `init_idt_descriptor()`<br>                1. `set_idt_desc()`<br>            2. `init_intfltdsc()`<br>            3. `init_i8259()`<br>    2. `init_krl()`<br><br>1. `hal_fault_allocator()`<br>    1. `hal_do_hwint()`<br>        1. `hal_run_intflthandle()`<br><br>1. `hal_hwint_allocator()`<br>    1. `hal_do_hwint()`<br>        1. `hal_run_intflthandle()`","like_count":3,"discussions":[{"author":{"id":1345199,"avatar":"https://static001.geekbang.org/account/avatar/00/14/86/af/99219321.jpg","nickname":"LMOS","note":"","ucode":"B037712C8B8B3C","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":528631,"discussion_content":"66666","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1634689077,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":311029,"user_name":"卢承灏","can_delete":false,"product_type":"c1","uid":1672266,"ip_address":"","ucode":"80805A03308CA4","user_header":"https://static001.geekbang.org/account/avatar/00/19/84/4a/50940078.jpg","comment_is_top":false,"comment_ctime":1631024224,"is_pvip":false,"replies":[{"id":"112720","content":"中断共享 需要设备驱动程序自己处理","user_name":"作者回复","comment_id":311029,"uid":"1345199","ip_address":"","utype":1,"ctime":1631060610,"user_name_real":"LMOS"}],"discussion_count":2,"race_medal":0,"score":"14515926112","product_id":100078401,"comment_content":"有一个问题，回过头来二刷的时候没想明白，如果中断传递的只是一个中断号，然后中断号是进行共用的，那在hal_run_intflthandle 中的list_for_each 中，每个设备注册的handler方法，怎么判断自己需不需要执行呢？ handler传入的s-&gt;device 也是从循环中的每一个intserdsc_t取出，和最开始的中断号看不出中什么关联。还希望大神们解答","like_count":4,"discussions":[{"author":{"id":1345199,"avatar":"https://static001.geekbang.org/account/avatar/00/14/86/af/99219321.jpg","nickname":"LMOS","note":"","ucode":"B037712C8B8B3C","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":526439,"discussion_content":"中断共享 需要设备驱动程序自己处理","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1631060610,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":1,"child_discussions":[{"author":{"id":2634645,"avatar":"https://static001.geekbang.org/account/avatar/00/28/33/95/c7571cff.jpg","nickname":"ShadowWalker","note":"","ucode":"20106AD1271705","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1345199,"avatar":"https://static001.geekbang.org/account/avatar/00/14/86/af/99219321.jpg","nickname":"LMOS","note":"","ucode":"B037712C8B8B3C","race_medal":0,"user_type":2,"is_pvip":false},"discussion":{"id":548871,"discussion_content":"说了好像又没说","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1643428668,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":526439,"ip_address":""},"score":548871,"extra":""}]}]},{"had_liked":false,"id":296832,"user_name":"云师兄","can_delete":false,"product_type":"c1","uid":1205777,"ip_address":"","ucode":"EB19F80070FE23","user_header":"https://static001.geekbang.org/account/avatar/00/12/66/11/f7408e3e.jpg","comment_is_top":false,"comment_ctime":1623192973,"is_pvip":false,"replies":[{"id":"107843","content":"哈哈哈，舌尖上的操作系统，老铁加油！","user_name":"编辑回复","comment_id":296832,"uid":"1501385","ip_address":"","utype":2,"ctime":1623230271,"user_name_real":"赵宇新"}],"discussion_count":1,"race_medal":0,"score":"14508094861","product_id":100078401,"comment_content":"太硬了啊，有点磕牙，不过再咬两口试试😬","like_count":4,"discussions":[{"author":{"id":1501385,"avatar":"https://static001.geekbang.org/account/avatar/00/16/e8/c9/59bcd490.jpg","nickname":"听水的湖","note":"","ucode":"B1759F90165D81","race_medal":0,"user_type":8,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":521601,"discussion_content":"哈哈哈，舌尖上的操作系统，老铁加油！","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1623230271,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":4}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":296626,"user_name":"然","can_delete":false,"product_type":"c1","uid":2403940,"ip_address":"","ucode":"BC69AA16BCB20A","user_header":"https://static001.geekbang.org/account/avatar/00/24/ae/64/98ef557d.jpg","comment_is_top":false,"comment_ctime":1623071143,"is_pvip":false,"replies":[{"id":"107867","content":"对，你理解的很正确","user_name":"作者回复","comment_id":296626,"uid":"1345199","ip_address":"","utype":1,"ctime":1623245928,"user_name_real":"LMOS"}],"discussion_count":1,"race_medal":0,"score":"10213005735","product_id":100078401,"comment_content":"很好奇move_img2maxpadr(&amp;kmachbsp);这个函数<br>功能：move_img2maxpadr(&amp;kmachbsp);这个函数是把镜像文件搬到最大的物理地址处。<br>作用：我感觉是因为镜像文件是加载在0x4000000处，而空闲地址是从内核文件加载处开始计算的（0x2000000+内核大小）,随着内存的分配，空闲地址不断向上增长，迟早会覆盖镜像文件，所以提前把镜像文件搬走了。","like_count":2,"discussions":[{"author":{"id":1345199,"avatar":"https://static001.geekbang.org/account/avatar/00/14/86/af/99219321.jpg","nickname":"LMOS","note":"","ucode":"B037712C8B8B3C","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":521526,"discussion_content":"对，你理解的很正确","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1623245928,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":296501,"user_name":"Victor","can_delete":false,"product_type":"c1","uid":2634781,"ip_address":"","ucode":"990EB9414BFBE7","user_header":"https://static001.geekbang.org/account/avatar/00/28/34/1d/405b113e.jpg","comment_is_top":false,"comment_ctime":1623023718,"is_pvip":false,"replies":[{"id":"107649","content":"是不是下载 的完整代码 ","user_name":"作者回复","comment_id":296501,"uid":"1345199","ip_address":"","utype":1,"ctime":1623028794,"user_name_real":"LMOS"}],"discussion_count":3,"race_medal":0,"score":"10212958310","product_id":100078401,"comment_content":"在ubuntu 18.04环境下make时报错：<br>root@ubuntu1804:~&#47;LMOS&#47;cosmos&#47;lesson13&#47;Cosmos# make all<br>Initldr:清理全部已构建文件... ^_^<br>*********正在开始编译构建系统*************<br>AS -[M] 正在构建... ..&#47;ldrkrl&#47;imginithead.asm<br>CC -[M] 正在构建... ..&#47;ldrkrl&#47;inithead.c<br>CC -[M] 正在构建... ..&#47;ldrkrl&#47;vgastr.c<br>AS -[M] 正在构建... ..&#47;ldrkrl&#47;ldrkrl32.asm<br>CC -[M] 正在构建... ..&#47;ldrkrl&#47;ldrkrlentry.c<br>CC -[M] 正在构建... ..&#47;ldrkrl&#47;fs.c<br>CC -[M] 正在构建... ..&#47;ldrkrl&#47;chkcpmm.c<br>CC -[M] 正在构建... ..&#47;ldrkrl&#47;graph.c<br>CC -[M] 正在构建... ..&#47;ldrkrl&#47;bstartparm.c<br>AS -[M] 正在构建... ..&#47;ldrkrl&#47;realintsve.asm<br>OBJCOPY -[M] 正在构建... initldrimh.bin<br>OBJCOPY -[M] 正在构建... initldrkrl.bin<br>OBJCOPY -[M] 正在构建... initldrsve.bin<br>恭喜我，Initldr编译构建完成！ ^_^<br>..&#47;hal&#47;x86&#47;kernel.asm:6: fatal: unable to open include file `kernel.inc&#39;<br>krnlbuidrule.mk:14: recipe for target &#39;kernel.o&#39; failed<br>make[2]: *** [kernel.o] Error 1<br>Makefile.x86:28: recipe for target &#39;all&#39; failed<br>make[1]: *** [all] Error 2<br>Makefile:59: recipe for target &#39;all&#39; failed<br>make: *** [all] Error 2","like_count":2,"discussions":[{"author":{"id":1345199,"avatar":"https://static001.geekbang.org/account/avatar/00/14/86/af/99219321.jpg","nickname":"LMOS","note":"","ucode":"B037712C8B8B3C","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":521465,"discussion_content":"是不是下载 的完整代码 ","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1623028794,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":2246251,"avatar":"https://static001.geekbang.org/account/avatar/00/22/46/6b/e766c18d.jpg","nickname":"老王","note":"","ucode":"D629648D2F2FFA","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":378047,"discussion_content":"头文件文件文件，暴力解决：把这个头文件kernel.inc 拷贝到kernel.asm相同的目录，或者是修改kernel.asm 第6行 %include &#34;../include/halinc/kernel.inc&#34;，当然也可以更改makefile 增加头文件搜索路径","likes_number":2,"is_delete":false,"is_hidden":false,"ctime":1623030515,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":2344081,"avatar":"https://static001.geekbang.org/account/avatar/00/23/c4/91/a017bf72.jpg","nickname":"coconut","note":"","ucode":"07B95C7A6AC2F7","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":532703,"discussion_content":"也可以看这个 https://mp.weixin.qq.com/s/gH7Gy-UylXIG4qybP9KuUg","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1637670136,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"user_type\":1}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":341210,"user_name":"艾恩凝","can_delete":false,"product_type":"c1","uid":2950704,"ip_address":"","ucode":"F2B81BF4F0106A","user_header":"https://static001.geekbang.org/account/avatar/00/2d/06/30/c26ea06a.jpg","comment_is_top":false,"comment_ctime":1649422788,"is_pvip":false,"replies":[{"id":"125072","content":"6666","user_name":"作者回复","comment_id":341210,"uid":"1345199","ip_address":"","utype":1,"ctime":1650249211,"user_name_real":"编辑"}],"discussion_count":2,"race_medal":0,"score":"5944390084","product_id":100078401,"comment_content":"终于快走到内核了，上个月24号到现在，进度有点慢，先放下脚步，有些小地方理解不透，看到评论越来越少，我就知道，能坚持下来的人真的不多，可能自己菜，我一个科班出身的感觉都有点吃力，底层那些东西还是很生疏，这门课真的无敌，干货真的很多，需要自己慢慢体会，理解+实战 yyds","like_count":1,"discussions":[{"author":{"id":1345199,"avatar":"https://static001.geekbang.org/account/avatar/00/14/86/af/99219321.jpg","nickname":"LMOS","note":"","ucode":"B037712C8B8B3C","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":564447,"discussion_content":"6666","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1650249211,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1501385,"avatar":"https://static001.geekbang.org/account/avatar/00/16/e8/c9/59bcd490.jpg","nickname":"听水的湖","note":"","ucode":"B1759F90165D81","race_medal":0,"user_type":8,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":560747,"discussion_content":"稳扎稳打，为你的坚持努力鼓掌助威，小编也特别开心这门课对你有帮助，期待你后续有更多分享和反馈哦。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1649431511,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":326924,"user_name":"逝水","can_delete":false,"product_type":"c1","uid":1005788,"ip_address":"","ucode":"33C269F158C652","user_header":"https://static001.geekbang.org/account/avatar/00/0f/58/dc/7334e6ef.jpg","comment_is_top":false,"comment_ctime":1639753321,"is_pvip":false,"replies":[{"id":"118988","content":"是的  是的 ","user_name":"作者回复","comment_id":326924,"uid":"1345199","ip_address":"","utype":1,"ctime":1639964481,"user_name_real":"编辑"}],"discussion_count":1,"race_medal":0,"score":"5934720617","product_id":100078401,"comment_content":"init_idt_descriptor 最后会调用 load_x64_idt，通过汇编调用 lidt 方法，将 x64_idt 的地址到 IDTR 寄存器，使得中断门描述符发挥作用。<br>想了半天内存中的 x64_idt 是怎么发挥作用的，原来这里调用了汇编。","like_count":1,"discussions":[{"author":{"id":1345199,"avatar":"https://static001.geekbang.org/account/avatar/00/14/86/af/99219321.jpg","nickname":"LMOS","note":"","ucode":"B037712C8B8B3C","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":540114,"discussion_content":"是的  是的 ","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1639964482,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":300434,"user_name":"吴建平","can_delete":false,"product_type":"c1","uid":2618440,"ip_address":"","ucode":"C6E578FB8627A3","user_header":"https://static001.geekbang.org/account/avatar/00/27/f4/48/2242bed9.jpg","comment_is_top":false,"comment_ctime":1625152527,"is_pvip":false,"replies":[{"id":"108887","content":"对的 厉害了 找出了BUG","user_name":"作者回复","comment_id":300434,"uid":"1345199","ip_address":"","utype":1,"ctime":1625190345,"user_name_real":"LMOS"}],"discussion_count":1,"race_medal":0,"score":"5920119823","product_id":100078401,"comment_content":"代码走查出一个安全问题，下面这个函数里，如果for里一个满足条件的都没找到，那么后面校验的时候<br>retemp-&gt;saddr 就空指针了。<br>e820map_t *ret_kmaxmpadrcmpsz_e820map(machbstart_t *mbsp, u64_t mappadr, u64_t cpsz)<br>{<br>    if (NULL == mbsp)<br>    {<br>        return NULL;<br>    }<br>    u64_t enr = mbsp-&gt;mb_e820nr;<br>    e820map_t *emp = (e820map_t *)phyadr_to_viradr((adr_t)mbsp-&gt;mb_e820padr);<br>    e820map_t *retemp = NULL;<br>    u64_t maxadr = emp[0].saddr;<br>    for (u64_t i = 0; i &lt; enr; i++)<br>    {<br>        if (emp[i].type == RAM_USABLE)<br>        {<br>            if (emp[i].saddr &gt;= maxadr &amp;&amp;                              &#47;&#47;内存区首地址大于已知最大区域起始地址（初始化位第一个区首地址<br>               (mappadr &gt; (emp[i].saddr + emp[i].lsize)) &amp;&amp;            &#47;&#47;内存区尾地址小于内存映射最大地址<br>               (emp[i].lsize &gt;= cpsz))                                 &#47;&#47;内存区大小大于镜像文件大小<br>            {<br>                maxadr = emp[i].saddr;                                 &#47;&#47;已知最大区域起始地址<br>                retemp = &amp;emp[i];                                      &#47;&#47;更新最后满足条件内存区域<br>            }<br>        }<br>    }<br>    if ((mappadr &gt; (retemp-&gt;saddr + retemp-&gt;lsize)) &amp;&amp; (retemp-&gt;lsize &gt;= cpsz)) &#47;&#47;校验，但除非一个都不满足条件<br>    {<br>        return retemp;<br>    }<br>    return NULL;<br>}<br>","like_count":2,"discussions":[{"author":{"id":1345199,"avatar":"https://static001.geekbang.org/account/avatar/00/14/86/af/99219321.jpg","nickname":"LMOS","note":"","ucode":"B037712C8B8B3C","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":522732,"discussion_content":"对的 厉害了 找出了BUG","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1625190345,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":296589,"user_name":"寻道客小林","can_delete":false,"product_type":"c1","uid":1599380,"ip_address":"","ucode":"DA14317DC1D8FC","user_header":"https://static001.geekbang.org/account/avatar/00/18/67/94/cc1cbccd.jpg","comment_is_top":false,"comment_ctime":1623053953,"is_pvip":false,"replies":[{"id":"107722","content":"先抓主干，后看细节，你的学习方法很好。","user_name":"编辑回复","comment_id":296589,"uid":"1501385","ip_address":"","utype":2,"ctime":1623066952,"user_name_real":"赵宇新"}],"discussion_count":1,"race_medal":0,"score":"5918021249","product_id":100078401,"comment_content":"日拱一卒-Day04 <br>有种本科时学8051，lpc1114的感觉，第一遍还是搞清楚流程，不要在乎细节，先建立一个整体的框架。","like_count":1,"discussions":[{"author":{"id":1501385,"avatar":"https://static001.geekbang.org/account/avatar/00/16/e8/c9/59bcd490.jpg","nickname":"听水的湖","note":"","ucode":"B1759F90165D81","race_medal":0,"user_type":8,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":521506,"discussion_content":"先抓主干，后看细节，你的学习方法很好。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1623066952,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":4}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":350623,"user_name":"徐旭","can_delete":false,"product_type":"c1","uid":1182103,"ip_address":"","ucode":"0B00D3C3070A43","user_header":"https://static001.geekbang.org/account/avatar/00/12/09/97/a13db556.jpg","comment_is_top":false,"comment_ctime":1657068246,"is_pvip":false,"replies":[{"id":"128050","content":"应该不是cpu的问题 ","user_name":"作者回复","comment_id":350623,"uid":"1345199","ip_address":"","utype":1,"ctime":1658390079,"user_name_real":"编辑"}],"discussion_count":1,"race_medal":0,"score":"1657068246","product_id":100078401,"comment_content":"启动报错 INITKLDR DIE ERROR:S  ,不知道是不是 和 物理机cpu(Intel(R) Core(TM) i7-10700F CPU @ 2.90GHz   2.90 GHz)有关 (详情见截图:  http:&#47;&#47;t.csdn.cn&#47;tN2Vz)","like_count":0,"discussions":[{"author":{"id":1345199,"avatar":"https://static001.geekbang.org/account/avatar/00/14/86/af/99219321.jpg","nickname":"LMOS","note":"","ucode":"B037712C8B8B3C","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":580843,"discussion_content":"应该不是cpu的问题 ","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1658390079,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":348775,"user_name":"卖薪沽酒","can_delete":false,"product_type":"c1","uid":2465726,"ip_address":"","ucode":"7F04A84EDBA856","user_header":"https://static001.geekbang.org/account/avatar/00/25/9f/be/14b2ad2e.jpg","comment_is_top":false,"comment_ctime":1655383034,"is_pvip":false,"replies":[{"id":"128077","content":"很强","user_name":"作者回复","comment_id":348775,"uid":"1345199","ip_address":"","utype":1,"ctime":1658391061,"user_name_real":"编辑"}],"discussion_count":1,"race_medal":0,"score":"1655383034","product_id":100078401,"comment_content":"不简单， 来来回回来到了13课程， 关于课后问题， 习惯用ximd 梳理， 有兴趣的同学可以看看，一起加油https:&#47;&#47;www.cnblogs.com&#47;iwssea&#47;p&#47;16383412.html","like_count":1,"discussions":[{"author":{"id":1345199,"avatar":"https://static001.geekbang.org/account/avatar/00/14/86/af/99219321.jpg","nickname":"LMOS","note":"","ucode":"B037712C8B8B3C","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":580872,"discussion_content":"很强","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1658391061,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":347223,"user_name":"Qfeng","can_delete":false,"product_type":"c1","uid":1466121,"ip_address":"","ucode":"1248E70012BBA2","user_header":"https://static001.geekbang.org/account/avatar/00/16/5f/09/2ec44412.jpg","comment_is_top":false,"comment_ctime":1653826839,"is_pvip":false,"replies":[{"id":"126881","content":"是的，你理解的很正确","user_name":"作者回复","comment_id":347223,"uid":"1345199","ip_address":"","utype":1,"ctime":1654912151,"user_name_real":"编辑"}],"discussion_count":1,"race_medal":0,"score":"1653826839","product_id":100078401,"comment_content":"hal_start()<br>    init_hal()    &#47;&#47; 初始化硬件抽象层<br>        init_halplaltform()    &#47;&#47;初始化平台相关<br>            init_machbstart()    &#47;&#47; 将grub启动阶段得到的机器信息结构体machbstart_t拷贝一份到hal全局machbstart_t中，以便后续hal使用<br>            init_bdvideo()    &#47;&#47;初始化显卡驱动（基于hal全局machbstart_t里面的信息）<br>        move_img2maxpadr()<br>        init_halmm()    &#47;&#47;初始化内存管理<br>            init_phymmarge()  &#47;&#47;根据引导阶段获得的内存信息 -- e820map_t 结构数组，hal扩张建立了自己的内存管理结构 -- phymmarge_t 结构数组，将e820map_t 结构数组的信息拷贝了过来<br>        init_halintupt()    &#47;&#47;hal中断初始化<br>            init_descriptor()    &#47;&#47;设置中断GDT描述符<br>            init_idt_descriptor()    &#47;&#47;设置中断IDT描述符：将中断处理程序的入口地址与对应的中断&#47;异常类型vector绑定<br>            init_intfltdsc()    &#47;&#47;初始化中断管理结构体：管理中断的类型，分发，处理优先级等<br>            init_i8259()    &#47;&#47;初始化中断控制器 i8259<br>            i8259_enabled_line()<br>    init_krl()    &#47;&#47;初始化内核: 死循环<br><br>这节内容确实很多，不过有一条主线，就是前面引导器阶段收集准备好的机器信息结构体 -- MBSPADR ((machbstart_t*)(0x100000))，这里的hal初始化的信息都是来自于此，我理解这是引导器如此不可或缺的原因之一，他做了必不可少的准备工作。","like_count":0,"discussions":[{"author":{"id":1345199,"avatar":"https://static001.geekbang.org/account/avatar/00/14/86/af/99219321.jpg","nickname":"LMOS","note":"","ucode":"B037712C8B8B3C","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":575520,"discussion_content":"是的，你理解的很正确","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1654912151,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":345197,"user_name":"卖薪沽酒","can_delete":false,"product_type":"c1","uid":2465726,"ip_address":"","ucode":"7F04A84EDBA856","user_header":"https://static001.geekbang.org/account/avatar/00/25/9f/be/14b2ad2e.jpg","comment_is_top":false,"comment_ctime":1652102419,"is_pvip":false,"replies":[{"id":"126522","content":"还在干什么","user_name":"作者回复","comment_id":345197,"uid":"1345199","ip_address":"","utype":1,"ctime":1653618729,"user_name_real":"编辑"}],"discussion_count":3,"race_medal":0,"score":"1652102419","product_id":100078401,"comment_content":"我还在","like_count":0,"discussions":[{"author":{"id":1345199,"avatar":"https://static001.geekbang.org/account/avatar/00/14/86/af/99219321.jpg","nickname":"LMOS","note":"","ucode":"B037712C8B8B3C","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":573733,"discussion_content":"还在干什么","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1653618729,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":1,"child_discussions":[{"author":{"id":1607997,"avatar":"https://static001.geekbang.org/account/avatar/00/18/89/3d/3703c52f.jpg","nickname":"le","note":"","ucode":"76370C23E98362","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1345199,"avatar":"https://static001.geekbang.org/account/avatar/00/14/86/af/99219321.jpg","nickname":"LMOS","note":"","ucode":"B037712C8B8B3C","race_medal":0,"user_type":2,"is_pvip":false},"discussion":{"id":575811,"discussion_content":"在自闭哈哈哈哈哈","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1655118117,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":573733,"ip_address":""},"score":575811,"extra":""}]},{"author":{"id":2465726,"avatar":"https://static001.geekbang.org/account/avatar/00/25/9f/be/14b2ad2e.jpg","nickname":"卖薪沽酒","note":"","ucode":"7F04A84EDBA856","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":576269,"discussion_content":"楼上说对了，来来回回看着几章","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1655383097,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":328945,"user_name":"申龙青","can_delete":false,"product_type":"c1","uid":2615938,"ip_address":"","ucode":"688098EA258849","user_header":"https://static001.geekbang.org/account/avatar/00/27/ea/82/f44cbd20.jpg","comment_is_top":false,"comment_ctime":1640947722,"is_pvip":false,"replies":[{"id":"120034","content":"是的 也不同的","user_name":"作者回复","comment_id":328945,"uid":"1345199","ip_address":"","utype":1,"ctime":1641434909,"user_name_real":"编辑"}],"discussion_count":1,"race_medal":0,"score":"1640947722","product_id":100078401,"comment_content":"hal 层可以隔离不同芯片平台架构，那不同芯片平台架构下BIOS有区别，导致的GRUB2这套二级引导器是不是也不同？","like_count":0,"discussions":[{"author":{"id":1345199,"avatar":"https://static001.geekbang.org/account/avatar/00/14/86/af/99219321.jpg","nickname":"LMOS","note":"","ucode":"B037712C8B8B3C","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":544173,"discussion_content":"是的 也不同的","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1641434909,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":328531,"user_name":"Geek_03885e","can_delete":false,"product_type":"c1","uid":2858480,"ip_address":"","ucode":"C6253E9F5259A7","user_header":"","comment_is_top":false,"comment_ctime":1640764447,"is_pvip":false,"replies":[{"id":"119655","content":"华生，你发现了盲点😄。","user_name":"编辑回复","comment_id":328531,"uid":"1501385","ip_address":"","utype":2,"ctime":1640766566,"user_name_real":"编辑"}],"discussion_count":1,"race_medal":0,"score":"1640764447","product_id":100078401,"comment_content":"其他的都好理解， 就是为什么出去旅游不带女朋友呢？","like_count":0,"discussions":[{"author":{"id":1501385,"avatar":"https://static001.geekbang.org/account/avatar/00/16/e8/c9/59bcd490.jpg","nickname":"听水的湖","note":"","ucode":"B1759F90165D81","race_medal":0,"user_type":8,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":542489,"discussion_content":"华生，你发现了盲点😄。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1640766567,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":4}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":324304,"user_name":"178","can_delete":false,"product_type":"c1","uid":1090075,"ip_address":"","ucode":"3B0266F6BD06AE","user_header":"https://static001.geekbang.org/account/avatar/00/10/a2/1b/7426e629.jpg","comment_is_top":false,"comment_ctime":1638365129,"is_pvip":false,"replies":[{"id":"117708","content":"当然 不是 ","user_name":"作者回复","comment_id":324304,"uid":"1345199","ip_address":"","utype":1,"ctime":1638415865,"user_name_real":"编辑"}],"discussion_count":1,"race_medal":0,"score":"1638365129","product_id":100078401,"comment_content":"hal层的初始化和二级引导器的初始化，之间有什么区别和联系，愚蠢的我居然认为是是同样的事做了两遍？","like_count":0,"discussions":[{"author":{"id":1345199,"avatar":"https://static001.geekbang.org/account/avatar/00/14/86/af/99219321.jpg","nickname":"LMOS","note":"","ucode":"B037712C8B8B3C","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":535343,"discussion_content":"当然 不是 ","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1638415865,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":323701,"user_name":"178","can_delete":false,"product_type":"c1","uid":1090075,"ip_address":"","ucode":"3B0266F6BD06AE","user_header":"https://static001.geekbang.org/account/avatar/00/10/a2/1b/7426e629.jpg","comment_is_top":false,"comment_ctime":1638107749,"is_pvip":false,"replies":[{"id":"117624","content":"可能是虚拟机设置有问题 ","user_name":"作者回复","comment_id":323701,"uid":"1345199","ip_address":"","utype":1,"ctime":1638323194,"user_name_real":"编辑"}],"discussion_count":1,"race_medal":0,"score":"1638107749","product_id":100078401,"comment_content":"1. 新建Cosmos虚拟机（与第10课，同样类型的虚拟机，只是名不同）<br>2. 执行make vboxtest<br>问题：只出现黑底百花的Cosmos，为什么没有背景图片和打印机器信息呢，百撕不得骑姐","like_count":0,"discussions":[{"author":{"id":1345199,"avatar":"https://static001.geekbang.org/account/avatar/00/14/86/af/99219321.jpg","nickname":"LMOS","note":"","ucode":"B037712C8B8B3C","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":534949,"discussion_content":"可能是虚拟机设置有问题 ","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1638323194,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":318598,"user_name":"Geek_260041","can_delete":false,"product_type":"c1","uid":2822865,"ip_address":"","ucode":"9BF0B7892AC3A7","user_header":"","comment_is_top":false,"comment_ctime":1635343881,"is_pvip":false,"replies":[{"id":"115511","content":"有的32位的 有64位的 ","user_name":"作者回复","user_name_real":"LMOS","uid":"1345199","ctime":1635383203,"ip_address":"","comment_id":318598,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1635343881","product_id":100078401,"comment_content":"一路读代码到了初始化中断那里，有一点不明白，为什么我们在进入hal层重置GDT的时候在init_entry.asm里定义了代码段GDT描述符为type的值为0x8, 这个type并不可以执行, 而到初始化中断刚开始的init_descriptor()函数里保存的type值又为0xa了。这样设计是有特殊的原因吗","like_count":0,"discussions":[{"author":{"id":1345199,"avatar":"https://static001.geekbang.org/account/avatar/00/14/86/af/99219321.jpg","nickname":"LMOS","note":"","ucode":"B037712C8B8B3C","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":529310,"discussion_content":"有的32位的 有64位的 ","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1635383203,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":317746,"user_name":"Geek_1a537e","can_delete":false,"product_type":"c1","uid":2823611,"ip_address":"","ucode":"E854A5697D10A0","user_header":"","comment_is_top":false,"comment_ctime":1634918991,"is_pvip":false,"replies":[{"id":"115168","content":"你好 从你发的代码情况看 这是没有权限导致<br><br>需要 搜索用户执行应用的权限管理 解决这处问题。<br>","user_name":"作者回复","user_name_real":"听水的湖","uid":"1501385","ctime":1634962181,"ip_address":"","comment_id":317746,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1634918991","product_id":100078401,"comment_content":"make[2]: execvp: .&#47;lmkfbuild: Permission denied<br>pretreatment.mkf:41: recipe for target &#39;krnlobjs.mk&#39; failed<br>make[2]: *** [krnlobjs.mk] Error 127<br>Makefile.x86:28: recipe for target &#39;all&#39; failed<br>make[1]: *** [all] Error 2<br>Makefile:59: recipe for target &#39;all&#39; failed<br>make: *** [all] Error 2<br>老师帮我看看啊 今天还用了你那本深度理解嵌入式的书的源代码也是差不多的错误，那个mk文件一直在报错，我都要疯了，这个要怎么解决啊 。完全copy的你的源码，，","like_count":0,"discussions":[{"author":{"id":1501385,"avatar":"https://static001.geekbang.org/account/avatar/00/16/e8/c9/59bcd490.jpg","nickname":"听水的湖","note":"","ucode":"B1759F90165D81","race_medal":0,"user_type":8,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":528954,"discussion_content":"你好 从你发的代码情况看 这是没有权限导致\n\n需要 搜索用户执行应用的权限管理 解决这处问题。\n","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1634962181,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":4}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":310399,"user_name":"杨军","can_delete":false,"product_type":"c1","uid":1988156,"ip_address":"","ucode":"AF881224E54C14","user_header":"https://static001.geekbang.org/account/avatar/00/1e/56/3c/f9ff3ed8.jpg","comment_is_top":false,"comment_ctime":1630639869,"is_pvip":false,"replies":[{"id":"112468","content":"如启动各阶段内存如何布局、内核如何通过链接放置到设计的内存上等细节<br>---------------------------------------------------------<br>你需要看看我的二级引导器  这些动作都是二级引导器做的 ","user_name":"作者回复","user_name_real":"LMOS","uid":"1345199","ctime":1630662499,"ip_address":"","comment_id":310399,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1630639869","product_id":100078401,"comment_content":"初始化这段跟踪下来，老师课程内容信息量很大，从工程的角度对各种底层硬件进行了数据结构抽象，设计的很精巧、优雅，令人击节叫赞，这块对于了解硬件底层，有过内核设计经验的老手甘之如饴，但是对于操作系统入门的初学者来说，要求就有点过高了，不易把握整体的脉络，比如启动各阶段内存如何布局、内核如何通过链接放置到设计的内存上等细节，老师能否对这块给出相应的参考资料、链接呢？尤其是内核怎么链接安排到特定内存这块","like_count":0,"discussions":[{"author":{"id":1345199,"avatar":"https://static001.geekbang.org/account/avatar/00/14/86/af/99219321.jpg","nickname":"LMOS","note":"","ucode":"B037712C8B8B3C","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":526219,"discussion_content":"如启动各阶段内存如何布局、内核如何通过链接放置到设计的内存上等细节\n---------------------------------------------------------\n你需要看看我的二级引导器  这些动作都是二级引导器做的 ","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1630662499,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":300899,"user_name":"青玉白露","can_delete":false,"product_type":"c1","uid":2619436,"ip_address":"","ucode":"96FE2D4D2B94A0","user_header":"https://static001.geekbang.org/account/avatar/00/27/f8/2c/92969c48.jpg","comment_is_top":false,"comment_ctime":1625446348,"is_pvip":false,"replies":[{"id":"108988","content":"哈哈 这个可以有","user_name":"作者回复","user_name_real":"LMOS","uid":"1345199","ctime":1625453705,"ip_address":"","comment_id":300899,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1625446348","product_id":100078401,"comment_content":"干货太多，晚上去写一个博客总结一下。","like_count":0,"discussions":[{"author":{"id":1345199,"avatar":"https://static001.geekbang.org/account/avatar/00/14/86/af/99219321.jpg","nickname":"LMOS","note":"","ucode":"B037712C8B8B3C","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":522845,"discussion_content":"哈哈 这个可以有","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1625453705,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":298258,"user_name":"二三子也","can_delete":false,"product_type":"c1","uid":1245787,"ip_address":"","ucode":"69C7D86583277D","user_header":"https://static001.geekbang.org/account/avatar/00/13/02/5b/ce326cfc.jpg","comment_is_top":false,"comment_ctime":1623985019,"is_pvip":false,"replies":[{"id":"108304","content":"你为什么 不用我的gitee上的代码呢","user_name":"作者回复","user_name_real":"LMOS","uid":"1345199","ctime":1624181857,"ip_address":"","comment_id":298258,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1623985019","product_id":100078401,"comment_content":"..&#47;hal&#47;x86&#47;kernel.asm:6: fatal: unable to open include file `kernel.inc&#39;<br>看了同学们的解决办法。这里在说一个解决办法。修改Makefile要优雅一点。<br>修改script&#47;hal.S文件<br>将HEADFILE_PATH 这个变量的值-I ..&#47;include&#47;halinc 修改为-I ..&#47;include&#47;halinc&#47;即可。","like_count":0,"discussions":[{"author":{"id":1345199,"avatar":"https://static001.geekbang.org/account/avatar/00/14/86/af/99219321.jpg","nickname":"LMOS","note":"","ucode":"B037712C8B8B3C","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":522077,"discussion_content":"你为什么 不用我的gitee上的代码呢","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1624181857,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":296699,"user_name":"的是","can_delete":false,"product_type":"c1","uid":1977717,"ip_address":"","ucode":"BA89D6AB9801E4","user_header":"https://static001.geekbang.org/account/avatar/00/1e/2d/75/4936ecc2.jpg","comment_is_top":false,"comment_ctime":1623119280,"is_pvip":false,"replies":[{"id":"107864","content":"尽量使用linux","user_name":"作者回复","user_name_real":"LMOS","uid":"1345199","ctime":1623245665,"ip_address":"","comment_id":296699,"utype":1}],"discussion_count":5,"race_medal":0,"score":"1623119280","product_id":100078401,"comment_content":"macos Bigsur  :make all<br>CC -[M] 正在生成makefile... ..&#47;script&#47;krnlobjs.S<br>CC -[M] 正在生成makefile... ..&#47;script&#47;cosmoslink.S<br>CC -[M] 正在生成makefile... ..&#47;script&#47;krnlbuidcmd.S<br>CC -[M] 正在生成makefile... ..&#47;script&#47;krnlbuidrule.S<br>CC -[M] 正在生成makefile... ..&#47;script&#47;hal.S<br>CC -[M] 正在生成makefile... ..&#47;script&#47;krl.S<br>CC -[M] 正在生成makefile... ..&#47;script&#47;drv.S<br>CC -[M] 正在生成makefile... ..&#47;script&#47;lib.S<br>CC -[M] 正在生成makefile... ..&#47;script&#47;task.S<br>CC -[M] 正在生成makefile... ..&#47;script&#47;link.S<br>.&#47;lmkfbuild: .&#47;lmkfbuild: cannot execute binary file<br>make[2]: *** [krnlobjs.mk] Error 126<br>make[1]: *** [all] Error 2<br>make: *** [all] Error 2","like_count":0,"discussions":[{"author":{"id":1345199,"avatar":"https://static001.geekbang.org/account/avatar/00/14/86/af/99219321.jpg","nickname":"LMOS","note":"","ucode":"B037712C8B8B3C","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":521553,"discussion_content":"尽量使用linux","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1623245665,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1977717,"avatar":"https://static001.geekbang.org/account/avatar/00/1e/2d/75/4936ecc2.jpg","nickname":"的是","note":"","ucode":"BA89D6AB9801E4","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":379369,"discussion_content":"东哥编译好了，没有一楼的朋友说的sudo cp release/Cosmos.eki 这个文件","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1623849053,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":1,"child_discussions":[{"author":{"id":2637450,"avatar":"https://static001.geekbang.org/account/avatar/00/28/3e/8a/204165cc.jpg","nickname":"🎋 🎋 🎋","note":"","ucode":"388A6089DBD7EE","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1977717,"avatar":"https://static001.geekbang.org/account/avatar/00/1e/2d/75/4936ecc2.jpg","nickname":"的是","note":"","ucode":"BA89D6AB9801E4","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":385995,"discussion_content":"同学 请问krnlobjs.mk这个是怎么改好的呀","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1627375128,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":379369,"ip_address":""},"score":385995,"extra":""}]},{"author":{"id":1977717,"avatar":"https://static001.geekbang.org/account/avatar/00/1e/2d/75/4936ecc2.jpg","nickname":"的是","note":"","ucode":"BA89D6AB9801E4","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":378723,"discussion_content":"../hal/x86/kernel.asm这个文件里面 %include &#34;kernel.inc&#34;找不到","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1623373911,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1977717,"avatar":"https://static001.geekbang.org/account/avatar/00/1e/2d/75/4936ecc2.jpg","nickname":"的是","note":"","ucode":"BA89D6AB9801E4","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":378722,"discussion_content":"在linux环境\nCC -[M] 正在生成makefile... ../script/krnlobjs.S\nCC -[M] 正在生成makefile... ../script/cosmoslink.S\nCC -[M] 正在生成makefile... ../script/krnlbuidcmd.S\nCC -[M] 正在生成makefile... ../script/krnlbuidrule.S\nCC -[M] 正在生成makefile... ../script/hal.S\nCC -[M] 正在生成makefile... ../script/krl.S\nCC -[M] 正在生成makefile... ../script/drv.S\nCC -[M] 正在生成makefile... ../script/lib.S\nCC -[M] 正在生成makefile... ../script/task.S\nCC -[M] 正在生成makefile... ../script/link.S\nLMKFBUID -[M] 正在生成makefile... krnlobjs.mki\nLMKFBUID -[M] 正在生成makefile... krnlbuidcmd.mki\nLMKFBUID -[M] 正在生成makefile... krnlbuidrule.mki\nLMKFBUID -[M] 正在生成makefile... hal.mki\nLMKFBUID -[M] 正在生成makefile... krl.mki\nLMKFBUID -[M] 正在生成makefile... drv.mki\nLMKFBUID -[M] 正在生成makefile... lib.mki\nLMKFBUID -[M] 正在生成makefile... task.mki\nLMKFBUID -[M] 正在生成makefile... link.mki\nInitldr:清理全部已构建文件... ^_^\n*********正在开始编译构建系统*************\n../ldrkrl/imginithead.asm:28: warning: dword data exceeds bounds\nAS -[M] 正在构建... ../ldrkrl/imginithead.asm\nCC -[M] 正在构建... ../ldrkrl/inithead.c\nCC -[M] 正在构建... ../ldrkrl/vgastr.c\nAS -[M] 正在构建... ../ldrkrl/ldrkrl32.asm\nCC -[M] 正在构建... ../ldrkrl/ldrkrlentry.c\nCC -[M] 正在构建... ../ldrkrl/fs.c\nCC -[M] 正在构建... ../ldrkrl/chkcpmm.c\nCC -[M] 正在构建... ../ldrkrl/graph.c\nCC -[M] 正在构建... ../ldrkrl/bstartparm.c\nAS -[M] 正在构建... ../ldrkrl/realintsve.asm\nOBJCOPY -[M] 正在构建... initldrimh.bin\nOBJCOPY -[M] 正在构建... initldrkrl.bin\nOBJCOPY -[M] 正在构建... initldrsve.bin\n恭喜我，Initldr编译构建完成！ ^_^\nCC -\tM] 正在构建... ../hal/x86/init_entry.asm\nCC -\tM] 正在构建... ../hal/x86/hal_start.c\nCC -\tM] 正在构建... ../hal/x86/halinit.c\nCC -\tM] 正在构建... ../hal/x86/halglobal.c\nCC -\tM] 正在构建... ../hal/x86/halplatform.c\nCC -\tM] 正在构建... ../hal/x86/bdvideo.c\nCC -\tM] 正在构建... ../hal/x86/halcpuctrl.c\nCC -\tM] 正在构建... ../hal/x86/halprint.c\nCC -\tM] 正在构建... ../hal/x86/halmm.c\nCC -\tM] 正在构建... ../hal/x86/halintupt.c\n../hal/x86/kernel.asm:6: fatal: unable to open include file `kernel.inc&#39;\nmake[2]: *** [kernel.o] 错误 1\nmake[1]: *** [all] 错误 2\nmake: *** [all] 错误 2","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1623373810,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":296546,"user_name":"springXu","can_delete":false,"product_type":"c1","uid":2064750,"ip_address":"","ucode":"F5DB0B963C894F","user_header":"","comment_is_top":false,"comment_ctime":1623036695,"is_pvip":true,"replies":[{"id":"107731","content":"哈哈，后面的更大","user_name":"作者回复","user_name_real":"LMOS","uid":"1345199","ctime":1623072735,"ip_address":"","comment_id":296546,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1623036695","product_id":100078401,"comment_content":"这课的信息量很大。有些意犹未尽的味道。","like_count":0,"discussions":[{"author":{"id":1345199,"avatar":"https://static001.geekbang.org/account/avatar/00/14/86/af/99219321.jpg","nickname":"LMOS","note":"","ucode":"B037712C8B8B3C","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":521480,"discussion_content":"哈哈，后面的更大","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1623072735,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":296509,"user_name":"aagu","can_delete":false,"product_type":"c1","uid":1724915,"ip_address":"","ucode":"F8A082F543801F","user_header":"https://static001.geekbang.org/account/avatar/00/1a/51/f3/5e993de8.jpg","comment_is_top":false,"comment_ctime":1623026273,"is_pvip":false,"replies":[{"id":"107646","content":"是你自己还没有习惯","user_name":"作者回复","user_name_real":"LMOS","uid":"1345199","ctime":1623028620,"ip_address":"","comment_id":296509,"utype":1}],"discussion_count":2,"race_medal":0,"score":"1623026273","product_id":100078401,"comment_content":"函数名和结构体字段这种简写命名看得很迷糊，还得要加注释补充说明，老师能说一下这样做的用意吗？","like_count":0,"discussions":[{"author":{"id":1345199,"avatar":"https://static001.geekbang.org/account/avatar/00/14/86/af/99219321.jpg","nickname":"LMOS","note":"","ucode":"B037712C8B8B3C","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":521468,"discussion_content":"是你自己还没有习惯","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1623028620,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1466121,"avatar":"https://static001.geekbang.org/account/avatar/00/16/5f/09/2ec44412.jpg","nickname":"Qfeng","note":"","ucode":"1248E70012BBA2","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":574074,"discussion_content":"我也建议结构体定义的地方加个描述","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1653819721,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]}]}