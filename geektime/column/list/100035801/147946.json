{"id":147946,"title":"11 |   NoSQL：在高并发场景下，数据库和NoSQL如何做到互补？","content":"<p>你好，我是唐扬。</p><p>前几节课，我带你了解了在你的垂直电商项目中，如何将传统的关系型数据库改造成分布式存储服务，以抵抗高并发和大流量的冲击。</p><p>对于存储服务来说，我们一般会从两个方面对它做改造：</p><p>1.提升它的读写性能，尤其是读性能，因为我们面对的多是一些读多写少的产品。比方说，你离不开的微信朋友圈、微博和淘宝，都是查询QPS远远大于写入QPS。</p><p>2.增强它在存储上的扩展能力，从而应对大数据量的存储需求。</p><p>我之前带你学习的读写分离和分库分表就是从这两方面出发，改造传统的关系型数据库的，但仍有一些问题无法解决。</p><p>比如，在微博项目中关系的数据量达到了千亿，那么即使分隔成1024个库表，每张表的数据量也达到了亿级别，并且关系的数据量还在以极快的速度增加，即使你分隔成再多的库表，数据量也会很快增加到瓶颈。这个问题用传统数据库很难根本解决，因为它在扩展性方面是很弱的，这时，就可以利用NoSQL，因为它有着天生分布式的能力，能够提供优秀的读写性能，可以很好地补充传统关系型数据库的短板。那么它是如何做到的呢？</p><p>这节课，我就还是以你的垂直电商系统为例，带你掌握如何用NoSQL数据库和关系型数据库互补，共同承担高并发和大流量的冲击。</p><!-- [[[read_end]]] --><p>首先，我们先来了解一下NoSQL数据库。</p><h2>NoSQL，No SQL？</h2><p>NoSQL想必你很熟悉，它指的是不同于传统的关系型数据库的其他数据库系统的统称，它不使用SQL作为查询语言，提供优秀的横向扩展能力和读写性能，非常契合互联网项目高并发大数据的特点。所以一些大厂，比如小米、微博、陌陌都很倾向使用它来作为高并发大容量的数据存储服务。</p><p>NoSQL数据库发展到现在，十几年间，出现了多种类型，我来给你举几个例子：</p><ul>\n<li>\n<p>Redis、LevelDB这样的KV存储。这类存储相比于传统的数据库的优势是极高的读写性能，一般对性能有比较高的要求的场景会使用。</p>\n</li>\n<li>\n<p>Hbase、Cassandra这样的列式存储数据库。这种数据库的特点是数据不像传统数据库以行为单位来存储，而是以列来存储，适用于一些离线数据统计的场景。</p>\n</li>\n<li>\n<p>像MongoDB、CouchDB这样的文档型数据库。这种数据库的特点是Schema Free（模式自由），数据表中的字段可以任意扩展，比如说电商系统中的商品有非常多的字段，并且不同品类的商品的字段也都不尽相同，使用关系型数据库就需要不断增加字段支持，而用文档型数据库就简单很多了。</p>\n</li>\n</ul><p>在NoSQL数据库刚刚被应用时，它被认为是可以替代关系型数据库的银弹，在我看来，也许因为以下几个方面的原因：</p><ul>\n<li>弥补了传统数据库在性能方面的不足；</li>\n<li>数据库变更方便，不需要更改原先的数据结构；</li>\n<li>适合互联网项目常见的大数据量的场景；</li>\n</ul><p>不过，这种看法是个误区，因为慢慢地我们发现在业务开发的场景下还是需要利用SQL语句的强大的查询功能以及传统数据库事务和灵活的索引等功能，NoSQL只能作为一些场景的补充。</p><p>那么接下来，我就带你了解<strong>NoSQL数据库是如何做到与关系数据库互补的。</strong>了解这部分内容，你可以在实际项目中更好地使用NoSQL数据库补充传统数据库的不足。</p><p>首先，我们来关注一下数据库的写入性能。</p><h2>使用NoSQL提升写入性能</h2><p>数据库系统大多使用的是传统的机械磁盘，对于机械磁盘的访问方式有两种：一种是随机IO；另一种是顺序IO。随机IO就需要花费时间做昂贵的磁盘寻道，一般来说，它的读写效率要比顺序IO小两到三个数量级，所以我们想要提升写入的性能就要尽量减少随机IO。</p><p>以MySQL的InnoDB存储引擎来说，更新binlog、redolog、undolog都是在做顺序IO，而更新datafile和索引文件则是在做随机IO，而为了减少随机IO的发生，关系数据库已经做了很多的优化，比如说写入时先写入内存，然后批量刷新到磁盘上，但是随机IO还是会发生。</p><p>索引在InnoDB引擎中是以B+树（<a href=\"https://time.geekbang.org/column/article/146454\">上一节课</a>提到了B+树，你可以回顾一下）方式来组织的，而MySQL主键是聚簇索引（一种索引类型，数据与索引数据放在一起），既然数据和索引数据放在一起，那么在数据插入或者更新的时候，我们需要找到要插入的位置，再把数据写到特定的位置上，这就产生了随机的IO。而且一旦发生了页分裂，就不可避免会做数据的移动，也会极大地损耗写入性能。</p><p><strong>NoSQL数据库是怎么解决这个问题的呢？</strong></p><p>它们有多种的解决方式，这里我给你讲一种最常见的方案，就是很多NoSQL数据库都在使用的<strong>基于LSM树的存储引擎，</strong>这种算法使用最多，所以在这里着重剖析一下。</p><p>LSM树（Log-Structured Merge Tree）牺牲了一定的读性能来换取写入数据的高性能，Hbase、Cassandra、LevelDB都是用这种算法作为存储的引擎。</p><p>它的思想很简单，数据首先会写入到一个叫做MemTable的内存结构中，在MemTable中数据是按照写入的Key来排序的。为了防止MemTable里面的数据因为机器掉电或者重启而丢失，一般会通过写Write Ahead Log的方式将数据备份在磁盘上。</p><p>MemTable在累积到一定规模时，它会被刷新生成一个新的文件，我们把这个文件叫做SSTable（Sorted String Table）。当SSTable达到一定数量时，我们会将这些SSTable合并，减少文件的数量，因为SSTable都是有序的，所以合并的速度也很快。</p><p>当从LSM树里面读数据时，我们首先从MemTable中查找数据，如果数据没有找到，再从SSTable中查找数据。因为存储的数据都是有序的，所以查找的效率是很高的，只是因为数据被拆分成多个SSTable，所以读取的效率会低于B+树索引。</p><p><img src=\"https://static001.geekbang.org/resource/image/b4/eb/b4c9c93f22edae091740fa1606d109eb.jpg?wh=1142*652\" alt=\"\"></p><p>和LSM树类似的算法有很多，比如说TokuDB使用的名为Fractal tree的索引结构，它们的核心思想就是将随机IO变成顺序的IO，从而提升写入的性能。</p><p>在后面的缓存篇中，我也将给你着重介绍我们是如何使用KV型NoSQL存储来提升读性能的。所以你看，NoSQL数据库补充关系型数据库的第一种方式就是提升读写性能。</p><h2>场景补充</h2><p>除了可以提升性能之外，NoSQL数据库还可以在某些场景下作为传统关系型数据库的补充，来看一个具体的例子。</p><p>假设某一天，CEO找到你并且告诉你，他正在为你的垂直电商项目规划搜索的功能，需要支持按照商品的名称模糊搜索到对应的商品，希望你尽快调研出解决方案。</p><p>一开始，你认为这非常的简单，不就是在数据库里面执行一条类似：“select * from product where name like ‘%***%’”的语句吗？可是在实际执行的过程中，却发现了问题。</p><p>你发现这类语句并不是都能使用到索引，只有后模糊匹配的语句才能使用索引。比如语句“select * from product where name like ‘%电冰箱’”就没有使用到字段“name”上的索引，而“select * from product where name like ‘索尼%’”就使用了“name”上的索引。而一旦没有使用索引就会扫描全表的数据，在性能上是无法接受的。</p><p>于是你在谷歌上搜索了一下解决方案，发现大家都在使用开源组件Elasticsearch来支持搜索的请求，它本身是基于“倒排索引”来实现的，<strong>那么什么是倒排索引呢？</strong></p><p>倒排索引是指将记录中的某些列做分词，然后形成的分词与记录ID之间的映射关系。比如说，你的垂直电商项目里面有以下记录：</p><p><img src=\"https://static001.geekbang.org/resource/image/20/57/201ffbb6da51e04894d8dee7eaeb5d57.jpg?wh=1142*311\" alt=\"\"></p><p>那么，我们将商品名称做简单的分词，然后建立起分词和商品ID的对应关系，就像下面展示的这样：</p><p><img src=\"https://static001.geekbang.org/resource/image/c9/2f/c919944bcdfd1f1ce576790fc496a62f.jpg?wh=1142*452\" alt=\"\"></p><p>这样，如果用户搜索电冰箱，就可以给他展示商品ID为1和3的两件商品了。</p><p>而Elasticsearch作为一种常见的NoSQL数据库，<strong>就以倒排索引作为核心技术原理，为你提供了分布式的全文搜索服务，这在传统的关系型数据库中使用SQL语句是很难实现的。</strong>所以你看，NoSQL可以在某些业务场景下代替传统数据库提供数据存储服务。</p><h2>提升扩展性</h2><p>另外，在扩展性方面，很多NoSQL数据库也有着先天的优势。还是以你的垂直电商系统为例，你已经为你的电商系统增加了评论系统，开始你的评估比较乐观，觉得电商系统的评论量级不会增长很快，所以就为它分了8个库，每个库拆分成16张表。</p><p>但是评论系统上线之后，存储量级增长的异常迅猛，你不得不将数据库拆分成更多的库表，而数据也要重新迁移到新的库表中，过程非常痛苦，而且数据迁移的过程也非常容易出错。</p><p>这时，你考虑是否可以考虑使用NoSQL数据库来彻底解决扩展性的问题，经过调研你发现它们在设计之初就考虑到了分布式和大数据存储的场景，<strong>比如像MongoDB就有三个扩展性方面的特性。</strong></p><ul>\n<li>\n<p>其一是Replica，也叫做副本集，你可以理解为主从分离，也就是通过将数据拷贝成多份来保证当主挂掉后数据不会丢失。同时呢，Replica还可以分担读请求。Replica中有主节点来承担写请求，并且把数据变动记录到oplog里（类似于binlog）；从节点接收到oplog后就会修改自身的数据以保持和主节点的一致。一旦主节点挂掉，MongoDB会从从节点中选取一个节点成为主节点，可以继续提供写数据服务。</p>\n</li>\n<li>\n<p>其二是Shard，也叫做分片，你可以理解为分库分表，即将数据按照某种规则拆分成多份，存储在不同的机器上。MongoDB的Sharding特性一般需要三个角色来支持，一个是Shard Server，它是实际存储数据的节点，是一个独立的Mongod进程；二是Config Server，也是一组Mongod进程，主要存储一些元信息，比如说哪些分片存储了哪些数据等；最后是Route Server，它不实际存储数据，仅仅作为路由使用，它从Config Server中获取元信息后，将请求路由到正确的Shard Server中。</p>\n</li>\n</ul><p><img src=\"https://static001.geekbang.org/resource/image/e8/80/e8cb47c8cc556fce058f7c5cf06d4780.jpg?wh=1142*663\" alt=\"\"></p><ul>\n<li>其三是负载均衡，就是当MongoDB发现Shard之间数据分布不均匀，会启动Balancer进程对数据做重新的分配，最终让不同Shard Server的数据可以尽量的均衡。当我们的Shard Server存储空间不足需要扩容时，数据会自动被移动到新的Shard Server上，减少了数据迁移和验证的成本。</li>\n</ul><p>你可以看到，NoSQL数据库中内置的扩展性方面的特性可以让我们不再需要对数据库做分库分表和主从分离，也是对传统数据库一个良好的补充。</p><p>你可能会觉得，NoSQL已经成熟到可以代替关系型数据库了，但是就目前来看，NoSQL只能作为传统关系型数据库的补充而存在，弥补关系型数据库在性能、扩展性和某些场景下的不足，所以你在使用或者选择时要结合自身的场景灵活地运用。</p><h2>课程小结</h2><p>本节课我带你了解了NoSQL数据库在性能、扩展性上的优势，以及它的一些特殊功能特性，主要有以下几点：</p><p>1.在性能方面，NoSQL数据库使用一些算法将对磁盘的随机写转换成顺序写，提升了写的性能；</p><p>2.在某些场景下，比如全文搜索功能，关系型数据库并不能高效地支持，需要NoSQL数据库的支持；</p><p>3.在扩展性方面，NoSQL数据库天生支持分布式，支持数据冗余和数据分片的特性。</p><p>这些都让它成为传统关系型数据库的良好的补充，你需要了解的是，<strong>NoSQL可供选型的种类很多，每一个组件都有各自的特点。你在做选型的时候需要对它的实现原理有比较深入的了解，最好在运维方面对它有一定的熟悉，这样在出现问题时才能及时找到解决方案。</strong>否则，盲目跟从地上了一个新的NoSQL数据库，最终可能导致会出了故障无法解决，反而成为整体系统的拖累。</p><p>我在之前的项目中曾经使用Elasticsearch作为持久存储，支撑社区的feed流功能，初期开发的时候确实很爽，你可以针对feed中的任何字段做灵活高效地查询，业务功能迭代迅速，代码也简单易懂。可是到了后期流量上来之后，由于缺少对于Elasticsearch成熟的运维能力，造成故障频出，尤其到了高峰期就会出现节点不可用的问题，而由于业务上的巨大压力又无法分出人力和精力对Elasticsearch深入的学习和了解，最后不得不做大的改造切回熟悉的MySQL。<strong>所以，对于开源组件的使用，不能只停留在只会“hello world”的阶段，而应该对它有足够的运维上的把控能力。</strong></p><h2>一课一思</h2><p>NoSQL数据库是可以与传统的关系型数据库配合，一起解决数据存储问题的，那么在日常工作中，你用到了哪些NoSQL数据库呢？在选型的时候是基于什么样的考虑呢？欢迎在留言区与我分享你的经验。</p><p>最后，感谢你的阅读，如果这篇文章让你有所收获，也欢迎你将它分享给更多的朋友。</p>","comments":[{"had_liked":false,"id":140097,"user_name":"Richeir","can_delete":false,"product_type":"c1","uid":1005500,"ip_address":"","ucode":"1D58234F917724","user_header":"https://static001.geekbang.org/account/avatar/00/0f/57/bc/cd0761ff.jpg","comment_is_top":true,"comment_ctime":1570806500,"is_pvip":true,"discussion_count":1,"race_medal":0,"score":"9.2233721071450993e+18","product_id":100035801,"comment_content":"这一节学到了很多新东西，感谢唐老师的总结！","like_count":17,"discussions":[{"author":{"id":1755152,"avatar":"https://thirdwx.qlogo.cn/mmopen/vi_32/VTPuhJb5xxuRwH1iblqrAe3De4PoETgNWibZRkLlhvszysdtpAvSPZFuYtsJfWJmoXOFFWnpR02W9NGIiammU8UPg/132","nickname":"Info_E","note":"","ucode":"97207B2CC4C776","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":550638,"discussion_content":"我不懂 但是没啥感觉","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1644649676,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":146713,"user_name":"无形","can_delete":false,"product_type":"c1","uid":1016889,"ip_address":"","ucode":"B740E2A68A17A5","user_header":"https://static001.geekbang.org/account/avatar/00/0f/84/39/c8772466.jpg","comment_is_top":false,"comment_ctime":1572614844,"is_pvip":true,"replies":[{"id":"56839","content":"👍👍👍","user_name":"作者回复","comment_id":146713,"uid":"1448977","ip_address":"","utype":1,"ctime":1572833487,"user_name_real":"唐扬"}],"discussion_count":17,"race_medal":0,"score":"276450521788","product_id":100035801,"comment_content":"之前在讲座业务重构中，用es查询数据，其他组的小伙伴维护的es，但是es性能不行，where条件里七八个字段，排序两个字段，查询es基本两千左右QPS，难以支撑支撑十几万人的直播讲座，而且直播人数增长很快，es已经成为了性能瓶颈，查询条件是类标签的，比如几年级，哪个学科，直播类型，还有时间类的，对于这些字段我是可以打标签的，还有开始时间、结束时间，根据类标签的查询特点，我使用了倒排索引+ roaring bitmap 来过滤，使用快速排序对多字段进行排序。使用类延时队列来完成时间的检索。整个检索过程在微秒级，而且对查询的结果做了缓存，查询条件相同的直接从缓存中取，避免了重复检索和排序，查询缓存会在讲座下次修改，更新倒排索引之后清空。重建查询缓存。重构完讲座的检索性能达到了几十倍的性能提升","like_count":65,"discussions":[{"author":{"id":1448977,"avatar":"https://static001.geekbang.org/account/avatar/00/16/1c/11/4b45993d.jpg","nickname":"唐扬","note":"","ucode":"1AF4C4A4DBC6EF","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":472990,"discussion_content":"👍👍👍","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1572833487,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1886331,"avatar":"https://static001.geekbang.org/account/avatar/00/1c/c8/7b/153181d7.jpg","nickname":"夜辉","note":"","ucode":"9421385F51FF9E","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":364288,"discussion_content":"整个检索过程在微秒级，这个性能是不是有点夸张了？","likes_number":4,"is_delete":false,"is_hidden":false,"ctime":1617433495,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1042793,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/e9/69/779b48c2.jpg","nickname":"苏忆","note":"","ucode":"B8BE78280CCB99","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":408032,"discussion_content":"大佬","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1635169465,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1114064,"avatar":"https://static001.geekbang.org/account/avatar/00/10/ff/d0/402be1e9.jpg","nickname":"VIC","note":"","ucode":"3B3E6D344488B2","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":295207,"discussion_content":"请教些问题，方便加我微信吗？nyzfl123","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1596118997,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":1,"child_discussions":[{"author":{"id":1016889,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/84/39/c8772466.jpg","nickname":"无形","note":"","ucode":"B740E2A68A17A5","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":1114064,"avatar":"https://static001.geekbang.org/account/avatar/00/10/ff/d0/402be1e9.jpg","nickname":"VIC","note":"","ucode":"3B3E6D344488B2","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":297017,"discussion_content":"加你了","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1596728910,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":295207,"ip_address":""},"score":297017,"extra":""}]},{"author":{"id":1276563,"avatar":"https://static001.geekbang.org/account/avatar/00/13/7a/93/c9302518.jpg","nickname":"高志强","note":"","ucode":"68737002043752","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":213857,"discussion_content":"请教一下 roaring bitmap 这个是什么东东，它在这里起到什么作用呢","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1585128596,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":1,"child_discussions":[{"author":{"id":1016889,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/84/39/c8772466.jpg","nickname":"无形","note":"","ucode":"B740E2A68A17A5","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":1276563,"avatar":"https://static001.geekbang.org/account/avatar/00/13/7a/93/c9302518.jpg","nickname":"高志强","note":"","ucode":"68737002043752","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":213891,"discussion_content":"压缩位图，保存讲座ID集合，用于各种标签之间取交集","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1585132071,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":213857,"ip_address":""},"score":213891,"extra":""}]},{"author":{"id":1232077,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/DYAIOgq83epkttbAibb21Cf4Hvq7ASReEyk5klDhxQulmnrzQWEcqslZ6qhlFf8zw0ZpG8BA65icnz8ianlZVnkFA/132","nickname":"SuperYue","note":"","ucode":"97DEDA055C462A","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":200316,"discussion_content":"倒排索引是无序的，只能做内存排序，总感觉es不太适合非搜索业务","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1583675348,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":1,"child_discussions":[{"author":{"id":1016889,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/84/39/c8772466.jpg","nickname":"无形","note":"","ucode":"B740E2A68A17A5","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":1232077,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/DYAIOgq83epkttbAibb21Cf4Hvq7ASReEyk5klDhxQulmnrzQWEcqslZ6qhlFf8zw0ZpG8BA65icnz8ianlZVnkFA/132","nickname":"SuperYue","note":"","ucode":"97DEDA055C462A","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":200820,"discussion_content":"排序的确是个问题","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1583726429,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":200316,"ip_address":""},"score":200820,"extra":""}]},{"author":{"id":1232077,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/DYAIOgq83epkttbAibb21Cf4Hvq7ASReEyk5klDhxQulmnrzQWEcqslZ6qhlFf8zw0ZpG8BA65icnz8ianlZVnkFA/132","nickname":"SuperYue","note":"","ucode":"97DEDA055C462A","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":200309,"discussion_content":"ES不是自带了缓存功能吗，要想提升es性能会超级吃内存  精确查询条件多的话，查询性能是不是会非常低，es是将多个查询条件的结果做交集的，看了这个机制，我在想es到底适不适合做复杂查询，它不像mysql的联合索引只走一遍索引 ","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1583675145,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1006864,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/5d/10/0acf7cbc.jpg","nickname":"Ryan-Hou","note":"","ucode":"5B703C1E1596A5","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":106081,"discussion_content":"学到了。感谢，但是有一个地方不太理解，使用类延时队列来完成时间的检索。这个是因为时间是不确定或者会改变的吗？这个能具体解释下嘛","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1577512379,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":1,"child_discussions":[{"author":{"id":1016889,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/84/39/c8772466.jpg","nickname":"无形","note":"","ucode":"B740E2A68A17A5","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":1006864,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/5d/10/0acf7cbc.jpg","nickname":"Ryan-Hou","note":"","ucode":"5B703C1E1596A5","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":128012,"discussion_content":"因为讲座的状态是变化的，有开始时间和结束时间，随着时间的变化，到了讲座开始时间，讲座由未开始状态变为已开始，需要更新倒排索引","likes_number":3,"is_delete":false,"is_hidden":false,"ctime":1578589987,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":106081,"ip_address":""},"score":128012,"extra":""}]},{"author":{"id":1225224,"avatar":"https://static001.geekbang.org/account/avatar/00/12/b2/08/92f42622.jpg","nickname":"尔冬橙","note":"","ucode":"0B013A49BC18DA","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":55963,"discussion_content":"可以具体说下直播为什么用到搜索？这边不太理解，影响直播在线人数的不是带宽么","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1574417970,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":2,"child_discussions":[{"author":{"id":1016889,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/84/39/c8772466.jpg","nickname":"无形","note":"","ucode":"B740E2A68A17A5","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":1225224,"avatar":"https://static001.geekbang.org/account/avatar/00/12/b2/08/92f42622.jpg","nickname":"尔冬橙","note":"","ucode":"0B013A49BC18DA","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":56216,"discussion_content":"直播列表页，用户根据直播类型、时间、年级、学科等条件检索出相匹配的讲座","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1574440427,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":55963,"ip_address":""},"score":56216,"extra":""},{"author":{"id":1225224,"avatar":"https://static001.geekbang.org/account/avatar/00/12/b2/08/92f42622.jpg","nickname":"尔冬橙","note":"","ucode":"0B013A49BC18DA","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1016889,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/84/39/c8772466.jpg","nickname":"无形","note":"","ucode":"B740E2A68A17A5","race_medal":0,"user_type":1,"is_pvip":true},"discussion":{"id":56524,"discussion_content":"我理解这个和游戏直播平台不一样，类似于慕课网这种？","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1574493864,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":56216,"ip_address":""},"score":56524,"extra":""}]},{"author":{"id":1132661,"avatar":"https://static001.geekbang.org/account/avatar/00/11/48/75/02b4366a.jpg","nickname":"乘坐Tornado的线程魔法师","note":"","ucode":"C4C9915866E769","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":51116,"discussion_content":"领教了！这位兄弟也是奋战在K12在线教育的战场嘛","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1573812739,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":1,"child_discussions":[{"author":{"id":1016889,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/84/39/c8772466.jpg","nickname":"无形","note":"","ucode":"B740E2A68A17A5","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":1132661,"avatar":"https://static001.geekbang.org/account/avatar/00/11/48/75/02b4366a.jpg","nickname":"乘坐Tornado的线程魔法师","note":"","ucode":"C4C9915866E769","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":51426,"discussion_content":"是滴","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1573870140,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":51116,"ip_address":""},"score":51426,"extra":""}]}]},{"had_liked":false,"id":139911,"user_name":"yaomon","can_delete":false,"product_type":"c1","uid":1121557,"ip_address":"","ucode":"4742547EB92BCE","user_header":"https://static001.geekbang.org/account/avatar/00/11/1d/15/8ad4e24a.jpg","comment_is_top":false,"comment_ctime":1570765150,"is_pvip":false,"replies":[{"id":"54023","content":"是的 应该是这样","user_name":"作者回复","comment_id":139911,"uid":"1448977","ip_address":"","utype":1,"ctime":1570767120,"user_name_real":"唐扬"}],"discussion_count":6,"race_medal":0,"score":"156189587806","product_id":100035801,"comment_content":"目前的项目就是 MySql 配合 Elasticsearch 使用。Elasticsearch主要是做搜索用，写还是 MySql，同时发Kafka消息，消费端写ES。ES存在丢数据的问题，所以会定时全量&#47;增量从 MySql 中捞数据，覆写 ES，保证数据的一直性。","like_count":37,"discussions":[{"author":{"id":1448977,"avatar":"https://static001.geekbang.org/account/avatar/00/16/1c/11/4b45993d.jpg","nickname":"唐扬","note":"","ucode":"1AF4C4A4DBC6EF","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":470170,"discussion_content":"是的 应该是这样","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1570767120,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1120057,"avatar":"https://static001.geekbang.org/account/avatar/00/11/17/39/3274257b.jpg","nickname":"ple","note":"","ucode":"E1C4519C325994","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":50504,"discussion_content":"数据丢的话,是不是不适合使用对数据延时要求比较高的场景?","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1573730284,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1542778,"avatar":"https://static001.geekbang.org/account/avatar/00/17/8a/7a/54003392.jpg","nickname":"Geek_27a248","note":"","ucode":"6AC3AC42E6EEC9","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":296262,"discussion_content":"我现在这个系统全部是es实现、感觉很难用，现在数据量不大还没感觉、等有了数据量感觉就撑不住了","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1596500291,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1931720,"avatar":"","nickname":"谢海辉","note":"","ucode":"0AB1F44554BC39","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":214435,"discussion_content":"如果是千W级别的mysql数据量，怎么全量更新？\n","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1585192891,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1232077,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/DYAIOgq83epkttbAibb21Cf4Hvq7ASReEyk5klDhxQulmnrzQWEcqslZ6qhlFf8zw0ZpG8BA65icnz8ianlZVnkFA/132","nickname":"SuperYue","note":"","ucode":"97DEDA055C462A","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":200325,"discussion_content":"弥补丢失的全量同步，有什么好的方法吗 更新频繁的数据，会不会导致脏数据","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1583675648,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1543348,"avatar":"https://static001.geekbang.org/account/avatar/00/17/8c/b4/318ba5ef.jpg","nickname":"OldHemp","note":"","ucode":"8F58DA0BB478F4","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":29730,"discussion_content":"我们这边是写mysql，maxwell同步binlog到kafka，再消费到ES，差不多","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1570780699,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":140118,"user_name":"jiangjing","can_delete":false,"product_type":"c1","uid":1295268,"ip_address":"","ucode":"D45001E5FB4D6F","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/ibcRNslcyp7dwIR3TIwvloCibMd7Ew2TB3MU0wISFXEolyuHRtfIriagm6PMX5zQHicmc78BrBcxA6vQ5qnTPCev9A/132","comment_is_top":false,"comment_ctime":1570821369,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"100355069177","product_id":100035801,"comment_content":"希望可以深入讲解nosql的业务使用场景，比如微博用户关系具体如何使用，模型定义。尤其是该使用场景，如何做到关系数据库不好实现的功能<br>","like_count":24},{"had_liked":false,"id":146709,"user_name":"无形","can_delete":false,"product_type":"c1","uid":1016889,"ip_address":"","ucode":"B740E2A68A17A5","user_header":"https://static001.geekbang.org/account/avatar/00/0f/84/39/c8772466.jpg","comment_is_top":false,"comment_ctime":1572613025,"is_pvip":true,"discussion_count":1,"race_medal":0,"score":"91766926241","product_id":100035801,"comment_content":"之前单表热点数据接近亿级，查询时间达到了8秒左右，后来进行了分表，按照ID取模分了一百张表，历史数据取模插入到分表中，新建了一张表用来保存全局唯一ID，每次新建热点都会更新全局唯一ID，保证分表之后ID唯一性，查询使用es，GitHub上找了一个开源的MySQL数据同步到es的工具，模拟的从库，保证了数据同步的实时性，热点数据查询性能降低到了1秒内。性能得到很大提升","like_count":22,"discussions":[{"author":{"id":1194245,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTKtYGLkKnh188BsN41yXQV41uwk1lYTQBtDIJ6fl24biaicWql4GtyLqPuUoZwSWdvGBJemTV8xIplw/132","nickname":"wanghang886","note":"","ucode":"4EDA390D87425E","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":281026,"discussion_content":"大佬，厉害呀，这是怎么做到的啊","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1591664279,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":139803,"user_name":"Lion","can_delete":false,"product_type":"c1","uid":1046693,"ip_address":"","ucode":"294219DA53038C","user_header":"https://static001.geekbang.org/account/avatar/00/0f/f8/a5/08b868e8.jpg","comment_is_top":false,"comment_ctime":1570747155,"is_pvip":false,"discussion_count":1,"race_medal":0,"score":"57405322003","product_id":100035801,"comment_content":"我们正有这些痛点，思路不错，能更深入一些就更好了！","like_count":13,"discussions":[{"author":{"id":1058510,"avatar":"https://static001.geekbang.org/account/avatar/00/10/26/ce/db5405e7.jpg","nickname":"sensitivemix","note":"","ucode":"F1E374DD4BE177","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":30665,"discussion_content":"课程内容感觉是在科普的感觉~","likes_number":6,"is_delete":false,"is_hidden":false,"ctime":1570850141,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":145993,"user_name":"Y","can_delete":false,"product_type":"c1","uid":1679880,"ip_address":"","ucode":"0CED0858B534E9","user_header":"https://static001.geekbang.org/account/avatar/00/19/a2/08/9db00d06.jpg","comment_is_top":false,"comment_ctime":1572414391,"is_pvip":false,"replies":[{"id":"56429","content":"如果是长期都是写多读少，那么可以考虑nosql<br>如果是瞬时峰值的话，还是用消息队列削峰填谷","user_name":"作者回复","comment_id":145993,"uid":"1448977","ip_address":"","utype":1,"ctime":1572478799,"user_name_real":"唐扬"}],"discussion_count":1,"race_medal":0,"score":"44522087351","product_id":100035801,"comment_content":"老师你好<br>业务中有个模块写极多读少，这种情况下是不是直接把这个数据拆分出来用单独nosql存储比较好？还是先写到nosql，再慢写到mysql好？<br>如果慢写到mysql一是可能会出现数据不一致问题，二是写请求会积累很多，内存型nosql支撑不住，可能要用leveldb之类的，磁盘多了一份数据，等要迁移的时候又增加了运维管理成本<br>","like_count":11,"discussions":[{"author":{"id":1448977,"avatar":"https://static001.geekbang.org/account/avatar/00/16/1c/11/4b45993d.jpg","nickname":"唐扬","note":"","ucode":"1AF4C4A4DBC6EF","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":472659,"discussion_content":"如果是长期都是写多读少，那么可以考虑nosql\n如果是瞬时峰值的话，还是用消息队列削峰填谷","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1572478799,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":147098,"user_name":"XD","can_delete":false,"product_type":"c1","uid":1079293,"ip_address":"","ucode":"DC9DCFB3841A4E","user_header":"https://static001.geekbang.org/account/avatar/00/10/77/fd/c6619535.jpg","comment_is_top":false,"comment_ctime":1572793248,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"40227498912","product_id":100035801,"comment_content":"老师不提一下tidb？","like_count":9},{"had_liked":false,"id":139981,"user_name":"jc9090kkk","can_delete":false,"product_type":"c1","uid":1338831,"ip_address":"","ucode":"6C992D07A2E78F","user_header":"https://static001.geekbang.org/account/avatar/00/14/6d/cf/ec335526.jpg","comment_is_top":false,"comment_ctime":1570779716,"is_pvip":false,"replies":[{"id":"54210","content":"1. LSM使用WAL也是为了恢复memtable的数据的<br>2. 是不涉及事务的<br>3. 好的呀~","user_name":"作者回复","comment_id":139981,"uid":"1448977","ip_address":"","utype":1,"ctime":1570851210,"user_name_real":"唐扬"}],"discussion_count":2,"race_medal":0,"score":"35930518084","product_id":100035801,"comment_content":"感谢老师分享，对于文中的知识点有一些疑问，希望老师能解答下：<br>1.采用LSM树的nosql，跟mysql的WAL机制类似，mysql通过redo log和bin log的两阶段提交来保证数据的crash-safe，那么nosql的日志是用来做什么呢？也是为了做数据恢复的吗？<br>2.像Hbase这样的nosql，涉及的初衷应该是为了做统计而设计的，它支持事务吗？如果支持的话，使用场景是什么？事务的隔离级别都有哪些？因为以我的理解，统计业务，基本都是读请求，很少有写请求，用事务的场景应该极少吧？<br>3.因为nosql相比传统的关系型数据库来说，拓展性更好，那么就更适合做分布式系统？后期老师有想法讲一讲比如类似redis或者mongoDB这样的系统，分布式系统的一些实际经验或者说踩过什么坑么？很想了解下。。。<br><br>思考问题：<br>公司现在用的nosql包括Redis，ES，Kafka，ClickHouse，采用Redis是用来做cache和秒杀活动，也会有一些异步化的处理，采用Kafka+ES是一是为了采集业务端用户行为，二是ES+Kibana可以提供可视化的数据分析平台供运营部门使用，而且ES在后期的水平拓展的方案上来讲配置和维护比较简单（相比Sphinx而言），为什么采用是因为公司之前接的是第三方的数据统计平台，后期发现统计需要单独定制而且会污染业务代码不好维护，而且有时候会发现数据日志还有丢失的情况导致数据统计异常，所以采用Kafka+ES一起来支撑，从而将业务端的一些耦合较重的埋点逻辑分离出去便于维护，CLickHouse主要是为了生成一些离线的数据报表。","like_count":8,"discussions":[{"author":{"id":1448977,"avatar":"https://static001.geekbang.org/account/avatar/00/16/1c/11/4b45993d.jpg","nickname":"唐扬","note":"","ucode":"1AF4C4A4DBC6EF","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":470198,"discussion_content":"1. LSM使用WAL也是为了恢复memtable的数据的\n2. 是不涉及事务的\n3. 好的呀~","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1570851210,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1010914,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/PiajxSqBRaEIgYQgM25OaLGNWPUg5NSrQuCrPNicHqNgB9lsJGMalNU18sibF4cdYxKPuwgVsIc1m5ha5voHrY9Lg/132","nickname":"jacoffee","note":"","ucode":"B3BFD39138400B","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":561866,"discussion_content":"2. HBase借鉴了谷歌的Bigtable，初衷应该还是为了海量数据存储。如果需要进行数据统计一般会引入Phoenix，它本身只支持rowkey查询是远远满足不了统计需求的。HBase也是支持事务的，目前支持行级事务，也就是对于同一行(同一个rowkey)的多个列进行修改，要么同时成功，要么同时失败。这个是基于WAL实现的，可以简单理解为一次WAL记录，会完整记录多列的改动。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1649733311,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":153093,"user_name":"fomy","can_delete":false,"product_type":"c1","uid":1125834,"ip_address":"","ucode":"CD87EA03B1F327","user_header":"https://static001.geekbang.org/account/avatar/00/11/2d/ca/02b0e397.jpg","comment_is_top":false,"comment_ctime":1574155948,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"27343959724","product_id":100035801,"comment_content":"工作中使用过的Nosql数据库：<br>ES，主要用来解决首页查询，通过logstash同步各个表的数据到ES，然后根据关键字进行查询。还有关键字联想也做了。<br>Redis主要用来做缓存的，提高查询效率的，还有秒杀也会用到缓存先减库存。<br>MongoDB主要用来存储非关系型数据，比如节点下再有节点。还有使用它来计算坐标点的距离。","like_count":6},{"had_liked":false,"id":139836,"user_name":"饭团","can_delete":false,"product_type":"c1","uid":1332557,"ip_address":"","ucode":"E24F240CC91BE8","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/DYAIOgq83erbY9UsqHZhhVoI69yXNibBBg0TRdUVsKLMg2UZ1R3NJxXdMicqceI5yhdKZ5Ad6CJYO0XpFHlJzIYQ/132","comment_is_top":false,"comment_ctime":1570754479,"is_pvip":false,"replies":[{"id":"54002","content":"benchmark结果来看，nosql的写入性能要好一些","user_name":"作者回复","comment_id":139836,"uid":"1448977","ip_address":"","utype":1,"ctime":1570756409,"user_name_real":"唐扬"}],"discussion_count":2,"race_medal":0,"score":"23045590959","product_id":100035801,"comment_content":"老师，是不是这个意思：<br>首先不管是sql数据库还是nosql数据库，提升写性能都是靠的将随机写转化为顺序写！在这方面mysql使用WAL机制已经做的很好了！但是关系形数据库主要是在扩展性方面有缺陷！相对于除了kv型的nosql数据库，其他类型的和mysql性能都差不多！<br>感觉mysql主要是在扩展性上有所欠缺！","like_count":5,"discussions":[{"author":{"id":1448977,"avatar":"https://static001.geekbang.org/account/avatar/00/16/1c/11/4b45993d.jpg","nickname":"唐扬","note":"","ucode":"1AF4C4A4DBC6EF","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":470135,"discussion_content":"benchmark结果来看，nosql的写入性能要好一些","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1570756409,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1332557,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/DYAIOgq83erbY9UsqHZhhVoI69yXNibBBg0TRdUVsKLMg2UZ1R3NJxXdMicqceI5yhdKZ5Ad6CJYO0XpFHlJzIYQ/132","nickname":"饭团","note":"","ucode":"E24F240CC91BE8","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":29246,"discussion_content":"哦 原来如此！","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1570756999,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":206224,"user_name":"钱","can_delete":false,"product_type":"c1","uid":1009652,"ip_address":"","ucode":"2C92A243A463D4","user_header":"https://static001.geekbang.org/account/avatar/00/0f/67/f4/9a1feb59.jpg","comment_is_top":false,"comment_ctime":1586825701,"is_pvip":false,"replies":[{"id":"78095","content":"赞👍","user_name":"作者回复","comment_id":206224,"uid":"1448977","ip_address":"","utype":1,"ctime":1587473334,"user_name_real":"唐扬"}],"discussion_count":1,"race_medal":0,"score":"18766694885","product_id":100035801,"comment_content":"目前REDIS&#47;ES&#47;MQ基本是标配，具体使用那个确实需要深入了解每个存储系统的特性和优劣势，这样才能扬长避短，深入了解需要时间和精力，不过干IT就需要一直学习。老师讲的本就是科普的，这些存储系统那个深入理解都需要花费许多的时间和精力，也有对应的专栏在。不过听听，总会有所受益的。","like_count":4,"discussions":[{"author":{"id":1448977,"avatar":"https://static001.geekbang.org/account/avatar/00/16/1c/11/4b45993d.jpg","nickname":"唐扬","note":"","ucode":"1AF4C4A4DBC6EF","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":491719,"discussion_content":"赞👍","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1587473334,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":164558,"user_name":"长期规划","can_delete":false,"product_type":"c1","uid":1019332,"ip_address":"","ucode":"5EF65E9115834B","user_header":"https://static001.geekbang.org/account/avatar/00/0f/8d/c4/6f97daea.jpg","comment_is_top":false,"comment_ctime":1577026814,"is_pvip":false,"replies":[{"id":"63059","content":"只是如果没有大规模使用和维护mongodb的经验，还是不敢使用的。MySQL毕竟无论是在社区还是在普及度上会更好，从招人上也能看出，熟悉MySQL的DBA比熟悉MongoDB的DBA要多很多","user_name":"作者回复","comment_id":164558,"uid":"1448977","ip_address":"","utype":1,"ctime":1577240755,"user_name_real":"唐扬"}],"discussion_count":4,"race_medal":0,"score":"18756895998","product_id":100035801,"comment_content":"老师，MongoDB从4.0之后已经支持多文档事务了。之前谈到MySQL与MongoDB，都说当使用事务时，要用MySQL，但现在MySQL对MongoDB的优势已经随着MongoDB的进化而基本没有了，而MongoDB在可用性，可扩展性方面完胜MySQL，我感觉都没有使用MySQL的必要了。不知道这种看法是否正确","like_count":4,"discussions":[{"author":{"id":1448977,"avatar":"https://static001.geekbang.org/account/avatar/00/16/1c/11/4b45993d.jpg","nickname":"唐扬","note":"","ucode":"1AF4C4A4DBC6EF","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":478814,"discussion_content":"只是如果没有大规模使用和维护mongodb的经验，还是不敢使用的。MySQL毕竟无论是在社区还是在普及度上会更好，从招人上也能看出，熟悉MySQL的DBA比熟悉MongoDB的DBA要多很多","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1577240755,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1990288,"avatar":"https://static001.geekbang.org/account/avatar/00/1e/5e/90/6ab53210.jpg","nickname":"付威","note":"","ucode":"7C0E9724647F9B","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":267707,"discussion_content":"在你认为mongoDB可以取代mysql的时候，mysql同样在考虑怎么弥补nosql，市场占有率会说明一切呢","likes_number":3,"is_delete":false,"is_hidden":false,"ctime":1589679273,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1990288,"avatar":"https://static001.geekbang.org/account/avatar/00/1e/5e/90/6ab53210.jpg","nickname":"付威","note":"","ucode":"7C0E9724647F9B","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":267703,"discussion_content":"1：是否所有的公司所有业务都有分库分表的拓展需求？\n2：mongodb的事务成熟了吗？\n3：你知道mysql5.7已经支持json了吗？而mysql8.0又完善增强了json，官方对外宣称mysql=sql+nosql了吗？\n4：如果说mysql自动扩展性方面的缺陷，不想分库分表的话，了解下TIDB","likes_number":2,"is_delete":false,"is_hidden":false,"ctime":1589679044,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1577160,"avatar":"https://thirdwx.qlogo.cn/mmopen/vi_32/TicIdNMR9b27e7Llq2Z9M3WOoNuEJ7jl2vAgVdnQD1YwuTAPich0JkekTcQEwLMwMXeRsDE7ghe9qKVMooLSQ9mA/132","nickname":"biubiubiu","note":"","ucode":"6F358E347A6873","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":350207,"discussion_content":"生态！很多语言都说要秒杀Java，但是你去招聘网站看看那些小众语言有几个岗位提供？","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1613745596,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":143582,"user_name":"某某丶","can_delete":false,"product_type":"c1","uid":1709835,"ip_address":"","ucode":"5198C9D49672BE","user_header":"https://static001.geekbang.org/account/avatar/00/1a/17/0b/fd9a4ff9.jpg","comment_is_top":false,"comment_ctime":1571736919,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"18751606103","product_id":100035801,"comment_content":"老师你好，我看到网络上的es+mysql协作使用的方案，<br>1.将数据存储到mysql、将索引字段存储到es（新增数据的时候先写入到mysql然后kafka到es）,然后根据条件在es中检索出符合条件的记录id数组，然后再根据ids到mysql 中in子查询 ids在多个表（分表）中取回数据吗，效率会高吗？，毕竟查出来在in查询，in的id还要走分表键<br>2.将es的修改flush到磁盘设置为每次写操作的时候执行数据不会丢失、性能会急剧下降吗，就是相关的数据直接存es，检索不用去mysql回表查这样合理吗？<br>3.往mysql写的时候就向kafka中写入数据然后消费者取到后就往es中写，这个过程需要消费者缓存一定的消息数量再批量写到es中吗，还是就是消费者接到消息实时写，或者实时写会有什么问题？<br>希望导师解惑","like_count":5},{"had_liked":false,"id":140725,"user_name":"Liush","can_delete":false,"product_type":"c1","uid":1670430,"ip_address":"","ucode":"A02C6AD7B2DD8D","user_header":"https://static001.geekbang.org/account/avatar/00/19/7d/1e/ba1a32aa.jpg","comment_is_top":false,"comment_ctime":1571038304,"is_pvip":false,"replies":[{"id":"54582","content":"微博的博文是放在MySQL里面的，其实博文的数量没有关系那么夸张，而且热点明显，用户很少会翻之前的微博。<br>订单的数据可能和博文的数据相当，我觉得放在mysql中应该就够了","user_name":"作者回复","comment_id":140725,"uid":"1448977","ip_address":"","utype":1,"ctime":1571118151,"user_name_real":"唐扬"}],"discussion_count":1,"race_medal":0,"score":"18750907488","product_id":100035801,"comment_content":"老师你好:<br>其实我对什么时候使用SQL,NOSQL,或者是NEWSQL一直存在很多疑问，就比如微博来说，每天微博增加的博文数量应该是非常大的，如果这部分用关系型数据库来存储是不是分库会很快达到瓶颈？这样会造成重新迁移分布数据,如果手动去迁移分布这部分数据，由于存在大量的历史数据迁移时间是否又是一个问题呢？像微博博文这部分是存储在SQL中还是NOSQL中？如果用nosql的话后续只要简单的将节点加入集群即可，auto sharding的特性会方便很多。如果按照我的理解在电商领域中，订单是核心系统，而且和订单系统关联的商品等数据，这部分使用关系型数据库分库分表的方式去处理，因为这部分系统需要保证事务，但是像商品详情这部分并不需要强事务的数据是否可以存储在NOSQL中？谢谢","like_count":4,"discussions":[{"author":{"id":1448977,"avatar":"https://static001.geekbang.org/account/avatar/00/16/1c/11/4b45993d.jpg","nickname":"唐扬","note":"","ucode":"1AF4C4A4DBC6EF","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":470528,"discussion_content":"微博的博文是放在MySQL里面的，其实博文的数量没有关系那么夸张，而且热点明显，用户很少会翻之前的微博。\n订单的数据可能和博文的数据相当，我觉得放在mysql中应该就够了","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1571118151,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":139874,"user_name":"gogo","can_delete":false,"product_type":"c1","uid":1003104,"ip_address":"","ucode":"E8F0F3B000020A","user_header":"https://static001.geekbang.org/account/avatar/00/0f/4e/60/0d5aa340.jpg","comment_is_top":false,"comment_ctime":1570759251,"is_pvip":false,"replies":[{"id":"54014","content":"大部分放在mysql，像是粉丝数据是在nosql<br>","user_name":"作者回复","comment_id":139874,"uid":"1448977","ip_address":"","utype":1,"ctime":1570760721,"user_name_real":"唐扬"}],"discussion_count":1,"race_medal":0,"score":"18750628435","product_id":100035801,"comment_content":"老师您好，你文中微博关系的例子中提到传统关系型数据库扩展性的短板，又说明了nosql有很好的性能和扩展性，请问拿微博关系的例子来说，是可以单独用nosql存储呢，还是既要存在nosql中又要保存在msylq中呢？","like_count":4,"discussions":[{"author":{"id":1448977,"avatar":"https://static001.geekbang.org/account/avatar/00/16/1c/11/4b45993d.jpg","nickname":"唐扬","note":"","ucode":"1AF4C4A4DBC6EF","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":470152,"discussion_content":"大部分放在mysql，像是粉丝数据是在nosql\n","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1570760721,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":139859,"user_name":"饭团","can_delete":false,"product_type":"c1","uid":1332557,"ip_address":"","ucode":"E24F240CC91BE8","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/DYAIOgq83erbY9UsqHZhhVoI69yXNibBBg0TRdUVsKLMg2UZ1R3NJxXdMicqceI5yhdKZ5Ad6CJYO0XpFHlJzIYQ/132","comment_is_top":false,"comment_ctime":1570757200,"is_pvip":false,"replies":[{"id":"54015","content":"是的呀 比如你的业务数据放在mysql，索引数据放在es","user_name":"作者回复","comment_id":139859,"uid":"1448977","ip_address":"","utype":1,"ctime":1570760749,"user_name_real":"唐扬"}],"discussion_count":2,"race_medal":0,"score":"18750626384","product_id":100035801,"comment_content":"老师，再问个问题！如果一类数据需要在nosql和关系形数据库都存储，需要存2次吗？现实开发中这样的情况多吗？能举个例子吗？","like_count":4,"discussions":[{"author":{"id":1448977,"avatar":"https://static001.geekbang.org/account/avatar/00/16/1c/11/4b45993d.jpg","nickname":"唐扬","note":"","ucode":"1AF4C4A4DBC6EF","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":470146,"discussion_content":"是的呀 比如你的业务数据放在mysql，索引数据放在es","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1570760749,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1332557,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/DYAIOgq83erbY9UsqHZhhVoI69yXNibBBg0TRdUVsKLMg2UZ1R3NJxXdMicqceI5yhdKZ5Ad6CJYO0XpFHlJzIYQ/132","nickname":"饭团","note":"","ucode":"E24F240CC91BE8","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":29325,"discussion_content":"对。明白了！","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1570761867,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":166681,"user_name":"扬一场远远的风","can_delete":false,"product_type":"c1","uid":1357801,"ip_address":"","ucode":"AB47E3D2EAB8A8","user_header":"https://static001.geekbang.org/account/avatar/00/14/b7/e9/5400cdf3.jpg","comment_is_top":false,"comment_ctime":1577543066,"is_pvip":false,"replies":[{"id":"63854","content":"我觉得还是成熟度的原因","user_name":"作者回复","comment_id":166681,"uid":"1448977","ip_address":"","utype":1,"ctime":1577586521,"user_name_real":"唐扬"}],"discussion_count":1,"race_medal":0,"score":"14462444954","product_id":100035801,"comment_content":"NOSql使用LSM 树（Log-Structured Merge Tree），牺牲了一定的读性能来换取写入数据的高性能，Hbase、Cassandra、LevelDB 都是用这种算法作为存储的引擎。是不是就是因为读性能的原因，所以走支持自动分片的mongodb, es ,hbase现在还不能替代 mysql (即使mysql 需要在client 写大量的代码来实现分区)?","like_count":3,"discussions":[{"author":{"id":1448977,"avatar":"https://static001.geekbang.org/account/avatar/00/16/1c/11/4b45993d.jpg","nickname":"唐扬","note":"","ucode":"1AF4C4A4DBC6EF","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":479587,"discussion_content":"我觉得还是成熟度的原因","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1577586521,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":162334,"user_name":"长期规划","can_delete":false,"product_type":"c1","uid":1019332,"ip_address":"","ucode":"5EF65E9115834B","user_header":"https://static001.geekbang.org/account/avatar/00/0f/8d/c4/6f97daea.jpg","comment_is_top":false,"comment_ctime":1576501420,"is_pvip":false,"discussion_count":2,"race_medal":0,"score":"14461403308","product_id":100035801,"comment_content":"老师，我还是没明白为何LSM写入快。MySQL的B+树也是先写内存，然后定期刷盘，在数据页中，数据也是有序的（按主键排）。<br>LSM中的SSTable应该也是有大小的吧，类似于MySQL的数据页有大小（好像是不到1M）。访问不同的SSTable也是随机访问啊，为何写入会快？","like_count":3,"discussions":[{"author":{"id":1010914,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/PiajxSqBRaEIgYQgM25OaLGNWPUg5NSrQuCrPNicHqNgB9lsJGMalNU18sibF4cdYxKPuwgVsIc1m5ha5voHrY9Lg/132","nickname":"jacoffee","note":"","ucode":"B3BFD39138400B","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":561876,"discussion_content":"其实主要是你的第二段这个地方，LSM内存中还有一个数据叫memtable(sstable指的是磁盘上的结构)，比如说HBase中的Memstore，作为内部写缓存。内部会使用跳表对于数据按照key进行整理，保证有序。\n当内存中的数据结构达到一定阈值，然后直接刷写到磁盘。HBase中对应HFile，每一次都是一个独立的文件，顺序写盘。 而B-tree落盘，比如说将脏页刷盘这种过程是随机写的。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1649734885,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1033240,"avatar":"https://wx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTJkwbyTYtSCx6Qc7cQPnnRWv38Jybh3etziaPmuP8gHcgS6FMxcdftrKgWiamH6fc2iciaicDKDVEwcEibQ/132","nickname":"sami","note":"","ucode":"9A66FCA00D8A37","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":295212,"discussion_content":"个人感觉lsm只会写入memtable（在内存中）和wal日志就结束了，MySQL需要维护索引页和数据页","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1596119615,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":141596,"user_name":"licong","can_delete":false,"product_type":"c1","uid":1502601,"ip_address":"","ucode":"02478E64E9D223","user_header":"https://static001.geekbang.org/account/avatar/00/16/ed/89/86340059.jpg","comment_is_top":false,"comment_ctime":1571198123,"is_pvip":true,"replies":[{"id":"54789","content":"在实际运用中，nosql数据库比如leveldb确实比mysql有后来更好的写入性能","user_name":"作者回复","comment_id":141596,"uid":"1448977","ip_address":"","utype":1,"ctime":1571271966,"user_name_real":"唐扬"}],"discussion_count":3,"race_medal":0,"score":"14456100011","product_id":100035801,"comment_content":"关于《使用 NoSQL 提升写入性能》的那段，我还是有点想法：<br>即使是NoSQL的一些组件，假如是写磁盘的话，再怎么优化改进，也跟MySQL等传统的关系型数据库的写入性能差不多，都是同一个量级的。<br>Redis、MemCache等NoSQL数据库之所以读写性能高，是因为直接读写的内存，跟关系型数据库读写磁盘（也会缓存部分数据在内存中），利用的物理资源的性能都完全不是一个数量级。跟具体操作的物理资源的特性关系比较大。","like_count":3,"discussions":[{"author":{"id":1448977,"avatar":"https://static001.geekbang.org/account/avatar/00/16/1c/11/4b45993d.jpg","nickname":"唐扬","note":"","ucode":"1AF4C4A4DBC6EF","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":470815,"discussion_content":"在实际运用中，nosql数据库比如leveldb确实比mysql有后来更好的写入性能","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1571271966,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1067581,"avatar":"https://static001.geekbang.org/account/avatar/00/10/4a/3d/07df0cb7.jpg","nickname":"老磨","note":"","ucode":"5255F0CBAAEAEF","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":40579,"discussion_content":"我觉得不全面，lsm很多时候借鉴了存储介质的物理特性，并不全是因为内存的速度快，我以前工作时候写ssd storage就是lsm，因为lsm的工作原理特别适合ssd的存储特性，例如不删除修改数据，只合并数据。","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1572237628,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1067846,"avatar":"https://static001.geekbang.org/account/avatar/00/10/4b/46/717d5cb9.jpg","nickname":"惜心（伟祺）","note":"","ucode":"393DF1A9E81332","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":63093,"discussion_content":"不全是存内存带来的 和lsm存储优化也有和大关系\n所以可以做到写快 读性能也不错","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1574866514,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":140106,"user_name":"旅途","can_delete":false,"product_type":"c1","uid":1212902,"ip_address":"","ucode":"5022477E8E9441","user_header":"https://static001.geekbang.org/account/avatar/00/12/81/e6/6cafed37.jpg","comment_is_top":false,"comment_ctime":1570809331,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"14455711219","product_id":100035801,"comment_content":"学到了很多 第一次知道nosql快是因为索引，顺序io,赞赞赞","like_count":3},{"had_liked":false,"id":140098,"user_name":"程序水果宝","can_delete":false,"product_type":"c1","uid":1371633,"ip_address":"","ucode":"1700DDFE073A56","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/DYAIOgq83eqyicZYyW7ahaXgXUD8ZAS8x0t8jx5rYLhwbUCJiawRepKIZfsLdkxdQ9XQMo99c1UDibmNVfFnAqwPg/132","comment_is_top":false,"comment_ctime":1570806611,"is_pvip":false,"replies":[{"id":"54167","content":"mysql变更字段会锁表，而且mysql字段多的话会有性能上的问题","user_name":"作者回复","user_name_real":"唐扬","uid":"1448977","ctime":1570836986,"ip_address":"","comment_id":140098,"utype":1}],"discussion_count":1,"race_medal":0,"score":"14455708499","product_id":100035801,"comment_content":"老师说“电商系统中的商品有非常多的字段，并且不同品类的商品的字段也都不尽相同，使用关系型数据库就需要不断增加字段支持，而用文档型数据库就简单很多了”。文档型数据库也应该要新增字段吧，它的简单是体现在哪里呢？","like_count":3,"discussions":[{"author":{"id":1448977,"avatar":"https://static001.geekbang.org/account/avatar/00/16/1c/11/4b45993d.jpg","nickname":"唐扬","note":"","ucode":"1AF4C4A4DBC6EF","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":470245,"discussion_content":"mysql变更字段会锁表，而且mysql字段多的话会有性能上的问题","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1570836986,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":139942,"user_name":"哇哦","can_delete":false,"product_type":"c1","uid":1250599,"ip_address":"","ucode":"1F16B9150E93C3","user_header":"https://static001.geekbang.org/account/avatar/00/13/15/27/c5e4ec99.jpg","comment_is_top":false,"comment_ctime":1570771294,"is_pvip":false,"replies":[{"id":"54171","content":"如果对mogodb不熟悉的话可以考虑分库分表，中间件的话如果业务不大可以用sharding-jdbc","user_name":"作者回复","user_name_real":"唐扬","uid":"1448977","ctime":1570837210,"ip_address":"","comment_id":139942,"utype":1}],"discussion_count":1,"race_medal":0,"score":"14455673182","product_id":100035801,"comment_content":"最近正好碰到分库分表的问题，我们有一个记录表几千w,基本上都是插入和读取，没有连表查询。这种情况是选择myql不分库先分表(就一张表暂时先不分库,)，还是直接用mogodb 之类的(直接放进入建个索引就可以不管了?)。如果是分库分表有什么中间件和框架推荐吗(sharding-jdbc,mycat?),谢谢老师。","like_count":3,"discussions":[{"author":{"id":1448977,"avatar":"https://static001.geekbang.org/account/avatar/00/16/1c/11/4b45993d.jpg","nickname":"唐扬","note":"","ucode":"1AF4C4A4DBC6EF","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":470183,"discussion_content":"如果对mogodb不熟悉的话可以考虑分库分表，中间件的话如果业务不大可以用sharding-jdbc","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1570837210,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":162366,"user_name":"长期规划","can_delete":false,"product_type":"c1","uid":1019332,"ip_address":"","ucode":"5EF65E9115834B","user_header":"https://static001.geekbang.org/account/avatar/00/0f/8d/c4/6f97daea.jpg","comment_is_top":false,"comment_ctime":1576504671,"is_pvip":false,"replies":[{"id":"62148","content":"一般是比较平滑的","user_name":"作者回复","user_name_real":"唐扬","uid":"1448977","ctime":1576736258,"ip_address":"","comment_id":162366,"utype":1}],"discussion_count":1,"race_medal":0,"score":"10166439263","product_id":100035801,"comment_content":"老师，MongoDB在对数据进行重新分配时，对服务会有影响吗？如果没有影响，那真是太厉害了。解决了分布式存储的一大难题。原来这个也有通用解决方案","like_count":2,"discussions":[{"author":{"id":1448977,"avatar":"https://static001.geekbang.org/account/avatar/00/16/1c/11/4b45993d.jpg","nickname":"唐扬","note":"","ucode":"1AF4C4A4DBC6EF","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":478029,"discussion_content":"一般是比较平滑的","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1576736258,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":140775,"user_name":"longslee","can_delete":false,"product_type":"c1","uid":1465986,"ip_address":"","ucode":"C24E32E5B1B6F5","user_header":"https://static001.geekbang.org/account/avatar/00/16/5e/82/438c8534.jpg","comment_is_top":false,"comment_ctime":1571047127,"is_pvip":false,"replies":[{"id":"54496","content":"怎么会呢，分布式之后应该可以知道某个key在哪个分片上","user_name":"作者回复","user_name_real":"唐扬","uid":"1448977","ctime":1571065233,"ip_address":"","comment_id":140775,"utype":1}],"discussion_count":5,"race_medal":0,"score":"10160981719","product_id":100035801,"comment_content":"打卡。咱用到了ElasticSearch和Redis。 选用ES是用来存储海量的，从Kafka入过来的。 Redis用于一些逻辑的过滤或者按时间聚合。 踩过的坑呀，我不知道算不算坑，还是说我们运维能力不够，Redis分布式以后，某个Key在哪，要去好多地方查- -","like_count":2,"discussions":[{"author":{"id":1448977,"avatar":"https://static001.geekbang.org/account/avatar/00/16/1c/11/4b45993d.jpg","nickname":"唐扬","note":"","ucode":"1AF4C4A4DBC6EF","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":470550,"discussion_content":"怎么会呢，分布式之后应该可以知道某个key在哪个分片上","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1571065233,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1297887,"avatar":"https://static001.geekbang.org/account/avatar/00/13/cd/df/c520d418.jpg","nickname":"董俊俊","note":"","ucode":"732300A779660B","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":536708,"discussion_content":"这个应该是开发的问题吧！","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1638851831,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1350425,"avatar":"https://static001.geekbang.org/account/avatar/00/14/9b/19/41dbba8c.jpg","nickname":"破晓","note":"","ucode":"1162E00FF08DF3","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":371633,"discussion_content":"linux的redis命令行，很容易查询key的位置。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1619879630,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1205627,"avatar":"https://static001.geekbang.org/account/avatar/00/12/65/7b/66b9befd.jpg","nickname":"Hwan","note":"","ucode":"A728C6790511BD","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":41414,"discussion_content":"会有MOVED重定向提示，再把连接切换到新的节点上去就行了","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1572422045,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1465986,"avatar":"https://static001.geekbang.org/account/avatar/00/16/5e/82/438c8534.jpg","nickname":"longslee","note":"","ucode":"C24E32E5B1B6F5","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":33150,"discussion_content":"老师，我是指维护查问题的时候，想查这个key，通过redis客户端或者可视化客户端","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1571102905,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":199968,"user_name":"Alex","can_delete":false,"product_type":"c1","uid":1182690,"ip_address":"","ucode":"6726EA3EFD2F79","user_header":"https://static001.geekbang.org/account/avatar/00/12/0b/e2/68daf201.jpg","comment_is_top":false,"comment_ctime":1585525542,"is_pvip":false,"replies":[{"id":"74853","content":"是的，否则当业务深度应用时，再发现问题，就要影响业务了","user_name":"作者回复","user_name_real":"唐扬","uid":"1448977","ctime":1585538716,"ip_address":"","comment_id":199968,"utype":1}],"discussion_count":1,"race_medal":0,"score":"5880492838","product_id":100035801,"comment_content":"最近正在学习es，听了老师的建议后，需要对原理和运维方面做更多的研究，提前排坑。","like_count":1,"discussions":[{"author":{"id":1448977,"avatar":"https://static001.geekbang.org/account/avatar/00/16/1c/11/4b45993d.jpg","nickname":"唐扬","note":"","ucode":"1AF4C4A4DBC6EF","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":489908,"discussion_content":"是的，否则当业务深度应用时，再发现问题，就要影响业务了","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1585538716,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":196391,"user_name":"lofaith","can_delete":false,"product_type":"c1","uid":1322553,"ip_address":"","ucode":"5DF6922BBF1AD5","user_header":"https://static001.geekbang.org/account/avatar/00/14/2e/39/7682b49e.jpg","comment_is_top":false,"comment_ctime":1585277980,"is_pvip":false,"replies":[{"id":"75177","content":"看量级吧 看起来可以用分库分表+缓存来解决","user_name":"作者回复","user_name_real":"唐扬","uid":"1448977","ctime":1585700561,"ip_address":"","comment_id":196391,"utype":1}],"discussion_count":1,"race_medal":0,"score":"5880245276","product_id":100035801,"comment_content":"老师，我有个表数据量很大，但是写少读多，这样的表是否放在nosql中更好呢","like_count":1,"discussions":[{"author":{"id":1448977,"avatar":"https://static001.geekbang.org/account/avatar/00/16/1c/11/4b45993d.jpg","nickname":"唐扬","note":"","ucode":"1AF4C4A4DBC6EF","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":489285,"discussion_content":"看量级吧 看起来可以用分库分表+缓存来解决","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1585700561,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":187869,"user_name":"xuanyuan","can_delete":false,"product_type":"c1","uid":1113737,"ip_address":"","ucode":"1EC79B9372868F","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTI2icbib62icXtibTkThtyRksbuJLoTLMts7zook2S30MiaBtbz0f5JskwYicwqXkhpYfvCpuYkcvPTibEaQ/132","comment_is_top":false,"comment_ctime":1584262736,"is_pvip":false,"replies":[{"id":"73104","content":"就怕招聘难啊","user_name":"作者回复","user_name_real":"唐扬","uid":"1448977","ctime":1584590829,"ip_address":"","comment_id":187869,"utype":1}],"discussion_count":1,"race_medal":0,"score":"5879230032","product_id":100035801,"comment_content":"es遇到问题，团队没有人，可以招聘啊，切回mysql的成本不是更大吗？","like_count":1,"discussions":[{"author":{"id":1448977,"avatar":"https://static001.geekbang.org/account/avatar/00/16/1c/11/4b45993d.jpg","nickname":"唐扬","note":"","ucode":"1AF4C4A4DBC6EF","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":487276,"discussion_content":"就怕招聘难啊","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1584590829,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":174528,"user_name":"勇敢的心","can_delete":false,"product_type":"c1","uid":1085309,"ip_address":"","ucode":"C7136797DB55FC","user_header":"https://static001.geekbang.org/account/avatar/00/10/8f/7d/90598e6d.jpg","comment_is_top":false,"comment_ctime":1580267125,"is_pvip":false,"replies":[{"id":"68364","content":"放在es里面，方便检索","user_name":"作者回复","user_name_real":"唐扬","uid":"1448977","ctime":1580873109,"ip_address":"","comment_id":174528,"utype":1}],"discussion_count":1,"race_medal":0,"score":"5875234421","product_id":100035801,"comment_content":"我想问一下老师，关于日志（包括系统日志、操作日志等等），是放在ES中还是放在mongoDB中比较合适？如果是您，您选择哪一种？","like_count":1,"discussions":[{"author":{"id":1448977,"avatar":"https://static001.geekbang.org/account/avatar/00/16/1c/11/4b45993d.jpg","nickname":"唐扬","note":"","ucode":"1AF4C4A4DBC6EF","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":482432,"discussion_content":"放在es里面，方便检索","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1580873109,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":166680,"user_name":"扬一场远远的风","can_delete":false,"product_type":"c1","uid":1357801,"ip_address":"","ucode":"AB47E3D2EAB8A8","user_header":"https://static001.geekbang.org/account/avatar/00/14/b7/e9/5400cdf3.jpg","comment_is_top":false,"comment_ctime":1577542945,"is_pvip":false,"replies":[{"id":"63855","content":"是的","user_name":"作者回复","user_name_real":"唐扬","uid":"1448977","ctime":1577586532,"ip_address":"","comment_id":166680,"utype":1}],"discussion_count":1,"race_medal":0,"score":"5872510241","product_id":100035801,"comment_content":"NOSql使用 LSM 树（Log-Structured Merge Tree），牺牲了一定的读性能来换取写入数据的高性能，Hbase、Cassandra、LevelDB 都是用这种算法作为存储的引擎。","like_count":1,"discussions":[{"author":{"id":1448977,"avatar":"https://static001.geekbang.org/account/avatar/00/16/1c/11/4b45993d.jpg","nickname":"唐扬","note":"","ucode":"1AF4C4A4DBC6EF","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":479586,"discussion_content":"是的","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1577586532,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":165040,"user_name":"书中迷梦","can_delete":false,"product_type":"c1","uid":1103010,"ip_address":"","ucode":"1C6B697F41698F","user_header":"https://static001.geekbang.org/account/avatar/00/10/d4/a2/fa41c8a8.jpg","comment_is_top":false,"comment_ctime":1577151396,"is_pvip":false,"replies":[{"id":"63046","content":"java中的RandomAccessFile可以实现随机读写的呀","user_name":"作者回复","user_name_real":"唐扬","uid":"1448977","ctime":1577239771,"ip_address":"","comment_id":165040,"utype":1}],"discussion_count":1,"race_medal":0,"score":"5872118692","product_id":100035801,"comment_content":"对于技术原型问题，我觉得可以在非核心系统上来实验，积累经验以后再迁移核心系统，还有一个问题想咨询老师，不单单NOSql,像MQ,ZK的数据保存也是记录顺序文件，然后异步同步的！在Java中哪些流是操作顺序写文件的哪些是随机写文件的？还是说顺序和随机是需要自己控制，而Java并没有提供顺序写文件的类？","like_count":1,"discussions":[{"author":{"id":1448977,"avatar":"https://static001.geekbang.org/account/avatar/00/16/1c/11/4b45993d.jpg","nickname":"唐扬","note":"","ucode":"1AF4C4A4DBC6EF","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":478997,"discussion_content":"java中的RandomAccessFile可以实现随机读写的呀","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1577239771,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":157737,"user_name":"大鸡腿🍗","can_delete":false,"product_type":"c1","uid":1413499,"ip_address":"","ucode":"38AF8AE00F6166","user_header":"https://static001.geekbang.org/account/avatar/00/15/91/7b/2dd4d0c1.jpg","comment_is_top":false,"comment_ctime":1575252445,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"5870219741","product_id":100035801,"comment_content":"有点异议：原文说主键可能会随机IO，但是我觉得既然聚集索引物理，逻辑都有序，应该是顺序IO才对呀，老师","like_count":1},{"had_liked":false,"id":147486,"user_name":"海罗沃德","can_delete":false,"product_type":"c1","uid":1165364,"ip_address":"","ucode":"8704F1D6980FA0","user_header":"https://static001.geekbang.org/account/avatar/00/11/c8/34/fb871b2c.jpg","comment_is_top":false,"comment_ctime":1572866552,"is_pvip":false,"replies":[{"id":"57037","content":"其实这就是把MongoDB作为“缓存”了，是可行的<br>不过从描述来看，前端写入数据会更新MongoDB，再异步更新数据库；然后还会有一个消息队列会从业务数据库读取数据更新MongoDB，这两个是不是有重复？","user_name":"作者回复","user_name_real":"唐扬","uid":"1448977","ctime":1572939240,"ip_address":"","comment_id":147486,"utype":1}],"discussion_count":2,"race_medal":0,"score":"5867833848","product_id":100035801,"comment_content":"使用MongoDB作为一个中间层，把前端需要的跟展示页面相关的数据都按照JSON格式保存起来，后端通过消息队列的形式从实际业务数据库中读取数据维护MongoDB中的数据，前端写入数据时候也是直接更新MongoDB的数据，然后给消息队列发消息，让后端异步的去更新数据库，同时MongoDB中通过定时任务保证只存储热数据，超过10页以上的数据移动到AWS S3这样的文件存储系统中作为冷数据保存<br><br>在非支付的业务场景下，这样避免前端直接查询和写入数据库，是否是一个可取的方案，老师对这样的方案有什么建议么？","like_count":1,"discussions":[{"author":{"id":1448977,"avatar":"https://static001.geekbang.org/account/avatar/00/16/1c/11/4b45993d.jpg","nickname":"唐扬","note":"","ucode":"1AF4C4A4DBC6EF","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":473253,"discussion_content":"其实这就是把MongoDB作为“缓存”了，是可行的\n不过从描述来看，前端写入数据会更新MongoDB，再异步更新数据库；然后还会有一个消息队列会从业务数据库读取数据更新MongoDB，这两个是不是有重复？","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1572939240,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1886331,"avatar":"https://static001.geekbang.org/account/avatar/00/1c/c8/7b/153181d7.jpg","nickname":"夜辉","note":"","ucode":"9421385F51FF9E","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":364303,"discussion_content":"后端通过消息队列的形式从实际业务数据库中读取数据维护MongoDB中的数据\n前端写入数据时候也是直接更新MongoDB的数据，然后给消息队列发消息\n前端和后端只要有一处维护MongoDB数据即可吧？","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1617438244,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":146029,"user_name":"Hwan","can_delete":false,"product_type":"c1","uid":1205627,"ip_address":"","ucode":"A728C6790511BD","user_header":"https://static001.geekbang.org/account/avatar/00/12/65/7b/66b9befd.jpg","comment_is_top":false,"comment_ctime":1572421797,"is_pvip":false,"replies":[{"id":"56428","content":"redis是内存操作，但是写aof是顺序写的","user_name":"作者回复","user_name_real":"唐扬","uid":"1448977","ctime":1572478734,"ip_address":"","comment_id":146029,"utype":1}],"discussion_count":1,"race_medal":0,"score":"5867389093","product_id":100035801,"comment_content":"自己用过ES和Redis,没有使用过MongoDB，不过从老师上面的描述上看，好多地方和ES很相像，比如分片和副本啥的，还有负载均衡，想问下老师，Redis在提升性能方面也是顺序写吗？还是Redis本来就是内存，然后速度很快","like_count":1,"discussions":[{"author":{"id":1448977,"avatar":"https://static001.geekbang.org/account/avatar/00/16/1c/11/4b45993d.jpg","nickname":"唐扬","note":"","ucode":"1AF4C4A4DBC6EF","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":472679,"discussion_content":"redis是内存操作，但是写aof是顺序写的","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1572478734,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":144522,"user_name":"云师兄","can_delete":false,"product_type":"c1","uid":1010459,"ip_address":"","ucode":"4475AF1598FBFD","user_header":"https://static001.geekbang.org/account/avatar/00/0f/6b/1b/4b397b80.jpg","comment_is_top":false,"comment_ctime":1571965110,"is_pvip":false,"replies":[{"id":"55706","content":"可以先写日志，再合并的时候修改","user_name":"作者回复","user_name_real":"唐扬","uid":"1448977","ctime":1571968261,"ip_address":"","comment_id":144522,"utype":1}],"discussion_count":1,"race_medal":0,"score":"5866932406","product_id":100035801,"comment_content":"Lsm的数据结构，当涉及到修改某条数据时候（已经刷盘了），需要在有序磁盘文件中找到该数据行进行修改，是否也可能存在页分解，造成后续数据的迁移？","like_count":1,"discussions":[{"author":{"id":1448977,"avatar":"https://static001.geekbang.org/account/avatar/00/16/1c/11/4b45993d.jpg","nickname":"唐扬","note":"","ucode":"1AF4C4A4DBC6EF","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":471987,"discussion_content":"可以先写日志，再合并的时候修改","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1571968261,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":143233,"user_name":"FreeMason","can_delete":false,"product_type":"c1","uid":1340120,"ip_address":"","ucode":"3D58AC2F9AB345","user_header":"https://static001.geekbang.org/account/avatar/00/14/72/d8/9eedbc5e.jpg","comment_is_top":false,"comment_ctime":1571652250,"is_pvip":false,"replies":[{"id":"55361","content":"日志在文件中是顺序追加写入的<br>数据是要找到写入的位置，旋转磁头写入的","user_name":"作者回复","user_name_real":"唐扬","uid":"1448977","ctime":1571701438,"ip_address":"","comment_id":143233,"utype":1}],"discussion_count":3,"race_medal":0,"score":"5866619546","product_id":100035801,"comment_content":"对于 随机 IO 与顺序 IO 不是怎么理解，搜索出来的答案解释，都没找到好理解满意的。<br>疑问：<br>MySQL + Innodb 日志类文件如：redo log、undo log、binlog ... 等都是顺序 IO，顺序IO 与 随机IO 文件都是放在磁盘上的，为什么数据类都不能跟日志类一样是顺序 IO 呢？","like_count":1,"discussions":[{"author":{"id":1448977,"avatar":"https://static001.geekbang.org/account/avatar/00/16/1c/11/4b45993d.jpg","nickname":"唐扬","note":"","ucode":"1AF4C4A4DBC6EF","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":471438,"discussion_content":"日志在文件中是顺序追加写入的\n数据是要找到写入的位置，旋转磁头写入的","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1571701438,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1886331,"avatar":"https://static001.geekbang.org/account/avatar/00/1c/c8/7b/153181d7.jpg","nickname":"夜辉","note":"","ucode":"9421385F51FF9E","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":364309,"discussion_content":"一直才有顺序写，两个顺序写的过程中来回切换，岂不是随机IO","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1617439079,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1762252,"avatar":"https://static001.geekbang.org/account/avatar/00/1a/e3/cc/0947ff0b.jpg","nickname":"nestle","note":"","ucode":"469800BED81B54","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":160942,"discussion_content":"顺序追加写，磁头也应该要先定位到空白的磁盘块上才能写吧，岂不是也需要寻道时间？","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1580832068,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":140630,"user_name":"帝子","can_delete":false,"product_type":"c1","uid":1675382,"ip_address":"","ucode":"1E4E9D8962901E","user_header":"https://static001.geekbang.org/account/avatar/00/19/90/76/25eda12f.jpg","comment_is_top":false,"comment_ctime":1571018675,"is_pvip":false,"replies":[{"id":"54404","content":"是的呀~","user_name":"作者回复","user_name_real":"唐扬","uid":"1448977","ctime":1571038628,"ip_address":"","comment_id":140630,"utype":1}],"discussion_count":1,"race_medal":0,"score":"5865985971","product_id":100035801,"comment_content":"对于搜索，是不是只需要在es中搜索就可以？不需要到mysql中搜索？","like_count":1,"discussions":[{"author":{"id":1448977,"avatar":"https://static001.geekbang.org/account/avatar/00/16/1c/11/4b45993d.jpg","nickname":"唐扬","note":"","ucode":"1AF4C4A4DBC6EF","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":470480,"discussion_content":"是的呀~","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1571038628,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":140312,"user_name":"永光","can_delete":false,"product_type":"c1","uid":1102702,"ip_address":"","ucode":"0C54531ABED1B0","user_header":"https://static001.geekbang.org/account/avatar/00/10/d3/6e/281b85aa.jpg","comment_is_top":false,"comment_ctime":1570875653,"is_pvip":false,"replies":[{"id":"54300","content":"读性能可以使用缓存","user_name":"作者回复","user_name_real":"唐扬","uid":"1448977","ctime":1570970349,"ip_address":"","comment_id":140312,"utype":1}],"discussion_count":1,"race_medal":0,"score":"5865842949","product_id":100035801,"comment_content":"老师好，<br>“在性能方面，NoSQL 数据库使用一些算法将对磁盘的随机写转换成顺序写，提升了写的性能；”写性能提高了，读的性能下降了，读性能怎么优化？<br>谢谢<br>","like_count":1,"discussions":[{"author":{"id":1448977,"avatar":"https://static001.geekbang.org/account/avatar/00/16/1c/11/4b45993d.jpg","nickname":"唐扬","note":"","ucode":"1AF4C4A4DBC6EF","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":470340,"discussion_content":"读性能可以使用缓存","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1570970349,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":140154,"user_name":"Geek_e986e3","can_delete":false,"product_type":"c1","uid":1642716,"ip_address":"","ucode":"EF53D2DEA59A8F","user_header":"","comment_is_top":false,"comment_ctime":1570841691,"is_pvip":false,"replies":[{"id":"54209","content":"nosql如果用LSM实现的话，在写入的时候是写入内存的memtable，memtable刷新到磁盘是顺序写的，merge也是顺序写的","user_name":"作者回复","user_name_real":"唐扬","uid":"1448977","ctime":1570851060,"ip_address":"","comment_id":140154,"utype":1}],"discussion_count":4,"race_medal":0,"score":"5865808987","product_id":100035801,"comment_content":"老师想问问。你前面说关系型数据库在update某一条数据的时候会产生随即读写。可我看nosql用stable也没有避免这个问题呀。也要去里面查询到这条记录。然后update。求解答。<br>关于nosql。我之前在业务还没法固定的时候会考虑使用，但是一旦基本不大改动的时候还是会优先选择sql","like_count":1,"discussions":[{"author":{"id":1448977,"avatar":"https://static001.geekbang.org/account/avatar/00/16/1c/11/4b45993d.jpg","nickname":"唐扬","note":"","ucode":"1AF4C4A4DBC6EF","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":470271,"discussion_content":"nosql如果用LSM实现的话，在写入的时候是写入内存的memtable，memtable刷新到磁盘是顺序写的，merge也是顺序写的","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1570851060,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1886331,"avatar":"https://static001.geekbang.org/account/avatar/00/1c/c8/7b/153181d7.jpg","nickname":"夜辉","note":"","ucode":"9421385F51FF9E","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":364310,"discussion_content":"随机读写是硬盘上读写，内存中快，而且以page为单位","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1617439214,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1642716,"avatar":"","nickname":"Geek_e986e3","note":"","ucode":"EF53D2DEA59A8F","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":30689,"discussion_content":"主要是update的时候。要找到之前的纪录去做更新。感觉还是会随机读写…","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1570851519,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":1,"child_discussions":[{"author":{"id":1252593,"avatar":"https://static001.geekbang.org/account/avatar/00/13/1c/f1/840ef7f9.jpg","nickname":"KKKKK","note":"","ucode":"E9DAF0FCCE898C","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1642716,"avatar":"","nickname":"Geek_e986e3","note":"","ucode":"EF53D2DEA59A8F","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":83922,"discussion_content":"我记得有些nosql不会修改旧数据，更新也是插入新数据，然后根据时间戳判断","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1576474083,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":30689,"ip_address":""},"score":83922,"extra":""}]}]},{"had_liked":false,"id":140038,"user_name":"aoe","can_delete":false,"product_type":"c1","uid":1121758,"ip_address":"","ucode":"1C6201EDB4E954","user_header":"https://static001.geekbang.org/account/avatar/00/11/1d/de/62bfa83f.jpg","comment_is_top":false,"comment_ctime":1570794118,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"5865761414","product_id":100035801,"comment_content":"像老师这样的大佬居然都遇到了ES的坑，看来我们需要学习的还很多。","like_count":1},{"had_liked":false,"id":139913,"user_name":"正在减肥的胖籽。","can_delete":false,"product_type":"c1","uid":1033728,"ip_address":"","ucode":"99E2E4DF599236","user_header":"https://static001.geekbang.org/account/avatar/00/0f/c6/00/683bb4f0.jpg","comment_is_top":false,"comment_ctime":1570765345,"is_pvip":false,"replies":[{"id":"54024","content":"可以的 在实战篇中会讲到","user_name":"作者回复","user_name_real":"唐扬","uid":"1448977","ctime":1570767165,"ip_address":"","comment_id":139913,"utype":1}],"discussion_count":1,"race_medal":0,"score":"5865732641","product_id":100035801,"comment_content":"老师可以举几个实战的例子吗？<br>比如：像微博这种帖子列表，某个主题下面的帖子列表.发帖量和用户查询量都比较大,这种使用Nosql，<br>我的理解是：异步保存到数据库中（在app端先给一个占位的地方显示用户发的的帖子）。然后同步到REDIS中. 我把握不好的是：同步到redis中，1.过期时间需要设置多久？2.如果按照不同维度排序展示（比如点赞量，比如评论量）这种redis中应该如何存取？老师可以针对这种场景讲解一篇吗？","like_count":1,"discussions":[{"author":{"id":1448977,"avatar":"https://static001.geekbang.org/account/avatar/00/16/1c/11/4b45993d.jpg","nickname":"唐扬","note":"","ucode":"1AF4C4A4DBC6EF","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":470172,"discussion_content":"可以的 在实战篇中会讲到","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1570767165,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":347032,"user_name":"熵","can_delete":false,"product_type":"c1","uid":1788525,"ip_address":"","ucode":"FFBC1004D3C38F","user_header":"https://static001.geekbang.org/account/avatar/00/1b/4a/6d/dae5be6d.jpg","comment_is_top":false,"comment_ctime":1653634724,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1653634724","product_id":100035801,"comment_content":"NoSQL数据不能替换掉传统关系型数据库的一个重要原因，是NoSQL的设计本身就不支持强事务，支持了强事务，也就做不到NoSQL这些数据库的特点了","like_count":0},{"had_liked":false,"id":338936,"user_name":"梦楼","can_delete":false,"product_type":"c1","uid":2093516,"ip_address":"","ucode":"2D0F3050ACC091","user_header":"https://static001.geekbang.org/account/avatar/00/1f/f1/cc/3bd32c6f.jpg","comment_is_top":false,"comment_ctime":1647821348,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1647821348","product_id":100035801,"comment_content":"“所以，对于开源组件的使用，不能只停留在只会“hello world”的阶段，而应该对它有足够的运维上的把控能力。”，这句话说的很好！！！","like_count":0},{"had_liked":false,"id":318224,"user_name":"亚林","can_delete":false,"product_type":"c1","uid":1018972,"ip_address":"","ucode":"4A5A6D24314B79","user_header":"https://static001.geekbang.org/account/avatar/00/0f/8c/5c/3f164f66.jpg","comment_is_top":false,"comment_ctime":1635210677,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1635210677","product_id":100035801,"comment_content":"不是我不敢用NoSQL，是老板不给时间给我尝试","like_count":0},{"had_liked":false,"id":318223,"user_name":"亚林","can_delete":false,"product_type":"c1","uid":1018972,"ip_address":"","ucode":"4A5A6D24314B79","user_header":"https://static001.geekbang.org/account/avatar/00/0f/8c/5c/3f164f66.jpg","comment_is_top":false,"comment_ctime":1635210491,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1635210491","product_id":100035801,"comment_content":"redis：当MySQL的缓存；<br>ES：当MySQL的全文搜索；<br>MongoDB:当持久化一段乱七八糟的json","like_count":0},{"had_liked":false,"id":293653,"user_name":"牛味浓龙魏流","can_delete":false,"product_type":"c1","uid":1605322,"ip_address":"","ucode":"FB58F144635B2A","user_header":"https://static001.geekbang.org/account/avatar/00/18/7e/ca/0689da8f.jpg","comment_is_top":false,"comment_ctime":1621479203,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1621479203","product_id":100035801,"comment_content":"为什么关系型数据库不采用分片+副本的形式呢，因为和事务冲突吗","like_count":0},{"had_liked":false,"id":290672,"user_name":"Geek_a5d41a","can_delete":false,"product_type":"c1","uid":1588796,"ip_address":"","ucode":"CA695511A396CD","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/UJOwJUYeibskwNDPTIamvPojTaf5fJeiaGJuL5TZSFOaNnxq1SyauYmwbzVNK4XbLeLrN9Gicu59rt9jQYqs20S2A/132","comment_is_top":false,"comment_ctime":1619682732,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1619682732","product_id":100035801,"comment_content":"分布式系统中，分布式事务是个绕不过去坎，老师的经验中是怎么取舍的？","like_count":0},{"had_liked":false,"id":290671,"user_name":"Geek_a5d41a","can_delete":false,"product_type":"c1","uid":1588796,"ip_address":"","ucode":"CA695511A396CD","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/UJOwJUYeibskwNDPTIamvPojTaf5fJeiaGJuL5TZSFOaNnxq1SyauYmwbzVNK4XbLeLrN9Gicu59rt9jQYqs20S2A/132","comment_is_top":false,"comment_ctime":1619682496,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1619682496","product_id":100035801,"comment_content":"elasticsearch","like_count":0},{"had_liked":false,"id":263078,"user_name":"小高","can_delete":false,"product_type":"c1","uid":1283052,"ip_address":"","ucode":"FCD422249F7355","user_header":"https://static001.geekbang.org/account/avatar/00/13/93/ec/985675c8.jpg","comment_is_top":false,"comment_ctime":1605971922,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1605971922","product_id":100035801,"comment_content":"在决定使用一个组件前，一定要选了解核心原理和算法，才决定要不要使用，不然后期运维出现问题不好修复，影响业务的运行，","like_count":0},{"had_liked":false,"id":254179,"user_name":"大汉_客家族_数据工程_曾院士","can_delete":false,"product_type":"c1","uid":1215758,"ip_address":"","ucode":"AD73C36D617CA1","user_header":"https://static001.geekbang.org/account/avatar/00/12/8d/0e/1f49ade9.jpg","comment_is_top":false,"comment_ctime":1603077597,"is_pvip":false,"discussion_count":2,"race_medal":0,"score":"1603077597","product_id":100035801,"comment_content":"write ahead log 是什么意思？ 在日志写前写?","like_count":0,"discussions":[{"author":{"id":1515149,"avatar":"https://static001.geekbang.org/account/avatar/00/17/1e/8d/5b242931.jpg","nickname":"Fish","note":"","ucode":"C20719F8B0F7C8","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":326304,"discussion_content":"先写log","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1605577289,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":1,"child_discussions":[{"author":{"id":1066508,"avatar":"https://static001.geekbang.org/account/avatar/00/10/46/0c/773ba2f3.jpg","nickname":"下个目标45k","note":"","ucode":"193BA8C3AA9A61","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1515149,"avatar":"https://static001.geekbang.org/account/avatar/00/17/1e/8d/5b242931.jpg","nickname":"Fish","note":"","ucode":"C20719F8B0F7C8","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":330839,"discussion_content":"是这个意思，无论怎样先写日志，就算服务断电了日志还在数据就能恢复","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1606719931,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":326304,"ip_address":""},"score":330839,"extra":""}]}]},{"had_liked":false,"id":253224,"user_name":"聪","can_delete":false,"product_type":"c1","uid":1009831,"ip_address":"","ucode":"9D672A8580A945","user_header":"https://static001.geekbang.org/account/avatar/00/0f/68/a7/c3fd1fd9.jpg","comment_is_top":false,"comment_ctime":1602655966,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1602655966","product_id":100035801,"comment_content":"关于nosql中的wal有一个疑问，这个wal是只是在内存上？一个write过来，就写一下磁盘吗？还是第二种情况，wal在内存中和磁盘上同时存在？一个write过来，先写内存中的wal，wal大小到达一定后，wal开始dump到磁盘上，形成多个小的wal文件，然后后台有thread去合并这些小的wal文件。","like_count":0},{"had_liked":false,"id":228915,"user_name":"xiaochao321","can_delete":false,"product_type":"c1","uid":1083596,"ip_address":"","ucode":"8F5AC46CD9400C","user_header":"https://static001.geekbang.org/account/avatar/00/10/88/cc/11b10a6f.jpg","comment_is_top":false,"comment_ctime":1592838447,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1592838447","product_id":100035801,"comment_content":"提升写入性能还是不太明白？","like_count":0},{"had_liked":false,"id":168635,"user_name":"吕超","can_delete":false,"product_type":"c1","uid":1740409,"ip_address":"","ucode":"B36883984BE16B","user_header":"https://static001.geekbang.org/account/avatar/00/1a/8e/79/f9d5dd3a.jpg","comment_is_top":false,"comment_ctime":1578128681,"is_pvip":false,"replies":[{"id":"66193","content":"谢谢：）","user_name":"作者回复","user_name_real":"唐扬","uid":"1448977","ctime":1578732836,"ip_address":"","comment_id":168635,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1578128681","product_id":100035801,"comment_content":"有干货也有踩坑经验，留言里的讨论和互动也很精彩。物有所值的一门课。","like_count":0,"discussions":[{"author":{"id":1448977,"avatar":"https://static001.geekbang.org/account/avatar/00/16/1c/11/4b45993d.jpg","nickname":"唐扬","note":"","ucode":"1AF4C4A4DBC6EF","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":480275,"discussion_content":"谢谢：）","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1578732836,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":147097,"user_name":"XD","can_delete":false,"product_type":"c1","uid":1079293,"ip_address":"","ucode":"DC9DCFB3841A4E","user_header":"https://static001.geekbang.org/account/avatar/00/10/77/fd/c6619535.jpg","comment_is_top":false,"comment_ctime":1572792846,"is_pvip":false,"replies":[{"id":"56860","content":"可以缓解","user_name":"作者回复","user_name_real":"唐扬","uid":"1448977","ctime":1572835788,"ip_address":"","comment_id":147097,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1572792846","product_id":100035801,"comment_content":"对于mysql，插入时使用自增主键+WAL，更新时配合changebuffer似乎可以解决随机io带来的性能问题？","like_count":0,"discussions":[{"author":{"id":1448977,"avatar":"https://static001.geekbang.org/account/avatar/00/16/1c/11/4b45993d.jpg","nickname":"唐扬","note":"","ucode":"1AF4C4A4DBC6EF","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":473145,"discussion_content":"可以缓解","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1572835788,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":145260,"user_name":"老磨","can_delete":false,"product_type":"c1","uid":1067581,"ip_address":"","ucode":"5255F0CBAAEAEF","user_header":"https://static001.geekbang.org/account/avatar/00/10/4a/3d/07df0cb7.jpg","comment_is_top":false,"comment_ctime":1572238774,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1572238774","product_id":100035801,"comment_content":"难得看到能深入存储结构的数据库文章，真棒！我觉得nosql和sql的本质是对数据抽象的模型，由此才诞生了不同的适用的存储结构，其实还可以介绍介绍graph model和network model的database，某种程度上说我觉得这类db的抽象更适合互联网的使用案例，对于product engineer也更加友好","like_count":0},{"had_liked":false,"id":145177,"user_name":"helloworld","can_delete":false,"product_type":"c1","uid":1015754,"ip_address":"","ucode":"00DF2FEC58D2E6","user_header":"https://static001.geekbang.org/account/avatar/00/0f/7f/ca/ea85bfdd.jpg","comment_is_top":false,"comment_ctime":1572226290,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1572226290","product_id":100035801,"comment_content":"权当了解了解。对于无论是NoSQL还是有SQL，也是了解个大概，具体应用到生产环境中时还需要对相应的技术熟练使用才行。","like_count":0},{"had_liked":false,"id":144198,"user_name":"曾轼麟","can_delete":false,"product_type":"c1","uid":1451391,"ip_address":"","ucode":"D418371AC11270","user_header":"https://static001.geekbang.org/account/avatar/00/16/25/7f/473d5a77.jpg","comment_is_top":false,"comment_ctime":1571878043,"is_pvip":false,"replies":[{"id":"55634","content":"是的","user_name":"作者回复","user_name_real":"唐扬","uid":"1448977","ctime":1571883071,"ip_address":"","comment_id":144198,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1571878043","product_id":100035801,"comment_content":"老师写入的应该叫tps吧","like_count":0,"discussions":[{"author":{"id":1448977,"avatar":"https://static001.geekbang.org/account/avatar/00/16/1c/11/4b45993d.jpg","nickname":"唐扬","note":"","ucode":"1AF4C4A4DBC6EF","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":471846,"discussion_content":"是的","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1571883071,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":144130,"user_name":"迷失","can_delete":false,"product_type":"c1","uid":1074626,"ip_address":"","ucode":"0A0F0689CB3BA4","user_header":"https://static001.geekbang.org/account/avatar/00/10/65/c2/5d7b9123.jpg","comment_is_top":false,"comment_ctime":1571847046,"is_pvip":false,"discussion_count":1,"race_medal":0,"score":"1571847046","product_id":100035801,"comment_content":"mongdb<br>在可存储数据类型和才redis比有什么不同","like_count":0,"discussions":[{"author":{"id":1274495,"avatar":"https://static001.geekbang.org/account/avatar/00/13/72/7f/5da093c5.jpg","nickname":"水目沾","note":"","ucode":"FDD1D15C277D58","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":41626,"discussion_content":"MongDB是文档型数据库，优势在于存储value比较大的文档型键值对","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1572481894,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":142635,"user_name":"rong","can_delete":false,"product_type":"c1","uid":1128740,"ip_address":"","ucode":"637A27C532D817","user_header":"https://static001.geekbang.org/account/avatar/00/11/39/24/ab14f6cf.jpg","comment_is_top":false,"comment_ctime":1571441626,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1571441626","product_id":100035801,"comment_content":"博主说到第三方组件的运维能力，比如elasticsearch，新浪内部没有公司统一的云平台吗？由云平台来统一运维，或者中小公司可以使用阿里云平台，他们统一运维。","like_count":0},{"had_liked":false,"id":141225,"user_name":"高志强","can_delete":false,"product_type":"c1","uid":1276563,"ip_address":"","ucode":"68737002043752","user_header":"https://static001.geekbang.org/account/avatar/00/13/7a/93/c9302518.jpg","comment_is_top":false,"comment_ctime":1571130594,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1571130594","product_id":100035801,"comment_content":"我现在做的项目也是mysql搭配es同时使用，定期将mysql数据导入到es，做搜索用。es的查询聚合挺不错的，一开始写着生，用着用着就喜欢上了O(∩_∩)O~","like_count":0},{"had_liked":false,"id":139980,"user_name":"吃饭饭","can_delete":false,"product_type":"c1","uid":1231549,"ip_address":"","ucode":"95CFA07CDA2957","user_header":"https://static001.geekbang.org/account/avatar/00/12/ca/bd/a51ae4b2.jpg","comment_is_top":false,"comment_ctime":1570779714,"is_pvip":false,"replies":[{"id":"54170","content":"是的","user_name":"作者回复","user_name_real":"唐扬","uid":"1448977","ctime":1570837133,"ip_address":"","comment_id":139980,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1570779714","product_id":100035801,"comment_content":"读完这篇文章，有些感悟：技术方案层出不穷，正是因为有了不同的需求，才会衍生出众多的技术和框架，只有真正明白技术为何产生和如何使用才会整体把控自身的需要，有可能正是因为当前市场中没有能解决自身需求的框架，我们才会真正考虑`写一个` ：）","like_count":0,"discussions":[{"author":{"id":1448977,"avatar":"https://static001.geekbang.org/account/avatar/00/16/1c/11/4b45993d.jpg","nickname":"唐扬","note":"","ucode":"1AF4C4A4DBC6EF","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":470197,"discussion_content":"是的","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1570837133,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]}]}