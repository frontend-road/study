{"id":169011,"title":"26 | 负载均衡：怎样提升系统的横向扩展能力？","content":"<p>你好，我是唐扬。</p><p>在基础篇中，我提到了高并发系统设计的三个通用方法：缓存、异步和横向扩展。到目前为止，你接触到了缓存的使用姿势，也了解了如何使用消息队列异步处理业务逻辑。那么本节课，我将带你了解一下如何提升系统的横向扩展能力。</p><p>在之前的课程中，我也提到过提升系统横向扩展能力的一些案例。比如，<a href=\"https://time.geekbang.org/column/article/145095\">08讲</a>提到可以通过部署多个从库的方式，来提升数据库的扩展能力，从而提升数据库的查询性能，那么就需要借助组件，将查询数据库的请求按照一些既定的策略分配到多个从库上，这是负载均衡服务器所起的作用，而我们一般使用DNS服务器来承担这个角色。</p><p>不过在实际的工作中，你经常使用的负载均衡的组件应该算是Nginx，它的作用是承接前端的HTTP请求，然后将它们按照多种策略分发给后端的多个业务服务器上。这样，我们可以随时通过扩容业务服务器的方式来抵挡突发的流量高峰。与DNS不同的是，Nginx可以在域名和请求URL地址的层面做更细致的流量分配，也提供更复杂的负载均衡策略。</p><p>你可能会想到，在微服务架构中我们也会启动多个服务节点承接从用户端到应用服务器的请求，自然会需要一个负载均衡服务器作为流量的入口，实现流量的分发。那么在微服务架构中，如何使用负载均衡服务器呢？</p><!-- [[[read_end]]] --><p>在回答这些问题之前，我先带你了解一下常见的负载均衡服务器都有哪几类，因为这样，你就可以根据不同类型负载均衡服务器的特点做选择了。</p><h2>负载均衡服务器的种类</h2><p><strong>负载均衡的含义是：</strong>将负载（访问的请求）“均衡”地分配到多个处理节点上。这样可以减少单个处理节点的请求量，提升整体系统的性能。</p><p>同时，负载均衡服务器作为流量入口，可以对请求方屏蔽服务节点的部署细节，实现对于业务方无感知的扩容。它就像交通警察，不断地疏散交通，将汽车引入合适的道路上。</p><p><strong>而在我看来，</strong>负载均衡服务大体上可以分为两大类：一类是代理类的负载均衡服务；另一类是客户端负载均衡服务。</p><p>代理类的负载均衡服务以单独的服务方式部署，所有的请求都要先经过负载均衡服务，在负载均衡服务中选出一个合适的服务节点后，再由负载均衡服务调用这个服务节点来实现流量的分发。</p><p><img src=\"https://static001.geekbang.org/resource/image/7a/c9/7a76b0b7c6e3fc4b60cfcda8dbd93dc9.jpg?wh=1142*726\" alt=\"\"></p><p>由于这类服务需要承担全量的请求，所以对于性能的要求极高。代理类的负载均衡服务有很多开源实现，比较著名的有LVS、Nginx等等。LVS在OSI网络模型中的第四层，传输层工作，所以LVS又可以称为四层负载；而Nginx运行在OSI网络模型中的第七层，应用层，所以又可以称它为七层负载（你可以回顾一下<a href=\"https://time.geekbang.org/column/article/138331\">02讲</a>的内容）。</p><p>在项目的架构中，我们一般会同时部署LVS和Nginx来做HTTP应用服务的负载均衡。也就是说，在入口处部署LVS将流量分发到多个Nginx服务器上，再由Nginx服务器分发到应用服务器上，<strong>为什么这么做呢？</strong></p><p>主要和LVS和Nginx的特点有关，LVS是在网络栈的四层做请求包的转发，请求包转发之后，由客户端和后端服务直接建立连接，后续的响应包不会再经过LVS服务器，所以相比Nginx性能会更高，也能够承担更高的并发。</p><p>可LVS缺陷是工作在四层，而请求的URL是七层的概念，不能针对URL做更细致的请求分发，而且LVS也没有提供探测后端服务是否存活的机制；而Nginx虽然比LVS的性能差很多，但也可以承担每秒几万次的请求，并且它在配置上更加灵活，还可以感知后端服务是否出现问题。</p><p>因此，LVS适合在入口处承担大流量的请求分发，而Nginx要部署在业务服务器之前做更细维度的请求分发。<strong>我给你的建议是，</strong>如果你的QPS在十万以内，那么可以考虑不引入LVS而直接使用Nginx作为唯一的负载均衡服务器，这样少维护一个组件，也会减少系统的维护成本。</p><p>不过这两个负载均衡服务适用于普通的Web服务，对于微服务架构来说，它们是不合适的。因为微服务架构中的服务节点存储在注册中心里，使用LVS就很难和注册中心交互获取全量的服务节点列表。另外，一般微服务架构中，使用的是RPC协议而不是HTTP协议，所以Nginx也不能满足要求。</p><p><strong>所以，我们会使用另一类的负载均衡服务，客户端负载均衡服务，也就是把负载均衡的服务内嵌在RPC客户端中。</strong></p><p>它一般和客户端应用部署在一个进程中，提供多种选择节点的策略，最终为客户端应用提供一个最佳的、可用的服务端节点。这类服务一般会结合注册中心来使用，注册中心提供服务节点的完整列表，客户端拿到列表之后使用负载均衡服务的策略选取一个合适的节点，然后将请求发到这个节点上。</p><p><img src=\"https://static001.geekbang.org/resource/image/53/c1/539f9fd7196c3c0b17eba55584d4c6c1.jpg?wh=1142*385\" alt=\"\"></p><p>了解负载均衡服务的分类是你学习负载均衡服务的第一步，接下来，你需要掌握负载均衡策略，这样一来，你在实际工作中配置负载均衡服务的时候，可以对原理有更深刻的了解。</p><h2>常见的负载均衡策略有哪些</h2><p>负载均衡策略从大体上来看可以分为两类：</p><ul>\n<li>一类是静态策略，也就是说负载均衡服务器在选择服务节点时，不会参考后端服务的实际运行的状态；</li>\n<li>一类是动态策略，也就是说负载均衡服务器会依据后端服务的一些负载特性，来决定要选择哪一个服务节点。</li>\n</ul><p>常见的静态策略有几种，其中使用最广泛的是<strong>轮询的策略（RoundRobin，RR），</strong>这种策略会记录上次请求后端服务的地址或者序号，然后在请求时按照服务列表的顺序，请求下一个后端服务节点。伪代码如下：</p><pre><code>AtomicInteger lastCounter = getLastCounter();//获取上次请求的服务节点的序号 \nList&lt;String&gt; serverList = getServerList(); // 获取服务列表\nint currentIndex = lastCounter.addAndGet(); //增加序列号\nif(currentIndex &gt;= serverList.size()) {\n  currentIndex = 0;\n}\nsetLastCounter(currentIndex);\nreturn serverList.get(currentIndex);\n</code></pre><p>它其实是一种通用的策略，基本上，大部分的负载均衡服务器都支持。轮询的策略可以做到将请求尽量平均地分配到所有服务节点上，但是，它没有考虑服务节点的具体配置情况。比如，你有三个服务节点，其中一个服务节点的配置是8核8G，另外两个节点的配置是4核4G，那么如果使用轮询的方式来平均分配请求的话，8核8G的节点分到的请求数量和4核4G的一样多，就不能发挥性能上的优势了</p><p>所以，我们考虑给节点加上权重值，比如给8核8G的机器配置权重为2，那么就会给它分配双倍的流量，<strong>这种策略就是带有权重的轮询策略。</strong></p><p>除了这两种策略之外，目前开源的负载均衡服务还提供了很多静态策略：</p><ul>\n<li>Nginx提供了ip_hash和url_hash算法；</li>\n<li>LVS提供了按照请求的源地址和目的地址做Hash的策略；</li>\n<li>Dubbo也提供了随机选取策略以及一致性Hash的策略。</li>\n</ul><p><strong>但是在我看来，</strong>轮询和带有权重的轮询策略能够将请求尽量平均地分配到后端服务节点上，也就能够做到对于负载的均衡分配。在没有更好的动态策略之前，应该优先使用这两种策略，比如Nginx就会优先使用轮询的策略。</p><p>而目前开源的负载均衡服务中，也会提供一些动态策略，我强调一下它们的原理。</p><p>在负载均衡服务器上会收集对后端服务的调用信息，比如从负载均衡端到后端服务的活跃连接数，或者是调用的响应时间，然后从中选择连接数最少的服务，或者响应时间最短的后端服务。<strong>我举几个具体的例子：</strong></p><ul>\n<li>Dubbo提供的LeastAcive策略，就是优先选择活跃连接数最少的服务；</li>\n<li>Spring Cloud全家桶中的Ribbon提供了WeightedResponseTimeRule是使用响应时间给每个服务节点计算一个权重，然后依据这个权重，来给调用方分配服务节点。</li>\n</ul><p><strong>这些策略的思考点</strong>是从调用方的角度出发，选择负载最小、资源最空闲的服务来调用，以期望能得到更高的服务调用性能，也就能最大化地使用服务器的空闲资源，请求也会响应得更迅速。<strong>所以我建议你，</strong>在实际开发中，优先考虑使用动态的策略。</p><p>到目前为止，你已经可以根据上面的分析，选择适合自己的负载均衡策略，并选择一个最优的服务节点。<strong>那么问题来了：</strong>你怎么保证选择出来的这个节点，一定是一个可以正常服务的节点呢？如果你采用的是轮询的策略，选择出来的是一个故障节点又要怎么办呢？所以，为了降低请求被分配到一个故障节点的几率，有些负载均衡服务器还提供了对服务节点的故障检测功能。</p><h2>如何检测节点是否故障</h2><p><a href=\"https://time.geekbang.org/column/article/167151\">24讲</a>中，我带你了解到在微服务化架构中，服务节点会定期地向注册中心发送心跳包，这样注册中心就能够知晓服务节点是否故障，也就可以确认传递给负载均衡服务的节点一定是可用的。</p><p>但对于Nginx来说，<strong>我们要如何保证配置的服务节点是可用的呢？</strong></p><p>这就要感谢淘宝开源的Nginx模块<a href=\"https://github.com/yaoweibin/nginx_upstream_check_module\">nginx_upstream_check_module</a>了，这个模块可以让Nginx定期地探测后端服务的一个指定的接口，然后根据返回的状态码来判断服务是否还存活。当探测不存活的次数达到一定阈值时，就自动将这个后端服务从负载均衡服务器中摘除。<strong>它的配置样例如下：</strong></p><pre><code>upstream server {\n        server 192.168.1.1:8080;\n        server 192.168.1.2:8080;\n        check interval=3000 rise=2 fall=5 timeout=1000 type=http default_down=true;//检测间隔为3秒，检测超时时间是1秒，使用http协议。如果连续失败次数达到5次就认为服务不可用；如果连续成功次数达到2次，则认为服务可用。后端服务刚启动时状态是不可用的\n        check_http_send &quot;GET /health_check HTTP/1.0\\r\\n\\r\\n&quot;; //检测URL\n        check_http_expect_alive http_2xx; //检测返回状态码为200时认为检测成功\n}\n</code></pre><p>Nginx按照上面的方式配置之后，你的业务服务器也要实现一个“/health_check”的接口，在这个接口中返回的HTTP状态码，这个返回的状态码可以存储在配置中心中，这样在变更状态码时，就不需要重启服务了（配置中心在第33节课中会讲到）。</p><p>节点检测的功能，还能够帮助我们实现Web服务的优雅关闭。在<a href=\"https://time.geekbang.org/column/article/167151\">24讲</a>中介绍注册中心时，我曾经提到，服务的优雅关闭需要先切除流量再关闭服务，使用了注册中心之后，就可以先从注册中心中摘除节点，再重启服务，以便达到优雅关闭的目的。那么Web服务要如何实现优雅关闭呢？接下来，我们了解一下有了节点检测功能之后，服务是如何启动和关闭的。</p><p><strong>在服务刚刚启动时，</strong>可以初始化默认的HTTP状态码是500，这样Nginx就不会很快将这个服务节点标记为可用，也就可以等待服务中依赖的资源初始化完成，避免服务初始启动时的波动。</p><p><strong>在完全初始化之后，</strong>再将HTTP状态码变更为200，Nginx经过两次探测后，就会标记服务为可用。在服务关闭时，也应该先将HTTP状态码变更为500，等待Nginx探测将服务标记为不可用后，前端的流量也就不会继续发往这个服务节点。在等待服务正在处理的请求全部处理完毕之后，再对服务做重启，可以避免直接重启导致正在处理的请求失败的问题。<strong>这是启动和关闭线上Web服务时的标准姿势，你可以在项目中参考使用。</strong></p><h2>课程小结</h2><p>本节课，我带你了解了与负载均衡服务相关的一些知识点，以及在实际工作中的运用技巧。我想强调几个重点：</p><ul>\n<li>\n<p>网站负载均衡服务的部署，是以LVS承接入口流量，在应用服务器之前，部署Nginx做细化的流量分发和故障节点检测。当然，如果你的网站的并发不高，也可以考虑不引入LVS。</p>\n</li>\n<li>\n<p>负载均衡的策略可以优先选择动态策略，保证请求发送到性能最优的节点上；如果没有合适的动态策略，那么可以选择轮询的策略，让请求平均分配到所有的服务节点上。</p>\n</li>\n<li>\n<p>Nginx可以引入nginx_upstream_check_module，对后端服务做定期的存活检测，后端的服务节点在重启时，也要秉承着“先切流量后重启”的原则，尽量减少节点重启对于整体系统的影响。</p>\n</li>\n</ul><p>你可能会认为，像Nginx、LVS应该是运维所关心的组件，作为开发人员不用操心维护。<strong>不过通过今天的学习你应该可以看到：</strong>负载均衡服务是提升系统扩展性和性能的重要组件，在高并发系统设计中，它发挥的作用是无法替代的。理解它的原理，掌握使用它的正确姿势，应该是每一个后端开发同学的必修课。</p><h2>一课一思</h2><p>在实际的工作中，你一定也用过很多的负载均衡的服务和组件，那么在使用过程中你遇到过哪些问题呢，有哪些注意的点呢？欢迎在留言区与我分享你的经验。</p><p>最后，感谢你的阅读，如果这篇文章让你有所收获，也欢迎你将它分享给更多的朋友。</p>","neighbors":{"left":{"article_title":"25 | 分布式Trace：横跨几十个分布式组件的慢请求要如何排查？","id":167979},"right":{"article_title":"27 | API网关：系统的门面要如何做呢？","id":169944}},"comments":[{"had_liked":false,"id":154276,"user_name":"面试官问","can_delete":false,"product_type":"c1","uid":1009375,"ip_address":"","ucode":"F9CE89589772F4","user_header":"https://static001.geekbang.org/account/avatar/00/0f/66/df/501ba989.jpg","comment_is_top":false,"comment_ctime":1574402958,"is_pvip":true,"replies":[{"id":"59487","content":"是的","user_name":"作者回复","comment_id":154276,"uid":"1448977","ip_address":"","utype":1,"ctime":1574642854,"user_name_real":"唐扬"}],"discussion_count":1,"race_medal":0,"score":"147603291022","product_id":100035801,"comment_content":"是否使用客户端负载均衡，跟微服务框架中服务之间通信是使用 RPC 协议还是 HTTP 协议无关，例如Spring Cloud 中的 Ribbon 就是用来进行客户端负载均衡的；一般来说，在系统接入层，使用的是服务端负载均衡，而微服务之间的内部调用，使用的是客户端负载均衡。","like_count":35,"discussions":[{"author":{"id":1448977,"avatar":"https://static001.geekbang.org/account/avatar/00/16/1c/11/4b45993d.jpg","nickname":"唐扬","note":"","ucode":"1AF4C4A4DBC6EF","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":475423,"discussion_content":"是的","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1574642854,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":194805,"user_name":"虚竹","can_delete":false,"product_type":"c1","uid":1691109,"ip_address":"","ucode":"8D8C96C793724E","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTJIocn8OMjfSGqyeSJEV3ID2rquLR0S6xo0ibdNYQgzicib6L6VlqWjhgxOqD2iaicX1KhbWXWCsmBTskA/132","comment_is_top":false,"comment_ctime":1585107262,"is_pvip":false,"replies":[{"id":"75836","content":"是的","user_name":"作者回复","comment_id":194805,"uid":"1448977","ip_address":"","utype":1,"ctime":1586088740,"user_name_real":"唐扬"}],"discussion_count":2,"race_medal":0,"score":"61714649406","product_id":100035801,"comment_content":"老师最后说的nginx启停服务时切流量部分，在刚刚启动时返回500，完全初始化后返回200，是指health_check接口返回的状态码是通过配置中心配置获取的，重启之前改为500，看实例日志全完启动成功之后再改为200？","like_count":15,"discussions":[{"author":{"id":1448977,"avatar":"https://static001.geekbang.org/account/avatar/00/16/1c/11/4b45993d.jpg","nickname":"唐扬","note":"","ucode":"1AF4C4A4DBC6EF","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":488906,"discussion_content":"是的","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1586088740,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1103556,"avatar":"https://static001.geekbang.org/account/avatar/00/10/d6/c4/27343f76.jpg","nickname":"SHift","note":"","ucode":"36BD4A38F7FA2C","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":409105,"discussion_content":"那这样就感觉不够灵活了，每次都得人工处理啊","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1635382413,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":172289,"user_name":"jc9090kkk","can_delete":false,"product_type":"c1","uid":1338831,"ip_address":"","ucode":"6C992D07A2E78F","user_header":"https://static001.geekbang.org/account/avatar/00/14/6d/cf/ec335526.jpg","comment_is_top":false,"comment_ctime":1579145254,"is_pvip":false,"replies":[{"id":"66900","content":"是LVS，LVS的承载能力要大很多","user_name":"作者回复","comment_id":172289,"uid":"1448977","ip_address":"","utype":1,"ctime":1579228116,"user_name_real":"唐扬"}],"discussion_count":4,"race_medal":0,"score":"40233850918","product_id":100035801,"comment_content":"感谢老师分享，这一刻看完有一个疑问，对于负载均衡的一些策略都清楚了，但是对于负载均衡器的承载容量有点疑问，比如说通过nginx来作为负载均衡器，但是它本身的承载容量是有极限的，如果当前nginx的转发容量只能支撑10w&#47;s的访问请求，但是流量如果达到20w&#47;s，那么nginx作为负载均衡器来讲，是否需要增加新的负载均衡器一起协调工作，那么同时存在两个负载均衡器的话，工作于它上一层的任务由谁来处理呢？lvs？还是dns？或者是其他？负载均衡器不可能没有极限吧？","like_count":10,"discussions":[{"author":{"id":1448977,"avatar":"https://static001.geekbang.org/account/avatar/00/16/1c/11/4b45993d.jpg","nickname":"唐扬","note":"","ucode":"1AF4C4A4DBC6EF","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":481686,"discussion_content":"是LVS，LVS的承载能力要大很多","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1579228116,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":2403557,"avatar":"","nickname":"夏敝安","note":"","ucode":"7966113C968872","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":578923,"discussion_content":"如果流量只有几十万，是不是可以通过室友多台nginx服务器，然后在DNS端均衡到这些服务器上，也省去了LVS","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1657092704,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1450462,"avatar":"https://static001.geekbang.org/account/avatar/00/16/21/de/c935d3bd.jpg","nickname":"文培","note":"","ucode":"D8BC9BD6F2B261","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":539262,"discussion_content":"明显就是没有仔细看过文章提问的，老师说的很明白大流量用LVS","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1639650037,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1015754,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/7f/ca/ea85bfdd.jpg","nickname":"helloworld","note":"","ucode":"00DF2FEC58D2E6","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":290695,"discussion_content":"好问题","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1594566365,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":155682,"user_name":"蓝魔丶","can_delete":false,"product_type":"c1","uid":1219438,"ip_address":"","ucode":"2AE4359E263558","user_header":"https://static001.geekbang.org/account/avatar/00/12/9b/6e/edd2da0c.jpg","comment_is_top":false,"comment_ctime":1574735872,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"31639506944","product_id":100035801,"comment_content":"1.nginx类的负载组件只支持静态配置，无法动态感知配置，使用openrestry代替nginx好很多，不仅可以动态配置，而且比nginx提供了更多扩展模块<br>2.在docker容器的k8s环境中也使用过nginx-controller代理组件，但是这个组件虽然可以实现动态配置参数，但是路由和治理能力都偏弱，可以考虑使用istio等servicemesh网关","like_count":8},{"had_liked":false,"id":154188,"user_name":"sdjdd","can_delete":false,"product_type":"c1","uid":1211987,"ip_address":"","ucode":"512F2338DFF793","user_header":"https://static001.geekbang.org/account/avatar/00/12/7e/53/c29c2fc9.jpg","comment_is_top":false,"comment_ctime":1574388814,"is_pvip":false,"replies":[{"id":"59490","content":"是的，我的意思是这样的","user_name":"作者回复","comment_id":154188,"uid":"1448977","ip_address":"","utype":1,"ctime":1574642906,"user_name_real":"唐扬"}],"discussion_count":1,"race_medal":0,"score":"27344192590","product_id":100035801,"comment_content":"关闭服务之前，用 503 状态码响应健康检查是不是语义更明确一些。","like_count":7,"discussions":[{"author":{"id":1448977,"avatar":"https://static001.geekbang.org/account/avatar/00/16/1c/11/4b45993d.jpg","nickname":"唐扬","note":"","ucode":"1AF4C4A4DBC6EF","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":475400,"discussion_content":"是的，我的意思是这样的","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1574642906,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":169125,"user_name":"古德","can_delete":false,"product_type":"c1","uid":1037755,"ip_address":"","ucode":"E3F646BB73F60E","user_header":"https://static001.geekbang.org/account/avatar/00/0f/d5/bb/98b93862.jpg","comment_is_top":false,"comment_ctime":1578277797,"is_pvip":false,"replies":[{"id":"66183","content":"也可以，zuul作为7层负载","user_name":"作者回复","comment_id":169125,"uid":"1448977","ip_address":"","utype":1,"ctime":1578727747,"user_name_real":"唐扬"}],"discussion_count":1,"race_medal":0,"score":"23053114277","product_id":100035801,"comment_content":"以前用阿里云的时候，我们的架构是使用阿里云的SLB，直接转发到微服务网关zuul上，再根据url去分发到对应服务。","like_count":6,"discussions":[{"author":{"id":1448977,"avatar":"https://static001.geekbang.org/account/avatar/00/16/1c/11/4b45993d.jpg","nickname":"唐扬","note":"","ucode":"1AF4C4A4DBC6EF","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":480432,"discussion_content":"也可以，zuul作为7层负载","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1578727747,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":154189,"user_name":"M","can_delete":false,"product_type":"c1","uid":1437769,"ip_address":"","ucode":"1A756D9AFCEB48","user_header":"https://static001.geekbang.org/account/avatar/00/15/f0/49/889f9ef6.jpg","comment_is_top":false,"comment_ctime":1574388938,"is_pvip":false,"replies":[{"id":"59488","content":"nginx可以支持websocket协议的<br>","user_name":"作者回复","comment_id":154189,"uid":"1448977","ip_address":"","utype":1,"ctime":1574642890,"user_name_real":"唐扬"}],"discussion_count":3,"race_medal":0,"score":"23049225418","product_id":100035801,"comment_content":"请教下老师，app与服务器之间使用websocket协议连接，如何使用负载均衡呢？","like_count":5,"discussions":[{"author":{"id":1448977,"avatar":"https://static001.geekbang.org/account/avatar/00/16/1c/11/4b45993d.jpg","nickname":"唐扬","note":"","ucode":"1AF4C4A4DBC6EF","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":475401,"discussion_content":"nginx可以支持websocket协议的\n","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1574642890,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1437769,"avatar":"https://static001.geekbang.org/account/avatar/00/15/f0/49/889f9ef6.jpg","nickname":"M","note":"","ucode":"1A756D9AFCEB48","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":57772,"discussion_content":"谢谢","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1574642925,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1125909,"avatar":"https://static001.geekbang.org/account/avatar/00/11/2e/15/f1cd59c9.jpg","nickname":"东风吹梦丶易散","note":"","ucode":"0CB8D4C04505D4","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":56895,"discussion_content":"同问","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1574522459,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":197094,"user_name":"如歌","can_delete":false,"product_type":"c1","uid":1292419,"ip_address":"","ucode":"727C90CA52CD73","user_header":"https://static001.geekbang.org/account/avatar/00/13/b8/83/7c1ed918.jpg","comment_is_top":false,"comment_ctime":1585357779,"is_pvip":false,"replies":[{"id":"74923","content":"加油💪","user_name":"作者回复","comment_id":197094,"uid":"1448977","ip_address":"","utype":1,"ctime":1585553401,"user_name_real":"唐扬"}],"discussion_count":2,"race_medal":0,"score":"14470259667","product_id":100035801,"comment_content":"刷第二遍了 从操作系统到网络到这本书","like_count":3,"discussions":[{"author":{"id":1448977,"avatar":"https://static001.geekbang.org/account/avatar/00/16/1c/11/4b45993d.jpg","nickname":"唐扬","note":"","ucode":"1AF4C4A4DBC6EF","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":489448,"discussion_content":"加油💪","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1585553401,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1006424,"avatar":"","nickname":"门窗小二","note":"","ucode":"0BF3780C247F22","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":574050,"discussion_content":"这是书名？","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1653813197,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":266962,"user_name":"Geek_4d0d3e","can_delete":false,"product_type":"c1","uid":1629551,"ip_address":"","ucode":"0CC37554D47359","user_header":"https://thirdwx.qlogo.cn/mmopen/vi_32/DYAIOgq83epEIGtJsxNCr9mUD8stzOg5icKcwYHMPVjJhXqYY4icsc6BSIqszsibWFP2wUetDwJsibyhdhbTgXNNibg/132","comment_is_top":false,"comment_ctime":1607556115,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"10197490707","product_id":100035801,"comment_content":"我们用kong做K8S集群业务的负载均衡","like_count":2},{"had_liked":false,"id":168049,"user_name":"い北风","can_delete":false,"product_type":"c1","uid":1763285,"ip_address":"","ucode":"11AB6AA95DE2EF","user_header":"https://static001.geekbang.org/account/avatar/00/1a/e7/d5/f4bb9ccf.jpg","comment_is_top":false,"comment_ctime":1578006381,"is_pvip":false,"replies":[{"id":"66185","content":"我想面试官想了解的是  你是否可以根据业务特点来选取服务器，比如数据库要选取大内存、大磁盘的存储型的服务器；计算比较多的业务要选取CPU性能比较好的","user_name":"作者回复","comment_id":168049,"uid":"1448977","ip_address":"","utype":1,"ctime":1578727886,"user_name_real":"唐扬"}],"discussion_count":3,"race_medal":0,"score":"10167940973","product_id":100035801,"comment_content":"老师，我在之前的面试遇到过一个问题。知道已有功能，如何选取服务器。去购买服务器的配置呢？","like_count":3,"discussions":[{"author":{"id":1448977,"avatar":"https://static001.geekbang.org/account/avatar/00/16/1c/11/4b45993d.jpg","nickname":"唐扬","note":"","ucode":"1AF4C4A4DBC6EF","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":480118,"discussion_content":"我想面试官想了解的是  你是否可以根据业务特点来选取服务器，比如数据库要选取大内存、大磁盘的存储型的服务器；计算比较多的业务要选取CPU性能比较好的","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1578727886,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1584786,"avatar":"https://static001.geekbang.org/account/avatar/00/18/2e/92/e1c38ca6.jpg","nickname":"KamTo  Hung","note":"","ucode":"00D5A6479DB784","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":364128,"discussion_content":"韩信点兵，多多益善（手动狗头）","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1617369456,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1763285,"avatar":"https://static001.geekbang.org/account/avatar/00/1a/e7/d5/f4bb9ccf.jpg","nickname":"い北风","note":"","ucode":"11AB6AA95DE2EF","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":129945,"discussion_content":"老师，能不能具体下？好比oms需选取什么样的服务器，tns(运单轨迹)如何选取。我知道可能跟数据，用户量，请求有关。那该如何回答这样的问题呢？还是先选一个差不多的，然后往上面加？那得有一个量吧。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1578745701,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":156433,"user_name":"阿土","can_delete":false,"product_type":"c1","uid":1183019,"ip_address":"","ucode":"2DBEAD80B0CA3C","user_header":"https://static001.geekbang.org/account/avatar/00/12/0d/2b/4814d3db.jpg","comment_is_top":false,"comment_ctime":1574870464,"is_pvip":false,"replies":[{"id":"60231","content":"文中提到的nginx的例子，就是一个案例<br>除此之外，在微服务在重启时，先从注册中心中摘掉节点，然后观察流量没有了之后再重启。<br><br>其实，总的一点就是先切流量，再重启","user_name":"作者回复","comment_id":156433,"uid":"1448977","ip_address":"","utype":1,"ctime":1575015099,"user_name_real":"唐扬"}],"discussion_count":3,"race_medal":0,"score":"10164805056","product_id":100035801,"comment_content":"优雅关机与启动有案例么？理解了原理，具体怎么实现呢？","like_count":3,"discussions":[{"author":{"id":1448977,"avatar":"https://static001.geekbang.org/account/avatar/00/16/1c/11/4b45993d.jpg","nickname":"唐扬","note":"","ucode":"1AF4C4A4DBC6EF","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":476105,"discussion_content":"文中提到的nginx的例子，就是一个案例\n除此之外，在微服务在重启时，先从注册中心中摘掉节点，然后观察流量没有了之后再重启。\n\n其实，总的一点就是先切流量，再重启","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1575015099,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1674708,"avatar":"https://static001.geekbang.org/account/avatar/00/19/8d/d4/64eae0b3.jpg","nickname":"时光机器","note":"","ucode":"E1FC3FCFF3203F","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":65780,"discussion_content":"@作者 请问老师，优雅关闭，怎么保证服务中运行的请求已经请求完","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1575028341,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":1,"child_discussions":[{"author":{"id":1307497,"avatar":"https://static001.geekbang.org/account/avatar/00/13/f3/69/7039d03f.jpg","nickname":"书策稠浊","note":"","ucode":"A29875CE15FDA3","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1674708,"avatar":"https://static001.geekbang.org/account/avatar/00/19/8d/d4/64eae0b3.jpg","nickname":"时光机器","note":"","ucode":"E1FC3FCFF3203F","race_medal":0,"user_type":1,"is_pvip":true},"discussion":{"id":398628,"discussion_content":"看服务器的资源使用情况或者日志都行","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1632823287,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":65780,"ip_address":""},"score":398628,"extra":""}]}]},{"had_liked":false,"id":155471,"user_name":"longslee","can_delete":false,"product_type":"c1","uid":1465986,"ip_address":"","ucode":"C24E32E5B1B6F5","user_header":"https://static001.geekbang.org/account/avatar/00/16/5e/82/438c8534.jpg","comment_is_top":false,"comment_ctime":1574691259,"is_pvip":false,"replies":[{"id":"60243","content":"文中有提到，一般是在RPC客户端里面统计对服务端的连接数或者响应时间，这样可以选择连接数最少，或者响应时间最短的服务端","user_name":"作者回复","comment_id":155471,"uid":"1448977","ip_address":"","utype":1,"ctime":1575015852,"user_name_real":"唐扬"}],"discussion_count":1,"race_medal":0,"score":"10164625851","product_id":100035801,"comment_content":"打卡。 涨姿势了。<br>曾经项目使用一层 IBM WebSphere 简单路由，但是客户端学聪明了，都手动绑定 hosts ，负载不均衡了。所以还是多层不暴露比较好。<br>提问：老师，您讲到结合注册中心的客户端负载均衡，它又是怎么做到“动态策略”的呢？","like_count":2,"discussions":[{"author":{"id":1448977,"avatar":"https://static001.geekbang.org/account/avatar/00/16/1c/11/4b45993d.jpg","nickname":"唐扬","note":"","ucode":"1AF4C4A4DBC6EF","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":475762,"discussion_content":"文中有提到，一般是在RPC客户端里面统计对服务端的连接数或者响应时间，这样可以选择连接数最少，或者响应时间最短的服务端","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1575015852,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":154791,"user_name":"啊啊啊哦哦","can_delete":false,"product_type":"c1","uid":1309877,"ip_address":"","ucode":"68C7153ECAAC57","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/RNO4yZyBvic914hewmNNE8iblYDcfv5yGHZ9OnKuCuZXNmGR0F5qV3icKLT2xpMt66GyEpicZVvrmz8A6TIqt92MQg/132","comment_is_top":false,"comment_ctime":1574565872,"is_pvip":false,"replies":[{"id":"59479","content":"LVS能抗更高的并发","user_name":"作者回复","comment_id":154791,"uid":"1448977","ip_address":"","utype":1,"ctime":1574642360,"user_name_real":"唐扬"}],"discussion_count":1,"race_medal":0,"score":"10164500464","product_id":100035801,"comment_content":"nginx 上为什么要阶lvs。 一般dns服务器也可以实现轮训分发到不同的nginx上啊。  ","like_count":2,"discussions":[{"author":{"id":1448977,"avatar":"https://static001.geekbang.org/account/avatar/00/16/1c/11/4b45993d.jpg","nickname":"唐扬","note":"","ucode":"1AF4C4A4DBC6EF","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":475578,"discussion_content":"LVS能抗更高的并发","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1574642360,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":248550,"user_name":"null","can_delete":false,"product_type":"c1","uid":1024294,"ip_address":"","ucode":"F9039EFED6B55D","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/PiajxSqBRaELZPnUAiajaR5C25EDLWeJURggyiaOP5GGPe2qlwpQcm5e3ybib8OsP4tvddFDLVRSNNGL5I3SFPJHsA/132","comment_is_top":false,"comment_ctime":1600220183,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"5895187479","product_id":100035801,"comment_content":"原文：比如从负载均衡端到后端服务的活跃连接数，然后从中选择连接数最少的服务。<br><br>怎么知道哪个后端服务的活跃连接数最少？负载均衡服务不是内嵌在客户端的么？各各客户端的负载均衡数据没有共享吧。","like_count":1},{"had_liked":false,"id":155119,"user_name":"Luciano李鑫","can_delete":false,"product_type":"c1","uid":1329995,"ip_address":"","ucode":"5FBE5F86FD5B2C","user_header":"https://static001.geekbang.org/account/avatar/00/14/4b/4b/97926cba.jpg","comment_is_top":false,"comment_ctime":1574648288,"is_pvip":false,"discussion_count":2,"race_medal":0,"score":"5869615584","product_id":100035801,"comment_content":"负载均衡应该分为： <br>客户端负载均衡<br>后端负载均衡<br>   DNS负载均衡<br>   IP负载均衡<br>   反向代理负载均衡","like_count":1,"discussions":[{"author":{"id":1584786,"avatar":"https://static001.geekbang.org/account/avatar/00/18/2e/92/e1c38ca6.jpg","nickname":"KamTo  Hung","note":"","ucode":"00D5A6479DB784","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":364129,"discussion_content":"硬件负载均衡F5","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1617369526,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1674298,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTK6JnM4HA6sk0j6HFaA0RMRmQzEXOQqsMjHOnU8Z8D8qiccOn7sYbdyMu8ic4heq7JhGWlcV1Mq5Ntw/132","nickname":"Aloe","note":"","ucode":"B3852A416623EC","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":304707,"discussion_content":"看了这条评论忽然就开朗了. 是我水平不够么,一篇文章下来心里都没个框架?","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1599645616,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":154326,"user_name":"小喵喵","can_delete":false,"product_type":"c1","uid":1062444,"ip_address":"","ucode":"FDBBB2A59DB8B6","user_header":"https://static001.geekbang.org/account/avatar/00/10/36/2c/8bd4be3a.jpg","comment_is_top":false,"comment_ctime":1574409935,"is_pvip":false,"replies":[{"id":"59484","content":"1. 是可以的<br>2. 是的，这个在于你被探测接口的实现","user_name":"作者回复","comment_id":154326,"uid":"1448977","ip_address":"","utype":1,"ctime":1574642786,"user_name_real":"唐扬"}],"discussion_count":1,"race_medal":0,"score":"5869377231","product_id":100035801,"comment_content":"1.Nginx和LVS都可以做负载均衡，这些组件也都可以应用于C&#47;S系统吗？<br>2.health_check只能检测到服务器和节点指点是否可用，节点可用但是并不能代表内部服务接口是可用的，这个有什么好的方案呢？","like_count":1,"discussions":[{"author":{"id":1448977,"avatar":"https://static001.geekbang.org/account/avatar/00/16/1c/11/4b45993d.jpg","nickname":"唐扬","note":"","ucode":"1AF4C4A4DBC6EF","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":475438,"discussion_content":"1. 是可以的\n2. 是的，这个在于你被探测接口的实现","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1574642786,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":154297,"user_name":"leesir","can_delete":false,"product_type":"c1","uid":1116673,"ip_address":"","ucode":"D720A0966666D9","user_header":"https://static001.geekbang.org/account/avatar/00/11/0a/01/3bd45e1e.jpg","comment_is_top":false,"comment_ctime":1574405711,"is_pvip":false,"replies":[{"id":"59486","content":"可以呀，有一种consul + nginx方案，就是把节点信息写在consul里面，这样当节点变化时，nginx可以得到通知","user_name":"作者回复","comment_id":154297,"uid":"1448977","ip_address":"","utype":1,"ctime":1574642839,"user_name_real":"唐扬"}],"discussion_count":1,"race_medal":0,"score":"5869373007","product_id":100035801,"comment_content":"求教，对于普通web服务，nginx有办法感知新增结点吗？","like_count":2,"discussions":[{"author":{"id":1448977,"avatar":"https://static001.geekbang.org/account/avatar/00/16/1c/11/4b45993d.jpg","nickname":"唐扬","note":"","ucode":"1AF4C4A4DBC6EF","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":475428,"discussion_content":"可以呀，有一种consul + nginx方案，就是把节点信息写在consul里面，这样当节点变化时，nginx可以得到通知","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1574642839,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":324594,"user_name":"李明","can_delete":false,"product_type":"c1","uid":1250952,"ip_address":"","ucode":"A3BC428EA02D76","user_header":"https://static001.geekbang.org/account/avatar/00/13/16/88/2ebded78.jpg","comment_is_top":false,"comment_ctime":1638513455,"is_pvip":false,"discussion_count":1,"race_medal":0,"score":"1638513455","product_id":100035801,"comment_content":"nginx代理的后端服务，如果某个正在处理请求的后端服务被nginx摘除了，那么被摘除的后端服务还没来的及返回给客户端的响应，还能正常返回不","like_count":0,"discussions":[{"author":{"id":2756576,"avatar":"https://static001.geekbang.org/account/avatar/00/2a/0f/e0/b53a7701.jpg","nickname":"骑车上天空","note":"","ucode":"364365E2721122","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":583030,"discussion_content":"做降级处理","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1659878707,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":"广东"},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":308321,"user_name":"鸠摩·智","can_delete":false,"product_type":"c1","uid":1211909,"ip_address":"","ucode":"6CD93CD1DB6955","user_header":"https://static001.geekbang.org/account/avatar/00/12/7e/05/431d380f.jpg","comment_is_top":false,"comment_ctime":1629533550,"is_pvip":false,"discussion_count":1,"race_medal":5,"score":"1629533550","product_id":100035801,"comment_content":"老师，烦劳有空解答一下心中疑惑。<br><br>原文：LVS 是在网络栈的四层做请求包的转发，请求包转发之后，由客户端和后端服务直接建立连接，后续的响应包不会再经过 LVS 服务器。<br><br>1.如果lvs是工作在四层（传输层)，对于tcp协议，感觉lvs是有状态的，需要维护客户端和服务连接的吧？另外，如果lvs只做包转发，由客户端和服务直接建立连接，又感觉lvs是工作在ip网络层。<br>2.后续的响应包不经过lvs。<br><br>老师，由上面1和2，我猜想是不是，lvs确实工作在传输层，但是lvs只维护客户端到服务的单向连接吗？<br>处理客户端到服务单向连接的意思是，lvs只处理syn，从而保持客户端与服务的对应关系，而不处理传输层其他细节，比如乱序、丢包、拥塞等。这里的资源占用开销很小，所以从lvs实现层面是保持连接，而从lvs使用层面来讲就接近无状态，接近修改目标地址直接转发包，从而说成不处理客户端和服务的连接了。<br><br>盼复，谢谢！","like_count":0,"discussions":[{"author":{"id":2675399,"avatar":"https://static001.geekbang.org/account/avatar/00/28/d2/c7/b7f52df2.jpg","nickname":"雨里","note":"","ucode":"C475DE8B5375AB","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":570826,"discussion_content":"LVS叫四层负载均衡器，就是只做路由转发，跟路由器是一个功能，但是光有四层不行的，因为要根据url请求到服务端，所以要做url解析，这个只能nginx来做，总结，lvs只做路由转发，承担开始的流量，减少nginx的压力，另外LVS的实现主要由内核来做的，效率较好，可以很好减轻用户态的压力","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1651928579,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":289943,"user_name":"石头","can_delete":false,"product_type":"c1","uid":2586341,"ip_address":"","ucode":"EB3C9A277C7B0C","user_header":"","comment_is_top":false,"comment_ctime":1619273292,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1619273292","product_id":100035801,"comment_content":"zk实际用的是zab，consul用raft，如果探究一下raft的原理会挺有意思的，大大简化了paxos","like_count":0},{"had_liked":false,"id":284877,"user_name":"鱼","can_delete":false,"product_type":"c1","uid":1487584,"ip_address":"","ucode":"89EC9CE3AD0281","user_header":"https://static001.geekbang.org/account/avatar/00/16/b2/e0/d856f5a4.jpg","comment_is_top":false,"comment_ctime":1616506717,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1616506717","product_id":100035801,"comment_content":"LVS只在使用DR模式（只修改目标MAC地址），响应不需要经过LVS。在使用NAT模式（同时目标修改IP和MAC地址时），返回仍然要经过LVS，这个时候LVS的功能类似于网关。","like_count":0},{"had_liked":false,"id":252767,"user_name":"Demter","can_delete":false,"product_type":"c1","uid":1158439,"ip_address":"","ucode":"BE3B6F726916CE","user_header":"https://static001.geekbang.org/account/avatar/00/11/ad/27/5556ae50.jpg","comment_is_top":false,"comment_ctime":1602482487,"is_pvip":false,"discussion_count":2,"race_medal":0,"score":"1602482487","product_id":100035801,"comment_content":"直接部署足够多的nginx就行了，为什么还要lvs呢？","like_count":0,"discussions":[{"author":{"id":1886331,"avatar":"https://static001.geekbang.org/account/avatar/00/1c/c8/7b/153181d7.jpg","nickname":"夜辉","note":"","ucode":"9421385F51FF9E","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":364810,"discussion_content":"入口在LVS，由LVS再负载均匀分配给每个nginx","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1617614640,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1487584,"avatar":"https://static001.geekbang.org/account/avatar/00/16/b2/e0/d856f5a4.jpg","nickname":"鱼","note":"","ucode":"89EC9CE3AD0281","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":347908,"discussion_content":"你的请求怎么分配你部署的多个Nginx，你可以吧LVS当做Nginx中的Nginx","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1612361319,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":250496,"user_name":"null","can_delete":false,"product_type":"c1","uid":1024294,"ip_address":"","ucode":"F9039EFED6B55D","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/PiajxSqBRaELZPnUAiajaR5C25EDLWeJURggyiaOP5GGPe2qlwpQcm5e3ybib8OsP4tvddFDLVRSNNGL5I3SFPJHsA/132","comment_is_top":false,"comment_ctime":1601104282,"is_pvip":false,"discussion_count":1,"race_medal":0,"score":"1601104282","product_id":100035801,"comment_content":"原文：LVS 是在网络栈的四层做请求包的转发，请求包转发之后，由客户端和后端服务直接建立连接，后续的响应包不会再经过 LVS 服务器。<br><br><br>问题：建立连接后由客户端和服务端直接通信，咋实现的？ 是客户端请求 LVS 服务器，LVS 返回ip port 给客户端，客户端再发起与服务端建立的连接么？ <br><br>谢谢老师","like_count":0,"discussions":[{"author":{"id":1886331,"avatar":"https://static001.geekbang.org/account/avatar/00/1c/c8/7b/153181d7.jpg","nickname":"夜辉","note":"","ucode":"9421385F51FF9E","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":364812,"discussion_content":"LVS以第四层，网络包直接转发，所以性能高\n而Nginx根据请求（url）进行转发","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1617614826,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":249378,"user_name":"徐同学","can_delete":false,"product_type":"c1","uid":1027740,"ip_address":"","ucode":"0EF0A8E28C2E91","user_header":"https://static001.geekbang.org/account/avatar/00/0f/ae/9c/b1ef4502.jpg","comment_is_top":false,"comment_ctime":1600614231,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1600614231","product_id":100035801,"comment_content":"之前有遇到过Nginx超时转发的问题。当时幂等没做好，导致了重复执行。","like_count":0},{"had_liked":false,"id":211877,"user_name":"钱","can_delete":false,"product_type":"c1","uid":1009652,"ip_address":"","ucode":"2C92A243A463D4","user_header":"https://static001.geekbang.org/account/avatar/00/0f/67/f4/9a1feb59.jpg","comment_is_top":false,"comment_ctime":1588033888,"is_pvip":false,"replies":[{"id":"78852","content":"这。。。","user_name":"作者回复","user_name_real":"唐扬","uid":"1448977","ctime":1588069873,"ip_address":"","comment_id":211877,"utype":1}],"discussion_count":2,"race_medal":0,"score":"1588033888","product_id":100035801,"comment_content":"打卡，负载均衡必然用到过，不过确实没怎么摸过，原理基本了解，遇到问题还需再探索。之前有遇到，因nginx缓存出现的问题，直接粗暴重启，来解决的。😬","like_count":0,"discussions":[{"author":{"id":1448977,"avatar":"https://static001.geekbang.org/account/avatar/00/16/1c/11/4b45993d.jpg","nickname":"唐扬","note":"","ucode":"1AF4C4A4DBC6EF","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":493386,"discussion_content":"这。。。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1588069873,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1213078,"avatar":"https://static001.geekbang.org/account/avatar/00/12/82/96/aa795685.jpg","nickname":"mghio","note":"","ucode":"74883EDE4FD0DC","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":260080,"discussion_content":"重启大法好","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1588846368,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":195327,"user_name":"安排","can_delete":false,"product_type":"c1","uid":1260026,"ip_address":"","ucode":"F78CFA9624CAEF","user_header":"https://static001.geekbang.org/account/avatar/00/13/39/fa/a7edbc72.jpg","comment_is_top":false,"comment_ctime":1585180332,"is_pvip":false,"replies":[{"id":"75195","content":"rpc协议的话，客户端指的是rpc客户端","user_name":"作者回复","user_name_real":"唐扬","uid":"1448977","ctime":1585703172,"ip_address":"","comment_id":195327,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1585180332","product_id":100035801,"comment_content":"文中说的客户端应该不是app或者浏览器吧？app或者浏览器去访问一个网站时会用rpc协议吗？","like_count":0,"discussions":[{"author":{"id":1448977,"avatar":"https://static001.geekbang.org/account/avatar/00/16/1c/11/4b45993d.jpg","nickname":"唐扬","note":"","ucode":"1AF4C4A4DBC6EF","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":489030,"discussion_content":"rpc协议的话，客户端指的是rpc客户端","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1585703172,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":182232,"user_name":"丁小明","can_delete":false,"product_type":"c1","uid":1207622,"ip_address":"","ucode":"CC23857B8D75D5","user_header":"https://static001.geekbang.org/account/avatar/00/12/6d/46/e16291f8.jpg","comment_is_top":false,"comment_ctime":1582730972,"is_pvip":false,"replies":[{"id":"71100","content":"dns我这边主要给内部资源，比如mysql做负载均衡","user_name":"作者回复","user_name_real":"唐扬","uid":"1448977","ctime":1583115131,"ip_address":"","comment_id":182232,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1582730972","product_id":100035801,"comment_content":"我们还有dns负载均衡一层，之后nginx还配合keeperlive做了高可用","like_count":0,"discussions":[{"author":{"id":1448977,"avatar":"https://static001.geekbang.org/account/avatar/00/16/1c/11/4b45993d.jpg","nickname":"唐扬","note":"","ucode":"1AF4C4A4DBC6EF","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":485262,"discussion_content":"dns我这边主要给内部资源，比如mysql做负载均衡","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1583115131,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":158451,"user_name":"良记","can_delete":false,"product_type":"c1","uid":1033503,"ip_address":"","ucode":"F78CC56BB32D8F","user_header":"https://static001.geekbang.org/account/avatar/00/0f/c5/1f/485fcff9.jpg","comment_is_top":false,"comment_ctime":1575375029,"is_pvip":true,"replies":[{"id":"61449","content":"不是的，只是有些组件没有在实际项目中用过，不敢随便说~","user_name":"作者回复","user_name_real":"唐扬","uid":"1448977","ctime":1576132999,"ip_address":"","comment_id":158451,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1575375029","product_id":100035801,"comment_content":"老师好像很少说到Spring Cloud相关的组件，有的话也是一笔带过，请问是这些组件的性能不好吗？","like_count":0,"discussions":[{"author":{"id":1448977,"avatar":"https://static001.geekbang.org/account/avatar/00/16/1c/11/4b45993d.jpg","nickname":"唐扬","note":"","ucode":"1AF4C4A4DBC6EF","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":476730,"discussion_content":"不是的，只是有些组件没有在实际项目中用过，不敢随便说~","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1576132999,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":157769,"user_name":"Geek_33c134","can_delete":false,"product_type":"c1","uid":1596647,"ip_address":"","ucode":"C5BBA83AABD2AC","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/Ir1EdhB29109UhH7SGnVLEfEcKcGPDViaTpbS7BYXngqFghThYc093oFCTwsTLjVR7nHPokXJIPm7rbmPAU7TdQ/132","comment_is_top":false,"comment_ctime":1575256986,"is_pvip":false,"discussion_count":3,"race_medal":0,"score":"1575256986","product_id":100035801,"comment_content":"nginx能否已集群的方式同时提供呢？也就是如果最外层用nginx来做代理的话，理论上nginx能够承受的并发量为5W，如果7的并发量来的话，是否可以采用两台nginx同时提供服务呢？（如果不可以nginx当最外层同时提供服务，解决这种方法是应该通过lvs来提供最外层，然后转发到两台nginx，但是如果lvs也达到了瓶颈那么如果来解决呢？）","like_count":0,"discussions":[{"author":{"id":1113737,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTI2icbib62icXtibTkThtyRksbuJLoTLMts7zook2S30MiaBtbz0f5JskwYicwqXkhpYfvCpuYkcvPTibEaQ/132","nickname":"xuanyuan","note":"","ucode":"1EC79B9372868F","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":289377,"discussion_content":"负载均衡也有集群模式的。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1594083670,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1661872,"avatar":"https://static001.geekbang.org/account/avatar/00/19/5b/b0/50bc0dd7.jpg","nickname":"孟见大侠","note":"","ucode":"428C84FB5332DF","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":227869,"discussion_content":"可以购买硬件负载均衡器","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1586517196,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1033240,"avatar":"https://wx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTJkwbyTYtSCx6Qc7cQPnnRWv38Jybh3etziaPmuP8gHcgS6FMxcdftrKgWiamH6fc2iciaicDKDVEwcEibQ/132","nickname":"sami","note":"","ucode":"9A66FCA00D8A37","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":208627,"discussion_content":"可以加dns轮询吧","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1584568309,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":156070,"user_name":"寒溪","can_delete":false,"product_type":"c1","uid":1001970,"ip_address":"","ucode":"67B9F1A1C15A20","user_header":"https://static001.geekbang.org/account/avatar/00/0f/49/f2/25cfa472.jpg","comment_is_top":false,"comment_ctime":1574816964,"is_pvip":false,"discussion_count":0,"race_medal":1,"score":"1574816964","product_id":100035801,"comment_content":"负载均衡还有一种策略：粘性连接。同一客户的请求会被分发到同一个服务实例。如F5的cookie中pool就是对目标服务的记忆，还有ng的sticky策略也是这样。","like_count":0},{"had_liked":false,"id":155218,"user_name":"星空123","can_delete":false,"product_type":"c1","uid":1596920,"ip_address":"","ucode":"E998A7C585671B","user_header":"https://static001.geekbang.org/account/avatar/00/18/5d/f8/7de2c1cc.jpg","comment_is_top":false,"comment_ctime":1574665680,"is_pvip":false,"replies":[{"id":"60255","content":"这个是标配的，可以看看~","user_name":"作者回复","user_name_real":"唐扬","uid":"1448977","ctime":1575016501,"ip_address":"","comment_id":155218,"utype":1}],"discussion_count":2,"race_medal":0,"score":"1574665680","product_id":100035801,"comment_content":"老师提供的nginx_upstream_check_module 我要自己研究下，有些东西确实公司限制多，都没用过","like_count":0,"discussions":[{"author":{"id":1448977,"avatar":"https://static001.geekbang.org/account/avatar/00/16/1c/11/4b45993d.jpg","nickname":"唐扬","note":"","ucode":"1AF4C4A4DBC6EF","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":475694,"discussion_content":"这个是标配的，可以看看~","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1575016501,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1596920,"avatar":"https://static001.geekbang.org/account/avatar/00/18/5d/f8/7de2c1cc.jpg","nickname":"星空123","note":"","ucode":"E998A7C585671B","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":65642,"discussion_content":"好的，老师，已经在自己买的服务器上试了","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1575017992,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":154664,"user_name":"约书亚","can_delete":false,"product_type":"c1","uid":1046714,"ip_address":"","ucode":"81EA27ADD9EC1A","user_header":"https://static001.geekbang.org/account/avatar/00/0f/f8/ba/14e05601.jpg","comment_is_top":false,"comment_ctime":1574503377,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1574503377","product_id":100035801,"comment_content":"&quot;请求包转发之后，由客户端和后端服务直接建立连接...&quot;<br>这里的建立连接这个描述似乎不太严谨，实际没有“连接”对吧。<br>负载均衡除了F5这种硬件的基本都接触过了，在各个维度有各个维度负载均衡，曾经改过ribbon的负载，原生的weighted response太简陋了<br>其实一直有疑问，为什么把响应时间作为权重的负载算法，虽然有，但出现的相对较少，难道不实用，还是耗费计算资源？","like_count":0},{"had_liked":false,"id":154269,"user_name":"陈 争","can_delete":false,"product_type":"c1","uid":1207155,"ip_address":"","ucode":"A2A1FAC8E32F03","user_header":"https://static001.geekbang.org/account/avatar/00/12/6b/73/fbff84b5.jpg","comment_is_top":false,"comment_ctime":1574400708,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1574400708","product_id":100035801,"comment_content":"恰巧最近在研究怎样优雅的关闭服务节点，老师的讲解给了我很多启发。<br>看来nginx_upstream_check_module需要搞起来了(≖ᴗ≖)✧","like_count":0},{"had_liked":false,"id":154190,"user_name":"XD","can_delete":false,"product_type":"c1","uid":1079293,"ip_address":"","ucode":"DC9DCFB3841A4E","user_header":"https://static001.geekbang.org/account/avatar/00/10/77/fd/c6619535.jpg","comment_is_top":false,"comment_ctime":1574389390,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1574389390","product_id":100035801,"comment_content":"一口气读完。干货还是很多的。","like_count":0},{"had_liked":false,"id":154063,"user_name":"Demter","can_delete":false,"product_type":"c1","uid":1158439,"ip_address":"","ucode":"BE3B6F726916CE","user_header":"https://static001.geekbang.org/account/avatar/00/11/ad/27/5556ae50.jpg","comment_is_top":false,"comment_ctime":1574372425,"is_pvip":false,"replies":[{"id":"59492","content":"浏览器或者app","user_name":"作者回复","user_name_real":"唐扬","uid":"1448977","ctime":1574642938,"ip_address":"","comment_id":154063,"utype":1}],"discussion_count":4,"race_medal":0,"score":"1574372425","product_id":100035801,"comment_content":"这里说的客户端是啥，是用户的浏览器吗。。。","like_count":0,"discussions":[{"author":{"id":1448977,"avatar":"https://static001.geekbang.org/account/avatar/00/16/1c/11/4b45993d.jpg","nickname":"唐扬","note":"","ucode":"1AF4C4A4DBC6EF","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":475366,"discussion_content":"浏览器或者app","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1574642938,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1003104,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/4e/60/0d5aa340.jpg","nickname":"gogo","note":"","ucode":"E8F0F3B000020A","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":55757,"discussion_content":"这里的客户端指的就是微服务里的服务调用方","likes_number":2,"is_delete":false,"is_hidden":false,"ctime":1574395414,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1158439,"avatar":"https://static001.geekbang.org/account/avatar/00/11/ad/27/5556ae50.jpg","nickname":"Demter","note":"","ucode":"BE3B6F726916CE","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":55718,"discussion_content":"谢谢帮解答","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1574392067,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1274495,"avatar":"https://static001.geekbang.org/account/avatar/00/13/72/7f/5da093c5.jpg","nickname":"水目沾","note":"","ucode":"FDD1D15C277D58","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":55564,"discussion_content":"不是，浏览器怎么可能被你的应用程序控制。这里的客户端是指要进行RPC调用的程序。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1574384373,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]}]}