{"id":110474,"title":"40 | 理解内存（上）：虚拟内存和内存保护是什么？","content":"<p>我们在专栏一开始说过，计算机有五大组成部分，分别是：运算器、控制器、存储器、输入设备和输出设备。如果说计算机最重要的组件，是承担了运算器和控制器作用的CPU，那内存就是我们第二重要的组件了。内存是五大组成部分里面的存储器，我们的指令和数据，都需要先加载到内存里面，才会被CPU拿去执行。</p><p>专栏<a href=\"https://time.geekbang.org/column/article/95223\">第9讲</a>，我们讲了程序装载到内存的过程。可以知道，在我们日常使用的Linux或者Windows操作系统下，程序并不能直接访问物理内存。</p><p><img src=\"https://static001.geekbang.org/resource/image/0c/f0/0cf2f08e1ceda473df71189334857cf0.png?wh=1142*832\" alt=\"\"></p><p>我们的内存需要被分成固定大小的页（Page），然后再通过虚拟内存地址（Virtual Address）到物理内存地址（Physical Address）的地址转换（Address Translation），才能到达实际存放数据的物理内存位置。而我们的程序看到的内存地址，都是虚拟内存地址。</p><p>既然如此，这些虚拟内存地址究竟是怎么转换成物理内存地址的呢？这一讲里，我们就来看一看。</p><h2>简单页表</h2><p>想要把虚拟内存地址，映射到物理内存地址，最直观的办法，就是来建一张映射表。这个映射表，能够实现虚拟内存里面的页，到物理内存里面的页的一一映射。这个映射表，在计算机里面，就叫作<strong>页表</strong>（Page Table）。</p><!-- [[[read_end]]] --><p>页表这个地址转换的办法，会把一个内存地址分成<strong>页号</strong>（Directory）和<strong>偏移量</strong>（Offset）两个部分。这么说太理论了，我以一个32位的内存地址为例，帮你理解这个概念。</p><p>其实，前面的高位，就是内存地址的页号。后面的低位，就是内存地址里面的偏移量。做地址转换的页表，只需要保留虚拟内存地址的页号和物理内存地址的页号之间的映射关系就可以了。同一个页里面的内存，在物理层面是连续的。以一个页的大小是4K字节（4KB）为例，我们需要20位的高位，12位的低位。</p><p><img src=\"https://static001.geekbang.org/resource/image/22/0f/22bb79129f6363ac26be47b35748500f.jpeg?wh=2407*1816\" alt=\"\"></p><p>总结一下，对于一个内存地址转换，其实就是这样三个步骤：</p><ol>\n<li>把虚拟内存地址，切分成页号和偏移量的组合；</li>\n<li>从页表里面，查询出虚拟页号，对应的物理页号；</li>\n<li>直接拿物理页号，加上前面的偏移量，就得到了物理内存地址。</li>\n</ol><p><img src=\"https://static001.geekbang.org/resource/image/07/dd/07cd4c3344690055240f215404a286dd.jpeg?wh=2416*2086\" alt=\"\"></p><p>看起来这个逻辑似乎很简单，很容易理解，不过问题马上就来了。你能算一算，这样一个页表需要多大的空间吗？我们以32位的内存地址空间为例，你可以暂停一下，拿出纸笔算一算。</p><p>不知道你算出的数字是多少？32位的内存地址空间，页表一共需要记录2^20个到物理页号的映射关系。这个存储关系，就好比一个2^20大小的数组。一个页号是完整的32位的4字节（Byte），这样一个页表就需要4MB的空间。听起来4MB的空间好像还不大啊，毕竟我们现在的内存至少也有4GB，服务器上有个几十GB的内存和很正常。</p><p><img src=\"https://static001.geekbang.org/resource/image/81/c9/8190dc8a065b06786f26ece596a8e9c9.jpg?wh=1761*770\" alt=\"\"></p><p>不过，这个空间可不是只占用一份哦。我们每一个进程，都有属于自己独立的虚拟内存地址空间。这也就意味着，每一个进程都需要这样一个页表。不管我们这个进程，是个本身只有几KB大小的程序，还是需要几GB的内存空间，都需要这样一个页表。如果你用的是Windows，你可以打开你自己电脑上的任务管理器看看，现在你的计算机里同时在跑多少个进程，用这样的方式，页表需要占用多大的内存。</p><p>这还只是32位的内存地址空间，现在大家用的内存，多半已经超过了4GB，也已经用上了64位的计算机和操作系统。这样的话，用上面这个数组的数据结构来保存页面，内存占用就更大了。那么，我们有没有什么更好的解决办法呢？你可以先仔细思考一下。</p><h2>多级页表</h2><p>仔细想一想，我们其实没有必要存下这2^20个物理页表啊。大部分进程所占用的内存是有限的，需要的页也自然是很有限的。我们只需要去存那些用到的页之间的映射关系就好了。如果你对数据结构比较熟悉，你可能要说了，那我们是不是应该用哈希表（Hash Map）这样的数据结构呢？</p><p>很可惜你猜错了：）。在实践中，我们其实采用的是一种叫作多级页表（Multi-Level Page Table）的解决方案。这是为什么呢？为什么我们不用哈希表而用多级页表呢？别着急，听我慢慢跟你讲。</p><p>我们先来看一看，一个进程的内存地址空间是怎么分配的。在整个进程的内存地址空间，通常是“两头实、中间空”。在程序运行的时候，内存地址从顶部往下，不断分配占用的栈的空间。而堆的空间，内存地址则是从底部往上，是不断分配占用的。</p><p>所以，在一个实际的程序进程里面，虚拟内存占用的地址空间，通常是两段连续的空间。而不是完全散落的随机的内存地址。而多级页表，就特别适合这样的内存地址分布。</p><p>我们以一个4级的多级页表为例，来看一下。同样一个虚拟内存地址，偏移量的部分和上面简单页表一样不变，但是原先的页号部分，我们把它拆成四段，从高到低，分成4级到1级这样4个页表索引。</p><p><img src=\"https://static001.geekbang.org/resource/image/61/76/614034116a840ef565feda078d73cb76.jpeg?wh=2827*1516\" alt=\"\"></p><p>对应的，一个进程会有一个4级页表。我们先通过4级页表索引，找到4级页表里面对应的条目（Entry）。这个条目里存放的是一张3级页表所在的位置。4级页面里面的每一个条目，都对应着一张3级页表，所以我们可能有多张3级页表。</p><p>找到对应这张3级页表之后，我们用3级索引去找到对应的3级索引的条目。3级索引的条目再会指向一个2级页表。同样的，2级页表里我们可以用2级索引指向一个1级页表。</p><p>而最后一层的1级页表里面的条目，对应的数据内容就是物理页号了。在拿到了物理页号之后，我们同样可以用“页号+偏移量”的方式，来获取最终的物理内存地址。</p><p>我们可能有很多张1级页表、2级页表，乃至3级页表。但是，因为实际的虚拟内存空间通常是连续的，我们很可能只需要很少的2级页表，甚至只需要1张3级页表就够了。</p><p>事实上，多级页表就像一个多叉树的数据结构，所以我们常常称它为<strong>页表树</strong>（Page Table Tree）。因为虚拟内存地址分布的连续性，树的第一层节点的指针，很多就是空的，也就不需要有对应的子树了。所谓不需要子树，其实就是不需要对应的2级、3级的页表。找到最终的物理页号，就好像通过一个特定的访问路径，走到树最底层的叶子节点。</p><p><img src=\"https://static001.geekbang.org/resource/image/5b/4e/5ba17a3ecf3f9ce4a65546de480fcc4e.jpeg?wh=2656*3136\" alt=\"\"></p><p>以这样的分成4级的多级页表来看，每一级如果都用5个比特表示。那么每一张某1级的页表，只需要2^5=32个条目。如果每个条目还是4个字节，那么一共需要128个字节。而一个1级索引表，对应32个4KB的也就是128KB的大小。一个填满的2级索引表，对应的就是32个1级索引表，也就是4MB的大小。</p><p>我们可以一起来测算一下，一个进程如果占用了8MB的内存空间，分成了2个4MB的连续空间。那么，它一共需要2个独立的、填满的2级索引表，也就意味着64个1级索引表，2个独立的3级索引表，1个4级索引表。一共需要69个索引表，每个128字节，大概就是9KB的空间。比起4MB来说，只有差不多1/500。</p><p>不过，多级页表虽然节约了我们的存储空间，却带来了时间上的开销，所以它其实是一个“以时间换空间”的策略。原本我们进行一次地址转换，只需要访问一次内存就能找到物理页号，算出物理内存地址。但是，用了4级页表，我们就需要访问4次内存，才能找到物理页号了。</p><p>我们在前面两讲讲过，内存访问其实比Cache要慢很多。我们本来只是要做一个简单的地址转换，反而是一下子要多访问好多次内存。对于这个时间层面的性能损失，我们有没有什么更好的解决办法呢？那请你一定要关注下一讲的内容哦！</p><h2>总结延伸</h2><p>好了，这一讲的内容差不多了，我们来总结一下。</p><p>我们从最简单的进行虚拟页号一一映射的简单页表说起，仔细讲解了现在实际应用的多级页表。多级页表就像是一颗树。因为一个进程的内存地址相对集中和连续，所以采用这种页表树的方式，可以大大节省页表所需要的空间。而因为每个进程都需要一个独立的页表，这个空间的节省是非常可观的。</p><p>在优化页表的过程中，我们可以观察到，数组这样的紧凑的数据结构，以及树这样稀疏的数据结构，在时间复杂度和空间复杂度的差异。另外，纯粹理论软件的数据结构和硬件的设计也是高度相关的。</p><h2>推荐阅读</h2><p>对于虚拟内存的知识点，你可以再深入读一读《计算机组成与设计：硬件/软件接口》的第5.7章节。如果你觉得还不过瘾，可以进一步去读一读<a href=\"https://people.freebsd.org/~lstewart/articles/cpumemory.pdf\">《What Every Programmer Should Know About Memory》</a>的第4部分，也就是Virtual Memory。</p><h2>课后思考</h2><p>在实际的虚拟内存地址到物理内存地址的地址转换的过程里，我们没有采用哈希表，而是采用了多级页表的解决方案。你能想一想，使用多级页表，对于哈希表有哪些优点，又有哪些缺点吗？</p><p>欢迎留言和我分享你的想法，如果觉得有收获，你也可以把这篇文章分享给你的朋友，和他一起学习和进步。</p><p></p>","comments":[{"had_liked":false,"id":117960,"user_name":"鱼向北游","can_delete":false,"product_type":"c1","uid":1439908,"ip_address":"","ucode":"580EC7DCE57E9A","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/IPdZZXuHVMibwfZWmm7NiawzeEFGsaRoWjhuN99iaoj5amcRkiaOePo6rH1KJ3jictmNlic4OibkF4I20vOGfwDqcBxfA/132","comment_is_top":false,"comment_ctime":1564198999,"is_pvip":false,"discussion_count":2,"race_medal":0,"score":"190542760023","product_id":100026001,"comment_content":"哈希表有哈希冲突 并且顺序乱 不符合局部性原理 所以页表存储更复合计算机运行特点  64位系统的快表应该是对页表快速查询的一个优化吧 是用硬件实现么?期待老师下次讲解","like_count":45,"discussions":[{"author":{"id":2419502,"avatar":"https://static001.geekbang.org/account/avatar/00/24/eb/2e/90fea784.jpg","nickname":"柒","note":"","ucode":"D41241629321A1","race_medal":1,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":583490,"discussion_content":"TLB缓冲。还是通过缓存解决的。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1660142479,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":"上海"},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":2996075,"avatar":"","nickname":"Geek_1e04e7","note":"","ucode":"95DDD87FF8ECC7","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":576031,"discussion_content":"不对，内存地址不会冲突的不是随机字符串\n","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1655255148,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":217252,"user_name":"华新","can_delete":false,"product_type":"c1","uid":1068724,"ip_address":"","ucode":"B6DB20898F5F99","user_header":"https://static001.geekbang.org/account/avatar/00/10/4e/b4/335e58d6.jpg","comment_is_top":false,"comment_ctime":1589449286,"is_pvip":false,"discussion_count":7,"race_medal":0,"score":"121848533574","product_id":100026001,"comment_content":"找了半天终于搞明白为啥用多级页表可以节省内存空间了。总觉得加了四级占的空间更大了才对。<br>有跟我存在一样疑惑的可以参看以下地址，说的很明白：<br>https:&#47;&#47;www.polarxiong.com&#47;archives&#47;%E5%A4%9A%E7%BA%A7%E9%A1%B5%E8%A1%A8%E5%A6%82%E4%BD%95%E8%8A%82%E7%BA%A6%E5%86%85%E5%AD%98.html","like_count":29,"discussions":[{"author":{"id":1120547,"avatar":"https://static001.geekbang.org/account/avatar/00/11/19/23/849beae4.jpg","nickname":"高山高","note":"","ucode":"4F1D91E3C3FBB9","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":584983,"discussion_content":"怎么链接文章中的级与本文作者图中的级是反的？","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1661255849,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":"浙江"},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1811277,"avatar":"https://static001.geekbang.org/account/avatar/00/1b/a3/4d/59390ba9.jpg","nickname":"排骨","note":"","ucode":"A413CF46211E1F","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":579435,"discussion_content":"看明白了，真牛皮","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1657446283,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1239283,"avatar":"https://static001.geekbang.org/account/avatar/00/12/e8/f3/01ce824b.jpg","nickname":"我是辣妈","note":"","ucode":"F1576240250AFA","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":381763,"discussion_content":"跪谢，解决了我的疑惑点","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1625205014,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":2457488,"avatar":"https://static001.geekbang.org/account/avatar/00/25/7f/90/eb564784.jpg","nickname":"晓宇","note":"","ucode":"DCBD8BF9866386","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":375524,"discussion_content":"这个相对于作者这点讲的更细，还不错，可算懂了","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1621728391,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":2023574,"avatar":"https://thirdwx.qlogo.cn/mmopen/vi_32/FXUzj6S2tq6iabBMGM6Z1DJTrGaroYECkD8Cictv4Xya0PvyqLicoNsk2KUEpaxoAC3iaPCxsUjgG9JslJk15iaK8icQ/132","nickname":"孙立","note":"","ucode":"7AB3E34DEA6D6D","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":375271,"discussion_content":"这个说的真明白","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1621559973,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1260141,"avatar":"https://static001.geekbang.org/account/avatar/00/13/3a/6d/910b2445.jpg","nickname":"Wheat","note":"","ucode":"7D99EA149B6DE8","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":344283,"discussion_content":"太牛逼了大哥，get到了我的点，我就是一直迷惑为啥简单页表就得存储所有映射，改成分级页表就可以按需加载了，谢谢谢谢真的感谢，困扰了两天","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1611388451,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":1,"child_discussions":[{"author":{"id":1210035,"avatar":"https://thirdwx.qlogo.cn/mmopen/vi_32/DYAIOgq83eqdsd8qbkOFkcKQO0EZzg3p7yEw6cGl47zJzGl12jHQgMUnKpMWib0ZnibRH4LZPYqhfkWH0oYt31mQ/132","nickname":"雷雷","note":"","ucode":"648204DABB1AD5","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":1260141,"avatar":"https://static001.geekbang.org/account/avatar/00/13/3a/6d/910b2445.jpg","nickname":"Wheat","note":"","ucode":"7D99EA149B6DE8","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":586165,"discussion_content":"按需加载是关键","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1662015637,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":344283,"ip_address":"北京"},"score":586165,"extra":""}]}]},{"had_liked":false,"id":117875,"user_name":"-W.LI-","can_delete":false,"product_type":"c1","uid":1210699,"ip_address":"","ucode":"3556786538664F","user_header":"https://static001.geekbang.org/account/avatar/00/12/79/4b/740f91ca.jpg","comment_is_top":false,"comment_ctime":1564158708,"is_pvip":false,"discussion_count":16,"race_medal":0,"score":"100348406516","product_id":100026001,"comment_content":"我们可以一起来测算一下，一个进程如果占用了 1MB 的内存空间，分成了 2 个 512KB 的连续空间。那么，它一共需要 2 个独立的、填满的 2 级索引表，也就意味着 64 个 1 级索引表，2 个独立的 3 级索引表，1 个 4 级索引表。一共需要 69 个索引表，每个 128 字节，大概就是 9KB 的空间。比起 4MB 来说，只有差不多 1&#47;500。<br>1个3级索引表，不是有32个2级索引表么?<br>为啥需要2个独立的3级索引表啊?","like_count":22,"discussions":[{"author":{"id":1112517,"avatar":"https://static001.geekbang.org/account/avatar/00/10/f9/c5/95b97dfa.jpg","nickname":"郑峰","note":"","ucode":"4D4C0C020E507C","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":303681,"discussion_content":"我来回答一下吧。8MB的空间，正好是2个4MB。 一个满的2级索引表可以索引4MB的空间。因为两头实，中间空的特征，这两个满的2级索引表必定不再一个3级索引表上，所以这里一共需要64个一级，2个二级，2个三级和1个四级索引表，即69个索引表。","likes_number":13,"is_delete":false,"is_hidden":false,"ctime":1599348688,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":3,"child_discussions":[{"author":{"id":1380758,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTKJrOl63enWXCRxN0SoucliclBme0qrRb19ATrWIOIvibKIz8UAuVgicBMibIVUznerHnjotI4dm6ibODA/132","nickname":"Helios","note":"","ucode":"BE6B98EE8F0D09","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1112517,"avatar":"https://static001.geekbang.org/account/avatar/00/10/f9/c5/95b97dfa.jpg","nickname":"郑峰","note":"","ucode":"4D4C0C020E507C","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":321175,"discussion_content":"为什么“因为两头实，中间空的特征”这两个满的2级索引表必定不再一个3级索引表上？","likes_number":3,"is_delete":false,"is_hidden":false,"ctime":1604544244,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":303681,"ip_address":""},"score":321175,"extra":""},{"author":{"id":1252930,"avatar":"https://static001.geekbang.org/account/avatar/00/13/1e/42/a8b617a5.jpg","nickname":"Yido","note":"","ucode":"CA1E1546727E86","race_medal":1,"user_type":1,"is_pvip":false},"reply_author":{"id":1380758,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTKJrOl63enWXCRxN0SoucliclBme0qrRb19ATrWIOIvibKIz8UAuVgicBMibIVUznerHnjotI4dm6ibODA/132","nickname":"Helios","note":"","ucode":"BE6B98EE8F0D09","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":336705,"discussion_content":"如果中间和两头都有数据的话，我们就用hash了，这应该和堆栈有关","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1608683460,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":321175,"ip_address":""},"score":336705,"extra":""},{"author":{"id":1260141,"avatar":"https://static001.geekbang.org/account/avatar/00/13/3a/6d/910b2445.jpg","nickname":"Wheat","note":"","ucode":"7D99EA149B6DE8","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1380758,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTKJrOl63enWXCRxN0SoucliclBme0qrRb19ATrWIOIvibKIz8UAuVgicBMibIVUznerHnjotI4dm6ibODA/132","nickname":"Helios","note":"","ucode":"BE6B98EE8F0D09","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":344098,"discussion_content":"我也有这个疑问","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1611289022,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":321175,"ip_address":""},"score":344098,"extra":""}]},{"author":{"id":1242498,"avatar":"https://static001.geekbang.org/account/avatar/00/12/f5/82/75f71508.jpg","nickname":"曾立涵","note":"","ucode":"C8E9019A44FB9B","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":267922,"discussion_content":"一个在堆上一个在栈上，这篇文章前面也说到了【所以，在一个实际的程序进程里面，虚拟内存占用的地址空间，通常是两段连续的空间】\n在推荐阅读【What Every Programmer Should Know About Memory】里解释得更详细一些，原文【Assuming all memory can be allocated contiguously is too simplistic, though. For flexibility reasons the stack and the heap area of a process are, in most cases, allocated at pretty much opposite ends of the address space.\nThis allows either area to grow as much as possible if needed. This means that there are most likely two level 2 directories needed and correspondingly more lower level directories.】，机器翻译过来意思就是【但是，假设所有内存都可以连续分配太简单了。 出于灵活性的原因，在大多数情况下，进程的堆栈和堆区域分配在地址空间的相对两端。如果需要，这可以使任何一个区域尽可能多地增长。 这意味着最可能需要两个2级目录，以及相应的更低级目录。】","likes_number":6,"is_delete":false,"is_hidden":false,"ctime":1589710920,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1068724,"avatar":"https://static001.geekbang.org/account/avatar/00/10/4e/b4/335e58d6.jpg","nickname":"华新","note":"","ucode":"B6DB20898F5F99","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":265841,"discussion_content":"感觉这个老师留言区很少回答问题。","likes_number":5,"is_delete":false,"is_hidden":false,"ctime":1589445693,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1124948,"avatar":"https://static001.geekbang.org/account/avatar/00/11/2a/54/c9990105.jpg","nickname":"bro.","note":"","ucode":"D65283CD869804","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":3635,"discussion_content":"因为栈的虚拟内存地址是从上往下存储,堆是内存地址是从下往上存储,这是理想情况下的状态,栈占用512KB,堆占用另外的512KB,所以不太可能在同一个3级索引表中,索引表中没有子节点的就不用创建他的子节点索引表了,只有存在才会创建,不一定都是32位,这个位置上是可以空出来的","likes_number":5,"is_delete":false,"is_hidden":false,"ctime":1564650036,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1396945,"avatar":"https://thirdwx.qlogo.cn/mmopen/vi_32/DYAIOgq83epaH1gHotWQukHnF2QtT2oK9hGvyLfSaKSzuC9XKH5aSWZj2KNrxYGJeNeVzIeAibzypibsmeicppGvA/132","nickname":"魂斗罗丶","note":"","ucode":"6BEA5CD3CCC2B7","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":305156,"discussion_content":"个人理解，重点在于进程的虚拟空间里面堆跟栈的地址是再两端，对应4级索引表至少两个条目(如果只有栈或堆内存那就是一个条目)，并且这些条目分散在四级索引表两端，有几条四级索引条目数就对应几个3级索引表。本文中的例子前提是当前进程同时拥有堆栈内存(一般进程应该都有堆栈内存)所以至少是有两个4级索引表条目，也就是两个三级索引表","likes_number":3,"is_delete":false,"is_hidden":false,"ctime":1599799800,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1624574,"avatar":"https://static001.geekbang.org/account/avatar/00/18/c9/fe/874b172b.jpg","nickname":"benxiong","note":"","ucode":"F6498059D439D9","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":294611,"discussion_content":"这段的相关计算直接看晕了，希望老师能解答一下","likes_number":2,"is_delete":false,"is_hidden":false,"ctime":1595942555,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1473251,"avatar":"https://static001.geekbang.org/account/avatar/00/16/7a/e3/145adba9.jpg","nickname":"不一样的烟火","note":"","ucode":"6E305F0EE90E8B","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":37186,"discussion_content":"因为可能这两个512没在一个三级表上 ","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1571540202,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":1,"child_discussions":[{"author":{"id":2440338,"avatar":"https://static001.geekbang.org/account/avatar/00/25/3c/92/81fa306d.jpg","nickname":"张Dave","note":"","ucode":"0E8B6FDEB7505B","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":1473251,"avatar":"https://static001.geekbang.org/account/avatar/00/16/7a/e3/145adba9.jpg","nickname":"不一样的烟火","note":"","ucode":"6E305F0EE90E8B","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":573199,"discussion_content":"可能？","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1653266888,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":37186,"ip_address":""},"score":573199,"extra":""}]},{"author":{"id":1347240,"avatar":"https://static001.geekbang.org/account/avatar/00/14/8e/a8/c9819e37.jpg","nickname":"时光","note":"","ucode":"1087509C209C54","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":277220,"discussion_content":"同问","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1591017993,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1476450,"avatar":"https://static001.geekbang.org/account/avatar/00/16/87/62/f99b5b05.jpg","nickname":"曙光","note":"","ucode":"04D65BF7F19845","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":257439,"discussion_content":"是的，同问！~","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1588570881,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1455958,"avatar":"https://static001.geekbang.org/account/avatar/00/16/37/56/11068390.jpg","nickname":"倡印","note":"","ucode":"4F53AA5D017D89","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":215516,"discussion_content":"我也好奇？难道没有连续？","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1585328474,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1014800,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/7c/10/165cb374.jpg","nickname":"Scott","note":"","ucode":"7E57FDCB5E5D49","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":22193,"discussion_content":"我觉得原文计算有问题，索引512kb地址需要128个一级索引项，一张索引表放32个索引项，那么这里需要4*2个一级表，对应二级三级四级都所需要表数不会超过2。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1569588851,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":3,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1153978,"avatar":"https://static001.geekbang.org/account/avatar/00/11/9b/ba/333b59e5.jpg","nickname":"Linuxer","note":"","ucode":"272D9D8089C3D6","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":3259,"discussion_content":"帮顶，这个我也想知道答案","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1564360619,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":3,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":228321,"user_name":"业余爱好者","can_delete":false,"product_type":"c1","uid":1482915,"ip_address":"","ucode":"A890935A982988","user_header":"https://static001.geekbang.org/account/avatar/00/16/a0/a3/8da99bb0.jpg","comment_is_top":false,"comment_ctime":1592641362,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"31657412434","product_id":100026001,"comment_content":"多级页表感觉就是对大量地址的分组，如果组还是太多就接着分组，一直到一个组数规模适中的程度。查找时逐层进行。由于地址空间是个杠铃结构，很多分组就不需要了，这样就大大节省了内存空间。","like_count":8},{"had_liked":false,"id":125503,"user_name":"zhe","can_delete":false,"product_type":"c1","uid":1399992,"ip_address":"","ucode":"E9EC160F812EF1","user_header":"https://static001.geekbang.org/account/avatar/00/15/5c/b8/c25244d9.jpg","comment_is_top":false,"comment_ctime":1566196071,"is_pvip":false,"replies":[{"id":"52653","content":"zhe同学，<br><br>你好，谢谢纠正。这里写错了，我修正过来，是128KB。写的时候太快把4KiB当成了4K Bit了。","user_name":"作者回复","user_name_real":"徐文浩","uid":"1053568","ctime":1569661294,"ip_address":"","comment_id":125503,"utype":1}],"discussion_count":1,"race_medal":0,"score":"27335999847","product_id":100026001,"comment_content":"而一个 1 级索引表，32 个 4KiB 的也就是 16KB 的大小，这个怎么算的","like_count":6,"discussions":[{"author":{"id":1053568,"avatar":"https://static001.geekbang.org/account/avatar/00/10/13/80/8de66543.jpg","nickname":"徐文浩","note":"","ucode":"1D39AC564172E9","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":463585,"discussion_content":"zhe同学，\n\n你好，谢谢纠正。这里写错了，我修正过来，是128KB。写的时候太快把4KiB当成了4K Bit了。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1569661294,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":186699,"user_name":"去777","can_delete":false,"product_type":"c1","uid":1608726,"ip_address":"","ucode":"8EF8CF537ABED3","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/eVgcqg5p554rB5Oxs5uOBRtiaTkaGJoPf8IODUWdRPicgUonTtCyK0YJ8t0hTAtHoSMAr8jZNWwJgQtMu5NMcS0w/132","comment_is_top":false,"comment_ctime":1583905552,"is_pvip":false,"discussion_count":2,"race_medal":0,"score":"23058742032","product_id":100026001,"comment_content":"跟调表的思想有点像","like_count":5,"discussions":[{"author":{"id":1444748,"avatar":"https://static001.geekbang.org/account/avatar/00/16/0b/8c/db1ee0a2.jpg","nickname":"walkingonair","note":"","ucode":"0C8BEE064ABF8B","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":401920,"discussion_content":"跳表是空间换时间，多级页表是时间换空间，正好相反","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1633764212,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1609114,"avatar":"https://static001.geekbang.org/account/avatar/00/18/8d/9a/61db513f.jpg","nickname":"赵源😈","note":"","ucode":"3D438CC59126F2","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":350704,"discussion_content":"是跳表这个数据结构吧？","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1613983751,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":119001,"user_name":"美美","can_delete":false,"product_type":"c1","uid":1148422,"ip_address":"","ucode":"44CC95C45AF345","user_header":"https://static001.geekbang.org/account/avatar/00/11/86/06/72b01bb7.jpg","comment_is_top":false,"comment_ctime":1564483515,"is_pvip":false,"discussion_count":5,"race_medal":0,"score":"23039319995","product_id":100026001,"comment_content":"一个页号是完整的 32 位的 4 字节（Byte）<br>-------------------------------<br>一个页号不是20位吗，为什么是32位呢","like_count":5,"discussions":[{"author":{"id":1637933,"avatar":"https://static001.geekbang.org/account/avatar/00/18/fe/2d/e23fc6ee.jpg","nickname":"深水蓝","note":"","ucode":"3E3B195DE54DE1","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":190534,"discussion_content":"是不是因为计算机只能通过16位或者32位读取数据，不能单独读取20位呢？","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1582955681,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":1,"child_discussions":[{"author":{"id":1645302,"avatar":"https://static001.geekbang.org/account/avatar/00/19/1a/f6/19e67bea.jpg","nickname":"モブ","note":"","ucode":"01BE64E20DEF7C","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1637933,"avatar":"https://static001.geekbang.org/account/avatar/00/18/fe/2d/e23fc6ee.jpg","nickname":"深水蓝","note":"","ucode":"3E3B195DE54DE1","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":256519,"discussion_content":"不是，页号是20位，另外12位是偏移地址，因为你需要在4K的页面里面进行寻址，4K=2^12","likes_number":3,"is_delete":false,"is_hidden":false,"ctime":1588490435,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":190534,"ip_address":""},"score":256519,"extra":""}]},{"author":{"id":1081495,"avatar":"https://static001.geekbang.org/account/avatar/00/10/80/97/41935734.jpg","nickname":"jkl_yuiop","note":"","ucode":"68E169B22EF77F","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":575085,"discussion_content":"页号存储的是 当前物理页的 首地址吧 32位4B","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1654587559,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":2415283,"avatar":"https://static001.geekbang.org/account/avatar/00/24/da/b3/35859560.jpg","nickname":"Ciao🌚","note":"","ucode":"B048EC8A4A4D77","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":349753,"discussion_content":"是不是因为用32位，再加偏移量的时候就不用进行移位操作了","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1613515505,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1055214,"avatar":"https://static001.geekbang.org/account/avatar/00/10/19/ee/e395a35e.jpg","nickname":"小先生","note":"","ucode":"E5F2052E0323C0","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":20119,"discussion_content":"同学，有解决这个问题吗","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1569280317,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":165069,"user_name":"王加武","can_delete":false,"product_type":"c1","uid":1665471,"ip_address":"","ucode":"DDCFE578C6C428","user_header":"https://static001.geekbang.org/account/avatar/00/19/69/bf/50a824a4.jpg","comment_is_top":false,"comment_ctime":1577155011,"is_pvip":false,"replies":[{"id":"68652","content":"👍，其实算法和数据结构在软硬件的开发的方方面面都会涉及到。","user_name":"作者回复","user_name_real":"徐文浩","uid":"1053568","ctime":1581233847,"ip_address":"","comment_id":165069,"utype":1}],"discussion_count":1,"race_medal":0,"score":"18757024195","product_id":100026001,"comment_content":"数据结构真的是无处不在啊！<br><br>哈希表是数组 + 链表组成的，充分的结合了数组和链表的优势，互补！但是哈希表存在哈希冲突，并且是无序的！不符合局部性原理！","like_count":5,"discussions":[{"author":{"id":1053568,"avatar":"https://static001.geekbang.org/account/avatar/00/10/13/80/8de66543.jpg","nickname":"徐文浩","note":"","ucode":"1D39AC564172E9","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":479011,"discussion_content":"👍，其实算法和数据结构在软硬件的开发的方方面面都会涉及到。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1581233847,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":117751,"user_name":"许童童","can_delete":false,"product_type":"c1","uid":1003005,"ip_address":"","ucode":"4B799C0C6BC678","user_header":"https://static001.geekbang.org/account/avatar/00/0f/4d/fd/0aa0e39f.jpg","comment_is_top":false,"comment_ctime":1564124536,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"14449026424","product_id":100026001,"comment_content":"多级页表相对于哈希表，优点我觉得应该是可以用到计算机的局部性原理，而用哈希表的话，顺序是打乱的而且存在哈希冲突。多级页表的缺点就是要一级一级查找，速度相对比较慢。","like_count":3},{"had_liked":false,"id":232184,"user_name":"放下","can_delete":false,"product_type":"c1","uid":1397434,"ip_address":"","ucode":"1AD911B1E23BDB","user_header":"https://static001.geekbang.org/account/avatar/00/15/52/ba/412b05c1.jpg","comment_is_top":false,"comment_ctime":1593910209,"is_pvip":false,"discussion_count":1,"race_medal":0,"score":"10183844801","product_id":100026001,"comment_content":"而一个 1 级索引表，对应 32 个 4KB 的也就是 128KB 的大小，这个4KB是指什么呢？是指1级索引表对于32个页表，一个页表4KB，是这样理解吗，请老师解答下","like_count":2,"discussions":[{"author":{"id":2628319,"avatar":"https://static001.geekbang.org/account/avatar/00/28/1a/df/75af7513.jpg","nickname":"奥雷里亚诺布恩迪亚上校","note":"","ucode":"6A16E9D5A57A32","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":389420,"discussion_content":"应该是一级索引表直接对应物理内存页，一个物理内存页表示的内存大小是4KB","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1629272798,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":117798,"user_name":"李","can_delete":false,"product_type":"c1","uid":1119312,"ip_address":"","ucode":"5C0FAA211F2E26","user_header":"https://static001.geekbang.org/account/avatar/00/11/14/50/c23cf47d.jpg","comment_is_top":false,"comment_ctime":1564132783,"is_pvip":true,"discussion_count":3,"race_medal":0,"score":"10154067375","product_id":100026001,"comment_content":"2个独立的二级索引，一个三级索引，一个四级索引吧？    为什么2个独立索引 还需要两个独立3级索引呢？  一个三级索引不就可以引用2个独立索引了吗？","like_count":2,"discussions":[{"author":{"id":1188710,"avatar":"https://static001.geekbang.org/account/avatar/00/12/23/66/413c0bb5.jpg","nickname":"LDxy","note":"","ucode":"956432CE7B7761","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":3079,"discussion_content":"好的情况下可以，坏的情况下不行。1个3级索引能表示的范围也是有限，如果2个2级索引表的地址距离超过了这个范围，就必须用2个3级索引表表示","likes_number":3,"is_delete":false,"is_hidden":false,"ctime":1564150237,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":1,"child_discussions":[{"author":{"id":1260141,"avatar":"https://static001.geekbang.org/account/avatar/00/13/3a/6d/910b2445.jpg","nickname":"Wheat","note":"","ucode":"7D99EA149B6DE8","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1188710,"avatar":"https://static001.geekbang.org/account/avatar/00/12/23/66/413c0bb5.jpg","nickname":"LDxy","note":"","ucode":"956432CE7B7761","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":344097,"discussion_content":"但是老师文章里说的是将8M内存分成连续的两个4M","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1611288972,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":3079,"ip_address":""},"score":344097,"extra":""}]},{"author":{"id":1476450,"avatar":"https://static001.geekbang.org/account/avatar/00/16/87/62/f99b5b05.jpg","nickname":"曙光","note":"","ucode":"04D65BF7F19845","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":257437,"discussion_content":"有问题，如果这个方式正确，那64个一级索引也可以分散对应64个二级索引表","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1588570782,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":117733,"user_name":"李","can_delete":false,"product_type":"c1","uid":1119312,"ip_address":"","ucode":"5C0FAA211F2E26","user_header":"https://static001.geekbang.org/account/avatar/00/11/14/50/c23cf47d.jpg","comment_is_top":false,"comment_ctime":1564121885,"is_pvip":true,"discussion_count":7,"race_medal":0,"score":"10154056477","product_id":100026001,"comment_content":"32 位的内存地址空间，页表一共需要记录 2^20 个到物理的映射关系。这个存储关系，就好比一个 2^20 大小的数组。一个页号是完整的 32 位的 4 字节（Byte），这样一个页表就需要 4MB 的空间<br>请问这两个是怎么算出来的？<br><br><br><br>","like_count":2,"discussions":[{"author":{"id":1068724,"avatar":"https://static001.geekbang.org/account/avatar/00/10/4e/b4/335e58d6.jpg","nickname":"华新","note":"","ucode":"B6DB20898F5F99","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":265840,"discussion_content":"2^10 = 1K,2^20=1M,每一个是4 字节，所以就是4*2^20 = 4M","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1589445389,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":2,"child_discussions":[{"author":{"id":1878120,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTJpJXWFP3dNle88WnTkRTsEQkPJmOhepibiaTfhEtMRrbdg5EAWm4EzurA61oKxvCK2ZjMmy1QvmChw/132","nickname":"唐江","note":"","ucode":"867C9808CF7760","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1068724,"avatar":"https://static001.geekbang.org/account/avatar/00/10/4e/b4/335e58d6.jpg","nickname":"华新","note":"","ucode":"B6DB20898F5F99","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":376416,"discussion_content":"2^20 不是1m","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1622114833,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":265840,"ip_address":""},"score":376416,"extra":""},{"author":{"id":2119325,"avatar":"https://static001.geekbang.org/account/avatar/00/20/56/9d/4b2a7d29.jpg","nickname":"ryanxw","note":"","ucode":"0B91EAC8D06EED","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1878120,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTJpJXWFP3dNle88WnTkRTsEQkPJmOhepibiaTfhEtMRrbdg5EAWm4EzurA61oKxvCK2ZjMmy1QvmChw/132","nickname":"唐江","note":"","ucode":"867C9808CF7760","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":534825,"discussion_content":"不是1M是多少","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1638283789,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":376416,"ip_address":""},"score":534825,"extra":""}]},{"author":{"id":1210699,"avatar":"https://static001.geekbang.org/account/avatar/00/12/79/4b/740f91ca.jpg","nickname":"-W.LI-","note":"","ucode":"3556786538664F","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":3081,"discussion_content":"想了半天感觉你说的是对的谢谢老铁，还有点别的想法。4字节32位能定义到任意一个位置。然后12位的地位是偏移量，2^12就是4kb。就是一个页4kb的意思么?然后我们要做的就是要维护一个页表把虚拟页号映射为物理地址。4kb为一页就有2^20页。映射的时候是不是只要存20位高位就好了?低12位偏移量不需要存?不过低位12位不存有个问题就是每页默认从低位12个0开始了。不晓得是不是这个意思","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1564150941,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1119312,"avatar":"https://static001.geekbang.org/account/avatar/00/11/14/50/c23cf47d.jpg","nickname":"李","note":"","ucode":"5C0FAA211F2E26","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":3042,"discussion_content":"1个页号是4字节，  那么1个页表，有2^20*（4）=4m","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1564129598,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":2,"child_discussions":[{"author":{"id":1210699,"avatar":"https://static001.geekbang.org/account/avatar/00/12/79/4b/740f91ca.jpg","nickname":"-W.LI-","note":"","ucode":"3556786538664F","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1119312,"avatar":"https://static001.geekbang.org/account/avatar/00/11/14/50/c23cf47d.jpg","nickname":"李","note":"","ucode":"5C0FAA211F2E26","race_medal":0,"user_type":1,"is_pvip":true},"discussion":{"id":3080,"discussion_content":"老铁2^20的数组是吧，里面的值为啥按4字节算啊不是只要20位么?3字节?低位的偏移量那12位不需要存的吧。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1564150308,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":3042,"ip_address":""},"score":3080,"extra":""},{"author":{"id":1124948,"avatar":"https://static001.geekbang.org/account/avatar/00/11/2a/54/c9990105.jpg","nickname":"bro.","note":"","ucode":"D65283CD869804","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1210699,"avatar":"https://static001.geekbang.org/account/avatar/00/12/79/4b/740f91ca.jpg","nickname":"-W.LI-","note":"","ucode":"3556786538664F","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":3622,"discussion_content":"因为你的计算机系统是32位的,所以物理页一页保存信息是4K比特,如果需要找到第4K比特上面的数据,你需要多少位才能找到呢? 2^12 = 4096,你就想我最多需要多少位才能找到第4K比特上的那个比特值0或者1,只需要12位就可以找到页缓存里面任意一个位置的数据值,所以偏移量需要12位,剩下的高位为32-12 =20位,所以数据都是存在数组中从20个0...0,到20个1...1保存映射关系数组,长度为:2^20=1048576(次数,可以自己计算一下),每个数组中只需要保存物理页号信息就行了,虚拟页号高位是从全0 ->全1的,每个页号保存的也是32位=4个字节(1字节8位),所以总共大小为1048576 * 4字节 = 4194304(字节) = 4194KB = 4M(都是约等于),就是这个样子啦","likes_number":7,"is_delete":false,"is_hidden":false,"ctime":1564645088,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":3080,"ip_address":""},"score":3622,"extra":""}]}]},{"had_liked":false,"id":237750,"user_name":"benxiong","can_delete":false,"product_type":"c1","uid":1624574,"ip_address":"","ucode":"F6498059D439D9","user_header":"https://static001.geekbang.org/account/avatar/00/18/c9/fe/874b172b.jpg","comment_is_top":false,"comment_ctime":1595942592,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"5890909888","product_id":100026001,"comment_content":"希望老师能解答一下二楼 W.LI的问题","like_count":1},{"had_liked":false,"id":223192,"user_name":"时光","can_delete":false,"product_type":"c1","uid":1347240,"ip_address":"","ucode":"1087509C209C54","user_header":"https://static001.geekbang.org/account/avatar/00/14/8e/a8/c9819e37.jpg","comment_is_top":false,"comment_ctime":1591017919,"is_pvip":true,"discussion_count":0,"race_medal":0,"score":"5885985215","product_id":100026001,"comment_content":"老师，为什么需要两个独立的三级索引表，一个不行吗。按照我的想法，从底层往上构建树，倒数第一层64个节点、倒数第二层2个节点、倒数第三层1个节点、倒数第四层1个节点这样就能表示出来了。","like_count":1},{"had_liked":false,"id":140210,"user_name":"zaab","can_delete":false,"product_type":"c1","uid":1683063,"ip_address":"","ucode":"EE846895FF0C85","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/QYKSUV20DMgBHAPLfgngdw4N8FHRCSBLCJueVRu9Ya1Ba2x4icx70zoVVFOZtG1K6TkHj5CFbuztQhRFyCjWXHQ/132","comment_is_top":false,"comment_ctime":1570850700,"is_pvip":false,"discussion_count":4,"race_medal":0,"score":"5865817996","product_id":100026001,"comment_content":"我看不懂的地方1.使用32位的内存地址，因为1位只能是0或者1， 所以最多有2的32次方的种不同排列，一个地址对应存1bit数据， 那么1024bit = 1kb , 1024kb=1M 1024M=1G , 所以是 4294967296 &#47;1024&#47;1024&#47;1024= 4GB；<br> 2.以一个页的大小是 4K 字节（4KB）为例，我们需要 20位高位，12位低位； 12位低位做偏移量，2的12次方=4096=4kb.. <br>","like_count":1,"discussions":[{"author":{"id":1939316,"avatar":"https://static001.geekbang.org/account/avatar/00/1d/97/74/a933d664.jpg","nickname":"莜戏","note":"","ucode":"C3488A2BB44359","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":376197,"discussion_content":"一个地址对应1Byte, 不是 bit","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1622012526,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1645302,"avatar":"https://static001.geekbang.org/account/avatar/00/19/1a/f6/19e67bea.jpg","nickname":"モブ","note":"","ucode":"01BE64E20DEF7C","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":256518,"discussion_content":"其实20位是10位的一级页表和10位的二级页表。\n按照一个页4KB的大小，是2的12次方，在一个页内寻址需要12位偏移量。4GB的虚拟内存空间，相当于需要1M个页，等于1K*1K,各自是2的10次方，即各自需要10位。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1588490363,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":2,"child_discussions":[{"author":{"id":1514292,"avatar":"https://static001.geekbang.org/account/avatar/00/17/1b/34/4d8c5694.jpg","nickname":"Movan","note":"","ucode":"D5A2E9E2E7A439","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1645302,"avatar":"https://static001.geekbang.org/account/avatar/00/19/1a/f6/19e67bea.jpg","nickname":"モブ","note":"","ucode":"01BE64E20DEF7C","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":270955,"discussion_content":"2的12次方不是4kb吗？bit？","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1590070833,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":256518,"ip_address":""},"score":270955,"extra":""},{"author":{"id":1645302,"avatar":"https://static001.geekbang.org/account/avatar/00/19/1a/f6/19e67bea.jpg","nickname":"モブ","note":"","ucode":"01BE64E20DEF7C","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1514292,"avatar":"https://static001.geekbang.org/account/avatar/00/17/1b/34/4d8c5694.jpg","nickname":"Movan","note":"","ucode":"D5A2E9E2E7A439","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":272976,"discussion_content":"你读肯定是一个字节一个字节 不会是一位一位吧😂","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1590385887,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":270955,"ip_address":""},"score":272976,"extra":""}]}]},{"had_liked":false,"id":126433,"user_name":"活的潇洒","can_delete":false,"product_type":"c1","uid":1238830,"ip_address":"","ucode":"666C30CA894754","user_header":"https://static001.geekbang.org/account/avatar/00/12/e7/2e/1522a7d6.jpg","comment_is_top":false,"comment_ctime":1566386498,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"5861353794","product_id":100026001,"comment_content":"为什么我们不用哈希表而用多级页表呢？<br>虚拟内存占用的地址空间，通常是两段连续的空间。而不是完全散落的随机的内存地址。而多级页表，就特别适合这样的内存地址分布<br>day40 笔记：httpshttps:&#47;&#47;www.cnblogs.com&#47;luoahong&#47;p&#47;11383429.html","like_count":1},{"had_liked":false,"id":117777,"user_name":"免费的人","can_delete":false,"product_type":"c1","uid":1032106,"ip_address":"","ucode":"2B12D8ED63C564","user_header":"https://static001.geekbang.org/account/avatar/00/0f/bf/aa/abb7bfe3.jpg","comment_is_top":false,"comment_ctime":1564129152,"is_pvip":false,"discussion_count":3,"race_medal":0,"score":"5859096448","product_id":100026001,"comment_content":"页大小是4KByte 还是Bit ？","like_count":1,"discussions":[{"author":{"id":1124948,"avatar":"https://static001.geekbang.org/account/avatar/00/11/2a/54/c9990105.jpg","nickname":"bro.","note":"","ucode":"D65283CD869804","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":3624,"discussion_content":"是bit值,就是低12位能够找到页中任何一个位置上的数据 2^12 = 4096bit ,所以存储大小为4000bit,Linux默认情况下页缓存大小为4KB = 4000 Bit (就是0和1的位数)","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1564645831,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":2,"child_discussions":[{"author":{"id":1561842,"avatar":"https://static001.geekbang.org/account/avatar/00/17/d4/f2/98201045.jpg","nickname":"Jason","note":"","ucode":"63A89D36BE72E8","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1124948,"avatar":"https://static001.geekbang.org/account/avatar/00/11/2a/54/c9990105.jpg","nickname":"bro.","note":"","ucode":"D65283CD869804","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":63224,"discussion_content":"看CSDN的博客都是4KB即4096个字节耶，你是不是搞错了。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1574868333,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":3624,"ip_address":""},"score":63224,"extra":""},{"author":{"id":1645302,"avatar":"https://static001.geekbang.org/account/avatar/00/19/1a/f6/19e67bea.jpg","nickname":"モブ","note":"","ucode":"01BE64E20DEF7C","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1124948,"avatar":"https://static001.geekbang.org/account/avatar/00/11/2a/54/c9990105.jpg","nickname":"bro.","note":"","ucode":"D65283CD869804","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":256521,"discussion_content":"你读写数据也不是按位读的啊...","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1588490530,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":3624,"ip_address":""},"score":256521,"extra":""}]}]},{"had_liked":false,"id":117664,"user_name":"徐凯","can_delete":false,"product_type":"c1","uid":1244991,"ip_address":"","ucode":"12F82BA3649CD5","user_header":"https://static001.geekbang.org/account/avatar/00/12/ff/3f/bbb8a88c.jpg","comment_is_top":false,"comment_ctime":1564107782,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"5859075078","product_id":100026001,"comment_content":"哈希表会有哈希冲突，比较不稳定。对于访问内存页的过程影响很大  老师是这样么","like_count":1},{"had_liked":false,"id":117613,"user_name":"啦啦啦","can_delete":false,"product_type":"c1","uid":1131687,"ip_address":"","ucode":"6B12EC90A62525","user_header":"https://static001.geekbang.org/account/avatar/00/11/44/a7/171c1e86.jpg","comment_is_top":false,"comment_ctime":1564102431,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"5859069727","product_id":100026001,"comment_content":"还是你讲的更通俗易懂","like_count":1},{"had_liked":false,"id":117599,"user_name":"xindoo","can_delete":false,"product_type":"c1","uid":1101718,"ip_address":"","ucode":"AEAF3208E644BC","user_header":"https://static001.geekbang.org/account/avatar/00/10/cf/96/251c0cee.jpg","comment_is_top":false,"comment_ctime":1564101710,"is_pvip":true,"discussion_count":1,"race_medal":0,"score":"5859069006","product_id":100026001,"comment_content":"计算机科学里，只要是有局部性，都可以通过加cache的方式解决，所以内存里肯定有另外一个数据结构，可以快速将某些常用的虚拟地址转化成物理地址。","like_count":1,"discussions":[{"author":{"id":1040236,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/df/6c/5af32271.jpg","nickname":"Dylan","note":"","ucode":"58064D0C9F9F5F","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":194690,"discussion_content":"TLB","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1583239454,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":349068,"user_name":"夏天","can_delete":false,"product_type":"c1","uid":1247485,"ip_address":"","ucode":"95DD5C15BBAFFD","user_header":"https://static001.geekbang.org/account/avatar/00/13/08/fd/8121b2bc.jpg","comment_is_top":false,"comment_ctime":1655710992,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1655710992","product_id":100026001,"comment_content":"这篇文章图画的也不错，可以参考<br>https:&#47;&#47;blog.51cto.com&#47;u_15352922&#47;3742181","like_count":0},{"had_liked":false,"id":331021,"user_name":"oxygen_酱","can_delete":false,"product_type":"c1","uid":2734372,"ip_address":"","ucode":"F042A44E05051D","user_header":"https://static001.geekbang.org/account/avatar/00/29/b9/24/0351fe33.jpg","comment_is_top":false,"comment_ctime":1642382957,"is_pvip":true,"discussion_count":0,"race_medal":0,"score":"1642382957","product_id":100026001,"comment_content":"多级页表。利用程序把堆和栈分布于内存两端（为了保证堆和栈的可扩展能力）的特点，压缩高位虚拟地址（应为都是同样的，只需要记录一次）","like_count":0},{"had_liked":false,"id":305882,"user_name":"Rootrl","can_delete":false,"product_type":"c1","uid":1035390,"ip_address":"","ucode":"50FE3BBA92D417","user_header":"https://static001.geekbang.org/account/avatar/00/0f/cc/7e/0d050964.jpg","comment_is_top":false,"comment_ctime":1628217778,"is_pvip":true,"discussion_count":0,"race_medal":0,"score":"1628217778","product_id":100026001,"comment_content":"目前虚拟地址算上偏移量的话，Linux32位保护模式下，一般分3段 [10bit页目录, 10bit页表, 12bit偏移]，6<br>位长模式分6段","like_count":0},{"had_liked":false,"id":301485,"user_name":"monchickey","can_delete":false,"product_type":"c1","uid":1513948,"ip_address":"","ucode":"D7B670444F62B3","user_header":"https://static001.geekbang.org/account/avatar/00/17/19/dc/9d3ed421.jpg","comment_is_top":false,"comment_ctime":1625713045,"is_pvip":false,"discussion_count":1,"race_medal":0,"score":"1625713045","product_id":100026001,"comment_content":"老师，为啥不用1个3级索引就够了，是因为堆和栈里的比较远是吧，不连续所以需要2个？","like_count":0,"discussions":[{"author":{"id":2750366,"avatar":"","nickname":"Geek_ee3685","note":"","ucode":"2E0D5A064F5619","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":401829,"discussion_content":"我觉得是这样 也有可能只用一个 关键看分配的内存地址到底在哪里 只要超过一个三级页表所能对应的地址大小 就肯定会用两个三级页表","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1633745114,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":277655,"user_name":"ano","can_delete":false,"product_type":"c1","uid":1783342,"ip_address":"","ucode":"7DE64BDFA78550","user_header":"https://static001.geekbang.org/account/avatar/00/1b/36/2e/376a3551.jpg","comment_is_top":false,"comment_ctime":1612509147,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1612509147","product_id":100026001,"comment_content":"这个页表树换成 4维32大的数组，行不啦？目测性能不受影响。","like_count":0},{"had_liked":false,"id":254755,"user_name":"迷羊","can_delete":false,"product_type":"c1","uid":1286251,"ip_address":"","ucode":"85AF8CED3436C8","user_header":"https://static001.geekbang.org/account/avatar/00/13/a0/6b/0a21b2b8.jpg","comment_is_top":false,"comment_ctime":1603181655,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1603181655","product_id":100026001,"comment_content":"“以这样的分成 4 级的多级页表来看，每一级如果都用 5 个比特表示。那么每一张某 1 级的页表，只需要 2^5=32 个条目。如果每个条目还是 4 个字节，那么一共需要 128 个字节。而一个 1 级索引表，对应 32 个 4KB 的也就是 128KB 的大小。一个填满的 2 级索引表，对应的就是 32 个 1 级索引表，也就是 4MB 的大小。”<br>老师这段没讲清楚啊，不懂是什么意思。看完后，还是不知道多级页表是怎么设计的","like_count":0},{"had_liked":false,"id":251716,"user_name":"ONENESS2019","can_delete":false,"product_type":"c1","uid":1501620,"ip_address":"","ucode":"F8CCF2118B29D7","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/UyjYSHTkMsqodhBJlbzL01Y3tRklSQzleSRbWvwZcYdTdGiczJEJT8dbTfrmcTFicEhMIEaSaeN4zCjNP1WUG2fg/132","comment_is_top":false,"comment_ctime":1601806114,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1601806114","product_id":100026001,"comment_content":"虚拟地址到物理地址的映射，其中的物理地址涵盖磁盘空间吗？","like_count":0},{"had_liked":false,"id":251693,"user_name":"ONENESS2019","can_delete":false,"product_type":"c1","uid":1501620,"ip_address":"","ucode":"F8CCF2118B29D7","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/UyjYSHTkMsqodhBJlbzL01Y3tRklSQzleSRbWvwZcYdTdGiczJEJT8dbTfrmcTFicEhMIEaSaeN4zCjNP1WUG2fg/132","comment_is_top":false,"comment_ctime":1601800743,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1601800743","product_id":100026001,"comment_content":"在程序运行后，调试打断点时，反汇编看的是物理地址吗？","like_count":0},{"had_liked":false,"id":234987,"user_name":"A君","can_delete":false,"product_type":"c1","uid":1940105,"ip_address":"","ucode":"FE96F089C2312C","user_header":"https://static001.geekbang.org/account/avatar/00/1d/9a/89/babe8b52.jpg","comment_is_top":false,"comment_ctime":1594863002,"is_pvip":true,"discussion_count":0,"race_medal":0,"score":"1594863002","product_id":100026001,"comment_content":"多级树状页表既给整个逻辑内存的映射预留了空间，只给用到的内存分配资源用于映射，其他没有映射到的空间指向NULL，用时间来换空间。","like_count":0},{"had_liked":false,"id":213156,"user_name":"残月@诗雨","can_delete":false,"product_type":"c1","uid":1111415,"ip_address":"","ucode":"38DA6C1BC808D5","user_header":"https://static001.geekbang.org/account/avatar/00/10/f5/77/7e852c51.jpg","comment_is_top":false,"comment_ctime":1588318384,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1588318384","product_id":100026001,"comment_content":"多级页表相当于  共享前缀这种思路么（共享二进制前缀），这样理解对吗？","like_count":0},{"had_liked":false,"id":213153,"user_name":"残月@诗雨","can_delete":false,"product_type":"c1","uid":1111415,"ip_address":"","ucode":"38DA6C1BC808D5","user_header":"https://static001.geekbang.org/account/avatar/00/10/f5/77/7e852c51.jpg","comment_is_top":false,"comment_ctime":1588317816,"is_pvip":false,"discussion_count":1,"race_medal":0,"score":"1588317816","product_id":100026001,"comment_content":"对mmap有点疑问：mmap  直接返回一个逻辑地址（也就是一个虚拟内存的地址），虚拟内存是对应着物理 内存的，也就是说mmap还是经过了内核态？不是说mmap可以直接将文件映射到用户内存么，然后减少了一次从内核态到用户态的拷贝么？","like_count":0,"discussions":[{"author":{"id":1521451,"avatar":"https://static001.geekbang.org/account/avatar/00/17/37/2b/b32f1d66.jpg","nickname":"Ball","note":"","ucode":"1EE949E68D84CA","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":350361,"discussion_content":"不使用 mmap 映射，每次访问文件内容都需要通过 read 系统调用从内核拷贝数据。使用了 mmap 映射之后，读取文件内容就和读取普通的数组一样，通过首地址 + 偏移就可以访问了，无需系统调用从内核拷贝数据。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1613825513,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":196592,"user_name":"大头爸爸","can_delete":false,"product_type":"c1","uid":1276613,"ip_address":"","ucode":"131E25DB04D222","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/gmP4Yh00MZPwNvr4UQdLeXaX3TVyZEEp195S3vD3Sfl1xz5jBr1474Mt6w5OPr0KsrnQObfLRy5PkKNFjSBiasA/132","comment_is_top":false,"comment_ctime":1585295505,"is_pvip":false,"discussion_count":2,"race_medal":0,"score":"1585295505","product_id":100026001,"comment_content":"“而一个 1 级索引表，对应 32 个 4KB 的也就是 128KB 的大小” 这里4KB是哪儿来的啊？","like_count":0,"discussions":[{"author":{"id":1122034,"avatar":"https://static001.geekbang.org/account/avatar/00/11/1e/f2/453d5f88.jpg","nickname":"seker","note":"","ucode":"9B705F91355873","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":296381,"discussion_content":"文章的前半部分有说到：&#34;同一个页里面的内存，在物理层面是连续的。以一个页的大小是 4K 字节（4KB）为例&#34;。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1596529020,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1645302,"avatar":"https://static001.geekbang.org/account/avatar/00/19/1a/f6/19e67bea.jpg","nickname":"モブ","note":"","ucode":"01BE64E20DEF7C","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":256522,"discussion_content":"一个页表项默认4K","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1588490573,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":183974,"user_name":"-_-|||","can_delete":false,"product_type":"c1","uid":1328142,"ip_address":"","ucode":"94B21594658BF9","user_header":"https://static001.geekbang.org/account/avatar/00/14/44/0e/ce14b7d3.jpg","comment_is_top":false,"comment_ctime":1583192941,"is_pvip":false,"discussion_count":1,"race_medal":1,"score":"1583192941","product_id":100026001,"comment_content":"文中”以一个页的大小是 4K 字节（4KB）为例，我们需要 20 位的高位，12 位的低位。”32位，4byte，怎么就4kb?我记得有个4k对齐，是虚拟内存对齐？","like_count":0,"discussions":[{"author":{"id":1645302,"avatar":"https://static001.geekbang.org/account/avatar/00/19/1a/f6/19e67bea.jpg","nickname":"モブ","note":"","ucode":"01BE64E20DEF7C","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":256523,"discussion_content":"4K对齐我记得应该是说磁盘的读写是按4K或512字节读取\n32位那个不矛盾啊，12位偏移位用来在4K里面寻址，前面20位为了映射32位系统4G的虚拟内存","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1588490710,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":150539,"user_name":"有情有义","can_delete":false,"product_type":"c1","uid":1290428,"ip_address":"","ucode":"B200B466A90B07","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTK2uagtiaicloiaKweyY6Sic8b9sJ2ibNaichSyibLCvRqkmnjACjyNCjellmSx6lbb0OBDCeAH8WNoyMomg/132","comment_is_top":false,"comment_ctime":1573551466,"is_pvip":false,"discussion_count":2,"race_medal":0,"score":"1573551466","product_id":100026001,"comment_content":"老师,你好 ,请问下为什么进程加载简单页表时候,就一定要全部加载进去呢?? 为什么不只加载和多级页表一样的只有自己需要的地址呢??感觉这一讲好多地方都不像之前那样好理解啊.","like_count":0,"discussions":[{"author":{"id":1104818,"avatar":"https://static001.geekbang.org/account/avatar/00/10/db/b2/29b4f22b.jpg","nickname":"JasonZ","note":"","ucode":"992193AE44C39C","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":370314,"discussion_content":"我也想知道为什么进程加载简单页表时候,就一定要全部加载进去呢? 不按需加载？","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1619360123,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1040236,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/df/6c/5af32271.jpg","nickname":"Dylan","note":"","ucode":"58064D0C9F9F5F","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":194698,"discussion_content":"所以才有页目录项，4M页表对应4K页目录","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1583239805,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":146002,"user_name":"拯救地球好累","can_delete":false,"product_type":"c1","uid":1339022,"ip_address":"","ucode":"7643439601EF4C","user_header":"https://static001.geekbang.org/account/avatar/00/14/6e/8e/5d309a85.jpg","comment_is_top":false,"comment_ctime":1572416423,"is_pvip":false,"discussion_count":1,"race_medal":0,"score":"1572416423","product_id":100026001,"comment_content":"---问题---<br>老师您好，有个问题还是没明白，按这种数据结构，多级页表比简单页表可以访问更大的虚拟空间，但是为什么能够更节省内存呢？某个进程所需要访问的虚拟内存空间一定的情况下，两者不是都需要一样多的页表项吗？","like_count":0,"discussions":[{"author":{"id":1299829,"avatar":"https://static001.geekbang.org/account/avatar/00/13/d5/75/d93f9648.jpg","nickname":"🍪","note":"","ucode":"2B6D01EA82DE97","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":163566,"discussion_content":"假设你希望有 16 个数，如果只能用一位表示的话，全部展示出来需要 0-F，16 个坑。有了 8 进制，表示着 16 个，只需要 0-1 + 0-7 9 个就行了。节省了 7 个","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1581085661,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":141730,"user_name":"Luciano李鑫","can_delete":false,"product_type":"c1","uid":1329995,"ip_address":"","ucode":"5FBE5F86FD5B2C","user_header":"https://static001.geekbang.org/account/avatar/00/14/4b/4b/97926cba.jpg","comment_is_top":false,"comment_ctime":1571215711,"is_pvip":false,"discussion_count":6,"race_medal":0,"score":"1571215711","product_id":100026001,"comment_content":"多级页表省空间的原因是把简单页表切碎了 。<br>简单页表是一个大数组 ，数组的长度是2^20 ，总大小是40M。<br>多级页表是把数据切碎成32^4个数组，全部填满元素是40M。<br>体现了升维的思想，相当于四维空间，要访问四次才能拿到最终的物理地址。","like_count":0,"discussions":[{"author":{"id":1310995,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/eyKgpIVFSDQBia7SJRVUKFh5qgwc3ohzEPSKvchLf9ZvwIO9CrS470ER7OhNzWTs0svECHCBiarQTa41BO3Hf0DA/132","nickname":"Temme","note":"","ucode":"BCBA3A5570216A","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":155165,"discussion_content":"照这么说，就算进程不把内存全撑满，简单页表也是把所有虚拟内存映射物理内存关系都包含了吗？","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1580219215,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1132304,"avatar":"https://static001.geekbang.org/account/avatar/00/11/47/10/2d673601.jpg","nickname":"好饿早知道送外卖了","note":"","ucode":"AED22DB5BF8FC7","race_medal":2,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":44461,"discussion_content":"或者是创建了，但是并未加载到主内存里。主内存里只加载了活跃状态的几个一级页表？","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1572951331,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":1,"child_discussions":[{"author":{"id":1329995,"avatar":"https://static001.geekbang.org/account/avatar/00/14/4b/4b/97926cba.jpg","nickname":"Luciano李鑫","note":"","ucode":"5FBE5F86FD5B2C","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1132304,"avatar":"https://static001.geekbang.org/account/avatar/00/11/47/10/2d673601.jpg","nickname":"好饿早知道送外卖了","note":"","ucode":"AED22DB5BF8FC7","race_medal":2,"user_type":1,"is_pvip":false},"discussion":{"id":44468,"discussion_content":"首先，页表的作用是从物理内存转换成虚拟内存的映射","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1572951965,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":44461,"ip_address":""},"score":44468,"extra":""}]},{"author":{"id":1132304,"avatar":"https://static001.geekbang.org/account/avatar/00/11/47/10/2d673601.jpg","nickname":"好饿早知道送外卖了","note":"","ucode":"AED22DB5BF8FC7","race_medal":2,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":44415,"discussion_content":"切碎了不也是40M吗？这个地方有点绕不过来～还是说多级页表的小数组峰值是40M，在未使用的时候其实并未创建那么多？","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1572947415,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":2,"child_discussions":[{"author":{"id":1329995,"avatar":"https://static001.geekbang.org/account/avatar/00/14/4b/4b/97926cba.jpg","nickname":"Luciano李鑫","note":"","ucode":"5FBE5F86FD5B2C","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1132304,"avatar":"https://static001.geekbang.org/account/avatar/00/11/47/10/2d673601.jpg","nickname":"好饿早知道送外卖了","note":"","ucode":"AED22DB5BF8FC7","race_medal":2,"user_type":1,"is_pvip":false},"discussion":{"id":44463,"discussion_content":"不存在的页表不就不占空间了","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1572951573,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":44415,"ip_address":""},"score":44463,"extra":""},{"author":{"id":1329995,"avatar":"https://static001.geekbang.org/account/avatar/00/14/4b/4b/97926cba.jpg","nickname":"Luciano李鑫","note":"","ucode":"5FBE5F86FD5B2C","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1132304,"avatar":"https://static001.geekbang.org/account/avatar/00/11/47/10/2d673601.jpg","nickname":"好饿早知道送外卖了","note":"","ucode":"AED22DB5BF8FC7","race_medal":2,"user_type":1,"is_pvip":false},"discussion":{"id":44465,"discussion_content":"可以想象一个不完全的多叉树","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1572951627,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":44415,"ip_address":""},"score":44465,"extra":""}]}]},{"had_liked":false,"id":141582,"user_name":"Luciano李鑫","can_delete":false,"product_type":"c1","uid":1329995,"ip_address":"","ucode":"5FBE5F86FD5B2C","user_header":"https://static001.geekbang.org/account/avatar/00/14/4b/4b/97926cba.jpg","comment_is_top":false,"comment_ctime":1571194780,"is_pvip":false,"discussion_count":2,"race_medal":0,"score":"1571194780","product_id":100026001,"comment_content":"请问老师，关于之前来时讲的告诉缓存中数据从内存块（block）到高速缓存（cache line）中的内存块和本节中的内存页有什么区别","like_count":0,"discussions":[{"author":{"id":1441830,"avatar":"https://static001.geekbang.org/account/avatar/00/16/00/26/a80010f0.jpg","nickname":"JL","note":"","ucode":"07BD8069AE2CBD","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":243741,"discussion_content":"虚拟页表","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1587558889,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1441830,"avatar":"https://static001.geekbang.org/account/avatar/00/16/00/26/a80010f0.jpg","nickname":"JL","note":"","ucode":"07BD8069AE2CBD","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":243739,"discussion_content":"缓存从内存中load数据，应该是从page table 里面load。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1587558816,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":135738,"user_name":"小先生","can_delete":false,"product_type":"c1","uid":1055214,"ip_address":"","ucode":"E5F2052E0323C0","user_header":"https://static001.geekbang.org/account/avatar/00/10/19/ee/e395a35e.jpg","comment_is_top":false,"comment_ctime":1569250073,"is_pvip":false,"replies":[{"id":"52603","content":"小先生同学，<br><br>你好，页表有2^20个项，这个2^20可以认为是一个虚拟页号。但是物理页号其实是一个内存地址，一个32位的操作系统的一个内存地址就是32Bit也就是32位。","user_name":"作者回复","user_name_real":"徐文浩","uid":"1053568","ctime":1569651845,"ip_address":"","comment_id":135738,"utype":1}],"discussion_count":2,"race_medal":0,"score":"1569250073","product_id":100026001,"comment_content":"一个页号是完整的 32 位的 4 字节（Byte）<br>-------------------------------<br>一个页号不是20位吗，为什么是32位呢？？请问有人能回答一下吗？？<br>","like_count":0,"discussions":[{"author":{"id":1053568,"avatar":"https://static001.geekbang.org/account/avatar/00/10/13/80/8de66543.jpg","nickname":"徐文浩","note":"","ucode":"1D39AC564172E9","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":468319,"discussion_content":"小先生同学，\n\n你好，页表有2^20个项，这个2^20可以认为是一个虚拟页号。但是物理页号其实是一个内存地址，一个32位的操作系统的一个内存地址就是32Bit也就是32位。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1569651845,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1443961,"avatar":"https://static001.geekbang.org/account/avatar/00/16/08/79/770c7d85.jpg","nickname":"弋轰","note":"","ucode":"C91DC862C248F0","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":299970,"discussion_content":"这里我也有疑问。。虚拟页号20位映射32位的物理页号么？因为后面还有拼接偏移量的步骤，低12位应该是拼接到物业页号后面的，那么存储的32位物理页号后面12位都是0？","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1597891221,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":134645,"user_name":"焰火","can_delete":false,"product_type":"c1","uid":1244606,"ip_address":"","ucode":"D3353B386DE3B5","user_header":"https://static001.geekbang.org/account/avatar/00/12/fd/be/079c78c7.jpg","comment_is_top":false,"comment_ctime":1568885215,"is_pvip":true,"replies":[{"id":"52632","content":"焰火同学，<br><br>你好，不太可能都实的，比如现在64位的计算机，内存空间是 2^64，没有哪个程序会需要那么多空间的。<br><br>进程的页表是由操作系统内核来创建管理的，Linux下也就是大家所谓的Kernel在管理。","user_name":"作者回复","user_name_real":"徐文浩","uid":"1053568","ctime":1569657739,"ip_address":"","comment_id":134645,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1568885215","product_id":100026001,"comment_content":"如果程序很大，两头实，中间也实，那么多级页表所占用的空间肯定比简单页表大得多吧？   进程的页表是操作系统进行统一管理的还是每个进程的装载器自我管理呢？","like_count":1,"discussions":[{"author":{"id":1053568,"avatar":"https://static001.geekbang.org/account/avatar/00/10/13/80/8de66543.jpg","nickname":"徐文浩","note":"","ucode":"1D39AC564172E9","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":467843,"discussion_content":"焰火同学，\n\n你好，不太可能都实的，比如现在64位的计算机，内存空间是 2^64，没有哪个程序会需要那么多空间的。\n\n进程的页表是由操作系统内核来创建管理的，Linux下也就是大家所谓的Kernel在管理。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1569657739,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":122331,"user_name":"蒋旺Foo","can_delete":false,"product_type":"c1","uid":1265741,"ip_address":"","ucode":"4325AB9674975C","user_header":"https://static001.geekbang.org/account/avatar/00/13/50/4d/392f969b.jpg","comment_is_top":false,"comment_ctime":1565340580,"is_pvip":false,"discussion_count":4,"race_medal":0,"score":"1565340580","product_id":100026001,"comment_content":"提供一个问题供同窗们一起思考，对理解为何会采用“多级页表”挺有帮助。「同样都是把页表存储在内存中，为何多级页表就比一级页表要省空间？」","like_count":0,"discussions":[{"author":{"id":1441876,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTI2vn8hyjICTCletGs0omz28lhriaZKX2XX9icYzAEon2IEoRnlXqyOia2bEPP0j7T6xexTnr77JJic8w/132","nickname":"Geek_c22199","note":"","ucode":"1CE5B65513E360","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":249832,"discussion_content":"回头再看多级页表，那个8M的例子，一般就是需要1个四级，两个三级！因为一个是头一个是尾","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1587966296,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1441876,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTI2vn8hyjICTCletGs0omz28lhriaZKX2XX9icYzAEon2IEoRnlXqyOia2bEPP0j7T6xexTnr77JJic8w/132","nickname":"Geek_c22199","note":"","ucode":"1CE5B65513E360","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":249828,"discussion_content":"接着上面的3，这个简单列表应该是个数组，最大最小的两个必须要用，内存不确定中间的项还不能缺！","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1587966134,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1441876,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTI2vn8hyjICTCletGs0omz28lhriaZKX2XX9icYzAEon2IEoRnlXqyOia2bEPP0j7T6xexTnr77JJic8w/132","nickname":"Geek_c22199","note":"","ucode":"1CE5B65513E360","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":249826,"discussion_content":"看了之后开始也不大理解，为什么简单列表不能加载部分。网上又看了点其他的，觉得应该是这样的1.程序并不是顺序给内存，而是栈从一头开始分，堆从另一头开始分，这样一般来说首尾两端是有数据的，中间是空的。有用的其实是首尾两部分虚拟内存；\n2.程序能用多少内存，没运行起来其实是不确定的。想想如果是查数据库多少结果不确定的；","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1587966022,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1147461,"avatar":"https://static001.geekbang.org/account/avatar/00/11/82/45/981ac8ab.jpg","nickname":"lcp","note":"","ucode":"3C9975BFF7654E","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":141276,"discussion_content":"这个问题可以看看这篇文章：\nhttps://blog.csdn.net/forDreamYue/article/details/78887035","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1579406756,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":119011,"user_name":"美美","can_delete":false,"product_type":"c1","uid":1148422,"ip_address":"","ucode":"44CC95C45AF345","user_header":"https://static001.geekbang.org/account/avatar/00/11/86/06/72b01bb7.jpg","comment_is_top":false,"comment_ctime":1564485197,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1564485197","product_id":100026001,"comment_content":"KiB是指2^10个bit？","like_count":0},{"had_liked":false,"id":118410,"user_name":"Linuxer","can_delete":false,"product_type":"c1","uid":1153978,"ip_address":"","ucode":"272D9D8089C3D6","user_header":"https://static001.geekbang.org/account/avatar/00/11/9b/ba/333b59e5.jpg","comment_is_top":false,"comment_ctime":1564361391,"is_pvip":false,"discussion_count":1,"race_medal":0,"score":"1564361391","product_id":100026001,"comment_content":"512K连续空间，应该是512&#47;4=128，一级页表32,不应该是128&#47;32=4，那二级页表应该一张就够了，三四级也是一张","like_count":0,"discussions":[{"author":{"id":1239833,"avatar":"https://static001.geekbang.org/account/avatar/00/12/eb/19/19e706a5.jpg","nickname":"cc","note":"","ucode":"AA1B8EA613E3A9","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":3370,"discussion_content":"同有这个疑问","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1564446368,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":118405,"user_name":"Linuxer","can_delete":false,"product_type":"c1","uid":1153978,"ip_address":"","ucode":"272D9D8089C3D6","user_header":"https://static001.geekbang.org/account/avatar/00/11/9b/ba/333b59e5.jpg","comment_is_top":false,"comment_ctime":1564361068,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1564361068","product_id":100026001,"comment_content":"512K连续空间，应该是512&#47;4等于128项，一级","like_count":0},{"had_liked":false,"id":118236,"user_name":"红泥小火炉","can_delete":false,"product_type":"c1","uid":1237681,"ip_address":"","ucode":"40D2BDEAFA65AC","user_header":"https://static001.geekbang.org/account/avatar/00/12/e2/b1/f2ac07ab.jpg","comment_is_top":false,"comment_ctime":1564298881,"is_pvip":false,"replies":[{"id":"43323","content":"是","user_name":"编辑回复","user_name_real":"王锦","uid":"1058895","ctime":1564322985,"ip_address":"","comment_id":118236,"utype":2}],"discussion_count":1,"race_medal":0,"score":"1564298881","product_id":100026001,"comment_content":"下一节是不是就出来tlb了","like_count":0,"discussions":[{"author":{"id":1058895,"avatar":"https://static001.geekbang.org/account/avatar/00/10/28/4f/48e48553.jpg","nickname":"@阿锦啊","note":"","ucode":"3C5F00333D7174","race_medal":0,"user_type":4,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":460316,"discussion_content":"是","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1564322985,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":4}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":117764,"user_name":"许童童","can_delete":false,"product_type":"c1","uid":1003005,"ip_address":"","ucode":"4B799C0C6BC678","user_header":"https://static001.geekbang.org/account/avatar/00/0f/4d/fd/0aa0e39f.jpg","comment_is_top":false,"comment_ctime":1564125898,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1564125898","product_id":100026001,"comment_content":"老师讲得好，不过对于这些2进制数字的换算，反应还有些慢，不知道老师是怎么训练的。","like_count":0},{"had_liked":false,"id":117744,"user_name":"李","can_delete":false,"product_type":"c1","uid":1119312,"ip_address":"","ucode":"5C0FAA211F2E26","user_header":"https://static001.geekbang.org/account/avatar/00/11/14/50/c23cf47d.jpg","comment_is_top":false,"comment_ctime":1564123391,"is_pvip":true,"discussion_count":2,"race_medal":0,"score":"1564123391","product_id":100026001,"comment_content":"以一个页的大小是 4K 比特（4KiB）为例，我们需要 20位的高位，12 位的低位。  这个是怎么来的？老师，有点看不明白这些换算<br><br>","like_count":0,"discussions":[{"author":{"id":1645302,"avatar":"https://static001.geekbang.org/account/avatar/00/19/1a/f6/19e67bea.jpg","nickname":"モブ","note":"","ucode":"01BE64E20DEF7C","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":256525,"discussion_content":"32位机虚拟内存4G，按4KB页表映射就是1M=2^20页表","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1588490807,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1119312,"avatar":"https://static001.geekbang.org/account/avatar/00/11/14/50/c23cf47d.jpg","nickname":"李","note":"","ucode":"5C0FAA211F2E26","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":3040,"discussion_content":"32位，则内存可寻址空间大小为 2^32,  4k=4×2^10=2^2×2^10=2^12.    总内存大小/页大小= 2^(32-12)=2^20.  个页， 用二进制计算，也就是20个位。  也就是高位是20.      而低位12，是因为是物理页4k,  没一个物理内存存储单位为1字节，4k/1字节= 2^12个存储单位，需要二进制的12位来寻址。 ","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1564128913,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":117629,"user_name":"仁者","can_delete":false,"product_type":"c1","uid":1130632,"ip_address":"","ucode":"EE2BA3A7FA34BC","user_header":"https://static001.geekbang.org/account/avatar/00/11/40/88/b36caddb.jpg","comment_is_top":false,"comment_ctime":1564103442,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1564103442","product_id":100026001,"comment_content":"与最近在啃的 《The linux programming interface》结合起来搞明白了不少问题，不过文中的 “程序” 换成 “进程”","like_count":0},{"had_liked":false,"id":117601,"user_name":"ezra.xu","can_delete":false,"product_type":"c1","uid":1014005,"ip_address":"","ucode":"6C3E11889BC6AB","user_header":"https://static001.geekbang.org/account/avatar/00/0f/78/f5/ae200a94.jpg","comment_is_top":false,"comment_ctime":1564101832,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1564101832","product_id":100026001,"comment_content":"节省内存，复杂度低。","like_count":0}]}