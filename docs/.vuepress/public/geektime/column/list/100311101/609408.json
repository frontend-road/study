{"id":609408,"title":"07｜项目代码规范：如何成为一名合格的团队协作工程师？","content":"<p>你好，我是杨文坚。</p><p>这是我们基础篇部分的最后一节课，来聊聊Vue 3 项目开发的代码规范实践。我们会以企业级项目的视角，实现项目的代码风格限制和代码质量检查，为你后续Vue 3项目进阶开发的代码规范打好基础。</p><p>为什么要专门留一节课来讲代码规范呢？</p><p>我们都知道，企业级项目通常都是团队多人合作进行开发和维护的。多人合作必然就逃不开个人的开发习惯和技术能力的差异，而技术能力的不足又会很直接体现在平时的坏习惯之中。比如说，有些开发者习惯性地在JavaScript 代码里写一堆 console.log 代码进行功能调试，这个习惯其实很不好，如果在项目里，console.log 频繁使用不规范是很容易导致内存泄露的。</p><p>但开发者也是人，或多或少都有“坏习惯”，特别是遇到项目工期紧张，经常顾不上项目代码的规范和质量，只要功能实现就好了。</p><p>这些不可控的项目和人员因素，会让不规范代码慢慢积累，各种“小坑”密集沉淀，量变引发质变形成“大坑”，最终的结果就是项目代码难以维护，项目功能经常出问题。</p><p>为了规避这些问题，我们先把Vue 3 项目的代码规范梳理成多个维度来进行讲解。</p><h2>Vue 3 项目代码规范有哪些方面？</h2><p>首先，我们必须要理清楚一个概念，Vue 3 项目说到底本质是JavaScript项目，既然是JavaScript项目，那我们就可以把项目代码规范分解成以下三个方面：</p><!-- [[[read_end]]] --><ol>\n<li>强类型语言开发JavaScript；</li>\n<li>代码格式规范；</li>\n<li>代码质量检查。</li>\n</ol><p><strong>我们先来看第一点，用强类型语言开发JavaScript。</strong>一般用强类型的语言开发JavaScript应用，即使用TypeScript进行开发。TypeScript的显式类型，可以减少JavaScript语言因为弱类型原因带来的潜在问题，例如常见的浏览器运行时，对象属性不存在的问题。</p><p>而且使用TypeScript，也可以增强代码的可读性，由于所有代码里的数据都经过TypeScript定义的数据类型，在代码阅读过程中，我们能很清晰地了解业务代码中的数据流向和数据变化。</p><p><strong>第二点就是代码格式规范。</strong>一般是在开发过程中，我们都会用工具来统一代码风格，方便代码的阅读，更方便团队的开发合作。在企业中，团队多人协作的项目经常遇到不同开发习惯导致代码风格不一致，例如代码缩进长度、代码每行最长长度、文件最多行数等代码格式。</p><p>多人协同开发的情况下，如果每人编写的代码格式不一致，就会降低代码的可读性和维护性。你可以设想一下，跟你一起开发项目的同事在代码里留下一个上千行代码的文件让你来修改，你会不会感觉到压力很大？如果这上千行代码的每行缩进长度都很随意，那你会不会更加崩溃？</p><p>那么既然要用工具来统一规范代码风格，在Vue 3项目中，我们需要用到什么工具来规范限制呢？</p><p>目前主流的代码格式规范工具是<strong>通过ESLint和Prettier结合来限制开发规范</strong>。其中ESLint功能是代码格式化和代码质量检查；而Prettier的功能是代码格式化，而且可以利用在VS Code编辑器里的Prettier插件，实现每次保存代码文件，自动格式化代码规范，无需人工调整代码规范。</p><p><strong>最后一点，代码质量检查。</strong>也就是检查代码质量，在开发过程中减少代码中潜在的问题。这个是最重要的，如果代码质量规范限制严格，可以大大减少线上问题。比如某个变量忘记声明就直接使用，还有上面提到过的滥用console.log带来的内存泄露的隐患等。当然这些代码质量问题都可以通过工具ESLint来检查和发现。</p><p>那么接下来，我们如何在实际项目开发中落实这些规范和要求呢？我们按照前面说的三个关键点一一来讲解。</p><h2>如何在Vue3项目中快速使用TypeScript？</h2><p>说到TypeScript，你应该或多或少听说过，它是JavaScript的“超集”，也就是说JavaScript是TypeScript的子集。众所周知，JavaScript是弱类型的语法，定义的数据可以随意赋值其它数据类型，这个弱类型特性很容易给代码在运行时候留下隐患。</p><p>TypeScript的出现很大程度避免了这些潜在的类型隐患，它主要是在开发过程结合VS Code等编辑器对进行代码里的类型推断检查，并且报出警告甚至错误。同时，TypeScript在编译成JavaScript时候，也会再次进行类型推断检查，如果有类型使用不规范，也会报错中断编译。</p><p>我们现在举一个例子对比说明一下。这是存在属性访问问题的JavaScript代码：</p><pre><code class=\"language-javascript\">const obj = {\n  a: null\n};\nconsole.log(obj.a.b + 1);\n</code></pre><p>这段JavaScript代码在开发过程中，如果不注意很难发现潜在的问题，一般要等代码在浏览器里运行的时候才能发现问题，如下图所示：</p><p><img src=\"https://static001.geekbang.org/resource/image/12/b2/1274c4e777a1eba71f3bdef4e77b73b2.png?wh=1540x672\" alt=\"图片\"></p><p>等在浏览器运行时候才能发现，就为时已晚了，可能已经影响到用户使用了。但如果换成TypeScript，我们就可以在“开发阶段”和“代码编译阶段”及早发现问题，在代码编译发布前提前把隐患暴露出来，你先看下这段代码：</p><pre><code class=\"language-typescript\">// 用 type 定义数据类型 MyObject\ntype MyObject = {\n  a: null;\n};\n\n// 用类型 MyObject 来声明变量 obj\nconst obj: MyObject = {\n  a: null\n};\n\nconsole.log(obj.a.b + 1);\n</code></pre><p>这段代码是将前面存在问题的JavaScript代码改造成了TypeScript代码，我们只是加上了TypeScript类型定义和变量类型声明，在开发阶段就能基于VS Code编辑器发现错误了，如下图所示：<br>\n<img src=\"https://static001.geekbang.org/resource/image/e6/03/e60d805dc0337c2c80f74bcc0381d903.png?wh=1244x618\" alt=\"图片\"></p><p>在TypeScript代码编译成JavaScript代码过程中，也会报错，如下图所示：</p><p><img src=\"https://static001.geekbang.org/resource/image/f1/d9/f1da8ae9a43b615310ee5e2021be0ed9.png?wh=1920x500\" alt=\"图片\"></p><p>通过这些例子的对比你可以看到，同样是一段有问题的功能代码，使用TypeScript就能及早发现问题所在，并且在开发过程中还能基于编辑器提醒或者编译过程中断报错及早发现问题。</p><p>不过这里有一个注意点，就是<strong>浏览器里并不能直接运行TypeScript代码</strong>，TypeScript代码最终还是需要编译成JavaScript代码才能在浏览器中运行。所以，TypeScript的作用主要是在开发阶段和编译阶段辅助开发者排除掉代码的类型隐患，而不是避免隐患。</p><p>但是毕竟不是所有人都会TypeScript，如果你对它并不熟悉，又想快速上手Vue 3项目的开发，有什么好方法呢？</p><p>我刚刚说了，TypeScript是为了开发阶段排除类型隐患，而且最终是编译成JavaScript代码，所以，小白想要快速上手，将TypeScript到Vue 3项目，核心就在于<strong>对所有数据进行TypeScript类型声明</strong>，至于后续的一些高阶用法，你到时候按需查<a href=\"https://www.typescriptlang.org/zh/docs/\">官方文档</a>现学现用就好了。</p><p>我现在把上节课的课程案例（基于Pinia的商品订单应用），转换成TypeScript代码，给你讲解一下如何改造成TypeScript项目。</p><p><img src=\"https://static001.geekbang.org/resource/image/78/2d/78d41eed8f6431544355c9569dbec12d.gif?wh=599x427\" alt=\"图片\"></p><p>如果我们要把上节课的项目改造成TypeScript项目，需要做以下的TypeScript项目配置四个步骤。</p><p><strong>第一步：安装 Vue 3 TypeScript项目需要用到的npm模块依赖：</strong></p><ul>\n<li>执行安装依赖命令：npm i -D typescript&nbsp; @vue/tsconfig；</li>\n<li>其中typescript模块是TypeScript官方的编译模块，@vue/tsconfig是Vue 3 官方的配置模块，我们可以基于这个模块来直接使用官方的推荐配置，减少初始化配置的成本。</li>\n</ul><p><strong>第二步：配置TypeScript的配置文件 tsconfig.config.json：</strong></p><ul>\n<li>在项目的根目录下创建名为 tsconfig.config.json 的文件，文件内容如下代码所示：</li>\n</ul><pre><code class=\"language-json\">{\n  \"extends\": \"@vue/tsconfig/tsconfig.web.json\",\n  \"include\": [\"env.d.ts\", \"src/**/*\", \"src/**/*.vue\"],\n  \"compilerOptions\": {\n    \"baseUrl\": \".\"\n  }\n}\n\n</code></pre><p>由于Vite自带了TypeScript的编译处理，所以我们就不需要新增其它开发配置了。</p><p><strong>第三步：修改源码文件的TypeScript文件类型</strong><strong>：</strong></p><ul>\n<li>Vue模板文件设置TypeScript语言类型 lang=“ts”；</li>\n<li>JS文件改成TS文件。</li>\n</ul><p><strong>第四步：给项目源码文件的数据添加TypeScript类型声明</strong><strong>。</strong></p><p>先在项目根目录创建一个给Vue文件的类型声明文件 env.d.ts：</p><pre><code class=\"language-typescript\">/// &lt;reference types=\"vite/client\" /&gt;\n</code></pre><p>再创建一个类型的文件 src/types.ts，主要给项目业务逻辑需要用到的数据进行类型声明，具体内容如下代码所示：</p><pre><code class=\"language-typescript\">import type { Store } from 'pinia';\n\n// 声明订单商品数据类型\nexport interface MyItem {\n  name: string;\n  price: number;\n  count: number;\n}\n\n// 声明基于Pinia的公共数据类型\nexport interface MyState {\n  text: string;\n  list: MyItem[];\n}\n\n// 声明基于Pinia的Getters读数据方法的数据类型\nexport type MyStoreGetters = {\n  totalPrice(state: MyState): number;\n};\n\n// 声明基于Pinia的Actions操作数据方法的数据类型\nexport interface MyStoreActions {\n  updateText(text?: string): void;\n  increase(index: number): void;\n  decrease(index: number): void;\n}\n\n// 声明基于Pinia的公共数据及其操作方法的聚合数据类型\nexport type MyStore = Store&lt;\n  'my-store',\n  MyState,\n  MyStoreGetters,\n  MyStoreActions\n&gt;;\n\n</code></pre><p>接下来，我们就可以将这个项目的数据类型给所有TypeScript代码引用了。下面就是Pinia的公共数据操作文件改造成TypeScript代码内容：</p><pre><code class=\"language-typescript\">import { defineStore } from 'pinia';\nimport type { MyState, MyStoreGetters, MyStoreActions } from './types';\n\nexport const useMyStore = defineStore&lt;\n  'my-store',\n  MyState,\n  MyStoreGetters,\n  MyStoreActions\n&gt;('my-store', {\n  state: () =&gt; ({\n    text: '环城东路888号',\n    list: [\n      { name: '苹果', price: 20, count: 0 },\n      { name: '香蕉', price: 12, count: 0 },\n      { name: '梨子', price: 15, count: 0 }\n    ]\n  }),\n\n  getters: {\n    totalPrice(state) {\n      let total = 0;\n      state.list.forEach((item) =&gt; {\n        total += item.price * item.count;\n      });\n      return total;\n    }\n  },\n\n  actions: {\n    updateText(text?: string) {\n      if (text) {\n        this.text = text;\n      }\n    },\n\n    increase(index: number) {\n      this.list[index].count += 1;\n    },\n\n    decrease(index: number) {\n      if (this.list[index].count &gt; 0) {\n        this.list[index].count -= 1;\n      }\n    }\n  }\n});\n\n</code></pre><p>你可以看到，改造量非常小，我们只需要给相关方法和数据加上类型的声明，这个声明可以在开发代码和编译代码期间做类型推断，尽早发现代码中潜在的数据操作隐患。<br>\n至于剩下的其它Vue文件怎么改造，我们以订单商品列表的Vue文件为例看看：</p><pre><code class=\"language-xml\">&lt;template&gt;\n  &lt;div class=\"v-list\"&gt;\n    &lt;div class=\"v-list-item\" v-for=\"(item, index) in myStore.list\" :key=\"index\"&gt;\n      &lt;span class=\"text\"&gt;{{ item.name }}&lt;/span&gt;\n      &lt;span class=\"text\"&gt;单价: {{ item.price }}&lt;/span&gt;\n      &lt;button class=\"btn\" v-on:click=\"myStore.decrease(index)\"&gt;-&lt;/button&gt;\n      &lt;span class=\"count\"&gt; {{ item.count }}&lt;/span&gt;\n      &lt;button class=\"btn\" v-on:click=\"myStore.increase(index)\"&gt;+&lt;/button&gt;\n    &lt;/div&gt;\n  &lt;/div&gt;\n&lt;/template&gt;\n\n&lt;script setup lang=\"ts\"&gt;\nimport type { MyStore } from '../types';\nimport { useMyStore } from '../store';\nconst myStore: MyStore = useMyStore();\n&lt;/script&gt;\n</code></pre><p>你会发现Vue文件的TypeScript改造量也很小，就是&lt;script&gt;标签加上 lang=\"ts\"属性，然后给使用的数据加上类型声明。用VS Code编辑器开发过程，你还可以把鼠标悬浮到对应数据类型上，看到该数据类型的提示内容，如下图所示：<br>\n<img src=\"https://static001.geekbang.org/resource/image/17/9d/1744f9dbf4a23b7019beb096fcc0809d.png?wh=1772x796\" alt=\"图片\"></p><p>至此，你应该能快速理解和入门Vue 3项目的TypeScript配置操作了。不过这里还要再说明一下，由于Vite自带了TypeScript的编译处理，所以我们不需要新增其它开发配置。</p><p>如果你项目用的是Rollup或者是Webpack进行代码打包，那么需要添加对应的TypeScript的Loader或者Plugin。这里也体现出Vite开箱即用的优势，TypeScript的编译配置也直接原生自带，开箱即用。</p><p>对于Vue 3项目来说，这里讲的TypeScript就基本够用了，剩下的一些高阶用法你可以以后再根据工作需要从官方文档中查找，没有必要花太多精力学会全部的TypeScript语法。</p><p>前面也说了，我们使用TypeScript主要是在开发过程中尽早发现类型问题，减少潜在数据类型问题隐患，这个是代码层面的数据类型规范，但是要人工自发遵守，代码规范很多，也难全部记得住，代码风格也不统一。</p><p>所以在开发过程中，我们还需要让编辑器能自带语法提醒和代码保存规范自动格式化的设置，这就需要对编辑器进行配置了。目前主流的都是基于 VS Code编辑器进行ESLint和Prettier的项目配置和编辑器插件配置，接下来我们也来看看这个怎么用。</p><h2>如何在VS Code用ESLint和Prettier规范代码格式？</h2><p>如果你想高效率地开发Vue 3项目，我建议你用VS Code这个开源免费的代码编辑器进行开发。我们这门课所有项目都是基于VS Code编辑器来进行开发的，所有项目规范配置也是基于VS Code代码编辑器。</p><p>使用VS Code结合ESLint和Prettier可以实现在保存代码触发保存操作时，自动进行格式化代码风格操作，如下动图所示：</p><p><img src=\"https://static001.geekbang.org/resource/image/b9/6c/b9e165875d865a5410dede00d49e046c.gif?wh=599x268\" alt=\"图片\"></p><p>而且，使用VS Code结合ESlint可以实现不规范代码的错误提示，如下图所示：</p><p><img src=\"https://static001.geekbang.org/resource/image/31/b4/31395e724c90cec91f6d769b0784a3b4.png?wh=1604x568\" alt=\"图片\"></p><p>这里，ESLint禁用代码使用console.log，结合VS Code 对代码里的console.log代码进行了错误提示。</p><p>那如何实现上述说的代码文件保存时自动格式化代码呢？我们需要对ESLint、Prettier和VS Code进行相应的配置。</p><p><strong>我们先来看第一步，ESLint配置，ESLint功能是代码格式化和代码质量检查。</strong></p><p>这里首先要安装npm模块：</p><pre><code class=\"language-shell\">npm i -D eslint eslint-plugin-vue @vue/eslint-config-prettier @vue/eslint-config-typescript\n</code></pre><p>上述依赖的各自作用如下：</p><ul>\n<li>eslint 是ESLint的核心模块，包括CLI命令工具；</li>\n<li>eslint-plugin-vue 是ESLint的Vue.js语法插件，主要用于检查Vue代码文件语法；</li>\n<li>@vue/eslint-config-prettier 是ESLint的Prettier配置，主要是联动Prettier进行代码规范的格式化；</li>\n<li>@vue/eslint-config-typescript 是ESLint的TypeScript配置，主要是检查Vue.js项目中的TypeScript语法；</li>\n</ul><p>其次是要设置ESLint项目配置文件 .eslintrc.cjs，参考如下：</p><pre><code class=\"language-javascript\">/* eslint-env node */\n\nmodule.exports = {\n  root: true,\n  plugins: ['prettier'],\n  extends: [\n    'plugin:vue/vue3-essential',\n    'plugin:prettier/recommended',\n    'eslint:recommended',\n    '@vue/eslint-config-typescript/recommended',\n    '@vue/eslint-config-prettier'\n  ],\n  rules: {\n    // 单引号限制\n    quotes: ['error', 'single'],\n    // 禁用console\n    'no-console': 'error'\n  }\n};\n\n</code></pre><p>这里的ESLint配置，直接使用了Vue 3 官方默认ESLint配置。当然你也可以通过 rules 定义项目的代码风格配置，例如我这里就设置了单引号限制和禁用console使用的代码质量限制，其它规范配置可以查看<a href=\"https://eslint.org/docs/latest/user-guide/configuring/rules\">官方配置文档</a>。</p><p><strong>第二步，是Prettier配置。Prettier的作用是格式化代码风格，后续加上VS Code的Prettier插件，可以在保存代码时候，自动格式化代码风格。</strong></p><p>同样地，我们首先安装npm模块：</p><pre><code class=\"language-shell\">npm i -D prettier\n</code></pre><p>然后在根目录创建prettier配置文件 .prettierrc.json，文件内容如下：</p><pre><code class=\"language-json\">{\n  \"tabWidth\": 2,\n  \"useTabs\": false,\n  \"endOfLine\": \"auto\",\n  \"singleQuote\": true,\n  \"semi\": true,\n  \"trailingComma\": \"none\",\n  \"bracketSpacing\": true\n}\n</code></pre><p>这些配置主要是代码风格的配置，例如 “tabWidth: 2”是代码风格缩进两个空格，其它配置和更多配置信息可以查看<a href=\"https://prettier.io/docs/en/options.html\">官网文档</a> 。<br>\n<strong>第三步，就是VS Code编辑器的配置，主要是能和ESLint和Prettier配置进行联动生效。</strong></p><p>我们先要安装VS Code的ESLint和Prettier等相关插件。这里Vue 3 项目需要以下五个VS Code插件：</p><ul>\n<li>Vue.volar ： Vue 3 官方推荐的VS Code开发插件；</li>\n<li>Vue.vscode-typescript-vue-plugin： Vue 3 TypeScript语法辅助VS Code插件；</li>\n<li>dbaeumer.vscode-eslint ： ESLint的VS Code插件；</li>\n<li>esbenp.prettier-vscode ：Prettier的VS Code插件；</li>\n<li>rvest.vs-code-prettier-eslint：ESLint联动Prettier的VS Code插件；</li>\n</ul><p>具体VS Code插件安装方式如下图所示：</p><p><img src=\"https://static001.geekbang.org/resource/image/bb/17/bbe7ff0658e953e94026c60f70bdb317.png?wh=1920x816\" alt=\"图片\"></p><p>安装完插件后，我们再配置VS Code编辑器配置，在项目的根目录下创建一个 .vscode 的目录。接着再创建VS Code扩展插件的配置文件 .vscode/extensions.json，声明我们项目需要用到的插件，这样子只要用VS Code打开这个项目，就可以提醒开发者去安装相关插件了。</p><pre><code class=\"language-json\">{\n  \"recommendations\": [\n    \"Vue.volar\",\n    \"Vue.vscode-typescript-vue-plugin\",\n    \"rvest.vs-code-prettier-eslint\",\n    \"dbaeumer.vscode-eslint\",\n    \"esbenp.prettier-vscode\"\n  ]\n}\n\n</code></pre><p>最后我们还要配置 VS Code的项目本地配置文件 .vscode/settings.json，主要是声明使用插件的配置和一些编辑器的保存自动格式化代码的配置：</p><pre><code class=\"language-json\">{\n  \"editor.formatOnSave\": true,\n  \"eslint.format.enable\": true,\n  \"prettier.configPath\": \".prettierrc.json\",\n  \"[typescript]\": {\n    \"editor.defaultFormatter\": \"esbenp.prettier-vscode\"\n  },\n  \"[typescriptreact]\": {\n    \"editor.defaultFormatter\": \"esbenp.prettier-vscode\"\n  },\n  \"[vue]\": {\n    \"editor.defaultFormatter\": \"esbenp.prettier-vscode\"\n  }\n}\n</code></pre><p>至此，项目的代码规范格式配置完毕，能够实现在项目开发过程中保存文件自动格式化代码和提示语法不规范错误。</p><p><img src=\"https://static001.geekbang.org/resource/image/b9/6c/b9e165875d865a5410dede00d49e046c.gif?wh=599x268\" alt=\"图片\"></p><p><img src=\"https://static001.geekbang.org/resource/image/31/b4/31395e724c90cec91f6d769b0784a3b4.png?wh=1604x568\" alt=\"图片\"></p><p>那么我们处理完ESLint和Prettier的VS Code配置后，是不是就一劳永逸了？</p><p>不是的，VS Code只是编辑器，如果团队其它开发者用的是其它编辑器，那么VS Code的规范限制就不起作用了，所以这个时候就需要一个 ESLint检查代码质量的兜底操作。那么，如何使用ESLint对代码进行质量检查呢？</p><h2>如何用ESLint检查代码质量？</h2><p>我们刚刚在ESLint安装依赖的时候，说过eslint模块里包括了CLI工具，我们可以在项目的package.json 脚本里，使用<strong>ESLint的CLI工具</strong>来统一处理代码质量的检查。</p><p>首先需要在package.json里配置ESLint的CLI使用脚本：</p><pre><code class=\"language-json\">{\n  \"scripts\": {\n    \"lint\": \"eslint . --ext .vue,.js,.jsx,.cjs,.mjs,.ts,.tsx,.cts,.mts --fix --ignore-path .gitignore\"\n  }\n}\n</code></pre><p>然后就可以在项目根目录的命令框里执行 npm run lint 进行代码风格和质量的统一检查，以及部分问题的修复，所有的代码风格规范和质量规范都是统一使用根目录下的 .eslintrc.cjs的配置文件里的规范内容。</p><p>如果出现代码质量问题会报错，如下图所示：</p><p><img src=\"https://static001.geekbang.org/resource/image/18/7d/18f8f0a4217ddf04f8c9c581f0f2677d.png?wh=1920x562\" alt=\"图片\"></p><p>报错，提示代码里使用了 console.log 这个配置禁用的语法操作。</p><p>这样，我们就可以愉快地兜底查找代码质量问题，然后进行问题的修复，即使团队其他开发者用的不是约定的VS Code编辑器，也能最后统一检查代码风格规范和质量规范。</p><h2>总结</h2><p>经过这节课的讲解，我相信你已经能明白项目的代码规范的重要性和必要性了，核心就是要通过技术工具手段来规范代码，降低团队不同开发者的开发习惯差异，提高项目代码质量和可读性，这样可以减少很多代码的维护成本和避免一些潜在代码问题。</p><p>关于Vue 3的项目代码规范配置理念，主要有三个要点：</p><ul>\n<li>编写代码规范，核心是用TypeScript这个强类型的语法，来减少Vue 3项目潜在的类型问题；</li>\n<li>代码格式规范，基于VS Code编辑器，用ESLint和Prettier，规范和限制开发代码时的代码风格格式化和质量检查；</li>\n<li>代码质量检查，基于ESLint的CLI工具进行兜底检查，避免是用其它编辑器绕过VS Code的代码规范限制。</li>\n</ul><p>但是一定要记住，我们做项目代码规范，<strong>不是为了规范而规范，核心是要提升代码质量</strong>，在开发项目时，让团队合作更加顺利，代码可读性更强，项目维护成本更低，让项目的潜在代码问题变得更少。</p><h2>思考</h2><p>在实际项目中，如何结合git流程，在提交代码（git commit）或者推送代码（git push）时候进行自动化的ESLint代码质量检查？</p><p>欢迎在留言区积极留言，参与讨论，下一讲见。</p><h3><a href=\"https://github.com/FE-star/vue3-course/tree/main/chapter/07\">完整的代码在这里</a></h3>","neighbors":{"left":{"article_title":"06｜跨组件数据通信：常见的组件间数据通信方式有哪些？","id":609407},"right":{"article_title":"加餐｜基础篇思考题答疑","id":610950}},"comments":[{"had_liked":false,"id":364253,"user_name":"yy","can_delete":false,"product_type":"c1","uid":3228055,"ip_address":"广东","ucode":"52D0FA4E99D147","user_header":"https://static001.geekbang.org/account/avatar/00/31/41/97/f771e00e.jpg","comment_is_top":false,"comment_ctime":1670731006,"is_pvip":false,"replies":[{"id":135001,"content":"您好，团队项目分支管理，可以先定义分支类型，比如：\n1. master分支，只有唯一一个分支。代码最终合并的主干分支。\n2. release分支，只有唯一一个分支，代码每次发布到产线的分支。\n3. test 分支，只有唯一一个分支，用来项目测试或者预发布验证。\n4. dev-xxx 分支，可以多人开发多个分支。\n\n有了分支的分类，下来就是分支管理。管理步骤如下：\n1. 开发过程用 dev-xxx分支。\n2. 需要发布前先dev-xxx分支合并到test分支，进入测试环境和预发布环境验证测试。\n3. 项目要发布时候，从test分支合并到master分支，再进入生产环境部署。\n4. 生产环境部署后，从master分支合并到release分支，再打上tag记录备份一次发布内容。\n\n以上只是常见企业的git分支管理方式，不一定是统一的方式，仅供参考。","user_name":"作者回复","user_name_real":"编辑","uid":3217031,"ctime":1678625824,"ip_address":"浙江","comment_id":364253,"utype":1}],"discussion_count":1,"race_medal":0,"score":2,"product_id":100311101,"comment_content":"团队协作少不了代码分支管理，这一块可以讲讲吗","like_count":3,"discussions":[{"author":{"id":3217031,"avatar":"https://thirdwx.qlogo.cn/mmopen/vi_32/TZnA0PlXExlp9byxOxCeOG6ia0ykwfpxqAq2vslTzL1z5ibTBsgf1nYx0bUXgrOTnSOnmdXQZZibYx9tRSPHFjibPQ/132","nickname":"文坚老师","note":"","ucode":"4E0C838B2A3725","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":608734,"discussion_content":"您好，团队项目分支管理，可以先定义分支类型，比如：\n1. master分支，只有唯一一个分支。代码最终合并的主干分支。\n2. release分支，只有唯一一个分支，代码每次发布到产线的分支。\n3. test 分支，只有唯一一个分支，用来项目测试或者预发布验证。\n4. dev-xxx 分支，可以多人开发多个分支。\n\n有了分支的分类，下来就是分支管理。管理步骤如下：\n1. 开发过程用 dev-xxx分支。\n2. 需要发布前先dev-xxx分支合并到test分支，进入测试环境和预发布环境验证测试。\n3. 项目要发布时候，从test分支合并到master分支，再进入生产环境部署。\n4. 生产环境部署后，从master分支合并到release分支，再打上tag记录备份一次发布内容。\n\n以上只是常见企业的git分支管理方式，不一定是统一的方式，仅供参考。","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1678625824,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"浙江","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":363818,"user_name":"初烬","can_delete":false,"product_type":"c1","uid":1507277,"ip_address":"陕西","ucode":"7ED4A301A7CC11","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/rUqhSN2OVg5aHw10Hxib61nGv1SXxD6zowFl27oSm9Y6g8grRpTxCxwk7qg14a1TtmpzMTM2y810MnibBhwn75Mg/132","comment_is_top":false,"comment_ctime":1670220371,"is_pvip":false,"replies":[{"id":135007,"content":"您好，你的建议很不错。项目代码规范涉及到的配置有很多，本课受限于篇幅，无法一一都进行讲解。","user_name":"作者回复","user_name_real":"编辑","uid":3217031,"ctime":1678626411,"ip_address":"浙江","comment_id":363818,"utype":1}],"discussion_count":1,"race_medal":0,"score":2,"product_id":100311101,"comment_content":"如果能加上editorconfig就更好了","like_count":2,"discussions":[{"author":{"id":3217031,"avatar":"https://thirdwx.qlogo.cn/mmopen/vi_32/TZnA0PlXExlp9byxOxCeOG6ia0ykwfpxqAq2vslTzL1z5ibTBsgf1nYx0bUXgrOTnSOnmdXQZZibYx9tRSPHFjibPQ/132","nickname":"文坚老师","note":"","ucode":"4E0C838B2A3725","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":608740,"discussion_content":"您好，你的建议很不错。项目代码规范涉及到的配置有很多，本课受限于篇幅，无法一一都进行讲解。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1678626411,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"浙江","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":363970,"user_name":"Castie!","can_delete":false,"product_type":"c1","uid":1112909,"ip_address":"中国香港","ucode":"E291CF2D4054A0","user_header":"https://static001.geekbang.org/account/avatar/00/10/fb/4d/046a660c.jpg","comment_is_top":false,"comment_ctime":1670401241,"is_pvip":true,"replies":[{"id":132482,"content":"good","user_name":"作者回复","user_name_real":"编辑","uid":3217031,"ctime":1671036254,"ip_address":"中国香港","comment_id":363970,"utype":1}],"discussion_count":2,"race_medal":0,"score":2,"product_id":100311101,"comment_content":"hasky","like_count":1,"discussions":[{"author":{"id":3217031,"avatar":"https://thirdwx.qlogo.cn/mmopen/vi_32/TZnA0PlXExlp9byxOxCeOG6ia0ykwfpxqAq2vslTzL1z5ibTBsgf1nYx0bUXgrOTnSOnmdXQZZibYx9tRSPHFjibPQ/132","nickname":"文坚老师","note":"","ucode":"4E0C838B2A3725","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":596505,"discussion_content":"good","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1671036254,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"中国香港","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1230852,"avatar":"https://static001.geekbang.org/account/avatar/00/12/c8/04/fed4c1ad.jpg","nickname":"若川","note":"","ucode":"B8C3DD4B38CC6F","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":596024,"discussion_content":"应该打错了~应该是 husky~","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1670565753,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":"浙江","group_id":0},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":365228,"user_name":"丫头","can_delete":false,"product_type":"c1","uid":1153387,"ip_address":"广东","ucode":"435D2E19E291C8","user_header":"https://static001.geekbang.org/account/avatar/00/11/99/6b/77bb8501.jpg","comment_is_top":false,"comment_ctime":1672285398,"is_pvip":false,"replies":[{"id":134976,"content":"您好，.eslintrc文件的后缀可以支持多种文件格式的，您可以参考官网文档  https:&#47;&#47;eslint.org&#47;docs&#47;latest&#47;use&#47;configure&#47;configuration-files ","user_name":"作者回复","user_name_real":"编辑","uid":3217031,"ctime":1678612727,"ip_address":"浙江","comment_id":365228,"utype":1}],"discussion_count":4,"race_medal":0,"score":2,"product_id":100311101,"comment_content":"配置文件 .eslintrc 的后缀有什么讲究吗？目前有见到过：1-没有后缀，2-.js后缀，3-.cjs后缀。","like_count":0,"discussions":[{"author":{"id":3217031,"avatar":"https://thirdwx.qlogo.cn/mmopen/vi_32/TZnA0PlXExlp9byxOxCeOG6ia0ykwfpxqAq2vslTzL1z5ibTBsgf1nYx0bUXgrOTnSOnmdXQZZibYx9tRSPHFjibPQ/132","nickname":"文坚老师","note":"","ucode":"4E0C838B2A3725","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":608693,"discussion_content":"您好，.eslintrc文件的后缀可以支持多种文件格式的，您可以参考官网文档  https://eslint.org/docs/latest/use/configure/configuration-files ","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1678612728,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"浙江","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1261108,"avatar":"https://static001.geekbang.org/account/avatar/00/13/3e/34/dd0a3c61.jpg","nickname":"爱吃彩虹糖的猫~","note":"","ucode":"9EC7A8FD4B7DB1","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":601681,"discussion_content":"粗略看了下说明，应该是跟搜索配置的顺序有关。下面摘抄github的原文\nBy default, Cosmiconfig will start where you tell it to start and search up the directory tree for the following:\n\n- a package.json property\n- a JSON or YAML, extensionless &#34;rc file&#34;\n- an &#34;rc file&#34; with the extensions .json, .yaml, .yml, .js, or .cjs\n- any of the above two inside a .config subdirectory\n- a .config.js or .config.cjs CommonJS module","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1675344843,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":"广东","group_id":0},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1261108,"avatar":"https://static001.geekbang.org/account/avatar/00/13/3e/34/dd0a3c61.jpg","nickname":"爱吃彩虹糖的猫~","note":"","ucode":"9EC7A8FD4B7DB1","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":601680,"discussion_content":"应该是遵循了cosmiconfig 规则\n地址： https://github.com/davidtheclark/cosmiconfig","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1675344649,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":"广东","group_id":0},"score":2,"extra":"","child_discussion_number":1,"child_discussions":[{"author":{"id":1153387,"avatar":"https://static001.geekbang.org/account/avatar/00/11/99/6b/77bb8501.jpg","nickname":"丫头","note":"","ucode":"435D2E19E291C8","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1261108,"avatar":"https://static001.geekbang.org/account/avatar/00/13/3e/34/dd0a3c61.jpg","nickname":"爱吃彩虹糖的猫~","note":"","ucode":"9EC7A8FD4B7DB1","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":601712,"discussion_content":"学到了，感谢～🙏","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1675381692,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":601680,"ip_address":"广东","group_id":0},"score":601712,"extra":""}]}]},{"had_liked":false,"id":364379,"user_name":"Geek_b640fe","can_delete":false,"product_type":"c1","uid":3227939,"ip_address":"广东","ucode":"382E72C91230CA","user_header":"https://thirdwx.qlogo.cn/mmopen/vi_32/Pk7HVX99cBlSOicLoa8KN81xqHa4YzRQsu5PAGTlOJgvChtl7T6BE6gTOhiaVJIcNVxIsRO1libPjdkZ6Sq8Qlp1g/132","comment_is_top":false,"comment_ctime":1670913865,"is_pvip":false,"replies":[{"id":134996,"content":"您好，只要是本地电脑VS Code没安装过的插件，重新打开VS Code就会有提醒，一般在右下角有提示框。","user_name":"作者回复","user_name_real":"编辑","uid":3217031,"ctime":1678625040,"ip_address":"浙江","comment_id":364379,"utype":1}],"discussion_count":1,"race_medal":0,"score":2,"product_id":100311101,"comment_content":"接着再创建 VS Code 扩展插件的配置文件 .vscode&#47;extensions.json，声明我们项目需要用到的插件，这样子只要用 VS Code 打开这个项目，就可以提醒开发者去安装相关插件了。\n\n有提醒吗，我没看到有提醒噢。","like_count":0,"discussions":[{"author":{"id":3217031,"avatar":"https://thirdwx.qlogo.cn/mmopen/vi_32/TZnA0PlXExlp9byxOxCeOG6ia0ykwfpxqAq2vslTzL1z5ibTBsgf1nYx0bUXgrOTnSOnmdXQZZibYx9tRSPHFjibPQ/132","nickname":"文坚老师","note":"","ucode":"4E0C838B2A3725","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":608727,"discussion_content":"您好，只要是本地电脑VS Code没安装过的插件，重新打开VS Code就会有提醒，一般在右下角有提示框。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1678625040,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"浙江","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":363986,"user_name":"风太大太大","can_delete":false,"product_type":"c1","uid":1368376,"ip_address":"中国香港","ucode":"E0221487898D62","user_header":"https://thirdwx.qlogo.cn/mmopen/vi_32/dCfVz7wIUT4fM7zQO3gIwXo3BGodP5FJuCdMxobZ5dXpzBeTXiaB3icoFqj22EbIGCu1xxd1FLo9xic0a2pGnunibg/132","comment_is_top":false,"comment_ctime":1670409893,"is_pvip":false,"replies":[{"id":132481,"content":"所有代码规范都是管理人员的管理工具，本质上为了避免大神写出看不懂的代码，避免傻子写出有缺陷的代码。注意，这些都是管理工具，最终都是服务于多人协同的，而作出的妥协。","user_name":"作者回复","user_name_real":"编辑","uid":3217031,"ctime":1671036231,"ip_address":"中国香港","comment_id":363986,"utype":1}],"discussion_count":2,"race_medal":0,"score":2,"product_id":100311101,"comment_content":"我之前一个很厉害的领导跟我说过，他很拒绝代码格式化工具。\n站在他的角度，每个开发都需要养成一个良好的代码风格，他觉得是一个必修技能。\n如果按照他的观点就是约束大于规范，需要自己养成好的习惯，所以有的时候我也在怀疑，现在大家都这样用工具约束自己写代码，是不是就是在掩盖自己的某些缺陷呢。","like_count":0,"discussions":[{"author":{"id":3217031,"avatar":"https://thirdwx.qlogo.cn/mmopen/vi_32/TZnA0PlXExlp9byxOxCeOG6ia0ykwfpxqAq2vslTzL1z5ibTBsgf1nYx0bUXgrOTnSOnmdXQZZibYx9tRSPHFjibPQ/132","nickname":"文坚老师","note":"","ucode":"4E0C838B2A3725","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":596504,"discussion_content":"所有代码规范都是管理人员的管理工具，本质上为了避免大神写出看不懂的代码，避免傻子写出有缺陷的代码。注意，这些都是管理工具，最终都是服务于多人协同的，而作出的妥协。","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1671036231,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"中国香港","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":2356095,"avatar":"https://static001.geekbang.org/account/avatar/00/23/f3/7f/f397f3a2.jpg","nickname":"CC","note":"","ucode":"44CBE5ED597D27","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":595943,"discussion_content":"良好的代码风格没有一个统一的标准，但是多人合作的时候需要统一，所以在团队合作的时候，工具规范就很有必要了。","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1670492459,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":"上海","group_id":0},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":363832,"user_name":"ZR-rd","can_delete":false,"product_type":"c1","uid":2076199,"ip_address":"北京","ucode":"427E69255F30D8","user_header":"https://static001.geekbang.org/account/avatar/00/1f/ae/27/74828c37.jpg","comment_is_top":false,"comment_ctime":1670231186,"is_pvip":false,"replies":[{"id":135005,"content":"您好，你的答案是正确的，就是基于git hooks对git的每个环节做代码检查和处理。","user_name":"作者回复","user_name_real":"编辑","uid":3217031,"ctime":1678626229,"ip_address":"浙江","comment_id":363832,"utype":1}],"discussion_count":1,"race_medal":0,"score":2,"product_id":100311101,"comment_content":"可以使用 githooks 在代码提交前执行 eslint 检查和类型检查","like_count":0,"discussions":[{"author":{"id":3217031,"avatar":"https://thirdwx.qlogo.cn/mmopen/vi_32/TZnA0PlXExlp9byxOxCeOG6ia0ykwfpxqAq2vslTzL1z5ibTBsgf1nYx0bUXgrOTnSOnmdXQZZibYx9tRSPHFjibPQ/132","nickname":"文坚老师","note":"","ucode":"4E0C838B2A3725","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":608738,"discussion_content":"您好，你的答案是正确的，就是基于git hooks对git的每个环节做代码检查和处理。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1678626229,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"浙江","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":393919,"user_name":"ifelse","can_delete":false,"product_type":"c1","uid":2550743,"ip_address":"浙江","ucode":"D0565908C99695","user_header":"https://static001.geekbang.org/account/avatar/00/26/eb/d7/90391376.jpg","comment_is_top":false,"comment_ctime":1725335892,"is_pvip":false,"replies":null,"discussion_count":0,"race_medal":3,"score":2,"product_id":100311101,"comment_content":"学习打卡","like_count":0},{"had_liked":false,"id":373933,"user_name":"前端WLOP","can_delete":false,"product_type":"c1","uid":1800417,"ip_address":"上海","ucode":"23258059979352","user_header":"https://static001.geekbang.org/account/avatar/00/1b/78/e1/c6a3f7d0.jpg","comment_is_top":false,"comment_ctime":1683361626,"is_pvip":false,"replies":null,"discussion_count":0,"race_medal":0,"score":2,"product_id":100311101,"comment_content":"typescript的interface和type分别在什么场景下用","like_count":0},{"had_liked":false,"id":364282,"user_name":"静心","can_delete":false,"product_type":"c1","uid":1335457,"ip_address":"山西","ucode":"EB264FA6519FDA","user_header":"https://static001.geekbang.org/account/avatar/00/14/60/a1/45ffdca3.jpg","comment_is_top":false,"comment_ctime":1670755895,"is_pvip":false,"replies":null,"discussion_count":1,"race_medal":0,"score":2,"product_id":100311101,"comment_content":"请问ESLint 和 Prettier的关系和区别分别是什么？","like_count":0,"discussions":[{"author":{"id":2076199,"avatar":"https://static001.geekbang.org/account/avatar/00/1f/ae/27/74828c37.jpg","nickname":"ZR-rd","note":"","ucode":"427E69255F30D8","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":596651,"discussion_content":"eslint 可以帮你规范代码写法，提前避免很多问题\nprettier 只是单纯的代码格式化工具","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1671175428,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":"北京","group_id":0},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":363987,"user_name":"风太大太大","can_delete":false,"product_type":"c1","uid":1368376,"ip_address":"湖北","ucode":"E0221487898D62","user_header":"https://thirdwx.qlogo.cn/mmopen/vi_32/dCfVz7wIUT4fM7zQO3gIwXo3BGodP5FJuCdMxobZ5dXpzBeTXiaB3icoFqj22EbIGCu1xxd1FLo9xic0a2pGnunibg/132","comment_is_top":false,"comment_ctime":1670409954,"is_pvip":false,"replies":null,"discussion_count":0,"race_medal":0,"score":3,"product_id":100311101,"comment_content":"一不小心就是课程进度21%了","like_count":0}]}