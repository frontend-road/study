{"id":90771,"title":"22 | Executor与线程池：如何创建正确的线程池？","content":"<p>虽然在Java语言中创建线程看上去就像创建一个对象一样简单，只需要new Thread()就可以了，但实际上创建线程远不是创建一个对象那么简单。创建对象，仅仅是在JVM的堆里分配一块内存而已；而创建一个线程，却需要调用操作系统内核的API，然后操作系统要为线程分配一系列的资源，这个成本就很高了，所以<strong>线程是一个重量级的对象，应该避免频繁创建和销毁</strong>。</p><p>那如何避免呢？应对方案估计你已经知道了，那就是线程池。</p><p>线程池的需求是如此普遍，所以Java SDK并发包自然也少不了它。但是很多人在初次接触并发包里线程池相关的工具类时，多少会都有点蒙，不知道该从哪里入手，我觉得根本原因在于线程池和一般意义上的池化资源是不同的。一般意义上的池化资源，都是下面这样，当你需要资源的时候就调用acquire()方法来申请资源，用完之后就调用release()释放资源。若你带着这个固有模型来看并发包里线程池相关的工具类时，会很遗憾地发现它们完全匹配不上，Java提供的线程池里面压根就没有申请线程和释放线程的方法。</p><pre><code>class XXXPool{\n  // 获取池化资源\n  XXX acquire() {\n  }\n  // 释放池化资源\n  void release(XXX x){\n  }\n}  \n</code></pre><h2>线程池是一种生产者-消费者模式</h2><p>为什么线程池没有采用一般意义上池化资源的设计方法呢？如果线程池采用一般意义上池化资源的设计方法，应该是下面示例代码这样。你可以来思考一下，假设我们获取到一个空闲线程T1，然后该如何使用T1呢？你期望的可能是这样：通过调用T1的execute()方法，传入一个Runnable对象来执行具体业务逻辑，就像通过构造函数Thread(Runnable target)创建线程一样。可惜的是，你翻遍Thread对象的所有方法，都不存在类似execute(Runnable target)这样的公共方法。</p><!-- [[[read_end]]] --><pre><code>//采用一般意义上池化资源的设计方法\nclass ThreadPool{\n  // 获取空闲线程\n  Thread acquire() {\n  }\n  // 释放线程\n  void release(Thread t){\n  }\n} \n//期望的使用\nThreadPool pool；\nThread T1=pool.acquire();\n//传入Runnable对象\nT1.execute(()-&gt;{\n  //具体业务逻辑\n  ......\n});\n</code></pre><p>所以，线程池的设计，没有办法直接采用一般意义上池化资源的设计方法。那线程池该如何设计呢？目前业界线程池的设计，普遍采用的都是<strong>生产者-消费者模式</strong>。线程池的使用方是生产者，线程池本身是消费者。在下面的示例代码中，我们创建了一个非常简单的线程池MyThreadPool，你可以通过它来理解线程池的工作原理。</p><pre><code>//简化的线程池，仅用来说明工作原理\nclass MyThreadPool{\n  //利用阻塞队列实现生产者-消费者模式\n  BlockingQueue&lt;Runnable&gt; workQueue;\n  //保存内部工作线程\n  List&lt;WorkerThread&gt; threads \n    = new ArrayList&lt;&gt;();\n  // 构造方法\n  MyThreadPool(int poolSize, \n    BlockingQueue&lt;Runnable&gt; workQueue){\n    this.workQueue = workQueue;\n    // 创建工作线程\n    for(int idx=0; idx&lt;poolSize; idx++){\n      WorkerThread work = new WorkerThread();\n      work.start();\n      threads.add(work);\n    }\n  }\n  // 提交任务\n  void execute(Runnable command){\n    workQueue.put(command);\n  }\n  // 工作线程负责消费任务，并执行任务\n  class WorkerThread extends Thread{\n    public void run() {\n      //循环取任务并执行\n      while(true){ ①\n        Runnable task = workQueue.take();\n        task.run();\n      } \n    }\n  }  \n}\n\n/** 下面是使用示例 **/\n// 创建有界阻塞队列\nBlockingQueue&lt;Runnable&gt; workQueue = \n  new LinkedBlockingQueue&lt;&gt;(2);\n// 创建线程池  \nMyThreadPool pool = new MyThreadPool(\n  10, workQueue);\n// 提交任务  \npool.execute(()-&gt;{\n    System.out.println(&quot;hello&quot;);\n});\n</code></pre><p>在MyThreadPool的内部，我们维护了一个阻塞队列workQueue和一组工作线程，工作线程的个数由构造函数中的poolSize来指定。用户通过调用execute()方法来提交Runnable任务，execute()方法的内部实现仅仅是将任务加入到workQueue中。MyThreadPool内部维护的工作线程会消费workQueue中的任务并执行任务，相关的代码就是代码①处的while循环。线程池主要的工作原理就这些，是不是还挺简单的？</p><h2>如何使用Java中的线程池</h2><p>Java并发包里提供的线程池，远比我们上面的示例代码强大得多，当然也复杂得多。Java提供的线程池相关的工具类中，最核心的是<strong>ThreadPoolExecutor</strong>，通过名字你也能看出来，它强调的是Executor，而不是一般意义上的池化资源。</p><p>ThreadPoolExecutor的构造函数非常复杂，如下面代码所示，这个最完备的构造函数有7个参数。</p><pre><code>ThreadPoolExecutor(\n  int corePoolSize,\n  int maximumPoolSize,\n  long keepAliveTime,\n  TimeUnit unit,\n  BlockingQueue&lt;Runnable&gt; workQueue,\n  ThreadFactory threadFactory,\n  RejectedExecutionHandler handler) \n</code></pre><p>下面我们一一介绍这些参数的意义，你可以<strong>把线程池类比为一个项目组，而线程就是项目组的成员</strong>。</p><ul>\n<li><strong>corePoolSize</strong>：表示线程池保有的最小线程数。有些项目很闲，但是也不能把人都撤了，至少要留corePoolSize个人坚守阵地。</li>\n<li><strong>maximumPoolSize</strong>：表示线程池创建的最大线程数。当项目很忙时，就需要加人，但是也不能无限制地加，最多就加到maximumPoolSize个人。当项目闲下来时，就要撤人了，最多能撤到corePoolSize个人。</li>\n<li><strong>keepAliveTime &amp; unit</strong>：上面提到项目根据忙闲来增减人员，那在编程世界里，如何定义忙和闲呢？很简单，一个线程如果在一段时间内，都没有执行任务，说明很闲，keepAliveTime 和 unit 就是用来定义这个“一段时间”的参数。也就是说，如果一个线程空闲了<code>keepAliveTime &amp; unit</code>这么久，而且线程池的线程数大于 corePoolSize ，那么这个空闲的线程就要被回收了。</li>\n<li><strong>workQueue</strong>：工作队列，和上面示例代码的工作队列同义。</li>\n<li><strong>threadFactory</strong>：通过这个参数你可以自定义如何创建线程，例如你可以给线程指定一个有意义的名字。</li>\n<li><strong>handler</strong>：通过这个参数你可以自定义任务的拒绝策略。如果线程池中所有的线程都在忙碌，并且工作队列也满了（前提是工作队列是有界队列），那么此时提交任务，线程池就会拒绝接收。至于拒绝的策略，你可以通过handler这个参数来指定。ThreadPoolExecutor已经提供了以下4种策略。\n<ul>\n<li>CallerRunsPolicy：提交任务的线程自己去执行该任务。</li>\n<li>AbortPolicy：默认的拒绝策略，会throws RejectedExecutionException。</li>\n<li>DiscardPolicy：直接丢弃任务，没有任何异常抛出。</li>\n<li>DiscardOldestPolicy：丢弃最老的任务，其实就是把最早进入工作队列的任务丢弃，然后把新任务加入到工作队列。</li>\n</ul>\n</li>\n</ul><p>Java在1.6版本还增加了 allowCoreThreadTimeOut(boolean value) 方法，它可以让所有线程都支持超时，这意味着如果项目很闲，就会将项目组的成员都撤走。</p><h2>使用线程池要注意些什么</h2><p>考虑到ThreadPoolExecutor的构造函数实在是有些复杂，所以Java并发包里提供了一个线程池的静态工厂类Executors，利用Executors你可以快速创建线程池。不过目前大厂的编码规范中基本上都不建议使用Executors了，所以这里我就不再花篇幅介绍了。</p><p>不建议使用Executors的最重要的原因是：Executors提供的很多方法默认使用的都是无界的LinkedBlockingQueue，高负载情境下，无界队列很容易导致OOM，而OOM会导致所有请求都无法处理，这是致命问题。所以<strong>强烈建议使用有界队列</strong>。</p><p>使用有界队列，当任务过多时，线程池会触发执行拒绝策略，线程池默认的拒绝策略会throw RejectedExecutionException 这是个运行时异常，对于运行时异常编译器并不强制catch它，所以开发人员很容易忽略。因此<strong>默认拒绝策略要慎重使用</strong>。如果线程池处理的任务非常重要，建议自定义自己的拒绝策略；并且在实际工作中，自定义的拒绝策略往往和降级策略配合使用。</p><p>使用线程池，还要注意异常处理的问题，例如通过ThreadPoolExecutor对象的execute()方法提交任务时，如果任务在执行的过程中出现运行时异常，会导致执行任务的线程终止；不过，最致命的是任务虽然异常了，但是你却获取不到任何通知，这会让你误以为任务都执行得很正常。虽然线程池提供了很多用于异常处理的方法，但是最稳妥和简单的方案还是捕获所有异常并按需处理，你可以参考下面的示例代码。</p><pre><code>try {\n  //业务逻辑\n} catch (RuntimeException x) {\n  //按需处理\n} catch (Throwable x) {\n  //按需处理\n} \n</code></pre><h2>总结</h2><p>线程池在Java并发编程领域非常重要，很多大厂的编码规范都要求必须通过线程池来管理线程。线程池和普通的池化资源有很大不同，线程池实际上是生产者-消费者模式的一种实现，理解生产者-消费者模式是理解线程池的关键所在。</p><p>创建线程池设置合适的线程数非常重要，这部分内容，你可以参考<a href=\"https://time.geekbang.org/column/article/86666\">《10 | Java线程（中）：创建多少线程才是合适的？》</a>的内容。另外<a href=\"time://mall?url=https%3A%2F%2Fh5.youzan.com%2Fv2%2Fgoods%2F2758xqdzr6uuw\">《Java并发编程实战》</a>的第7章《取消与关闭》的7.3节“处理非正常的线程终止” 详细介绍了异常处理的方案，第8章《线程池的使用》对线程池的使用也有更深入的介绍，如果你感兴趣或有需要的话，建议你仔细阅读。</p><h2>课后思考</h2><p>使用线程池，默认情况下创建的线程名字都类似<code>pool-1-thread-2</code>这样，没有业务含义。而很多情况下为了便于诊断问题，都需要给线程赋予一个有意义的名字，那你知道有哪些办法可以给线程池里的线程指定名字吗？</p><p>欢迎在留言区与我分享你的想法，也欢迎你在留言区记录你的思考过程。感谢阅读，如果你觉得这篇文章对你有帮助的话，也欢迎把它分享给更多的朋友。</p><p></p>","neighbors":{"left":{"article_title":"21 | 原子类：无锁工具类的典范","id":90515},"right":{"article_title":"23 | Future：如何用多线程实现最优的“烧水泡茶”程序？","id":91292}},"comments":[{"had_liked":false,"id":88371,"user_name":"南琛一梦","can_delete":false,"product_type":"c1","uid":1030082,"ip_address":"","ucode":"6338D5428DB2B0","user_header":"https://static001.geekbang.org/account/avatar/00/0f/b7/c2/196932c7.jpg","comment_is_top":false,"comment_ctime":1555913341,"is_pvip":false,"replies":[{"id":"31749","content":"👍我觉得那些源码用的时候看一下就可以了，现在都是用开源项目，天天都得看源码，看源码能局部最优而已<br>","user_name":"作者回复","comment_id":88371,"uid":"1269969","ip_address":"","utype":1,"ctime":1555933317,"user_name_real":"王宝令"}],"discussion_count":6,"race_medal":0,"score":"529836890749","product_id":100023901,"comment_content":"回答下Lrwin和张天屹同学的问题：当线程池中无可用线程，且阻塞队列已满，那么此时就会触发拒绝策略。对于采用何种策略，具体要看执行的任务重要程度。如果是一些不重要任务，可以选择直接丢弃。但是如果为重要任务，可以采用降级处理，例如将任务信息插入数据库或者消息队列，启用一个专门用作补偿的线程池去进行补偿。所谓降级就是在服务无法正常提供功能的情况下，采取的补救措施。具体采用何种降级手段，这也是要看具体场景。技术的世界里没有一尘不变的方案。另外，看到很多同学都提到让老师多讲讲源码，其实我觉得真没必要，老师目前的思路起到提纲契领的作用，让我们有大的思路，有全局观，具体细节我觉得大家私下去研究更合适。小弟不才，可以加微信（SevenBlue）一起讨论。","like_count":124,"discussions":[{"author":{"id":1269969,"avatar":"https://static001.geekbang.org/account/avatar/00/13/60/d1/8efa89ab.jpg","nickname":"王宝令","note":"","ucode":"4FE19F5BC32FCA","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":447789,"discussion_content":"👍我觉得那些源码用的时候看一下就可以了，现在都是用开源项目，天天都得看源码，看源码能局部最优而已\n","likes_number":2,"is_delete":false,"is_hidden":false,"ctime":1555933317,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1217874,"avatar":"https://static001.geekbang.org/account/avatar/00/12/95/52/ad190682.jpg","nickname":"Mr wind","note":"","ucode":"484F02D1962239","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":138558,"discussion_content":"能举例在自定义拒绝策略的类中是如何将一些任务信息写入第三方吗？implements RejectedExecutionHandler是一个接口，重写后实现rejectedExecution(Runnable r, ThreadPoolExecutor executor)这个方法，我们得到的Runnable也只是个接口的引用，怎么获取到信息并写入有点迷糊，这儿是需要我们自定义Runnable，添加必要的信息字段，在写入第三方的时候序列化操作么？","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1579252678,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":2,"child_discussions":[{"author":{"id":1018928,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/8c/30/d642e01a.jpg","nickname":"zhengnachuan","note":"","ucode":"FC6CD65906BE6B","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1217874,"avatar":"https://static001.geekbang.org/account/avatar/00/12/95/52/ad190682.jpg","nickname":"Mr wind","note":"","ucode":"484F02D1962239","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":327126,"discussion_content":"我自己试过几种方式，想要在拒绝策略中拿到业务信息还得靠自己实现runnable","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1605751206,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":138558,"ip_address":""},"score":327126,"extra":""},{"author":{"id":1624355,"avatar":"https://static001.geekbang.org/account/avatar/00/18/c9/23/76511858.jpg","nickname":"洛奇","note":"","ucode":"662B4005721119","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1217874,"avatar":"https://static001.geekbang.org/account/avatar/00/12/95/52/ad190682.jpg","nickname":"Mr wind","note":"","ucode":"484F02D1962239","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":363699,"discussion_content":"是不是可以在handler里抛出一个异常，然后让调用线程池的线程捕获，有该线程执行降级策略。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1617265632,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":138558,"ip_address":""},"score":363699,"extra":""}]},{"author":{"id":2642899,"avatar":"https://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTLOWucpCLACCUR59wF1fPRMaJI3lUJAlFYo57ib6Maq0U9aweCuQQicAybjRYN1MeUZBQNW6LXFicyew/132","nickname":"Geek_92b8a3","note":"","ucode":"706EB1F2575FAA","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":562493,"discussion_content":"一直没有太明白，工作队列和最大线程数的关系？\n核心：10\n队列长度:50\n最大线程数：70\n线程池能能达到最大线程数吗？是不是队列长度要大于最大线程数，线程池中才可能达到最大线程数的设置？","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1649837214,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":1,"child_discussions":[{"author":{"id":1463936,"avatar":"https://static001.geekbang.org/account/avatar/00/16/56/80/39248b6c.jpg","nickname":"无足","note":"","ucode":"AD2DA115C4604A","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":2642899,"avatar":"https://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTLOWucpCLACCUR59wF1fPRMaJI3lUJAlFYo57ib6Maq0U9aweCuQQicAybjRYN1MeUZBQNW6LXFicyew/132","nickname":"Geek_92b8a3","note":"","ucode":"706EB1F2575FAA","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":566865,"discussion_content":"队列是正在等待被执行的任务，当所有核心线程用完之后，就开始排队，队列满了之后，就用新的线程（不能大于最大线程数），当最大线程都用完了，就可以拒绝新任务了\n","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1650782729,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":562493,"ip_address":""},"score":566865,"extra":""}]}]},{"had_liked":false,"id":90403,"user_name":"随风🐿","can_delete":false,"product_type":"c1","uid":1345968,"ip_address":"","ucode":"2D7A06E445E14B","user_header":"https://static001.geekbang.org/account/avatar/00/14/89/b0/988921fe.jpg","comment_is_top":false,"comment_ctime":1556510751,"is_pvip":false,"replies":[{"id":"32399","content":"建议不同类别的业务用不同的线程池，至于线程池的数量，各自计算各自的，然后去做压测。虽然你的系统有多个线程池，但是并不是所有的线程池里的线程都是忙碌的，你只需要针对有性能瓶颈的业务优化就可以了。","user_name":"作者回复","comment_id":90403,"uid":"1269969","ip_address":"","utype":1,"ctime":1556519261,"user_name_real":"王宝令"}],"discussion_count":8,"race_medal":0,"score":"379513632799","product_id":100023901,"comment_content":"老师，有个问题一直不是很明确，①一个项目中如果多个业务需要用到线程池，是定义一个公共的线程池比较好，还是按照业务定义各自不同的线程池？②如果定义一个公共的线程池那里面的线程数的理论值应该是按照老师前面章节讲的去计算吗？还是按照如果有多少个业务就分别去计算他们各自创建线程池线程数的加和?③如果不同的业务各自定义不同的线程池，那线程数的理论值也是按照前面的去计算吗？","like_count":88,"discussions":[{"author":{"id":1269969,"avatar":"https://static001.geekbang.org/account/avatar/00/13/60/d1/8efa89ab.jpg","nickname":"王宝令","note":"","ucode":"4FE19F5BC32FCA","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":448507,"discussion_content":"建议不同类别的业务用不同的线程池，至于线程池的数量，各自计算各自的，然后去做压测。虽然你的系统有多个线程池，但是并不是所有的线程池里的线程都是忙碌的，你只需要针对有性能瓶颈的业务优化就可以了。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1556519261,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1205697,"avatar":"https://static001.geekbang.org/account/avatar/00/12/65/c1/afcd981b.jpg","nickname":"程序员二师兄","note":"","ucode":"C9E3B5B3358BDF","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":298538,"discussion_content":"好问题🐂🍺","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1597321044,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1049017,"avatar":"https://static001.geekbang.org/account/avatar/00/10/01/b9/73435279.jpg","nickname":"学习学个屁","note":"","ucode":"DF2D61E6FB2FCE","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":572320,"discussion_content":"最好分开，不同处理场景指定的队列首先大小不一样，线程也不一样，都放一个pool处理，队列你设多大？再大也会满，然后被拒绝。这样会存在问题的。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1652708269,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1493907,"avatar":"https://static001.geekbang.org/account/avatar/00/16/cb/93/4adea49a.jpg","nickname":"努力努力再努力","note":"","ucode":"0C6EEA28FCE8C7","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":564570,"discussion_content":"mark , 多个线程池应该相互独立比较好","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1650281760,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1076100,"avatar":"https://static001.geekbang.org/account/avatar/00/10/6b/84/d1e6eac9.jpg","nickname":"sun","note":"","ucode":"0358B9288D4018","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":292457,"discussion_content":"在微服务系统中,每个子项目的业务功能偏向单一职责化,尤其是核心服务, 个人觉得这种情况下还是用公共线程池比较好","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1595231726,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":1,"child_discussions":[{"author":{"id":1507783,"avatar":"https://static001.geekbang.org/account/avatar/00/17/01/c7/549b5616.jpg","nickname":"夜涛","note":"","ucode":"672CC53663710B","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":1076100,"avatar":"https://static001.geekbang.org/account/avatar/00/10/6b/84/d1e6eac9.jpg","nickname":"sun","note":"","ucode":"0358B9288D4018","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":311446,"discussion_content":"每个微服务直接维护线程池好一点，公用的你是做成一个单独服务注册上去，还是做成jar包引入？","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1602339781,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":292457,"ip_address":""},"score":311446,"extra":""}]},{"author":{"id":1178818,"avatar":"https://static001.geekbang.org/account/avatar/00/11/fc/c2/74b75427.jpg","nickname":"提醒我学习","note":"","ucode":"673019FDDA4427","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":187725,"discussion_content":"问出了我想问的,一直有这个疑问 感谢","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1582766046,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1018620,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/8a/fc/d1dd57dd.jpg","nickname":"ipofss","note":"","ucode":"DE3061C9259F9E","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":36354,"discussion_content":"好问题，也很有实践意义","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1571367512,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":87265,"user_name":"undifined","can_delete":false,"product_type":"c1","uid":1068920,"ip_address":"","ucode":"449CB4CD2DC089","user_header":"https://static001.geekbang.org/account/avatar/00/10/4f/78/c3d8ecb0.jpg","comment_is_top":false,"comment_ctime":1555555413,"is_pvip":false,"discussion_count":4,"race_medal":0,"score":"379512677461","product_id":100023901,"comment_content":"思考题：<br>1. 给线程池设置名称前缀<br>ThreadPoolTaskExecutor threadPoolTaskExecutor = new ThreadPoolTaskExecutor();<br>threadPoolTaskExecutor.setThreadNamePrefix(&quot;CUSTOM_NAME_PREFIX&quot;);<br><br>2. 在ThreadFactory中自定义名称前缀<br>class CustomThreadFactory implements ThreadFactory {<br>        @Override<br>        public Thread newThread(Runnable r) {<br>            Thread thread = new Thread(&quot;CUSTOM_NAME_PREFIX&quot;);<br>            return thread;<br>        }<br>    }<br><br>ThreadPoolExecutor threadPoolExecutor = new ThreadPoolExecutor(10,<br>                100,<br>                120,<br>                TimeUnit.SECONDS,<br>                new LinkedBlockingQueue&lt;&gt;(),<br>                new CustomThreadFactory(),<br>                new ThreadPoolExecutor.AbortPolicy()<br>        );<br>","like_count":88,"discussions":[{"author":{"id":1183903,"avatar":"https://static001.geekbang.org/account/avatar/00/12/10/9f/40a9a568.jpg","nickname":"JamesZhou","note":"","ucode":"62EE75F53718BE","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":135324,"discussion_content":"第一种 Spring 中提供的，没毛病，也推荐使用；\n第二种这么设置每个线程名字就是一样的，应该再加个自增的数值，用 AtomicInteger的getAndIncrement方法如何？","likes_number":6,"is_delete":false,"is_hidden":false,"ctime":1579086323,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1635517,"avatar":"https://static001.geekbang.org/account/avatar/00/18/f4/bd/8d6b3098.jpg","nickname":"海东","note":"","ucode":"69F48B3151BDCB","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":278813,"discussion_content":"Thread thread = new Thread(&#34;CUSTOM_NAME_PREFIX&#34;);这里没问题吗，没有把Runnable 作为入参","likes_number":2,"is_delete":false,"is_hidden":false,"ctime":1591237650,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":1,"child_discussions":[{"author":{"id":1810156,"avatar":"","nickname":"poordickey","note":"","ucode":"2A436EC813AF97","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1635517,"avatar":"https://static001.geekbang.org/account/avatar/00/18/f4/bd/8d6b3098.jpg","nickname":"海东","note":"","ucode":"69F48B3151BDCB","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":338053,"discussion_content":"无所谓吧","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1609161551,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":278813,"ip_address":""},"score":338053,"extra":""}]},{"author":{"id":1565085,"avatar":"https://static001.geekbang.org/account/avatar/00/17/e1/9d/3ec0adec.jpg","nickname":"喃寻","note":"","ucode":"E31B3660726671","race_medal":1,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":341599,"discussion_content":"一般情况下使用第一种的场景比较多,第二种确实会造成所有线程名称相同","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1610459819,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":87354,"user_name":"木卫六","can_delete":false,"product_type":"c1","uid":1199495,"ip_address":"","ucode":"D113DF578C5BF5","user_header":"https://static001.geekbang.org/account/avatar/00/12/4d/87/57236a2d.jpg","comment_is_top":false,"comment_ctime":1555575037,"is_pvip":true,"replies":[{"id":"31419","content":"👍<br>","user_name":"作者回复","comment_id":87354,"uid":"1269969","ip_address":"","utype":1,"ctime":1555594159,"user_name_real":"王宝令"}],"discussion_count":2,"race_medal":0,"score":"177649234173","product_id":100023901,"comment_content":"guava的ThreadFactoryBuilder.setNameFormat可以指定一个前缀，使用%d表示序号；<br>或者自己实现ThreadFactory并制定给线程池，在实现的ThreadFactory中设定计数和调用Thread.setName","like_count":41,"discussions":[{"author":{"id":1269969,"avatar":"https://static001.geekbang.org/account/avatar/00/13/60/d1/8efa89ab.jpg","nickname":"王宝令","note":"","ucode":"4FE19F5BC32FCA","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":447414,"discussion_content":"👍\n","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1555594159,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1111870,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTK2Az5uTh9ZGVA7yQCj1BXtXuicPRkvJicA97AoN9xX3bnPcUYglTMXJeZeoVbPQeJA7ICvQhR3KQ0w/132","nickname":"日不落帝国","note":"","ucode":"6A11ABBD8AC438","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":6497,"discussion_content":"赞，学习了","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1566921878,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":87175,"user_name":"张天屹","can_delete":false,"product_type":"c1","uid":1477612,"ip_address":"","ucode":"8BD6BD6DCF0F4F","user_header":"https://static001.geekbang.org/account/avatar/00/16/8b/ec/dc03f5ad.jpg","comment_is_top":false,"comment_ctime":1555543700,"is_pvip":false,"replies":[{"id":"32451","content":"可以放数据库，放mq,redis，本地文件都可以，具体要看实际需求<br>","user_name":"作者回复","comment_id":87175,"uid":"1269969","ip_address":"","utype":1,"ctime":1556591354,"user_name_real":"王宝令"}],"discussion_count":5,"race_medal":0,"score":"138994497172","product_id":100023901,"comment_content":"老师你好，使用有界队列虽然避免了OOM  但是如果请求量太大，我又不想丢弃和异常的情况下一般怎么实践呢。我对降级这一块没经验，我能直观想到的就是存放在缓存，如果缓存内存也不够了就只能持久化了","like_count":32,"discussions":[{"author":{"id":1269969,"avatar":"https://static001.geekbang.org/account/avatar/00/13/60/d1/8efa89ab.jpg","nickname":"王宝令","note":"","ucode":"4FE19F5BC32FCA","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":447334,"discussion_content":"可以放数据库，放mq,redis，本地文件都可以，具体要看实际需求\n","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1556591354,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1049017,"avatar":"https://static001.geekbang.org/account/avatar/00/10/01/b9/73435279.jpg","nickname":"学习学个屁","note":"","ucode":"DF2D61E6FB2FCE","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":572325,"discussion_content":"还可以多个策略，如果被拒绝了，试试别的，如果还不行再丢弃。，譬如tomcat里就是这么处理的。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1652708721,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1049017,"avatar":"https://static001.geekbang.org/account/avatar/00/10/01/b9/73435279.jpg","nickname":"学习学个屁","note":"","ucode":"DF2D61E6FB2FCE","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":572324,"discussion_content":"还可以多个策略，如果被拒绝了，试试别的，如果还不行再丢弃。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1652708702,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":2018082,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/2jNKZqm7nMEso2sMYrO5kytfb2gIu8UBthJNJtcKZQOvkfNahMzmKApa7ZhH3nyA9oOMB0yHVPM1RjYDCaFBicw/132","nickname":"高内聚","note":"","ucode":"CD7F3C7A2E491F","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":410291,"discussion_content":"自定义拒绝策略  多余的任务存储在缓存或者持久化了","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1635651968,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1818343,"avatar":"","nickname":"刘同青","note":"","ucode":"84B62DF8BC61FB","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":281037,"discussion_content":"mark","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1591664996,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":88019,"user_name":"曾轼麟","can_delete":false,"product_type":"c1","uid":1451391,"ip_address":"","ucode":"D418371AC11270","user_header":"https://static001.geekbang.org/account/avatar/00/16/25/7f/473d5a77.jpg","comment_is_top":false,"comment_ctime":1555815641,"is_pvip":false,"replies":[{"id":"32302","content":"👍","user_name":"作者回复","comment_id":88019,"uid":"1269969","ip_address":"","utype":1,"ctime":1556428761,"user_name_real":"王宝令"}],"discussion_count":2,"race_medal":0,"score":"104635030745","product_id":100023901,"comment_content":"public class ReNameThreadFactory implements ThreadFactory {<br>    &#47;**<br>     * 线程池编号（static修饰）(容器里面所有线程池的数量)<br>     *&#47;<br>    private static final AtomicInteger POOLNUMBER = new AtomicInteger(1);<br><br>    &#47;**<br>     * 线程编号(当前线程池线程的数量)<br>     *&#47;<br>    private final AtomicInteger threadNumber = new AtomicInteger(1);<br><br>    &#47;**<br>     * 线程组<br>     *&#47;<br>    private final ThreadGroup group;<br><br>    &#47;**<br>     * 业务名称前缀<br>     *&#47;<br>    private final String namePrefix;<br><br><br>    &#47;**<br>     * 重写线程名称（获取线程池编号，线程编号，线程组）<br>     *<br>     * @param prefix 你需要指定的业务名称<br>     *&#47;<br>    public ReNameThreadFactory(@NonNull String prefix) {<br>        SecurityManager s = System.getSecurityManager();<br>        group = (s != null) ? s.getThreadGroup() :<br>                Thread.currentThread().getThreadGroup();<br>        &#47;&#47;组装线程前缀<br>        namePrefix = prefix + &quot;-poolNumber:&quot; + POOLNUMBER.getAndIncrement() + &quot;-threadNumber:&quot;;<br>    }<br><br><br>    @Override<br>    public Thread newThread(Runnable r) {<br>        Thread t = new Thread(group, r,<br>                &#47;&#47;方便dump的时候排查（重写线程名称）<br>                namePrefix + threadNumber.getAndIncrement(),<br>                0);<br>        if (t.isDaemon()) {<br>            t.setDaemon(false);<br>        }<br>        if (t.getPriority() != Thread.NORM_PRIORITY) {<br>            t.setPriority(Thread.NORM_PRIORITY);<br>        }<br>        return t;<br>    }<br>}","like_count":24,"discussions":[{"author":{"id":1269969,"avatar":"https://static001.geekbang.org/account/avatar/00/13/60/d1/8efa89ab.jpg","nickname":"王宝令","note":"","ucode":"4FE19F5BC32FCA","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":447682,"discussion_content":"👍","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1556428761,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1441900,"avatar":"https://static001.geekbang.org/account/avatar/00/16/00/6c/fd4d6399.jpg","nickname":"Dev","note":"","ucode":"D065E2FC4D6A6D","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":296828,"discussion_content":"收藏了","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1596678307,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":88243,"user_name":"Red Cape","can_delete":false,"product_type":"c1","uid":1245056,"ip_address":"","ucode":"12B69514E3EE11","user_header":"https://static001.geekbang.org/account/avatar/00/12/ff/80/382e46b6.jpg","comment_is_top":false,"comment_ctime":1555900055,"is_pvip":false,"replies":[{"id":"31765","content":"看场景，拍脑门","user_name":"作者回复","comment_id":88243,"uid":"1269969","ip_address":"","utype":1,"ctime":1555946194,"user_name_real":"王宝令"}],"discussion_count":6,"race_medal":0,"score":"100340147863","product_id":100023901,"comment_content":"请问老师，有界队列的长度怎么确定呢","like_count":23,"discussions":[{"author":{"id":1269969,"avatar":"https://static001.geekbang.org/account/avatar/00/13/60/d1/8efa89ab.jpg","nickname":"王宝令","note":"","ucode":"4FE19F5BC32FCA","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":447779,"discussion_content":"看场景，拍脑门","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1555946194,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1507783,"avatar":"https://static001.geekbang.org/account/avatar/00/17/01/c7/549b5616.jpg","nickname":"夜涛","note":"","ucode":"672CC53663710B","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":311447,"discussion_content":"先压测，然后再线上多跑几次，出几次生产事故就解决了","likes_number":6,"is_delete":false,"is_hidden":false,"ctime":1602339871,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":1,"child_discussions":[{"author":{"id":1270611,"avatar":"https://static001.geekbang.org/account/avatar/00/13/63/53/74e2efc9.jpg","nickname":"luolin","note":"","ucode":"45FA0B79628D50","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1507783,"avatar":"https://static001.geekbang.org/account/avatar/00/17/01/c7/549b5616.jpg","nickname":"夜涛","note":"","ucode":"672CC53663710B","race_medal":0,"user_type":1,"is_pvip":true},"discussion":{"id":373410,"discussion_content":"哈哈","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1620720642,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":311447,"ip_address":""},"score":373410,"extra":""}]},{"author":{"id":1134495,"avatar":"https://static001.geekbang.org/account/avatar/00/11/4f/9f/08b9eadf.jpg","nickname":"见贤思齐","note":"","ucode":"A5F586D8205745","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":287567,"discussion_content":"实在！","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1593483291,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":2018082,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/2jNKZqm7nMEso2sMYrO5kytfb2gIu8UBthJNJtcKZQOvkfNahMzmKApa7ZhH3nyA9oOMB0yHVPM1RjYDCaFBicw/132","nickname":"高内聚","note":"","ucode":"CD7F3C7A2E491F","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":410292,"discussion_content":"拍脑门可太真实了","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1635651991,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1488601,"avatar":"https://static001.geekbang.org/account/avatar/00/16/b6/d9/4d8a4d4c.jpg","nickname":"红豆成香","note":"","ucode":"FB8FBB639B4BA6","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":373439,"discussion_content":"我拍了一下自己的脑门","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1620727848,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":87425,"user_name":"海鸿","can_delete":false,"product_type":"c1","uid":1104275,"ip_address":"","ucode":"7074EF94EA70AD","user_header":"https://static001.geekbang.org/account/avatar/00/10/d9/93/098e5ef5.jpg","comment_is_top":false,"comment_ctime":1555591898,"is_pvip":false,"replies":[{"id":"31547","content":"👍","user_name":"作者回复","comment_id":87425,"uid":"1269969","ip_address":"","utype":1,"ctime":1555675502,"user_name_real":"王宝令"}],"discussion_count":1,"race_medal":0,"score":"87454937818","product_id":100023901,"comment_content":"1.利用guava的ThreadFactoryBuilder<br>2.自己实现ThreadFactory","like_count":20,"discussions":[{"author":{"id":1269969,"avatar":"https://static001.geekbang.org/account/avatar/00/13/60/d1/8efa89ab.jpg","nickname":"王宝令","note":"","ucode":"4FE19F5BC32FCA","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":447440,"discussion_content":"👍","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1555675502,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":159238,"user_name":"Uncle Drew","can_delete":false,"product_type":"c1","uid":1737799,"ip_address":"","ucode":"2ACC4015A19A0A","user_header":"https://static001.geekbang.org/account/avatar/00/1a/84/47/1b8b376e.jpg","comment_is_top":false,"comment_ctime":1575590458,"is_pvip":false,"replies":[{"id":"60969","content":"可以把所有任务先存入数据库，处理完一条就在数据库里删除一条。单纯依赖单机的内存是无法解决的。","user_name":"作者回复","comment_id":159238,"uid":"1269969","ip_address":"","utype":1,"ctime":1575683884,"user_name_real":"王宝令"}],"discussion_count":4,"race_medal":0,"score":"83179969082","product_id":100023901,"comment_content":"老师请教一下，如果线上系统宕机了，线程池中的阻塞队列怎么处理才能保证任务不丢失","like_count":19,"discussions":[{"author":{"id":1269969,"avatar":"https://static001.geekbang.org/account/avatar/00/13/60/d1/8efa89ab.jpg","nickname":"王宝令","note":"","ucode":"4FE19F5BC32FCA","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":476991,"discussion_content":"可以把所有任务先存入数据库，处理完一条就在数据库里删除一条。单纯依赖单机的内存是无法解决的。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1575683884,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1079495,"avatar":"https://static001.geekbang.org/account/avatar/00/10/78/c7/083a3a0b.jpg","nickname":"新世界","note":"","ucode":"4473DC1505F158","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":548798,"discussion_content":"既然放到线程池里面就支持异步，一般没有处理完，系统重启后，应该自动去扫描未处理的数据去处理作为补偿","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1643373291,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1481811,"avatar":"https://static001.geekbang.org/account/avatar/00/16/9c/53/ade0afb0.jpg","nickname":"ub8","note":"","ucode":"0D937C3EAEB781","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":391202,"discussion_content":"额","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1630331281,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1818343,"avatar":"","nickname":"刘同青","note":"","ucode":"84B62DF8BC61FB","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":281036,"discussion_content":"mark","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1591664950,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":88473,"user_name":"多襄丸","can_delete":false,"product_type":"c1","uid":1074310,"ip_address":"","ucode":"1AA1497C5A293C","user_header":"https://static001.geekbang.org/account/avatar/00/10/64/86/f5a9403a.jpg","comment_is_top":false,"comment_ctime":1555926678,"is_pvip":false,"replies":[{"id":"31756","content":"是的<br>","user_name":"作者回复","comment_id":88473,"uid":"1269969","ip_address":"","utype":1,"ctime":1555940909,"user_name_real":"王宝令"}],"discussion_count":1,"race_medal":0,"score":"65980436118","product_id":100023901,"comment_content":"老师，有一个问题想问一下:<br><br>如果corePoolSize为10，maxinumPoolSize为20，而此时线程池中有15个线程在运行，过了一段时间后，其中有3个线程处于等待状态的时间超过keepAliveTime指定的时间，则结束这3个线程，此时线程池中则还有12个线程正在运行；若有六个线程处于等待状态的时间超过keepAliveTime指定的时间，则只会结束5个线程，此时线程池中则还有10个线程，即核心线程数。<br><br>是这样吗？","like_count":15,"discussions":[{"author":{"id":1269969,"avatar":"https://static001.geekbang.org/account/avatar/00/13/60/d1/8efa89ab.jpg","nickname":"王宝令","note":"","ucode":"4FE19F5BC32FCA","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":447808,"discussion_content":"是的\n","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1555940909,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":87254,"user_name":"君哥聊技术","can_delete":false,"product_type":"c1","uid":1325816,"ip_address":"","ucode":"2C9A22BCE4C79E","user_header":"https://static001.geekbang.org/account/avatar/00/14/3a/f8/c1a939e7.jpg","comment_is_top":false,"comment_ctime":1555553015,"is_pvip":false,"replies":[{"id":"31414","content":"一般都全局，如果需要优雅退出就需要shutdown。不关闭，会有coresize个线程一直回收不了。 ","user_name":"作者回复","comment_id":87254,"uid":"1269969","ip_address":"","utype":1,"ctime":1555587151,"user_name_real":"王宝令"}],"discussion_count":1,"race_medal":0,"score":"57390127863","product_id":100023901,"comment_content":"我们项目中用了guava的new ThreadFactoryBuilder().setNameFormat()<br><br>老师，请教个问题，在工程中，线程池的定义一般是在全局还是局部呢？如果全局的话，是不用shutdown吗？不关闭线程池有没有问题呢？","like_count":13,"discussions":[{"author":{"id":1269969,"avatar":"https://static001.geekbang.org/account/avatar/00/13/60/d1/8efa89ab.jpg","nickname":"王宝令","note":"","ucode":"4FE19F5BC32FCA","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":447368,"discussion_content":"一般都全局，如果需要优雅退出就需要shutdown。不关闭，会有coresize个线程一直回收不了。 ","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1555587151,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":87213,"user_name":"任大鹏","can_delete":false,"product_type":"c1","uid":1069049,"ip_address":"","ucode":"75D14B0FC68DA5","user_header":"https://static001.geekbang.org/account/avatar/00/10/4f/f9/1f0a9665.jpg","comment_is_top":false,"comment_ctime":1555549091,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"57390123939","product_id":100023901,"comment_content":"老师的文中已经给出了一个答案：<br>threadFactory：通过这个参数你可以自定义如何创建线程，例如你可以给线程指定一个有意义的名字。","like_count":13},{"had_liked":false,"id":87632,"user_name":"晓杰","can_delete":false,"product_type":"c1","uid":1441546,"ip_address":"","ucode":"1174C88EEBF8A6","user_header":"https://static001.geekbang.org/account/avatar/00/15/ff/0a/12faa44e.jpg","comment_is_top":false,"comment_ctime":1555644892,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"44505317852","product_id":100023901,"comment_content":"希望老师把线程异常处理这块可以再深入讲一讲","like_count":10},{"had_liked":false,"id":87166,"user_name":"郑晨Cc","can_delete":false,"product_type":"c1","uid":1324942,"ip_address":"","ucode":"57146E444D6329","user_header":"https://static001.geekbang.org/account/avatar/00/14/37/8e/cf0b4575.jpg","comment_is_top":false,"comment_ctime":1555523504,"is_pvip":false,"replies":[{"id":"32450","content":"👍<br>","user_name":"作者回复","comment_id":87166,"uid":"1269969","ip_address":"","utype":1,"ctime":1556591261,"user_name_real":"王宝令"}],"discussion_count":2,"race_medal":0,"score":"40210229168","product_id":100023901,"comment_content":"可参照SDK中的 DefaultThreadFactory 自定义DYIThreadFactory<br>static class DIYThreadFactory implements ThreadFactory {<br>        private static final AtomicInteger poolNumber = new AtomicInteger(1);<br>        private final ThreadGroup group;<br>        private final AtomicInteger threadNumber = new AtomicInteger(1);<br>        private final String namePrefix;<br><br>        DIYThreadFactory(String diyName) {<br>            SecurityManager s = System.getSecurityManager();<br>            group = (s != null) ? s.getThreadGroup() :<br>                                  Thread.currentThread().getThreadGroup();<br>            namePrefix = diyName +<br>                         &quot;-thread-&quot;;<br>        }<br><br>        public Thread newThread(Runnable r) {<br>            Thread t = new Thread(group, r,<br>                                  namePrefix + threadNumber.getAndIncrement(),<br>                                  0);<br>            if (t.isDaemon())<br>                t.setDaemon(false);<br>            if (t.getPriority() != Thread.NORM_PRIORITY)<br>                t.setPriority(Thread.NORM_PRIORITY);<br>            return t;<br>        }<br>    }<br>\t<br>\tExecutorService executor = Executors.newFixedThreadPool(4,new DIYThreadFactory(&quot;xxx&quot;));","like_count":9,"discussions":[{"author":{"id":1269969,"avatar":"https://static001.geekbang.org/account/avatar/00/13/60/d1/8efa89ab.jpg","nickname":"王宝令","note":"","ucode":"4FE19F5BC32FCA","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":447331,"discussion_content":"👍\n","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1556591261,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1441900,"avatar":"https://static001.geekbang.org/account/avatar/00/16/00/6c/fd4d6399.jpg","nickname":"Dev","note":"","ucode":"D065E2FC4D6A6D","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":296829,"discussion_content":"这是什么sdk？","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1596678348,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":239549,"user_name":"大胖子呀、","can_delete":false,"product_type":"c1","uid":1258251,"ip_address":"","ucode":"4BADF8096254BE","user_header":"https://static001.geekbang.org/account/avatar/00/13/33/0b/fd18c8ab.jpg","comment_is_top":false,"comment_ctime":1596585506,"is_pvip":false,"replies":[{"id":"88528","content":"事务不能跨线程","user_name":"作者回复","comment_id":239549,"uid":"1269969","ip_address":"","utype":1,"ctime":1596633401,"user_name_real":"王宝令"}],"discussion_count":2,"race_medal":0,"score":"31661356578","product_id":100023901,"comment_content":"请教一下大家，线程池执行数据更新任务，还能简单的使用事务注解来回滚事务吗？","like_count":7,"discussions":[{"author":{"id":1269969,"avatar":"https://static001.geekbang.org/account/avatar/00/13/60/d1/8efa89ab.jpg","nickname":"王宝令","note":"","ucode":"4FE19F5BC32FCA","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":503135,"discussion_content":"事务不能跨线程","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1596633401,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1079495,"avatar":"https://static001.geekbang.org/account/avatar/00/10/78/c7/083a3a0b.jpg","nickname":"新世界","note":"","ucode":"4473DC1505F158","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":548800,"discussion_content":"事务的连接connection是绑定线程的，是线程的threadLocal变量，所以不能跨线程","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1643373707,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":105243,"user_name":"linqw","can_delete":false,"product_type":"c1","uid":1134138,"ip_address":"","ucode":"09DCFE98C54DD8","user_header":"https://static001.geekbang.org/account/avatar/00/11/4e/3a/86196508.jpg","comment_is_top":false,"comment_ctime":1560944508,"is_pvip":false,"replies":[{"id":"38122","content":"👍","user_name":"作者回复","comment_id":105243,"uid":"1269969","ip_address":"","utype":1,"ctime":1560989491,"user_name_real":"王宝令"}],"discussion_count":1,"race_medal":0,"score":"31625715580","product_id":100023901,"comment_content":"最近打算分析下Executor系列源码，先分析了下FutureTask源码，https:&#47;&#47;juejin.im&#47;post&#47;5d08be8ce51d455d6c0ad925，老师有空帮忙看下哦","like_count":7,"discussions":[{"author":{"id":1269969,"avatar":"https://static001.geekbang.org/account/avatar/00/13/60/d1/8efa89ab.jpg","nickname":"王宝令","note":"","ucode":"4FE19F5BC32FCA","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":454605,"discussion_content":"👍","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1560989491,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":87260,"user_name":"magict4","can_delete":false,"product_type":"c1","uid":1043789,"ip_address":"","ucode":"CB6F063D881AAC","user_header":"https://static001.geekbang.org/account/avatar/00/0f/ed/4d/1d1a1a00.jpg","comment_is_top":false,"comment_ctime":1555553898,"is_pvip":false,"replies":[{"id":"31550","content":"我也没用其他的<br>","user_name":"作者回复","comment_id":87260,"uid":"1269969","ip_address":"","utype":1,"ctime":1555675795,"user_name_real":"王宝令"}],"discussion_count":1,"race_medal":0,"score":"18735423082","product_id":100023901,"comment_content":"老师您好，请问有什么推荐的替代 Executors 的方案吗？","like_count":4,"discussions":[{"author":{"id":1269969,"avatar":"https://static001.geekbang.org/account/avatar/00/13/60/d1/8efa89ab.jpg","nickname":"王宝令","note":"","ucode":"4FE19F5BC32FCA","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":447371,"discussion_content":"我也没用其他的\n","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1555675795,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":106105,"user_name":"崛起的小强","can_delete":false,"product_type":"c1","uid":1008717,"ip_address":"","ucode":"BCDF6F1A0FB055","user_header":"","comment_is_top":false,"comment_ctime":1561175490,"is_pvip":false,"replies":[{"id":"38360","content":"建议根据实际情况创建多个，这样隔离性会好一些","user_name":"作者回复","comment_id":106105,"uid":"1269969","ip_address":"","utype":1,"ctime":1561186444,"user_name_real":"王宝令"}],"discussion_count":1,"race_medal":0,"score":"14446077378","product_id":100023901,"comment_content":"老师有个问题请教下您。我们一个项目包含若干个业务模块，其中好几个模块都会用到线程池，那使用的时候只创建一个线程池好还是根据项目模块创建多个不同的线程池呢？各个模块的任务也都是各不相同的，有cpu密集型的，有io密集型的，还有rpc调用耗时较长的任务。","like_count":3,"discussions":[{"author":{"id":1269969,"avatar":"https://static001.geekbang.org/account/avatar/00/13/60/d1/8efa89ab.jpg","nickname":"王宝令","note":"","ucode":"4FE19F5BC32FCA","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":454951,"discussion_content":"建议根据实际情况创建多个，这样隔离性会好一些","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1561186444,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":91352,"user_name":"随风而逝","can_delete":false,"product_type":"c1","uid":1447169,"ip_address":"","ucode":"4E4D46905697AB","user_header":"https://static001.geekbang.org/account/avatar/00/16/15/01/927d96e5.jpg","comment_is_top":false,"comment_ctime":1557010813,"is_pvip":false,"replies":[{"id":"34446","content":"不一样，线程池简单多了","user_name":"作者回复","comment_id":91352,"uid":"1269969","ip_address":"","utype":1,"ctime":1558359429,"user_name_real":"王宝令"}],"discussion_count":1,"race_medal":0,"score":"14441912701","product_id":100023901,"comment_content":"老师，这里的线程池，和Disruptor是一样的吗？","like_count":3,"discussions":[{"author":{"id":1269969,"avatar":"https://static001.geekbang.org/account/avatar/00/13/60/d1/8efa89ab.jpg","nickname":"王宝令","note":"","ucode":"4FE19F5BC32FCA","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":448896,"discussion_content":"不一样，线程池简单多了","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1558359429,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":87149,"user_name":"西西弗与卡夫卡","can_delete":false,"product_type":"c1","uid":1001710,"ip_address":"","ucode":"B4C27B8335B76A","user_header":"https://static001.geekbang.org/account/avatar/00/0f/48/ee/872ad07e.jpg","comment_is_top":false,"comment_ctime":1555517793,"is_pvip":true,"discussion_count":0,"race_medal":0,"score":"14440419681","product_id":100023901,"comment_content":"线程命名常用方法是：线程的构造函数传入名字，或者调用setName设置","like_count":3},{"had_liked":false,"id":309782,"user_name":"ub8","can_delete":false,"product_type":"c1","uid":1481811,"ip_address":"","ucode":"0D937C3EAEB781","user_header":"https://static001.geekbang.org/account/avatar/00/16/9c/53/ade0afb0.jpg","comment_is_top":false,"comment_ctime":1630331007,"is_pvip":false,"replies":[{"id":"113118","content":"会丢，常用的做法是将请求同步写入数据库，然后把请求丢到线程池，处理的时候注意要防重，数据库可以用类似本地文件数据库，如果对高可用要求很高就用集中式的数据库集群。要看场景，不是所有场景都对任务未执行敏感。","user_name":"作者回复","user_name_real":"王宝令","uid":"1269969","ctime":1631664089,"ip_address":"","comment_id":309782,"utype":1}],"discussion_count":2,"race_medal":0,"score":"10220265599","product_id":100023901,"comment_content":"老师您好，在我们使用线程池时候，如果队列中还有任务未执行，此时重启了服务，那队列中的任务是否会丢。像这样的场景线程池配置的策略应该是什么样的呢","like_count":2,"discussions":[{"author":{"id":1269969,"avatar":"https://static001.geekbang.org/account/avatar/00/13/60/d1/8efa89ab.jpg","nickname":"王宝令","note":"","ucode":"4FE19F5BC32FCA","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":526014,"discussion_content":"会丢，常用的做法是将请求同步写入数据库，然后把请求丢到线程池，处理的时候注意要防重，数据库可以用类似本地文件数据库，如果对高可用要求很高就用集中式的数据库集群。要看场景，不是所有场景都对任务未执行敏感。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1631664089,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1879290,"avatar":"https://static001.geekbang.org/account/avatar/00/1c/ac/fa/a32099e7.jpg","nickname":"Curiosity","note":"","ucode":"A6732CAE6CBE8E","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":582887,"discussion_content":"如果放数据库的话，那接口的瓶颈就是数据库了，这样就不如接入消息队列来解决了吧。求指教","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1659755769,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":"北京"},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":87712,"user_name":"密码123456","can_delete":false,"product_type":"c1","uid":1126593,"ip_address":"","ucode":"9889463CC0EA71","user_header":"https://static001.geekbang.org/account/avatar/00/11/30/c1/2dde6700.jpg","comment_is_top":false,"comment_ctime":1555667171,"is_pvip":false,"discussion_count":1,"race_medal":0,"score":"10145601763","product_id":100023901,"comment_content":"有个问题，不能理解。既然execute使用newfixedthreadpool设置固定的线程池。在实际使用execute执行并发任务，cpu利用率会过高。按照道理说，只有开始的时候，线程会创建消耗资源。在创建之后都不会消耗资源才对啊？","like_count":2,"discussions":[{"author":{"id":1022091,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/98/8b/7a691d53.jpg","nickname":"HungerW","note":"","ucode":"75689EDF0F8E7F","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":215363,"discussion_content":"也许是任务耗CPU。如果每个任务耗20%，5个任务就100%了。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1585318805,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":87556,"user_name":"新世界","can_delete":false,"product_type":"c1","uid":1079495,"ip_address":"","ucode":"4473DC1505F158","user_header":"https://static001.geekbang.org/account/avatar/00/10/78/c7/083a3a0b.jpg","comment_is_top":false,"comment_ctime":1555635258,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"10145569850","product_id":100023901,"comment_content":"拒绝策略中降级，或者缓存到队列中，再后期执行重放，这些都可以，降级是不是直接返回稍后重试等","like_count":2},{"had_liked":false,"id":236002,"user_name":"VIC","can_delete":false,"product_type":"c1","uid":1114064,"ip_address":"","ucode":"3B3E6D344488B2","user_header":"https://static001.geekbang.org/account/avatar/00/10/ff/d0/402be1e9.jpg","comment_is_top":false,"comment_ctime":1595288367,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"5890255663","product_id":100023901,"comment_content":"线程池关闭了，下次怎么用？","like_count":1},{"had_liked":false,"id":214635,"user_name":"见南山","can_delete":false,"product_type":"c1","uid":1118111,"ip_address":"","ucode":"6A8BB82B7573CA","user_header":"https://static001.geekbang.org/account/avatar/00/11/0f/9f/f4b06bd5.jpg","comment_is_top":false,"comment_ctime":1588775631,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"5883742927","product_id":100023901,"comment_content":"利用ThreadFactoryBuilder或者直接实现ThreadFactory","like_count":1},{"had_liked":false,"id":174921,"user_name":"三年过后","can_delete":false,"product_type":"c1","uid":1283157,"ip_address":"","ucode":"5E9106C5F11BED","user_header":"https://static001.geekbang.org/account/avatar/00/13/94/55/afc64956.jpg","comment_is_top":false,"comment_ctime":1580458541,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"5875425837","product_id":100023901,"comment_content":"参考JDK 源码：DefaultThreadFactory","like_count":1},{"had_liked":false,"id":168553,"user_name":"Monday","can_delete":false,"product_type":"c1","uid":1250907,"ip_address":"","ucode":"77B9BACC783598","user_header":"https://static001.geekbang.org/account/avatar/00/13/16/5b/83a35681.jpg","comment_is_top":false,"comment_ctime":1578109707,"is_pvip":false,"discussion_count":1,"race_medal":0,"score":"5873077003","product_id":100023901,"comment_content":"老师和同学们好，<br>自定义拒绝策略中默认实现方法的是runnable对象和线程池两个参数，<br>1、为什么不把submit进去的对象直接返回到拒绝策略？<br>2、有没有优雅的方式获取拒绝任务中的业务数据，目前只能通过反射的方式来获取","like_count":1,"discussions":[{"author":{"id":1018928,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/8c/30/d642e01a.jpg","nickname":"zhengnachuan","note":"","ucode":"FC6CD65906BE6B","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":327127,"discussion_content":"自己实现runnable，定义一个public的补偿方法，在拒绝策略中调用","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1605751325,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":125901,"user_name":"程文","can_delete":false,"product_type":"c1","uid":1353782,"ip_address":"","ucode":"5BB1CA6F63C75C","user_header":"","comment_is_top":false,"comment_ctime":1566270227,"is_pvip":false,"replies":[{"id":"46478","content":"有必要","user_name":"作者回复","user_name_real":"王宝令","uid":"1269969","ctime":1566313112,"ip_address":"","comment_id":125901,"utype":1}],"discussion_count":2,"race_medal":0,"score":"5861237523","product_id":100023901,"comment_content":"老师，线程池创建之后是否有必要关闭","like_count":1,"discussions":[{"author":{"id":1269969,"avatar":"https://static001.geekbang.org/account/avatar/00/13/60/d1/8efa89ab.jpg","nickname":"王宝令","note":"","ucode":"4FE19F5BC32FCA","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":463740,"discussion_content":"有必要","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1566313112,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1484192,"avatar":"https://static001.geekbang.org/account/avatar/00/16/a5/a0/e0cccf7e.jpg","nickname":"圆圆满满","note":"","ucode":"396E7A822014D1","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":293680,"discussion_content":"如果是全局的，是不是可以不关闭？","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1595641925,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":104394,"user_name":"张洋","can_delete":false,"product_type":"c1","uid":1182914,"ip_address":"","ucode":"549BE5DEEF8417","user_header":"https://static001.geekbang.org/account/avatar/00/12/0c/c2/bad34a50.jpg","comment_is_top":false,"comment_ctime":1560742929,"is_pvip":true,"replies":[{"id":"53892","content":"这往往不是线程迟自己能搞定的，需要配合其他手段记录状态，后期再补偿处理","user_name":"作者回复","user_name_real":"王宝令","uid":"1269969","ctime":1570708933,"ip_address":"","comment_id":104394,"utype":1}],"discussion_count":1,"race_medal":0,"score":"5855710225","product_id":100023901,"comment_content":"老师，我如果要对线程池进行异常处理比如异步任务异常，发送email这种。需要怎么对线程池进行异常的处理呢，线程池提交任务的时候现在代码中都是 submit()进行提交的。<br>","like_count":1,"discussions":[{"author":{"id":1269969,"avatar":"https://static001.geekbang.org/account/avatar/00/13/60/d1/8efa89ab.jpg","nickname":"王宝令","note":"","ucode":"4FE19F5BC32FCA","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":454254,"discussion_content":"这往往不是线程迟自己能搞定的，需要配合其他手段记录状态，后期再补偿处理","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1570708933,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":87623,"user_name":"晓杰","can_delete":false,"product_type":"c1","uid":1441546,"ip_address":"","ucode":"1174C88EEBF8A6","user_header":"https://static001.geekbang.org/account/avatar/00/15/ff/0a/12faa44e.jpg","comment_is_top":false,"comment_ctime":1555643826,"is_pvip":false,"replies":[{"id":"31545","content":"是的","user_name":"作者回复","user_name_real":"王宝令","uid":"1269969","ctime":1555675363,"ip_address":"","comment_id":87623,"utype":1}],"discussion_count":1,"race_medal":0,"score":"5850611122","product_id":100023901,"comment_content":"请问老师linkedBlockQueue默认是无界的，那如果构造函数带上初始容量是不是变成有界的","like_count":1,"discussions":[{"author":{"id":1269969,"avatar":"https://static001.geekbang.org/account/avatar/00/13/60/d1/8efa89ab.jpg","nickname":"王宝令","note":"","ucode":"4FE19F5BC32FCA","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":447535,"discussion_content":"是的","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1555675363,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":87206,"user_name":"Lrwin","can_delete":false,"product_type":"c1","uid":1180503,"ip_address":"","ucode":"5E394E36419C56","user_header":"https://static001.geekbang.org/account/avatar/00/12/03/57/31595f22.jpg","comment_is_top":false,"comment_ctime":1555547940,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"5850515236","product_id":100023901,"comment_content":"如果线程池处理的任务非常重要，建议自定义自己的拒绝策略；并且在实际工作中，自定义的拒绝策略往往和降级策略配合使用。<br><br>老师，请问这个怎么理解？能举个例子吗？","like_count":1},{"had_liked":false,"id":87203,"user_name":"张三","can_delete":false,"product_type":"c1","uid":1004092,"ip_address":"","ucode":"1155528FAE1546","user_header":"https://static001.geekbang.org/account/avatar/00/0f/52/3c/d6fcb93a.jpg","comment_is_top":false,"comment_ctime":1555547764,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"5850515060","product_id":100023901,"comment_content":"打卡！","like_count":1},{"had_liked":false,"id":360014,"user_name":"梅子黄时雨","can_delete":false,"product_type":"c1","uid":1015938,"ip_address":"上海","ucode":"9F788D09C2E9E7","user_header":"https://static001.geekbang.org/account/avatar/00/0f/80/82/3c21b30c.jpg","comment_is_top":false,"comment_ctime":1666137615,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1666137615","product_id":100023901,"comment_content":"学习了。","like_count":0},{"had_liked":false,"id":355044,"user_name":"Geek_ebabb4","can_delete":false,"product_type":"c1","uid":3134419,"ip_address":"北京","ucode":"3335B5F5A74561","user_header":"","comment_is_top":false,"comment_ctime":1661004388,"is_pvip":false,"replies":[{"id":"129677","content":"大马褂厂技术很好","user_name":"作者回复","user_name_real":"编辑","uid":"1269969","ctime":1662094541,"ip_address":"北京","comment_id":355044,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1661004388","product_id":100023901,"comment_content":"我在某个黄色大马褂的IT大厂，公司基础平台部封装了一个线程池管理中心，可以实现在线实时配置线程池的参数，代码只有一行api就可以获取线程池，方便是方便，但也要努力学习原理啊","like_count":0,"discussions":[{"author":{"id":1269969,"avatar":"https://static001.geekbang.org/account/avatar/00/13/60/d1/8efa89ab.jpg","nickname":"王宝令","note":"","ucode":"4FE19F5BC32FCA","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":586299,"discussion_content":"大马褂厂技术很好","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1662094541,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"北京"},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":336897,"user_name":"Bumblebee","can_delete":false,"product_type":"c1","uid":2051293,"ip_address":"","ucode":"B879C8A511D08D","user_header":"https://static001.geekbang.org/account/avatar/00/1f/4c/dd/c6035349.jpg","comment_is_top":false,"comment_ctime":1646452340,"is_pvip":true,"replies":[{"id":"123162","content":"做隔离是为了可靠性，不能因为一个业务发生了类似死锁这样的bug导致所有业务异常。能不能提高性能要看是不是io密集型的，看能不能提高硬件的利用率","user_name":"作者回复","user_name_real":"编辑","uid":"1269969","ctime":1646615384,"ip_address":"","comment_id":336897,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1646452340","product_id":100023901,"comment_content":"老师我想问个问题，同一个服务下面，不同业务进行线程池隔离这样做，能提升性能吗？我认为不能（因为机器的cpu数量是固定的，假设有一台4核的机器，那么最多同时运行4个线程）这样理解的话不论线程池怎么隔离同时最多也就4个线程同时运行。","like_count":0,"discussions":[{"author":{"id":1269969,"avatar":"https://static001.geekbang.org/account/avatar/00/13/60/d1/8efa89ab.jpg","nickname":"王宝令","note":"","ucode":"4FE19F5BC32FCA","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":554778,"discussion_content":"做隔离是为了可靠性，不能因为一个业务发生了类似死锁这样的bug导致所有业务异常。能不能提高性能要看是不是io密集型的，看能不能提高硬件的利用率","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1646615384,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":334706,"user_name":"Akane","can_delete":false,"product_type":"c1","uid":2061167,"ip_address":"","ucode":"CB15C849F30C2D","user_header":"","comment_is_top":false,"comment_ctime":1645085882,"is_pvip":false,"replies":[{"id":"122346","content":"例如销毁线程池就需要，可以类比数据库连接池","user_name":"作者回复","user_name_real":"编辑","uid":"1269969","ctime":1645277118,"ip_address":"","comment_id":334706,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1645085882","product_id":100023901,"comment_content":"老师，请教一下，简化线程池代码中<br>&#47;&#47;保存内部工作线程 <br>List threads = new ArrayList&lt;&gt;();<br>保存内部工作线程有什么作用呀？<br>后续也只是在构造方法中初始化的时候将线程放到list中，然后就没有对该list做操作了，不太理解","like_count":0,"discussions":[{"author":{"id":1269969,"avatar":"https://static001.geekbang.org/account/avatar/00/13/60/d1/8efa89ab.jpg","nickname":"王宝令","note":"","ucode":"4FE19F5BC32FCA","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":552079,"discussion_content":"例如销毁线程池就需要，可以类比数据库连接池","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1645277118,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":334349,"user_name":"luoChao","can_delete":false,"product_type":"c1","uid":1322823,"ip_address":"","ucode":"E8A46B41B3178D","user_header":"https://static001.geekbang.org/account/avatar/00/14/2f/47/eadc8482.jpg","comment_is_top":false,"comment_ctime":1644895550,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1644895550","product_id":100023901,"comment_content":"如果线程池处理的任务非常重要，建议自定义自己的拒绝策略；<br>现在是将拒绝的任务保存起来再执行。<br>那是不是可以直接捕获RejectedExecutionException异常，然后保存拒绝任务。","like_count":0},{"had_liked":false,"id":327087,"user_name":"小黄鸭","can_delete":false,"product_type":"c1","uid":2708370,"ip_address":"","ucode":"2800E3A723AEBD","user_header":"https://static001.geekbang.org/account/avatar/00/29/53/92/21c78176.jpg","comment_is_top":false,"comment_ctime":1639909356,"is_pvip":false,"discussion_count":1,"race_medal":0,"score":"1639909356","product_id":100023901,"comment_content":"老师，我这边有两个问题：<br>1、为什么说线程池的使用方是生产者，而线程池本身是消费者呢？我怎么感觉说反了，明明是线程池创建线程，提供给使用方去使用的。<br>2、假如说线程执行期间抛出了异常，那么当前线程就终止掉了。那我们线程池会有损耗的线程数，可是中途我并没有看到重新new线程的操作，这样的话线程池的线程数不是会越来越小吗？","like_count":0,"discussions":[{"author":{"id":1246297,"avatar":"https://static001.geekbang.org/account/avatar/00/13/04/59/390f8eb1.jpg","nickname":"夏九月","note":"","ucode":"02078B79B8CC65","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":575048,"discussion_content":"浅薄的理解，第一点:使用方(例如一个请求，定时任务等方式)生产出一个任务，需要交给线程池去处理。你的理解是消费线程，本质上应该是理解成消费任务。第二点:线程池内的某个线程异常，不影响其它线程执行，异常线程会被销毁并重新创建一个新线程放回线程池内(源码内有addworks)","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1654570627,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":314962,"user_name":"xiong","can_delete":false,"product_type":"c1","uid":1099375,"ip_address":"","ucode":"C1BFD9EF96372F","user_header":"https://static001.geekbang.org/account/avatar/00/10/c6/6f/ac3003fa.jpg","comment_is_top":false,"comment_ctime":1633613464,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1633613464","product_id":100023901,"comment_content":"线程池还是有很多可以讲的吧，个人认为讲的比较浅显，偏向与简单使用了。原理层面的并没有很好的讲解","like_count":0},{"had_liked":false,"id":307428,"user_name":"木子李","can_delete":false,"product_type":"c1","uid":1694965,"ip_address":"","ucode":"815BAC4C950949","user_header":"https://static001.geekbang.org/account/avatar/00/19/dc/f5/806bd1ff.jpg","comment_is_top":false,"comment_ctime":1629098799,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1629098799","product_id":100023901,"comment_content":"我在项目中的定时任务中看到用线程池创建线程，ExecutorService executor = new ThreadPoolExecutor(2, 2, 5L, TimeUnit.SECONDS, new LinkedBlockingDeque&lt;Runnable&gt;()); ,线程池创建两个线程，线程A执行任务A，线程B执行任务B，任务A、B没有关联。问题1：像这种有必要用线程池吗，直接创建线程可以吗？问题2：看项目内线程池没有shutdown，是否需要关闭线程池？问题三：有多个定时任务，都分别创建了各自的线程池（核心线程数何最大线程数不一样），如果都没关闭线程池，是不是项目中会一直存活着这些线程（各个线程池核心线程总数）？请教下老师和各位大佬，感谢！","like_count":0},{"had_liked":false,"id":304758,"user_name":"噶噶哦","can_delete":false,"product_type":"c1","uid":2578133,"ip_address":"","ucode":"F61DCF365AE583","user_header":"https://static001.geekbang.org/account/avatar/00/27/56/d5/3a013583.jpg","comment_is_top":false,"comment_ctime":1627603583,"is_pvip":true,"discussion_count":1,"race_medal":0,"score":"1627603583","product_id":100023901,"comment_content":"线程池里的线程在执行任务时异常终止，线程会消失，还是会继续执行下一个任务","like_count":0,"discussions":[{"author":{"id":1079495,"avatar":"https://static001.geekbang.org/account/avatar/00/10/78/c7/083a3a0b.jpg","nickname":"新世界","note":"","ucode":"4473DC1505F158","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":548801,"discussion_content":"消失","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1643373978,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":290286,"user_name":"M","can_delete":false,"product_type":"c1","uid":1810576,"ip_address":"","ucode":"06F26E1D62E9C9","user_header":"https://wx.qlogo.cn/mmopen/vi_32/eLNeJNaEkwGSK7xvtamMibVLMy2MpbIqX3iaEhT7JtSnTRMRTwZ2j4HX7WAapiashbiaBDVriaXKSP0Oeic6ZAEVEXag/132","comment_is_top":false,"comment_ctime":1619486489,"is_pvip":false,"discussion_count":2,"race_medal":0,"score":"1619486489","product_id":100023901,"comment_content":"老师，有几个疑问<br>对于这块代码  while(true){ ①<br>        Runnable task = workQueue.take();<br>        task.run();<br>      } <br> 疑问1：为啥要用死循环呢？会栈内存溢出嘛？为啥不改成有任务时执行，没任务时不执行呢<br>疑问2：task.run（）是直接获取一个线程，然后线程在调用task的任务么？ 再学Thread时，是要调用start（），不需要调用run（）的 <br><br>老师，帮忙看下，谢谢。","like_count":0,"discussions":[{"author":{"id":1079495,"avatar":"https://static001.geekbang.org/account/avatar/00/10/78/c7/083a3a0b.jpg","nickname":"新世界","note":"","ucode":"4473DC1505F158","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":548799,"discussion_content":"1、Runnable task = workQueue.take();  这个从队列中获取任务是阻塞的，没有任务就阻塞等待，是放弃cup不执行的，while(true)是为了执行完一个任务继续执行下一个任务\n2、这个task.run是相当于直接执行线程对应的任务，可以理解为一个普通的方法调用","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1643373619,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1446254,"avatar":"https://static001.geekbang.org/account/avatar/00/16/11/6e/897bd526.jpg","nickname":"对象正在输入...","note":"","ucode":"BA370176043636","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":375131,"discussion_content":"这是一个 WorkerThread ，专门用来处理队列中的线程的，处理完接着 循环处理下一个，run是同步的过程，不会溢出","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1621493065,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":282734,"user_name":"ZYL","can_delete":false,"product_type":"c1","uid":1339440,"ip_address":"","ucode":"7911DA735DEF68","user_header":"https://static001.geekbang.org/account/avatar/00/14/70/30/923f5ec1.jpg","comment_is_top":false,"comment_ctime":1615381880,"is_pvip":false,"discussion_count":2,"race_medal":0,"score":"1615381880","product_id":100023901,"comment_content":"老师，我这里有一个疑问，为啥要用那个list保存初始化的工作线程","like_count":0,"discussions":[{"author":{"id":2793822,"avatar":"https://static001.geekbang.org/account/avatar/00/2a/a1/5e/4c53cb49.jpg","nickname":"helloWorld","note":"","ucode":"E7D28A9F456959","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":554163,"discussion_content":"在上诉代码中没有什么用，这个一般是线程池用于销毁时使用","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1646232693,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1783995,"avatar":"https://static001.geekbang.org/account/avatar/00/1b/38/bb/213374a2.jpg","nickname":"终不悔","note":"","ucode":"63A7FA33B1787A","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":542360,"discussion_content":"我也有这个疑问，大佬你想明白了吗","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1640739984,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":282044,"user_name":"俺能学个啥","can_delete":false,"product_type":"c1","uid":1026742,"ip_address":"","ucode":"30740C5B58774C","user_header":"https://static001.geekbang.org/account/avatar/00/0f/aa/b6/46a5bbf3.jpg","comment_is_top":false,"comment_ctime":1615027029,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1615027029","product_id":100023901,"comment_content":"可以把Executors工具类提供的默认ThreadFactory修改一下，提供一个自定义线程池名和线程名的构造函数，","like_count":0},{"had_liked":false,"id":270566,"user_name":"poordickey","can_delete":false,"product_type":"c1","uid":1810156,"ip_address":"","ucode":"2A436EC813AF97","user_header":"","comment_is_top":false,"comment_ctime":1609161010,"is_pvip":false,"replies":[{"id":"98119","content":"我这就改行������","user_name":"作者回复","user_name_real":"王宝令","uid":"1269969","ctime":1609163726,"ip_address":"","comment_id":270566,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1609161010","product_id":100023901,"comment_content":"老师真的太适合讲课了   思路清奇    有种相见恨晚的感觉","like_count":0,"discussions":[{"author":{"id":1269969,"avatar":"https://static001.geekbang.org/account/avatar/00/13/60/d1/8efa89ab.jpg","nickname":"王宝令","note":"","ucode":"4FE19F5BC32FCA","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":512672,"discussion_content":"我这就改行������","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1609163726,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":263467,"user_name":"Geek_7c4970","can_delete":false,"product_type":"c1","uid":1722200,"ip_address":"","ucode":"5D289707CD63DC","user_header":"","comment_is_top":false,"comment_ctime":1606139967,"is_pvip":false,"discussion_count":1,"race_medal":0,"score":"1606139967","product_id":100023901,"comment_content":"&#47;&#47;保存内部工作线程  List&lt;WorkerThread&gt; threads     = new ArrayList&lt;&gt;();<br><br><br>我想请教一下，上面示例代码中的这一句是必要的吗？觉得好像并没有什么用啊。","like_count":0,"discussions":[{"author":{"id":1446254,"avatar":"https://static001.geekbang.org/account/avatar/00/16/11/6e/897bd526.jpg","nickname":"对象正在输入...","note":"","ucode":"BA370176043636","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":375132,"discussion_content":"示例中没用，实际有 shutdown 线程池的操作，就需要终止 worker 了","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1621493373,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":242077,"user_name":"prepared","can_delete":false,"product_type":"c1","uid":1194853,"ip_address":"","ucode":"00E54A5C7CDCBE","user_header":"https://static001.geekbang.org/account/avatar/00/12/3b/65/3a4fc8cf.jpg","comment_is_top":false,"comment_ctime":1597585719,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1597585719","product_id":100023901,"comment_content":"thread1.setName(&quot;线程1-name&quot;);","like_count":0},{"had_liked":false,"id":225182,"user_name":"RedHair","can_delete":false,"product_type":"c1","uid":1447904,"ip_address":"","ucode":"9E68A6BC7C178E","user_header":"https://static001.geekbang.org/account/avatar/00/16/17/e0/018a06cd.jpg","comment_is_top":false,"comment_ctime":1591675461,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1591675461","product_id":100023901,"comment_content":"<br><br>老师，在第20篇，提到“上面我们提到的这些 Queue 中，只有 ArrayBlockingQueue 和 LinkedBlockingQueue 是支持有界的，所以在使用其他无界队列时，一定要充分考虑是否存在导致 OOM 的隐患。”<br><br>现在这篇文章提到“不建议使用 Executors 的最重要的原因是：Executors 提供的很多方法默认使用的都是无界的 LinkedBlockingQueue，高负载情境下，无界队列很容易导致 OOM，而 OOM 会导致所有请求都无法处理，这是致命问题。所以强烈建议使用有界队列。”<br><br>是否这两篇文章提到的LinkedBlockingQueue在不同场景下，会表现不同的“有界”和”无界“状态呢，我很困惑😕","like_count":0},{"had_liked":false,"id":220719,"user_name":"湮汐","can_delete":false,"product_type":"c1","uid":1106268,"ip_address":"","ucode":"FB6185621891E5","user_header":"https://static001.geekbang.org/account/avatar/00/10/e1/5c/86606d9c.jpg","comment_is_top":false,"comment_ctime":1590311808,"is_pvip":true,"discussion_count":0,"race_medal":0,"score":"1590311808","product_id":100023901,"comment_content":"线程池中，有不同的队列，这些队列的使用场景不是特别理解","like_count":0},{"had_liked":false,"id":218288,"user_name":"kimoti","can_delete":false,"product_type":"c1","uid":1897671,"ip_address":"","ucode":"0A78077408C2B1","user_header":"https://static001.geekbang.org/account/avatar/00/1c/f4/c7/037235c9.jpg","comment_is_top":false,"comment_ctime":1589772094,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1589772094","product_id":100023901,"comment_content":"请问老师假如线程池的中的任务发生异常了,那么处理该任务的线程就异常终止了,那么以后提交的任务其实都无法处理了，因为线程池中的线程都异常结束了。","like_count":0},{"had_liked":false,"id":203307,"user_name":"军临天下","can_delete":false,"product_type":"c1","uid":1797919,"ip_address":"","ucode":"98B7C8987F5559","user_header":"","comment_is_top":false,"comment_ctime":1586169062,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1586169062","product_id":100023901,"comment_content":"如果说我要处理1000条数据，通过自定义线程池参数，有界队列的长度设置为多少合适？","like_count":0},{"had_liked":false,"id":201658,"user_name":"Easltr","can_delete":false,"product_type":"c1","uid":1442882,"ip_address":"","ucode":"DC6E6F76280549","user_header":"https://static001.geekbang.org/account/avatar/00/16/04/42/8e41c126.jpg","comment_is_top":false,"comment_ctime":1585817432,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1585817432","product_id":100023901,"comment_content":"通过threadFactory可以定义新建线程的名称的格式","like_count":0},{"had_liked":false,"id":199848,"user_name":"😜哈哈","can_delete":false,"product_type":"c1","uid":1069001,"ip_address":"","ucode":"1FF58FB3A91135","user_header":"https://static001.geekbang.org/account/avatar/00/10/4f/c9/88837387.jpg","comment_is_top":false,"comment_ctime":1585496894,"is_pvip":true,"discussion_count":0,"race_medal":0,"score":"1585496894","product_id":100023901,"comment_content":"学习dubbo中线程池","like_count":0},{"had_liked":false,"id":164387,"user_name":"小氘","can_delete":false,"product_type":"c1","uid":1622109,"ip_address":"","ucode":"DA55B9A02D9EE0","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/DYAIOgq83erPMtAfnQdpx1yOZQ2ic7icqUs3tvibEjUXQMUXKiaakyuIho6k6vmdl46nrdWjXIjPIRg9Pmco00tR5w/132","comment_is_top":false,"comment_ctime":1576973612,"is_pvip":false,"replies":[{"id":"62465","content":"学以致用👍","user_name":"作者回复","user_name_real":"王宝令","uid":"1269969","ctime":1577001079,"ip_address":"","comment_id":164387,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1576973612","product_id":100023901,"comment_content":"我在项目中遇到了线程任务抛出空指针异常但没有任何提示我以为任务执行正常但实际却终止了的情况，看完这篇下周上班按规范都catch上运行时异常。","like_count":0,"discussions":[{"author":{"id":1269969,"avatar":"https://static001.geekbang.org/account/avatar/00/13/60/d1/8efa89ab.jpg","nickname":"王宝令","note":"","ucode":"4FE19F5BC32FCA","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":478744,"discussion_content":"学以致用👍","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1577001079,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":140466,"user_name":"Csquare","can_delete":false,"product_type":"c1","uid":1137203,"ip_address":"","ucode":"23CAC353A82D1D","user_header":"https://static001.geekbang.org/account/avatar/00/11/5a/33/9a66d0b8.jpg","comment_is_top":false,"comment_ctime":1570953170,"is_pvip":false,"discussion_count":2,"race_medal":0,"score":"1570953170","product_id":100023901,"comment_content":"catch (Throwable x) {<br>&#47;&#47; 按需处理<br>}<br><br>这样处理会不会有问题，OOM都会被catch了吧？","like_count":0,"discussions":[{"author":{"id":1713885,"avatar":"https://static001.geekbang.org/account/avatar/00/1a/26/dd/9b764dc7.jpg","nickname":"zard_sakai","note":"","ucode":"1466C541F9FB26","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":315864,"discussion_content":"……OOM是虚拟机错误吧，不能catch的，出现OOM程序应该终止了","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1603333160,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1022091,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/98/8b/7a691d53.jpg","nickname":"HungerW","note":"","ucode":"75689EDF0F8E7F","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":215366,"discussion_content":"可以单独把oom抛出去。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1585318897,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":136825,"user_name":"ly","can_delete":false,"product_type":"c1","uid":1221628,"ip_address":"","ucode":"5E2B85252DABF3","user_header":"https://static001.geekbang.org/account/avatar/00/12/a3/fc/379387a4.jpg","comment_is_top":false,"comment_ctime":1569540473,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1569540473","product_id":100023901,"comment_content":"个人理解线程池和其他池化的不同：<br>其他池化方式是程序手动从池中获取资源，然后拿着资源去做事情。<br>线程池而言，则是把业务任务扔进池中，不会和池中对象打交道。不是特别需要关心池中的线程情况。如果按照其他池化来做的，首先从池中拿到线程对象，然后使用线程对象，但是目前java没有让业务层面去操作线程的技术，另外一个问题就是拿到的线程如何归还到池中呢，因为线程执行完生命周期就结束了。","like_count":0},{"had_liked":false,"id":131031,"user_name":"Demter","can_delete":false,"product_type":"c1","uid":1158439,"ip_address":"","ucode":"BE3B6F726916CE","user_header":"https://static001.geekbang.org/account/avatar/00/11/ad/27/5556ae50.jpg","comment_is_top":false,"comment_ctime":1567604929,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1567604929","product_id":100023901,"comment_content":"最后线程池不是抛出异常吗，为什么收不到任何通知呢啊","like_count":0},{"had_liked":false,"id":126605,"user_name":"小可","can_delete":false,"product_type":"c1","uid":1006735,"ip_address":"","ucode":"8834AF621FA67D","user_header":"https://static001.geekbang.org/account/avatar/00/0f/5c/8f/551b5624.jpg","comment_is_top":false,"comment_ctime":1566435070,"is_pvip":false,"replies":[{"id":"54139","content":"这个我就猜不出了😂","user_name":"作者回复","user_name_real":"王宝令","uid":"1269969","ctime":1570796065,"ip_address":"","comment_id":126605,"utype":1}],"discussion_count":4,"race_medal":0,"score":"1566435070","product_id":100023901,"comment_content":"老师好<br>Springboot中<br>使用ThreadPoolExecutor创建线程池<br> corePoolSize＝4<br> maximumPoolSize＝8<br>发布到4核服务器上<br>Jmeter压测，看日志线程最多是4个<br>不管修改corePoolSize，maximumPoolSize为多少，线程数最多等于corePoolSize，这会是什么原因呢？","like_count":0,"discussions":[{"author":{"id":1269969,"avatar":"https://static001.geekbang.org/account/avatar/00/13/60/d1/8efa89ab.jpg","nickname":"王宝令","note":"","ucode":"4FE19F5BC32FCA","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":464081,"discussion_content":"这个我就猜不出了😂","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1570796065,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1316791,"avatar":"https://static001.geekbang.org/account/avatar/00/14/17/b7/b229a627.jpg","nickname":"LEi","note":"","ucode":"4820811B502CDE","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":6856,"discussion_content":"这个得看你选择的队列有没有满、选择什么队列吧。选择一个无界队列maximumPoolSize就没有什么意义","likes_number":3,"is_delete":false,"is_hidden":false,"ctime":1567144491,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1484192,"avatar":"https://static001.geekbang.org/account/avatar/00/16/a5/a0/e0cccf7e.jpg","nickname":"圆圆满满","note":"","ucode":"396E7A822014D1","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":295024,"discussion_content":"因为线程池是先塞队列，队列满了才会把线程数扩充到max。你检查下是否使用了有界队列？还有就是这个队列有没有被塞满。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1596072119,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1121758,"avatar":"https://static001.geekbang.org/account/avatar/00/11/1d/de/62bfa83f.jpg","nickname":"aoe","note":"","ucode":"1C6201EDB4E954","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":49260,"discussion_content":"有可能你参数设置错了，不同版本的spring参数名经常不一样。你这个情况90%是设置的参数无效，你换一个2核或者16核的服务器，线程数就是2或者16了","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1573568412,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":121647,"user_name":"知行合一","can_delete":false,"product_type":"c1","uid":1090784,"ip_address":"","ucode":"563C4A71D80DA1","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTJwQvLGE4dMsF4JU0svW3DtGbodpjskbY65FdwF13JdtBYZfgL2IXHlHrdejWzHdjT0RibEIfib4QYA/132","comment_is_top":false,"comment_ctime":1565176467,"is_pvip":false,"replies":[{"id":"44973","content":"理论值结合具体场景，压测出来的","user_name":"作者回复","user_name_real":"王宝令","uid":"1269969","ctime":1565429536,"ip_address":"","comment_id":121647,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1565176467","product_id":100023901,"comment_content":"请问老师，自定义线程池，最大线程数设置多少合适呢","like_count":0,"discussions":[{"author":{"id":1269969,"avatar":"https://static001.geekbang.org/account/avatar/00/13/60/d1/8efa89ab.jpg","nickname":"王宝令","note":"","ucode":"4FE19F5BC32FCA","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":461891,"discussion_content":"理论值结合具体场景，压测出来的","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1565429536,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":118729,"user_name":"Vincent","can_delete":false,"product_type":"c1","uid":1135159,"ip_address":"","ucode":"CD8B84A57A6A0C","user_header":"https://static001.geekbang.org/account/avatar/00/11/52/37/13b4c8aa.jpg","comment_is_top":false,"comment_ctime":1564443112,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1564443112","product_id":100023901,"comment_content":"重写ThreadFactory 类重写线程名称，给予有业务含义的名字","like_count":0},{"had_liked":false,"id":118183,"user_name":"magicHu","can_delete":false,"product_type":"c1","uid":1132342,"ip_address":"","ucode":"2C44FD8E77EDF2","user_header":"https://static001.geekbang.org/account/avatar/00/11/47/36/cb57ac83.jpg","comment_is_top":false,"comment_ctime":1564283616,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1564283616","product_id":100023901,"comment_content":"对于线程池的使用，需要理解线程池构建的各个参数意义","like_count":0},{"had_liked":false,"id":115016,"user_name":"尔冬橙","can_delete":false,"product_type":"c1","uid":1225224,"ip_address":"","ucode":"0B013A49BC18DA","user_header":"https://static001.geekbang.org/account/avatar/00/12/b2/08/92f42622.jpg","comment_is_top":false,"comment_ctime":1563453768,"is_pvip":false,"replies":[{"id":"53903","content":"没问题，阻塞队列的take方法会阻塞","user_name":"作者回复","user_name_real":"王宝令","uid":"1269969","ctime":1570710019,"ip_address":"","comment_id":115016,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1563453768","product_id":100023901,"comment_content":"老师，如果队列中任务很少，请问while（true）一句是不是有问题了","like_count":0,"discussions":[{"author":{"id":1269969,"avatar":"https://static001.geekbang.org/account/avatar/00/13/60/d1/8efa89ab.jpg","nickname":"王宝令","note":"","ucode":"4FE19F5BC32FCA","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":458928,"discussion_content":"没问题，阻塞队列的take方法会阻塞","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1570710019,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":115015,"user_name":"尔冬橙","can_delete":false,"product_type":"c1","uid":1225224,"ip_address":"","ucode":"0B013A49BC18DA","user_header":"https://static001.geekbang.org/account/avatar/00/12/b2/08/92f42622.jpg","comment_is_top":false,"comment_ctime":1563452955,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1563452955","product_id":100023901,"comment_content":"老师，用阻塞队列实现线程池任务完成后转态如何转变的","like_count":0},{"had_liked":false,"id":107880,"user_name":"once","can_delete":false,"product_type":"c1","uid":1170533,"ip_address":"","ucode":"7026094E0B99BF","user_header":"https://static001.geekbang.org/account/avatar/00/11/dc/65/3da02c30.jpg","comment_is_top":false,"comment_ctime":1561628288,"is_pvip":true,"replies":[{"id":"39045","content":"你尝试用池化资源的方式实现一下就知道了","user_name":"作者回复","user_name_real":"王宝令","uid":"1269969","ctime":1561633928,"ip_address":"","comment_id":107880,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1561628288","product_id":100023901,"comment_content":"老师你好,这里感觉还是没有说清楚为什么线程池不采用一般的池化资源的方法? ","like_count":0,"discussions":[{"author":{"id":1269969,"avatar":"https://static001.geekbang.org/account/avatar/00/13/60/d1/8efa89ab.jpg","nickname":"王宝令","note":"","ucode":"4FE19F5BC32FCA","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":455724,"discussion_content":"你尝试用池化资源的方式实现一下就知道了","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1561633928,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":103412,"user_name":"你好呀","can_delete":false,"product_type":"c1","uid":1049361,"ip_address":"","ucode":"2E97656410BACA","user_header":"https://static001.geekbang.org/account/avatar/00/10/03/11/f58c6278.jpg","comment_is_top":false,"comment_ctime":1560430183,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1560430183","product_id":100023901,"comment_content":"线程池是  消费者拿到生产者生产的线程对象调用run方法   就是固定的几个父进程开启关闭几个子进程","like_count":0},{"had_liked":false,"id":103155,"user_name":"魏斌斌","can_delete":false,"product_type":"c1","uid":1142239,"ip_address":"","ucode":"E443EB0504CA37","user_header":"https://static001.geekbang.org/account/avatar/00/11/6d/df/dd536ff5.jpg","comment_is_top":false,"comment_ctime":1560388631,"is_pvip":false,"replies":[{"id":"55842","content":"要看拒绝策略","user_name":"作者回复","user_name_real":"王宝令","uid":"1269969","ctime":1572062433,"ip_address":"","comment_id":103155,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1560388631","product_id":100023901,"comment_content":"老师，线程池里面用到了阻塞队列，当队列满的时候提交任务，不是会挂起生产者线程吗？","like_count":0,"discussions":[{"author":{"id":1269969,"avatar":"https://static001.geekbang.org/account/avatar/00/13/60/d1/8efa89ab.jpg","nickname":"王宝令","note":"","ucode":"4FE19F5BC32FCA","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":453760,"discussion_content":"要看拒绝策略","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1572062433,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":98288,"user_name":"suke","can_delete":false,"product_type":"c1","uid":1007753,"ip_address":"","ucode":"C0287C31A4F45B","user_header":"","comment_is_top":false,"comment_ctime":1558948876,"is_pvip":false,"discussion_count":1,"race_medal":0,"score":"1558948876","product_id":100023901,"comment_content":"老师,能不能介绍下java中的线程和具体操作系统层面的线程的关系","like_count":0,"discussions":[{"author":{"id":1484192,"avatar":"https://static001.geekbang.org/account/avatar/00/16/a5/a0/e0cccf7e.jpg","nickname":"圆圆满满","note":"","ucode":"396E7A822014D1","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":293681,"discussion_content":"通常一对一的关系","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1595642178,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":87900,"user_name":"Naver","can_delete":false,"product_type":"c1","uid":1041505,"ip_address":"","ucode":"8B1300EF9B625F","user_header":"https://static001.geekbang.org/account/avatar/00/0f/e4/61/d064c376.jpg","comment_is_top":false,"comment_ctime":1555747204,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1555747204","product_id":100023901,"comment_content":"threadFactory可以给线程定义名称。建议老师知识点讲解可以深入点，比如源码实现和异常方向使用等，谢谢","like_count":0},{"had_liked":false,"id":87513,"user_name":"Easy","can_delete":false,"product_type":"c1","uid":1474571,"ip_address":"","ucode":"FF2016B58F2924","user_header":"https://static001.geekbang.org/account/avatar/00/16/80/0b/a77e70d5.jpg","comment_is_top":false,"comment_ctime":1555630885,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1555630885","product_id":100023901,"comment_content":"现在的大部分项目都是分布式的，像这些并发解决办法是不是就不能用了？","like_count":0},{"had_liked":false,"id":87409,"user_name":"张德","can_delete":false,"product_type":"c1","uid":1101929,"ip_address":"","ucode":"31FE63E8725EFC","user_header":"https://static001.geekbang.org/account/avatar/00/10/d0/69/5dbdc245.jpg","comment_is_top":false,"comment_ctime":1555586575,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1555586575","product_id":100023901,"comment_content":"记得有一个setname的方法  还可以构造函数的时候直接指定","like_count":0},{"had_liked":false,"id":87226,"user_name":"crazypokerk","can_delete":false,"product_type":"c1","uid":1158383,"ip_address":"","ucode":"9AAD5D9726E503","user_header":"https://static001.geekbang.org/account/avatar/00/11/ac/ef/494f56c3.jpg","comment_is_top":false,"comment_ctime":1555551022,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1555551022","product_id":100023901,"comment_content":"线程池中线程的名称使用namePrefix + threadNumber.getAndIncrement()拼接的，我们只需对实现ThreadFactory接口，并对DefaultThreadFactory的代码中namePrefix的初始化进行改动，需要创建线程池时，传入与业务相关的namePrefix名称就可以了。<br>static ThreadPoolExecutor pool = new ThreadPoolExecutor(5, 5, 1, TimeUnit.MINUTES,<br>            new LinkedBlockingQueue&lt;&gt;(), new NamedThreadFactory(&quot;需要标识业务的线程名称&quot;));","like_count":0},{"had_liked":false,"id":87216,"user_name":"MiracleWCG","can_delete":false,"product_type":"c1","uid":1152348,"ip_address":"","ucode":"2333D32404C22A","user_header":"https://static001.geekbang.org/account/avatar/00/11/95/5c/3214fd5d.jpg","comment_is_top":false,"comment_ctime":1555549603,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1555549603","product_id":100023901,"comment_content":"threadFactory 可以设置thread name","like_count":0},{"had_liked":false,"id":87211,"user_name":"zhangtnty","can_delete":false,"product_type":"c1","uid":1180553,"ip_address":"","ucode":"3C9A14BD7CF432","user_header":"https://static001.geekbang.org/account/avatar/00/12/03/89/e1621a01.jpg","comment_is_top":false,"comment_ctime":1555548662,"is_pvip":false,"discussion_count":2,"race_medal":0,"score":"1555548662","product_id":100023901,"comment_content":"王老师好．可以使用 setName 实现,我觉得在线程池换名称会更乱保持原有应方便些。<br>另外问一下老师，如何确定线程池内的线程 都已经执行完成？谢谢。","like_count":0,"discussions":[{"author":{"id":1453053,"avatar":"https://static001.geekbang.org/account/avatar/00/16/2b/fd/7013289d.jpg","nickname":"温故而知新可以为师矣","note":"","ucode":"FADCDFA9F9E5E8","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":225078,"discussion_content":"扩展java.util.concurrent.ThreadPoolExecutor,实现afterExecute模板方法？","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1586347464,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":1,"child_discussions":[{"author":{"id":1079495,"avatar":"https://static001.geekbang.org/account/avatar/00/10/78/c7/083a3a0b.jpg","nickname":"新世界","note":"","ucode":"4473DC1505F158","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1453053,"avatar":"https://static001.geekbang.org/account/avatar/00/16/2b/fd/7013289d.jpg","nickname":"温故而知新可以为师矣","note":"","ucode":"FADCDFA9F9E5E8","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":548803,"discussion_content":"买的什么二手车","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1643376376,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":225078,"ip_address":""},"score":548803,"extra":""}]}]}]}