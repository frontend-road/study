{"id":671109,"title":"13 | 材料整理：从混乱到秩序，以说代做","content":"<p>你好，我是键盘，我们继续驯服 GPT。</p><p>想要使用GPT来提效，除了基础的翻译和行动指引，离我们最近的其实还是材料整理。这个课题会有点大，毕竟文字材料以外也还有图、文、音等多模态数据。所以我们从中抽取一个“文件整理”，解决它，之后再延伸应用也就轻而易举了。</p><p>整理什么文件呢？为了不让你错过绘图AI，接下来我们就整理一套AI绘图概念词典，让你想要的时候随手就有一份参考。这份参考适用于Midjourney、Stable Diffusion等等文生图模型。</p><p>我们梳理一下材料整理的<strong>准备工作和效果预期。</strong></p><ul>\n<li>情况一：你已经在文本工具中储备了少量零散概念，属于整理你已有的东西，效果最佳。</li>\n<li>情况二：你有一份网上捞过来的参考词典，可行。唯一的问题是，这是别人整理的，没有投入你个人知识的涟漪，不好用。</li>\n<li>情况三：整理几乎不了解的材料，还是能实现。我们先给GPT投一个小石头，激起第一道涟漪，空手套白狼。</li>\n</ul><pre><code class=\"language-markdown\">……我是新手，针对\"色彩\"，请按&lt;单词+描述&gt;，填充 30 组整理好的数据表格。\n</code></pre><p>我会重点分享第一种情况，同时提供第三种情况兼容新手的方案。通过案例的实践，你将掌握4个可复用的技巧。</p><ol>\n<li>在GPT对话框中对数据进行聚类、排序。</li>\n<li>一行指令对长输入/输出进行拆分。</li>\n<li>智能的数据校对，防止错漏和重复。</li>\n<li>智能填充和扩展。</li>\n</ol><!-- [[[read_end]]] --><p>这节课的实操首选稳定的GPT-4模型，因为ChatGPT稳定性较差，校对环节会比较影响效率。</p><h2>梳理框架：更多思考，更少执行</h2><p>我们要明确的是，这个整理不是要强行以AI的方式来执行，为了用而用，而是通过思考日常整理材料的难点，想一想怎么样整理才会更方便，理清整理材料和使用GPT在实际工作中的结合点。</p><p>为了让后续挑战更加轻松，我们先来做好前置准备。</p><p><strong>✦ 规避无意识的概念盲区</strong></p><p>设计prompt最怕一上来就写 <code>整理一份Midjourney的prompt词典</code> 这类主题。即使你使用的是更高级的GPT-4，它们2011年的出生点就意味着一些概念是不存在的，比如这里的Midjourney。</p><p>那怎么有意识地兼容孤岛模型和联网插件呢？答案是加上明确的、附带目的的描述“什么样的Midjourney”。</p><center>\n💬 prompt 实例\n</center><pre><code class=\"language-markdown\">整理一份AI绘图工具Midjourney的prompt词典…… #其他细节\n</code></pre><p>也就是将盲区词汇“Midjourey”作为明确目的，“AI绘图”作为附加词，这样向上兼容联网模型的时候，GPT就会知道这是一个AI绘图工具Midjourney，不是路人甲、乙、丙Midjourey。</p><p><strong>✦ 应对局限：分类输入/输出</strong></p><p>比起用Python来写一个自动化处理方案，打开ChatGPT就能分类整理的方式更适合小白。但因为字数限制，可以预见的结果就是频繁中断、大量错漏，或者干脆不支持超过1000字的材料。不用怕，用讲过的<a href=\"https://time.geekbang.org/column/article/664278\">分段策略</a>来解决就好。</p><p><strong>✦ 提取要素：明确整理的维度细节</strong></p><p>假如你要整理的材料来自完全不了解的新领域，又该怎么下手？没关系，先来建立知识的联结。比如AI绘图领域，本质上就是用语言描述出一个画面，你可以理解为“讲故事”。那么AI绘图领域的5要素，就可以投射到我们讲过的“提问5要素”中去理解。它的5要素就可以是：</p><center>\n<p><strong>谁（和谁）+在哪里+做什么+什么时间+怎么做</strong></p>\n</center><p>不过，现在的绘图5要素还不足以形成清晰、明确的描述。比如说“一只狗”，一只什么样的狗？“什么样”这个概念才是让画面变具体的关键。好，继续往下拆解。<strong>一个具体的画面可以用不同的属性来描述</strong>，比如画面“蜿蜒的小河边，在大树上有一个木头树屋，斑驳的阳光，居中构图，远景，低视角，宁静的手绘”，它可以拆解为7个维度：</p><center>\n<p><strong>色彩+光线+材质+构图+景别+视角+风格</strong></p>\n</center><p>到这一步，就是专业和非专业户的分水岭了，完全不懂的话，你也可以先让GPT给出明确的拆解参考。这些具体的分类清晰之后，就可以设计prompt了。</p><h2>切入：捋需求，抓重点</h2><p>任何prompt的设计都要根据实际情况来思考，所以我们先从手头已有的待整理数据来分析。</p><p>我从开始用Midjourney时记录的碎片信息里面摘出了一段“光线”分类。</p><pre><code class=\"language-markdown\">……\nmorning light 🌟晨光\ndappled sunlight 🌟斑驳的阳光（验证：komorebi 木漏れ日，MJ无法识别，使用 sunlight filtering through leaves 或 dappled sunlight）\ngolden hour 🌟🌟黄金时段（日落前和日出后的一小时，全天最柔和的暖光）\ntwilight 暮色 surrounded in golden twilight 被金色的暮色笼罩\n……\n\n光/方向\nrembrandt light 伦勃朗式用光\ntop light 顶光\n……\n</code></pre><p>这个类目近百行，有些概念包含实践过后打上的评级，有些包含相应的描述，大部分因为我自己了解，就只提供了简单的中、英文名称。假如靠人力去调整位置和细节，至少要费半天的时间，所以提效还得是AI。</p><p>最基础的整理，一般能够梳理出7个常规的需求点。</p><ol>\n<li><strong>使用表格来结构化整理：</strong>纯文字可用性和可读性都很差，也不方便用于协作。</li>\n<li><strong>区分不同的输出模版：</strong>比如说色彩类目可以单独多加一个色卡，展现概念“本色”。</li>\n<li><strong>统一整理的维度：</strong>通常就是定义用哪些类型的数据列，还有确认某些列的对齐方式。比如数额类数据因为要便于分辨位数，所以右对齐基本就是标配。</li>\n<li><strong>数据聚类：</strong>细分二级分类，相似的就自动归类。</li>\n<li><strong>按一定的规律排序：</strong>保持所谓的秩序，方便关联记忆，毕竟最后这份材料要落到实际应用。</li>\n<li><strong>按需填充必要的描述：</strong>做到心中有概念，而不是光有一个词。</li>\n<li><strong>整理格式：</strong>为了方便阅读，除了专有名词，如 <code>Pixar</code>、<code>C4D</code> ，其他名词统一小写。</li>\n</ol><p>再针对这个场景补充2个必要的需求。</p><ol>\n<li><strong>拆分</strong></li>\n</ol><p>个别输入/输出会很长，这是一个你可以预判到的、会严重影响效率的地方。那是不是可以设计 <code>datas</code> 和 <code>output</code>  分支指令，按分段输入，按二级分类输出？这样既保障了数据结构，又能规避大量的中断。</p><p><img src=\"https://static001.geekbang.org/resource/image/fe/13/fe5d4d8a5f414122dde0af5d7922f613.png?wh=1920x612\" alt=\"图片\"></p><ol start=\"2\">\n<li><strong>校对</strong></li>\n</ol><p>只要是涉及数据和信息的整理，校对这个环节必不可少。比如说统计财务数据，一条错漏足以作废整份结果。这里我提供4个维度，<strong>数目统计、智能纠错（含大小写规则）、查漏补缺、自动去重，</strong>都可以写在prompt里，帮你保障输出质量。</p><p><img src=\"https://static001.geekbang.org/resource/image/a6/b2/a6yyed5de190c302edf1806321fe1eb2.png?wh=1920x612\" alt=\"图片\"></p><h2>秘诀：兼收并蓄</h2><p>针对这种需求点繁多的情况，很可能出现不断地复制模板、改模板的问题。比如整理完色彩又要设计一条专用于整理光线的prompt，然后还要设计材质、构图、景别等等其他分类。所以，我们使用打包指令集，借助之前提到的“变量”来灵活应变。prompt稍后再写，这里先提示你2个关键方法。</p><p><strong>方法1，从一个分类开始，覆盖其他需求场景。</strong>什么意思呢？刚入门时我采用的是分开设计并处理的方法，7大类就要设计对应的7条prompt，很麻烦。但是每个需求场景一定会有共性需求，我们来找到它们。</p><p>比如基础的聚类整理和校对、更细致的差异化输出，这种共性需求就可以抽象出来。你还可以利用好AI的推理优势，针对已经初步整理的材料设计智能填充模式 <code>/fill</code> ，接着已经整理好的内容继续填充。如果你对整理的领域完全不了解，还可以设计一个新手模式 <code>/oops</code> ，空手套白狼，让GPT自己生成、自己整理。</p><pre><code class=\"language-markdown\">#入门时期设计的\"构图\"整理\n用表格将以下数据按进行归类呈现，使阅读顺序上富有逻辑。\n要求：\n1、排序依据可以是：近似就近排列\n2、使用「prompt」、「中文」、「评级」、「备注」4列，「评级」只有🌟和🌟🌟，原数据未标示的留空。原括号内的信息为备注，未标示的留空。\n3、检查数据条目，核对是否有遗漏，给出答复和数量条目数。\n4、仅当遗漏的情况补全数据，不需要重复其余表格。\n\n---\n#我的数据\n凌乱的数据\n</code></pre><p><strong>方法2</strong><strong>，</strong><strong>拆或不拆，用一个指令打包。</strong>简单来说，整理材料这个场景的特殊点在于我们可能会分多次输入，也可能不会。那这两种情况要分开定义吗？不用。</p><p>对于输入来说，使用 <code>/datas：用户可能会拆分多次输入</code>  就比多写一条 <code>/data：用户输入数据，进入整理</code> 的效果要好，因为“可能会拆分”就包括了拆或不拆2种情况，没有必要多写一条分支。而对于输出，设定一个暗号 <code>/output</code>  自动触发处理就好，用户侧只需要不断回“1”确认，直到全部输出。</p><pre><code class=\"language-markdown\">#写法1——分开定义，有重合的地方\n/data：用户输入数据，进入整理\n/datas：用户拆分多次输入……/用户可能会拆分多次输入……\n\n#写法2——有效合并，1个指令覆盖2种情况\n/datas：用户可能会拆分多次输入……\n</code></pre><p>有了这两个方法，就可以在 <code>指令</code> 定义里面“转述”需求，快速完成 prompt 设计了。</p><p><img src=\"https://static001.geekbang.org/resource/image/98/d1/98dc610f6b86cd8ab4106a109664a8d1.png?wh=1913x1816\" alt=\"图片\" title=\"初始 prompt\"></p><p>对于“材料整理”这类要求比较严谨的情况，我们<strong>可以让AI指出设计存在的不足，主动迭代一次。</strong>和之前根据结果来被动迭代不同，你会得到一些意想不到的收获。</p><p><img src=\"https://static001.geekbang.org/resource/image/a7/4b/a7a4a44bb5ee67759f0a4b09c865ef4b.png?wh=4924x1840\" alt=\"图片\" title=\"主动让 AI 指导，让逻辑更缜密\"></p><p>ChatGPT偶尔会在没有要求的情况下自己说出对任务或步骤的理解。</p><p><img src=\"https://static001.geekbang.org/resource/image/40/37/4000e5c2d758d3e554f844097c2c2b37.png?wh=4200x1398\" alt=\"图片\" title=\"允许 AI 自发说明步骤\"></p><p>这种情况，不需要强制要求“不要解释”。从任务结果的角度，它的确是多余的，但<strong>从AI运作逻辑的角度，明牌的理解远远好过暗箱的结果。</strong></p><h3><strong>✦ 特殊任务：空手套白狼</strong></h3><p>Prompt准备好，我们先来跑一个手里没有任何数据的特殊情况。只要单独定义一条兼容新手的指令就能实现。</p><center> \n💬 prompt\n</center><pre><code>/oops：用户是新手，他会输入一个分类名，请按&lt;Phrase+中文+备注&gt;填充 30 组整理好的数据表格。\n</code></pre><center> \n🤖️ ChatGPT\n</center><p><img src=\"https://static001.geekbang.org/resource/image/c9/f9/c9b4db83b4a72fa2a257037867f78df9.png?wh=6280x1582\" alt=\"图片\"></p><p>这里也提供一种极致压缩的指令方式，功能指令加上数量，能够直接覆盖数量的默认值。</p><p><img src=\"https://static001.geekbang.org/resource/image/06/ed/06592a66f2117a2a891e44e94619aaed.png?wh=1920x1215\" alt=\"图片\" title=\"不需要声明变量的方式\"></p><h3><strong>✦ 主线任务1：单次整理</strong></h3><p>无中生有都能解决，其他的就更有信心了。我们回到主线任务整理已有的数据。先采用刚才AI提出的好建议，让正式prompt更简洁好用。（prompt附录可见）</p><p><img src=\"https://static001.geekbang.org/resource/image/40/e9/40e9c3083a454b1b32d00540f2bf86e9.png?wh=1920x1564\" alt=\"图片\" title=\"整理类 prompt 设计\"></p><p>先挑一个分类进行整理，这里选择了词条相对少的“色彩”，因此不需要拆分多次输入。我这里的设计是在 <code>/datas</code> 模式下输入一次数据。为了减少会话，你还可以参考下面prompt里的3个减号 <code>---</code> ，用它隔断数据，再合入暗号“1”，自动触发 <code>/output</code> 模式，由GPT输出已经整理好的内容。</p><center> \n💬 prompt\n</center><pre><code class=\"language-markdown\">#数据\n---\n1 其他要求补充(如有)\n</code></pre><p>需要注意的是，GPT-4对这种合并表达的理解更稳定，但对ChatGPT弟弟来说，单独多发一条暗号更稳妥。</p><p><img src=\"https://static001.geekbang.org/resource/image/79/e8/796a61af28c812dc61ffe5ab1efb62e8.png?wh=15088x8192\" alt=\"图片\" title=\"分类整理：色彩\"></p><p>输出结果中，除了有鸢尾色、丁香色、红宝石色这些狭义上的色彩名称，还有浅色调、柔和、莫兰迪、活力等等色彩感受。这些词混合在一起，二级分类的细节没有体现出来。怎么办呢？你可以单独要求整理一类带色卡的，暗示GPT在后续的任务中记住细分类目这件事。</p><h3><strong>✦ 主线任务2：智能填充</strong></h3><p>单次整理之后，可能还有继续补充数据的需求，甚至可能你自己都不记得是不是整理过这个类目了。所以针对 <code>/fill</code> 分支，我设计了容错判断，假如某个分类已经有整理好的数据了，那就在此基础上沿用规格和格式来填充更多，否则就让用户提供需要整理的数据。</p><p>比如现在“色彩”已经确认满意了，那就<strong>可以在效果可预期的情况下填充更多，节省人力。</strong></p><p><img src=\"https://static001.geekbang.org/resource/image/2d/3b/2db0aba354144a81be3f16571666b43b.png?wh=6400x3832\" alt=\"图片\" title=\"利用好 AI 的优势，智能填充\"></p><h3><strong>✦ 主线任务3：拆分整理</strong></h3><p>在“光线”类目里，我准备了相对较多的零散词条。这种数据储备在其他分类没问题的前提下解决，效果会更好。</p><p>先来搞定拆分输入。现在GPT还没办法直接输入文档，所以我们粘贴数据就好，不用关心格式和词条里各个描述维度的位置。</p><p><img src=\"https://static001.geekbang.org/resource/image/64/a7/6405c8e3ccc92b68e65f201d54097da7.png?wh=14960x3018\" alt=\"图片\" title=\"拆分输入\"></p><p>用暗号“1”让AI知道输入完事了，接着逐块拿到输出。</p><p><img src=\"https://static001.geekbang.org/resource/image/95/7d/95283ea12f9df2f5b92a418e7799637d.png?wh=12728x3652\" alt=\"图片\" title=\"拆分输出\"></p><p>这个Emoji和二级分类名，除了承担拆分输出的作用，最后我们将数据粘贴到表格文档中的时候，它们还有清晰地划分模块的作用。</p><p>其他比“光线”相对次要的分类，按同样的方式来输入输出即可，也可以参考“色彩”分类，按需定义差异化的输出表格。你想自动配图也可以，基础课程中我也分享过方法。</p><p><img src=\"https://static001.geekbang.org/resource/image/78/c6/78fd40e7fa917b49818b8b1846178dc6.png?wh=1920x1107\" alt=\"图片\" title=\"整理成果展现\"></p><h2><strong>边整理边用</strong></h2><p>存数据的过程相对枯燥，不过我们不用等材料都整理完了再用来出图，直接来看怎么玩。按惯例还是由首席执行官ChatGPT完成初始画面，我给你安排了一段极简提词器，这是<strong>用于衍生一切复杂提词器产品的精华</strong>。</p><pre><code class=\"language-markdown\">你是一个专业AI画师，请生成一组清晰、明确的关键词来描述一个具体的主题画面。步骤：\n\n1、描述画面细节，重点加粗：\n- 主题\n- 色彩,光线,材质,构图,景别,视角\n- 风格\n\n2、用英文提炼为一个prompt，模版：\n## 🔮 PROMPT\n*Subject,color，...,style --ar w:h* #w:h：appropriate aspect ratio。\n\n---\n主题：枫林日落\n</code></pre><p>这段prompt里，步骤1是精华中的精华，主题+维度。</p><center> \n🤖️ ChatGPT\n</center><p><img src=\"https://static001.geekbang.org/resource/image/17/44/17d72c90a5662522e76859256b56ab44.png?wh=5882x1800\" alt=\"图片\"></p><p>绘图词典已经囊括了色彩、光线、材质、构图、景别、视角等等画面细节，如果你还有精确控制画面的需求，比如说把GPT生成的天青色改成雾茫茫，从词典中挑出目标词汇来替换即可。下面是一个调整后的示例。</p><center> \n 🪄 Image Prompt（Midjourney）\n</center><pre><code class=\"language-markdown\">Maple Forest Sunset, cozycore, soft light, progressive composition, romantic atmasphere, Editorial photo --ar 16:9\n</code></pre><center> \n🗣️ 人话\n</center><pre><code class=\"language-markdown\">枫林日落，舒适内核，软光，渐进式构图，浪漫氛围，编辑精选照片，画幅比例 16:9\n</code></pre><center> \n🤖️ Midjourney\n</center><p><img src=\"https://static001.geekbang.org/resource/image/74/8b/748bfe35daf171a367d1871eb6e70a8b.png?wh=2400x727\" alt=\"\" title=\"啥也不懂也能画\"></p><h2>小黑板</h2><p>这节课我们使用ChatGPT来整理材料。要记得，整理之前，思考先行。</p><p><strong>我们不是为了整理而整理，而是通过这个方式，掌握将ChatGPT结合到实际需求场景的思路</strong>，把主动的整理和实践中的思考结合起来，再配合整理过程中的“评级”和“备注”，把碎片化知识吃透。</p><p>我分享了3种实用的方法，让整理更轻松。</p><p><img src=\"https://static001.geekbang.org/resource/image/4d/27/4d5819f80f31443fddb68cdf4041b427.png?wh=1920x612\" alt=\"图片\" title=\"思考先行\"></p><p>以“AI绘图词典”为例，我展示了使用GPT来整理凌乱的信息碎片的方法。首先从需求侧切入，捋出基础的7个整理需求和需要重点关注的拆分和智能校对。可以看到，因为需求繁多，不断改模版的方式就显得很低效，所以我建议设计一个兼收并蓄的prompt，方便打包解决。设计初始prompt之后，我们再学习一种主动迭代的方法，让AI指导整理逻辑上存在的不足，让后续的工作更加缜密。</p><p><img src=\"https://static001.geekbang.org/resource/image/c8/8f/c86a632ee9c0df3ebd64bb6f68e2d08f.png?wh=1920x545\" alt=\"图片\" title=\"2 个兼容并蓄的方法\"></p><p>整理的主线是针对手头已有的零碎信息，因为有个人的思考投入，整理成果才能真正变得好用。整理的支线是设计一行兼容小白的指令，实现空手也能套白狼。通过整理实例，希望你能掌握5条整理技巧。</p><ol>\n<li>允许AI自发输出理解，明牌执行。</li>\n<li>在GPT对话框中对数据进行聚类、自动排序。</li>\n<li>一行指令拆分长输入/输出。</li>\n<li>智能数据校对，防止错漏和重复。</li>\n<li>用好AI的优势，智能填充更多内容。</li>\n</ol><p><strong>借由解决“文件整理”这个问题，你还可以展望其他的应用可能性。</strong>除了本节的AI绘图词典整理，你还可以将这个方法用到文件归档、整理网络收藏夹、笔记、图片和信息等等，或者是针对高品质的交流群，用来总结群聊重点并归类。</p><p>如果需要文件权限和自动化的整理，还可以要求GPT输出Python解决方案，一般就是利用os库来读取本地文件，自动操作。本质上它们都是分类并整理，利用强大的AI来消灭碎片信息，对于个人的知识体系化形成，还有更大的价值。</p><p><strong>要点：</strong></p><p><img src=\"https://static001.geekbang.org/resource/image/30/1d/307d1c08c2bf600b80fb900848cbf91d.png?wh=2458x920\" alt=\"图片\" title=\"小彩蛋[br]用于整理的 prompt：ChatGPT x Mermaid x fontawesome 图标嵌入\"></p><h2>踏浪扬帆</h2><p>假如你手上什么都没有，用“空手套白狼”的方式试试能否整成功，然后参考这一节的方法，自选整理目标，尽量将手头的碎片化材料串成体系。</p><p>期待在评论区看到你的思考或感受分享，也欢迎你将这节课分享给感兴趣的朋友们，戳此加入<a href=\"http://jinshuju.net/f/oI1KKM\">课程交流群</a>，我们下节课再会。</p><h2>附：整理 prompt</h2><ul>\n<li>适用：ChatGPT。</li>\n<li>表现更佳：GPT-4。</li>\n<li>字数：540</li>\n<li>声明：该prompt仅供个人参考学习，未经授权不可商用。</li>\n</ul><pre><code class=\"language-markdown\">你是一位精通智能绘画领域的画师。请根据以下说明，使用表格对用户提供的数据进行整理和校对。\n\n初始化模版：{\n## 📝 菜单：\n- 使用表格展现简洁的指令菜单（4列：功能emoji、指令、描述、默认值）#不要使用代码块回复。\n- 回复：“请确认你的需求，示例：/oops 色彩”\n}\n\n## 指令：\n/datas：用户可能会拆分多次输入，中途仅回复\"👌收到\"，直到用户说\"1\"——&gt;自动触发/output&nbsp;\n/type：表格列=&lt;序号+phrase+中文+评级+备注&gt;(默认)\n\t- \"评级\"只有🌟和🌟🌟，原数据未标示的留空\n\t- 如果\"中文\"为空，填充一个翻译\n\t- 原括号内的信息为备注，未标示的留空\n/sort: &lt;相似度(默认)，字母表顺序 &gt; #自动排序规则\n/output: 进行二级归类和排序——&gt;自动书写纠错、去重——&gt;(`Subclass 1`——&gt;用户回\"1\"——&gt;`Subclass 2`）——&gt;全部输出，自动触发/check。\n/check: 整体数据校对。输出模版：\n## 📊 数据校对\n- 用列表输出结果统计:&lt;词条统计+检查遗漏+纠错+去重&gt;\n- 确认用户是否满意——&gt;Y=完成，N=返回到适当的步骤进行修改。\n\n/fill：用户提供一个分类名——&gt;是否有已整理的输出——&gt;Y=补充 30 组词条，N=请用户提供需要整理的数据\n/oops：用户是新手，他会输入一个分类名，请按&lt;序号+phrase+中文+简介&gt;填充 30 组整理好的数据表格。\n\n---\n## 要求：\n- 为输出的Subclass标题搭配一个合适的emoji，例如：## 🔦 illumination\n- phrase默认转换为小写，专有名词如Pixar、POV：保留严谨的大写\n- 如果phrase为色彩类型，在输出中增加一个\"色卡\"列--&gt;phrase是否可转换为Hex value，Y=显示 ![`Color`]([https://dummyimage.com/24/value/ffffff.png&amp;text=%20)--&gt;N=留空。\n- 表格列：默认左对齐\n- 输出见解时，使用简洁的描述\n- 请一步一步思考\n</code></pre>","comments":[{"had_liked":false,"id":377168,"user_name":"peter","can_delete":false,"product_type":"c1","uid":1058183,"ip_address":"北京","ucode":"261C3FC001DE2D","user_header":"https://static001.geekbang.org/account/avatar/00/10/25/87/f3a69d1b.jpg","comment_is_top":false,"comment_ctime":1688021752,"is_pvip":false,"replies":[{"id":137450,"content":"首先需要一个音色提取的AI，采样就能生成同音色的声音，然后根据文本输出新的音频。这块Meta有在做，近期应该能开放测试。\n\n需要一个AI，生成旋律，然后把第一步的人声变成歌曲哼唱，假如Meta也实现了，那第一步就能解决。\n\n接下来需要一个生成BGM的AI、谷歌MusicLM和Huggingface上面都有解决方案，不过目前不能指定时长、质量也还不高。\n\n","user_name":"作者回复","user_name_real":"编辑","uid":3588216,"ctime":1688046502,"ip_address":"广东","comment_id":377168,"utype":1}],"discussion_count":2,"race_medal":0,"score":2,"product_id":100550701,"comment_content":"AI唱歌，老师上次说需要综合方案，我理解是：不是某一个AI产品能完成此功能，需要综合运用多个AI产品。如果是这样，也可以。请问老师：具体怎么做？用哪些产品组合在一起就可以实现。","like_count":1,"discussions":[{"author":{"id":3588216,"avatar":"https://static001.geekbang.org/account/avatar/00/36/c0/78/15553da1.jpg","nickname":"ᴶᴱᴿ","note":"","ucode":"4E0DADC47389DF","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":622275,"discussion_content":"首先需要一个音色提取的AI，采样就能生成同音色的声音，然后根据文本输出新的音频。这块Meta有在做，近期应该能开放测试。\n\n需要一个AI，生成旋律，然后把第一步的人声变成歌曲哼唱，假如Meta也实现了，那第一步就能解决。\n\n接下来需要一个生成BGM的AI、谷歌MusicLM和Huggingface上面都有解决方案，不过目前不能指定时长、质量也还不高。\n\n","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1688046502,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"广东","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":3588216,"avatar":"https://static001.geekbang.org/account/avatar/00/36/c0/78/15553da1.jpg","nickname":"ᴶᴱᴿ","note":"","ucode":"4E0DADC47389DF","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":622276,"discussion_content":"最后将BGM、人声这些不同的声轨合并渲染，才是你要的文件。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1688046588,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":"广东","group_id":0},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]}]}