{"id":164710,"title":"22 | 微服务架构：微服务化后系统架构要如何改造？","content":"<p>你好，我是唐扬。</p><p>上一节课，我带你了解了单体架构向微服务化架构演进的原因，你应该了解到当系统依赖资源的扩展性出现问题，或者是一体化架构带来的研发成本、部署成本变得难以接受时，我们会考虑对整体系统做微服务化拆分。</p><p>微服务化之后垂直电商系统的架构将会变成下面这样：</p><p><img src=\"https://static001.geekbang.org/resource/image/1d/e9/1d5f1212017c6c22818e413ab74f88e9.jpg?wh=1142*791\" alt=\"\"></p><p>在这个架构中，我们将用户、订单和商品相关的逻辑抽取成服务独立的部署，原本的Web工程和队列处理程序将不再直接依赖缓存和数据库，而是通过调用服务接口查询存储中的信息。</p><p>有了构思和期望之后，为了将服务化拆分尽快落地，你们决定抽调主力研发同学共同制定拆分计划。但是仔细讨论后你们发现，虽然对服务拆分有了大致的方向可还是有很多疑问，比如：</p><ul>\n<li>服务拆分时要遵循哪些原则？</li>\n<li>服务的边界如何确定？服务的粒度是怎样的？</li>\n<li>在服务化之后会遇到哪些问题呢？我们又将如何来解决？</li>\n</ul><p>当然，你也许想知道微服务拆分的具体操作过程和步骤是怎样的，但是这部分内容涉及的知识点比较多，不太可能在一次课程中把全部内容涵盖到。而且《DDD实战课》中已经侧重讲解了微服务化拆分的具体过程，你可以借鉴。</p><p>而上面这三点内容会影响服务化拆分的效果，但在实际的项目中经常被大部分人忽略，所以是我们本节课的重点内容。我希望你能把本节课的内容和自身的业务结合起来体会，思考业务服务化拆分的方式和方法。</p><!-- [[[read_end]]] --><h2>微服务拆分的原则</h2><p>之前你维护的一体化架构就像是一个大的蜘蛛网，不同功能模块错综复杂地交织在一起，方法之间调用关系非常的复杂，导致你修复了一个Bug可能会引起另外多个Bug，整体的维护成本非常高。同时，数据库较弱的扩展性也限制了服务的扩展能力</p><p><strong>出于上述考虑，</strong>你要对架构做拆分。但拆分并不像听上去那么简单，这其实就是将整体工程重构甚至重写的过程。你需要将代码拆分到若干个子工程里面，再将这些子工程通过一些通信方式组装起来，这对架构是很大的调整，需要跨多个团队协作完成。</p><p>所以在开始拆分之前你需要明确几个拆分的原则，否则就会事倍功半甚至对整体项目产生不利的影响。</p><p><strong>原则一，做到单一服务内部功能的高内聚和低耦合。</strong>也就是说每个服务只完成自己职责之内的任务，对于不是自己职责的功能交给其它服务来完成。说起来你可能觉得理所当然对这一点不屑一顾，但很多人在实际开发中，经常会出现一些问题。</p><p>比如，我之前的项目中有用户服务和内容服务，用户信息中有“是否为认证用户”字段。组内有个同学在内容服务里有这么一段逻辑：如果用户认证字段等于1，代表是认证用户，那么就把内容权重提升。问题是判断用户是否为认证用户的逻辑应该内聚在用户服务内部，而不应该由内容服务判断，否则认证的逻辑一旦变更内容服务也需要一同跟着变更，这就不满足高内聚、低耦合的要求了。所幸我们在Review代码时及时发现了这个问题，并在服务上线之前修复了它。</p><p><strong>原则二，你需要关注服务拆分的粒度，先粗略拆分再逐渐细化。</strong>在服务拆分的初期，你其实很难确定服务究竟要拆分成什么样。但是从“微服务”这几个字来看，服务的粒度貌似应该足够小，甚至有“一方法一服务”的说法。不过服务多了也会带来问题，像是服务个数的增加会增加运维的成本。再比如原本一次请求只需要调用进程内的多个方法，现在则需要跨网络调用多个RPC服务，在性能上肯定会有所下降。</p><p><strong>所以我推荐的做法是：</strong>拆分初期可以把服务粒度拆得粗一些，后面随着团队对于业务和微服务理解的加深，再考虑把服务粒度细化。比如对于一个社区系统来说，你可以先把和用户关系相关的业务逻辑，都拆分到用户关系服务中，之后，再把比如黑名单的逻辑独立成黑名单服务。</p><p><strong>原则三，拆分的过程，要尽量避免影响产品的日常功能迭代。</strong>也就是说，要一边做产品功能迭代，一边完成服务化拆分。</p><p><strong>还是拿我之前维护的一个项目举例。</strong>我曾经在竞品对手快速发展的时期做了服务的拆分，拆分的方式是停掉所有业务开发全盘推翻重构，结果错失了产品发展的最佳机会，最终败给了竞争对手。因此，我们的拆分只能在现有一体化系统的基础上不断剥离业务独立部署，<strong>剥离的顺序你可以参考以下几点：</strong></p><p>1.优先剥离比较独立的边界服务（比如短信服务、地理位置服务），从非核心的服务出发减少拆分对现有业务的影响，也给团队一个练习、试错的机会；</p><p>2.当两个服务存在依赖关系时优先拆分被依赖的服务。比如内容服务依赖于用户服务获取用户的基本信息，那么如果先把内容服务拆分出来，内容服务就会依赖于一体化架构中的用户模块，这样还是无法保证内容服务的快速部署能力。</p><p>所以正确的做法是理清服务之间的调用关系，比如内容服务会依赖用户服务获取用户信息，互动服务会依赖内容服务，所以要按照先用户服务再内容服务，最后互动服务的顺序来进行拆分。</p><p><strong>原则四，服务接口的定义要具备可扩展性。</strong>服务拆分之后，由于服务是以独立进程的方式部署，所以服务之间通信就不再是进程内部的方法调用而是跨进程的网络通信了。在这种通信模型下服务接口的定义要具备可扩展性，否则在服务变更时会造成意想不到的错误。</p><p><strong>在之前的项目中，</strong>某一个微服务的接口有三个参数，在一次业务需求开发中，组内的一个同学将这个接口的参数调整为了四个，接口被调用的地方也做了修改，结果上线这个服务后却不断报错，无奈只能回滚。</p><p>这是因为这个接口先上线后参数变更成了四个，但是调用方还未变更还是在调用三个参数的接口，那就肯定会报错了。所以服务接口的参数类型最好是封装类，这样如果增加参数就不必变更接口的签名，而只需要在类中添加字段就可以了。</p><h2>微服务化带来的问题和解决思路</h2><p>那么依据这些原则将系统做微服务拆分之后，是不是就可以一劳永逸解决所有问题了呢？当然不是。</p><p>微服务化只是一种架构手段，有效拆分后可以帮助实现服务的敏捷开发和部署。但是由于将原本一体化架构的应用拆分成了多个通过网络通信的分布式服务，为了在分布式环境下协调多个服务正常运行，就必然引入一定的复杂度，这些复杂度主要体现在以下几个方面：</p><p>1.服务接口的调用不再是同一进程内的方法调用而是跨进程的网络调用，这会增加接口响应时间的增加。此时我们就要选择高效的服务调用框架，同时接口调用方需要知道服务部署在哪些机器的哪个端口上，这些信息需要存储在一个分布式一致性的存储中，<strong>于是就需要引入服务注册中心，</strong>这一点，是我在24讲会提到的内容。不过在这里我想强调的是，注册中心管理的是服务完整的生命周期，包括对于服务存活状态的检测。</p><p>2.多个服务之间有着错综复杂的依赖关系。一个服务会依赖多个其它服务也会被多个服务所依赖，那么一旦被依赖的服务的性能出现问题产生大量的慢请求，就会导致依赖服务的工作线程池中的线程被占满，依赖的服务也会出现性能问题。接下来问题就会沿着依赖网逐步向上蔓延，直到整个系统出现故障为止。</p><p>为了避免发生这种情况，我们需要引入服务治理体系针对出问题的服务采用熔断、降级、限流、超时控制的方法，使问题被限制在单一服务中，保护服务网络中的其它服务不受影响。</p><p>3.服务拆分到多个进程后，一条请求的调用链路上涉及多个服务，那么一旦这个请求的响应时间增长或者是出现错误，我们就很难知道是哪一个服务出现的问题。另外，整体系统一旦出现故障，很可能外在的表现是所有服务在同一时间都出现了问题，你在问题定位时很难确认哪一个服务是源头，<strong>这就需要引入分布式追踪工具，以及更细致的服务端监控报表。</strong></p><p>我在25讲和30讲会详细地剖析这个内容，<strong>在这里我想强调的是，</strong>监控报表关注的是依赖服务和资源的宏观性能表现；分布式追踪关注的是单一慢请求中的性能瓶颈分析，两者需要结合起来帮助你来排查问题。</p><p>以上这些微服务化后在开发方面引入的问题，就是接下来“分布式服务篇”和“维护篇”的主要讨论内容。</p><p>总的来说，微服务化是一个很大的话题，在微服务开发和维护时，你也许会在很短时间就把微服务拆分完成，但是你可能会花相当长的时间来完善服务治理体系。接下来的内容会涉及一些常用微服务中间件的原理和使用方式，你可以使用以下的方式更好地理解后面的内容：</p><ul>\n<li>快速完成中间件的部署运行，建立对它感性的认识；</li>\n<li>阅读它的文档中基本原理和架构设计部分；</li>\n<li>必要时阅读它的源码，加深对它的理解，这样可以帮助你在维护你的微服务时排查中间件引起的故障和解决性能问题。</li>\n</ul><h2>课程小结</h2><p>本节课，为了能够指导你更好地进行服务化的拆分，我带你了解了微服务化拆分的原则，内容比较清晰。在这里我想延伸一些内容：</p><p>1.“康威定律”提到设计系统的组织其产生的设计等同于组织间的沟通结构。通俗一点说，就是你的团队组织结构是什么样的你的架构就会长成什么样。</p><p>如果你的团队分为服务端开发团队、DBA团队、运维团队、测试团队，那么你的架构就是一体化的，所有的团队共同为一个大系统负责，团队内成员众多，沟通成本就会很高；而如果你想实现微服务化的架构，<strong>那么你的团队也要按照业务边界拆分，</strong>每一个模块由一个自治的小团队负责，这个小团队里面有开发、测试、运维和DBA，这样沟通就只发生在这个小团队内部，沟通的成本就会明显降低。</p><p>2.微服务化的一个目标是减少研发的成本，其中也包括沟通的成本，所以小团队内部成员不宜过多。</p><p>按照亚马逊CEO贝佐斯的“两个披萨”的理论，如果两个披萨不够你的团队吃，那么你的团队就太大了需要拆分，所以一个小团队包括开发、运维、测试以6～8个人为最佳；</p><p>3.如果你的团队人数不多还没有做好微服务化的准备，而你又感觉到研发和部署的成本确实比较高，那么一个折中的方案是<strong>你可以优先做工程的拆分。</strong></p><p>比如你使用的是Java语言，你可以依据业务的边界将代码拆分到不同的子工程中，然后子工程之间以jar包的方式依赖，这样每个子工程代码量减少可以减少打包时间；并且子工程代码内部可以做到高内聚低耦合，一定程度上减少研发的成本，也不失为一个不错的保守策略。</p><h2>一课一思</h2><p>结合你在实际微服务改造中的经验，可以和我说说你在微服务拆分后都遇到了哪些问题吗？你是如何解决的呢？欢迎在留言区与我分享你的经验。</p><p>最后，感谢你的阅读，如果这篇文章让你有所收获，也欢迎你将它分享给更多的朋友。</p>","neighbors":{"left":{"article_title":"21 | 系统架构：每秒1万次请求的系统要做服务化拆分吗？","id":164025},"right":{"article_title":"23 | RPC框架：10万QPS下如何实现毫秒级的服务调用？","id":165765}},"comments":[{"had_liked":false,"id":150741,"user_name":"Stalary","can_delete":false,"product_type":"c1","uid":1101749,"ip_address":"","ucode":"F69AFF7C958D31","user_header":"https://static001.geekbang.org/account/avatar/00/10/cf/b5/d1ec6a7d.jpg","comment_is_top":false,"comment_ctime":1573606305,"is_pvip":false,"replies":[{"id":"57973","content":"是的","user_name":"作者回复","user_name_real":"唐扬","uid":"1448977","ctime":1573610794,"ip_address":"","comment_id":150741,"utype":1}],"discussion_count":2,"race_medal":0,"score":"108947788705","product_id":100035801,"comment_content":"微服务化之后一些读库操作变成了远程调用，很多多次读的操作都要修改为批量读取来减少网络耗时，这里的改动还是很大的，甚至一些要求响应时间很高的，还需要做本地缓存&#47;","like_count":25,"discussions":[{"author":{"id":1448977,"avatar":"https://static001.geekbang.org/account/avatar/00/16/1c/11/4b45993d.jpg","nickname":"唐扬","note":"","ucode":"1AF4C4A4DBC6EF","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":474255,"discussion_content":"是的","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1573610794,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1196531,"avatar":"https://static001.geekbang.org/account/avatar/00/12/41/f3/8bca4aba.jpg","nickname":"普通熊猫 ଘ(੭ˊ꒳​ˋ)੭✧","note":"","ucode":"7FEF9C72B4801B","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":57083,"discussion_content":"即使不做微服务话，多次调用、缺少缓存这样的设计也撑不了多久，注定要改的","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1574566065,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":151735,"user_name":"涛","can_delete":false,"product_type":"c1","uid":1082553,"ip_address":"","ucode":"11E748CBFE0045","user_header":"https://static001.geekbang.org/account/avatar/00/10/84/b9/f4c1bfaf.jpg","comment_is_top":false,"comment_ctime":1573782767,"is_pvip":false,"replies":[{"id":"58453","content":"这个只能保证最终一致性，比如如果有失败的，想办法把数据修复","user_name":"作者回复","user_name_real":"唐扬","uid":"1448977","ctime":1573867387,"ip_address":"","comment_id":151735,"utype":1}],"discussion_count":5,"race_medal":0,"score":"74588226799","product_id":100035801,"comment_content":"老师好，我们在做微服务项目的时候。碰到最难受的问题就是:比如一个流程要调用三四个服务，前两个调用成功了，第三个失败了。类似的这种情况，该怎么处理呢？","like_count":18,"discussions":[{"author":{"id":1448977,"avatar":"https://static001.geekbang.org/account/avatar/00/16/1c/11/4b45993d.jpg","nickname":"唐扬","note":"","ucode":"1AF4C4A4DBC6EF","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":474595,"discussion_content":"这个只能保证最终一致性，比如如果有失败的，想办法把数据修复","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1573867387,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1196531,"avatar":"https://static001.geekbang.org/account/avatar/00/12/41/f3/8bca4aba.jpg","nickname":"普通熊猫 ଘ(੭ˊ꒳​ˋ)੭✧","note":"","ucode":"7FEF9C72B4801B","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":57088,"discussion_content":"retry, or rollback，重试通常比回滚更容易设计，时间允许就多重试几次，时间不允许就少重试几次，做好幂等，做好最终失败的报警和人工修复机制","likes_number":4,"is_delete":false,"is_hidden":false,"ctime":1574566451,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1463493,"avatar":"https://static001.geekbang.org/account/avatar/00/16/54/c5/5b2dc048.jpg","nickname":"  ","note":"","ucode":"3836B7ABB21414","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":240994,"discussion_content":"tcc,saga","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1587392818,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1447657,"avatar":"https://static001.geekbang.org/account/avatar/00/16/16/e9/edc4b298.jpg","nickname":"光哥","note":"","ucode":"3C45349BD03F23","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":51113,"discussion_content":"补充一下，这种情况往往还需要分布式事务，增加了开发的复杂性，老师怎么办呢？","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1573812513,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":1,"child_discussions":[{"author":{"id":2586341,"avatar":"","nickname":"石头","note":"","ucode":"EB3C9A277C7B0C","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1447657,"avatar":"https://static001.geekbang.org/account/avatar/00/16/16/e9/edc4b298.jpg","nickname":"光哥","note":"","ucode":"3C45349BD03F23","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":370006,"discussion_content":"分布式事务封装成基础组件单独由人维护就好了","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1619249174,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":51113,"ip_address":""},"score":370006,"extra":""}]}]},{"had_liked":false,"id":150913,"user_name":"小喵喵","can_delete":false,"product_type":"c1","uid":1062444,"ip_address":"","ucode":"FDBBB2A59DB8B6","user_header":"https://static001.geekbang.org/account/avatar/00/10/36/2c/8bd4be3a.jpg","comment_is_top":false,"comment_ctime":1573626085,"is_pvip":false,"discussion_count":1,"race_medal":0,"score":"65998135525","product_id":100035801,"comment_content":"微服务拆分的原则:<br>原则一，做到单一服务内部功能的高内聚，和低耦合<br>原则二，你需要关注服务拆分的粒度，先粗略拆分，再逐渐细化。<br>原则三，拆分的过程，要尽量避免影响产品的日常功能迭代，也就是说，要一边做产品功能迭代，一边完成服务化拆分。<br>原则四，服务接口的定义要具备可扩展性。","like_count":14,"discussions":[{"author":{"id":1253310,"avatar":"https://static001.geekbang.org/account/avatar/00/13/1f/be/551454e0.jpg","nickname":"zxy","note":"","ucode":"FFAA3F6667305D","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":380234,"discussion_content":"mark","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1624405287,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":151060,"user_name":"Hwan","can_delete":false,"product_type":"c1","uid":1205627,"ip_address":"","ucode":"A728C6790511BD","user_header":"https://static001.geekbang.org/account/avatar/00/12/65/7b/66b9befd.jpg","comment_is_top":false,"comment_ctime":1573649179,"is_pvip":false,"replies":[{"id":"58448","content":"这样不太好，服务依赖的资源最好不要和其他服务共享，否则一旦这个资源变更了，我们很可能会漏掉其他服务；再有就是如果其他服务对这个资源有不当的使用，那么也会影响到你的服务","user_name":"作者回复","user_name_real":"唐扬","uid":"1448977","ctime":1573867104,"ip_address":"","comment_id":151060,"utype":1}],"discussion_count":4,"race_medal":0,"score":"31638420251","product_id":100035801,"comment_content":"然后想问下老师，就是我们的用户服务也是单独分出来了，有的内容放在了缓存里面了，但是目前除了去调用用户服务的接口获得数据外，有的时候是直接在其他服务里面调用用户的redis里面的数据的，感觉这样比较快，比调用接口快，然后想问下，按照微服务的话，这种放在缓存供其他服务调用是合理的吗？是不是最好还是缓存也分开，然后每次都得调用接口，然后接口里面调用缓存会比较好啊，希望老师解答，谢谢老师","like_count":7,"discussions":[{"author":{"id":1448977,"avatar":"https://static001.geekbang.org/account/avatar/00/16/1c/11/4b45993d.jpg","nickname":"唐扬","note":"","ucode":"1AF4C4A4DBC6EF","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":474350,"discussion_content":"这样不太好，服务依赖的资源最好不要和其他服务共享，否则一旦这个资源变更了，我们很可能会漏掉其他服务；再有就是如果其他服务对这个资源有不当的使用，那么也会影响到你的服务","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1573867104,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":2586341,"avatar":"","nickname":"石头","note":"","ucode":"EB3C9A277C7B0C","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":370008,"discussion_content":"存储和缓存其实应该是维持在一个服务之内好，没必要拆成两个服务。对外是收敛的，从数据角度来说。微服务点用的开发成本可以修改的极低，前提是对调用再做一些包封装，这个也是可以抽象的。不会比调用redis好高。\n从服务收敛角度来说绝对不应该把服务内的存储直接暴露给别的团队","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1619249480,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1196531,"avatar":"https://static001.geekbang.org/account/avatar/00/12/41/f3/8bca4aba.jpg","nickname":"普通熊猫 ଘ(੭ˊ꒳​ˋ)੭✧","note":"","ucode":"7FEF9C72B4801B","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":57094,"discussion_content":"接口不一定是微服务的接口，也可以是jar包里的接口。","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1574566777,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":1,"child_discussions":[{"author":{"id":1205627,"avatar":"https://static001.geekbang.org/account/avatar/00/12/65/7b/66b9befd.jpg","nickname":"Hwan","note":"","ucode":"A728C6790511BD","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1196531,"avatar":"https://static001.geekbang.org/account/avatar/00/12/41/f3/8bca4aba.jpg","nickname":"普通熊猫 ଘ(੭ˊ꒳​ˋ)੭✧","note":"","ucode":"7FEF9C72B4801B","race_medal":0,"user_type":1,"is_pvip":true},"discussion":{"id":60447,"discussion_content":"嗯嗯，感谢","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1574731933,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":57094,"ip_address":""},"score":60447,"extra":""}]}]},{"had_liked":false,"id":150851,"user_name":"吃饭饭","can_delete":false,"product_type":"c1","uid":1231549,"ip_address":"","ucode":"95CFA07CDA2957","user_header":"https://static001.geekbang.org/account/avatar/00/12/ca/bd/a51ae4b2.jpg","comment_is_top":false,"comment_ctime":1573616904,"is_pvip":false,"discussion_count":2,"race_medal":0,"score":"23048453384","product_id":100035801,"comment_content":"服务接口修改版本号问题；服务间的循环依赖问题；传输协议的选型很重要，因为牵扯到序列化问题；链路追踪能及时发现报错日志；点太多啦：）","like_count":5,"discussions":[{"author":{"id":1217712,"avatar":"https://static001.geekbang.org/account/avatar/00/12/94/b0/b073fe8b.jpg","nickname":"aMaMiMoU","note":"","ucode":"AF1E6CA541E482","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":296594,"discussion_content":"循环依赖是不是正常的业务场景设计时应该避免掉的。猜楼主要表达的可能是服务间多级/层依赖问题","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1596597225,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1246178,"avatar":"https://static001.geekbang.org/account/avatar/00/13/03/e2/5768d26e.jpg","nickname":"inrtyx","note":"","ucode":"81CD18FF34ABAB","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":188389,"discussion_content":"服务间的循环依赖问题，怎么解决","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1582810972,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":150824,"user_name":"mickey","can_delete":false,"product_type":"c1","uid":1051663,"ip_address":"","ucode":"8B490C2DDE4010","user_header":"https://static001.geekbang.org/account/avatar/00/10/0c/0f/93d1c8eb.jpg","comment_is_top":false,"comment_ctime":1573613818,"is_pvip":false,"replies":[{"id":"58445","content":"是的","user_name":"作者回复","user_name_real":"唐扬","uid":"1448977","ctime":1573866993,"ip_address":"","comment_id":150824,"utype":1}],"discussion_count":1,"race_medal":0,"score":"18753483002","product_id":100035801,"comment_content":"微服务拆分以后最大的问题是故障的排查与定位问题。<br>","like_count":4,"discussions":[{"author":{"id":1448977,"avatar":"https://static001.geekbang.org/account/avatar/00/16/1c/11/4b45993d.jpg","nickname":"唐扬","note":"","ucode":"1AF4C4A4DBC6EF","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":474281,"discussion_content":"是的","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1573866993,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":180787,"user_name":"AngryApe","can_delete":false,"product_type":"c1","uid":1414971,"ip_address":"","ucode":"E0125A8D2AC84B","user_header":"https://static001.geekbang.org/account/avatar/00/15/97/3b/c98b68c1.jpg","comment_is_top":false,"comment_ctime":1582387557,"is_pvip":false,"discussion_count":1,"race_medal":0,"score":"14467289445","product_id":100035801,"comment_content":"唐老师，请教个问题，在微服务化落地以后会有基础服务和业务服务的区分，这时候会出现两个问题：<br>1. 基础服务的改动会影响到很多上层业务服务，从而带来很大量的回归测试任务。<br>2. 随着业务的发展，经常需要基础服务跟着改动，对基础服务团队来说被业务团队牵着鼻子走。以订单服务为例，经常会有各种各样的枚举值或者数据库字段需要添加进来。<br>综上，当需求来临时，怎么以更小的成本去实现？","like_count":4,"discussions":[{"author":{"id":2756576,"avatar":"https://static001.geekbang.org/account/avatar/00/2a/0f/e0/b53a7701.jpg","nickname":"骑车上天空","note":"","ucode":"364365E2721122","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":582883,"discussion_content":"应该是做扩展而不是改动","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1659752182,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":"广东"},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":168985,"user_name":"吕超","can_delete":false,"product_type":"c1","uid":1740409,"ip_address":"","ucode":"B36883984BE16B","user_header":"https://static001.geekbang.org/account/avatar/00/1a/8e/79/f9d5dd3a.jpg","comment_is_top":false,"comment_ctime":1578232791,"is_pvip":false,"replies":[{"id":"66187","content":"这个有时间要问问老贝了：）","user_name":"作者回复","user_name_real":"唐扬","uid":"1448977","ctime":1578727918,"ip_address":"","comment_id":168985,"utype":1}],"discussion_count":2,"race_medal":0,"score":"14463134679","product_id":100035801,"comment_content":"两个披萨就够我一个人吃。老外一个个人高马大的，胃口咋那么小。","like_count":4,"discussions":[{"author":{"id":1448977,"avatar":"https://static001.geekbang.org/account/avatar/00/16/1c/11/4b45993d.jpg","nickname":"唐扬","note":"","ucode":"1AF4C4A4DBC6EF","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":480394,"discussion_content":"这个有时间要问问老贝了：）","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1578727918,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1018685,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/8b/3d/0c3a2fd4.jpg","nickname":"偶尔复活下","note":"","ucode":"18B1D525CD50D3","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":392281,"discussion_content":"应该不是吃饱，就是每人能分得一块。","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1630933111,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":210717,"user_name":"钱","can_delete":false,"product_type":"c1","uid":1009652,"ip_address":"","ucode":"2C92A243A463D4","user_header":"https://static001.geekbang.org/account/avatar/00/0f/67/f4/9a1feb59.jpg","comment_is_top":false,"comment_ctime":1587814024,"is_pvip":false,"replies":[{"id":"78858","content":"能不碰就不碰吧  尤其是业务前景不明的情况下，就别添乱了","user_name":"作者回复","user_name_real":"唐扬","uid":"1448977","ctime":1588070053,"ip_address":"","comment_id":210717,"utype":1}],"discussion_count":1,"race_medal":0,"score":"10177748616","product_id":100035801,"comment_content":"微服务化基础设施不全会很痛苦，尤其是出现服务问题时，怎么拆最关键的？具体需要看公司大环境，以及组内业务情况，不过设计原则基本是老师所说的吧！目标是提高人效节省成本，使公司业务更好的开展赚更多的钱😍","like_count":2,"discussions":[{"author":{"id":1448977,"avatar":"https://static001.geekbang.org/account/avatar/00/16/1c/11/4b45993d.jpg","nickname":"唐扬","note":"","ucode":"1AF4C4A4DBC6EF","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":493093,"discussion_content":"能不碰就不碰吧  尤其是业务前景不明的情况下，就别添乱了","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1588070053,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":189572,"user_name":"芳菲菲兮满堂","can_delete":false,"product_type":"c1","uid":1000860,"ip_address":"","ucode":"C8D89999C201F1","user_header":"https://static001.geekbang.org/account/avatar/00/0f/45/9c/5b06d143.jpg","comment_is_top":false,"comment_ctime":1584530006,"is_pvip":true,"replies":[{"id":"73092","content":"是的","user_name":"作者回复","user_name_real":"唐扬","uid":"1448977","ctime":1584590498,"ip_address":"","comment_id":189572,"utype":1}],"discussion_count":3,"race_medal":1,"score":"5879497302","product_id":100035801,"comment_content":"这个微服务的编译依赖其他的微服务的 版本管理很是难受","like_count":1,"discussions":[{"author":{"id":1448977,"avatar":"https://static001.geekbang.org/account/avatar/00/16/1c/11/4b45993d.jpg","nickname":"唐扬","note":"","ucode":"1AF4C4A4DBC6EF","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":487736,"discussion_content":"是的","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1584590498,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1217712,"avatar":"https://static001.geekbang.org/account/avatar/00/12/94/b0/b073fe8b.jpg","nickname":"aMaMiMoU","note":"","ucode":"AF1E6CA541E482","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":296602,"discussion_content":"如果服务之间存在编译依赖，是不是从另一个角度说明拆分的粒度过细了？是不是类似这种服务依赖的拆分场景也会有一些最佳实践，确实很头疼","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1596598685,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1000860,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/45/9c/5b06d143.jpg","nickname":"芳菲菲兮满堂","note":"","ucode":"C8D89999C201F1","race_medal":1,"user_type":1,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":209724,"discussion_content":"老师 编译依赖有什么实践吗 这些东西破坏了我持续交付体系 发布版本补丁时候要把之前依赖的版本都找回来 目前是通过nexus管理 但是后期想容器化的时候 这块是个拦路虎 没想到要怎么解决这个问题 老师可否提供个思路？","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1584667575,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":172168,"user_name":"空知","can_delete":false,"product_type":"c1","uid":1013283,"ip_address":"","ucode":"C448E98238DD36","user_header":"https://static001.geekbang.org/account/avatar/00/0f/76/23/31e5e984.jpg","comment_is_top":false,"comment_ctime":1579100243,"is_pvip":false,"replies":[{"id":"66902","content":"我觉得是可以的","user_name":"作者回复","user_name_real":"唐扬","uid":"1448977","ctime":1579228399,"ip_address":"","comment_id":172168,"utype":1}],"discussion_count":1,"race_medal":0,"score":"5874067539","product_id":100035801,"comment_content":"老师，问下文中说的 用户服务 和 内容服务 那里，对于内容服务内容的获取鉴权的过程，每次请求都先去用户服务那边判断是否有权限，有权限再走内容服务 没权限直接返回，而 内容服务只是获取内容 不做任何鉴权 这样做可以吗？","like_count":1,"discussions":[{"author":{"id":1448977,"avatar":"https://static001.geekbang.org/account/avatar/00/16/1c/11/4b45993d.jpg","nickname":"唐扬","note":"","ucode":"1AF4C4A4DBC6EF","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":481649,"discussion_content":"我觉得是可以的","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1579228399,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":159789,"user_name":"大鸡腿🍗","can_delete":false,"product_type":"c1","uid":1413499,"ip_address":"","ucode":"38AF8AE00F6166","user_header":"https://static001.geekbang.org/account/avatar/00/15/91/7b/2dd4d0c1.jpg","comment_is_top":false,"comment_ctime":1575789798,"is_pvip":false,"discussion_count":5,"race_medal":0,"score":"5870757094","product_id":100035801,"comment_content":"反驳一点，用户相关的数据有时需要冗余到本服务，跨项目有时查点数据很蛋疼，或者说加点接口，用户服务要排期，如果是冗余到自己的服务，随便加接口。<br>其次改接口成4个参数的时候，应该加个过期注解，保留旧的接口兼容旧的调用，让他们慢慢迁移，然后新增新的接口来实现新的逻辑。其次还有maven的快照版本跟正式版本来解决，虽然我没有去了解过，哈哈","like_count":1,"discussions":[{"author":{"id":1074640,"avatar":"https://static001.geekbang.org/account/avatar/00/10/65/d0/c11d4a31.jpg","nickname":"滴水藏海","note":"","ucode":"9C1F9C91189F69","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":237953,"discussion_content":"我觉得可以适当加缓存，但不要做冗余，耦合太严重了","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1587199964,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":2586341,"avatar":"","nickname":"石头","note":"","ucode":"EB3C9A277C7B0C","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":370009,"discussion_content":"能不冗余就不冗余吧，如果只是因为排期对方来不及加，那是优先级的事，完全可以调整，搞不定可以升级。如果团队很大得做正确的事，否则临时加的未来还是要迁移","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1619249754,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1785464,"avatar":"https://static001.geekbang.org/account/avatar/00/1b/3e/78/ab4f7cbb.jpg","nickname":"风","note":"","ucode":"521EA2C8F5AB58","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":318951,"discussion_content":"我倒觉得冗余可以视业务而定，像一些对数据同步要求不强的业务，像评论区的用户头像和名称，订单里面的用户名称和商家名称，都可以考虑做冗余。像订单经常会涉及大批量数据导出，如果每次都要查缓存，对服务也会带来一部分压力。不过究竟是时间换空间还是空间换时间，还是要具体业务具体分析","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1603890042,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1084267,"avatar":"https://static001.geekbang.org/account/avatar/00/10/8b/6b/394177a8.jpg","nickname":"Alon","note":"","ucode":"34069BD445BE95","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":143512,"discussion_content":"我认为冗余字段不妥，原因不管在哪个地方修改了这个用户信息，就需要同步你这个冗余字段，造成数据的不一致，其次针对跨库跨表可以走ES，用阿里云Dts还可以用canal写到ES，然后走es查询，延迟大概在1s左右这个是可以接受，","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1579511982,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":1,"child_discussions":[{"author":{"id":1584786,"avatar":"https://static001.geekbang.org/account/avatar/00/18/2e/92/e1c38ca6.jpg","nickname":"KamTo  Hung","note":"","ucode":"00D5A6479DB784","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1084267,"avatar":"https://static001.geekbang.org/account/avatar/00/10/8b/6b/394177a8.jpg","nickname":"Alon","note":"","ucode":"34069BD445BE95","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":364116,"discussion_content":"所以说冗余字段是低修改的，减少join","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1617368186,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":143512,"ip_address":""},"score":364116,"extra":""}]}]},{"had_liked":false,"id":153454,"user_name":"Luciano李鑫","can_delete":false,"product_type":"c1","uid":1329995,"ip_address":"","ucode":"5FBE5F86FD5B2C","user_header":"https://static001.geekbang.org/account/avatar/00/14/4b/4b/97926cba.jpg","comment_is_top":false,"comment_ctime":1574238088,"is_pvip":false,"discussion_count":1,"race_medal":0,"score":"5869205384","product_id":100035801,"comment_content":"感觉微服务的拆分像极了面向对象中的类的划分。","like_count":1,"discussions":[{"author":{"id":1259854,"avatar":"https://static001.geekbang.org/account/avatar/00/13/39/4e/f937748b.jpg","nickname":"小小程序猿","note":"","ucode":"DCE81131B24285","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":224690,"discussion_content":"更像包划分","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1586323366,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":342831,"user_name":"郑继强","can_delete":false,"product_type":"c1","uid":1835861,"ip_address":"","ucode":"D4FD83BA632888","user_header":"https://thirdwx.qlogo.cn/mmopen/vi_32/poo31O8Gibev15vZoDCgQlcicuV3n0xShFQHOUWWyhHS7jBD9icbIermHL7moBMxNDFfVmftoOm1azbPgSgVzCGicQ/132","comment_is_top":false,"comment_ctime":1650500972,"is_pvip":true,"discussion_count":0,"race_medal":0,"score":"1650500972","product_id":100035801,"comment_content":"我不太同意老师对认证用户判断的说法，接口设计应该面向数据，而不是面向行为，如果说用户服务去提供一个是否认证用户的接口，那之后又用别的类似的需求，是不是都要不断去加接口。因为这里只是其中一个字段，并不是说需要有逻辑判断。所以我觉得用户服务应该只暴露数据，至于认证用户推内容这种，属于内容服务的逻辑。","like_count":0},{"had_liked":false,"id":340427,"user_name":"温旭升","can_delete":false,"product_type":"c1","uid":2605923,"ip_address":"","ucode":"12AC469FEB563D","user_header":"https://thirdwx.qlogo.cn/mmopen/vi_32/quaAPZib2arYia7XhUQAd83ribCJlM4CNwCMVicwZqyJL8SCrrKxNf84aXe7GF07rib4TOicTgicw2GjO1lSVMich5Japw/132","comment_is_top":false,"comment_ctime":1648808297,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1648808297","product_id":100035801,"comment_content":"老师好，请教两个问题：<br>1、把一个内聚的功能逻辑，是应该设计成微服务，还是设计成类（或函数）在进程内调用问题。我理解，微服务是跨进程的调用，从性能角度，是比不过进程内的过程调用的。微服务的好处服务扩展性较强。那么，对数据处理吞吐量要求较高的场景，按微服务拆分业务处理逻辑，适用吗？<br>2、外部系统调用服务，可先接入服务网关，通过应用服务网关做安全鉴权，保障请求的合法性，但在系统内部的微服务之间的服务调用，还需不需要做接口调用方面的安全处理？老师在实际项目应用中，是怎么考虑及处理这个问题的？","like_count":0},{"had_liked":false,"id":323246,"user_name":"亚林","can_delete":false,"product_type":"c1","uid":1018972,"ip_address":"","ucode":"4A5A6D24314B79","user_header":"https://static001.geekbang.org/account/avatar/00/0f/8c/5c/3f164f66.jpg","comment_is_top":false,"comment_ctime":1637802210,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1637802210","product_id":100035801,"comment_content":"没钱的小老板 能不微服务就不要微服务 ","like_count":0},{"had_liked":false,"id":257230,"user_name":"风","can_delete":false,"product_type":"c1","uid":1785464,"ip_address":"","ucode":"521EA2C8F5AB58","user_header":"https://static001.geekbang.org/account/avatar/00/1b/3e/78/ab4f7cbb.jpg","comment_is_top":false,"comment_ctime":1603889400,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1603889400","product_id":100035801,"comment_content":"微服务拆分也有加剧服务不可信的问题，为了避免服务调用异常导致的这身服务异常，我每次都要try catch一下调用服务，保证自身服务的可用性。由其他服务抛出来的异常，不加已处理的就抛到用户端，出了问题都不好排查，拿接口返回的message搜索自身项目都搜索不到的","like_count":0},{"had_liked":false,"id":237936,"user_name":"互金从业者X","can_delete":false,"product_type":"c1","uid":1080932,"ip_address":"","ucode":"739A6774DDE699","user_header":"https://static001.geekbang.org/account/avatar/00/10/7e/64/b5f10966.jpg","comment_is_top":false,"comment_ctime":1596009698,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1596009698","product_id":100035801,"comment_content":"其实面向对象做不好，就很难去界定单一职责，比如注册这个功能是内聚到用户中心还是给api呢，之前有在推一个服务化的项目，结果最后……一不留心有些微服务就直接给我写成远程DAO的。现在估计很多人的微服务也是这么个情况…… 最后只能折中，做取舍","like_count":0},{"had_liked":false,"id":229403,"user_name":"xiaochao321","can_delete":false,"product_type":"c1","uid":1083596,"ip_address":"","ucode":"8F5AC46CD9400C","user_header":"https://static001.geekbang.org/account/avatar/00/10/88/cc/11b10a6f.jpg","comment_is_top":false,"comment_ctime":1592985805,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1592985805","product_id":100035801,"comment_content":"服务的循环依赖？调用a、b、c三个服务，服务a b 调用成功，调用c失败怎么处理？","like_count":0},{"had_liked":false,"id":206303,"user_name":"木木","can_delete":false,"product_type":"c1","uid":1205341,"ip_address":"","ucode":"B446FD36734E75","user_header":"https://static001.geekbang.org/account/avatar/00/12/64/5d/de0536e8.jpg","comment_is_top":false,"comment_ctime":1586837440,"is_pvip":false,"replies":[{"id":"78094","content":"那是痛苦啊","user_name":"作者回复","user_name_real":"唐扬","uid":"1448977","ctime":1587473314,"ip_address":"","comment_id":206303,"utype":1}],"discussion_count":2,"race_medal":0,"score":"1586837440","product_id":100035801,"comment_content":"我们的微服务，缺少运维啊。都是一个人当两三个人用，开发测试运维都做了。导致各种基建没做好，也没有运维，就是定定位问题就太痛苦了","like_count":0,"discussions":[{"author":{"id":1448977,"avatar":"https://static001.geekbang.org/account/avatar/00/16/1c/11/4b45993d.jpg","nickname":"唐扬","note":"","ucode":"1AF4C4A4DBC6EF","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":491747,"discussion_content":"那是痛苦啊","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1587473314,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":2586341,"avatar":"","nickname":"石头","note":"","ucode":"EB3C9A277C7B0C","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":370010,"discussion_content":"小公司做微服务实在看起来不是明智之举","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1619249829,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":190542,"user_name":"芳菲菲兮满堂","can_delete":false,"product_type":"c1","uid":1000860,"ip_address":"","ucode":"C8D89999C201F1","user_header":"https://static001.geekbang.org/account/avatar/00/0f/45/9c/5b06d143.jpg","comment_is_top":false,"comment_ctime":1584667595,"is_pvip":true,"replies":[{"id":"73293","content":"没太懂……依赖不是maven来管理的？","user_name":"作者回复","user_name_real":"唐扬","uid":"1448977","ctime":1584688925,"ip_address":"","comment_id":190542,"utype":1}],"discussion_count":1,"race_medal":1,"score":"1584667595","product_id":100035801,"comment_content":"<br>老师 编译依赖有什么实践吗 这些东西破坏了我持续交付体系 发布版本补丁时候要把之前依赖的版本都找回来 目前是通过nexus管理 但是后期想容器化的时候 这块是个拦路虎 没想到要怎么解决这个问题 老师可否提供个思路？","like_count":0,"discussions":[{"author":{"id":1448977,"avatar":"https://static001.geekbang.org/account/avatar/00/16/1c/11/4b45993d.jpg","nickname":"唐扬","note":"","ucode":"1AF4C4A4DBC6EF","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":487999,"discussion_content":"没太懂……依赖不是maven来管理的？","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1584688925,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":184187,"user_name":"马里奥的马里奥","can_delete":false,"product_type":"c1","uid":1048423,"ip_address":"","ucode":"6848D9E82B58E3","user_header":"https://static001.geekbang.org/account/avatar/00/0f/ff/67/6ffe3a52.jpg","comment_is_top":false,"comment_ctime":1583244259,"is_pvip":false,"replies":[{"id":"72164","content":"所以要控制好服务的sla","user_name":"作者回复","user_name_real":"唐扬","uid":"1448977","ctime":1584011043,"ip_address":"","comment_id":184187,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1583244259","product_id":100035801,"comment_content":"最明显的问题就是服务之间请求，超时很容易出现。","like_count":0,"discussions":[{"author":{"id":1448977,"avatar":"https://static001.geekbang.org/account/avatar/00/16/1c/11/4b45993d.jpg","nickname":"唐扬","note":"","ucode":"1AF4C4A4DBC6EF","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":485921,"discussion_content":"所以要控制好服务的sla","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1584011043,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":180276,"user_name":"柚子","can_delete":false,"product_type":"c1","uid":1248611,"ip_address":"","ucode":"2F8CC2952E3122","user_header":"https://static001.geekbang.org/account/avatar/00/13/0d/63/85f471e2.jpg","comment_is_top":false,"comment_ctime":1582247357,"is_pvip":false,"replies":[{"id":"70259","content":"是的，服务化不是万能的","user_name":"作者回复","user_name_real":"唐扬","uid":"1448977","ctime":1582513871,"ip_address":"","comment_id":180276,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1582247357","product_id":100035801,"comment_content":"老师最后一段话对我感触挺深，我们的团队总共才十个人左右，但是项目很多。很多功能包括邮件或者短信都是一样需要的。每个项目里面都写确实浪费和累赘。本来是考虑采用微服务，但是看了很多资料感觉没有必要，我们人员也少，所以采取折中方案。先进行工程拆分，把公共的这块短信和邮件拆出来。给所有项目引入！先做个这样的方案。","like_count":0,"discussions":[{"author":{"id":1448977,"avatar":"https://static001.geekbang.org/account/avatar/00/16/1c/11/4b45993d.jpg","nickname":"唐扬","note":"","ucode":"1AF4C4A4DBC6EF","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":484595,"discussion_content":"是的，服务化不是万能的","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1582513871,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":167167,"user_name":"Geek_2e972d","can_delete":false,"product_type":"c1","uid":1291653,"ip_address":"","ucode":"E6BE6173406CD1","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/DYAIOgq83er2VKpfrnY4HBBUbYXeIWGSiaeA0FodG9aibC6ChCcJZ5KGGU4vBl89uHMXAxf3xa3Abm11a5rvjWRw/132","comment_is_top":false,"comment_ctime":1577704864,"is_pvip":false,"replies":[{"id":"65164","content":"事务的场景不多吧","user_name":"作者回复","user_name_real":"唐扬","uid":"1448977","ctime":1577955333,"ip_address":"","comment_id":167167,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1577704864","product_id":100035801,"comment_content":"微服务化后事物该怎么处理？","like_count":0,"discussions":[{"author":{"id":1448977,"avatar":"https://static001.geekbang.org/account/avatar/00/16/1c/11/4b45993d.jpg","nickname":"唐扬","note":"","ucode":"1AF4C4A4DBC6EF","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":479767,"discussion_content":"事务的场景不多吧","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1577955333,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":166742,"user_name":"大象蚂蚁","can_delete":false,"product_type":"c1","uid":1255382,"ip_address":"","ucode":"0066D9CD979C39","user_header":"https://static001.geekbang.org/account/avatar/00/13/27/d6/30456009.jpg","comment_is_top":false,"comment_ctime":1577583215,"is_pvip":false,"replies":[{"id":"64867","content":"额 为啥要随机端口呢","user_name":"作者回复","user_name_real":"唐扬","uid":"1448977","ctime":1577674335,"ip_address":"","comment_id":166742,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1577583215","product_id":100035801,"comment_content":"老师，微服务各子项目的端口设置为随机端口，目前能想到的是在维护上可能比较难。那么随机端口还会造成其他问题吗？","like_count":0,"discussions":[{"author":{"id":1448977,"avatar":"https://static001.geekbang.org/account/avatar/00/16/1c/11/4b45993d.jpg","nickname":"唐扬","note":"","ucode":"1AF4C4A4DBC6EF","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":479610,"discussion_content":"额 为啥要随机端口呢","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1577674335,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":153251,"user_name":"stg609","can_delete":false,"product_type":"c1","uid":1073025,"ip_address":"","ucode":"FB70A75A891BB8","user_header":"https://static001.geekbang.org/account/avatar/00/10/5f/81/1c614f4a.jpg","comment_is_top":false,"comment_ctime":1574208423,"is_pvip":false,"replies":[{"id":"59019","content":"一般先拆数据库","user_name":"作者回复","user_name_real":"唐扬","uid":"1448977","ctime":1574294458,"ip_address":"","comment_id":153251,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1574208423","product_id":100035801,"comment_content":"想问下老师如何拆分数据库又不影响日常功能迭代的？ 是该先拆工程还是先拆数据库呢？","like_count":0,"discussions":[{"author":{"id":1448977,"avatar":"https://static001.geekbang.org/account/avatar/00/16/1c/11/4b45993d.jpg","nickname":"唐扬","note":"","ucode":"1AF4C4A4DBC6EF","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":475094,"discussion_content":"一般先拆数据库","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1574294458,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":152778,"user_name":"chp","can_delete":false,"product_type":"c1","uid":1112415,"ip_address":"","ucode":"F0A2442230CD45","user_header":"https://static001.geekbang.org/account/avatar/00/10/f9/5f/b0a125a9.jpg","comment_is_top":false,"comment_ctime":1574079086,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1574079086","product_id":100035801,"comment_content":"公司现在的项目，用的应该是老师说的折中方法，拆分了很多子模块，但是模块与模块的依赖比较严重，像资源模块，作为基础模块，其他模块基本都要用到这模块的表，老师关于这个，针对这个依赖情况，您有什么好建议吗？如何做到高内聚低耦合","like_count":0},{"had_liked":false,"id":151530,"user_name":"longslee","can_delete":false,"product_type":"c1","uid":1465986,"ip_address":"","ucode":"C24E32E5B1B6F5","user_header":"https://static001.geekbang.org/account/avatar/00/16/5e/82/438c8534.jpg","comment_is_top":false,"comment_ctime":1573736728,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1573736728","product_id":100035801,"comment_content":"打开。wow，这节课似乎学到不少。<br>1. 从认证用户这个例子，联想到分层架构思想，即便有些很简单的逻辑，也不宜越级实现，否则后期维护的时候分散得到处都是。<br>2. 服务接口的参数类型最好是封装类<br>3. “康威定律”听起来很有道理<br>4. 我们团队监控调用链使用的是 pinpoint<br>5. 拆分工程jar包依赖我们也做，采用maven来互相引入，不过也容易出现改动后编译期就出问题，不如微服务运行时来的纯粹。","like_count":0},{"had_liked":false,"id":151424,"user_name":"红袖添香","can_delete":false,"product_type":"c1","uid":1205580,"ip_address":"","ucode":"0E62FA9C4F4E09","user_header":"https://static001.geekbang.org/account/avatar/00/12/65/4c/108db3b5.jpg","comment_is_top":false,"comment_ctime":1573717015,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1573717015","product_id":100035801,"comment_content":"“团队按照业务边界划分”，这个是非常必要的，如果没有对应的人负责，拆分的“高内聚，低耦合”根本无从谈起","like_count":0},{"had_liked":false,"id":151241,"user_name":"高源","can_delete":false,"product_type":"c1","uid":1048887,"ip_address":"","ucode":"751B41FD38EF7D","user_header":"https://static001.geekbang.org/account/avatar/00/10/01/37/12e4c9c9.jpg","comment_is_top":false,"comment_ctime":1573690595,"is_pvip":false,"replies":[{"id":"58450","content":"我的做法一般是把源代码下载下来先把它运行起来，然后想一想它解决的是什么问题，再根据问题来调试代码","user_name":"作者回复","user_name_real":"唐扬","uid":"1448977","ctime":1573867210,"ip_address":"","comment_id":151241,"utype":1}],"discussion_count":3,"race_medal":0,"score":"1573690595","product_id":100035801,"comment_content":"老师阅读开源框架源码这块你们是怎么进行的，理清架构和分析架构开发思想，读开源的源代码我想要的是人家是怎么设计使用利用设计模式反射等开发出来的框架的，我理解学会了可以学习借鉴自己应用到实践中，但苦于看源码有些不懂的，该怎么进行呢","like_count":0,"discussions":[{"author":{"id":1448977,"avatar":"https://static001.geekbang.org/account/avatar/00/16/1c/11/4b45993d.jpg","nickname":"唐扬","note":"","ucode":"1AF4C4A4DBC6EF","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":474412,"discussion_content":"我的做法一般是把源代码下载下来先把它运行起来，然后想一想它解决的是什么问题，再根据问题来调试代码","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1573867210,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1246178,"avatar":"https://static001.geekbang.org/account/avatar/00/13/03/e2/5768d26e.jpg","nickname":"inrtyx","note":"","ucode":"81CD18FF34ABAB","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":188429,"discussion_content":"那你就日志落库，比如前期用mysql，量大用es之类的。或者直接用elk","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1582811918,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1048887,"avatar":"https://static001.geekbang.org/account/avatar/00/10/01/37/12e4c9c9.jpg","nickname":"高源","note":"","ucode":"751B41FD38EF7D","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":51428,"discussion_content":"老师那我问一下我们没有像互联网系统日志量达到TB级别，比较少1到2G最多，但是需要分析日志，虽然有日志文件一个个去找也比较麻烦的，需要通过日志来排查问题，又不能让运维人员去翻日志，有什么好的工具或方法","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1573870245,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":151059,"user_name":"Hwan","can_delete":false,"product_type":"c1","uid":1205627,"ip_address":"","ucode":"A728C6790511BD","user_header":"https://static001.geekbang.org/account/avatar/00/12/65/7b/66b9befd.jpg","comment_is_top":false,"comment_ctime":1573648907,"is_pvip":false,"discussion_count":1,"race_medal":0,"score":"1573648907","product_id":100035801,"comment_content":"刚进公司的时候就是使用的微服务，结合文章的内容，我觉得我们团队在遇到故障之后的问题追踪方面还可以加强下，","like_count":0,"discussions":[{"author":{"id":1103329,"avatar":"https://static001.geekbang.org/account/avatar/00/10/d5/e1/a05a9e22.jpg","nickname":"kyll","note":"","ucode":"2425DCF5753786","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":165678,"discussion_content":"头像和我微信的一样","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1581313543,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":151039,"user_name":"夜空中最亮的星","can_delete":false,"product_type":"c1","uid":1267566,"ip_address":"","ucode":"ADC3E7B6789955","user_header":"https://static001.geekbang.org/account/avatar/00/13/57/6e/b6795c44.jpg","comment_is_top":false,"comment_ctime":1573646448,"is_pvip":false,"replies":[{"id":"58447","content":"欢迎~","user_name":"作者回复","user_name_real":"唐扬","uid":"1448977","ctime":1573867030,"ip_address":"","comment_id":151039,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1573646448","product_id":100035801,"comment_content":"我又回来啦，老师","like_count":0,"discussions":[{"author":{"id":1448977,"avatar":"https://static001.geekbang.org/account/avatar/00/16/1c/11/4b45993d.jpg","nickname":"唐扬","note":"","ucode":"1AF4C4A4DBC6EF","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":474345,"discussion_content":"欢迎~","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1573867030,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":150914,"user_name":"陈 争","can_delete":false,"product_type":"c1","uid":1207155,"ip_address":"","ucode":"A2A1FAC8E32F03","user_header":"https://static001.geekbang.org/account/avatar/00/12/6b/73/fbff84b5.jpg","comment_is_top":false,"comment_ctime":1573626250,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1573626250","product_id":100035801,"comment_content":"我们一开始是按照页面功能进行拆分的，感觉拆的太细了，后来又按照业务合并了一些服务。<br>服务如果拆的太多，一旦修改了接口，沟通成本还是很高的。","like_count":0},{"had_liked":false,"id":150800,"user_name":"啊啊啊哦哦","can_delete":false,"product_type":"c1","uid":1309877,"ip_address":"","ucode":"68C7153ECAAC57","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/RNO4yZyBvic914hewmNNE8iblYDcfv5yGHZ9OnKuCuZXNmGR0F5qV3icKLT2xpMt66GyEpicZVvrmz8A6TIqt92MQg/132","comment_is_top":false,"comment_ctime":1573611442,"is_pvip":false,"replies":[{"id":"58444","content":"1. 是的<br>2. 是的，业务逻辑是在服务层<br>3. web层需要把业务逻辑下沉到服务层，web层也可以区分成用户web和订单web","user_name":"作者回复","user_name_real":"唐扬","uid":"1448977","ctime":1573866986,"ip_address":"","comment_id":150800,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1573611442","product_id":100035801,"comment_content":"老师问你一些我对微服务的困惑。<br>1:服务层是前面分层架构中讲到的service和manager层拆分出来独立部署成一个微服务吗<br>2业务逻辑都是写在服务层吗。比如我下一个订单。web 层直接调用服务层的下单逻辑<br>3。web层需要变动吗。 还是也要变成用户web层。订单web层。  <br>没真正接触过微服务看了网站那些有点乱<br> <br><br>","like_count":0,"discussions":[{"author":{"id":1448977,"avatar":"https://static001.geekbang.org/account/avatar/00/16/1c/11/4b45993d.jpg","nickname":"唐扬","note":"","ucode":"1AF4C4A4DBC6EF","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":474270,"discussion_content":"1. 是的\n2. 是的，业务逻辑是在服务层\n3. web层需要把业务逻辑下沉到服务层，web层也可以区分成用户web和订单web","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1573866986,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":150762,"user_name":"寒溪","can_delete":false,"product_type":"c1","uid":1001970,"ip_address":"","ucode":"67B9F1A1C15A20","user_header":"https://static001.geekbang.org/account/avatar/00/0f/49/f2/25cfa472.jpg","comment_is_top":false,"comment_ctime":1573608158,"is_pvip":false,"discussion_count":0,"race_medal":1,"score":"1573608158","product_id":100035801,"comment_content":"拆分后必然要面临分布式事物","like_count":0},{"had_liked":false,"id":150745,"user_name":"健少","can_delete":false,"product_type":"c1","uid":1099365,"ip_address":"","ucode":"63439F8DC540F6","user_header":"https://static001.geekbang.org/account/avatar/00/10/c6/65/64d1eaed.jpg","comment_is_top":false,"comment_ctime":1573606717,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1573606717","product_id":100035801,"comment_content":"微服务的“拆”，比较讲究，前期怎么拆，后期要如何拆，其实没有做过微服务是很难把握的。","like_count":0},{"had_liked":false,"id":150685,"user_name":"方木木","can_delete":false,"product_type":"c1","uid":1045634,"ip_address":"","ucode":"44E0C9318DF794","user_header":"https://static001.geekbang.org/account/avatar/00/0f/f4/82/466ecee2.jpg","comment_is_top":false,"comment_ctime":1573601497,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1573601497","product_id":100035801,"comment_content":"考试能不能推荐一些微服务相关的书籍和资料","like_count":0}]}