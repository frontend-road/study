{"id":496698,"title":"06｜TDD中的测试（2）：行为验证为什么应该尽量避免使用？","content":"<p>你好，我是徐昊。今天我们来继续学习测试驱动开发中的测试。</p><p>上节课我们介绍了测试的基础结构——四阶段测试，也就是将每个测试都看作四个依次执行的阶段：初始化、执行测试、验证结果和复原。并且，我们还着重介绍了该如何使用状态验证来验证测试的结果。</p><p>今天这节课，我们将介绍另一种验证方式——行为验证，以及为什么你应该尽量避免使用它。</p><h2>验证结果——行为验证</h2><p>行为验证是指通过待测系统与依赖组件（Depended On Component）的交互，来判断待测系统是否满足需求的验证方式。其验证方式如下图所示：</p><p><img src=\"https://static001.geekbang.org/resource/image/58/2e/584a725c04734904939eb6b2cf46a82e.jpg?wh=2248x1212\" alt=\"\"></p><p>行为验证背后的逻辑是，状态的改变是由交互引起的。如果所有的交互都正确，那么就可以<strong>推断</strong>最终的状态也不会错。例如，对于如下的代码：</p><pre><code>interface Counter {\n  void increase(); \n}\n\nclass SUT {\n  public void action(Counter counter) {\n    counter.increase();\n  }\n}\n</code></pre><p>功能需求是SUT的action方法调用计数器Counter使其计数增加。按照状态验证，我们需要从Counter中获取内部计数，然后判断在执行测试前后，计数是否增加。</p><p>而对于行为验证，因为计数增加与否只在于是否调用了increase方法。那么如果SUT调用了increase方法，我们就可以<strong>推测</strong>Counter的计数也必然增加了。</p><p>于是，我们可以将对于读数增加的验证，转化为对于increase方法调用的验证：如果increase方法被调用了，那么我们可以<strong>推测</strong>SUT是满足功能需求的。状态验<strong>果</strong>，行为推<strong>因</strong>。</p><!-- [[[read_end]]] --><p>那么要怎么使用行为验证呢？让我们将命令行参数解析中的测试，改写成行为验证：</p><p><video poster=\"https://static001.geekbang.org/resource/image/76/05/762849d86939179229876ec4da039b05.jpg\" preload=\"none\" controls=\"\"><source src=\"https://media001.geekbang.org/customerTrans/7e27d07d27d407ebcc195a0e78395f55/2726ff4a-17fabec9a15-0000-0000-01d-dbacd.mp4\" type=\"video/mp4\"><source src=\" https://media001.geekbang.org/2764dcdd5eaa482d8a01507a48051785/ce6f2689aba14545b6d16da1f833680c-dc47b8695a2f26d50506ad16b063fb49-sd.m3u8\" type=\"application/x-mpegURL\"></video></p><p>对比状态验证和行为验证，在测试上下文中，我们引入了<strong>测试替身</strong>（Test Double）来作为测试上下文中的依赖组件，然后使用测试替身的验证方法代替了测试框架提供的断言方法。具体到这个例子中，我们使用Mockito API中的verify替换了JUnit API中的assert方法。</p><p>在参数解析的例子中，行为验证和状态验证几乎没什么差别。如果硬要说的话，状态验证稍稍容易懂一些。那么我们为什么要使用行为验证呢？</p><h2>旨在降低测试成本</h2><p>在TDD社区中，行为验证主要是为了降低测试成本。再让我们看一下开篇词中“测试应用”的例子，如果换做行为测试的话，我们就不需要使用实际的数据库了：</p><p><video poster=\"https://static001.geekbang.org/resource/image/76/05/762849d86939179229876ec4da039b05.jpg\" preload=\"none\" controls=\"\"><source src=\"https://media001.geekbang.org/customerTrans/7e27d07d27d407ebcc195a0e78395f55/198b1c85-17fa5eb8aac-0000-0000-01d-dbacd.mp4\" type=\"video/mp4\"><source src=\" https://media001.geekbang.org/2b3b760c03f1442a8844d4cec06b2dc0/bdee8c7ec3ca40739e1df588def1125d-60b4ee524f8bc90faf5c10e81fce2824-sd.m3u8\" type=\"application/x-mpegURL\"></video></p><p>对于类似于数据库这样的进程外组件，我们都可以通过类似的手段加以处理。也就是说，明确指明待测系统如何与进程外组件交互，并以此为基准，验证待测组件的行为是否满足需求。类似的场景还有很多，比如三方支付服务、消息队列（Message Queue）或者其他微服务等等。</p><p>除了进程外组件，还有一种情况是进程内组件的状态难以获得。最典型的例子就是具有图形界面（Graphics User Interface，GUI）的应用，比如Android App、Eclipse RCP等等。在有GUI的情况下，我们需要测试视图（View）与模型（Model）的状态一致。通常视图中的状态难以获取，或者获取成本极高（比如我就有过很多次需要从头写GUI TestDriver的情况）。在这种情况下，也可以使用行为验证来代替状态验证，完成测试。</p><h2>对TDD用处不大</h2><p>无可否认，行为验证是一种有用的技巧，但是<strong>对TDD用处不大</strong>。在<a href=\"https://time.geekbang.org/column/article/494571\">开篇词</a>“测试应用”的例子中，我们是改写的已有测试。而如果重头来一遍的话，你就会发现问题所在了：</p><p><video poster=\"https://static001.geekbang.org/resource/image/76/05/762849d86939179229876ec4da039b05.jpg\" preload=\"none\" controls=\"\"><source src=\"https://media001.geekbang.org/customerTrans/7e27d07d27d407ebcc195a0e78395f55/451e1d6a-17fa5eb8749-0000-0000-01d-dbacd.mp4\" type=\"video/mp4\"><source src=\" https://media001.geekbang.org/866fabe8829e4eb08b7827f8616d0579/0bef74641ede418489c934fb1107abd3-f1d82ce1e5290c483fabee08d78aecd4-sd.m3u8\" type=\"application/x-mpegURL\"></video></p><p>是不是感觉把实现代码先在测试中写了一遍，然后又搬回到生产代码中去了？除了多写了一遍实现代码，到底有什么好处？怎么有一种脱了裤子放屁的感觉？</p><p>除了直观的体验很差之外，行为验证的逻辑也与TDD的核心逻辑冲突。</p><p>上节课我们讲过，状态验证是将测试上下文与待测系统当作一个整体的黑盒验证，而行为验证就是将它们看作分离组件的<strong>白盒验证。</strong></p><p>它的逻辑是<strong>通过测试功能是如何实现的，来推断结果是否正确</strong>。换句话说，行为验证本身并<strong>不能验证功能是否正确</strong>，而只能验证<strong>功能是否按照某种方式实现</strong>。如果按照某种方式实现，那么就可以<strong>推测</strong>出功能是正确的。</p><p><strong>这与TDD的核心逻辑就冲突了</strong>。在TDD的红/绿/重构中，<strong>重构</strong>要求在功能不变的前提下，改变实现方式。而对于行为验证而言，<strong>实现方式改变就是功能改变</strong>。因而重构就无法进行！需要<strong>重写！</strong>也就是说，<strong>行为验证会阻碍TDD的进行</strong>。</p><p>仍然以“测试应用”为例，如果我们将JPQL的实现方式改为Criteria API，那么行为验证就会失败，而状态验证则不会：</p><p><video poster=\"https://static001.geekbang.org/resource/image/76/05/762849d86939179229876ec4da039b05.jpg\" preload=\"none\" controls=\"\"><source src=\"https://media001.geekbang.org/customerTrans/7e27d07d27d407ebcc195a0e78395f55/4156fcd7-17fa5eb8464-0000-0000-01d-dbacd.mp4\" type=\"video/mp4\"><source src=\" https://media001.geekbang.org/6bba8b00b805491d9b528d5ddb02d6fb/a1feeaa8b1284cda995bf24e7723fcdc-9a3d7f7dfc682a1ebddbbc9d0b52a082-sd.m3u8\" type=\"application/x-mpegURL\"></video></p><h2>丧失测试的有效性</h2><p>除去与TDD的逻辑冲突之外，行为验证还可能会<strong>丧失测试的有效性</strong>，特别是在依赖复杂的框架或是进程外组件的时候。</p><p>还是“测试应用”的例子。在这个例子中，领域模型存取的成功并不仅仅依赖于代码，还依赖于JPA的元数据与配置。那么，仅仅通过与EntityManager的交互，并无法验证元数据的配置是否正确，类似的还有查询语句本身的正确性等。</p><p><video poster=\"https://static001.geekbang.org/resource/image/76/05/762849d86939179229876ec4da039b05.jpg\" preload=\"none\" controls=\"\"><source src=\"https://media001.geekbang.org/customerTrans/7e27d07d27d407ebcc195a0e78395f55/c872036-17fabf3d55a-0000-0000-01d-dbacd.mp4\" type=\"video/mp4\"><source src=\" https://media001.geekbang.org/46955895c660486b9af6ab9f7d8ce32c/1b1981ef10fe428d923f314920698463-ecae84519c7dca562e39144fae504710-sd.m3u8\" type=\"application/x-mpegURL\"></video></p><p>虽然行为验证的主要目的是降低测试成本，但如果丧失了测试的有效性，那么成本再低也是无意义的。</p><h2>小结</h2><p>今天我们介绍了行为验证，以及如何通过行为验证<strong>推测</strong>待测系统是否满足功能需求。虽然在特定场景下，行为验证是非常有用的<strong>测试技术，</strong>但它并不合适作为TDD的默认验证方式。为了保证TDD中的红/绿/重构循环，我们应该尽量使用状态验证。</p><p>至于降低测试成本，在云时代的今天我们有了其他的选择（比如Test Container、Mountebanke等进程外测试替身），并不一定非要使用行为验证。</p><p>需要提醒的是，虽然行为验证会大量使用测试替身技术，但并不是所有的测试替身都是行为验证。Martin Folwer在他的名篇<a href=\"https://martinfowler.com/articles/mocksArentStubs.html\">《Mock不是Stub》</a>中，对于不同的测试替身给予了充分的说明。</p><h2>思考题</h2><p>虽然我们反复提醒，行为验证不适合作为TDD的默认验证方式，那么在哪些特定情况下，行为验证既不会影响重构又能降低测试成本呢？</p><p><strong>编辑来信</strong>：</p><blockquote>\n<p>TDD是一项技能，唯有动手实操、反复练习，才能有所小成。为了帮助你更快地进步，徐昊老师特发起了<strong>“TDD专栏首发·代码评点”</strong>活动。<br>\n<strong>　</strong><br>\n在第一个实战项目结束后，我们会根据你提交的<a href=\"https://jinshuju.net/f/TvdN15\">学习反馈</a>，手动选出其中几位进行代码评点与解疑答惑。而评点的详细内容我们也将制成加餐，展示在专栏里，供其他同学学习与参考。<br>\n<strong>　</strong><br>\n划重点！如果学完第1-10讲再写反馈，将会大大提高你入选的机会！另，此次收集时间截至4月3日零点。所以非常希望你能跟上我们的更新进度，多动手实操，并记录学习体会。<br>\n<strong>　</strong><br>\n最后，希望我们都能好好学习，更上层楼！</p>\n</blockquote>","neighbors":{"left":{"article_title":"05｜TDD中的测试（1）：状态验证为什么是主要的使用方式？","id":496697},"right":{"article_title":"07｜TDD中的测试（3）：集成测试还是单元测试？","id":496699}},"comments":[{"had_liked":false,"id":339134,"user_name":"邓志国","can_delete":false,"product_type":"c1","uid":1043844,"ip_address":"","ucode":"380AE67ED7B9D7","user_header":"https://static001.geekbang.org/account/avatar/00/0f/ed/84/0b8e2d25.jpg","comment_is_top":false,"comment_ctime":1647935570,"is_pvip":false,"replies":[{"id":123944,"content":"good","user_name":"作者回复","user_name_real":"编辑","uid":2537798,"ctime":1647943031,"ip_address":"","comment_id":339134,"utype":1}],"discussion_count":2,"race_medal":0,"score":2,"product_id":100109401,"comment_content":"对一些第三方系统的使用，比如发送短信。我可能只需要关心短信发送这个动作是否被调用了，那么这个时候Mock发短信的动作我觉得是可以的。","like_count":23,"discussions":[{"author":{"id":2537798,"avatar":"https://static001.geekbang.org/account/avatar/00/26/b9/46/758ecf4a.jpg","nickname":"徐八叉","note":"","ucode":"DA6D1EB08A7396","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":557726,"discussion_content":"good","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1647943031,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1016905,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/84/49/47d48fd0.jpg","nickname":"观弈道人","note":"","ucode":"F3BB619A33C605","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":576158,"discussion_content":"如果要tdd短信接口，怎么操作","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1655308417,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":354856,"user_name":"leesper","can_delete":false,"product_type":"c1","uid":1351104,"ip_address":"北京","ucode":"CC76320571BECA","user_header":"https://static001.geekbang.org/account/avatar/00/14/9d/c0/cb5341ec.jpg","comment_is_top":false,"comment_ctime":1660823757,"is_pvip":false,"replies":[{"id":129091,"content":"在极客时间上搜《如何落地业务建模》，也是徐昊老师的课，里面讲有DDD","user_name":"编辑回复","user_name_real":"编辑","uid":2189689,"ctime":1660837501,"ip_address":"北京","comment_id":354856,"utype":2}],"discussion_count":1,"race_medal":0,"score":2,"product_id":100109401,"comment_content":"老师，看你讲到领域模型，那您一定也是DDD高手嘛？能开个课讲讲DDD吗，感觉落地好难","like_count":5,"discussions":[{"author":{"id":2189689,"avatar":"https://static001.geekbang.org/account/avatar/00/21/69/79/b4132042.jpg","nickname":"🐑","note":"","ucode":"DE34B3B14287D1","race_medal":0,"user_type":8,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":584466,"discussion_content":"在极客时间上搜《如何落地业务建模》，也是徐昊老师的课，里面讲有DDD","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1660837501,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"北京","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":4}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":343929,"user_name":"byemoto","can_delete":false,"product_type":"c1","uid":1016036,"ip_address":"","ucode":"B26060999DAA73","user_header":"","comment_is_top":false,"comment_ctime":1651125045,"is_pvip":false,"replies":[{"id":126090,"content":"尽量避免 是副作用大 不是没用","user_name":"作者回复","user_name_real":"编辑","uid":2537798,"ctime":1652265978,"ip_address":"","comment_id":343929,"utype":1}],"discussion_count":1,"race_medal":0,"score":2,"product_id":100109401,"comment_content":"《Google软件工程》书中第13章提到，在有些情况下，交互测试是必要的：\n1. 不能使用实际实现或伪实现。\n2. 调用函数的次数或顺序的差异会导致非预期的行为。\n这里的交互测试即行为验证。","like_count":1,"discussions":[{"author":{"id":2537798,"avatar":"https://static001.geekbang.org/account/avatar/00/26/b9/46/758ecf4a.jpg","nickname":"徐八叉","note":"","ucode":"DA6D1EB08A7396","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":571555,"discussion_content":"尽量避免 是副作用大 不是没用","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1652265978,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":341257,"user_name":"davix","can_delete":false,"product_type":"c1","uid":1074465,"ip_address":"","ucode":"CBFB39BAD7938B","user_header":"https://static001.geekbang.org/account/avatar/00/10/65/21/101a7075.jpg","comment_is_top":false,"comment_ctime":1649487048,"is_pvip":false,"replies":[{"id":124760,"content":"看风格 代码点评里 我写了一个high order组合风格。cps，mondic测试技巧都不太一样","user_name":"作者回复","user_name_real":"编辑","uid":2537798,"ctime":1649551542,"ip_address":"","comment_id":341257,"utype":1}],"discussion_count":1,"race_medal":0,"score":2,"product_id":100109401,"comment_content":"請教函數式編程中的測試一般是哪種類型？","like_count":1,"discussions":[{"author":{"id":2537798,"avatar":"https://static001.geekbang.org/account/avatar/00/26/b9/46/758ecf4a.jpg","nickname":"徐八叉","note":"","ucode":"DA6D1EB08A7396","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":561091,"discussion_content":"看风格 代码点评里 我写了一个high order组合风格。cps，mondic测试技巧都不太一样","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1649551542,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":339193,"user_name":"Adoy","can_delete":false,"product_type":"c1","uid":1029966,"ip_address":"","ucode":"6D11EBAD640E6D","user_header":"https://static001.geekbang.org/account/avatar/00/0f/b7/4e/d71e8d2f.jpg","comment_is_top":false,"comment_ctime":1647961932,"is_pvip":false,"replies":[{"id":123963,"content":"你可以试试","user_name":"作者回复","user_name_real":"编辑","uid":2537798,"ctime":1647969305,"ip_address":"","comment_id":339193,"utype":1}],"discussion_count":2,"race_medal":0,"score":2,"product_id":100109401,"comment_content":"对于想OptionParser这样设计成Inverse of Control风格的API，mock一个parser来做行为验证比较合理。类似的前端onClick，onChange这样的API，行为验证的测试实现起来更简单直观，也不影响组建内部的重构。","like_count":1,"discussions":[{"author":{"id":2537798,"avatar":"https://static001.geekbang.org/account/avatar/00/26/b9/46/758ecf4a.jpg","nickname":"徐八叉","note":"","ucode":"DA6D1EB08A7396","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":557821,"discussion_content":"你可以试试","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1647969305,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":2831425,"avatar":"","nickname":"Geek_a03aa5","note":"","ucode":"700D44BF7AC3D2","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":577985,"discussion_content":"验证 onClick 跟 onChange 应该还是状态验证，因为这些是公开 API，调用方对于组件内部的实现细节仍然是没有感知的。如果是要验证行为的话，可能是这样的一个例子：\n\n// foo.component.spec.ts\nexpect(Bar).haveBeenRendered();\n","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1656458693,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":343245,"user_name":"lvxus","can_delete":false,"product_type":"c1","uid":1210917,"ip_address":"","ucode":"25891F9E96C670","user_header":"https://static001.geekbang.org/account/avatar/00/12/7a/25/be98886a.jpg","comment_is_top":false,"comment_ctime":1650724433,"is_pvip":false,"replies":[{"id":125346,"content":"可以重新思考一下测试金字塔到底是什么","user_name":"作者回复","user_name_real":"编辑","uid":2537798,"ctime":1650730968,"ip_address":"","comment_id":343245,"utype":1}],"discussion_count":1,"race_medal":0,"score":2,"product_id":100109401,"comment_content":"参照测试金字塔，层级最高的那层使用行为测试，应该符合减少成本而又不太影响重构？","like_count":0,"discussions":[{"author":{"id":2537798,"avatar":"https://static001.geekbang.org/account/avatar/00/26/b9/46/758ecf4a.jpg","nickname":"徐八叉","note":"","ucode":"DA6D1EB08A7396","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":566704,"discussion_content":"可以重新思考一下测试金字塔到底是什么","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1650730968,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":341436,"user_name":"Sudouble","can_delete":false,"product_type":"c1","uid":1365574,"ip_address":"","ucode":"B369B09DAF8D20","user_header":"https://static001.geekbang.org/account/avatar/00/14/d6/46/5eb5261b.jpg","comment_is_top":false,"comment_ctime":1649604509,"is_pvip":false,"replies":[{"id":124801,"content":"如果能预知改变 就不用这么麻烦了","user_name":"作者回复","user_name_real":"编辑","uid":2537798,"ctime":1649724068,"ip_address":"","comment_id":341436,"utype":1}],"discussion_count":1,"race_medal":0,"score":2,"product_id":100109401,"comment_content":"功能、结构本身改动不大之处，适用于行为验证。基于行为的验证不合适的主要原因在于实现方式变化，以及无法感知到实现变化后，实际输入输出变化。相应的，主要思考在于哪个位置变化小？可以推广至再上层的集成测试、功能测试级别，或者说API接口。","like_count":0,"discussions":[{"author":{"id":2537798,"avatar":"https://static001.geekbang.org/account/avatar/00/26/b9/46/758ecf4a.jpg","nickname":"徐八叉","note":"","ucode":"DA6D1EB08A7396","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":561758,"discussion_content":"如果能预知改变 就不用这么麻烦了","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1649724069,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":339316,"user_name":"阿崔cxr","can_delete":false,"product_type":"c1","uid":1177565,"ip_address":"","ucode":"26E2C7D96306A4","user_header":"https://static001.geekbang.org/account/avatar/00/11/f7/dd/c85f2065.jpg","comment_is_top":false,"comment_ctime":1648031751,"is_pvip":false,"replies":[{"id":124030,"content":"那为啥不fake","user_name":"作者回复","user_name_real":"编辑","uid":2537798,"ctime":1648033427,"ip_address":"","comment_id":339316,"utype":1}],"discussion_count":1,"race_medal":0,"score":2,"product_id":100109401,"comment_content":"找到程序的边界，对于那些非自己程序的逻辑，比如第三方库，就可以 mock 掉。也就是使用行为测试","like_count":0,"discussions":[{"author":{"id":2537798,"avatar":"https://static001.geekbang.org/account/avatar/00/26/b9/46/758ecf4a.jpg","nickname":"徐八叉","note":"","ucode":"DA6D1EB08A7396","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":557977,"discussion_content":"那为啥不fake","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1648033427,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":339140,"user_name":"邓志国","can_delete":false,"product_type":"c1","uid":1043844,"ip_address":"","ucode":"380AE67ED7B9D7","user_header":"https://static001.geekbang.org/account/avatar/00/0f/ed/84/0b8e2d25.jpg","comment_is_top":false,"comment_ctime":1647937124,"is_pvip":false,"replies":[{"id":123946,"content":"状态验证","user_name":"作者回复","user_name_real":"编辑","uid":2537798,"ctime":1647943109,"ip_address":"","comment_id":339140,"utype":1}],"discussion_count":1,"race_medal":0,"score":2,"product_id":100109401,"comment_content":"如果我的业务逻辑依赖于一个Repository接口，我用内存实现了一个这样的接口。比如测试一个新增后，我会去这个Repository内存实现中查找到新增的对象。这样的测试替身算是行为验证还是状态验证？","like_count":0,"discussions":[{"author":{"id":2537798,"avatar":"https://static001.geekbang.org/account/avatar/00/26/b9/46/758ecf4a.jpg","nickname":"徐八叉","note":"","ucode":"DA6D1EB08A7396","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":557729,"discussion_content":"状态验证","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1647943109,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":340798,"user_name":"程序袁帅","can_delete":false,"product_type":"c1","uid":1017181,"ip_address":"","ucode":"C281CA64EC91A7","user_header":"https://static001.geekbang.org/account/avatar/00/0f/85/5d/ec94b66d.jpg","comment_is_top":false,"comment_ctime":1649148521,"is_pvip":false,"replies":null,"discussion_count":0,"race_medal":0,"score":2,"product_id":100109401,"comment_content":"我之前把《Mock 不是 Stub》这篇文章翻译成了中文，分享给大家：\n\nhttps:&#47;&#47;www.yuque.com&#47;yuanshenjian&#47;agile&#47;mocks-are-not-stubs\n\n这篇文章有点长，但仔细读两遍，会有很多收获，可以作为CTO专栏的很好补充","like_count":31},{"had_liked":false,"id":357341,"user_name":"努力努力再努力","can_delete":false,"product_type":"c1","uid":1493907,"ip_address":"广东","ucode":"0C6EEA28FCE8C7","user_header":"https://static001.geekbang.org/account/avatar/00/16/cb/93/124d8cd8.jpg","comment_is_top":false,"comment_ctime":1663164720,"is_pvip":false,"replies":null,"discussion_count":0,"race_medal":0,"score":3,"product_id":100109401,"comment_content":"问题：行为验证不适合作为 TDD 的默认验证方式，那么在哪些特定情况下，行为验证既不会影响重构又能降低测试成本呢？\n1. 应该将行为验证放在接口而非实现上，例如老师例子中的 EntityManager.createQuery 方法就是一种具体的实现，如果创建一个接口 Db.query() ，行为验证只验证这个接口是否被调用即可，对于接口内如何被重构，也不会影响行为验证的结果。\n\n总结：我认为就是，行为验证适合不变的接口，不适合具体的实现","like_count":2},{"had_liked":false,"id":344890,"user_name":"zenk","can_delete":false,"product_type":"c1","uid":1013669,"ip_address":"","ucode":"B235D5EBCF49BC","user_header":"https://static001.geekbang.org/account/avatar/00/0f/77/a5/c5ae871d.jpg","comment_is_top":false,"comment_ctime":1651836744,"is_pvip":false,"replies":null,"discussion_count":0,"race_medal":0,"score":3,"product_id":100109401,"comment_content":"验证是否正确调用了依赖的第三方组件提供的接口，用行为来验证感觉比较适合","like_count":1},{"had_liked":false,"id":341259,"user_name":"davix","can_delete":false,"product_type":"c1","uid":1074465,"ip_address":"","ucode":"CBFB39BAD7938B","user_header":"https://static001.geekbang.org/account/avatar/00/10/65/21/101a7075.jpg","comment_is_top":false,"comment_ctime":1649488020,"is_pvip":false,"replies":null,"discussion_count":0,"race_medal":0,"score":3,"product_id":100109401,"comment_content":"如果測試協議，是不是應該用行為測試？假如我要自己實現TCP，要保證它開始三步握手的包內容及次序的正確，slow start、close等包次序準確等場景","like_count":1},{"had_liked":false,"id":390093,"user_name":"士心23","can_delete":false,"product_type":"c1","uid":3070613,"ip_address":"上海","ucode":"ADE597E88C3EC1","user_header":"https://thirdwx.qlogo.cn/mmopen/vi_32/GUYEdkZwS6icOYHPhwhkXNsxficiaoDnxRbXibgS6iakpIwiajN6UMb8oDucMaiaORaPqRkyaCL84ApaiaRKPwiaKPDzTXA/132","comment_is_top":false,"comment_ctime":1714317754,"is_pvip":false,"replies":null,"discussion_count":0,"race_medal":0,"score":3,"product_id":100109401,"comment_content":"repo中的SQL语句如何验证是否存在语法错误呢，有没有办法测试","like_count":0},{"had_liked":false,"id":358119,"user_name":"常文龙","can_delete":false,"product_type":"c1","uid":1204525,"ip_address":"广东","ucode":"4A126159D24766","user_header":"https://static001.geekbang.org/account/avatar/00/12/61/2d/65f016bf.jpg","comment_is_top":false,"comment_ctime":1663920072,"is_pvip":false,"replies":null,"discussion_count":0,"race_medal":0,"score":3,"product_id":100109401,"comment_content":"课后题：行为验证不适合作为 TDD 的默认验证方式，那么在哪些特定情况下，行为验证既不会影响重构又能降低测试成本呢？\n答：属于SUT的契约部分，就可以用。也就是，SUT声明了调用A接口，会达到什么效果，这个“效果”就是可以行为验证的。举个例子，调用了订单支付接口，就一定会创建一个支付单，因此对于pay接口的行为验证，就是createPayOrder被调用了。","like_count":0},{"had_liked":false,"id":355941,"user_name":"Geek","can_delete":false,"product_type":"c1","uid":1466335,"ip_address":"北京","ucode":"1B8EB2C26DE4EC","user_header":"https://static001.geekbang.org/account/avatar/00/16/5f/df/3c4881f0.jpg","comment_is_top":false,"comment_ctime":1661863077,"is_pvip":false,"replies":null,"discussion_count":0,"race_medal":0,"score":3,"product_id":100109401,"comment_content":"老师，我理解只要是使用的测试替身，多少都会丧失一些测试有效性。比如说基于stub&#47;faker来作状态验证，应该也验证不到配置错误的这些情况","like_count":0},{"had_liked":false,"id":345063,"user_name":"Rocky","can_delete":false,"product_type":"c1","uid":1483150,"ip_address":"","ucode":"5FCF390BECDF9D","user_header":"https://static001.geekbang.org/account/avatar/00/16/a1/8e/03aeb9df.jpg","comment_is_top":false,"comment_ctime":1651997074,"is_pvip":false,"replies":null,"discussion_count":1,"race_medal":0,"score":3,"product_id":100109401,"comment_content":"有些方法依赖了第三方库，只要验证是否调用了第三方库即可，一般第三方库也会有其本身完备的测试，这种情况下行为验证就是必要的了","like_count":0,"discussions":[{"author":{"id":1016905,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/84/49/47d48fd0.jpg","nickname":"观弈道人","note":"","ucode":"F3BB619A33C605","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":576159,"discussion_content":"要验证对三方库参数传的对不对咋办","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1655308489,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":344480,"user_name":"davix","can_delete":false,"product_type":"c1","uid":1074465,"ip_address":"","ucode":"CBFB39BAD7938B","user_header":"https://static001.geekbang.org/account/avatar/00/10/65/21/101a7075.jpg","comment_is_top":false,"comment_ctime":1651579531,"is_pvip":false,"replies":null,"discussion_count":0,"race_medal":0,"score":3,"product_id":100109401,"comment_content":"行為驗證“降低测试成本”。狀態驗證也一樣能做到吧，比如用一個spy。\n而有效性喪失，原因是集成測試跟單元測試的區別吧。如果狀態驗證用spy (test double），有效性也會喪失。","like_count":0},{"had_liked":false,"id":341157,"user_name":"汗香","can_delete":false,"product_type":"c1","uid":1807921,"ip_address":"","ucode":"8F2C8A595F888A","user_header":"https://static001.geekbang.org/account/avatar/00/1b/96/31/91cc9c3c.jpg","comment_is_top":false,"comment_ctime":1649395353,"is_pvip":false,"replies":null,"discussion_count":0,"race_medal":0,"score":3,"product_id":100109401,"comment_content":"如果一个函数的意图就是某个行为时可以用行为验证；\n如：用户执行XX操作后要发送对应的消息到中间件，而这个消息的消费不是本方法所关心的，这时可以使用行为验证","like_count":0},{"had_liked":false,"id":340754,"user_name":"老狗","can_delete":false,"product_type":"c1","uid":1540332,"ip_address":"","ucode":"80927B4D31CFCE","user_header":"https://static001.geekbang.org/account/avatar/00/17/80/ec/b6149cbf.jpg","comment_is_top":false,"comment_ctime":1649119660,"is_pvip":false,"replies":null,"discussion_count":0,"race_medal":0,"score":3,"product_id":100109401,"comment_content":"对于进程间的依赖，我们能fake的尽量用fake，诸如用h2 fake数据库，用wireMock去fake一个其他服务或者三方服务（其他业务服务诸如订单服务、用户服务等，三方功能诸如支付、邮件、短信等），但是但是有些集成方式，fake成本较高，（比如消息队列或者进程间RPC）而且集成协议较稳定，验证的性价比不高时，采用行为验证","like_count":0},{"had_liked":false,"id":339619,"user_name":"Geek_wip5z8","can_delete":false,"product_type":"c1","uid":1114772,"ip_address":"","ucode":"2F075AC7E3847D","user_header":"https://static001.geekbang.org/account/avatar/00/11/02/94/abb7bfe3.jpg","comment_is_top":false,"comment_ctime":1648236427,"is_pvip":false,"replies":null,"discussion_count":0,"race_medal":0,"score":4,"product_id":100109401,"comment_content":"第一次明白了行为测试和状态测试的区别，赞！！！","like_count":0}]}