{"id":4802,"title":"07 | 人以群分，你是什么人就看到什么世界","content":"<p>要说提到推荐系统中，什么算法最名满天下，我想一定是协同过滤。在很多场合，甚至有人把协同过滤和推荐系统划等号，可见二者的关系多么紧密。</p>\n<p>协同过滤的重点在于“协同”，所谓协同，也就是群体互帮互助，互相支持是集体智慧的体现，协同过滤也是这般简单直接，历久弥新。</p>\n<h1>协同过滤</h1>\n<p>当你的推荐系统度过了只能使用基于内容的推荐阶段后，就有了可观的用户行为了。这时候的用户行为通常是正向的，也就是用户或明或暗地表达着喜欢的行为。这些行为可以表达成一个用户和物品的关系矩阵，或者说网络、或者说是图，都是一个东西。</p>\n<p>这个用户物品的关系矩阵中填充的就是用户对物品的态度，但并不是每个位置都有，需要的就是把那些还没有的地方填起来。这个关系矩阵是协同过滤的命根子，一切都围绕它来进行。</p>\n<p>协同过滤是一个比较大的算法范畴。通常划分为两类：</p>\n<ol>\n<li>基于记忆的协同过滤（Memory-Based）；</li>\n<li>基于模型的协同过滤（Model-Based）。</li>\n</ol>\n<p>基于记忆的协同过滤，现在看上去极其简单，就是记住每个人消费过什么东西，然后给他推荐相似的东西，或者推荐相似的人消费的东西。基于模型的协同过滤则是从用户物品关系矩阵中去学习一个模型，从而把那些矩阵空白处填满。</p>\n<p>接下来一段时间，我们就围绕这两个类别的协同过滤与你好好聊聊。今天我先来说的是基于记忆的协同过滤的一种——基于用户，或者叫做User-Based， User to User。</p>\n<h1>基于用户的协同过滤</h1>\n<h2>背后的思想</h2>\n<p>你有没有过这种感觉，你遇到一个人，你发现他喜欢的书、喜欢的电影也基本上都是你喜欢的，从此以后，你就想老是想问他：还有什么好推荐的，最近又看了什么书，最近又看了什么电影？甚至不惜和他撞衫，和他穿一个风格的衣服。</p>\n<p>对喽，这个感觉非常地自然直接，它就是基于用户的协同过滤背后思想。详细来说就是：先根据历史消费行为帮你找到一群和你口味很相似的用户；然后根据这些和你很相似的用户再消费了什么新的、你没有见过的物品，都可以推荐给你。</p>\n<p>这就是我们常说的人以群分，你是什么人，你就会遇到什么人，所以说，要谨慎交友啊。</p>\n<p>这其实也是一个给用户聚类的过程，把用户按照兴趣口味聚类成不同的群体，给用户产生的推荐就来自这个群体的平均值；所以要做好这个推荐，关键是如何量化“口味相似”这个看起来很直接简单的事情。这关系到一个用户会跟哪些人在同一个房间内，万一进错了房间，影响就会不好。</p>\n<!-- [[[read_end]]] -->\n<h2>原理</h2>\n<p>书归正传，我们来说一说基于用户的协同过滤具体是怎么做的。前面说过，核心是那个用户物品的关系矩阵，这个矩阵是最原始的材料。</p>\n<p><strong>第一步，准备用户向量，从这个矩阵中，理论上可以给每一个用户得到一个向量。</strong></p>\n<p>为什么要说是“理论上”呢？因为得到向量的前提是：用户爸爸需要在我们的产品里有行为数据啊，否则就得不到这个向量。</p>\n<p>这个向量有这么三个特点：</p>\n<ol>\n<li>向量的维度就是物品的个数；</li>\n<li>向量是稀疏的，也就是说并不是每个维度上都有数值，原因当然很简单，这个用户并不是消费过所有物品，废话嘛，连我们压箱底的都给用户推荐了，那当然不用再推荐什么了；</li>\n<li>向量维度上的取值可以是简单的0或者1，也就是布尔值，1表示喜欢过，0表示没有，当然因为是稀疏向量，所以取值为0的就忽略了。</li>\n</ol>\n<p><strong>第二步，用每一个用户的向量，两两计算用户之间的相似度，设定一个相似度阈值或者设定一个最大数量，为每个用户保留与其最相似的用户。</strong></p>\n<p>这里两两计算相似度如何计算，市面上有很多相似度计算方法，你也可以自己设计，我们在后面的文章里会逐一介绍，这里先略过不提。</p>\n<p><strong>第三步，为每一个用户产生推荐结果。</strong></p>\n<p>把和他“臭味相投”的用户们喜欢过的物品汇总起来，去掉用户自己已经消费过的物品，剩下的排序输出就是推荐结果，是不是很简单。具体的汇总方式我们用一个公式来表示。</p>\n<p><img src=\"https://static001.geekbang.org/resource/image/be/fe/be24f9084f0fb0290de8d10c4761c3fe.png?wh=454*178\" alt=\"\" /></p>\n<p>这个公式也是很简单的。等号左边就是计算一个物品i和一个用户u的匹配分数，等号右边是这个分数的计算过程，分母是把和用户u相似的n个用户的相似度加起来，分子是把这n个用户各自对物品i的态度，按照相似度加权求和。</p>\n<p>这里的态度最简单就是0或者1，1表示喜欢过，0表示没有，如果是评分，则可以是0到5的取值。整个公式就是相似用户们的态度加权平均值。</p>\n<h2>实践</h2>\n<p>看上去简单得不值一提，但是在实现上却有一些坑，需要小心小心再小心。你想过以下这几个问题吗？</p>\n<ol>\n<li>只有原始用户行为日志，需要从中构造出矩阵，怎么做？</li>\n<li>如果用户的向量很长，计算一个相似度则耗时很久，怎么办？</li>\n<li>如果用户量很大，而且通常如此，两两计算用户相似度也是一个大坑，怎么办？</li>\n<li>在计算推荐时，看上去要为每一个用户计算他和每一个物品的分数，又是一个大坑，怎么办？</li>\n</ol>\n<p>嗯……不要气馁，下面我会逐一说下如何化解这些问题。</p>\n<p><strong>1 构造矩阵</strong></p>\n<p>我们在做协同过滤计算时，所用的矩阵是稀疏的，说人话就是：很多矩阵元素不用存，因为是0。这里介绍典型的稀疏矩阵存储格式。</p>\n<ol>\n<li>CSR：这个存储稍微复杂点，是一个整体编码方式。它有三个组成：数值、列号和行偏移共同编码。</li>\n<li>COO：这个存储方式很简单，每个元素用一个三元组表示（行号，列号，数值），只存储有值的元素，缺失值不存储。</li>\n</ol>\n<p>这些存储格式，在常见的计算框架里面都是标准的，如 Spark 中，Python 的 NumPy 包中。一些著名的算法比赛也通常都是以这种格式提供数据。这里不再赘述了。</p>\n<p>把你的原始行为日志转换成上面的格式，就可以使用常用计算框架的标准输入了。</p>\n<p><strong>2 相似度计算</strong></p>\n<p>相似度计算是个问题。</p>\n<p>首先是单个相似度计算问题，如果碰上向量很长，无论什么相似度计算方法，都要遍历向量，如果用循环实现就更可观了，所以通常降低相似度计算复杂度的办法有两种。</p>\n<ol>\n<li>\n<p>对向量采样计算。道理很简单，两个一百维的向量计算出的相似度是0.7，我现在忍受一些精度的损失，不用100维计算，随机从中取出10维计算，得到相似度是0.72，显然用100维计算出的0.7更可信一些，但是在计算复杂度降低十倍的情形下，0.72和它误差也不大，后者更经济。这个算法由Twitter提出，叫做 DIMSUM 算法，已经在Spark中实现了。</p>\n</li>\n<li>\n<p>向量化计算。与其说这是一个小技巧，不如说这是一种思维方式。在机器学习领域，向量之间的计算是家常便饭，难道向量计算都要用循环实现吗？并不是，现代的线性代数库都支持直接的向量运算，比循环快很多。也就是我们在任何地方，都要想办法把循环转换成向量来直接计算，一般像常用的向量库都天然支持的，比如 Python 的 NumPy 。</p>\n</li>\n</ol>\n<p>其次的问题就是，如果用户量很大，两两之间计算代价就很大。</p>\n<p>有两个办法来缓解这个问题：</p>\n<p>第一个办法是：将相似度计算拆成 Map Reduce 任务，将原始矩阵Map成键为用户对，值为两个用户对同一个物品的评分之积，Reduce 阶段对这些乘积再求和，Map Reduce任务结束后再对这些值归一化；</p>\n<p>第二个办法是：不用基于用户的协同过滤。</p>\n<p>另外，这种计算对象两两之间的相似度的任务，如果数据量不大，一般来说不超过百万个，然后矩阵又是稀疏的，那么有很多单机版本的工具其实更快，比如 KGraph、 GraphCHI 等。</p>\n<p><strong>3 推荐计算</strong></p>\n<p>得到了用户之间的相似度之后。接下来还有一个硬骨头，计算推荐分数。显然，为每一个用户计算每一个物品的推荐分数，计算次数是矩阵的所有元素个数，这个代价，你当然不能接受啊。这时候，你注意回想一下前面那个汇总公式，有这么几个特点我们可以来利用一下：</p>\n<ol>\n<li>只有相似用户喜欢过的物品需要计算，这个大大的赞，这个数量相比全部物品少了很多；</li>\n<li>把计算过程拆成Map Reduce任务。</li>\n</ol>\n<p>拆Map Reduce任务的做法是：</p>\n<ol>\n<li>遍历每个用户喜欢的物品列表；</li>\n<li>获取该用户的相似用户列表；</li>\n<li>把每一个喜欢的物品Map成两个记录发射出去，一个是键为&lt;相似用户ID，物品ID，1&gt;三元组，可以拼成一个字符串，值为&lt;相似度&gt;，另一个是键为&lt;相似用户ID，物品ID，0&gt;三元组，值为&lt;喜欢程度*相似度&gt;，其中的1和0为了区分两者，在最后一步中会用到；</li>\n<li>Reduce阶段，求和后输出；</li>\n<li>&lt;相似用户ID，物品ID, 0&gt;的值除以&lt;相似用户ID，物品ID, 1&gt;的值</li>\n</ol>\n<p>一般来说，中小型公司如果没有特别必要的话，不要用分布式计算，看上去高大上、和大数据沾上边了，实际上得不偿失。</p>\n<p>拆分Map Reduce任务也不一定非要用 Hadoop 或者Spark实现。也可以用单机实现这个过程。</p>\n<p>因为一个Map过程，其实就是将原来耦合的计算过程解耦合了、拍扁了，这样的话我们可以利用多线程技术实现Map效果。例如C++里面 OpenMP 库可以让我们无痛使用多线程，充分剥削计算机所有的核。</p>\n<p><strong>4 一些改进</strong></p>\n<p>对于基于用户的协同过滤有一些常见的改进办法，改进主要集中在用户对物品的喜欢程度上：</p>\n<ol>\n<li>惩罚对热门物品的喜欢程度，这是因为，热门的东西很难反应出用户的真实兴趣，更可能是被煽动，或者无聊随便点击的情形，这是群体行为常见特点；</li>\n<li>增加喜欢程度的时间衰减，一般使用一个指数函数，指数就是一个负数，值和喜欢行为发生时间间隔正相关即可，这很好理解，小时候喜欢的东西不代表我现在的口味，人都是会变的，这是人性。</li>\n</ol>\n<h2>应用场景</h2>\n<p>最后，说一说基于用户的协同过滤有哪些应用场景。基于用户的协同过滤有两个产出：</p>\n<ol>\n<li>相似用户列表；</li>\n<li>基于用户的推荐结果。</li>\n</ol>\n<p>所以我们不但可以推荐物品，还可以推荐用户！比如我们在一些社交平台上看到：“相似粉丝”“和你口味类似的人”等等都可以这样计算。</p>\n<p>对于这个方法计算出来的推荐结果本身，由于是基于口味计算得出，所以在更强调个人隐私场景中应用更佳，在这样的场景下，不受大V影响，更能反应真实的兴趣群体，而非被煽动的乌合之众。</p>\n<h1>总结</h1>\n<p>今天，我与你聊了基于用户的协同过滤方法，也顺带普及了一下协同过滤这个大框架的思想。基于用户的协同过滤算法简单直接，但是非常有效。只是，在实现这个方法时，有很多需要注意的地方，比如：</p>\n<ol>\n<li>相似度计算本身如果遇到超大维度向量怎么办；</li>\n<li>两两计算用户相似度遇到用户量很大怎么办？</li>\n</ol>\n<p>同时，我也聊到了如何改进这个推荐算法，希望能够帮到你，针对你自己的产品，你可以再多想几种改进办法吗？欢迎留言一起讨论。感谢你的收听，我们下次再见。</p>\n<p><img src=\"https://static001.geekbang.org/resource/image/87/b0/873b086966136189db14874181823fb0.jpg?wh=1110*549\" alt=\"\" /></p>\n","neighbors":{"left":{"article_title":"06 | 超越标签的内容推荐系统","id":4674},"right":{"article_title":"08 | 解密“看了又看”和“买了又买”","id":4856}},"comments":[{"had_liked":false,"id":4057,"user_name":"jt120","can_delete":false,"product_type":"c1","uid":1058471,"ip_address":"","ucode":"245268E9108D54","user_header":"https://static001.geekbang.org/account/avatar/00/10/26/a7/177581b8.jpg","comment_is_top":false,"comment_ctime":1521421265,"is_pvip":false,"replies":[{"id":"914","content":"放学别走，你给我等着。","user_name":"作者回复","user_name_real":"刑无刀","uid":"1005376","ctime":1521596987,"ip_address":"","comment_id":4057,"utype":1}],"discussion_count":1,"race_medal":0,"score":"70240898001","product_id":100005101,"comment_content":"看了前面，想吐槽，这不是推荐系统实战书里的东西吗？越往后看，发展干货越多，套路啊。<br>期待更多的干货","like_count":16,"discussions":[{"author":{"id":1005376,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/57/40/777bfe30.jpg","nickname":"刑无刀","note":"","ucode":"496201BF63D49D","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":416187,"discussion_content":"放学别走，你给我等着。","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1521596987,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":4062,"user_name":"xzyline","can_delete":false,"product_type":"c1","uid":1017591,"ip_address":"","ucode":"C81D3CD90F4217","user_header":"https://static001.geekbang.org/account/avatar/00/0f/86/f7/c829bde3.jpg","comment_is_top":false,"comment_ctime":1521424249,"is_pvip":false,"replies":[{"id":"921","content":"Kaggle 上参加比赛。","user_name":"作者回复","user_name_real":"刑无刀","uid":"1005376","ctime":1521597301,"ip_address":"","comment_id":4062,"utype":1}],"discussion_count":1,"race_medal":0,"score":"40176129913","product_id":100005101,"comment_content":"本身不是做推荐的，有什么比较好的途径可以实践一下这些推荐知识。","like_count":9,"discussions":[{"author":{"id":1005376,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/57/40/777bfe30.jpg","nickname":"刑无刀","note":"","ucode":"496201BF63D49D","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":416191,"discussion_content":"Kaggle 上参加比赛。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1521597301,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":4052,"user_name":"Citi Lai","can_delete":false,"product_type":"c1","uid":1060440,"ip_address":"","ucode":"047BAFA9B77707","user_header":"https://static001.geekbang.org/account/avatar/00/10/2e/58/ad115b47.jpg","comment_is_top":false,"comment_ctime":1521414480,"is_pvip":false,"replies":[{"id":"917","content":"专栏以手机阅读为主，所以就尽量不放代码，只讲原理。后面会有图书计划，那里面会补上代码。适合深度阅读。","user_name":"作者回复","user_name_real":"刑无刀","uid":"1005376","ctime":1521597187,"ip_address":"","comment_id":4052,"utype":1}],"discussion_count":2,"race_medal":0,"score":"40176120144","product_id":100005101,"comment_content":"今天對於技術細節描述稍微抽象，是否有建議範例程式碼的參考？謝謝！","like_count":9,"discussions":[{"author":{"id":1005376,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/57/40/777bfe30.jpg","nickname":"刑无刀","note":"","ucode":"496201BF63D49D","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":416184,"discussion_content":"专栏以手机阅读为主，所以就尽量不放代码，只讲原理。后面会有图书计划，那里面会补上代码。适合深度阅读。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1521597187,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1084028,"avatar":"","nickname":"啦啦","note":"","ucode":"B9D8DE2A5AB873","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":6203,"discussion_content":"请问啥时候有图书计划‘一定要有实战哦，有无公众号呢","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1566784831,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":10067,"user_name":"greekzf","can_delete":false,"product_type":"c1","uid":1094710,"ip_address":"","ucode":"07C05289F6F75D","user_header":"https://static001.geekbang.org/account/avatar/00/10/b4/36/8e3e4d4e.jpg","comment_is_top":false,"comment_ctime":1527254199,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"23002090679","product_id":100005101,"comment_content":"您好 我对mapreduce进行相似度计算不是很理解 能给一个model","like_count":5},{"had_liked":false,"id":4641,"user_name":"idiotslkp","can_delete":false,"product_type":"c1","uid":1057565,"ip_address":"","ucode":"A954390C5093F9","user_header":"http://thirdwx.qlogo.cn/mmopen/2kpMNDYsSfB30daQykqVKfHjcLsBVozoyHRjZzWjwRQV3JUghbZgdqqJxlC1Sc2jXqRI2cDWFrya7qJRMcAjeicwehttCw4Ak/132","comment_is_top":false,"comment_ctime":1522292391,"is_pvip":false,"discussion_count":1,"race_medal":0,"score":"22997128871","product_id":100005101,"comment_content":"老师你好，我之前从来没接触过推荐系统这些东西，我发现你说的我很多知识点都看不懂，想学又不知道从哪入手，学习推荐系统应该提前具备的相关知识是？烦请老师给我指导一下，我去学习相关知识后再来看......","like_count":5,"discussions":[{"author":{"id":2620759,"avatar":"https://static001.geekbang.org/account/avatar/00/27/fd/57/b45cc8cd.jpg","nickname":"雨~雨~雨","note":"","ucode":"752350474D38E9","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":535094,"discussion_content":"我发现你的评论是两年前了，还是多嘴一句。很多概念专栏都是一笔带过，需要另外去网上找其他资料，比如稀疏矩阵的CCO CSR。同时可以对比其他书籍理解","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1638350519,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":158434,"user_name":"neohope","can_delete":false,"product_type":"c1","uid":1043475,"ip_address":"","ucode":"C0268F6E7E2B6E","user_header":"https://static001.geekbang.org/account/avatar/00/0f/ec/13/49e98289.jpg","comment_is_top":false,"comment_ctime":1575370268,"is_pvip":true,"discussion_count":0,"race_medal":0,"score":"14460272156","product_id":100005101,"comment_content":"试着回答一下老师的两个问题：<br><br>1、相似度计算本身如果遇到超大维度向量怎么办；<br>感觉超大维度的解决方式应该从业务领域出发，将维度进行切分。<br>比如淘宝，如果所有类型的产品都用一个维度展示是不太现实的。<br>直观上可以按衣服、书籍、电子产品进行维护拆分，然后分别进行推荐。<br><br>2、两两计算用户相似度遇到用户量很大怎么办<br>建议对用户进行聚类，对于每个类下面的用户，再计算相似度。<br><br>另外，文中mapreduce做推荐计算那里，建议增加一句：<br>根据计算的分值，进行排名，然后将排名高的产品推荐给用户。","like_count":4},{"had_liked":false,"id":5618,"user_name":"crazypeng6","can_delete":false,"product_type":"c1","uid":1084544,"ip_address":"","ucode":"EA5ED97F36CA0D","user_header":"https://static001.geekbang.org/account/avatar/00/10/8c/80/b3b83c09.jpg","comment_is_top":false,"comment_ctime":1523628094,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"14408529982","product_id":100005101,"comment_content":"我是刚毕业的非计算机硕士，在一个小公司做算法，最近要做一个新闻类APP，需要用推荐系统（先从简单的做起），感觉只用协同过滤不够，可我没做过文本分类，该如何下手啊，有没有实战强一点的书籍和或者视频可以推荐啊，现在好迷茫，求大佬指点啊，不胜感激!","like_count":3},{"had_liked":false,"id":4063,"user_name":"星星之火","can_delete":false,"product_type":"c1","uid":1019460,"ip_address":"","ucode":"53A5F485CB8EFE","user_header":"","comment_is_top":false,"comment_ctime":1521424758,"is_pvip":false,"replies":[{"id":"922","content":"先考虑把基于内容的做好。","user_name":"作者回复","user_name_real":"刑无刀","uid":"1005376","ctime":1521597346,"ip_address":"","comment_id":4063,"utype":1}],"discussion_count":1,"race_medal":0,"score":"10111359350","product_id":100005101,"comment_content":"邢老师你好。如果矩阵太稀疏，一个人只作用一两个物品的话，用协同过滤效果不太好。可以采用哪些方法解决呢？","like_count":2,"discussions":[{"author":{"id":1005376,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/57/40/777bfe30.jpg","nickname":"刑无刀","note":"","ucode":"496201BF63D49D","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":416192,"discussion_content":"先考虑把基于内容的做好。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1521597346,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":71510,"user_name":"张贝贝","can_delete":false,"product_type":"c1","uid":1066004,"ip_address":"","ucode":"7CDBB643AD1492","user_header":"https://thirdwx.qlogo.cn/mmopen/vi_32/icicSvapqLfCWmIofXILE3b20RVDicQvooGnbksVNgz7wSzEfCKtibhIVMwibf778E39fF9hAa1EFMCFyhgljkwicicXg/132","comment_is_top":false,"comment_ctime":1551359514,"is_pvip":false,"discussion_count":1,"race_medal":0,"score":"5846326810","product_id":100005101,"comment_content":"请问一下，CSR中的行偏移和行号有什么区别，没看明白","like_count":1,"discussions":[{"author":{"id":2620759,"avatar":"https://static001.geekbang.org/account/avatar/00/27/fd/57/b45cc8cd.jpg","nickname":"雨~雨~雨","note":"","ucode":"752350474D38E9","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":535095,"discussion_content":"行偏移代表某一行的【第一个元素】前面有多少个元素，可以参考 https://www.cnblogs.com/xbinworld/p/4273506.html","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1638350643,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":48074,"user_name":"预见","can_delete":false,"product_type":"c1","uid":1200455,"ip_address":"","ucode":"39DEAEDE1BDB96","user_header":"https://static001.geekbang.org/account/avatar/00/12/51/47/6875debd.jpg","comment_is_top":false,"comment_ctime":1544342492,"is_pvip":false,"discussion_count":2,"race_medal":0,"score":"5839309788","product_id":100005101,"comment_content":"“把计算过程分解为Map Redeuce任务。<br>    1. 遍历每个用户喜欢的物品列表；<br>    2. 获取该用户的相似用户列表；<br>    3. Map阶段：把每一个喜欢的物品 Map 成两个记录发射出去，一个是键为&lt;相似用户ID，物品ID，1&gt; 三元组，可以拼成一个字符串，值为&lt;相似度&gt;；另一个是键为 &lt; 相似用户ID，物品ID，0&gt;三元组，值为&lt;喜欢程度*相似度&gt;，其中的 1 和 0 为了区分两者。<br>    4. Reduce 阶段，求和后输出；<br>    5. &lt;相似用户ID，物品ID,0&gt;的值除以 &lt; 相似用户ID，物品ID，1&gt;的值”。<br>老师为什么要做这两个值的比值呢？直接对&lt;喜欢程度*相似度&gt;求和不行吗？","like_count":1,"discussions":[{"author":{"id":2076251,"avatar":"https://static001.geekbang.org/account/avatar/00/1f/ae/5b/4bd42286.jpg","nickname":"宋计洋","note":"","ucode":"9A34E8F71C6CBD","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":390156,"discussion_content":"对于所有物品的分母都是相似用户的相似度加起来，好像确实没有必要除吧？老师能指教一下吗？","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1629692127,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1984292,"avatar":"https://static001.geekbang.org/account/avatar/00/1e/47/24/de13e1c6.jpg","nickname":"小栗Aili","note":"","ucode":"1B8700C22AA358","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":293746,"discussion_content":"如果不除，会大量近似，结果不准确了","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1595656242,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":28861,"user_name":"左瞳","can_delete":false,"product_type":"c1","uid":1206589,"ip_address":"","ucode":"B262A3E99C8605","user_header":"https://static001.geekbang.org/account/avatar/00/12/69/3d/3cfb9b87.jpg","comment_is_top":false,"comment_ctime":1538182914,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"5833150210","product_id":100005101,"comment_content":"推荐分数的mapreduce过程的时候，两个三元对应的value是相似度和相似度*喜欢程度，既然两个已经知道了，你后面相除有啥意义？","like_count":1},{"had_liked":false,"id":4200,"user_name":"@lala0124","can_delete":false,"product_type":"c1","uid":1061982,"ip_address":"","ucode":"E14268BF32301C","user_header":"https://thirdwx.qlogo.cn/mmopen/vi_32/iatlKgvFoZibEvUUH0RgpB1CWtDLMB2icn8SkG4dJI2O6VgAd5PzwC1FEw4CdPab7v8v8vPWnksBbuJ3P62o7zWjg/132","comment_is_top":false,"comment_ctime":1521691638,"is_pvip":false,"replies":[{"id":"957","content":"三元组你可以把他们拼成一个字符串。就是key了。","user_name":"作者回复","user_name_real":"刑无刀","uid":"1005376","ctime":1521741765,"ip_address":"","comment_id":4200,"utype":1}],"discussion_count":1,"race_medal":0,"score":"5816658934","product_id":100005101,"comment_content":"老师，您好。我想问一下计算推荐分数的MapReduce过程的Reduce不是对相同key的value<br>执行某种操作吗？那这里的key是一个三元组，key相同的标准是什么？有说的不对的地方还请老师指正。","like_count":1,"discussions":[{"author":{"id":1005376,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/57/40/777bfe30.jpg","nickname":"刑无刀","note":"","ucode":"496201BF63D49D","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":416238,"discussion_content":"三元组你可以把他们拼成一个字符串。就是key了。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1521741765,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":4060,"user_name":"微微一笑","can_delete":false,"product_type":"c1","uid":1057385,"ip_address":"","ucode":"0BC081CA190D44","user_header":"https://static001.geekbang.org/account/avatar/00/10/22/69/c85fdb98.jpg","comment_is_top":false,"comment_ctime":1521422538,"is_pvip":false,"replies":[{"id":"920","content":"在路上了。","user_name":"作者回复","user_name_real":"刑无刀","uid":"1005376","ctime":1521597257,"ip_address":"","comment_id":4060,"utype":1}],"discussion_count":1,"race_medal":0,"score":"5816389834","product_id":100005101,"comment_content":"迫切期待工程篇","like_count":1,"discussions":[{"author":{"id":1005376,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/57/40/777bfe30.jpg","nickname":"刑无刀","note":"","ucode":"496201BF63D49D","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":416189,"discussion_content":"在路上了。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1521597257,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":4054,"user_name":"Grace","can_delete":false,"product_type":"c1","uid":1057507,"ip_address":"","ucode":"F240BB3606514F","user_header":"https://static001.geekbang.org/account/avatar/00/10/22/e3/adde3fd2.jpg","comment_is_top":false,"comment_ctime":1521420085,"is_pvip":false,"replies":[{"id":"918","content":"相似度计算不是，推荐部分可以。","user_name":"作者回复","user_name_real":"刑无刀","uid":"1005376","ctime":1521597229,"ip_address":"","comment_id":4054,"utype":1}],"discussion_count":1,"race_medal":0,"score":"5816387381","product_id":100005101,"comment_content":"本节讲的推荐计算是根据用户的日志实时更新的吗？谢谢","like_count":1,"discussions":[{"author":{"id":1005376,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/57/40/777bfe30.jpg","nickname":"刑无刀","note":"","ucode":"496201BF63D49D","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":416185,"discussion_content":"相似度计算不是，推荐部分可以。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1521597229,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":324261,"user_name":"雨~雨~雨","can_delete":false,"product_type":"c1","uid":2620759,"ip_address":"","ucode":"752350474D38E9","user_header":"https://static001.geekbang.org/account/avatar/00/27/fd/57/b45cc8cd.jpg","comment_is_top":false,"comment_ctime":1638351064,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1638351064","product_id":100005101,"comment_content":"打个卡，终于来到协同过滤章节了","like_count":0},{"had_liked":false,"id":242170,"user_name":"Geek_eb16ed","can_delete":false,"product_type":"c1","uid":1806886,"ip_address":"","ucode":"D6BB5EE0007097","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTLv9bbJmQ7IibpuWR8UCqzUafXIpJn4YpGNH01S0LE4WibZx7wGPIxibeNwNHZWrVdrt2YA9d5BNICrA/132","comment_is_top":false,"comment_ctime":1597628245,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1597628245","product_id":100005101,"comment_content":"干货满满","like_count":0},{"had_liked":false,"id":225152,"user_name":"胡渣大叔","can_delete":false,"product_type":"c1","uid":2029692,"ip_address":"","ucode":"402DD299E5B7E9","user_header":"https://static001.geekbang.org/account/avatar/00/1e/f8/7c/51b5d204.jpg","comment_is_top":false,"comment_ctime":1591667730,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1591667730","product_id":100005101,"comment_content":"越相似的用户，其相似内容权重越高","like_count":0},{"had_liked":false,"id":210488,"user_name":"阿星","can_delete":false,"product_type":"c1","uid":1195215,"ip_address":"","ucode":"6AFD288E9022C5","user_header":"https://static001.geekbang.org/account/avatar/00/12/3c/cf/fa5c5123.jpg","comment_is_top":false,"comment_ctime":1587777159,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1587777159","product_id":100005101,"comment_content":"将相似度计算拆成 Map Reduce 任务，将原始矩阵 Map 成键为用户对，值为两个用户对同一个物品的评分之积，Reduce 阶段对这些乘积再求和，Map Reduce 任务结束后再对这些值归一化；<br><br>---------------------------------<br>像这个map-reduce思想的解决方案，如果有个用spark&#47;MR的demo或者伪代码就更好了！","like_count":0},{"had_liked":false,"id":186746,"user_name":"Geeker","can_delete":false,"product_type":"c1","uid":1896510,"ip_address":"","ucode":"937B190AE0EC6F","user_header":"https://static001.geekbang.org/account/avatar/00/1c/f0/3e/f9f021bf.jpg","comment_is_top":false,"comment_ctime":1583916789,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1583916789","product_id":100005101,"comment_content":"感谢老师~","like_count":0},{"had_liked":false,"id":128067,"user_name":"ken","can_delete":false,"product_type":"c1","uid":1137330,"ip_address":"","ucode":"606DA1C78E67F2","user_header":"","comment_is_top":false,"comment_ctime":1566827088,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1566827088","product_id":100005101,"comment_content":"为老师鼓掌","like_count":0},{"had_liked":false,"id":116531,"user_name":"Geek_3d9942","can_delete":false,"product_type":"c1","uid":1609920,"ip_address":"","ucode":"F198B5343D3B61","user_header":"","comment_is_top":false,"comment_ctime":1563864898,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1563864898","product_id":100005101,"comment_content":"增加喜欢程度的衰减，........值和喜欢行为发生时间间隔正相关即可？？？？不应该是负相关吗？<br><br>","like_count":0},{"had_liked":false,"id":109136,"user_name":"漂泊的小飘","can_delete":false,"product_type":"c1","uid":1222578,"ip_address":"","ucode":"25C0CA4887D8AD","user_header":"https://static001.geekbang.org/account/avatar/00/12/a7/b2/274a4192.jpg","comment_is_top":false,"comment_ctime":1561969019,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1561969019","product_id":100005101,"comment_content":"幸亏我学过人工智能课和大数据课……不然这节又看不懂了","like_count":0},{"had_liked":false,"id":90165,"user_name":"shangqiu86","can_delete":false,"product_type":"c1","uid":1514817,"ip_address":"","ucode":"07D376EEC21BE4","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/qRjoqWIGC6tpmKZBGTxjQKC9cbz9XLhw2nF1c74R4icFOYOdVO4iaeQEQDqEvmbicxn6HEc4SU8kpkwVaO5nABMug/132","comment_is_top":false,"comment_ctime":1556437579,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1556437579","product_id":100005101,"comment_content":"之前我们组其他同事做过基于物品的协同过滤和基于用户的协同过滤效果对比，发现基于物品的协同过滤效果比较好，后面我去分析这个产品的数据的时候，发现这个众筹产品，用户行为相当稀疏，找寻到的用户的相似用户群体就很难准确，所以基于用户的协同过滤效果不好。<br>      之后我自己实践了协同过滤算法，我发现当用户行为很稀疏的时候，很容易发生稀疏数据倾斜，举个例子，当一个用户点击了10个sku，而其中8个sku都没有被其他用户点击过，那么基于物品的协同过滤出来的时候，这个8个sku与另外两个sku的相似度就是1，也就是最高的那个值，其实这是不合理的，所以要根据数据的稀疏情况，或者进行只被一个用户点过的sku的剔除，或者改进公式，加入sku的点击用户数这个因子。老师，您觉得呢？","like_count":0},{"had_liked":false,"id":26384,"user_name":"帅帅","can_delete":false,"product_type":"c1","uid":1062367,"ip_address":"","ucode":"4F2C2A48A39125","user_header":"https://static001.geekbang.org/account/avatar/00/10/35/df/67f91c36.jpg","comment_is_top":false,"comment_ctime":1537583114,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1537583114","product_id":100005101,"comment_content":"spark和mapreduce的编程方式完全不一样，写过原生mapreduce的人表示，用过spark后，再也没写过mapreduce了。","like_count":0},{"had_liked":false,"id":23701,"user_name":"*Smile*~","can_delete":false,"product_type":"c1","uid":1064581,"ip_address":"","ucode":"CF6006EF6E7C35","user_header":"https://static001.geekbang.org/account/avatar/00/10/3e/85/5392bc64.jpg","comment_is_top":false,"comment_ctime":1536594161,"is_pvip":false,"discussion_count":1,"race_medal":0,"score":"1536594161","product_id":100005101,"comment_content":"请问基于用户的协同过滤如何解决冷启动的问题呢","like_count":0,"discussions":[{"author":{"id":1394821,"avatar":"https://thirdwx.qlogo.cn/mmopen/vi_32/Q3auHgzwzM70IXdsspRrZMoAbiaZdRicvnIHBhBKT0f1icJPfIw4pJiaeqkQvYMLj1ChsQGEibicFaAMbJT9shJC4Sng/132","nickname":"rukidding","note":"","ucode":"EEF43323BC0D97","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":48576,"discussion_content":"朋友你到底看没看文章啊   全文第一句就是","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1573488402,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":7991,"user_name":"Geek_e1c6a0","can_delete":false,"product_type":"c1","uid":1068183,"ip_address":"","ucode":"5B985EFA33CD6A","user_header":"https://wx.qlogo.cn/mmopen/vi_32/UL02ia2qHNyCibQGtZksb7XSS7RzibVn8dmun5MMTWLryeVvq3uRbhaj4EMEUkXId6ROyldNgXVIEMiaOlsmNhWR4A/132","comment_is_top":false,"comment_ctime":1525833788,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1525833788","product_id":100005101,"comment_content":"老师您好，看了这篇专栏感觉收获很大。同时也有个问题，用户行为可能有很多种类，比如，点赞，评论，收藏。这时候，如果要计算用户相似度，是应该把各种行为加权求和得到一个分值用于计算，还是各种行为独立计算各自的相似度矩阵呢。如果采用加权求和的方式，确定各种行为的权重又是个麻烦的问题。 <br>还望老师指导一下。谢谢","like_count":0},{"had_liked":false,"id":5330,"user_name":"潘多拉魔盒","can_delete":false,"product_type":"c1","uid":1083823,"ip_address":"","ucode":"FFDBB23DB76F89","user_header":"https://static001.geekbang.org/account/avatar/00/10/89/af/e0c76fd4.jpg","comment_is_top":false,"comment_ctime":1523147803,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1523147803","product_id":100005101,"comment_content":"你好，问题咨询下，这里面相似度有个评分，我想知道用都没有正向反馈怎么评分，只有观看记录时长等","like_count":0},{"had_liked":false,"id":5304,"user_name":"Echo","can_delete":false,"product_type":"c1","uid":1054553,"ip_address":"","ucode":"8F781BE2E842AA","user_header":"https://static001.geekbang.org/account/avatar/00/10/17/59/8197a603.jpg","comment_is_top":false,"comment_ctime":1523076313,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1523076313","product_id":100005101,"comment_content":"个人见解回复email4u的问题:如果这样，分布式计算容易产生数据倾斜(单点)问题，有可能相似用户喜欢的东西很多，计算集中到一起，很慢。","like_count":0},{"had_liked":false,"id":5301,"user_name":"Lisa Li","can_delete":false,"product_type":"c1","uid":1046663,"ip_address":"","ucode":"4F7CF929FF4C6B","user_header":"https://static001.geekbang.org/account/avatar/00/0f/f8/87/0491e9e5.jpg","comment_is_top":false,"comment_ctime":1523073532,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1523073532","product_id":100005101,"comment_content":"“增加喜欢程度的时间衰减，一般使用一个指数函数，指数就是一个负数” 可以举一个例子吗？","like_count":0},{"had_liked":false,"id":4899,"user_name":"email4u","can_delete":false,"product_type":"c1","uid":1051016,"ip_address":"","ucode":"026B1B1ADA7548","user_header":"","comment_is_top":false,"comment_ctime":1522647127,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1522647127","product_id":100005101,"comment_content":"推荐计算模块时有一个mapreduce过程的第一步是不是有问题呢？<br>“遍历每个用户喜欢的物品列表；”<br><br>应该遍历的是每个用户吧，而不是每个用户喜欢的物品列表。<br>","like_count":0},{"had_liked":false,"id":4304,"user_name":"江枫","can_delete":false,"product_type":"c1","uid":1058771,"ip_address":"","ucode":"4E70420DC5EEDB","user_header":"https://static001.geekbang.org/account/avatar/00/10/27/d3/1a98a899.jpg","comment_is_top":false,"comment_ctime":1521959051,"is_pvip":false,"replies":[{"id":"1072","content":"可以。","user_name":"作者回复","user_name_real":"刑无刀","uid":"1005376","ctime":1522075978,"ip_address":"","comment_id":4304,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1521959051","product_id":100005101,"comment_content":"老师好，Pui的MR计算过程，查用户u的相似用户列表，以及相似用户对物品i的Rji值查询，在map搞个hashmap估计放不下，那是需要外部搞个redis等高速缓存查询吗？或者之前先做个MR，reduce到一起。","like_count":0,"discussions":[{"author":{"id":1005376,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/57/40/777bfe30.jpg","nickname":"刑无刀","note":"","ucode":"496201BF63D49D","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":416291,"discussion_content":"可以。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1522075978,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":4302,"user_name":"江枫","can_delete":false,"product_type":"c1","uid":1058771,"ip_address":"","ucode":"4E70420DC5EEDB","user_header":"https://static001.geekbang.org/account/avatar/00/10/27/d3/1a98a899.jpg","comment_is_top":false,"comment_ctime":1521958412,"is_pvip":false,"replies":[{"id":"1075","content":"当然要加。<br>看情况，可以试试。","user_name":"作者回复","user_name_real":"刑无刀","uid":"1005376","ctime":1522076120,"ip_address":"","comment_id":4302,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1521958412","product_id":100005101,"comment_content":"老师好，Pui的计算，如果Rji有一项是0，那么对应的SIMuj那一项会加在分母里吗？另外用户量很大的情况下，算TopK的相似用户，是否可以考虑用lsh这一类方法？","like_count":0,"discussions":[{"author":{"id":1005376,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/57/40/777bfe30.jpg","nickname":"刑无刀","note":"","ucode":"496201BF63D49D","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":416290,"discussion_content":"当然要加。\n看情况，可以试试。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1522076120,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":4169,"user_name":"曾阿牛","can_delete":false,"product_type":"c1","uid":1049468,"ip_address":"","ucode":"29A294174EF06B","user_header":"https://static001.geekbang.org/account/avatar/00/10/03/7c/39ea8a23.jpg","comment_is_top":false,"comment_ctime":1521644223,"is_pvip":false,"replies":[{"id":"960","content":"这个专栏后续有图书出版。","user_name":"作者回复","user_name_real":"刑无刀","uid":"1005376","ctime":1521742006,"ip_address":"","comment_id":4169,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1521644223","product_id":100005101,"comment_content":"原理和代码无缝结合在一起，如果有相关书籍推荐那更好了","like_count":0,"discussions":[{"author":{"id":1005376,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/57/40/777bfe30.jpg","nickname":"刑无刀","note":"","ucode":"496201BF63D49D","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":416224,"discussion_content":"这个专栏后续有图书出版。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1521742006,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":4135,"user_name":"林彦","can_delete":false,"product_type":"c1","uid":1032615,"ip_address":"","ucode":"5094CC6ED7B40C","user_header":"https://static001.geekbang.org/account/avatar/00/0f/c1/a7/5e66d331.jpg","comment_is_top":false,"comment_ctime":1521605243,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1521605243","product_id":100005101,"comment_content":"&quot;头部用户&quot;的问题是指在整体用户口味被头部大V用户影响较大的环境里文中采用的推荐系统会不会效果差一些。<br><br>因为文中提到&quot;对于这个方法计算出来的推荐结果本身，由于是基于口味计算得出，所以在更强调个人隐私场景中应用更佳，在这样的场景下，不受大 V 影响，更能反应真实的兴趣群体，而非被煽动的乌合之众。&quot;。<br><br>谢谢。","like_count":0},{"had_liked":false,"id":4100,"user_name":"dengos","can_delete":false,"product_type":"c1","uid":1024135,"ip_address":"","ucode":"0A57D9CE2DA232","user_header":"https://static001.geekbang.org/account/avatar/00/0f/a0/87/c5800312.jpg","comment_is_top":false,"comment_ctime":1521557963,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1521557963","product_id":100005101,"comment_content":"用户量大情景下相似度计算部分的介绍好像有点含糊: 提及的MR明显和特定相似度计算相关, 另外&lt;u1-u2, item&gt;这样的MR好像效率也是很低","like_count":0},{"had_liked":false,"id":4069,"user_name":"cook150","can_delete":false,"product_type":"c1","uid":1058249,"ip_address":"","ucode":"E1667A91F00076","user_header":"https://static001.geekbang.org/account/avatar/00/10/25/c9/6cd70ce9.jpg","comment_is_top":false,"comment_ctime":1521449993,"is_pvip":false,"replies":[{"id":"924","content":"我竟无言以对。","user_name":"作者回复","user_name_real":"刑无刀","uid":"1005376","ctime":1521597533,"ip_address":"","comment_id":4069,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1521449993","product_id":100005101,"comment_content":"老师的课如果早开一年 我的毕业论文可能不用写的这么艰难 ","like_count":0,"discussions":[{"author":{"id":1005376,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/57/40/777bfe30.jpg","nickname":"刑无刀","note":"","ucode":"496201BF63D49D","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":416195,"discussion_content":"我竟无言以对。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1521597533,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":4067,"user_name":"林彦","can_delete":false,"product_type":"c1","uid":1032615,"ip_address":"","ucode":"5094CC6ED7B40C","user_header":"https://static001.geekbang.org/account/avatar/00/0f/c1/a7/5e66d331.jpg","comment_is_top":false,"comment_ctime":1521437583,"is_pvip":false,"replies":[{"id":"923","content":"Map Reduce 只是个计算范式，可以在很多地方使用。<br>谢谢指出错误，你看得很认真！<br>你是说为头部用户推荐还是用头部用户给其他用户推荐？<br>","user_name":"作者回复","user_name_real":"刑无刀","uid":"1005376","ctime":1521597518,"ip_address":"","comment_id":4067,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1521437583","product_id":100005101,"comment_content":"谢谢邢无刀老师的分享。<br><br>1. 真是通俗又实用的Map Reduce入门，和实践工程场景结合得好紧密。好期待以后能看到Spark里面代码实例的分享(有了老师这个指引，搜索和思路也更精确了）。[微笑]<br><br>2. 原来C++里面也可以实现本地Map Reduce。自己不是科班出身，从来没学过和用过C++。不知道只会一点Python的条件下自己独立实现OpenMP做Map Reduce有多难。<br><br>3. 从应用场景的描述看，是不是文中提到的方法对微博这种靠头部用户驱动的场景表现较差?<br><br>4. 有一处小笔误。“分母是把和用户 u 相似的 n 个用户的相似度加起来，分母是把这 n 个用户各自对物品 i 的态度，按照相似度加权求和。”第二处分母是分子。老师的分享已经很不错了。这么短时间写出这么多高质量的内容造福大家。<br><br>挺期待将来更多实践中运用Spark, Numpy, Scipy, Pandas等工具的分享和思路。","like_count":0,"discussions":[{"author":{"id":1005376,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/57/40/777bfe30.jpg","nickname":"刑无刀","note":"","ucode":"496201BF63D49D","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":416194,"discussion_content":"Map Reduce 只是个计算范式，可以在很多地方使用。\n谢谢指出错误，你看得很认真！\n你是说为头部用户推荐还是用头部用户给其他用户推荐？\n","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1521597518,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]}]}