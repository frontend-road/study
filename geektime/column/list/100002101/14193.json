{"id":14193,"title":"116 | 掌握计算机视觉任务的基础模型和操作","content":"<p>今天，我们来聊一聊计算机视觉的一些最基础的操作和任务，包括像素表达、过滤器和边界探测。基于这些内容，我们一起讨论利用计算机来处理视觉问题的核心思路。很多时候，越是基础的内容就越重要，因为只有掌握了基础的思路，我们才能在今后复杂的任务中灵活应用。</p><h2>像素表达</h2><p>我们在上一次的分享中谈到了计算机视觉任务中一个非常重要的步骤，那就是把现实世界的信号通过感知仪器（Sensing Device）收集起来，然后在计算机系统中加以表达。那么，在所有的表达中，最基础的就是“<strong>像素表达</strong>”（Pixel）。我们这里就展开说一说这种表达的思路。</p><p>把图像信息利用像素来进行表达是一种非常直观简单的表达方式。</p><p>对于黑白图像来说，图像就被转换为了0或者1的<strong>二元矩阵</strong>。这个矩阵的每一个元素就是一个像素，0代表黑，1则代表白。</p><p>对于灰度图像来说，每一个像素，或者说是矩阵的每一个元素，代表灰度的“<strong>强度</strong>”（Intensity），从0到255，0代表黑，255代表白。</p><p>对于彩色的图像来说，我们一般要先选择一种模型来表示不同的颜色。一种较为流行的表达方式是RGB（红、绿、蓝）模型。在这样的模型中，任何一个彩色图像都能够转化成为RGB这三种颜色表达的叠加。具体来说，就是RGB分别代表三种不同的“通道”（Channel）。每一种通道都是原始图像在这个通道，也就是这个原始颜色下的表达。每一个通道都是一个矩阵像素表达。每一个像素代表着从0到255的值。换句话说，<strong>一个彩色图像在RGB模型下，是一个“张量”</strong>（Tensor），也就是三个矩阵叠加在一起的结果。</p><!-- [[[read_end]]] --><p>针对像素，你需要建立一种概念，那就是<strong>像素本身是对真实世界中的“采样”</strong>（Sample）。每一个像素是一个整数，整个像素表达并不是一个“连续”（Continuous）表达。因此，在把世界上的连续信号采样到离散像素的这一过程中，难免会有失真。而不同的“分辨率”，会带来失真程度不同的像素表达。</p><h2>过滤器</h2><p>既然已经把图像表达成为了像素，也就是某种矩阵的形式，那么我们就可以利用线性代数等工具在这个矩阵上进行变换，从而能够对图像进行某种操作。这就是“过滤器”（Filter）的一个基本思想。</p><p><strong>很多计算机视觉的操作本质上都是过滤器操作</strong>。除了把过滤器想成某种线性代数变换之外，更普遍的一种思路是把在矩阵上的操作想成某种函数的操作。因此，我们也可以认为过滤器是函数在某一个特定区间内的操作。</p><p>举一个最简单的过滤器的例子，就是“<strong>移动平均</strong>”（Moving Average）。这个过滤器的本质就是针对每一个像素点，计算它周围9个像素点的平均值。如果我们针对每一个像素进行这样的操作，就会得到一个新的矩阵。然后我们把这个矩阵当作新的像素表达进行视觉化，就会发现是在原有图像基础上进行了“柔化”处理。反过来，如果我们需要对某一个图像进行柔化处理，就需要对其进行“移动平均”过滤操作。</p><p>有了这个直观的例子，你一定能够想到，很多我们熟知的图像特效处理，其实都对应着某种过滤器操作。</p><p>这里，我们提及一种比较特殊的过滤处理，那就是“<strong>卷积</strong>”（Convolution）。这个概念我们在深度学习中经常接触到。</p><p>刚才我们说到“移动平均”这个过滤器。如果我们把图像看作是一个函数F在某一个区域的取值，那么，“移动平均”这个过滤器是针对函数在某一点的取值（也就是某一个像素的取值），通过利用同样的函数F在周围的取值，从而得到一个新的计算值。</p><p>那卷积操作的思想是怎样的呢？卷积是针对F在某一个点的取值，除了需要利用F在周围的点以外，还需要利用另外一个函数，这里称作是H的取值。也就是说，我们要利用H来针对F进行操作。</p><h2>边界探测</h2><p>除了通过过滤器对图像进行简单操作之外，还有一些图像的基本操作蕴含了计算机视觉的基本原理。我们这里也稍微做一些介绍。</p><p>例如我们通常需要了解图像的边界。有研究表明，图像的边界对于人类认知图像的内涵有着特殊的意义。因此从一个完整的图像中找到不同物体的边界是一个很有现实意义的任务，并且通常被称作是“<strong>边界探测</strong>”（Edge Detection）。</p><p>那么，怎么来认识图像中的物体边界呢？我们先从直观上来想一想，在图像中，“边界”都有什么特征？一般来说，如果我们遇到了色彩、景深、照明的突然变化，或者是其他某种图像特质上的突然变化，我们就有可能遇到了边界。现在的问题是，在像素或者函数表达的情况下，如何来描述和检测这些“突然变化”？</p><p>在数学分析中我们学过，描述函数值变化的概念叫“导数”或者“梯度”（Gradient）。梯度大小（Gradient Magnitude）和梯度方向（Gradient Direction）都包含了函数变化的重要信息。</p><p>虽然梯度从数学的角度来说刻画了函数的变化，但是这对于设计一个实际的边界探测器依然是不够的。一个好的边界探测器需要真正能够探测到边界，也就是要尽可能少地出现错误，能够对边界进行定位（Location）的同时还需要尽量使边界平滑和链接。</p><p>在真实的边界探测中，我们往往先让图像变得更加平滑，比如利用“<strong>高斯柔化</strong>”（Gaussian Blur）的办法，然后在这个基础上计算<strong>梯度大小和方向</strong>，有了这些之后再进行一些后期处理。</p><h2>小结</h2><p>今天我和分享了计算机视觉的一些基本数学模型和操作。</p><p>一起来回顾下要点：第一，像素是对真实世界的采样，我们分别讲了对黑白、灰度和彩色图像的像素表达；第二，我们讲了在像素表达之上的过滤器，介绍了移动平均和卷积两种方式；第三，我们简要提及了利用函数的梯度计算来进行边界检测的任务。</p><p>最后，给你留一个思考题，从边界检测的任务中，如何知道检测到的像素是真正属于边界呢？</p><p>欢迎你给我留言，和我一起讨论。</p><p></p>","comments":[{"had_liked":false,"id":312013,"user_name":"小南","can_delete":false,"product_type":"c1","uid":1177136,"ip_address":"","ucode":"8EF519F8C295D4","user_header":"https://static001.geekbang.org/account/avatar/00/11/f6/30/72b1263d.jpg","comment_is_top":false,"comment_ctime":1631590492,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1631590492","product_id":100002101,"comment_content":"计算边界检测区域的面积与实际面积对比，应该能回答老师的问题。不过我一般在处理边界问题的时候，都是一边调试处理，一边把边界线重新绘画到原图像中查看。","like_count":0},{"had_liked":false,"id":222400,"user_name":"皮特尔","can_delete":false,"product_type":"c1","uid":1017161,"ip_address":"","ucode":"313862C91DD325","user_header":"https://static001.geekbang.org/account/avatar/00/0f/85/49/585c69c4.jpg","comment_is_top":false,"comment_ctime":1590793904,"is_pvip":false,"discussion_count":1,"race_medal":0,"score":"1590793904","product_id":100002101,"comment_content":"图像的边缘处强度函数变化较大，所以可以使用导数来做边缘检测。同时为了避免导数受噪音影响，可以先对图像做平滑处理。可以使用文中介绍的“移动平均”过滤器。","like_count":0,"discussions":[{"author":{"id":2148913,"avatar":"","nickname":"Geek6241","note":"","ucode":"B0ABD28A20AF9C","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":309626,"discussion_content":"应该是差分吧，","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1601367997,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":156355,"user_name":"Alice","can_delete":false,"product_type":"c1","uid":1725046,"ip_address":"","ucode":"F0EDC16AC27088","user_header":"https://static001.geekbang.org/account/avatar/00/1a/52/76/7fb4a7a9.jpg","comment_is_top":false,"comment_ctime":1574861089,"is_pvip":false,"discussion_count":1,"race_medal":0,"score":"1574861089","product_id":100002101,"comment_content":"使边界平滑和边界探测两个概念有点搞不清，平滑之后是不是就不容易探测到边界了，还是两个概念用的是不同的方法相互是不干扰的？","like_count":0,"discussions":[{"author":{"id":1004218,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/52/ba/dd0dfe33.jpg","nickname":"李达","note":"","ucode":"9EB4E9490CDFB8","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":94617,"discussion_content":"柔化操作是为了去掉小的图像变化干扰，所以估计柔化程度要是自适应的才好。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1576975257,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":142245,"user_name":"hongbosherlock","can_delete":false,"product_type":"c1","uid":1350581,"ip_address":"","ucode":"45F1306FF3111E","user_header":"https://static001.geekbang.org/account/avatar/00/14/9b/b5/88f535ab.jpg","comment_is_top":false,"comment_ctime":1571320079,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1571320079","product_id":100002101,"comment_content":"老师讲的不错，但感觉课程互动太少了，效果不是很好。","like_count":0},{"had_liked":false,"id":21766,"user_name":"医用地狗精灵","can_delete":false,"product_type":"c1","uid":1215866,"ip_address":"","ucode":"06A217620E54E4","user_header":"https://static001.geekbang.org/account/avatar/00/12/8d/7a/4c187d0d.jpg","comment_is_top":false,"comment_ctime":1535329783,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1535329783","product_id":100002101,"comment_content":"既然边界可以是横竖斜，那么可以用个过滤器来测试两边的骤然变化。","like_count":0}]}