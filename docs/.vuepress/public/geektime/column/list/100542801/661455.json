{"id":661455,"title":"17｜推荐系统前端：如何用一个界面展示我们的成果？","content":"<p>你好，我是黄鸿波。</p><p>在前面的课程中，我们使用Flask搭建了一个非常简单的HTTP服务，也提供了推荐列表和注册登录相关的接口。本节课我们将继续沿着这条思路，将它们用前端界面的形式展现出来。</p><p>我把本节课分为了以下三个部分。</p><ol>\n<li>在服务端代码中增加点赞、收藏等交互信息。</li>\n<li>什么是Vue.js。</li>\n<li>如何使用Vue.js对接我们的HTTP服务进行展示。</li>\n</ol><h2><strong>在服务端代码中增加点赞、收藏等交互信息</strong></h2><p>我们前面基于Flask已经写了一个简单的分页请求、用户的登录和注册功能，接下来，我们基于服务框架完成点赞、收藏的接口的交互。</p><p>先来整体过一遍流程。</p><p>首先，用户在进入到推荐列表，或者说任意一个列表的时候，我们都需要请求这个列表的内容然后进行展示。这个请求的接口就是之前写的/recommendation/get_rec_list。</p><p>当用户拿到这个接口之后，就会去请求到每一个标题以及里面的内容。当用户点击内容请求详情页时，我们就需要将点赞数和收藏数展示给前端（这个数据在获取列表时已经获取，不需要单独进行请求）。</p><p>当前端点击一个页面进行点赞或收藏的操作时，前端需要通知后端有人进行了这些操作，后端接收到前端的通知后，就需要将数据库中的数字取出来然后再加上1，并返回用户请求成功的标志。这时，整个操作就完成了。</p><!-- [[[read_end]]] --><p>对于点赞、收藏和阅读来说，实际上都是同样的操作模式。我们先写一个接口，然后再举一反三，扩展到所有的接口程序。</p><p>在写接口之前，要清楚我们需要的就是以下两点。</p><ol>\n<li>不管是点赞还是收藏，都要插入相关的记录到MongoDB数据库，这个相当于用户行为记录。</li>\n<li>我们同时也要向Redis数据库插入一份数据，主要是用作用户读取内容信息，也就是在请求列表时所用。</li>\n</ol><p>有了这两个前提就可以写一个最简单的接口了。第一步，我们要先把这两个记录信息搞定，首先先在recommendation-service项目中增加叫service的一个目录，然后再在目录中新建一个叫log_data.py的Python文件，此时目录结构如下。</p><p><img src=\"https://static001.geekbang.org/resource/image/6e/61/6e3a4e608ddf40ec0818e3ab79563061.png?wh=563x918\" alt=\"图片\"></p><p>接着，在log_data.py文件下编写代码。</p><pre><code class=\"language-plain\">from dao import redis_db\nfrom datetime import datetime\nfrom dao import mongo_db\nimport random\n&nbsp;\n&nbsp;\nclass LogData(object):\n&nbsp;&nbsp;&nbsp;&nbsp;def __init__(self):\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;self._mongo = mongo_db.MongoDB(db='recommendation')\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;self._redis = redis_db.Redis()\n&nbsp;\n&nbsp;&nbsp;&nbsp;&nbsp;def insert_log(self, user_id, content_id, title, tables):\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;collection = self._mongo.db_client[tables]\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;info = {}\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;info['user_id'] = user_id\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;info['content_id'] = content_id\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;info['title'] = title\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;info['date'] = datetime.utcnow()\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;collection.insert(info)\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return True\n&nbsp;\n&nbsp;&nbsp;&nbsp;&nbsp;def modify_article_detail(self, key, ops):\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;try:\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;info = self._redis.redis.get(key)\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;info = eval(info)\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;info[ops] += 1\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;self._redis.redis.set(key, str(info))\n&nbsp;\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return True\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;except:\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return False\n</code></pre><p>我们来解释一下这段代码。这段代码实际上非常简单，首先定义了一个名为LogData的类，并初始化了两个实例，一个用于连接MongoDB数据库，另一个用于连接Redis数据库。<br>\n然后我们在这个类里定义了两个函数，分别是insert_log()和modify_article_detail()。</p><p>insert_log()方法用于向MongoDB中插入日志。它接受四个参数，分别是用户ID、内容ID、标题和表名。在方法内部，通过mongo_db库中的MongoDB对象建立了一个连接到指定表名的MongoDB集合。然后创建一个包含用户ID、内容ID、标题和UTC时间戳的字典。最后，向数据库中插入这个字典，并返回True。这里的表名主要是前面传过来用来区分是点赞还是收藏的字段，当前端传过来的是likes时，我们就会向likes表里插入一条记录点赞信息的记录，同理如果前端传过来的是collections，就会向collections表里增加一条收藏的记录。</p><p>modify_article_detail()方法用于修改Redis中的一些日志信息。它接受两个参数，分别是键名和操作。在方法内部，首先使用Redis对象的get()方法获取指定键名对应的值。然后，将获取到的值使用eval()函数转化为Python中的字典类型。接着根据传入的操作，对字典中的某个值进行加操作。最后，将修改后的字典重新转换为字符串类型，并使用Redis对象的set()方法重新设置键名对应的值。如果操作成功，返回True，否则返回False。在这里的Ops和前面方法里的Tables实际上是一样的操作，都是指的点赞、收藏等操作。</p><p>有了这两个记录，接下来我们就可以开始写app.py文件中与点赞和收藏相关的接口内容。同样，我们先来写点赞相关的接口。</p><p>我们直接看代码。</p><pre><code class=\"language-plain\">@app.route(\"/recommendation/likes\", methods=['POST'])\ndef likes():\n&nbsp;&nbsp;&nbsp;&nbsp;if request.method == 'POST':\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;try:\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;req_json = request.get_data()\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;rec_obj = json.loads(req_json)\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;user_id = rec_obj['user_id']\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;content_id = rec_obj['content_id']\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;title = rec_obj['title']\n&nbsp;\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;mysql = Mysql()\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;sess = mysql._DBSession()\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if sess.query(User.id).filter(User.id == user_id).count() &gt; 0:\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if log_data.insert_log(user_id, content_id, title, \"likes\") \\\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;and log_data.modify_article_detail(\"news_detail:\" + content_id, \"likes\"):\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;result = {\"code\": 0, \"msg\": \"点赞成功\", \"data\":[]}\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return jsonify(result)\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;else:\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return jsonify({\"code\": 1001, \"msg\": \"点赞失败\", \"data\": []})\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;else:\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return jsonify({\"code\": 1000, \"msg\": \"用户名不存在\", \"data\": []})\n&nbsp;\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;except Exception as e:\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;print(e)\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return jsonify({\"code\": 2000, \"msg\": str(e), \"data\": []})\n</code></pre><p>我来对这段代码进行一下解析。首先这段代码在最上面定义了一个Flask路由，并设置路由的访问地址为/recommendation/likes，也就是说，当前端通过这个接口进行请求并且请求方法为POST时，我们就会调用下面的likes()函数，完成相应的操作。<br>\n在likes()函数内部，我们先去判断是不是POST请求，如果是的话，再去接收参数和完成相应的操作。如果不是POST请求，就返回一个错误码给前端。</p><p>在接收参数的部分主要接收3个参数，即用户ID、内容ID和标题，并将它们分别赋值给user_id、content_id、title这三个变量。</p><p>当参数接收完之后，要对这些参数做进一步验证。首先，把user_id放到MySQL数据库中进行查询，看看是否存在这个用户。如果不存在就返回相应的错误码，如果存在，就调用与数据库相关的信息进行数据的插入。在插入数据部分，用的是一个双表同时插入的字段。当同时插入成功之后才算成功，然后返回给前端点赞成功，否则点赞失败。</p><p>我们也可以如法炮制，把收藏的代码实现出来。</p><pre><code class=\"language-plain\">@app.route(\"/recommendation/collections\", methods=['POST'])\ndef likes():\n&nbsp;&nbsp;&nbsp;&nbsp;if request.method == 'POST':\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;try:\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;req_json = request.get_data()\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;rec_obj = json.loads(req_json)\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;user_id = rec_obj['user_id']\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;content_id = rec_obj['content_id']\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;title = rec_obj['title']\n&nbsp;\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;mysql = Mysql()\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;sess = mysql._DBSession()\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if sess.query(User.id).filter(User.id == user_id).count() &gt; 0:\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if log_data.insert_log(user_id, content_id, title, \"collections\") \\\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;and log_data.modify_article_detail(\"news_detail:\" + content_id, \"collections\"):\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;kafka_producer.main(\"recommendation-logs\", bytes(content_id + \":collections success\", encoding='utf-8'))\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;result = {\"code\": 0, \"msg\": \"点赞成功\", \"data\":[]}\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return jsonify(result)\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;else:\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return jsonify({\"code\": 1001, \"msg\": \"点赞失败\", \"data\": []})\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;else:\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return jsonify({\"code\": 1000, \"msg\": \"用户名不存在\", \"data\": []})\n&nbsp;\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;except Exception as e:\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;print(e)\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return jsonify({\"code\": 2000, \"msg\": str(e), \"data\": []})\n</code></pre><h2><strong>Vue.js简介</strong></h2><p>Vue.js 是一个用于创建用户界面的动态<a href=\"https://appmaster.io/zh/blog/2022nian-shi-yong-de-zui-jia-javascriptkuang-jia-wan-zheng-zhi-nan\">JavaScript框架</a>，也是一款流行的JavaScript前端框架，旨在更好地组织与简化Web开发和创建单页应用的Web应用。</p><p><img src=\"https://static001.geekbang.org/resource/image/4e/e3/4ecd1d64eac5bdb92cbb27045070a7e3.png?wh=1242x772\" alt=\"图片\"></p><p>Vue所关注的核心是MVC模式中的视图层，同时，它也能方便地获取数据更新，并通过组件内部特定的方法实现视图与模型的交互。</p><p>Vue.js可以轻松地与第三方库、插件搭配使用，并且还有以下特点。</p><p><img src=\"https://static001.geekbang.org/resource/image/da/b6/dac65151e58544baef232b51d77b32b6.jpg?wh=3000x1952\" alt=\"\"></p><p>总之，Vue.js是一个非常优秀的前端框架，具有易学易用、高度可定制、灵活轻便、性能出色等特点，是现代Web应用开发中不可或缺的工具之一。</p><h2><strong>使用Vue.js对接HTTP服务进行展示</strong></h2><p>现在我们已经写完了接口，也对Vue.js有了一定的了解。接下来，我们就来基于Vue.js来实现需要的功能。先看下项目结构。</p><p><img src=\"https://static001.geekbang.org/resource/image/35/37/35a477b6a481b16ec8e9f67ecyyb4937.png?wh=626x1425\" alt=\"图片\"></p><p>前端的整套代码我统一放在了<a href=\"https://github.com/ipeaking/recommendation_for_android\">GitHub</a>上。</p><p>特别说明：目前 GitHub 上的代码使用的是 Android 的代码，这套代码相比 HTML 的代码信息更全，要使用 Android Studio 运行。先进行尝试，如果有困难，可以进一步留言，我会再去给你VUE课程中的这套。</p><p>这里我们主要来讲讲这段代码里面的重点内容。</p><p>这段代码主要分成这么几个部分：登录、新闻列表、新闻的详情页。</p><p>登录相关的界面主要放在pages/login/login.vue代码中。这段代码很简单，就是拿到用户的用户名和密码，然后请求我们的后端，这时就会进入到recommendation-service中的login()函数，对应着/recommendation/login这个接口。</p><p>新闻列表和新闻详情页在界面展示上实际上是一个页面，即左侧是列表右侧是详情。在这里，实际上就是左侧请求到recommendation-service的/recommendation/get_rec_list这个接口，右侧就是拿到这个接口里面的内容进行显示（也就是详情页）。因此在Web端的代码中，左侧实际上是在pages/news/news-page.vue中，请求相关的列表也是在这个页面中进行请求，然后将获得的结果传入到右侧。</p><p>在Vue.js中，所有的请求都可以使用uni.request()方法来进行实现，例如可以使用如下代码来获取一段request请求。</p><pre><code class=\"language-plain\">uni.request({\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;// url: this.$host + 'api/news',\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;url: 'HTTP://localhost/recommendation/get_rec_list',\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;data: this.requestParams,\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;success: (result) =&gt; {\n\t\t&nbsp;&nbsp;}\n\t\t&nbsp;&nbsp;})\n</code></pre><p>对于点赞和收藏相关的内容，实际上就是在news-items.nvue文件下面的 <code>&lt;script&gt;</code> 标签中，这里我为你展示一下框架代码。</p><pre><code class=\"language-plain\">&lt;script&gt;\n\texport default {\n\t\tdata() {\n\t\t\t\t\treturn {\n\t\t\t\t\t\tcollect: false, //判断是否已收藏\n\t\t\t\t\t}\n\t\t\t\t},\n\t\tprops: {\n\t\t\tnewsItem: {\n\t\t\t\ttype: Object,\n\t\t\t\tdefault: function(e) {\n\t\t\t\t\treturn {}\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\t\tmethods: {\n\t\t\tclick() {\n\t\t\t\tthis.$emit('click');\n\t\t\t},\n\t\t\tclose(e) {\n\t\t\t\te.stopPropagation();\n\t\t\t\tthis.$emit('close');\n\t\t\t},\n\t\t\tlike(e) {\n\t\t\t\te.stopPropagation();\n\t\t\t\tthis.$emit('like');\n\t\t\t\t// 在这里加\n\t\t\t},\n\t\t\tcollectwin(e) {\n\t\t\t\te.stopPropagation();\n\t\t\t\tthis.$emit('collectwin');\n\t\t\t\t// 在这里加\n\t\t\t},\n\t\t\tchangeImg() {\n\t\t\t\t\t\t\tvar that = this;\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t//收藏\n\t\t\t\t\t\t\tif (that.collect == false) {\n\t\t\t\t\t\t\t\tthat.collect = true;\n&nbsp;\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t//取消收藏\n\t\t\t\t\t\t\t\tthat.collect = false;\n\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t},\n\t\t}\n\t}\n&lt;/script&gt;\n</code></pre><p>在上面的代码中，主要是对点赞、收藏等操作的实现，以及关闭按钮的实现等。</p><ul>\n<li>export default表示定义了一个默认的 Vue 组件。</li>\n<li>data()是 Vue 中的一个选项，用来定义组件的初始数据。</li>\n<li>props是 Vue 中的另一个选项，用来定义组件的参数。</li>\n<li>methods是一个选项，包含了组件中的函数。</li>\n<li>this.$emit()是一个方法，用来触发指定事件，从而通知其他组件。</li>\n</ul><p>具体来说，这个组件包含有一个collect属性，用来表示是否已经收藏了某篇新闻。 然后组件接受一个newsItem参数，该参数是一个对象，包含有新闻的信息。 组件中定义了以下四个方法。</p><ul>\n<li>click()：在单击时触发某个事件。</li>\n<li>close()：在关闭时触发某个事件。</li>\n<li>like()：在点赞时触发某个事件。</li>\n<li>collectwin()：在收藏时触发某个事件。</li>\n</ul><p>最后，组件中包含一个changeImg()方法用来改变图片。在该方法中，如果当前没有收藏，就将collect属性设置为True，否则就设置为False，实现切换收藏的状态。在代码里我注释的部分，都需要请求我们的服务器端获取数据。</p><p>当项目正常运行后，效果如下。</p><p><img src=\"https://static001.geekbang.org/resource/image/23/df/23d033765a20522477e42998f06da9df.jpg?wh=3000x1514\" alt=\"\"></p><p></p><h2>总结</h2><p>到这里，这节课也就接近尾声了，我们对今天的课程做一个总结，今天这节课一共有以下四个要点。</p><ol>\n<li>你可以使用Flask的方式完成一个HTTP服务，这个服务我们实现了登录、注册、点赞、收藏、获取列表和内容等信息。</li>\n<li>了解Vue.js 是一个构建用户界面的渐进式框架，也可看作 MVVM 框架。其核心库只关注视图层。其它一些周边的库，如 vue-router、vuex、axios等等，都是以插件的形式加入到项目中，从而形成了一个全面的生态系统。</li>\n<li>Vue.js 提供了声明式渲染、组件系统、客户端路由、大量的工具和插件，这些特性使得开发者在构建用户界面方面更加容易和高效。Vue.js 设计非常灵活，因此在小型到中型的单页面应用中得到了广泛的应用。</li>\n<li>熟悉如何在Vue.js中进行网络请求，从而实现我们的需求。</li>\n</ol><h2>课后题</h2><p>学完本节课，给你留两个小作业。</p><ol>\n<li>学习Vue的整体使用方法，并试着读懂GitHub上的代码。</li>\n<li>试着在上面添加功能和修改界面。</li>\n</ol><p>欢迎你在留言区与我交流讨论，如果这节课对你有帮助，也欢迎你推荐给朋友一起学习。</p>","comments":[{"had_liked":false,"id":375757,"user_name":"alexliu","can_delete":false,"product_type":"c1","uid":1112019,"ip_address":"上海","ucode":"DD65983BBC9CD4","user_header":"https://static001.geekbang.org/account/avatar/00/10/f7/d3/2bbc62b2.jpg","comment_is_top":false,"comment_ctime":1685950536,"is_pvip":false,"replies":[{"id":140030,"content":"是的，感谢指正","user_name":"作者回复","user_name_real":"编辑","uid":1982950,"ctime":1699860803,"ip_address":"广东","comment_id":375757,"utype":1}],"discussion_count":1,"race_medal":0,"score":2,"product_id":100542801,"comment_content":"收藏新闻的函数名与likes一样，应该改为collections","like_count":1,"discussions":[{"author":{"id":1982950,"avatar":"https://static001.geekbang.org/account/avatar/00/1e/41/e6/beb42103.jpg","nickname":"黄鸿波","note":"","ucode":"5EB4E6946A363C","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":631665,"discussion_content":"是的，感谢指正","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1699860804,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"广东","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":375097,"user_name":"Geek_ccc0fd","can_delete":false,"product_type":"c1","uid":1461544,"ip_address":"广东","ucode":"DB53D576AEC020","user_header":"https://thirdwx.qlogo.cn/mmopen/vi_32/EaBxhibOicZe9L7z2icbU4W462l543drFWYqibqczTicj4Msyb2g9pDSGmFTiafW9jibwib7jG6hpAdPMcCowdCiaxHaOdA/132","comment_is_top":false,"comment_ctime":1684910280,"is_pvip":false,"replies":[{"id":136911,"content":"同学你好，感谢你的代码，可以推广给其他同学。","user_name":"作者回复","user_name_real":"编辑","uid":1982950,"ctime":1685030163,"ip_address":"广东","comment_id":375097,"utype":1}],"discussion_count":1,"race_medal":0,"score":2,"product_id":100542801,"comment_content":"modify_article_detail会报错type object &#39;datetime.datetime&#39; has no attribute &#39;datetime&#39;，原因是将info eval成字典时，时间字段的内容是datetime.datetime(2023, 5, 6, 0, 5)，我们导入的包是from datetime import datetime，修改成 import datetime就正常了，同时insert_log里面也需要修改一下info[&#39;date&#39;] = datetime.datetime.utcnow()，\n我将代码上传到了GitHub，修改了点赞，收藏，点击都使用同一个接口：https:&#47;&#47;github.com&#47;jditlee&#47;rec_service","like_count":1,"discussions":[{"author":{"id":1982950,"avatar":"https://static001.geekbang.org/account/avatar/00/1e/41/e6/beb42103.jpg","nickname":"黄鸿波","note":"","ucode":"5EB4E6946A363C","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":619371,"discussion_content":"同学你好，感谢你的代码，可以推广给其他同学。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1685030163,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"广东","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":375185,"user_name":"peter","can_delete":false,"product_type":"c1","uid":1058183,"ip_address":"北京","ucode":"261C3FC001DE2D","user_header":"https://static001.geekbang.org/account/avatar/00/10/25/87/f3a69d1b.jpg","comment_is_top":false,"comment_ctime":1685022282,"is_pvip":false,"replies":[{"id":136909,"content":"同学你好：\nA1:Vue和Node.js是两个完全不同的东西。 \nVue是一个客户端框架，用于构建Web界面和应用程序。它基于JavaScript和MVVM模式，非常适合开发单页和多页应用，可以与其他库和框架一起使用。\nNode.js是一个服务器端运行环境，用于构建高效的网络和服务器应用程序，它基于JavaScript和事件驱动的非阻塞I&#47;O模型，特别适用于高并发的应用和实时应用程序，如聊天应用程序、游戏服务器和数据中心。\n尽管Vue和Node.js是两个不同的东西，但它们可以被组合使用，以构建全栈Web应用程序，其中Vue用于客户端界面，Node.js用于服务器端逻辑。例如，您可以使用Vue的组件在服务器端渲染Vue应用程序。\nA2:可以使用vscode打开；\nA3:一般可以使用kafka来收集，然后配合Elasticsearch进行处理。","user_name":"作者回复","user_name_real":"编辑","uid":1982950,"ctime":1685029933,"ip_address":"广东","comment_id":375185,"utype":1}],"discussion_count":2,"race_medal":0,"score":2,"product_id":100542801,"comment_content":"请教老师几个问题：\nQ1：请问Vue和node是什么关系？\nQ2：老师的前端代码是用HBuilderX，其工程能用VSCode打开吗？\nQ3：大公司的日志一般怎么处理的？","like_count":0,"discussions":[{"author":{"id":1982950,"avatar":"https://static001.geekbang.org/account/avatar/00/1e/41/e6/beb42103.jpg","nickname":"黄鸿波","note":"","ucode":"5EB4E6946A363C","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":619368,"discussion_content":"同学你好：\nA1:Vue和Node.js是两个完全不同的东西。 \nVue是一个客户端框架，用于构建Web界面和应用程序。它基于JavaScript和MVVM模式，非常适合开发单页和多页应用，可以与其他库和框架一起使用。\nNode.js是一个服务器端运行环境，用于构建高效的网络和服务器应用程序，它基于JavaScript和事件驱动的非阻塞I/O模型，特别适用于高并发的应用和实时应用程序，如聊天应用程序、游戏服务器和数据中心。\n尽管Vue和Node.js是两个不同的东西，但它们可以被组合使用，以构建全栈Web应用程序，其中Vue用于客户端界面，Node.js用于服务器端逻辑。例如，您可以使用Vue的组件在服务器端渲染Vue应用程序。\nA2:可以使用vscode打开；\nA3:一般可以使用kafka来收集，然后配合Elasticsearch进行处理。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1685029933,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"广东","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":2871611,"avatar":"https://static001.geekbang.org/account/avatar/00/2b/d1/3b/a94459d2.jpg","nickname":"GhostGuest","note":"","ucode":"A6785E3304276B","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":619402,"discussion_content":"可以理解Vue是框架，Node.js是开发语言","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1685066861,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":"上海","group_id":0},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":385336,"user_name":"悟尘","can_delete":false,"product_type":"c1","uid":2189310,"ip_address":"北京","ucode":"4E7E854340D3A4","user_header":"https://static001.geekbang.org/account/avatar/00/21/67/fe/5d17661a.jpg","comment_is_top":false,"comment_ctime":1702458873,"is_pvip":false,"replies":null,"discussion_count":1,"race_medal":0,"score":2,"product_id":100542801,"comment_content":"老师，请问前端代码在哪？","like_count":2,"discussions":[{"author":{"id":2189275,"avatar":"https://static001.geekbang.org/account/avatar/00/21/67/db/6146bce8.jpg","nickname":"朱得君","note":"","ucode":"ADA07F1B1FC95F","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":652365,"discussion_content":"同问啊, github上的代码和讲义上根本对不上哦","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1728798245,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":"北京","group_id":0},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":384597,"user_name":"Geek_bc29e8","can_delete":false,"product_type":"c1","uid":2986300,"ip_address":"江西","ucode":"5CC37346A47441","user_header":"","comment_is_top":false,"comment_ctime":1701223474,"is_pvip":false,"replies":null,"discussion_count":0,"race_medal":0,"score":2,"product_id":100542801,"comment_content":"老师，请问前端代码在哪？","like_count":2},{"had_liked":false,"id":389380,"user_name":"贾维斯Echo","can_delete":false,"product_type":"c1","uid":2820504,"ip_address":"北京","ucode":"BB8C507E46A9E5","user_header":"https://static001.geekbang.org/account/avatar/00/2b/09/98/397c2c81.jpg","comment_is_top":false,"comment_ctime":1712329907,"is_pvip":true,"replies":null,"discussion_count":1,"race_medal":0,"score":2,"product_id":100542801,"comment_content":"求前端代码","like_count":1,"discussions":[{"author":{"id":2189275,"avatar":"https://static001.geekbang.org/account/avatar/00/21/67/db/6146bce8.jpg","nickname":"朱得君","note":"","ucode":"ADA07F1B1FC95F","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":652364,"discussion_content":"同问啊, github上的代码和讲义上根本对不上哦","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1728798233,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":"北京","group_id":0},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":387966,"user_name":"Geek_645654","can_delete":false,"product_type":"c1","uid":1308139,"ip_address":"上海","ucode":"8ABB67949272ED","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTKwDkeEw10ZJM59IPmzZz7fGGLWenuUhxoYiaQk6ibPFpqdtDlicceW2vEzTzEIBlUQO3EibAudh2MC9Q/132","comment_is_top":false,"comment_ctime":1709042547,"is_pvip":false,"replies":null,"discussion_count":0,"race_medal":0,"score":2,"product_id":100542801,"comment_content":"请问前端代码在哪？\n","like_count":1},{"had_liked":false,"id":380194,"user_name":"静心","can_delete":false,"product_type":"c1","uid":1335457,"ip_address":"北京","ucode":"EB264FA6519FDA","user_header":"https://static001.geekbang.org/account/avatar/00/14/60/a1/45ffdca3.jpg","comment_is_top":false,"comment_ctime":1693194458,"is_pvip":false,"replies":null,"discussion_count":0,"race_medal":0,"score":2,"product_id":100542801,"comment_content":"关于前端知识方面欠缺一点儿专业性，英文专业术语的发音很别扭，比如，Vue.js应该读&quot;v u . js&quot;，“ uni.request() ”是什么，引用了哪个库，也没说清楚。","like_count":1},{"had_liked":false,"id":395783,"user_name":"大骨头","can_delete":false,"product_type":"c1","uid":2737847,"ip_address":"广东","ucode":"D7927E345D7B39","user_header":"https://static001.geekbang.org/account/avatar/00/29/c6/b7/d14ea6ab.jpg","comment_is_top":false,"comment_ctime":1732065406,"is_pvip":false,"replies":null,"discussion_count":0,"race_medal":0,"score":2,"product_id":100542801,"comment_content":"老师,github上的代码和讲义对不上啊,github上是个原生安卓工程,讲义是vue, 麻烦更新一下","like_count":0},{"had_liked":false,"id":394915,"user_name":"朱得君","can_delete":false,"product_type":"c1","uid":2189275,"ip_address":"北京","ucode":"ADA07F1B1FC95F","user_header":"https://static001.geekbang.org/account/avatar/00/21/67/db/6146bce8.jpg","comment_is_top":false,"comment_ctime":1728798288,"is_pvip":false,"replies":null,"discussion_count":3,"race_medal":0,"score":2,"product_id":100542801,"comment_content":"老师好, github上的代码和讲义对不上哦, 没发对应着看, 请问具体怎么处理呢? 谢谢","like_count":0,"discussions":[{"author":{"id":2737847,"avatar":"https://static001.geekbang.org/account/avatar/00/29/c6/b7/d14ea6ab.jpg","nickname":"大骨头","note":"","ucode":"D7927E345D7B39","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":654167,"discussion_content":"我也有同样的问题,请问你找到了吗","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1732065476,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":"广东","group_id":0},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":3972559,"avatar":"https://static001.geekbang.org/account/avatar/00/3c/9d/cf/96713901.jpg","nickname":"Baird","note":"","ucode":"FC70CBB11730FE","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":653124,"discussion_content":"你好，请问代码找到了吗？","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1730277873,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":"上海","group_id":0},"score":2,"extra":"","child_discussion_number":1,"child_discussions":[{"author":{"id":2737847,"avatar":"https://static001.geekbang.org/account/avatar/00/29/c6/b7/d14ea6ab.jpg","nickname":"大骨头","note":"","ucode":"D7927E345D7B39","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":3972559,"avatar":"https://static001.geekbang.org/account/avatar/00/3c/9d/cf/96713901.jpg","nickname":"Baird","note":"","ucode":"FC70CBB11730FE","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":654168,"discussion_content":"像这种反馈都没有响应的?","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1732065522,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":653124,"ip_address":"广东","group_id":0},"score":654168,"extra":""}]}]},{"had_liked":false,"id":385338,"user_name":"悟尘","can_delete":false,"product_type":"c1","uid":2189310,"ip_address":"北京","ucode":"4E7E854340D3A4","user_header":"https://static001.geekbang.org/account/avatar/00/21/67/fe/5d17661a.jpg","comment_is_top":false,"comment_ctime":1702459564,"is_pvip":false,"replies":null,"discussion_count":0,"race_medal":0,"score":3,"product_id":100542801,"comment_content":"其实像类似点赞、收藏、评论功能，用 图数据库 存储岂不是更好？为每种关系创建一个顶点类型（Vertex Type）或节点类型，并为它们之间的关系创建边类型（Edge Type）。这样可以更好地表示用户与内容之间的多对多关系。\n假设我们有一个名为 User 的顶点类型，代表用户；一个名为 Content 的顶点类型，代表内容。我们可以分别为点赞、收藏和评论创建三个边类型：\nLike: 用于表示用户喜欢某条内容。\nCollection: 用于表示用户收藏了某条内容。\nComment: 用于表示用户在某条内容上发表了评论。\n以下是一个可能的数据模型示例：\n(User)-[:Likes]-&gt;(Content)\n(User)-[:Collections]-&gt;(Content)\n(User)-[:Comments]-&gt;(Comment)-[:On]-&gt;(Content)","like_count":0},{"had_liked":false,"id":385337,"user_name":"悟尘","can_delete":false,"product_type":"c1","uid":2189310,"ip_address":"北京","ucode":"4E7E854340D3A4","user_header":"https://static001.geekbang.org/account/avatar/00/21/67/fe/5d17661a.jpg","comment_is_top":false,"comment_ctime":1702459185,"is_pvip":false,"replies":null,"discussion_count":0,"race_medal":0,"score":3,"product_id":100542801,"comment_content":"collection.insert(info), 你用的哪个版本的MongoDB？为啥我这段代码报错了：\n&quot;&#39;Collection&#39; object is not callable. If you meant to call the &#39;insert&#39; method on a &#39;Collection&#39; object it is failing because no such method exists.&quot;\n只能换橙insert_one方法","like_count":0}]}