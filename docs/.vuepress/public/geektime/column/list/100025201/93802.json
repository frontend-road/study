{"id":93802,"title":"07 | 软件运行机制及内存管理","content":"<p>你好，我是七牛云许式伟。</p><p>操作系统的核心职能是软件治理，而软件治理的一个很重要的部分，就是让多个软件可以共同合理使用计算机的资源，不至于出现争抢的局面。</p><p>内存作为计算机最基础的硬件资源，有着非常特殊的位置。我们知道，CPU 可以直接访问的存储资源非常少，只有：寄存器、内存（RAM）、主板上的 ROM。</p><p>寄存器的访问速度非常非常快，但是数量很少，大部分程序员不直接打交道，而是由编程语言的编译器根据需要自动选择寄存器来优化程序的运行性能。</p><p>主板上的 ROM 是非易失的只读的存储。所谓非易失，是计算机重新启动后它里面的数据仍然会存在。这不像内存（RAM），计算机重新启动后它上面的数据就丢失了。ROM 非易失和只读的特点，决定了它非常适合存储计算机的启动程序（BIOS）。</p><p>所以你可以看到，内存的地位非常特殊，它是唯一的 CPU 内置支持，且和程序员直接会打交道的基础资源。</p><p>内存有什么用？前面我们在 “<a href=\"https://time.geekbang.org/column/article/91007\">02 | 大厦基石：无生有，有生万物</a>” 一讲中介绍冯·诺依曼结构的时候，画过一个图：</p><p><img src=\"https://static001.geekbang.org/resource/image/cf/37/cf77b8fbe8a559cecbb264c390bc7337.png?wh=1920*763\" alt=\"\"></p><p>从图中可以看出，存储的作用有两个：一个是作为 “计算” 的操作对象，输入和输出数据存放的所在；另一个是存放 “计算” 本身，也就是程序员写的程序。</p><p>这里说的存储，主要指的就是内存。</p><!-- [[[read_end]]] --><h2>计算机运行全过程</h2><p>当然，这是从 CPU 角度看到的视图：对于 CPU 来说，“计算” 过程从计算机加电启动，执行 BIOS 程序的第一条指令开始，到最后计算机关机，整个就是一个完整的 “计算” 过程。这个过程有多少个“子的 ‘计算’过程”，它并不关心。</p><p>但是从操作系统的视角来看，计算机从开机到关机，整个 “计算” 过程，由很多软件，也就是子 “计算” 过程，共同完成。从时序来说，计算机完整的 “计算” 过程如下：</p><p><img src=\"https://static001.geekbang.org/resource/image/5a/02/5a44dba21554d921c480cd2785874202.png?wh=1440*1080\" alt=\"\"></p><p>整个 “计算” 过程的每个子过程都有其明确的考量。</p><p>首先，BIOS 程序没有固化在 CPU 中，而是独立放到主板的 ROM 上，是因为不同历史时期的计算机输入输出设备很不一样，有键盘+鼠标+显示器的，有触摸屏的，也有纯语音交互的，外置存储则有软盘，硬盘，闪存，这些变化我们通过调整 BIOS 程序就可以应对，而不需要修改 CPU。</p><p>引导区引导程序，则是程序从内置存储（ROM）转到外置存储的边界。引导区引导程序很短，BIOS 只需要把它加载到内存执行就可以，但是这样系统的控制权就很巧妙地转到外置存储了。</p><p>引导区引导程序不固化在 BIOS 中，而是写在外置存储的引导区，是为了避免 BIOS 程序需要经常性修改。毕竟 BIOS 还是硬件，而引导区引导程序已经属于软件范畴了，修改起来会方便很多。</p><p>OS 引导程序，则是外置存储接手计算机控制权的真正开始。这里 OS 是操作系统（Operating System）的缩写。操作系统从这里开始干活了。这个过程发生了很多很多事情，这里我们先略过。但是最终所有的初始化工作完成后，操作系统会把执行权交给 OS Shell 程序。</p><p>OS Shell 程序负责操作系统与用户的交互。最早的时候，计算机的交互界面是字符界面，OS Shell 程序是一个命令行程序。DOS 中叫 command.com，而在 Linux 下则叫 sh 或者 bash 之类。这里的 sh 就是 shell 的缩写。</p><p>这个时期启动一个软件的方式就是在 Shell 程序中输入一个命令行，Shell 负责解释命令行理解用户的意图，然后启动相应的软件。到了图形界面时期，在 Shell 中启动软件就变成点点鼠标，或者动动手指（触摸屏）就行了，交互范式简化了很多。</p><p>在了解了计算机从开机到关机的整个过程后，你可能很快会发现，这里面有一个很关键的细节没有交代：计算机是如何运行外置存储上的软件的？</p><p>这和内存管理有关。</p><p>结合内存的作用，我们谈内存管理，只需要谈清楚两个问题：</p><ul>\n<li>如何分配内存（给运行中的软件，避免它们发生资源争抢）；</li>\n<li>如何运行外置存储（比如硬盘）上的软件？</li>\n</ul><p>在回答这两个问题之前，我们先了解一个背景知识：CPU 的实模式和保护模式。这两个模式 CPU 对内存的操作方式完全不同。在实模式下，CPU 直接通过物理地址访问内存。在保护模式下，CPU 通过一个地址映射表把虚拟的内存地址转为物理的内存地址，然后再去读取数据。</p><p>相应的，工作在实模式下的操作系统，我们叫实模式操作系统；工作在保护模式下的操作系统，我们叫保护模式操作系统。</p><h2>实模式下的内存管理</h2><p>先看实模式操作系统。</p><p>在实模式操作系统下，所有软件包括操作系统本身，都在同一个物理地址空间下。在 CPU 看来，它们是同一个程序。操作系统如何分配内存？至少有两种可行的方法。</p><p>其一，把操作系统内存管理相关的函数地址，放到一个大家公认的地方（比如 0x10000 处），每个软件要想申请内存就到这个地方取得内存管理函数并调用它。</p><p>其二，把内存管理功能设计为一个中断请求。所谓中断，是 CPU 响应硬件设备事件的一个机制。当某个输入输出设备发生了一件需要 CPU 来处理的事情，它就会触发一个中断。</p><p>内存的全局有一个中断向量表，本质上就是在一个大家公认的地方放了一堆函数地址。比如键盘按了一个键，它会触发 9 号中断。在 CPU 收到中断请求时，它会先停下手头的活来响应中断请求（到中断向量表找到第 9 项对应的函数地址并去执行它），完成后再回去干原来的活。</p><p>中断机制设计之初本来为响应硬件事件之用，但是 CPU 也提供了指令允许软件触发一个中断，我们把它叫软中断。比如我们约定 77 号中断为内存管理中断，操作系统在初始化时把自己的内存管理函数写到中断向量表的第 77 项。</p><p>所以，上面两种方法实质上是同一个方法，只是机制细节有所不同而已。中断机制远不止是函数向量表那么简单。比如中断会有优先级，高优先级中断可以打断低优先级中断，反之则不能。</p><p>那么，在实模式下，操作系统如何运行外置存储（比如硬盘）上的软件？</p><p>很简单，就是把软件完整从外置存储读入到内存然后执行它。不过，在执行前它干了一件事情，把浮动地址固定下来。为什么会有浮动地址？因为软件还没有加载到内存的时候并不知道自己会在哪里，所以有很多涉及数据的地址、函数的地址都没法固定下来，要在操作系统把它加载到内存时来确定。</p><p>整体来说，实模式内存管理的机制是非常容易理解的。因为它毕竟实质上是一个程序被拆分为很多个软件（程序代码片段），实现了程序代码片段的动态加载而已。</p><h2>保护模式下的内存管理</h2><p>但实模式有两个问题。</p><p>其一是安全性。操作系统以及所有软件都运行在一起，相互之间可以随意修改对方的数据甚至程序指令，这样搞破坏就非常容易。</p><p>其二是支持的软件复杂性低，同时可运行的软件数量少。</p><p>一方面，软件越复杂，它的程序代码量就越多，需要的存储空间越大，甚至可能出现单个软件的大小超过计算机的可用内存，这时在实模式下就没法执行它。</p><p>另一方面，哪怕单个软件可运行，但是一旦我们同时运行的软件多几个，操作系统对内存的需求量就会急剧增加。相比这么多软件加起来的内存需求量，内存的存储空间往往仍然是不足的。</p><p>但是为什么平常我们可以毫无顾忌地不断打开新的软件，从来不曾担心过内存会不足呢？</p><p>这就是保护模式的作用了。保护模式下，内存访问不再是直接通过物理内存，而是基于虚拟内存。虚拟内存模式下，整个内存空间被分成很多个连续的内存页。每个内存页大小是固定的，比如 64K。</p><p>这样，每次 CPU 访问某个虚拟内存地址中的数据，它都会先计算出这是要访问哪个内存页，然后 CPU 再通过一个地址映射表，把虚拟的内存地址转为物理的内存地址，然后到这个物理内存地址去读取数据。地址映射表是一个数组，下标是内存页页号，值是该内存页对应的物理内存首地址。</p><p>当然，也有可能某一个内存页对应的物理内存地址还不存在，这种情况叫缺页，没法读取数据，这时 CPU 就会发起一个缺页的中断请求。</p><p><img src=\"https://static001.geekbang.org/resource/image/ae/85/ae0a79ee0dabba34bca6a5de97d7af85.png?wh=1920*967\" alt=\"\"></p><p>这个缺页的中断请求会被操作系统接管。发生缺页时，操作系统会为这个内存页分配物理的内存，并恢复这个内存页的数据。如果没有空闲的物理内存可以分配，它就会选择一个最久没有被访问的内存页进行淘汰。</p><p>当然，淘汰前会把这个内存页的数据保存起来，因为下次 CPU 访问这个被淘汰的内存页时一样会发生缺页中断请求，那时操作系统还要去恢复数据。</p><p>通过这个虚拟内存的机制，操作系统并不需要一上来就把整个软件装进内存中，而是通过缺页中断按需加载对应的程序代码片段。多个软件同时运行的问题也解决了，内存不够用的时候，就把最久没有用过的内存页淘汰掉，腾出物理内存出来。</p><p>运行软件的问题解决了。那么，操作系统如何分配内存给运行中的软件？</p><p>其实，内存分配的问题也解决了，并不需要任何额外的机制。反正内存地址空间是虚拟的，操作系统可以一上来就给要运行的软件分配超级大的内存，你想怎么用随你。软件如果不用某个内存页，什么都不发生。软件一旦用了某个内存页，通过缺页中断，操作系统就分配真正的物理内存给它。</p><p>通过引入虚拟内存及其缺页机制，CPU 很好地解决了操作系统和软件的配合关系。</p><p>每个运行中的软件，我们把它叫进程，都有自己的地址映射表。也就是说，虚拟地址并不是全局的，而是每个进程有一个自己独立的虚拟地址空间。</p><p>在保护模式下，计算机的基础架构体系和操作系统共同在努力做的一件事情，就是让每个软件“感觉”自己在独占整个计算机的资源。独立的虚拟地址空间很好地伪装了这一点：看起来我独自在享用所有内存资源。在实模式下的浮动地址的问题也解决了，软件可以假设自己代码加载的绝对地址是什么，不需要在加载的时候重新调整 CPU 指令操作的地址。</p><p>这和实模式很不一样。在实模式下，所有进程都在同在物理内存的地址空间里，它们相互可以访问对方的数据，修改甚至破坏对方的数据，进而导致其他进程（包括操作系统本身的进程）崩溃。内存是进程运行的基础资源，保持进程基础资源的独立性，是软件治理的最基础的要求。这也是保护模式之所以叫“保护”模式的原因。</p><h2>架构思维上我们学到什么？</h2><p>虚拟内存它本质上要解决这样两个很核心的需求。</p><p>其一，软件越来越大，我们需要考虑在外置存储上执行指令，而不是完整加载到内存中。但是外置存储一方面它的数据 CPU 并不知道怎么读；另一方面就算知道怎么读，也不知道它的数据格式是什么样的，这依赖文件系统的设计。让 CPU 理解外置存储的实现细节？这并不是一个\b好的设计。</p><p>其二，要同时运行的软件越来越多，计算机内存的供给与软件运行的内存需求相比，捉襟见肘。怎么才能把有限的内存的使用效率最大化？一个很容易想到的思路是把不经常使用的内存数据交换到外置存储。但是问题仍然是，CPU 并不了解外置存储的实现细节，怎么才能把内存按需交换出去？</p><p>通过把虚拟内存地址分页，引入缺页中断，我们非常巧妙地解决了这个问题。缺页中断很像是 CPU 留给操作系统的回调函数，通过它对变化点实现了很好的开放性设计。</p><h2>结语</h2><p>总结一下。我们今天先概要地阐述了计算机运行的全过程，并对每一步的核心意义做了简单的介绍。然后我们把话题转到我们这一节的重心：内存管理。</p><p>谈内存管理，需要谈清楚两个核心问题：</p><ul>\n<li>如何分配内存（给运行中的软件，避免它们发生资源争抢）；</li>\n<li>如何运行外置存储（比如硬盘）上的软件？</li>\n</ul><p>我们分别就在实模式下和保护模式下的内存管理进行了讨论。</p><p>如果你对今天的内容有什么思考与解读，欢迎给我留言，我们一起讨论。如果你觉得有所收获，也欢迎把文章分享给你的朋友。感谢你的收听，我们下期再见。</p>","neighbors":{"left":{"article_title":"06 | 操作系统进场","id":93315},"right":{"article_title":"08 | 操作系统内核与编程接口","id":94486}},"comments":[{"had_liked":false,"id":92518,"user_name":"coder","can_delete":false,"product_type":"c1","uid":1399673,"ip_address":"","ucode":"929E3FFD14EFC8","user_header":"https://static001.geekbang.org/account/avatar/00/15/5b/79/d55044ac.jpg","comment_is_top":false,"comment_ctime":1557289322,"is_pvip":false,"replies":[{"id":"33089","content":"👍，挺好的补充","user_name":"作者回复","user_name_real":"许式伟-七牛云(已满)","uid":"1228022","ctime":1557298572,"ip_address":"","comment_id":92518,"utype":1}],"discussion_count":1,"race_medal":0,"score":"186240883050","product_id":100025201,"comment_content":"我觉得许大大的这个专栏写的挺好的。从计算机底层的角度去思考和总结架构的观点，让人觉得眼前一亮。<br><br>btw，看到评论区有人问cache的事情，补充一下自己的看法。<br>cache一般对programmer和软件来说确实是透明的，但是它也有缺点，比如说占用了大量的芯片面积[50%左右，因为要维护tag RAM和一致性]，它也导致程序的行为难以分析。所以在实时的嵌入式场景和目前流行的AI专用加速器中都不采用Cache，目前大量采用的是scratchpad memory，它是一种对程序员可见的片上存储，需要programmer自己显式地来管理，e.g. GPU的shared memory，TPU的local buffer等","like_count":43,"discussions":[{"author":{"id":1228022,"avatar":"https://static001.geekbang.org/account/avatar/00/12/bc/f6/e61d4b8f.jpg","nickname":"许式伟-七牛云(已满)","note":"","ucode":"1A2F8AA6F6DB54","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":449296,"discussion_content":"👍，挺好的补充","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1557298572,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":92159,"user_name":"黄海峰","can_delete":false,"product_type":"c1","uid":1275357,"ip_address":"","ucode":"E9340719BC96B2","user_header":"https://static001.geekbang.org/account/avatar/00/13/75/dd/9ead6e69.jpg","comment_is_top":false,"comment_ctime":1557193383,"is_pvip":false,"replies":[{"id":"32933","content":"不是的，这个是架构课。你看计算机基础只占了一章，而且我们是从架构角度来讲计算机基础，很多细节都被抽象掉了。","user_name":"作者回复","user_name_real":"许式伟-七牛云(已满)","uid":"1228022","ctime":1557197534,"ip_address":"","comment_id":92159,"utype":1}],"discussion_count":5,"race_medal":0,"score":"121816277671","product_id":100025201,"comment_content":"这个专栏应该叫“计算机导论”而不是叫“架构”。。。","like_count":28,"discussions":[{"author":{"id":1228022,"avatar":"https://static001.geekbang.org/account/avatar/00/12/bc/f6/e61d4b8f.jpg","nickname":"许式伟-七牛云(已满)","note":"","ucode":"1A2F8AA6F6DB54","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":449163,"discussion_content":"不是的，这个是架构课。你看计算机基础只占了一章，而且我们是从架构角度来讲计算机基础，很多细节都被抽象掉了。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1557197534,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1650748,"avatar":"https://static001.geekbang.org/account/avatar/00/19/30/3c/0668d6ae.jpg","nickname":"盘胧","note":"","ucode":"5386CC4C92ECC2","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":408758,"discussion_content":"只见树木，不见森林","likes_number":2,"is_delete":false,"is_hidden":false,"ctime":1635320030,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1005042,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/55/f2/ba68d931.jpg","nickname":"有米","note":"","ucode":"C9A10B7A67BC12","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":213385,"discussion_content":"说明你的思维还没有跟上老师","likes_number":2,"is_delete":false,"is_hidden":false,"ctime":1585066277,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1108109,"avatar":"https://static001.geekbang.org/account/avatar/00/10/e8/8d/1ab8a31f.jpg","nickname":"海浪","note":"","ucode":"E0E84A7598532E","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":571170,"discussion_content":"我也感觉偏题了，我是来学架构设计，结果你给我讲计算机工作原理","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1652099015,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":2653054,"avatar":"https://static001.geekbang.org/account/avatar/00/28/7b/7e/624a1f11.jpg","nickname":"正是好时光","note":"","ucode":"4EAE73C5E2AB0E","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":381871,"discussion_content":"怪不得我看的懂，读不到。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1625271347,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":92653,"user_name":"川杰","can_delete":false,"product_type":"c1","uid":1099750,"ip_address":"","ucode":"815211E1D698E6","user_header":"https://static001.geekbang.org/account/avatar/00/10/c7/e6/11f21cb4.jpg","comment_is_top":false,"comment_ctime":1557309482,"is_pvip":false,"replies":[{"id":"33102","content":"1、是的，保存在外置存储中。对于unix系的系统往往是swap分区；windows则是一个隐藏属性的.swp文件。<br>2、代码段在哪里，是操作系统约定的，因为负责加载的人是操作系统，它设计的程序文件的数据格式。","user_name":"作者回复","user_name_real":"许式伟-七牛云(已满)","uid":"1228022","ctime":1557316050,"ip_address":"","comment_id":92653,"utype":1}],"discussion_count":1,"race_medal":0,"score":"104636524586","product_id":100025201,"comment_content":"老师您好，有两个问题希望解答：1、淘汰的内存页数据保存在哪里？是保存在外置存储设备中吗？2、CPU加载对应程序的代码段到内存中，那么CPU是如何知道这个对应程序的代码段在什么位置的呢？","like_count":24,"discussions":[{"author":{"id":1228022,"avatar":"https://static001.geekbang.org/account/avatar/00/12/bc/f6/e61d4b8f.jpg","nickname":"许式伟-七牛云(已满)","note":"","ucode":"1A2F8AA6F6DB54","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":449346,"discussion_content":"1、是的，保存在外置存储中。对于unix系的系统往往是swap分区；windows则是一个隐藏属性的.swp文件。\n2、代码段在哪里，是操作系统约定的，因为负责加载的人是操作系统，它设计的程序文件的数据格式。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1557316050,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":93864,"user_name":"晓凉","can_delete":false,"product_type":"c1","uid":1220647,"ip_address":"","ucode":"2D1130C3DACE1A","user_header":"https://static001.geekbang.org/account/avatar/00/12/a0/27/bdc6307d.jpg","comment_is_top":false,"comment_ctime":1557644373,"is_pvip":false,"replies":[{"id":"33514","content":"挺好的分析","user_name":"作者回复","user_name_real":"许式伟-七牛云(已满)","uid":"1228022","ctime":1557646378,"ip_address":"","comment_id":93864,"utype":1}],"discussion_count":1,"race_medal":0,"score":"87456990293","product_id":100025201,"comment_content":"从“缺页中断”看架构设计的开闭原则，CPU是硬件，生产出来就不能修改，本身是封闭的，设计上要考虑的是扩展的开放性，缺页中断解决了开放性问题。软件的设计，因为源代码是对程序员开放的，可随便修改，封闭性不能物理上保证，所以需要同时考虑封闭性和开放性。服务化隔离不同的代码模块，一定程度上实现了类似物理上的封闭性。","like_count":20,"discussions":[{"author":{"id":1228022,"avatar":"https://static001.geekbang.org/account/avatar/00/12/bc/f6/e61d4b8f.jpg","nickname":"许式伟-七牛云(已满)","note":"","ucode":"1A2F8AA6F6DB54","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":449801,"discussion_content":"挺好的分析","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1557646378,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":94032,"user_name":"云学","can_delete":false,"product_type":"c1","uid":1027233,"ip_address":"","ucode":"366AE90BA06356","user_header":"https://static001.geekbang.org/account/avatar/00/0f/ac/a1/43d83698.jpg","comment_is_top":false,"comment_ctime":1557708606,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"74572152638","product_id":100025201,"comment_content":"看前几篇还没共鸣，直到这篇才体会到了这种宏观视角解读的好处，精述每个模块的输入输出以及核心功能，怎么串联到一起，如果从头再来该怎么设计，真正构建出整个计算机知识脉络，看完这些再看其他专栏就如降维打击。","like_count":17},{"had_liked":false,"id":92637,"user_name":"keshawn","can_delete":false,"product_type":"c1","uid":1319270,"ip_address":"","ucode":"CFCC24F58D1651","user_header":"https://static001.geekbang.org/account/avatar/00/14/21/66/f9125286.jpg","comment_is_top":false,"comment_ctime":1557307881,"is_pvip":false,"replies":[{"id":"33094","content":"😊","user_name":"作者回复","user_name_real":"许式伟-七牛云(已满)","uid":"1228022","ctime":1557308774,"ip_address":"","comment_id":92637,"utype":1}],"discussion_count":1,"race_medal":0,"score":"53096915433","product_id":100025201,"comment_content":"表面上是在讲技术，实际上是在分析需求","like_count":12,"discussions":[{"author":{"id":1228022,"avatar":"https://static001.geekbang.org/account/avatar/00/12/bc/f6/e61d4b8f.jpg","nickname":"许式伟-七牛云(已满)","note":"","ucode":"1A2F8AA6F6DB54","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":449340,"discussion_content":"😊","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1557308774,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":92691,"user_name":"zhangtnty","can_delete":false,"product_type":"c1","uid":1180553,"ip_address":"","ucode":"3C9A14BD7CF432","user_header":"https://static001.geekbang.org/account/avatar/00/12/03/89/e1621a01.jpg","comment_is_top":false,"comment_ctime":1557312879,"is_pvip":false,"replies":[{"id":"33104","content":"录音频我不太擅长，我给音频老师反馈一下您的意见。","user_name":"作者回复","user_name_real":"许式伟-七牛云(已满)","uid":"1228022","ctime":1557318480,"ip_address":"","comment_id":92691,"utype":1}],"discussion_count":2,"race_medal":0,"score":"48801953135","product_id":100025201,"comment_content":"许老师, 您的文章很棒。有一点小小的建意, 能否您亲自录音频, 现在的音频老师录得也很好, 但总觉得少了点计算机、软件、架构的一丝丝底蕴（个人浅见）。有时音频对于读者也是很重要的，辛苦老师考虑一下。","like_count":11,"discussions":[{"author":{"id":1228022,"avatar":"https://static001.geekbang.org/account/avatar/00/12/bc/f6/e61d4b8f.jpg","nickname":"许式伟-七牛云(已满)","note":"","ucode":"1A2F8AA6F6DB54","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":449354,"discussion_content":"录音频我不太擅长，我给音频老师反馈一下您的意见。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1557318480,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1163321,"avatar":"https://static001.geekbang.org/account/avatar/00/11/c0/39/16340f72.jpg","nickname":"zlxag","note":"","ucode":"136FB0201B64A3","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":287276,"discussion_content":"追求些不必要的","likes_number":2,"is_delete":false,"is_hidden":false,"ctime":1593410653,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":92175,"user_name":"1900","can_delete":false,"product_type":"c1","uid":1105774,"ip_address":"","ucode":"320D65D14817D3","user_header":"https://static001.geekbang.org/account/avatar/00/10/df/6e/267bd6ee.jpg","comment_is_top":false,"comment_ctime":1557194832,"is_pvip":true,"replies":[{"id":"32937","content":"内存和磁盘的配合","user_name":"作者回复","user_name_real":"许式伟-七牛云(已满)","uid":"1228022","ctime":1557197643,"ip_address":"","comment_id":92175,"utype":1}],"discussion_count":1,"race_medal":0,"score":"48801835088","product_id":100025201,"comment_content":"这里说的“虚拟内存”是内存还是磁盘啊？感觉应该还是内存。","like_count":11,"discussions":[{"author":{"id":1228022,"avatar":"https://static001.geekbang.org/account/avatar/00/12/bc/f6/e61d4b8f.jpg","nickname":"许式伟-七牛云(已满)","note":"","ucode":"1A2F8AA6F6DB54","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":449168,"discussion_content":"内存和磁盘的配合","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1557197643,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":107975,"user_name":"刘冲","can_delete":false,"product_type":"c1","uid":1000439,"ip_address":"","ucode":"0C4F66921AE76C","user_header":"https://static001.geekbang.org/account/avatar/00/0f/43/f7/abb7bfe3.jpg","comment_is_top":false,"comment_ctime":1561642764,"is_pvip":false,"replies":[{"id":"39104","content":"👍","user_name":"作者回复","user_name_real":"许式伟-七牛云(已满)","uid":"1228022","ctime":1561650468,"ip_address":"","comment_id":107975,"utype":1}],"discussion_count":2,"race_medal":0,"score":"44511315724","product_id":100025201,"comment_content":"分离变化点和不变点，把不变点做成回调，预留了变化，这种思路其实就是架构的核心，如何区分和管理变与不变","like_count":10,"discussions":[{"author":{"id":1228022,"avatar":"https://static001.geekbang.org/account/avatar/00/12/bc/f6/e61d4b8f.jpg","nickname":"许式伟-七牛云(已满)","note":"","ucode":"1A2F8AA6F6DB54","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":455770,"discussion_content":"👍","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1561650468,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1347013,"avatar":"https://static001.geekbang.org/account/avatar/00/14/8d/c5/898b13b4.jpg","nickname":"亢（知行合一的路上）","note":"","ucode":"958AF7C96EB9E8","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":267197,"discussion_content":"类似依赖注入？依赖于接口，将具体的实现注入","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1589614740,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":92174,"user_name":"涵","can_delete":false,"product_type":"c1","uid":1502742,"ip_address":"","ucode":"BB8575DB13F1E0","user_header":"https://static001.geekbang.org/account/avatar/00/16/ee/16/742956ac.jpg","comment_is_top":false,"comment_ctime":1557194809,"is_pvip":false,"replies":[{"id":"32941","content":"1、内存管理模块负责内存页的淘汰规则，它当然不会自己把自己淘汰掉。<br>2、内存和磁盘的数据交换吧？我们这里核心交代思想，要了解细节可以学习一下一些操作系统课程。我后面在第一章的总结与回顾中也会介绍一些参考资料。","user_name":"作者回复","user_name_real":"许式伟-七牛云(已满)","uid":"1228022","ctime":1557198002,"ip_address":"","comment_id":92174,"utype":1}],"discussion_count":1,"race_medal":0,"score":"35916933177","product_id":100025201,"comment_content":"请问老师内存管理作为操作系统的一个重要且基本的功能，其本身就是一段程序需要在启动时加载在内存中并且永远不被交换到外置存储对吗?那么这段程序在保护机制下是如果一直停留在物理内存中的呢?是写入特定的内存页，永远不会被交换出去，还是由于内存管理功能总是被所以程序调用，由于访问频繁因此永远不会被换出去?另外，操作系统是如何管理内存和寄存器之间的数据交换呢?有点儿想象不出来这个接口。比命令将内存地址1中存放的数据放入2号寄存器，将寄存器3中存储的数据输出至内存地址4，这是一个怎样的过程呢?谢谢。","like_count":8,"discussions":[{"author":{"id":1228022,"avatar":"https://static001.geekbang.org/account/avatar/00/12/bc/f6/e61d4b8f.jpg","nickname":"许式伟-七牛云(已满)","note":"","ucode":"1A2F8AA6F6DB54","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":449167,"discussion_content":"1、内存管理模块负责内存页的淘汰规则，它当然不会自己把自己淘汰掉。\n2、内存和磁盘的数据交换吧？我们这里核心交代思想，要了解细节可以学习一下一些操作系统课程。我后面在第一章的总结与回顾中也会介绍一些参考资料。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1557198002,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":92408,"user_name":"涵","can_delete":false,"product_type":"c1","uid":1502742,"ip_address":"","ucode":"BB8575DB13F1E0","user_header":"https://static001.geekbang.org/account/avatar/00/16/ee/16/742956ac.jpg","comment_is_top":false,"comment_ctime":1557255795,"is_pvip":false,"replies":[{"id":"33051","content":"确实，整体去看信息科技世界，里面有太多精彩。非常值得从头再学一遍。加油💪","user_name":"作者回复","user_name_real":"许式伟-七牛云(已满)","uid":"1228022","ctime":1557272328,"ip_address":"","comment_id":92408,"utype":1}],"discussion_count":1,"race_medal":0,"score":"31622026867","product_id":100025201,"comment_content":"第二个问题是关于内存和寄存器(RAM和CPU)的数据交换。确实是如老师所说，有再学一学操作系统的冲动。学着老师的架构课感觉到本科时的课程设计是很好的，可惜当时见识太浅，每门课只是孤立的在学习，为了完成作业拿个好分数而学习，从未整体的去思考课程设计背后计算机的完整架构，真的是很有意思的事情。","like_count":7,"discussions":[{"author":{"id":1228022,"avatar":"https://static001.geekbang.org/account/avatar/00/12/bc/f6/e61d4b8f.jpg","nickname":"许式伟-七牛云(已满)","note":"","ucode":"1A2F8AA6F6DB54","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":449245,"discussion_content":"确实，整体去看信息科技世界，里面有太多精彩。非常值得从头再学一遍。加油💪","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1557272328,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":139671,"user_name":"胖胖虎","can_delete":false,"product_type":"c1","uid":1139121,"ip_address":"","ucode":"9CA8F99CC82944","user_header":"https://static001.geekbang.org/account/avatar/00/11/61/b1/1261c177.jpg","comment_is_top":false,"comment_ctime":1570702063,"is_pvip":false,"replies":[{"id":"54160","content":"内核空间很难定义是不是单进程。这里面核心是什么是进程，它的本质是什么。多个用户进程共享了相同内核，指的是共享了相同的逻辑地址和物理的数据。内核代码执行，分为两种：一种是内核程序自己运行起来的时候，它有自己的main程序，常规意义上的内核进程指的是它。另一种是用户程序调用某个内核功能，也就是发生了syscall中断请求，这时会发生提权，进程数据可见范围包含了内核空间，仅此而已。从内核代码角度，这时有多个执行体在执行相同的代码，需要考虑互斥。","user_name":"作者回复","user_name_real":"许式伟-七牛云(已满)","uid":"1228022","ctime":1570832990,"ip_address":"","comment_id":139671,"utype":1}],"discussion_count":1,"race_medal":0,"score":"27340505839","product_id":100025201,"comment_content":"老师，我有个问题。内核空间是单进程的，那是否意味着每个用户进程的内核部分都是完全一样的？内核线程的地址空间是怎样管理的。谢谢！","like_count":6,"discussions":[{"author":{"id":1228022,"avatar":"https://static001.geekbang.org/account/avatar/00/12/bc/f6/e61d4b8f.jpg","nickname":"许式伟-七牛云(已满)","note":"","ucode":"1A2F8AA6F6DB54","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":470048,"discussion_content":"内核空间很难定义是不是单进程。这里面核心是什么是进程，它的本质是什么。多个用户进程共享了相同内核，指的是共享了相同的逻辑地址和物理的数据。内核代码执行，分为两种：一种是内核程序自己运行起来的时候，它有自己的main程序，常规意义上的内核进程指的是它。另一种是用户程序调用某个内核功能，也就是发生了syscall中断请求，这时会发生提权，进程数据可见范围包含了内核空间，仅此而已。从内核代码角度，这时有多个执行体在执行相同的代码，需要考虑互斥。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1570832990,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":92296,"user_name":"苟范儿","can_delete":false,"product_type":"c1","uid":1364883,"ip_address":"","ucode":"B06B86765512FA","user_header":"https://static001.geekbang.org/account/avatar/00/14/d3/93/bef5a186.jpg","comment_is_top":false,"comment_ctime":1557223675,"is_pvip":false,"replies":[{"id":"33010","content":"值得细细体会，感悟","user_name":"作者回复","user_name_real":"许式伟-七牛云(已满)","uid":"1228022","ctime":1557225528,"ip_address":"","comment_id":92296,"utype":1}],"discussion_count":1,"race_medal":0,"score":"27327027451","product_id":100025201,"comment_content":"从硬件架构到其上的操作系统。但是不得不佩服前人在这些层面给出的架构，BIOS 引导、OS、Shell 等系统级方案，仔细想象，每天都在用，各类软件的开发都在这些架构之上很好的运行。","like_count":6,"discussions":[{"author":{"id":1228022,"avatar":"https://static001.geekbang.org/account/avatar/00/12/bc/f6/e61d4b8f.jpg","nickname":"许式伟-七牛云(已满)","note":"","ucode":"1A2F8AA6F6DB54","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":449208,"discussion_content":"值得细细体会，感悟","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1557225528,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":92260,"user_name":"Enthusiasm","can_delete":false,"product_type":"c1","uid":1504776,"ip_address":"","ucode":"FEAA522C24A6D5","user_header":"https://static001.geekbang.org/account/avatar/00/16/f6/08/ecf5d724.jpg","comment_is_top":false,"comment_ctime":1557216141,"is_pvip":false,"replies":[{"id":"33006","content":"dos面临的个人市场刚开始资源太匮乏了，所以没有做多任务是很正常的决策","user_name":"作者回复","user_name_real":"许式伟-七牛云(已满)","uid":"1228022","ctime":1557220219,"ip_address":"","comment_id":92260,"utype":1}],"discussion_count":2,"race_medal":0,"score":"27327019917","product_id":100025201,"comment_content":"老师可以多加一些：按照历史发展的时间顺序来讲技术间因果关系，以便于构建完整的知识体系架构，而细节上可以用给出参考链接或书籍的方式来让我们自己去索骥。比如这一章，由于之前了解过汇编语言，我知道8086CPU一开始是不支持保护模式的，后来386之后才开始支持。明显CPU和操作系统是经历了一段磨合，不是一上来就采用了这种保护模式，CPU也不是一上来就支持保护模式，而操作系统厂商也不是一开始就想到要多任务（比如DOS），很想知道当中发展中经历了哪些尝试和妥协。还希望老师把知识体系描述的更完整一些，比如操作系统除了DOS，Windows，同时期的还有Unix，MacOS，关于这一章，很想知道这几条技术线是如何并行发展的，他们一定有相互竞争和借鉴的feature，很想听一听。原则上希望可以通过技术发展的逻辑，理清知识体系和脉络。不然的话，这片知识在我们脑中，依然是一座孤岛，觉着可能没用就当做垃圾给回收了。希望听到更多技术、思想历程，可以多用一些搜索引擎可以搜索到的“概念”减少篇幅，而把详细描述用在那些“搜索引擎难以搜索到的”知识来增加干货。","like_count":6,"discussions":[{"author":{"id":1228022,"avatar":"https://static001.geekbang.org/account/avatar/00/12/bc/f6/e61d4b8f.jpg","nickname":"许式伟-七牛云(已满)","note":"","ucode":"1A2F8AA6F6DB54","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":449198,"discussion_content":"dos面临的个人市场刚开始资源太匮乏了，所以没有做多任务是很正常的决策","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1557220219,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1437404,"avatar":"https://static001.geekbang.org/account/avatar/00/15/ee/dc/67838c05.jpg","nickname":"Vincent","note":"","ucode":"EC72C58FE32369","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":405016,"discussion_content":"觉得未来应该有一门学问，叫软件历史学，专门记录和研究软件演化的历史和规律。而这门学问会成为每个架构师的必修课！👍","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1634481290,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":92224,"user_name":"逆流的鱼","can_delete":false,"product_type":"c1","uid":1258399,"ip_address":"","ucode":"AA3DDE44A83C40","user_header":"https://static001.geekbang.org/account/avatar/00/13/33/9f/8dbd9558.jpg","comment_is_top":false,"comment_ctime":1557205663,"is_pvip":false,"replies":[{"id":"33002","content":"这种疑问，可以实际动手测试试试，验证你的推理对不对","user_name":"作者回复","user_name_real":"许式伟-七牛云(已满)","uid":"1228022","ctime":1557219632,"ip_address":"","comment_id":92224,"utype":1}],"discussion_count":1,"race_medal":0,"score":"27327009439","product_id":100025201,"comment_content":"如果都是保护模式，比如Java进程，启动指定了堆或者内存大小为4G，那其实内存实际没有分配吗？linux服务器可用内存没有减少4G？运行实际占不到4G？！","like_count":6,"discussions":[{"author":{"id":1228022,"avatar":"https://static001.geekbang.org/account/avatar/00/12/bc/f6/e61d4b8f.jpg","nickname":"许式伟-七牛云(已满)","note":"","ucode":"1A2F8AA6F6DB54","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":449183,"discussion_content":"这种疑问，可以实际动手测试试试，验证你的推理对不对","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1557219632,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":117001,"user_name":"bachelor","can_delete":false,"product_type":"c1","uid":1585893,"ip_address":"","ucode":"DCC49F653B481E","user_header":"https://static001.geekbang.org/account/avatar/00/18/32/e5/98ca78a9.jpg","comment_is_top":false,"comment_ctime":1563953248,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"23038789728","product_id":100025201,"comment_content":"保护模式真是一个很有意思的想法，“争取让每个软件都认为自己独自占有整个cpu资源”，就像平行宇宙理论一样，彼此互不干扰，但又真实存在，不一样的是，前者是真实存在的。","like_count":5},{"had_liked":false,"id":95378,"user_name":"乘风","can_delete":false,"product_type":"c1","uid":1115724,"ip_address":"","ucode":"0420C5535DACB7","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTLwSoTjHPX5tm4whBSfoZLX6toZxrZGUaLABQywKNf4MDc9toK3QSV7Z99ATcGicFCysoleQ5ISzmw/132","comment_is_top":false,"comment_ctime":1558050101,"is_pvip":false,"replies":[{"id":"34072","content":"👍","user_name":"作者回复","user_name_real":"许式伟-七牛云(已满)","uid":"1228022","ctime":1558054229,"ip_address":"","comment_id":95378,"utype":1}],"discussion_count":1,"race_medal":0,"score":"23032886581","product_id":100025201,"comment_content":"架构思维上学到了什么？<br>  CPU虚拟空间设计思想：将外置系统做高度抽象，外置系统实现了虚拟空间的约定，CPU在运行时与虚拟空间进行数据交换，虚拟空间与外置系统进行交互，从而完成CPU的资源调度、管理功能。<br>  封装了变化点，外置存储结构的不确定性，建立统一规范，双方按照规范完成整个协作流程。","like_count":5,"discussions":[{"author":{"id":1228022,"avatar":"https://static001.geekbang.org/account/avatar/00/12/bc/f6/e61d4b8f.jpg","nickname":"许式伟-七牛云(已满)","note":"","ucode":"1A2F8AA6F6DB54","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":450433,"discussion_content":"👍","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1558054229,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":92432,"user_name":"易林林","can_delete":false,"product_type":"c1","uid":1049836,"ip_address":"","ucode":"27F84A3FCBBCAD","user_header":"https://static001.geekbang.org/account/avatar/00/10/04/ec/0539c89d.jpg","comment_is_top":false,"comment_ctime":1557274220,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"23032110700","product_id":100025201,"comment_content":"真的是很好的架构课程，这这里我们可以了解计算机的发展历史，解析计算机的基础原理，理清软件架构的原始脉络，一步步构建出属于自己的软件架构知识体系，并不会只知其然而不知其所以然，这样构建的软件架构才会更加坚实牢靠。","like_count":5},{"had_liked":false,"id":285661,"user_name":"恬毅","can_delete":false,"product_type":"c1","uid":1015240,"ip_address":"","ucode":"914ED16F3BE714","user_header":"https://static001.geekbang.org/account/avatar/00/0f/7d/c8/e4727683.jpg","comment_is_top":false,"comment_ctime":1616945229,"is_pvip":false,"replies":[{"id":"103675","content":"👍","user_name":"作者回复","user_name_real":"许式伟-七牛云(已满)","uid":"1228022","ctime":1616991824,"ip_address":"","comment_id":285661,"utype":1}],"discussion_count":2,"race_medal":0,"score":"18796814413","product_id":100025201,"comment_content":"1、虚拟内存是内存和磁盘的配合。<br>2、地址映射表，是保存虚拟内存和物理内存对应关系，将虚拟的内存地址转为物理的内存地址。<br>3、映射表是放在内存中的，因为cpu需要访问，然而cpu只能访问内存，<br>4、地址映射表由操作系统维护。<br>5、执行流程：<br>1）操作系统告诉cpu要操作那个逻辑内存页；<br>2）cpu通过映射表去获取逻辑内存页对应的物理内存地址，然后获取执行；<br>3）如果没有找到逻辑内存对应的物理内存，就会触发中断机制通知操作系统；<br>4）操作系统会为这个逻辑内存页分配物理内存。然后cpu就可以继续执行。","like_count":4,"discussions":[{"author":{"id":1228022,"avatar":"https://static001.geekbang.org/account/avatar/00/12/bc/f6/e61d4b8f.jpg","nickname":"许式伟-七牛云(已满)","note":"","ucode":"1A2F8AA6F6DB54","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":517744,"discussion_content":"👍","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1616991824,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":2359415,"avatar":"https://static001.geekbang.org/account/avatar/00/24/00/77/2a4cffb9.jpg","nickname":"LYF","note":"","ucode":"7FCB3123AC2B0D","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":373779,"discussion_content":"虚拟内存是内存和磁盘的配合。而为了获取虚拟内存和物理内存对应关系，需要地址映射表。为了让CPU能访问到这个地址映射表，必须把它放到内存中。所以操作系统上开的软件越多，地址映射表也越多，而且越大的软件需要的地址映射表也越大，所以开了太多的软件，还是会把内存占满，对吧？","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1620872002,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":98059,"user_name":"Young","can_delete":false,"product_type":"c1","uid":1073443,"ip_address":"","ucode":"075C0BBE20FD8C","user_header":"https://static001.geekbang.org/account/avatar/00/10/61/23/30d134cf.jpg","comment_is_top":false,"comment_ctime":1558885078,"is_pvip":false,"replies":[{"id":"35073","content":"挺好的补充","user_name":"作者回复","user_name_real":"许式伟-七牛云(已满)","uid":"1228022","ctime":1558915496,"ip_address":"","comment_id":98059,"utype":1}],"discussion_count":2,"race_medal":0,"score":"18738754262","product_id":100025201,"comment_content":"Cache都是SRAM，速度快但是集成度低，不适合集成容量特别大。其中1st level 和last level cache对性能影响最大，通过Instruction Read miss（I1mr，ILmr），Data read miss（D1mr，DLmr），L1的miss会有10个cpu cycle的惩罚期，LL的miss会有200个cpu cycle的惩罚。所以，虽说cache不可编程，但是为了降低惩罚，也就是提高命中率，反过来是要求你的代码具有效率，数据结构的合理性。比如基于cache加载内存数据的locality（局部性原理），当你循环遍历一个二维数组时，先行后列的性能远远高于先列后行，原因是前者的命中率远远高于后者。","like_count":4,"discussions":[{"author":{"id":1228022,"avatar":"https://static001.geekbang.org/account/avatar/00/12/bc/f6/e61d4b8f.jpg","nickname":"许式伟-七牛云(已满)","note":"","ucode":"1A2F8AA6F6DB54","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":451541,"discussion_content":"挺好的补充","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1558915496,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1505595,"avatar":"https://static001.geekbang.org/account/avatar/00/16/f9/3b/f631a6dd.jpg","nickname":"呆子練","note":"","ucode":"CF6697660CF325","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":6857,"discussion_content":"“先行后列效率高”这是理论上，事实上不一定。十几年前还是用VC6.0的时候，在几台Windows电脑上试过，不总是这样。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1567145353,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":92097,"user_name":"WadeYu","can_delete":false,"product_type":"c1","uid":1242574,"ip_address":"","ucode":"F38DE34449DE52","user_header":"https://static001.geekbang.org/account/avatar/00/12/f5/ce/7d8807d5.jpg","comment_is_top":false,"comment_ctime":1557188467,"is_pvip":false,"replies":[{"id":"32901","content":"是的，实模式是个历史产物","user_name":"作者回复","user_name_real":"许式伟-七牛云(已满)","uid":"1228022","ctime":1557189354,"ip_address":"","comment_id":92097,"utype":1}],"discussion_count":1,"race_medal":0,"score":"18737057651","product_id":100025201,"comment_content":"现在的主流操作系统都是运行在保护模式下吧","like_count":4,"discussions":[{"author":{"id":1228022,"avatar":"https://static001.geekbang.org/account/avatar/00/12/bc/f6/e61d4b8f.jpg","nickname":"许式伟-七牛云(已满)","note":"","ucode":"1A2F8AA6F6DB54","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":449144,"discussion_content":"是的，实模式是个历史产物","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1557189354,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":92052,"user_name":"松鼠君","can_delete":false,"product_type":"c1","uid":1135269,"ip_address":"","ucode":"F39C661B685E75","user_header":"https://static001.geekbang.org/account/avatar/00/11/52/a5/d4c6e23d.jpg","comment_is_top":false,"comment_ctime":1557165055,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"18737034239","product_id":100025201,"comment_content":"现代操作系统，通过内存管理机制的改变，提升了软件运行的安全性和效率。","like_count":4},{"had_liked":false,"id":194552,"user_name":"有米","can_delete":false,"product_type":"c1","uid":1005042,"ip_address":"","ucode":"C9A10B7A67BC12","user_header":"https://static001.geekbang.org/account/avatar/00/0f/55/f2/ba68d931.jpg","comment_is_top":false,"comment_ctime":1585066477,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"14469968365","product_id":100025201,"comment_content":"缺页中断就是内存换出，拿硬盘换内存。就像应用架构的缓存，缓存失效就从DB把数据换进来","like_count":3},{"had_liked":false,"id":164574,"user_name":"nyx.ulric","can_delete":false,"product_type":"c1","uid":1393181,"ip_address":"","ucode":"ADA158A2B229F2","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTL7cOHiaxJBPvYLhmibkcY3HvonnRCvY3Kma6RIzeaIaLR2ZNf9fn5yicWiaKUUVf2TuhF99icfLw46waA/132","comment_is_top":false,"comment_ctime":1577030198,"is_pvip":false,"replies":[{"id":"62548","content":"1、不需要，内存页加载是cpu触发，操作系统执行；<br>2、同一个软件不同实例它的代码段是只读共享的，数据则彼此完全独立。","user_name":"作者回复","user_name_real":"许式伟-七牛云(已满)","uid":"1228022","ctime":1577065304,"ip_address":"","comment_id":164574,"utype":1}],"discussion_count":2,"race_medal":0,"score":"14461932086","product_id":100025201,"comment_content":"老师你好，关于虚拟内存页有一些没理解，<br>1，内存地址分页和缺页中断配合，软件刚启动的时候用到了10个页的话，后面再需要内存页是软件发起的吗？如果是这样的话，那每个软件在制作的时候都要考虑缺页中断的“功能”吗？<br>2，同一个软件打开2个的时候，分配到的内存页是同样的内存页吗？","like_count":3,"discussions":[{"author":{"id":1228022,"avatar":"https://static001.geekbang.org/account/avatar/00/12/bc/f6/e61d4b8f.jpg","nickname":"许式伟-七牛云(已满)","note":"","ucode":"1A2F8AA6F6DB54","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":478819,"discussion_content":"1、不需要，内存页加载是cpu触发，操作系统执行；\n2、同一个软件不同实例它的代码段是只读共享的，数据则彼此完全独立。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1577065304,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1393181,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTL7cOHiaxJBPvYLhmibkcY3HvonnRCvY3Kma6RIzeaIaLR2ZNf9fn5yicWiaKUUVf2TuhF99icfLw46waA/132","nickname":"nyx.ulric","note":"","ucode":"ADA158A2B229F2","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":96537,"discussion_content":"那软件如果再需要内存空间，它的获取更多空间的机制是发起中断请求吧？这个中断请求是怎么斛发的呢？","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1577072635,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":145756,"user_name":"Daiver","can_delete":false,"product_type":"c1","uid":1466447,"ip_address":"","ucode":"9B1A03AFBC79BC","user_header":"https://static001.geekbang.org/account/avatar/00/16/60/4f/db0e62b3.jpg","comment_is_top":false,"comment_ctime":1572361018,"is_pvip":false,"replies":[{"id":"56292","content":"保护模式才有内核态和用户态，这也是保护模式的含义","user_name":"作者回复","user_name_real":"许式伟-七牛云(已满)","uid":"1228022","ctime":1572396634,"ip_address":"","comment_id":145756,"utype":1}],"discussion_count":1,"race_medal":0,"score":"14457262906","product_id":100025201,"comment_content":"实模式和保护模式，这让我想到了内核态和用户态，这两者之间是否有一定的联系呢","like_count":3,"discussions":[{"author":{"id":1228022,"avatar":"https://static001.geekbang.org/account/avatar/00/12/bc/f6/e61d4b8f.jpg","nickname":"许式伟-七牛云(已满)","note":"","ucode":"1A2F8AA6F6DB54","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":472565,"discussion_content":"保护模式才有内核态和用户态，这也是保护模式的含义","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1572396634,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":138151,"user_name":"码农Kevin亮","can_delete":false,"product_type":"c1","uid":1116630,"ip_address":"","ucode":"D34562461CA0A1","user_header":"https://static001.geekbang.org/account/avatar/00/11/09/d6/5f366427.jpg","comment_is_top":false,"comment_ctime":1570067776,"is_pvip":false,"replies":[{"id":"53193","content":"缺页只需要判断该地址有没有关联物理内存。一个软件加载之初，你可以认为整个的虚拟地址空间的每个页都还没有映射对应的物理地址，这时会发生缺页中断。缺页处理程序分配物理内存并把对应该虚拟地址的代码从磁盘加载上来。","user_name":"作者回复","user_name_real":"许式伟-七牛云(已满)","uid":"1228022","ctime":1570156668,"ip_address":"","comment_id":138151,"utype":1}],"discussion_count":1,"race_medal":0,"score":"14454969664","product_id":100025201,"comment_content":"请问老师，关于CPU访问虚拟内存的机制有一点不明白：对CPU来说，它只知道一个虚拟地址，但它是如何判断这个虚拟地址上的数据是不是它要的数据呢？换个问法就是，缺页是怎么判定出来的呢？","like_count":3,"discussions":[{"author":{"id":1228022,"avatar":"https://static001.geekbang.org/account/avatar/00/12/bc/f6/e61d4b8f.jpg","nickname":"许式伟-七牛云(已满)","note":"","ucode":"1A2F8AA6F6DB54","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":469411,"discussion_content":"缺页只需要判断该地址有没有关联物理内存。一个软件加载之初，你可以认为整个的虚拟地址空间的每个页都还没有映射对应的物理地址，这时会发生缺页中断。缺页处理程序分配物理内存并把对应该虚拟地址的代码从磁盘加载上来。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1570156668,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":95376,"user_name":"乘风","can_delete":false,"product_type":"c1","uid":1115724,"ip_address":"","ucode":"0420C5535DACB7","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTLwSoTjHPX5tm4whBSfoZLX6toZxrZGUaLABQywKNf4MDc9toK3QSV7Z99ATcGicFCysoleQ5ISzmw/132","comment_is_top":false,"comment_ctime":1558049455,"is_pvip":false,"replies":[{"id":"34071","content":"是的，当然这意味着物理内存其实也这样分了","user_name":"作者回复","user_name_real":"许式伟-七牛云(已满)","uid":"1228022","ctime":1558054191,"ip_address":"","comment_id":95376,"utype":1}],"discussion_count":1,"race_medal":0,"score":"14442951343","product_id":100025201,"comment_content":"整个内存空间分成了连续的多个内存页是指虚拟空间这样分吗？","like_count":3,"discussions":[{"author":{"id":1228022,"avatar":"https://static001.geekbang.org/account/avatar/00/12/bc/f6/e61d4b8f.jpg","nickname":"许式伟-七牛云(已满)","note":"","ucode":"1A2F8AA6F6DB54","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":450432,"discussion_content":"是的，当然这意味着物理内存其实也这样分了","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1558054191,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":93844,"user_name":"Geek_f026c5","can_delete":false,"product_type":"c1","uid":1496234,"ip_address":"","ucode":"FED04FDE76A94E","user_header":"https://wx.qlogo.cn/mmopen/vi_32/y43slZByeeYvm9Nkfry5aWqc1axTYjkzVJTHQEVtryANXlCpn4vpWezYQWrT1uuQ5ic1b8HiaUX6DFdpdTJtK5Kw/132","comment_is_top":false,"comment_ctime":1557635568,"is_pvip":false,"discussion_count":1,"race_medal":0,"score":"14442537456","product_id":100025201,"comment_content":"缺页异常思想上有点类似依赖注入","like_count":3,"discussions":[{"author":{"id":1188023,"avatar":"https://static001.geekbang.org/account/avatar/00/12/20/b7/bdb3bcf0.jpg","nickname":"Eternal","note":"","ucode":"EA6FE7CC98F740","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":354,"discussion_content":"还是有点区别，可以算作动态加载吧","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1561473322,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":92414,"user_name":"Benjamin","can_delete":false,"product_type":"c1","uid":1082014,"ip_address":"","ucode":"7837F6E47546E6","user_header":"https://static001.geekbang.org/account/avatar/00/10/82/9e/bb6f7229.jpg","comment_is_top":false,"comment_ctime":1557269620,"is_pvip":false,"replies":[{"id":"33060","content":"操作系统保证的，只有操作系统内核才能修改地址映射表。","user_name":"作者回复","user_name_real":"许式伟-七牛云(已满)","uid":"1228022","ctime":1557278567,"ip_address":"","comment_id":92414,"utype":1}],"discussion_count":1,"race_medal":0,"score":"14442171508","product_id":100025201,"comment_content":"请问老师怎么保证不同进程通过独立的映射表得到的物理地址相互之间不冲突呢？","like_count":3,"discussions":[{"author":{"id":1228022,"avatar":"https://static001.geekbang.org/account/avatar/00/12/bc/f6/e61d4b8f.jpg","nickname":"许式伟-七牛云(已满)","note":"","ucode":"1A2F8AA6F6DB54","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":449249,"discussion_content":"操作系统保证的，只有操作系统内核才能修改地址映射表。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1557278567,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":92072,"user_name":"徐云天","can_delete":false,"product_type":"c1","uid":1212091,"ip_address":"","ucode":"D48DBF0B3C2CA3","user_header":"https://static001.geekbang.org/account/avatar/00/12/7e/bb/019c18fc.jpg","comment_is_top":false,"comment_ctime":1557186050,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"14442087938","product_id":100025201,"comment_content":"一直不知道虚拟内存为什么有用，现在知道了。","like_count":3},{"had_liked":false,"id":95087,"user_name":"乘风","can_delete":false,"product_type":"c1","uid":1115724,"ip_address":"","ucode":"0420C5535DACB7","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTLwSoTjHPX5tm4whBSfoZLX6toZxrZGUaLABQywKNf4MDc9toK3QSV7Z99ATcGicFCysoleQ5ISzmw/132","comment_is_top":false,"comment_ctime":1557967292,"is_pvip":false,"replies":[{"id":"33995","content":"1、预读（预测cpu执行）；2、用高速磁盘，现在主流笔记本都用固体硬盘了，也是有这方面原因","user_name":"作者回复","user_name_real":"许式伟-七牛云(已满)","uid":"1228022","ctime":1557986649,"ip_address":"","comment_id":95087,"utype":1}],"discussion_count":1,"race_medal":0,"score":"10147901884","product_id":100025201,"comment_content":"求许老师帮助<br>保护模式下非完整读取，意味着运行时动态读取（从磁盘读取），节省了内存空间但出现了运行卡顿的问题，因为内存和磁盘的读取速率相差极大，这个问题如何解决？","like_count":2,"discussions":[{"author":{"id":1228022,"avatar":"https://static001.geekbang.org/account/avatar/00/12/bc/f6/e61d4b8f.jpg","nickname":"许式伟-七牛云(已满)","note":"","ucode":"1A2F8AA6F6DB54","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":450326,"discussion_content":"1、预读（预测cpu执行）；2、用高速磁盘，现在主流笔记本都用固体硬盘了，也是有这方面原因","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1557986649,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":94408,"user_name":"史鹏飞","can_delete":false,"product_type":"c1","uid":1497528,"ip_address":"","ucode":"39D9A28082C0BE","user_header":"https://static001.geekbang.org/account/avatar/00/16/d9/b8/2d8900d5.jpg","comment_is_top":false,"comment_ctime":1557802832,"is_pvip":false,"replies":[{"id":"33735","content":"后面会介绍共享内存","user_name":"作者回复","user_name_real":"许式伟-七牛云(已满)","uid":"1228022","ctime":1557805119,"ip_address":"","comment_id":94408,"utype":1}],"discussion_count":1,"race_medal":0,"score":"10147737424","product_id":100025201,"comment_content":"通过共享内存内存进程间可以通信，老师能说说共享的机制吗？","like_count":2,"discussions":[{"author":{"id":1228022,"avatar":"https://static001.geekbang.org/account/avatar/00/12/bc/f6/e61d4b8f.jpg","nickname":"许式伟-七牛云(已满)","note":"","ucode":"1A2F8AA6F6DB54","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":450055,"discussion_content":"后面会介绍共享内存","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1557805119,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":289590,"user_name":"coder甲","can_delete":false,"product_type":"c1","uid":1503417,"ip_address":"","ucode":"B57E6026AF4A70","user_header":"https://static001.geekbang.org/account/avatar/00/16/f0/b9/67167dc2.jpg","comment_is_top":false,"comment_ctime":1619091111,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"5914058407","product_id":100025201,"comment_content":"虚拟内存分页和缺页中断机制的设计太牛了","like_count":1},{"had_liked":false,"id":286787,"user_name":"XinghaiVictorStarseaSingHoy星海","can_delete":false,"product_type":"c1","uid":1028923,"ip_address":"","ucode":"1E45557EAAC7D4","user_header":"https://static001.geekbang.org/account/avatar/00/0f/b3/3b/1104b8e6.jpg","comment_is_top":false,"comment_ctime":1617595201,"is_pvip":true,"discussion_count":0,"race_medal":0,"score":"5912562497","product_id":100025201,"comment_content":"这个课真好。我就觉得学计算机导论之前得先学这个。从抽象层开始学习，top down appraoch。能把这些抽象层的概念在屏蔽掉细节之后还能深入浅出地讲清楚的人才是真正的大佬。","like_count":1},{"had_liked":false,"id":199690,"user_name":"獨自去遠方","can_delete":false,"product_type":"c1","uid":1503941,"ip_address":"","ucode":"E246B33F397441","user_header":"https://static001.geekbang.org/account/avatar/00/16/f2/c5/2a441c27.jpg","comment_is_top":false,"comment_ctime":1585493976,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"5880461272","product_id":100025201,"comment_content":"软件运行机制<br>\tBIOS程序放在主板的ROM上<br>\t引导区引导程序<br>\t\tBIOS 只需要把它加载到内存执行，系统的控制权就很巧妙地转到外置存储了<br>\tOS引导程序<br>\tOS shell程序<br><br><br><br>内存管理<br>\tCPU实模式、保护模式（地址映射表将虚拟内存转换为物理内存地址）<br>\t中断请求：CPU响应硬件设备事件的一个机制<br>\t\t软中断：软件响应<br>\t实模式操作系统<br>\t\t浮动地址<br>\t\t安全性差、支持软件的复杂性低，可同时运行的软件数量少<br><br>\t保护模式操作系统<br>\t\t内存页<br>\t\t缺页中断请求<br>\t\t\t淘汰内存页<br>\t\t不经常使用的内存页保存到外置存储<br><br>\t\t软件--》进程--》地址映射表<br>","like_count":1},{"had_liked":false,"id":164421,"user_name":"ibing","can_delete":false,"product_type":"c1","uid":1247818,"ip_address":"","ucode":"C96715762B64D1","user_header":"https://static001.geekbang.org/account/avatar/00/13/0a/4a/07ec2ad1.jpg","comment_is_top":false,"comment_ctime":1576984505,"is_pvip":false,"replies":[{"id":"62454","content":"是这样","user_name":"作者回复","user_name_real":"许式伟-七牛云(已满)","uid":"1228022","ctime":1576991511,"ip_address":"","comment_id":164421,"utype":1}],"discussion_count":1,"race_medal":0,"score":"5871951801","product_id":100025201,"comment_content":"老师您好，下列理解还请帮我指正，谢谢：<br>实模式内存管理：<br>每个软件自由申请物理内存资源。（缺点是，软件之间能相互修改内存数据；申请后不论使用否都会占用内存，导致内存不够用）<br><br>保护模式内存管理<br>CPU地址映射表，把虚拟的内存地址转为物理的内存地址。软件不直接操作物理内存，通过虚拟内存的映射表的中转来操作物理内存，这样可以避免软件之间相互修改内存数据的情况。<br>虚拟内存及其缺页机制，软件申请内存资源后，只为其分配虚拟内存，不占用物理内存，只有在需要使用时才会分配物理内存，这样能提高内存利用率。同时当物理内存不够时也会释放长时间未使用的内存，存储到外置存储上（如：swap文件）","like_count":1,"discussions":[{"author":{"id":1228022,"avatar":"https://static001.geekbang.org/account/avatar/00/12/bc/f6/e61d4b8f.jpg","nickname":"许式伟-七牛云(已满)","note":"","ucode":"1A2F8AA6F6DB54","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":478760,"discussion_content":"是这样","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1576991511,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":145672,"user_name":"吴双","can_delete":false,"product_type":"c1","uid":1179655,"ip_address":"","ucode":"87B32F443485D2","user_header":"https://static001.geekbang.org/account/avatar/00/12/00/07/8e3ceda8.jpg","comment_is_top":false,"comment_ctime":1572341281,"is_pvip":false,"replies":[{"id":"56287","content":"内存页要么存储代码，要么存储动态分配的数据，包括堆和栈。代码就是应用程序本身，数据从可执行文件加载。堆和栈是程序运行后产生的数据，在linux下存储在swap分区，在Windows下是swap文件。","user_name":"作者回复","user_name_real":"许式伟-七牛云(已满)","uid":"1228022","ctime":1572393733,"ip_address":"","comment_id":145672,"utype":1}],"discussion_count":1,"race_medal":0,"score":"5867308577","product_id":100025201,"comment_content":"老师，虚拟内存表存在哪里？发生缺页时，操作系统会为这个内存页分配物理的内存，并恢复这个内存页的数据，内存页的数据存在哪里？","like_count":1,"discussions":[{"author":{"id":1228022,"avatar":"https://static001.geekbang.org/account/avatar/00/12/bc/f6/e61d4b8f.jpg","nickname":"许式伟-七牛云(已满)","note":"","ucode":"1A2F8AA6F6DB54","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":472521,"discussion_content":"内存页要么存储代码，要么存储动态分配的数据，包括堆和栈。代码就是应用程序本身，数据从可执行文件加载。堆和栈是程序运行后产生的数据，在linux下存储在swap分区，在Windows下是swap文件。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1572393733,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":138157,"user_name":"码农Kevin亮","can_delete":false,"product_type":"c1","uid":1116630,"ip_address":"","ucode":"D34562461CA0A1","user_header":"https://static001.geekbang.org/account/avatar/00/11/09/d6/5f366427.jpg","comment_is_top":false,"comment_ctime":1570069690,"is_pvip":false,"replies":[{"id":"53197","content":"不需要的，数据结构被设计为淘汰算法友好，在淘汰页面时会解除映射关系。","user_name":"作者回复","user_name_real":"许式伟-七牛云(已满)","uid":"1228022","ctime":1570158201,"ip_address":"","comment_id":138157,"utype":1}],"discussion_count":1,"race_medal":0,"score":"5865036986","product_id":100025201,"comment_content":"请问老师，假设一段虚拟内存A1映射的物理内存地址是a1。当物理内存不足时，a1被回收用于加载别的程序。那么这时原程序A1-&gt;a1的映射关系是如何断开的呢？是在操作系统层面提供了一个a1-&gt;A1的反向映射表么？","like_count":1,"discussions":[{"author":{"id":1228022,"avatar":"https://static001.geekbang.org/account/avatar/00/12/bc/f6/e61d4b8f.jpg","nickname":"许式伟-七牛云(已满)","note":"","ucode":"1A2F8AA6F6DB54","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":469416,"discussion_content":"不需要的，数据结构被设计为淘汰算法友好，在淘汰页面时会解除映射关系。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1570158201,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":108088,"user_name":"Smallfly","can_delete":false,"product_type":"c1","uid":1013841,"ip_address":"","ucode":"D388D5E0249A69","user_header":"https://static001.geekbang.org/account/avatar/00/0f/78/51/4790e13e.jpg","comment_is_top":false,"comment_ctime":1561681106,"is_pvip":false,"replies":[{"id":"39145","content":"嗯，我也这样理解，读写性能都太差了","user_name":"作者回复","user_name_real":"许式伟-七牛云(已满)","uid":"1228022","ctime":1561682786,"ip_address":"","comment_id":108088,"utype":1}],"discussion_count":1,"race_medal":0,"score":"5856648402","product_id":100025201,"comment_content":"RAM 为什么不和主板一样，设计成非易失的呢？是出于成本考虑么，还是因为非易失的写入性能太差了？","like_count":1,"discussions":[{"author":{"id":1228022,"avatar":"https://static001.geekbang.org/account/avatar/00/12/bc/f6/e61d4b8f.jpg","nickname":"许式伟-七牛云(已满)","note":"","ucode":"1A2F8AA6F6DB54","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":455821,"discussion_content":"嗯，我也这样理解，读写性能都太差了","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1561682786,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":108028,"user_name":"张sir","can_delete":false,"product_type":"c1","uid":1209431,"ip_address":"","ucode":"52958DF6705208","user_header":"https://static001.geekbang.org/account/avatar/00/12/74/57/7b828263.jpg","comment_is_top":false,"comment_ctime":1561649064,"is_pvip":false,"replies":[{"id":"39114","content":"1、计算机刚启动时为实模式；<br>2、实模式是一个历史产物，没有必然存在的必要性。","user_name":"作者回复","user_name_real":"许式伟-七牛云(已满)","uid":"1228022","ctime":1561674327,"ip_address":"","comment_id":108028,"utype":1}],"discussion_count":1,"race_medal":0,"score":"5856616360","product_id":100025201,"comment_content":"请问实模式下运行的场景都有什么？能举个例子吗<br>","like_count":1,"discussions":[{"author":{"id":1228022,"avatar":"https://static001.geekbang.org/account/avatar/00/12/bc/f6/e61d4b8f.jpg","nickname":"许式伟-七牛云(已满)","note":"","ucode":"1A2F8AA6F6DB54","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":455793,"discussion_content":"1、计算机刚启动时为实模式；\n2、实模式是一个历史产物，没有必然存在的必要性。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1561674327,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":98912,"user_name":"Geek_450b1f","can_delete":false,"product_type":"c1","uid":1503668,"ip_address":"","ucode":"4B26F9F92E1AA4","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/RD6SRbfDDfSCPC0RrziccKMJUrO2ZtJo5h8n8e2C8yPmmn5TKI7ricsqBxugvCK9QASBSR7UlbSFlGSUlSia8Jz2A/132","comment_is_top":false,"comment_ctime":1559115360,"is_pvip":false,"replies":[{"id":"35498","content":"保护模式所有的访问都是访问虚拟内存。","user_name":"作者回复","user_name_real":"许式伟-七牛云(已满)","uid":"1228022","ctime":1559127453,"ip_address":"","comment_id":98912,"utype":1}],"discussion_count":1,"race_medal":0,"score":"5854082656","product_id":100025201,"comment_content":"怎么理解虚拟内存？它具体是存的什么东西？软件什么时候才会访问内存页呢？内存页应该是指的物理内存页把，这里面存的是软件本身的运行代码还是用到的数据呢？有点看的一脸懵逼","like_count":1,"discussions":[{"author":{"id":1228022,"avatar":"https://static001.geekbang.org/account/avatar/00/12/bc/f6/e61d4b8f.jpg","nickname":"许式伟-七牛云(已满)","note":"","ucode":"1A2F8AA6F6DB54","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":451891,"discussion_content":"保护模式所有的访问都是访问虚拟内存。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1559127453,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":97488,"user_name":"东风第一枝","can_delete":false,"product_type":"c1","uid":1402697,"ip_address":"","ucode":"0CD0F62E90DAD8","user_header":"https://static001.geekbang.org/account/avatar/00/15/67/49/864dba17.jpg","comment_is_top":false,"comment_ctime":1558683225,"is_pvip":false,"discussion_count":1,"race_medal":0,"score":"5853650521","product_id":100025201,"comment_content":"👍写得很棒，建议和 极客时间 的《趣谈Linux操作系统》结合起来看，会有不一样的收货！","like_count":1,"discussions":[{"author":{"id":1102245,"avatar":"https://static001.geekbang.org/account/avatar/00/10/d1/a5/2bbedc3b.jpg","nickname":"over","note":"","ucode":"FE272AC19842D3","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":360916,"discussion_content":"好","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1616556953,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":92868,"user_name":"Leon📷","can_delete":false,"product_type":"c1","uid":1219496,"ip_address":"","ucode":"B9BBD1EFAAE5A2","user_header":"https://static001.geekbang.org/account/avatar/00/12/9b/a8/6a391c66.jpg","comment_is_top":false,"comment_ctime":1557359165,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"5852326461","product_id":100025201,"comment_content":"内存的申请和释放，进程申请内存需要通过内存映射表来完成，有点像微服务架构中的服务发现，请求方不管三七二十一向注册中心发起请求域名，而域名的真正的ip通过注册中心返回给请求方，或者直接由注册中心代办完成调用，如果服务方ip变动了，也是由注册中心来修改","like_count":1},{"had_liked":false,"id":92738,"user_name":"川杰","can_delete":false,"product_type":"c1","uid":1099750,"ip_address":"","ucode":"815211E1D698E6","user_header":"https://static001.geekbang.org/account/avatar/00/10/c7/e6/11f21cb4.jpg","comment_is_top":false,"comment_ctime":1557318825,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"5852286121","product_id":100025201,"comment_content":"感谢，接您之前的回答，<br>2、代码段在哪里，是操作系统约定的，因为负责加载的人是操作系统，它设计的程序文件的数据格式。<br>做如下思考:<br>加载软件的代码段时，因为代码是存在硬盘中的，对应操作系统里的文件系统。即，文件系统把代码段放到内存中。<br>这体现了，1.单一职责原则（运算单元只管运算，不管数据从何处来。文件系统负责存储）；2.高内聚（两个不同的责任模块组合起来完成了更大的模块）；","like_count":1},{"had_liked":false,"id":92459,"user_name":"jaxsong","can_delete":false,"product_type":"c1","uid":1007331,"ip_address":"","ucode":"E80610A713A2B7","user_header":"https://static001.geekbang.org/account/avatar/00/0f/5e/e3/75a94649.jpg","comment_is_top":false,"comment_ctime":1557277523,"is_pvip":false,"replies":[{"id":"33062","content":"既不是寄存器也不是内存，而是cpu对内存的高速缓存。之所以没有介绍它们，是因为它们是cpu内部实现，并不像寄存器和内存一样是可编程的。","user_name":"作者回复","user_name_real":"许式伟-七牛云(已满)","uid":"1228022","ctime":1557278894,"ip_address":"","comment_id":92459,"utype":1}],"discussion_count":1,"race_medal":0,"score":"5852244819","product_id":100025201,"comment_content":"请问大神，cpu有一级缓存二级级缓存等等，这些缓存是属于寄存器还是内存呢？和他们有什么区别吗？","like_count":1,"discussions":[{"author":{"id":1228022,"avatar":"https://static001.geekbang.org/account/avatar/00/12/bc/f6/e61d4b8f.jpg","nickname":"许式伟-七牛云(已满)","note":"","ucode":"1A2F8AA6F6DB54","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":449270,"discussion_content":"既不是寄存器也不是内存，而是cpu对内存的高速缓存。之所以没有介绍它们，是因为它们是cpu内部实现，并不像寄存器和内存一样是可编程的。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1557278894,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":92356,"user_name":"Smallfly","can_delete":false,"product_type":"c1","uid":1013841,"ip_address":"","ucode":"D388D5E0249A69","user_header":"https://static001.geekbang.org/account/avatar/00/0f/78/51/4790e13e.jpg","comment_is_top":false,"comment_ctime":1557239223,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"5852206519","product_id":100025201,"comment_content":"虚拟内存还有一个作用是为了利用碎片化的物理内存。","like_count":1},{"had_liked":false,"id":92316,"user_name":"Aaron Cheung","can_delete":false,"product_type":"c1","uid":1079816,"ip_address":"","ucode":"03972759C53667","user_header":"https://static001.geekbang.org/account/avatar/00/10/7a/08/4d3e47dd.jpg","comment_is_top":false,"comment_ctime":1557230888,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"5852198184","product_id":100025201,"comment_content":"打卡07 fighting 以前 cpp 完全不了解内存的一些问题……","like_count":1},{"had_liked":false,"id":92274,"user_name":"cricket1981","can_delete":false,"product_type":"c1","uid":1001715,"ip_address":"","ucode":"758262F5958DA4","user_header":"https://static001.geekbang.org/account/avatar/00/0f/48/f3/f1034ffd.jpg","comment_is_top":false,"comment_ctime":1557218666,"is_pvip":false,"replies":[{"id":"33001","content":"操作系统会保留一个地址空间，0通常也在保留区间内，因为0开始往往是中断向量表的地址，其他的地址区间怎么分配其实应用自己说了算。函数和数据都可以跨内存页","user_name":"作者回复","user_name_real":"许式伟-七牛云(已满)","uid":"1228022","ctime":1557219494,"ip_address":"","comment_id":92274,"utype":1}],"discussion_count":1,"race_medal":0,"score":"5852185962","product_id":100025201,"comment_content":"请问每个应用的虚拟内存地址是怎么分配的？起始地址都是0吗？函数F可以跨多个虚拟内存页吗？","like_count":1,"discussions":[{"author":{"id":1228022,"avatar":"https://static001.geekbang.org/account/avatar/00/12/bc/f6/e61d4b8f.jpg","nickname":"许式伟-七牛云(已满)","note":"","ucode":"1A2F8AA6F6DB54","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":449203,"discussion_content":"操作系统会保留一个地址空间，0通常也在保留区间内，因为0开始往往是中断向量表的地址，其他的地址区间怎么分配其实应用自己说了算。函数和数据都可以跨内存页","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1557219494,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":92176,"user_name":"觉","can_delete":false,"product_type":"c1","uid":1503600,"ip_address":"","ucode":"95E85D30E92170","user_header":"https://static001.geekbang.org/account/avatar/00/16/f1/70/bca09d2d.jpg","comment_is_top":false,"comment_ctime":1557194843,"is_pvip":false,"replies":[{"id":"32935","content":"我们是架构课，很多细节没法一一交代，否则就演变成为百科全书了。","user_name":"作者回复","user_name_real":"许式伟-七牛云(已满)","uid":"1228022","ctime":1557197615,"ip_address":"","comment_id":92176,"utype":1}],"discussion_count":2,"race_medal":0,"score":"5852162139","product_id":100025201,"comment_content":"讲到这里希望老师能讲解一下MMU、 缓存、DMA、CPU与内存交互的过程 这些概念 ","like_count":1,"discussions":[{"author":{"id":1228022,"avatar":"https://static001.geekbang.org/account/avatar/00/12/bc/f6/e61d4b8f.jpg","nickname":"许式伟-七牛云(已满)","note":"","ucode":"1A2F8AA6F6DB54","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":449169,"discussion_content":"我们是架构课，很多细节没法一一交代，否则就演变成为百科全书了。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1557197615,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1024057,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/a0/39/ddcf26ac.jpg","nickname":"bruceding","note":"","ucode":"D35A2B05487EAE","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":93,"discussion_content":"建议看下《深入理解计算机系统》， 里面有精彩的描述","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1561091542,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":92169,"user_name":"觉","can_delete":false,"product_type":"c1","uid":1503600,"ip_address":"","ucode":"95E85D30E92170","user_header":"https://static001.geekbang.org/account/avatar/00/16/f1/70/bca09d2d.jpg","comment_is_top":false,"comment_ctime":1557194498,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"5852161794","product_id":100025201,"comment_content":"感恩大佬分享 随喜大佬","like_count":1},{"had_liked":false,"id":92077,"user_name":"李发达","can_delete":false,"product_type":"c1","uid":1101975,"ip_address":"","ucode":"2C9C43F46A6F93","user_header":"https://static001.geekbang.org/account/avatar/00/10/d0/97/a84b0fbf.jpg","comment_is_top":false,"comment_ctime":1557186484,"is_pvip":false,"discussion_count":0,"race_medal":4,"score":"5852153780","product_id":100025201,"comment_content":"认真拜读，霍然开朗","like_count":1},{"had_liked":false,"id":92068,"user_name":":)","can_delete":false,"product_type":"c1","uid":1239198,"ip_address":"","ucode":"23D505949442B6","user_header":"https://static001.geekbang.org/account/avatar/00/12/e8/9e/6550a051.jpg","comment_is_top":false,"comment_ctime":1557185165,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"5852152461","product_id":100025201,"comment_content":"太酷了，老师讲得太好了！","like_count":1},{"had_liked":false,"id":92051,"user_name":"松鼠君","can_delete":false,"product_type":"c1","uid":1135269,"ip_address":"","ucode":"F39C661B685E75","user_header":"https://static001.geekbang.org/account/avatar/00/11/52/a5/d4c6e23d.jpg","comment_is_top":false,"comment_ctime":1557164491,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"5852131787","product_id":100025201,"comment_content":"胜读一学期的书！","like_count":1},{"had_liked":false,"id":357325,"user_name":"晴天了","can_delete":false,"product_type":"c1","uid":1359669,"ip_address":"上海","ucode":"5310E02F8DF1F0","user_header":"https://static001.geekbang.org/account/avatar/00/14/bf/35/0e3a92a7.jpg","comment_is_top":false,"comment_ctime":1663158818,"is_pvip":false,"replies":[{"id":"130068","content":"每个进程天然存在，只不过开始是空的。程序加载过程因为需要更多的内存（需要更多物理内存放程序或数据），于是就有了新的内存页的映射表项。","user_name":"作者回复","user_name_real":"编辑","uid":"1228022","ctime":1663201510,"ip_address":"上海","comment_id":357325,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1663158818","product_id":100025201,"comment_content":"问下老师 地址映射表 是在进程启动时 被加载进内存的吗","like_count":0,"discussions":[{"author":{"id":1228022,"avatar":"https://static001.geekbang.org/account/avatar/00/12/bc/f6/e61d4b8f.jpg","nickname":"许式伟-七牛云(已满)","note":"","ucode":"1A2F8AA6F6DB54","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":587651,"discussion_content":"每个进程天然存在，只不过开始是空的。程序加载过程因为需要更多的内存（需要更多物理内存放程序或数据），于是就有了新的内存页的映射表项。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1663201511,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"上海"},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":355453,"user_name":"MT006","can_delete":false,"product_type":"c1","uid":1813364,"ip_address":"上海","ucode":"83C7D7EEBD32C1","user_header":"https://static001.geekbang.org/account/avatar/00/1b/ab/74/286d74c0.jpg","comment_is_top":false,"comment_ctime":1661398363,"is_pvip":true,"replies":[{"id":"129367","content":"正常来说不同程序用的物理内存地址不会重复。对于超出物理内存大小没法放的时候，它把最不活跃的内存页保存到磁盘上，下次要用的时候再加载回来。当然往细来说，实际上不同程序用相同物理内存是存在的，叫共享内存。","user_name":"作者回复","user_name_real":"编辑","uid":"1228022","ctime":1661472295,"ip_address":"上海","comment_id":355453,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1661398363","product_id":100025201,"comment_content":"老师。当所有软件的虚拟内存大小总和超过物理内存的大小时。那虚拟内存映射到的物理地址会出现重复的情况吧？那如果同时运行的软件，刚好是映射物理地址重复的情况，cpu改怎么处理呢","like_count":0,"discussions":[{"author":{"id":1228022,"avatar":"https://static001.geekbang.org/account/avatar/00/12/bc/f6/e61d4b8f.jpg","nickname":"许式伟-七牛云(已满)","note":"","ucode":"1A2F8AA6F6DB54","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":585294,"discussion_content":"正常来说不同程序用的物理内存地址不会重复。对于超出物理内存大小没法放的时候，它把最不活跃的内存页保存到磁盘上，下次要用的时候再加载回来。当然往细来说，实际上不同程序用相同物理内存是存在的，叫共享内存。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1661472295,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"上海"},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":345060,"user_name":"Geek__猫猫头","can_delete":false,"product_type":"c1","uid":1453375,"ip_address":"","ucode":"E912CE863E147D","user_header":"","comment_is_top":false,"comment_ctime":1651995480,"is_pvip":true,"discussion_count":0,"race_medal":0,"score":"1651995480","product_id":100025201,"comment_content":"我理解缺页中断，是指cpu只关心内存中直接的运行和内存数据读取，至于内存读不到不够用的问题不应该在cpu层面解决，因此通过中断把问题抛给了操作系统去解决。内存分配，淘汰不常用的内存，都是操作系统所注册的中断处理程序的逻辑。一个中断就在cpu层面很优雅的把两大难题都抛走了","like_count":0},{"had_liked":false,"id":324640,"user_name":"K","can_delete":false,"product_type":"c1","uid":2853348,"ip_address":"","ucode":"B6B3C18CCF1D01","user_header":"https://static001.geekbang.org/account/avatar/00/2b/89/e4/9d97425e.jpg","comment_is_top":false,"comment_ctime":1638523439,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1638523439","product_id":100025201,"comment_content":"四个字，缺页中断","like_count":0},{"had_liked":false,"id":319566,"user_name":"薛大琪sage","can_delete":false,"product_type":"c1","uid":1173302,"ip_address":"","ucode":"4B660FBD6D43DB","user_header":"https://static001.geekbang.org/account/avatar/00/11/e7/36/fcbcd227.jpg","comment_is_top":false,"comment_ctime":1635852280,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1635852280","product_id":100025201,"comment_content":"我觉的许大这几讲，一是讲述计算机的组成架构，让我们更了解计算机的运行结构，进而在软件设计上尤其是技术选型上，了解技术底层的原理，选择更合适的技术方案；二来，以虚拟内存页管理为切入，引出设计模式上的思考，我认为这其实也是代理模式的表现。","like_count":0},{"had_liked":false,"id":319500,"user_name":"escray","can_delete":false,"product_type":"c1","uid":1020525,"ip_address":"","ucode":"1F4204930E47C4","user_header":"https://static001.geekbang.org/account/avatar/00/0f/92/6d/becd841a.jpg","comment_is_top":false,"comment_ctime":1635837021,"is_pvip":true,"replies":[{"id":"115821","content":"是的 实模式在小设备上还有生存空间","user_name":"作者回复","user_name_real":"许式伟-七牛云(已满)","uid":"1228022","ctime":1635863076,"ip_address":"","comment_id":319500,"utype":1}],"discussion_count":1,"race_medal":2,"score":"1635837021","product_id":100025201,"comment_content":"CPU 实模式是不是更适合小型的设备，适用于物联网。<br><br>保护模式其实也是用时间来换取空间的方式，在一定程度上增加了计算量。保护模式理解起来并不困难，但是最早想到保护模式和虚拟内存的，是天才。<br><br>从 BIOS 到引导区引导程序，再到 OS 引导程序，进而 OS Shell 程序，之后启动各种软件，这个从细微之处启动，然后扩展到整个运行环境的方式，很精彩。<br><br>同时也在打卡操作系统专栏，可以相互借鉴。<br><br>如果还有时间，再看看组成原理专栏，那就无敌了。","like_count":0,"discussions":[{"author":{"id":1228022,"avatar":"https://static001.geekbang.org/account/avatar/00/12/bc/f6/e61d4b8f.jpg","nickname":"许式伟-七牛云(已满)","note":"","ucode":"1A2F8AA6F6DB54","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":529653,"discussion_content":"是的 实模式在小设备上还有生存空间","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1635863076,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":307244,"user_name":"小明明","can_delete":false,"product_type":"c1","uid":2055696,"ip_address":"","ucode":"CADE860269BFA4","user_header":"https://thirdwx.qlogo.cn/mmopen/vi_32/USbsicTvESSEM8CKwDoLsIk4IhpKFVqTyhS7zMksu8XgmiayNnlTX2aO62liavApicF5cIKZFexUZVztUvj4SRtEhw/132","comment_is_top":false,"comment_ctime":1628978277,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1628978277","product_id":100025201,"comment_content":"solid的架构思想和重构调优的思想来分析计算机的需求演进，过分优秀","like_count":0},{"had_liked":false,"id":285057,"user_name":"不温暖啊不纯良","can_delete":false,"product_type":"c1","uid":2079117,"ip_address":"","ucode":"204474A214E00C","user_header":"https://static001.geekbang.org/account/avatar/00/1f/b9/8d/00bded19.jpg","comment_is_top":false,"comment_ctime":1616594309,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1616594309","product_id":100025201,"comment_content":"看完了内存分配的机制，就联想到了Java单例模式中的懒加载，都是按需加载，当你真正要用到这个物理地址的时候，我才给你分配物理地址的资源，假设一个软件全部加载到内存中，需要占用1G的物理内存，但其实用户用到的并不是。这个软件的所有功能，就算他会使用到这个软件的所有功能，但他使用也有个先后顺序，假设每个功能的程序在运行的时候平均占100兆的内存，那么其实。用平均100兆的物理内存就能够让他，正常使用这个软件的所有功能。","like_count":0},{"had_liked":false,"id":251769,"user_name":"小炭","can_delete":false,"product_type":"c1","uid":1109544,"ip_address":"","ucode":"E20E3958CAF06C","user_header":"https://static001.geekbang.org/account/avatar/00/10/ee/28/c04a0c83.jpg","comment_is_top":false,"comment_ctime":1601859208,"is_pvip":true,"discussion_count":0,"race_medal":0,"score":"1601859208","product_id":100025201,"comment_content":"缺页是在哪些情况下导致的？","like_count":0},{"had_liked":false,"id":243036,"user_name":"william777","can_delete":false,"product_type":"c1","uid":1028639,"ip_address":"","ucode":"C1C1108DD968F0","user_header":"https://static001.geekbang.org/account/avatar/00/0f/b2/1f/abb7bfe3.jpg","comment_is_top":false,"comment_ctime":1597927374,"is_pvip":false,"replies":[{"id":"89682","content":"cpu不需要知道，是操作系统知道，cpu通过缺页中断让操作系统获得执行机会。","user_name":"作者回复","user_name_real":"许式伟-七牛云(已满)","uid":"1228022","ctime":1598027140,"ip_address":"","comment_id":243036,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1597927374","product_id":100025201,"comment_content":"老师，您好。淘汰的内存页数据如您回复川杰同学时所说，是保存在外置存储中，那么是不是说CPU还是需要知道外置存储的实现细节？","like_count":0,"discussions":[{"author":{"id":1228022,"avatar":"https://static001.geekbang.org/account/avatar/00/12/bc/f6/e61d4b8f.jpg","nickname":"许式伟-七牛云(已满)","note":"","ucode":"1A2F8AA6F6DB54","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":504162,"discussion_content":"cpu不需要知道，是操作系统知道，cpu通过缺页中断让操作系统获得执行机会。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1598027140,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":217801,"user_name":"亢（知行合一的路上）","can_delete":false,"product_type":"c1","uid":1347013,"ip_address":"","ucode":"958AF7C96EB9E8","user_header":"https://static001.geekbang.org/account/avatar/00/14/8d/c5/898b13b4.jpg","comment_is_top":false,"comment_ctime":1589615825,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1589615825","product_id":100025201,"comment_content":"深深体会到架构设计的重要性，设计模块的功能时，要考虑它干什么，更应该考虑它不干什么，或者说不能干什么，或者说不能直接干，也就是依赖于接口，外部提供多样化的实现。","like_count":0},{"had_liked":false,"id":209640,"user_name":"石头汤","can_delete":false,"product_type":"c1","uid":1022282,"ip_address":"","ucode":"45E4578E54F585","user_header":"https://static001.geekbang.org/account/avatar/00/0f/99/4a/bdf26d5c.jpg","comment_is_top":false,"comment_ctime":1587574983,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1587574983","product_id":100025201,"comment_content":"实模式 与保护模式 的区别就 是 集中式 与 分布式 的区别，分布式的架构 子模块相互隔离，容易横向扩展，10个软件跟100个软件区别不大","like_count":0},{"had_liked":false,"id":193826,"user_name":"MacBao","can_delete":false,"product_type":"c1","uid":1738119,"ip_address":"","ucode":"8CF51C3688C8F6","user_header":"https://static001.geekbang.org/account/avatar/00/1a/85/87/727142bc.jpg","comment_is_top":false,"comment_ctime":1584971058,"is_pvip":false,"replies":[{"id":"73885","content":"申请内存你可以认为是两件事情，首先是保留一段地址区间，然后是将这段地址区间绑定到某段物理内存。前者很难失败，后者还是会有可能因为内存不足而失败（虚拟内存技术改善了这一点）。","user_name":"作者回复","user_name_real":"许式伟-七牛云(已满)","uid":"1228022","ctime":1585018501,"ip_address":"","comment_id":193826,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1584971058","product_id":100025201,"comment_content":"老师您好，64位程序虚拟内存空间很大，为什么申请内存还会失败呢？尤其是申请连续空间失败率会更大","like_count":0,"discussions":[{"author":{"id":1228022,"avatar":"https://static001.geekbang.org/account/avatar/00/12/bc/f6/e61d4b8f.jpg","nickname":"许式伟-七牛云(已满)","note":"","ucode":"1A2F8AA6F6DB54","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":488676,"discussion_content":"申请内存你可以认为是两件事情，首先是保留一段地址区间，然后是将这段地址区间绑定到某段物理内存。前者很难失败，后者还是会有可能因为内存不足而失败（虚拟内存技术改善了这一点）。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1585018501,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":176908,"user_name":"幻灰龙","can_delete":false,"product_type":"c1","uid":1046202,"ip_address":"","ucode":"AFEDCC997C2FF6","user_header":"https://static001.geekbang.org/account/avatar/00/0f/f6/ba/09ab72d2.jpg","comment_is_top":false,"comment_ctime":1581220183,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1581220183","product_id":100025201,"comment_content":"打卡第7篇，还是分离稳定点和变化点，加入虚拟化","like_count":0},{"had_liked":false,"id":165168,"user_name":"Eric","can_delete":false,"product_type":"c1","uid":1053498,"ip_address":"","ucode":"59752A51A382A6","user_header":"https://static001.geekbang.org/account/avatar/00/10/13/3a/b0454322.jpg","comment_is_top":false,"comment_ctime":1577174869,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1577174869","product_id":100025201,"comment_content":"我理解是通过不断加层 来解耦合。。😀","like_count":0},{"had_liked":false,"id":158977,"user_name":"J.Smile","can_delete":false,"product_type":"c1","uid":1336475,"ip_address":"","ucode":"C4D98DFDBF7584","user_header":"https://static001.geekbang.org/account/avatar/00/14/64/9b/0b578b08.jpg","comment_is_top":false,"comment_ctime":1575509697,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1575509697","product_id":100025201,"comment_content":"缺页中断机制的设计对内存管理的重要意义","like_count":0},{"had_liked":false,"id":133909,"user_name":"cz","can_delete":false,"product_type":"c1","uid":1111808,"ip_address":"","ucode":"FD5C468B5EE985","user_header":"https://static001.geekbang.org/account/avatar/00/10/f7/00/31bf8472.jpg","comment_is_top":false,"comment_ctime":1568696350,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1568696350","product_id":100025201,"comment_content":"对于虚拟内存而言，内核使用的虚拟内存与应用程序使用的虚拟内存，是如何被管理以及如何工作的？谢谢","like_count":0},{"had_liked":false,"id":131871,"user_name":"渺小","can_delete":false,"product_type":"c1","uid":1048491,"ip_address":"","ucode":"8420F6EE9A7872","user_header":"https://static001.geekbang.org/account/avatar/00/0f/ff/ab/04a3396e.jpg","comment_is_top":false,"comment_ctime":1567945920,"is_pvip":true,"replies":[{"id":"50428","content":"缺的页被访问了就会加载。每个页的地址都是明确的，pageNo * pageSize 就是页的地址。","user_name":"作者回复","user_name_real":"许式伟-七牛云(已满)","uid":"1228022","ctime":1567998310,"ip_address":"","comment_id":131871,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1567945920","product_id":100025201,"comment_content":"如果某个运行中的程序长时间没有操作，被缺页中断移出去了，下次再加载的时候怎么知道从哪里开始加载呢？","like_count":0,"discussions":[{"author":{"id":1228022,"avatar":"https://static001.geekbang.org/account/avatar/00/12/bc/f6/e61d4b8f.jpg","nickname":"许式伟-七牛云(已满)","note":"","ucode":"1A2F8AA6F6DB54","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":466656,"discussion_content":"缺的页被访问了就会加载。每个页的地址都是明确的，pageNo * pageSize 就是页的地址。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1567998310,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":116563,"user_name":"宋晓明","can_delete":false,"product_type":"c1","uid":1146507,"ip_address":"","ucode":"DC866DCE2FBA9E","user_header":"https://static001.geekbang.org/account/avatar/00/11/7e/8b/3cc461b3.jpg","comment_is_top":false,"comment_ctime":1563871139,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1563871139","product_id":100025201,"comment_content":"老师的架构课果然别具一格，“浅显”易懂","like_count":0},{"had_liked":false,"id":116267,"user_name":"Eternal","can_delete":false,"product_type":"c1","uid":1188023,"ip_address":"","ucode":"EA6FE7CC98F740","user_header":"https://static001.geekbang.org/account/avatar/00/12/20/b7/bdb3bcf0.jpg","comment_is_top":false,"comment_ctime":1563810297,"is_pvip":false,"replies":[{"id":"42512","content":"可以算吧，但是不是因为用时间换空间，而是地址空间隔离。","user_name":"作者回复","user_name_real":"许式伟-七牛云(已满)","uid":"1228022","ctime":1563811394,"ip_address":"","comment_id":116267,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1563810297","product_id":100025201,"comment_content":"有一个前提就是CUP运行速度非常非常快，可以用它的超级速度来置换空间，所以用虚拟内存解决内存不足的问题，虚拟内存算不算现在所有虚拟化，容器化思想的鼻祖呢？？","like_count":0,"discussions":[{"author":{"id":1228022,"avatar":"https://static001.geekbang.org/account/avatar/00/12/bc/f6/e61d4b8f.jpg","nickname":"许式伟-七牛云(已满)","note":"","ucode":"1A2F8AA6F6DB54","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":459458,"discussion_content":"可以算吧，但是不是因为用时间换空间，而是地址空间隔离。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1563811394,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":115475,"user_name":"孙梦华🙄🙄","can_delete":false,"product_type":"c1","uid":1037070,"ip_address":"","ucode":"2017F0E865416C","user_header":"https://static001.geekbang.org/account/avatar/00/0f/d3/0e/d2f9dd72.jpg","comment_is_top":false,"comment_ctime":1563597071,"is_pvip":false,"replies":[{"id":"42215","content":"bios不是在内存（ram），是在主板的rom","user_name":"作者回复","user_name_real":"许式伟-七牛云(已满)","uid":"1228022","ctime":1563608610,"ip_address":"","comment_id":115475,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1563597071","product_id":100025201,"comment_content":"发生缺页时，操作系统会为这个内存页分配物理的内存，并恢复这个内存页的数据。如果没有空闲的物理内存可以分配，它就会选择一个最久没有被访问的内存页进行淘汰。<br><br>这个是不是就是LRU算法呀？<br>另外，是不是BIOS和引导区程序是写死在内存里面的啊？比如我的安卓手机是8G的内存，事实上是有固定的一部分是给了这俩（当然，他们应该很小）","like_count":0,"discussions":[{"author":{"id":1228022,"avatar":"https://static001.geekbang.org/account/avatar/00/12/bc/f6/e61d4b8f.jpg","nickname":"许式伟-七牛云(已满)","note":"","ucode":"1A2F8AA6F6DB54","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":459124,"discussion_content":"bios不是在内存（ram），是在主板的rom","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1563608610,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":108102,"user_name":"Smallfly","can_delete":false,"product_type":"c1","uid":1013841,"ip_address":"","ucode":"D388D5E0249A69","user_header":"https://static001.geekbang.org/account/avatar/00/0f/78/51/4790e13e.jpg","comment_is_top":false,"comment_ctime":1561682565,"is_pvip":false,"replies":[{"id":"39172","content":"写在rom上，所以是“硬件”","user_name":"作者回复","user_name_real":"许式伟-七牛云(已满)","uid":"1228022","ctime":1561686307,"ip_address":"","comment_id":108102,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1561682565","product_id":100025201,"comment_content":"「引导区引导程序不固化在 BIOS 中，而是写在外置存储的引导，是为了避免 BIOS 程序需要经常性修改。毕竟 BIOS 还是硬件。」 <br><br>Basic Input Out System（BIOS） 不是软件么？","like_count":0,"discussions":[{"author":{"id":1228022,"avatar":"https://static001.geekbang.org/account/avatar/00/12/bc/f6/e61d4b8f.jpg","nickname":"许式伟-七牛云(已满)","note":"","ucode":"1A2F8AA6F6DB54","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":455826,"discussion_content":"写在rom上，所以是“硬件”","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1561686307,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":107974,"user_name":"刘冲","can_delete":false,"product_type":"c1","uid":1000439,"ip_address":"","ucode":"0C4F66921AE76C","user_header":"https://static001.geekbang.org/account/avatar/00/0f/43/f7/abb7bfe3.jpg","comment_is_top":false,"comment_ctime":1561642660,"is_pvip":false,"replies":[{"id":"39105","content":"是的","user_name":"作者回复","user_name_real":"许式伟-七牛云(已满)","uid":"1228022","ctime":1561650492,"ip_address":"","comment_id":107974,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1561642660","product_id":100025201,"comment_content":"既然cpu不知道存储文件系统格式，它是怎么读到内存中的呢？是操作系统的缺页中断程序么","like_count":0,"discussions":[{"author":{"id":1228022,"avatar":"https://static001.geekbang.org/account/avatar/00/12/bc/f6/e61d4b8f.jpg","nickname":"许式伟-七牛云(已满)","note":"","ucode":"1A2F8AA6F6DB54","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":455769,"discussion_content":"是的","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1561650492,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":105567,"user_name":"熊斌","can_delete":false,"product_type":"c1","uid":1026280,"ip_address":"","ucode":"24D0C32F397113","user_header":"https://static001.geekbang.org/account/avatar/00/0f/a8/e8/bc84c47d.jpg","comment_is_top":false,"comment_ctime":1561032721,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1561032721","product_id":100025201,"comment_content":"看《01架构师的宏观视角》时醍醐灌顶，再看后面几篇时感觉在啃类似于大学计算机教材，虽然极为专业，但是我直犯困，适合早上看。","like_count":0},{"had_liked":false,"id":102536,"user_name":"Only now","can_delete":false,"product_type":"c1","uid":1038574,"ip_address":"","ucode":"C617473A03AE27","user_header":"https://static001.geekbang.org/account/avatar/00/0f/d8/ee/6e7c2264.jpg","comment_is_top":false,"comment_ctime":1560246639,"is_pvip":false,"replies":[{"id":"37020","content":"是的","user_name":"作者回复","user_name_real":"许式伟-七牛云(已满)","uid":"1228022","ctime":1560251368,"ip_address":"","comment_id":102536,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1560246639","product_id":100025201,"comment_content":"许老师, 我是不是可以简单认为, 实模式和保护模式的分界就是cpu是否使用自身页表去映射实际内存地址?","like_count":0,"discussions":[{"author":{"id":1228022,"avatar":"https://static001.geekbang.org/account/avatar/00/12/bc/f6/e61d4b8f.jpg","nickname":"许式伟-七牛云(已满)","note":"","ucode":"1A2F8AA6F6DB54","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":453466,"discussion_content":"是的","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1560251368,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":101323,"user_name":"vvgg","can_delete":false,"product_type":"c1","uid":1005781,"ip_address":"","ucode":"5A9B33AB42F471","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/DYAIOgq83eozWdoD8NqTEicC7dO4nt0XY42FVibDEXfHc3vUOBrtadkN8JovWjOlSXp9icKqeuJjzfLYFicDvJTzSw/132","comment_is_top":false,"comment_ctime":1559782138,"is_pvip":false,"replies":[{"id":"36543","content":"内存中","user_name":"作者回复","user_name_real":"许式伟-七牛云(已满)","uid":"1228022","ctime":1559795745,"ip_address":"","comment_id":101323,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1559782138","product_id":100025201,"comment_content":"地址映射表是存放在哪里的？","like_count":0,"discussions":[{"author":{"id":1228022,"avatar":"https://static001.geekbang.org/account/avatar/00/12/bc/f6/e61d4b8f.jpg","nickname":"许式伟-七牛云(已满)","note":"","ucode":"1A2F8AA6F6DB54","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":452911,"discussion_content":"内存中","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1559795745,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":101140,"user_name":"a(๑≖ิټ≖ิ)✌","can_delete":false,"product_type":"c1","uid":1392431,"ip_address":"","ucode":"AEF9B5CA1605DF","user_header":"https://static001.geekbang.org/account/avatar/00/15/3f/2f/8513c4d3.jpg","comment_is_top":false,"comment_ctime":1559726047,"is_pvip":false,"replies":[{"id":"36459","content":"👍","user_name":"作者回复","user_name_real":"许式伟-七牛云(已满)","uid":"1228022","ctime":1559738035,"ip_address":"","comment_id":101140,"utype":1}],"discussion_count":1,"race_medal":1,"score":"1559726047","product_id":100025201,"comment_content":"这几节课下来，感觉涉及到最核心的架构元素就是开闭原则","like_count":0,"discussions":[{"author":{"id":1228022,"avatar":"https://static001.geekbang.org/account/avatar/00/12/bc/f6/e61d4b8f.jpg","nickname":"许式伟-七牛云(已满)","note":"","ucode":"1A2F8AA6F6DB54","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":452820,"discussion_content":"👍","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1559738035,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":100432,"user_name":"三件事","can_delete":false,"product_type":"c1","uid":1055819,"ip_address":"","ucode":"BCC867C8961A24","user_header":"https://static001.geekbang.org/account/avatar/00/10/1c/4b/2e5df06f.jpg","comment_is_top":false,"comment_ctime":1559555636,"is_pvip":false,"replies":[{"id":"36175","content":"这个比较简单，pageNum = addr &#47; pageSize 取整，pageSize 是固定值，比如 64K","user_name":"作者回复","user_name_real":"许式伟-七牛云(已满)","uid":"1228022","ctime":1559561537,"ip_address":"","comment_id":100432,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1559555636","product_id":100025201,"comment_content":"“每次 CPU 访问某个虚拟内存地址中的数据，它都会先计算出这是要访问哪个内存页”<br><br>老师这一步是怎么计算出要访问哪个内存页的？","like_count":0,"discussions":[{"author":{"id":1228022,"avatar":"https://static001.geekbang.org/account/avatar/00/12/bc/f6/e61d4b8f.jpg","nickname":"许式伟-七牛云(已满)","note":"","ucode":"1A2F8AA6F6DB54","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":452545,"discussion_content":"这个比较简单，pageNum = addr / pageSize 取整，pageSize 是固定值，比如 64K","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1559561537,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":100027,"user_name":"跑得快","can_delete":false,"product_type":"c1","uid":1022242,"ip_address":"","ucode":"ADCF52A2A765D5","user_header":"https://static001.geekbang.org/account/avatar/00/0f/99/22/d1bbd734.jpg","comment_is_top":false,"comment_ctime":1559396041,"is_pvip":true,"replies":[{"id":"35933","content":"范式 = 模式，编程范式就是某种编程方式的模板。","user_name":"作者回复","user_name_real":"许式伟-七牛云(已满)","uid":"1228022","ctime":1559432284,"ip_address":"","comment_id":100027,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1559396041","product_id":100025201,"comment_content":"大神，范式到底是个什么东西，怎么哪里都有它？详细讲讲呗","like_count":0,"discussions":[{"author":{"id":1228022,"avatar":"https://static001.geekbang.org/account/avatar/00/12/bc/f6/e61d4b8f.jpg","nickname":"许式伟-七牛云(已满)","note":"","ucode":"1A2F8AA6F6DB54","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":452377,"discussion_content":"范式 = 模式，编程范式就是某种编程方式的模板。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1559432284,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":99071,"user_name":"Dean","can_delete":false,"product_type":"c1","uid":1178744,"ip_address":"","ucode":"23B6BE5CAEE11C","user_header":"https://static001.geekbang.org/account/avatar/00/11/fc/78/ef1cb09c.jpg","comment_is_top":false,"comment_ctime":1559139310,"is_pvip":false,"replies":[{"id":"35588","content":"1、对的<br>2、这个问题没有了理解问题的意思","user_name":"作者回复","user_name_real":"许式伟-七牛云(已满)","uid":"1228022","ctime":1559141287,"ip_address":"","comment_id":99071,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1559139310","product_id":100025201,"comment_content":"请教老师，每个进程的地址映射表是不是也存储在内存中？当虚拟内存的某页被淘汰的时候再持久化到磁盘上？","like_count":0,"discussions":[{"author":{"id":1228022,"avatar":"https://static001.geekbang.org/account/avatar/00/12/bc/f6/e61d4b8f.jpg","nickname":"许式伟-七牛云(已满)","note":"","ucode":"1A2F8AA6F6DB54","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":451961,"discussion_content":"1、对的\n2、这个问题没有了理解问题的意思","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1559141287,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":98107,"user_name":"Robinson","can_delete":false,"product_type":"c1","uid":1071271,"ip_address":"","ucode":"F4B542D2EA0884","user_header":"https://static001.geekbang.org/account/avatar/00/10/58/a7/d4529804.jpg","comment_is_top":false,"comment_ctime":1558916877,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1558916877","product_id":100025201,"comment_content":"这篇文章太值了，把我以前一些半懂不懂的概念给串起来了，一下子豁然开朗。","like_count":0},{"had_liked":false,"id":98103,"user_name":"闫飞","can_delete":false,"product_type":"c1","uid":1013162,"ip_address":"","ucode":"30C782D30108D4","user_header":"https://static001.geekbang.org/account/avatar/00/0f/75/aa/21275b9d.jpg","comment_is_top":false,"comment_ctime":1558916165,"is_pvip":false,"replies":[{"id":"35150","content":"是的，这个细节可以有无数种可能，并不关键","user_name":"作者回复","user_name_real":"许式伟-七牛云(已满)","uid":"1228022","ctime":1558935933,"ip_address":"","comment_id":98103,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1558916165","product_id":100025201,"comment_content":"缺页管理算法应该不是只有LRU这一种吧，细节上来说内存管理还会有更精细的多级段页使管理方式。不过细节不需要特别深究，这些计算机软件工程思想一直在各个地方被发扬光大。","like_count":0,"discussions":[{"author":{"id":1228022,"avatar":"https://static001.geekbang.org/account/avatar/00/12/bc/f6/e61d4b8f.jpg","nickname":"许式伟-七牛云(已满)","note":"","ucode":"1A2F8AA6F6DB54","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":451557,"discussion_content":"是的，这个细节可以有无数种可能，并不关键","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1558935933,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":95833,"user_name":"Geek_49acda","can_delete":false,"product_type":"c1","uid":1509046,"ip_address":"","ucode":"116E5D3E64C7AB","user_header":"","comment_is_top":false,"comment_ctime":1558195202,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1558195202","product_id":100025201,"comment_content":"受教了，请收下我的膝盖","like_count":0},{"had_liked":false,"id":95637,"user_name":"杨凯宁","can_delete":false,"product_type":"c1","uid":1031418,"ip_address":"","ucode":"8D605929C664D0","user_header":"https://static001.geekbang.org/account/avatar/00/0f/bc/fa/1aa47708.jpg","comment_is_top":false,"comment_ctime":1558107842,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1558107842","product_id":100025201,"comment_content":"交叉编译技术证明技术具有叠加式进步的特点。","like_count":0},{"had_liked":false,"id":93828,"user_name":"wansho","can_delete":false,"product_type":"c1","uid":1501662,"ip_address":"","ucode":"8CEC9663FE1A7F","user_header":"https://static001.geekbang.org/account/avatar/00/16/e9/de/ae32f3e2.jpg","comment_is_top":false,"comment_ctime":1557631542,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1557631542","product_id":100025201,"comment_content":"目前看的前七讲，更多的是在讲计算机的基础知识，尤其是操作系统的知识。与高校授课不同的是，许老师总能根据自己的经验，给这些知识，以新的解释。","like_count":0},{"had_liked":false,"id":93280,"user_name":"Geek_88604f","can_delete":false,"product_type":"c1","uid":1501234,"ip_address":"","ucode":"33DD1318E53814","user_header":"","comment_is_top":false,"comment_ctime":1557449666,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1557449666","product_id":100025201,"comment_content":"类似于云计算中的虚拟化，增加了虚拟内存后使得cpu不用再观注程序的实际物理地址、空间大小，简化了cpu的实现。同时，通过虚拟内存增强了内存管理能力。","like_count":0},{"had_liked":false,"id":93237,"user_name":"明翼","can_delete":false,"product_type":"c1","uid":1068361,"ip_address":"","ucode":"E77F86BEB3D5C1","user_header":"https://static001.geekbang.org/account/avatar/00/10/4d/49/28e73b9c.jpg","comment_is_top":false,"comment_ctime":1557445530,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1557445530","product_id":100025201,"comment_content":"中断设计确实精妙，正如许大所说这块值得品位啊","like_count":0},{"had_liked":false,"id":92929,"user_name":"CoderLim","can_delete":false,"product_type":"c1","uid":1029523,"ip_address":"","ucode":"4A856891BE98E5","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTKY0ibA4DWA9Bf6MuicKhyEt0yDXvAzG21xnOUHNLDwuic2icxpesyeXc1AMboeZEW97e8SuZdzIBefqA/132","comment_is_top":false,"comment_ctime":1557365241,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1557365241","product_id":100025201,"comment_content":"没有什么问题是不能通过引入一层解决的，如果有，那就引入两层。虚拟内存代理层，有两个功能：内存管理和内存安全","like_count":0},{"had_liked":false,"id":92871,"user_name":"Leon📷","can_delete":false,"product_type":"c1","uid":1219496,"ip_address":"","ucode":"B9BBD1EFAAE5A2","user_header":"https://static001.geekbang.org/account/avatar/00/12/9b/a8/6a391c66.jpg","comment_is_top":false,"comment_ctime":1557359350,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1557359350","product_id":100025201,"comment_content":"虚拟内存地址和真实地址的映射也让我联想到了lvs的vip 和real ipad ，从抽象角度看，一个大型互联网系统也可以看成操作系统，这种映射关系就是操作系统的软件治理对应到大型分布式系统的服务治理","like_count":0},{"had_liked":false,"id":92787,"user_name":"陈浩佳","can_delete":false,"product_type":"c1","uid":1505469,"ip_address":"","ucode":"D0D5BA752C00B1","user_header":"https://static001.geekbang.org/account/avatar/00/16/f8/bd/16545faf.jpg","comment_is_top":false,"comment_ctime":1557325566,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1557325566","product_id":100025201,"comment_content":"感觉像这种单片机上跑的实时操作系统就类似于实模式","like_count":0},{"had_liked":false,"id":92445,"user_name":"芬达哥","can_delete":false,"product_type":"c1","uid":1259382,"ip_address":"","ucode":"63BA7DA7DA29CD","user_header":"https://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTLVJnl7nwO0rK9K95YYapFyib7wFfRBXHLMQ61YZGXVhljlQrlhweTwkghAsLibDS5XLibWgWwClI5GA/132","comment_is_top":false,"comment_ctime":1557275860,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1557275860","product_id":100025201,"comment_content":"不管是BIOS还是虚拟内存本质上都是抽象，然后隔离变化部分，计算机操作系统，包括计算机硬件组成这些，都是经典的面向对象的架构设计思维","like_count":0},{"had_liked":false,"id":92439,"user_name":"傲娇的小宝","can_delete":false,"product_type":"c1","uid":1493922,"ip_address":"","ucode":"C079B19BCC1B7C","user_header":"https://static001.geekbang.org/account/avatar/00/16/cb/a2/5e7c557e.jpg","comment_is_top":false,"comment_ctime":1557274778,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1557274778","product_id":100025201,"comment_content":"想到以前看了一点浅显的汇编，说到操作系统是被保护的，汇编指令无法做一些类似破坏操作系统的指令，现在想想，是否就是因为这个原因呢。","like_count":0},{"had_liked":false,"id":92298,"user_name":"糊李糊涂","can_delete":false,"product_type":"c1","uid":1197625,"ip_address":"","ucode":"E0F6064CBA32B1","user_header":"https://static001.geekbang.org/account/avatar/00/12/46/39/e545c885.jpg","comment_is_top":false,"comment_ctime":1557224985,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1557224985","product_id":100025201,"comment_content":"听懂了！","like_count":0},{"had_liked":false,"id":92187,"user_name":"Taurus","can_delete":false,"product_type":"c1","uid":1520486,"ip_address":"","ucode":"BBE312838B71AE","user_header":"https://static001.geekbang.org/account/avatar/00/17/33/66/36d92e60.jpg","comment_is_top":false,"comment_ctime":1557197832,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1557197832","product_id":100025201,"comment_content":"讲得真好，很期待许老师的书。","like_count":0},{"had_liked":false,"id":92167,"user_name":"Y","can_delete":false,"product_type":"c1","uid":1216783,"ip_address":"","ucode":"D824304AB65AF9","user_header":"https://static001.geekbang.org/account/avatar/00/12/91/0f/f10408d9.jpg","comment_is_top":false,"comment_ctime":1557194124,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1557194124","product_id":100025201,"comment_content":"我终于明白为什么以前总有人骂我这样写对内存不好，这样很容易内存泄露，这样很占内存。。。。。。。。。。。原来内存很重要","like_count":0},{"had_liked":false,"id":92158,"user_name":"杨家荣","can_delete":false,"product_type":"c1","uid":1259241,"ip_address":"","ucode":"3DA65396C7F002","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/g1icQRbcv1QvJ5U8Cqk0ZqMH5PcMTXcZ8TpS5utE4SUzHcnJA3FYGelHykpzTfDh55ehE8JO9Zg9VGSJW7Wxibxw/132","comment_is_top":false,"comment_ctime":1557193370,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1557193370","product_id":100025201,"comment_content":"一招，击碎了我练了十年外功","like_count":0},{"had_liked":false,"id":92120,"user_name":"枫林火山","can_delete":false,"product_type":"c1","uid":1199855,"ip_address":"","ucode":"66099C9D1AD36C","user_header":"https://static001.geekbang.org/account/avatar/00/12/4e/ef/2ad3effd.jpg","comment_is_top":false,"comment_ctime":1557190566,"is_pvip":true,"discussion_count":0,"race_medal":0,"score":"1557190566","product_id":100025201,"comment_content":"十分受益，尤其对于非计算机系的👍🏻👍🏻👍🏻","like_count":0},{"had_liked":false,"id":92109,"user_name":"Linuxer","can_delete":false,"product_type":"c1","uid":1153978,"ip_address":"","ucode":"272D9D8089C3D6","user_header":"https://static001.geekbang.org/account/avatar/00/11/9b/ba/333b59e5.jpg","comment_is_top":false,"comment_ctime":1557189407,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1557189407","product_id":100025201,"comment_content":"中断是CPU异步响应硬件事件的机制吧? 保护模式下内存管理为什么会想到也采用中端这种机制呢？因为MMU是软硬件结合的结果吗?","like_count":0}]}