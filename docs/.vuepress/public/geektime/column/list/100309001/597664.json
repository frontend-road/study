{"id":597664,"title":"03｜Token：如何降低用户身份鉴权的流量压力？","content":"<p>你好，我是徐长龙，这节课我们来看看如何用token算法降低用户中心的身份鉴权流量压力。</p><p>很多网站初期通常会用Session方式实现登录用户的用户鉴权，也就是在用户登录成功后，将这个用户的具体信息写在服务端的Session缓存中，并分配一个session_id保存在用户的Cookie中。该用户的每次请求时候都会带上这个ID，通过ID可以获取到登录时写入服务端Session缓存中的记录。</p><p>流程图如下所示：</p><p><img src=\"https://static001.geekbang.org/resource/image/58/72/589d13f1d758a44a1af37efaf9dbdc72.jpg?wh=3330x2141\" alt=\"\" title=\"Session Cache实现的用户鉴权\"></p><p>这种方式的好处在于信息都在服务端储存，对客户端不暴露任何用户敏感的数据信息，并且每个登录用户都有共享的缓存空间（Session Cache）。</p><p>但是随着流量的增长，这个设计也暴露出很大的问题——用户中心的身份鉴权在大流量下很不稳定。因为用户中心需要维护的Session Cache空间很大，并且被各个业务频繁访问，那么缓存一旦出现故障，就会导致所有的子系统无法确认用户身份，进而无法正常对外服务。</p><p>这主要是由于Session Cache和各个子系统的耦合极高，<strong>全站的请求都会对这个缓存至少访问一次</strong>，这就导致缓存的内容长度和响应速度，直接决定了全站的QPS上限，让整个系统的隔离性很差，各子系统间极易相互影响。</p><p>那么，如何降低用户中心与各个子系统间的耦合度，提高系统的性能呢？我们一起来看看。</p><!-- [[[read_end]]] --><h2>JWT登陆和token校验</h2><p>常见方式是采用签名加密的token，这是登录的一个行业标准，即JWT（JSON Web Token）：<img src=\"https://static001.geekbang.org/resource/image/02/bf/02f2f3aff0f5db68ef952065da2721bf.jpg?wh=3330x2141\" alt=\"\" title=\"token流程\"></p><p>上图就是JWT的登陆流程，用户登录后会将用户信息放到一个加密签名的token中，每次请求都把这个串放到header或cookie内带到服务端，服务端直接将这个token解开即可直接获取到用户的信息，无需和用户中心做任何交互请求。</p><p>token生成代码如下：</p><pre><code class=\"language-go\">import \"github.com/dgrijalva/jwt-go\"\n\n//签名所需混淆密钥 不要太简单 容易被破解\n//也可以使用非对称加密，这样可以在客户端用公钥验签\nvar secretString = []byte(\"jwt secret string 137 rick\") \n\ntype TokenPayLoad struct {\n    UserId   uint64 `json:\"userId\"` //用户id\n    NickName string `json:\"nickname\"` //昵称\n    jwt.StandardClaims //私有部分\n}\n\n// 生成JWT token\nfunc GenToken(userId uint64, nickname string) (string, error) {\n    c := TokenPayLoad{\n        UserId: userId, //uid\n        NickName: nickname, //昵称\n        //这里可以追加一些其他加密的数据进来\n        //不要明文放敏感信息，如果需要放，必须再加密\n        \n        //私有部分\n        StandardClaims: jwt.StandardClaims{\n            //两小时后失效\n            ExpiresAt: time.Now().Add(2 * time.Hour).Unix(),\n            //颁发者\n            Issuer:    \"geekbang\",\n        },\n    }\n    //创建签名 使用hs256\n    token := jwt.NewWithClaims(jwt.SigningMethodHS256, c)\n    // 签名，获取token结果\n    return token.SignedString(secretString)\n}\n</code></pre><p>可以看到，这个token内部包含过期时间，快过期的token会在客户端自动和服务端通讯更换，这种方式可以大幅提高截取客户端token并伪造用户身份的难度。</p><p>同时，服务端也可以和用户中心解耦，业务服务端直接解析请求带来的token即可获取用户信息，无需每次请求都去用户中心获取。而token的刷新可以完全由App客户端主动请求用户中心来完成，而不再需要业务服务端业务请求用户中心去更换。</p><p>JWT是如何保证数据不会被篡改，并且保证数据的完整性呢，我们先看看它的组成。</p><p><img src=\"https://static001.geekbang.org/resource/image/24/f6/240a6a36f0fbcd177e990411abbb8df6.jpg?wh=1920x501\" alt=\"图片\"></p><p>如上图所示，加密签名的token分为三个部分，彼此之间用点来分割，其中，Header用来保存加密算法类型；PayLoad是我们自定义的内容；Signature是防篡改签名。</p><p>JWT token解密后的数据结构如下图所示：</p><pre><code class=\"language-json\">//header\n//加密头\n{\n&nbsp; \"alg\": \"HS256\", // 加密算法，注意检测个别攻击会在这里设置为none绕过签名\n&nbsp; \"typ\": \"JWT\" //协议类型\n}\n\n//PAYLOAD\n//负载部分，存在JWT标准字段及我们自定义的数据字段\n{\n&nbsp; \"userid\": \"9527\", //我们放的一些明文信息，如果涉及敏感信息，建议再次加密\n&nbsp; \"nickname\": \"Rick.Xu\", // 我们放的一些明文信息，如果涉及隐私，建议再次加密\n  \"iss\": \"geekbang\",\n&nbsp; \"iat\": 1516239022, //token发放时间\n  \"exp\": 1516246222, //token过期时间\n}\n\n//签名\n//签名用于鉴定上两段内容是否被篡改，如果篡改那么签名会发生变化\n//校验时会对不上\n</code></pre><p>JWT如何验证token是否有效，还有token是否过期、是否合法，具体方法如下：</p><pre><code class=\"language-go\">func DecodeToken(token string) (*TokenPayLoad, error) {\n    token, err := jwt.ParseWithClaims(token, &amp;TokenPayLoad{}, func(tk *jwt.Token) (interface{}, error) {\n        return secret, nil\n    })\n    if err != nil {\n        return nil, err\n    }\n    if decodeToken, ok := token.Claims.(*TokenPayLoad); ok &amp;&amp; token.Valid {\n        return decodeToken, nil\n    }\n    return nil, errors.New(\"token wrong\")\n}\n</code></pre><p>JWT的token解密很简单，第一段和第二段都是通过base64编码的。直接解开这两段数据就可以拿到payload中所有的数据，其中包括用户昵称、uid、用户权限和token过期时间。要验证token是否过期，只需将其中的过期时间和本地时间对比一下，就能确认当前token是不是有效。</p><p>而验证token是否合法则是通过签名验证完成的，任何信息修改都会无法通过签名验证。要是通过了签名验证，就表明token没有被篡改过，是一个合法的token，可以直接使用。</p><p>这个过程如下图所示：<br>\n<img src=\"https://static001.geekbang.org/resource/image/19/8a/19b6179e1ff8ef5a13f0cbf4527ce88a.jpg?wh=3330x2141\" alt=\"\"></p><p>我们可以看到，通过token方式，用户中心压力最大的接口可以下线了，每个业务的服务端只要解开token验证其合法性，就可以拿到用户信息。不过这种方式也有缺点，就是用户如果被拉黑，客户端最快也要在token过期后才能退出登陆，这让我们的管理存在一定的延迟。</p><p>如果我们希望对用户进行实时管理，可以把新生成的token在服务端暂存一份，每次用户请求就和缓存中的token对比一下，但这样很影响性能，极少数公司会这么做。同时，为了提高JWT系统的安全性，token一般会设置较短的过期时间，通常是十五分钟左右，过期后客户端会自动更换token。</p><h2>token的更换和离线</h2><p>那么如何对JWT的token进行更换和离线验签呢？</p><p>具体的服务端换签很简单，只要客户端检测到当前的token快过期了，就主动请求用户中心更换token接口，重新生成一个离当前还有十五分钟超时的token。</p><p>但是期间如果超过十五分钟还没换到，就会导致客户端登录失败。为了减少这类问题，同时保证客户端长时间离线仍能正常工作，行业内普遍使用双token方式，具体你可以看看后面的流程图：</p><p><img src=\"https://static001.geekbang.org/resource/image/de/7c/de29bd40ac360cb06ca6d3e75ac87a7c.jpg?wh=3330x2141\" alt=\"\"></p><p>可以看到，这个方案里有两种token：<strong>一种是refresh_token，用于更换access_token，有效期是30天；另一种是access_token，用于保存当前用户信息和权限信息，每隔15分钟更换一次</strong>。如果请求用户中心失败，并且App处于离线状态，只要检测到本地refresh_token没有过期，系统仍可以继续工作，直到refresh_token过期为止，然后提示用户重新登陆。这样即使用户中心坏掉了，业务也能正常运转一段时间。</p><p>用户中心检测更换token的实现如下：</p><pre><code class=\"language-go\">//如果还有五分钟token要过期，那么换token\nif decodeToken.StandardClaims.ExpiresAt &lt; TimestampNow() - 300 {\n  //请求下用户中心，问问这个人禁登陆没\n  //....略具体\n  \n  //重新发放token\n  token, err := GenToken(.....)\n  if err != nil {\n        return nil, err\n  }\n  //更新返回cookie中token\n  resp.setCookie(\"xxxx\", token)\n}\n</code></pre><p>这段代码只是对当前的token做了超时更换。JWT对离线App端十分友好，因为App可以将它保存在本地，在使用用户信息时直接从本地解析出来即可。</p><h2>安全建议</h2><p>最后我再啰嗦几句，除了上述代码中的注释外，在使用JWT方案的时候还有一些关键的注意事项，这里分享给你。</p><p>第一，通讯过程必须使用HTTPS协议，这样才可以降低被拦截的可能。</p><p>第二，要注意限制token的更换次数，并定期刷新token，比如用户的access_token每天只能更换50次，超过了就要求用户重新登陆，同时token每隔15分钟更换一次。这样可以降低token被盗取后给用户带来的影响。</p><p>第三，Web用户的token保存在cookie中时，建议加上httponly、SameSite=Strict限制，以防止cookie被一些特殊脚本偷走。</p><h2>总结</h2><p>传统的Session方式是把用户的登录信息通过SessionID统一缓存到服务端中，客户端和子系统每次请求都需要到用户中心去“提取”，这就会导致用户中心的流量很大，所有业务都很依赖用户中心。</p><p>为了降低用户中心的流量压力，同时让各个子系统与用户中心脱耦，我们采用信任“签名”的token，把用户信息加密发放到客户端，让客户端本地拥有这些信息。而子系统只需通过签名算法对token进行验证，就能获取到用户信息。</p><p>这种方式的核心是<strong>把用户信息放在服务端外做传递和维护，以此解决用户中心的流量性能瓶颈</strong>。此外，通过定期更换token，用户中心还拥有一定的用户控制能力，也加大了破解难度，可谓一举多得。</p><p>其实，还有很多类似的设计简化系统压力，比如文件crc32校验签名可以帮我们确认文件在传输过程中是否损坏；通过Bloom Filter可以确认某个key是否存在于某个数据集合文件中等等，这些都可以大大提高系统的工作效率，减少系统的交互压力。这些技巧在硬件能力腾飞的阶段，仍旧适用。</p><h2>思考题</h2><p>用户如果更换了昵称，如何快速更换token中保存的用户昵称呢？</p><p>欢迎你在留言区与我交流讨论，我们下节课见！</p>","comments":[{"had_liked":false,"id":360874,"user_name":"徐石头","can_delete":false,"product_type":"c1","uid":1035885,"ip_address":"北京","ucode":"D8FA8A64FB7E33","user_header":"https://static001.geekbang.org/account/avatar/00/0f/ce/6d/530df0dd.jpg","comment_is_top":true,"comment_ctime":1666929490,"is_pvip":true,"replies":[{"id":131282,"content":"你好，徐曙辉，很高兴收到你的再次留言\n对于session 方式来说，由于用户每次请求都会读取session cache，客户端本地是不会保存token，所以不存在token内用户头像更新不及时问题。可以说后台系统用session管理用户很方便，因为这个可以做到用户实时管理，当我们禁用用户的时候把session的缓存登陆标志删掉即可。不过这个方式适合少量用户，对于QPS超过10w QPS请求的API则不太适合。\n\n所以使用token方式来签名发给客户端，客户端请求其他子系统的时候，会带上它，子系统只要验证这个token的签名就不需要再去用户中心问一句。所以token使用后，用户中心不会被其他子系统频繁请求，但是也导致token发出去没法再次更改，即使我们用户中心给他拉黑了，其他子系统只认印章，不会过来问问。\n\n同时为了方便token内会保存当前用户一些基础信息，减少其他系统过来询问的次数，这导致，用户更新头像，token没更换，是不会同步更新的\n第一个很暴力，但是很有趣～\n第二个方式也很有趣，同时补一个技巧我们可以通过 设定 固定网址 user&#47;用户uid&#47;heaer.jpg方式直接获取用户头像，这样也不用考虑更新问题了\n\n","user_name":"作者回复","user_name_real":"作者","uid":1004527,"ctime":1666940850,"ip_address":"北京","comment_id":360874,"utype":1}],"discussion_count":11,"race_medal":0,"score":2,"product_id":100309001,"comment_content":"Q1：在token过期很短的时候，通过refresh_token频繁更新token，怎么实现对用户实时管理？是不是还是跟用户人数相关，一般这种场景是后台系统，删除一个用户后该用户账号立刻不能登录，后台人数比C端人数少很多，所以管理起来代价比较小，更看重权限安全，放在缓存中进行管理。\nA: 如果我来做快速更换昵称的功能，两种方式，\na.在用户修改昵称后，内存中加入个用户标识，解析token后读取该标识，有则返回特定code，让客户端重新拿token。甚至可以不用客户端参与，返回301重定向到获取新token的路由。\nb. token里面不存用户信息，只存用户ID，需要用户信息的时候从缓存读。\n","like_count":4,"discussions":[{"author":{"id":1004527,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/53/ef/5cdaa18b.jpg","nickname":"thinkpc","note":"","ucode":"0EBF75B8707584","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":591932,"discussion_content":"你好，徐曙辉，很高兴收到你的再次留言\n对于session 方式来说，由于用户每次请求都会读取session cache，客户端本地是不会保存token，所以不存在token内用户头像更新不及时问题。可以说后台系统用session管理用户很方便，因为这个可以做到用户实时管理，当我们禁用用户的时候把session的缓存登陆标志删掉即可。不过这个方式适合少量用户，对于QPS超过10w QPS请求的API则不太适合。\n\n所以使用token方式来签名发给客户端，客户端请求其他子系统的时候，会带上它，子系统只要验证这个token的签名就不需要再去用户中心问一句。所以token使用后，用户中心不会被其他子系统频繁请求，但是也导致token发出去没法再次更改，即使我们用户中心给他拉黑了，其他子系统只认印章，不会过来问问。\n\n同时为了方便token内会保存当前用户一些基础信息，减少其他系统过来询问的次数，这导致，用户更新头像，token没更换，是不会同步更新的\n第一个很暴力，但是很有趣～\n第二个方式也很有趣，同时补一个技巧我们可以通过 设定 固定网址 user/用户uid/heaer.jpg方式直接获取用户头像，这样也不用考虑更新问题了\n\n","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1666940850,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"北京","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":6,"child_discussions":[{"author":{"id":2269341,"avatar":"","nickname":"不吃包子","note":"","ucode":"5E0661EC355ED9","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1004527,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/53/ef/5cdaa18b.jpg","nickname":"thinkpc","note":"","ucode":"0EBF75B8707584","race_medal":0,"user_type":2,"is_pvip":false},"discussion":{"id":591949,"discussion_content":"你的意思是,针对你的提问,JWT不保存用户信息,只保存用户ID,用户信息存储是到缓存中,单独读取的?","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1666951037,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":591932,"ip_address":"广东","group_id":0},"score":591949,"extra":""},{"author":{"id":1004527,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/53/ef/5cdaa18b.jpg","nickname":"thinkpc","note":"","ucode":"0EBF75B8707584","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":2269341,"avatar":"","nickname":"不吃包子","note":"","ucode":"5E0661EC355ED9","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":591953,"discussion_content":"第二种是指，将容易改变的内容，通过其他方式获取，比如用户头像，用固定网址来获取，即使改了网址不会变，只是改变了网址里面的内容","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1666953490,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":591949,"ip_address":"北京","group_id":0},"score":591953,"extra":""},{"author":{"id":1035885,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/ce/6d/530df0dd.jpg","nickname":"徐石头","note":"","ucode":"D8FA8A64FB7E33","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":1004527,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/53/ef/5cdaa18b.jpg","nickname":"thinkpc","note":"","ucode":"0EBF75B8707584","race_medal":0,"user_type":2,"is_pvip":false},"discussion":{"id":591972,"discussion_content":"学到了，之前没往这方面想过，按这样做，头像可以http://xx.com/user/用户ID/header.jpg，静态文件可以，因为反正都是远程http渲染，但是昵称和其他信息都这样处理，每一项都放到远程地址性能不是很好，是不是可以http://xxx.com/user/用户ID/info.json，再反序列化，这样确定是占了额外的存储空间，优点是不用查DB和缓存，减少她们的压力，在web应用中，用户信息读取挺频繁","likes_number":2,"is_delete":false,"is_hidden":false,"ctime":1666968192,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":591953,"ip_address":"湖南","group_id":0},"score":591972,"extra":""}]},{"author":{"id":1392585,"avatar":"https://static001.geekbang.org/account/avatar/00/15/3f/c9/1ccefb9a.jpg","nickname":"Sky","note":"","ucode":"4C5A5AB73E8B90","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":591999,"discussion_content":"同时补一个技巧我们可以通过 设定 固定网址 user/用户uid/heaer.jpg方式直接获取用户头像，这样也不用考虑更新问题了","likes_number":2,"is_delete":false,"is_hidden":false,"ctime":1667023590,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":"上海","group_id":0},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":3183263,"avatar":"https://static001.geekbang.org/account/avatar/00/30/92/9f/d5255fe8.jpg","nickname":"snake","note":"","ucode":"0C7398D3A68119","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":592216,"discussion_content":"没想到还有这样的方式，学到了","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1667209809,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":"重庆","group_id":0},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1392585,"avatar":"https://static001.geekbang.org/account/avatar/00/15/3f/c9/1ccefb9a.jpg","nickname":"Sky","note":"","ucode":"4C5A5AB73E8B90","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":592000,"discussion_content":"这个技巧学到了","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1667023600,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":"上海","group_id":0},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":3623004,"avatar":"https://thirdwx.qlogo.cn/mmopen/vi_32/roLL1sicC3Lwk4wK0FSQicZLfOeDTzVAgaFrgNpruOMBMUHYgnJBA86uvYEjBeg92BZXmiaxl4caxBRTzs3ZibcKsQ/132","nickname":"陈子文","note":"","ucode":"5899A1E8AB9444","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":628997,"discussion_content":"很多时候，为了减少网络流量，对于静态图片会加上expire header 让浏览器在本地缓存图片，这种情况就不适用了吧","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1696506839,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":"天津","group_id":0},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":360895,"user_name":"极客","can_delete":false,"product_type":"c1","uid":1114999,"ip_address":"北京","ucode":"A4AAA6B4F40E66","user_header":"https://static001.geekbang.org/account/avatar/00/11/03/77/3f6a76a9.jpg","comment_is_top":false,"comment_ctime":1666948549,"is_pvip":false,"replies":[{"id":131287,"content":"你好，极客，感谢你的留言，这个思路很有意思，是个方法，印象里这个技巧对于读多写多的服务的客户端也会做类似的事情","user_name":"作者回复","user_name_real":"编辑","uid":1004527,"ctime":1666954168,"ip_address":"北京","comment_id":360895,"utype":1}],"discussion_count":1,"race_medal":0,"score":2,"product_id":100309001,"comment_content":"客户端可以缓存修改后的昵称，直到更换了access token再清除缓存，类似弹幕本地先发送让用户自己认为发送成功了","like_count":10,"discussions":[{"author":{"id":1004527,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/53/ef/5cdaa18b.jpg","nickname":"thinkpc","note":"","ucode":"0EBF75B8707584","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":591957,"discussion_content":"你好，极客，感谢你的留言，这个思路很有意思，是个方法，印象里这个技巧对于读多写多的服务的客户端也会做类似的事情","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1666954168,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"北京","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":360866,"user_name":"7S","can_delete":false,"product_type":"c1","uid":1199397,"ip_address":"北京","ucode":"A08EEF49BFB076","user_header":"https://static001.geekbang.org/account/avatar/00/12/4d/25/0920057c.jpg","comment_is_top":false,"comment_ctime":1666925335,"is_pvip":false,"replies":[{"id":131273,"content":"你好，7S，很高兴收到你的思考，关于这里有一些特殊的小技巧，如请求时带上一些客户端特征，如：请求更换access_token时，带上的refresh_token的请求 同时 需要特殊的签名，存储在本地的token不用明文保存，与服务端通讯时用特殊协议加密等～","user_name":"作者回复","user_name_real":"编辑","uid":1004527,"ctime":1666927494,"ip_address":"北京","comment_id":360866,"utype":1}],"discussion_count":3,"race_medal":0,"score":2,"product_id":100309001,"comment_content":"access_token由于安全问题设置过期的时间非常短，但是refresh_token有效时间非常长，如果refresh_token被泄漏掉，是不是能一直刷新access_token呢。。","like_count":5,"discussions":[{"author":{"id":1004527,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/53/ef/5cdaa18b.jpg","nickname":"thinkpc","note":"","ucode":"0EBF75B8707584","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":591908,"discussion_content":"你好，7S，很高兴收到你的思考，关于这里有一些特殊的小技巧，如请求时带上一些客户端特征，如：请求更换access_token时，带上的refresh_token的请求 同时 需要特殊的签名，存储在本地的token不用明文保存，与服务端通讯时用特殊协议加密等～","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1666927494,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"北京","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1461984,"avatar":"","nickname":"Geek_96685a","note":"","ucode":"8480A5D41C6C2B","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":592888,"discussion_content":"您好，作者这里刷新access token带上特殊的签名怎么理解呀？","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1667800195,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":"北京","group_id":0},"score":2,"extra":"","child_discussion_number":1,"child_discussions":[{"author":{"id":1004527,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/53/ef/5cdaa18b.jpg","nickname":"thinkpc","note":"","ucode":"0EBF75B8707584","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":1461984,"avatar":"","nickname":"Geek_96685a","note":"","ucode":"8480A5D41C6C2B","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":593500,"discussion_content":"有秘钥的签名请求可以加强安全性，非我们服务发起的会被拒绝，加大被其他程序模拟难度","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1668278981,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":592888,"ip_address":"北京","group_id":0},"score":593500,"extra":""}]}]},{"had_liked":false,"id":362449,"user_name":"小林coding","can_delete":false,"product_type":"c1","uid":1303210,"ip_address":"北京","ucode":"D57D7DBF260216","user_header":"https://static001.geekbang.org/account/avatar/00/13/e2/aa/9ddc6469.jpg","comment_is_top":false,"comment_ctime":1668525606,"is_pvip":false,"replies":[{"id":131825,"content":"你好，小林，经常看你的公众号，这里建议如果只是一两秒建议忽略，原因在于，我们的服务器时间都是有误差的即使使用ntp定期同步也是存在误差，有时相差一两秒是很常见的，并且https也是基础时间做的加密，如果时间误差太大是无法通讯的。","user_name":"作者回复","user_name_real":"编辑","uid":1004527,"ctime":1668557527,"ip_address":"北京","comment_id":362449,"utype":1}],"discussion_count":1,"race_medal":0,"score":2,"product_id":100309001,"comment_content":"PAYLOAD 中定义的 token 发放时间 iat 字段的值是绝对时间戳，如果服务端的系统时间被往前修改了，这时在校验token是否过期的时候，是不是还需要增加一个处理：如果「当前时间戳 &lt; token 发放时间戳 」，就认为 token 过期了。","like_count":4,"discussions":[{"author":{"id":1004527,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/53/ef/5cdaa18b.jpg","nickname":"thinkpc","note":"","ucode":"0EBF75B8707584","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":593804,"discussion_content":"你好，小林，经常看你的公众号，这里建议如果只是一两秒建议忽略，原因在于，我们的服务器时间都是有误差的即使使用ntp定期同步也是存在误差，有时相差一两秒是很常见的，并且https也是基础时间做的加密，如果时间误差太大是无法通讯的。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1668557527,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"北京","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":361727,"user_name":"林晓威","can_delete":false,"product_type":"c1","uid":1972511,"ip_address":"北京","ucode":"1CD7376C5A7F23","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/uoPcB6q9VZmyV1IYrnBiaYneyrTeibjSbo981QYQK7O968w1ticehtGmNJ8Kx9EdKFwoiczuUT3blkNn1EBO3PXWgA/132","comment_is_top":false,"comment_ctime":1667808466,"is_pvip":false,"replies":[{"id":131594,"content":"你好，林晓威，很高兴收到你的提问，这个算法重点并不是这个payload区，payload这里只是附带的数据，只是为了方便业务使用，事实上这个核心在于签名和过期时间，由于密钥是只有服务端有，所以签名是不能伪造的，如果到子业务这里验证签名是正确的密钥加密的，那么代表token的payload的内容肯定是服务器发放的，传输的用户无法更改，如果更改了就会和签名核对不上，通过这个方式就已经能够保证数据的安全了。至于base64内放的数据普遍是可以公开的信息，如果有不能公开的信息可以再做一层加密后再放入payload","user_name":"作者回复","user_name_real":"编辑","uid":1004527,"ctime":1667817567,"ip_address":"北京","comment_id":361727,"utype":1}],"discussion_count":1,"race_medal":0,"score":2,"product_id":100309001,"comment_content":"老师好，请问光使用base64加密是不是不太安全？这样别人不是很容易知道你用什么加密算法了","like_count":3,"discussions":[{"author":{"id":1004527,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/53/ef/5cdaa18b.jpg","nickname":"thinkpc","note":"","ucode":"0EBF75B8707584","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":592946,"discussion_content":"你好，林晓威，很高兴收到你的提问，这个算法重点并不是这个payload区，payload这里只是附带的数据，只是为了方便业务使用，事实上这个核心在于签名和过期时间，由于密钥是只有服务端有，所以签名是不能伪造的，如果到子业务这里验证签名是正确的密钥加密的，那么代表token的payload的内容肯定是服务器发放的，传输的用户无法更改，如果更改了就会和签名核对不上，通过这个方式就已经能够保证数据的安全了。至于base64内放的数据普遍是可以公开的信息，如果有不能公开的信息可以再做一层加密后再放入payload","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1667817567,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"北京","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":361082,"user_name":"吴晨辉","can_delete":false,"product_type":"c1","uid":2312639,"ip_address":"北京","ucode":"757E98E93AF6A3","user_header":"https://static001.geekbang.org/account/avatar/00/23/49/bf/4936c58b.jpg","comment_is_top":false,"comment_ctime":1667193240,"is_pvip":false,"replies":[{"id":131352,"content":"最后一句很棒，支持，笑","user_name":"作者回复","user_name_real":"编辑","uid":1004527,"ctime":1667266703,"ip_address":"北京","comment_id":361082,"utype":1}],"discussion_count":2,"race_medal":0,"score":2,"product_id":100309001,"comment_content":"很高兴第二次回答问题\n传统sessoion会导致用户中心缓存大，耦合度高，但实时性强\njwt加密策略耦合度低，但是实时性不高\n那么可以结合两个方式，优先读取token 加密字段，然后利用用户id关联session cache覆盖\n考虑到session缓存成本，可以只缓存实时性强的字段，或者用vip制度，用户充钱越多，缓存的东西越多\n核心思想就是成本增效","like_count":3,"discussions":[{"author":{"id":1004527,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/53/ef/5cdaa18b.jpg","nickname":"thinkpc","note":"","ucode":"0EBF75B8707584","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":592261,"discussion_content":"最后一句很棒，支持，笑","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1667266703,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"北京","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":2420794,"avatar":"https://static001.geekbang.org/account/avatar/00/24/f0/3a/d76cebce.jpg","nickname":"包子","note":"","ucode":"542728B3220FBC","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":605629,"discussion_content":"最后一句是微博的精髓","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1676803720,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":"广东","group_id":0},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":365090,"user_name":"👽","can_delete":false,"product_type":"c1","uid":1274117,"ip_address":"北京","ucode":"D313AF941B412D","user_header":"https://static001.geekbang.org/account/avatar/00/13/71/05/db554eba.jpg","comment_is_top":false,"comment_ctime":1672083473,"is_pvip":false,"replies":[{"id":132929,"content":"你好，alien，确实如此，而很多业务为了方便，token有额外一段在结尾放附加消息","user_name":"作者回复","user_name_real":"编辑","uid":1004527,"ctime":1672105853,"ip_address":"北京","comment_id":365090,"utype":1}],"discussion_count":1,"race_medal":0,"score":2,"product_id":100309001,"comment_content":"我的理解是，token中应该只存放和session生命周期同步的操作。比如：用户Id和权限。这两个东西，在用户session的生命周期内一般来说是不会变的。翻译一下，token代表着：你是谁，你能做什么。能做到这两个事情就够了。而不应该去单独关注用户的扩展信息。\n\n至于昵称，我觉得应该单独放缓存中。通过用户ID获取。因为昵称当前token下修改还好说，如果跨token呢？比如web端修改了昵称web端端token可以立马换一个新的，移动端怎么办呢？所以我认为，昵称，头像，这种会修改的信息不应该放到token体里。","like_count":2,"discussions":[{"author":{"id":1004527,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/53/ef/5cdaa18b.jpg","nickname":"thinkpc","note":"","ucode":"0EBF75B8707584","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":597621,"discussion_content":"你好，alien，确实如此，而很多业务为了方便，token有额外一段在结尾放附加消息","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1672105854,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"北京","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":387336,"user_name":"xin","can_delete":false,"product_type":"c1","uid":1609258,"ip_address":"四川","ucode":"B311A30BFE66E0","user_header":"https://static001.geekbang.org/account/avatar/00/18/8e/2a/448b2177.jpg","comment_is_top":false,"comment_ctime":1707013861,"is_pvip":true,"replies":[{"id":141155,"content":"你好，可以在用户中心发个广播，让各个子系统订阅，子系统解开时对比下内部写的版本号","user_name":"作者回复","user_name_real":"编辑","uid":1004527,"ctime":1707111421,"ip_address":"北京","comment_id":387336,"utype":1}],"discussion_count":1,"race_medal":0,"score":2,"product_id":100309001,"comment_content":"徐老师，请问如何实现登出的时候，让token失效呢","like_count":1,"discussions":[{"author":{"id":1004527,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/53/ef/5cdaa18b.jpg","nickname":"thinkpc","note":"","ucode":"0EBF75B8707584","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":636845,"discussion_content":"你好，可以在用户中心发个广播，让各个子系统订阅，子系统解开时对比下内部写的版本号","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1707111421,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"北京","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2,\"source\":0}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":389417,"user_name":"Eason Lau","can_delete":false,"product_type":"c1","uid":1035123,"ip_address":"广东","ucode":"51C987C477F1F0","user_header":"https://static001.geekbang.org/account/avatar/00/0f/cb/73/9eb7c992.jpg","comment_is_top":false,"comment_ctime":1712483137,"is_pvip":false,"replies":[{"id":141666,"content":"你好，这个要看具体场景和目的，这个方式可以做到无状态服务，大量降低多个系统对主站公用的服务的流量冲击。秘钥没有想象中那么麻烦，实际用只是个配置把它写本地或者用证书管理存起来即可，并且这个验证可以放到网关去做，当然除了JWT类似脱耦合的解决方案还有很多，但是站内搞的太复杂也不太实用。同时，这里举JWT这个例子只是因为他很典型，很适合开拓系统拆分的思路","user_name":"作者回复","user_name_real":"作者","uid":1004527,"ctime":1712544345,"ip_address":"北京","comment_id":389417,"utype":1}],"discussion_count":1,"race_medal":0,"score":2,"product_id":100309001,"comment_content":"这个jwt token不鸡肋吗？ 别的系统严重token有效性的时候还得知道秘钥啊，这不解耦😄","like_count":0,"discussions":[{"author":{"id":1004527,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/53/ef/5cdaa18b.jpg","nickname":"thinkpc","note":"","ucode":"0EBF75B8707584","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":641352,"discussion_content":"你好，这个要看具体场景和目的，这个方式可以做到无状态服务，大量降低多个系统对主站公用的服务的流量冲击。秘钥没有想象中那么麻烦，实际用只是个配置把它写本地或者用证书管理存起来即可，并且这个验证可以放到网关去做，当然除了JWT类似脱耦合的解决方案还有很多，但是站内搞的太复杂也不太实用。同时，这里举JWT这个例子只是因为他很典型，很适合开拓系统拆分的思路","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1712544346,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"北京","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2,\"source\":0}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":379591,"user_name":"seker","can_delete":false,"product_type":"c1","uid":1122034,"ip_address":"广东","ucode":"9B705F91355873","user_header":"https://static001.geekbang.org/account/avatar/00/11/1e/f2/453d5f88.jpg","comment_is_top":false,"comment_ctime":1692167860,"is_pvip":false,"replies":[{"id":138285,"content":"你好，seker，可以参考这个列表 https:&#47;&#47;jwt.io&#47;libraries","user_name":"作者回复","user_name_real":"编辑","uid":1004527,"ctime":1692253974,"ip_address":"北京","comment_id":379591,"utype":1}],"discussion_count":1,"race_medal":0,"score":2,"product_id":100309001,"comment_content":"徐老师，请问，用于token加密头中的常用加密算法有哪些呢？","like_count":0,"discussions":[{"author":{"id":1004527,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/53/ef/5cdaa18b.jpg","nickname":"thinkpc","note":"","ucode":"0EBF75B8707584","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":625843,"discussion_content":"你好，seker，可以参考这个列表 https://jwt.io/libraries","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1692253974,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"北京","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":378491,"user_name":"无问西东","can_delete":false,"product_type":"c1","uid":2024294,"ip_address":"上海","ucode":"5C186AD0A471B5","user_header":"https://thirdwx.qlogo.cn/mmopen/vi_32/qEBMWMbciakcMuz1IdPN9bMKLnJfAoCibKFJYwPyQtCv48efTNFvUicrjBicp3Q1h5hDU3OQibh3yqtvJxEx0HeNwFA/132","comment_is_top":false,"comment_ctime":1690341405,"is_pvip":false,"replies":[{"id":137930,"content":"你好，这个看对安全要求程度。太过复杂会有些难用，简单的方式token可以加密保存在本地存储或数据库内如localstorage，sqlite，每次请求再次加密传输，定期更新短期token等","user_name":"作者回复","user_name_real":"编辑","uid":1004527,"ctime":1690353389,"ip_address":"北京","comment_id":378491,"utype":1}],"discussion_count":1,"race_medal":0,"score":3,"product_id":100309001,"comment_content":"你好，客户端保存token如何保证不被其他应用窃取呢","like_count":0,"discussions":[{"author":{"id":1004527,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/53/ef/5cdaa18b.jpg","nickname":"thinkpc","note":"","ucode":"0EBF75B8707584","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":624236,"discussion_content":"你好，这个看对安全要求程度。太过复杂会有些难用，简单的方式token可以加密保存在本地存储或数据库内如localstorage，sqlite，每次请求再次加密传输，定期更新短期token等","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1690353389,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"北京","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":377596,"user_name":"李坤鹏","can_delete":false,"product_type":"c1","uid":2030249,"ip_address":"广东","ucode":"BBCA93BC6850D6","user_header":"https://static001.geekbang.org/account/avatar/00/1e/fa/a9/306c657e.jpg","comment_is_top":false,"comment_ctime":1688808810,"is_pvip":false,"replies":[{"id":137624,"content":"这里我了解不多，不过从你的描述来看我理解是可以的。\n具体有什么限制和问题需要一起坐下来看和尝试。","user_name":"作者回复","user_name_real":"编辑","uid":1004527,"ctime":1688952847,"ip_address":"北京","comment_id":377596,"utype":1}],"discussion_count":1,"race_medal":0,"score":3,"product_id":100309001,"comment_content":"如果用户中心和周边服务不属于一个信任域，需要将 JWT 签发能力限定在用户中心，但是和周边服务的关系又没有疏远到需要使用 OAuth 授权的程度，那么是否可以使用 RS256算法替代 HS256 算法呢？这样子周边服务无法自己颁发 token，但又可以自己独立验签，相当于牺牲一部分性能换取安全性。这种做法在业界是可接受的方案吗？","like_count":0,"discussions":[{"author":{"id":1004527,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/53/ef/5cdaa18b.jpg","nickname":"thinkpc","note":"","ucode":"0EBF75B8707584","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":623019,"discussion_content":"这里我了解不多，不过从你的描述来看我理解是可以的。\n具体有什么限制和问题需要一起坐下来看和尝试。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1688952848,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"北京","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":372104,"user_name":"阿昕","can_delete":false,"product_type":"c1","uid":1012906,"ip_address":"浙江","ucode":"F3AD093B68E074","user_header":"https://static001.geekbang.org/account/avatar/00/0f/74/aa/178a6797.jpg","comment_is_top":false,"comment_ctime":1680740307,"is_pvip":false,"replies":[{"id":135807,"content":"这个可以的：），缺点是客户端比较麻烦，并且无法通知多个客户端一起刷新。","user_name":"作者回复","user_name_real":"编辑","uid":1004527,"ctime":1680774419,"ip_address":"北京","comment_id":372104,"utype":1}],"discussion_count":1,"race_medal":0,"score":3,"product_id":100309001,"comment_content":"思考题：由客户端发起刷新token操作","like_count":0,"discussions":[{"author":{"id":1004527,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/53/ef/5cdaa18b.jpg","nickname":"thinkpc","note":"","ucode":"0EBF75B8707584","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":612543,"discussion_content":"这个可以的：），缺点是客户端比较麻烦，并且无法通知多个客户端一起刷新。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1680774419,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"北京","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":371409,"user_name":"Spoon","can_delete":false,"product_type":"c1","uid":1959822,"ip_address":"浙江","ucode":"2FF9193AD482C2","user_header":"https://static001.geekbang.org/account/avatar/00/1d/e7/8e/318cfde0.jpg","comment_is_top":false,"comment_ctime":1679907824,"is_pvip":false,"replies":[{"id":135519,"content":"时间段内 uid 访问日志就可以","user_name":"作者回复","user_name_real":"编辑","uid":1004527,"ctime":1679961804,"ip_address":"北京","comment_id":371409,"utype":1}],"discussion_count":1,"race_medal":0,"score":3,"product_id":100309001,"comment_content":"使用token这种方式，怎么统计在线用户呢？","like_count":0,"discussions":[{"author":{"id":1004527,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/53/ef/5cdaa18b.jpg","nickname":"thinkpc","note":"","ucode":"0EBF75B8707584","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":611128,"discussion_content":"时间段内 uid 访问日志就可以","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1679961804,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"北京","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":368502,"user_name":"piboye","can_delete":false,"product_type":"c1","uid":1066752,"ip_address":"广东","ucode":"7CFD8712857A85","user_header":"https://static001.geekbang.org/account/avatar/00/10/47/00/3202bdf0.jpg","comment_is_top":false,"comment_ctime":1676419450,"is_pvip":true,"replies":[{"id":134213,"content":"你好，piboye，这个是个方法，但是不能保证，所有客户端程序都在线，会有一定难度","user_name":"作者回复","user_name_real":"编辑","uid":1004527,"ctime":1676430227,"ip_address":"北京","comment_id":368502,"utype":1}],"discussion_count":1,"race_medal":0,"score":3,"product_id":100309001,"comment_content":"有消息系统的话，发消息给用户所有终端切换token","like_count":0,"discussions":[{"author":{"id":1004527,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/53/ef/5cdaa18b.jpg","nickname":"thinkpc","note":"","ucode":"0EBF75B8707584","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":604742,"discussion_content":"你好，piboye，这个是个方法，但是不能保证，所有客户端程序都在线，会有一定难度","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1676430228,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"北京","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":368438,"user_name":"zmlmagic","can_delete":false,"product_type":"c1","uid":1057444,"ip_address":"内蒙古","ucode":"E5D7E21F562CF6","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTJPZN07CicHGCjVPtWK0WQjAglXTZWDUYlCVXdJhrWIWKicl49LF0ezPq3HmGibzicBicvBC8NpkR4NhoA/132","comment_is_top":false,"comment_ctime":1676341958,"is_pvip":false,"replies":[{"id":134256,"content":"确实，取决于需要","user_name":"作者回复","user_name_real":"编辑","uid":1004527,"ctime":1676511845,"ip_address":"北京","comment_id":368438,"utype":1}],"discussion_count":1,"race_medal":0,"score":3,"product_id":100309001,"comment_content":"更新用户昵称，一般客户端修改自己资料接口调度成功后，直接调用token刷新更新掉本地token。如果用户编辑其他用户信息，要不就是易变更信息不走接口，要不就是鉴权那缓存用户token直接服务端刷新，根据需求平衡吧。","like_count":0,"discussions":[{"author":{"id":1004527,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/53/ef/5cdaa18b.jpg","nickname":"thinkpc","note":"","ucode":"0EBF75B8707584","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":604934,"discussion_content":"确实，取决于需要","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1676511846,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"北京","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":366475,"user_name":"DZ","can_delete":false,"product_type":"c1","uid":1047376,"ip_address":"江苏","ucode":"58BF0042E31449","user_header":"https://static001.geekbang.org/account/avatar/00/0f/fb/50/04071be6.jpg","comment_is_top":false,"comment_ctime":1673839653,"is_pvip":true,"replies":[{"id":133554,"content":"你好，DZ，这时候可以做客户端自行签名功能，比如在token后面追一个特殊的串，是由客户端结合本地refresh token制作的，然后再请求服务端的时候会特殊处理。另外，即使access token过期一些服务接受的情况下也可以允许过期一小时，这些都需要业务根据自己的场景定制，以前我们直播期间所有token是不判断过期的，只有进入直播前检测一下","user_name":"作者回复","user_name_real":"编辑","uid":1004527,"ctime":1673920565,"ip_address":"北京","comment_id":366475,"utype":1}],"discussion_count":1,"race_medal":0,"score":3,"product_id":100309001,"comment_content":"老师您好，请教下，如果只是用户中心出现故障，导致客户端更换 access_token失败，APP没有离线，但是refresh_token没有过期。这个时候会怎么处理？客户端不会提示用户重新登陆，依旧拿着旧的 access_token请求其他业务接口，其他业务接口由于token过期返回登录超时？","like_count":0,"discussions":[{"author":{"id":1004527,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/53/ef/5cdaa18b.jpg","nickname":"thinkpc","note":"","ucode":"0EBF75B8707584","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":599961,"discussion_content":"你好，DZ，这时候可以做客户端自行签名功能，比如在token后面追一个特殊的串，是由客户端结合本地refresh token制作的，然后再请求服务端的时候会特殊处理。另外，即使access token过期一些服务接受的情况下也可以允许过期一小时，这些都需要业务根据自己的场景定制，以前我们直播期间所有token是不判断过期的，只有进入直播前检测一下","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1673920566,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"北京","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":366206,"user_name":"zhou","can_delete":false,"product_type":"c1","uid":1087243,"ip_address":"浙江","ucode":"E1CE8575B3F106","user_header":"https://static001.geekbang.org/account/avatar/00/10/97/0b/a943bcb3.jpg","comment_is_top":false,"comment_ctime":1673485181,"is_pvip":false,"replies":[{"id":133443,"content":"你好，zhou，token更换这个可以用户中心提供接口，但是触发更换生成token后，如何让客户端本地token同步更新是个问题，毕竟很多token并不是保存在cookie内，并且很多数据不是在同域名下，如果是多个网站联合sso刷新token会很麻烦","user_name":"作者回复","user_name_real":"编辑","uid":1004527,"ctime":1673504493,"ip_address":"北京","comment_id":366206,"utype":1}],"discussion_count":3,"race_medal":0,"score":3,"product_id":100309001,"comment_content":"把用户信息放在服务器外做传递和维护，子系统通过签名算法对token进行验证，是否会存在子系统可以拿到签名的密钥，从而可以自行签发token的能力，会不安全。","like_count":0,"discussions":[{"author":{"id":1004527,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/53/ef/5cdaa18b.jpg","nickname":"thinkpc","note":"","ucode":"0EBF75B8707584","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":599403,"discussion_content":"你好，zhou，token更换这个可以用户中心提供接口，但是触发更换生成token后，如何让客户端本地token同步更新是个问题，毕竟很多token并不是保存在cookie内，并且很多数据不是在同域名下，如果是多个网站联合sso刷新token会很麻烦","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1673504493,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"北京","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":2,"child_discussions":[{"author":{"id":1087243,"avatar":"https://static001.geekbang.org/account/avatar/00/10/97/0b/a943bcb3.jpg","nickname":"zhou","note":"","ucode":"E1CE8575B3F106","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1004527,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/53/ef/5cdaa18b.jpg","nickname":"thinkpc","note":"","ucode":"0EBF75B8707584","race_medal":0,"user_type":2,"is_pvip":false},"discussion":{"id":599476,"discussion_content":"老师，我想请教您的是文中提到的“子系统通过签名算法对token进行验证”这句话，因为子系统要验证通过密钥生成的token，是需要密钥的，这样的话会导致密钥会给子应用。我们这边的子应用可能是其他团队开发的，这样会造成密钥泄漏掉。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1673534445,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":599403,"ip_address":"浙江","group_id":0},"score":599476,"extra":""},{"author":{"id":1004527,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/53/ef/5cdaa18b.jpg","nickname":"thinkpc","note":"","ucode":"0EBF75B8707584","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":1087243,"avatar":"https://static001.geekbang.org/account/avatar/00/10/97/0b/a943bcb3.jpg","nickname":"zhou","note":"","ucode":"E1CE8575B3F106","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":599970,"discussion_content":"如果有这种情况建议使用oauth方式授权～这样稳妥一些","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1673921989,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":599476,"ip_address":"北京","group_id":0},"score":599970,"extra":""}]}]},{"had_liked":false,"id":365752,"user_name":"严程序","can_delete":false,"product_type":"c1","uid":2674910,"ip_address":"北京","ucode":"C7182D5C5E898C","user_header":"https://static001.geekbang.org/account/avatar/00/28/d0/de/5eb5ffb0.jpg","comment_is_top":false,"comment_ctime":1672972179,"is_pvip":false,"replies":[{"id":133325,"content":"你好，等这个回答好久了，这里也补充一句，这个方式有个漏洞，如何预防入侵代码恶意刷用户的token","user_name":"作者回复","user_name_real":"编辑","uid":1004527,"ctime":1673314929,"ip_address":"北京","comment_id":365752,"utype":1}],"discussion_count":3,"race_medal":0,"score":3,"product_id":100309001,"comment_content":"在修改后昵称直接颁发新token给客户端，或者让access_token过期用户重新用获取新token","like_count":0,"discussions":[{"author":{"id":1004527,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/53/ef/5cdaa18b.jpg","nickname":"thinkpc","note":"","ucode":"0EBF75B8707584","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":599055,"discussion_content":"你好，等这个回答好久了，这里也补充一句，这个方式有个漏洞，如何预防入侵代码恶意刷用户的token","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1673314929,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"北京","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":1,"child_discussions":[{"author":{"id":3052835,"avatar":"","nickname":"潘鑫瑞","note":"","ucode":"57926657E5AA28","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1004527,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/53/ef/5cdaa18b.jpg","nickname":"thinkpc","note":"","ucode":"0EBF75B8707584","race_medal":0,"user_type":2,"is_pvip":false},"discussion":{"id":611552,"discussion_content":"你好，如果用户在多平台同时登录的情况下，这种方法怎么保证多个平台客户端重新获取新token","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1680165513,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":599055,"ip_address":"北京","group_id":0},"score":611552,"extra":""}]},{"author":{"id":1959822,"avatar":"https://static001.geekbang.org/account/avatar/00/1d/e7/8e/318cfde0.jpg","nickname":"Spoon","note":"","ucode":"2FF9193AD482C2","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":611025,"discussion_content":"可以增加一个redis 计数，毕竟恶意刷的量相对于整体用户量来说不大","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1679907572,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":"浙江","group_id":0},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":363433,"user_name":"Layne","can_delete":false,"product_type":"c1","uid":1479934,"ip_address":"北京","ucode":"1FEAACD900AB39","user_header":"https://static001.geekbang.org/account/avatar/00/16/94/fe/5fbf1bdc.jpg","comment_is_top":false,"comment_ctime":1669682610,"is_pvip":true,"replies":[{"id":132108,"content":"你好，Layne，refresh_token可以刷新，只是频率很低，客户端本地定期检测即可，由于频率低所以被捕获的概率更低，再次补充，通过30天重新登陆也可以。","user_name":"作者回复","user_name_real":"作者","uid":1004527,"ctime":1669684590,"ip_address":"北京","comment_id":363433,"utype":1}],"discussion_count":1,"race_medal":0,"score":3,"product_id":100309001,"comment_content":"老师，这个双token机制中，re fresh_token的有效期是固定的，没办法刷新，那是不是意味着用户端只要超过30天，就必须重新都登陆一次了，因为没办法刷新access_token了。就算用户是活跃的","like_count":0,"discussions":[{"author":{"id":1004527,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/53/ef/5cdaa18b.jpg","nickname":"thinkpc","note":"","ucode":"0EBF75B8707584","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":595040,"discussion_content":"你好，Layne，refresh_token可以刷新，只是频率很低，客户端本地定期检测即可，由于频率低所以被捕获的概率更低，再次补充，通过30天重新登陆也可以。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1669684591,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"北京","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":362085,"user_name":"连腾宇","can_delete":false,"product_type":"c1","uid":1642472,"ip_address":"北京","ucode":"DB3E5771BA90A9","user_header":"https://static001.geekbang.org/account/avatar/00/19/0f/e8/a3c08232.jpg","comment_is_top":false,"comment_ctime":1668138114,"is_pvip":false,"replies":[{"id":131715,"content":"你好，连腾宇，很高兴收到你的提问，看来你深入思考过了，才会碰到这个疑问，这个时间是在token内保存的，里面规定了这个token的有效时间，客户端只要揭开token的payload就能获取到","user_name":"作者回复","user_name_real":"作者","uid":1004527,"ctime":1668144345,"ip_address":"北京","comment_id":362085,"utype":1}],"discussion_count":1,"race_medal":0,"score":4,"product_id":100309001,"comment_content":"有点没太理解， access token过期客户端有，那服务端怎么知道这个token是否还在有效期内呢？（是根据客户端传过来的时间为准，根据解密信息判断时间有没有被篡改吗？）","like_count":0,"discussions":[{"author":{"id":1004527,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/53/ef/5cdaa18b.jpg","nickname":"thinkpc","note":"","ucode":"0EBF75B8707584","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":593392,"discussion_content":"你好，连腾宇，很高兴收到你的提问，看来你深入思考过了，才会碰到这个疑问，这个时间是在token内保存的，里面规定了这个token的有效时间，客户端只要揭开token的payload就能获取到","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1668144346,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"北京","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":361736,"user_name":"特修斯之船","can_delete":false,"product_type":"c1","uid":1068192,"ip_address":"北京","ucode":"C041A289017D0C","user_header":"https://static001.geekbang.org/account/avatar/00/10/4c/a0/6cfdefa6.jpg","comment_is_top":false,"comment_ctime":1667813801,"is_pvip":true,"replies":[{"id":131614,"content":"你好，特修斯之船，由于这个篇幅过长不太好详细回复，详细的设计可以查一下oauth2.0协议的一些资料可能会对你有帮助！","user_name":"作者回复","user_name_real":"编辑","uid":1004527,"ctime":1667892898,"ip_address":"北京","comment_id":361736,"utype":1}],"discussion_count":1,"race_medal":0,"score":4,"product_id":100309001,"comment_content":"关于用户中心里，服务器端对access_token和refresh_token的管理，有没详细的设计？\n\n一直不清楚，刷新这一块的细节逻辑","like_count":0,"discussions":[{"author":{"id":1004527,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/53/ef/5cdaa18b.jpg","nickname":"thinkpc","note":"","ucode":"0EBF75B8707584","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":593028,"discussion_content":"你好，特修斯之船，由于这个篇幅过长不太好详细回复，详细的设计可以查一下oauth2.0协议的一些资料可能会对你有帮助！","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1667892898,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"北京","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":361660,"user_name":"邱一二","can_delete":false,"product_type":"c1","uid":2432820,"ip_address":"北京","ucode":"CDFE4342E54003","user_header":"https://static001.geekbang.org/account/avatar/00/25/1f/34/0a611d8a.jpg","comment_is_top":false,"comment_ctime":1667743461,"is_pvip":false,"replies":[{"id":131555,"content":"你好，邱一二，很高兴收到你的思考，目前token的签发都是服务端去做的，客户端自动更新 是指 客户端主动请求服务端拿最新的token，而不是请求服务端后发现过期在子业务系统进行更换。如果担心安全性可以使用非对称加密用证书加密","user_name":"作者回复","user_name_real":"编辑","uid":1004527,"ctime":1667792272,"ip_address":"北京","comment_id":361660,"utype":1}],"discussion_count":2,"race_medal":0,"score":4,"product_id":100309001,"comment_content":"老师好，请问一下token自动更新是客户端在过期前请求服务端重新获取新的token吗？还是客户端自己完成？那如果是客户端自己生成会不会有法外狂徒利用逆向工程破解app获得对应生成token的SecretString然后伪造token呢","like_count":0,"discussions":[{"author":{"id":1004527,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/53/ef/5cdaa18b.jpg","nickname":"thinkpc","note":"","ucode":"0EBF75B8707584","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":592876,"discussion_content":"你好，邱一二，很高兴收到你的思考，目前token的签发都是服务端去做的，客户端自动更新 是指 客户端主动请求服务端拿最新的token，而不是请求服务端后发现过期在子业务系统进行更换。如果担心安全性可以使用非对称加密用证书加密","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1667792273,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"北京","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":2432820,"avatar":"https://static001.geekbang.org/account/avatar/00/25/1f/34/0a611d8a.jpg","nickname":"邱一二","note":"","ucode":"CDFE4342E54003","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":592927,"discussion_content":"好的好的，谢谢老师","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1667812544,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":"广东","group_id":0},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":361197,"user_name":"peter","can_delete":false,"product_type":"c1","uid":1058183,"ip_address":"北京","ucode":"261C3FC001DE2D","user_header":"https://static001.geekbang.org/account/avatar/00/10/25/87/f3a69d1b.jpg","comment_is_top":false,"comment_ctime":1667314169,"is_pvip":false,"replies":[{"id":131372,"content":"你好，peter，这里更换是客户端写代码来实现自动更换的，子业务系统无需关注token的更换。","user_name":"作者回复","user_name_real":"编辑","uid":1004527,"ctime":1667318267,"ip_address":"北京","comment_id":361197,"utype":1}],"discussion_count":1,"race_medal":0,"score":4,"product_id":100309001,"comment_content":"请问：Token的自动更新是系统自动完成的吗？\n文中有“过期后客户端会自动更换 token。”，那么，token的更新需要开发人员写代码吗？（如果是框架自动完成，或者是TCP&#47;UDP协议栈完成，就不需要用户写代码了）\n","like_count":0,"discussions":[{"author":{"id":1004527,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/53/ef/5cdaa18b.jpg","nickname":"thinkpc","note":"","ucode":"0EBF75B8707584","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":592347,"discussion_content":"你好，peter，这里更换是客户端写代码来实现自动更换的，子业务系统无需关注token的更换。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1667318267,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"北京","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":361162,"user_name":"frag007","can_delete":false,"product_type":"c1","uid":1215185,"ip_address":"北京","ucode":"94D7368F091908","user_header":"","comment_is_top":false,"comment_ctime":1667290274,"is_pvip":false,"replies":[{"id":131363,"content":"你好，frag007，很高兴收到你的留言，这是个最简单的实现方式～唯一缺点就是多客户端的情况下同步有些问题～","user_name":"作者回复","user_name_real":"编辑","uid":1004527,"ctime":1667297237,"ip_address":"北京","comment_id":361162,"utype":1}],"discussion_count":2,"race_medal":0,"score":4,"product_id":100309001,"comment_content":"更新昵称一般是用户自己发起的，更新昵称的同时，业务后台重新生成token就可以了。","like_count":0,"discussions":[{"author":{"id":1004527,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/53/ef/5cdaa18b.jpg","nickname":"thinkpc","note":"","ucode":"0EBF75B8707584","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":592309,"discussion_content":"你好，frag007，很高兴收到你的留言，这是个最简单的实现方式～唯一缺点就是多客户端的情况下同步有些问题～","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1667297237,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"北京","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":1,"child_discussions":[{"author":{"id":2314165,"avatar":"https://static001.geekbang.org/account/avatar/00/23/4f/b5/bd6140a5.jpg","nickname":"ARM","note":"","ucode":"788FD0DBD39B94","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1004527,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/53/ef/5cdaa18b.jpg","nickname":"thinkpc","note":"","ucode":"0EBF75B8707584","race_medal":0,"user_type":2,"is_pvip":false},"discussion":{"id":598863,"discussion_content":"更新应该是要走用户中心的，毕竟和这个业务属于用户中心。用户中心定义一个用户信息变更的mq，所有下游依赖监听这个mq，做对应的缓存删除和数据库变更就可以了。下次用户请求就会重新走一遍整体链路，访问会加载之前的缓存。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1673166708,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":592309,"ip_address":"浙江","group_id":0},"score":598863,"extra":""}]}]},{"had_liked":false,"id":361014,"user_name":"张申傲","can_delete":false,"product_type":"c1","uid":1182372,"ip_address":"北京","ucode":"22D46BC529BA8A","user_header":"https://static001.geekbang.org/account/avatar/00/12/0a/a4/828a431f.jpg","comment_is_top":false,"comment_ctime":1667115555,"is_pvip":false,"replies":[{"id":131318,"content":"你好，张申傲，感谢你的留言～","user_name":"作者回复","user_name_real":"编辑","uid":1004527,"ctime":1667142945,"ip_address":"北京","comment_id":361014,"utype":1}],"discussion_count":1,"race_medal":2,"score":4,"product_id":100309001,"comment_content":"老师对于 JWT 的原理和最佳实践讲得很清楚👍🏻","like_count":0,"discussions":[{"author":{"id":1004527,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/53/ef/5cdaa18b.jpg","nickname":"thinkpc","note":"","ucode":"0EBF75B8707584","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":592138,"discussion_content":"你好，张申傲，感谢你的留言～","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1667142945,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"北京","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":360949,"user_name":"Sky","can_delete":false,"product_type":"c1","uid":1392585,"ip_address":"北京","ucode":"4C5A5AB73E8B90","user_header":"https://static001.geekbang.org/account/avatar/00/15/3f/c9/1ccefb9a.jpg","comment_is_top":false,"comment_ctime":1667023544,"is_pvip":false,"replies":[{"id":131314,"content":"你好，sky，很高兴收到你的留言，踢下线可以用网关黑名单方式，每个业务网关会解开token，发现redis中有这个uid以及低于指定版本，就会要求更换","user_name":"作者回复","user_name_real":"编辑","uid":1004527,"ctime":1667043890,"ip_address":"北京","comment_id":360949,"utype":1}],"discussion_count":6,"race_medal":0,"score":4,"product_id":100309001,"comment_content":"token的方式是怎么处理多终端登录以及“踢下线”类似的功能的呢？","like_count":0,"discussions":[{"author":{"id":1004527,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/53/ef/5cdaa18b.jpg","nickname":"thinkpc","note":"","ucode":"0EBF75B8707584","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":592044,"discussion_content":"你好，sky，很高兴收到你的留言，踢下线可以用网关黑名单方式，每个业务网关会解开token，发现redis中有这个uid以及低于指定版本，就会要求更换","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1667043890,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"北京","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":5,"child_discussions":[{"author":{"id":1392585,"avatar":"https://static001.geekbang.org/account/avatar/00/15/3f/c9/1ccefb9a.jpg","nickname":"Sky","note":"","ucode":"4C5A5AB73E8B90","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1004527,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/53/ef/5cdaa18b.jpg","nickname":"thinkpc","note":"","ucode":"0EBF75B8707584","race_medal":0,"user_type":2,"is_pvip":false},"discussion":{"id":592073,"discussion_content":"如果还是要访问redis的话，每个用户登录的时候都要check一下redis，似乎与session的模式区别不大。另外如果要做多终端登录，一个账号可以在手机和电脑登录，并且一个终端只能保持一个登录，如果用token的方式似乎没有办法实现。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1667062318,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":592044,"ip_address":"上海","group_id":0},"score":592073,"extra":""},{"author":{"id":1004527,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/53/ef/5cdaa18b.jpg","nickname":"thinkpc","note":"","ucode":"0EBF75B8707584","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":1392585,"avatar":"https://static001.geekbang.org/account/avatar/00/15/3f/c9/1ccefb9a.jpg","nickname":"Sky","note":"","ucode":"4C5A5AB73E8B90","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":592169,"discussion_content":"你好，sky，很高兴能够收到你的深度思考，这里的redis是网关使用的redis和用户中心集中管理有些不一样，他可以并行多个实例，至于踢出消息如何同步可以用kafka广播发放即可。\n\n使用token如果需要互斥可以让网关的redis共同维护一个用户版本，这个版本是用来区分token是否过期，每次客户端登录的时候刷新这个版本就可以让网关发现他不是一套设备。最后，这个方案核心是降低用户中心的依赖和降低请求压力","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1667183813,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":592073,"ip_address":"北京","group_id":0},"score":592169,"extra":""},{"author":{"id":1392585,"avatar":"https://static001.geekbang.org/account/avatar/00/15/3f/c9/1ccefb9a.jpg","nickname":"Sky","note":"","ucode":"4C5A5AB73E8B90","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1004527,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/53/ef/5cdaa18b.jpg","nickname":"thinkpc","note":"","ucode":"0EBF75B8707584","race_medal":0,"user_type":2,"is_pvip":false},"discussion":{"id":592247,"discussion_content":"谢谢解答","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1667236817,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":592169,"ip_address":"上海","group_id":0},"score":592247,"extra":""}]}]},{"had_liked":false,"id":360930,"user_name":"Geek_00乐","can_delete":false,"product_type":"c1","uid":3012150,"ip_address":"北京","ucode":"30D3202B6D25DE","user_header":"https://static001.geekbang.org/account/avatar/00/2d/f6/36/a71438d8.jpg","comment_is_top":false,"comment_ctime":1667008207,"is_pvip":false,"replies":[{"id":131300,"content":"你好，Geek_00乐，很高兴你的心得分享，同时补充一句～子系统不会每次都问询用户中心～导致了这个问题","user_name":"作者回复","user_name_real":"编辑","uid":1004527,"ctime":1667031762,"ip_address":"北京","comment_id":360930,"utype":1}],"discussion_count":1,"race_medal":0,"score":4,"product_id":100309001,"comment_content":"用户如果被拉黑，客户端最快也要在 token 过期后才能退出登陆，这让我们的管理存在一定的延迟。","like_count":0,"discussions":[{"author":{"id":1004527,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/53/ef/5cdaa18b.jpg","nickname":"thinkpc","note":"","ucode":"0EBF75B8707584","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":592016,"discussion_content":"你好，Geek_00乐，很高兴你的心得分享，同时补充一句～子系统不会每次都问询用户中心～导致了这个问题","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1667031762,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"北京","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]}]}