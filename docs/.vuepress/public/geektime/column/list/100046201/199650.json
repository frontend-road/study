{"id":199650,"title":"01 | 核心原理：能否画张图解释下RPC的通信流程？","content":"<p>你好，我是何小锋。只要你做过几年开发，那我相信RPC这个词你肯定是不陌生了。写专栏之前，我还特意查了下RPC的百度指数，发现这些年RPC的搜索趋势都是稳步上升的，这也侧面说明了这项技术正在逐步渗透到我们的日常开发中。作为专栏的第一讲，我想只围绕“RPC”这个词，和你聊聊它的定义，它要解决的问题，以及工作原理。</p><p>在前些年，我面试工程师的时候，最喜欢问候选人一个问题，“你能否给我解释下RPC的通信流程”。这问题其实并不难，不过因为很多工程师平时都在用各种框架，他们可能并未停下来思考过框架的原理，所以，问完这问题，有的人就犹豫了，吱唔了半天也没说出所以然来。</p><p>紧接着，我会引导他说，“你想想，如果没有RPC框架，那你要怎么调用另外一台服务器上的接口呢”。你看，这问题可深可浅，也特别考验候选人的基本功。如果你是候选人，你会怎么回答呢？今天我就来试着回答你这个问题。</p><h2>什么是RPC？</h2><p>我知道你肯定不喜欢听概念，我也是这样，看书的时候一看到概念就直接略过。不过，到后来，我才发现，“定义”是一件多么伟大的事情。当我们能够用一句话把一个东西给定义出来的时候，侧面也说明你已经彻底理解这事了，不仅知道它要解决什么问题，还要知道它的边界。所以，你可以先停下来想想，什么是RPC。</p><!-- [[[read_end]]] --><p>RPC的全称是Remote Procedure Call，即远程过程调用。简单解读字面上的意思，远程肯定是指要跨机器而非本机，所以需要用到网络编程才能实现，但是不是只要通过网络通信访问到另一台机器的应用程序，就可以称之为RPC调用了？显然并不够。</p><p>我理解的RPC是帮助我们屏蔽网络编程细节，实现调用远程方法就跟调用本地（同一个项目中的方法）一样的体验，我们不需要因为这个方法是远程调用就需要编写很多与业务无关的代码。</p><p>这就好比建在小河上的桥一样连接着河的两岸，如果没有小桥，我们需要通过划船、绕道等其他方式才能到达对面，但是有了小桥之后，我们就能像在路面上一样行走到达对面，并且跟在路面上行走的体验没有区别。所以<strong>我认为，RPC的作用就是体现在这样两个方面：</strong></p><ul>\n<li>屏蔽远程调用跟本地调用的区别，让我们感觉就是调用项目内的方法；</li>\n<li>隐藏底层网络通信的复杂性，让我们更专注于业务逻辑。</li>\n</ul><h2>RPC通信流程</h2><p>理解了什么是RPC，接下来我们讲下RPC框架的通信流程，方便我们进一步理解RPC。</p><p>如前面所讲，RPC能帮助我们的应用透明地完成远程调用，发起调用请求的那一方叫做调用方，被调用的一方叫做服务提供方。为了实现这个目标，我们就需要在RPC框架里面对整个通信细节进行封装，<strong>那一个完整的RPC会涉及到哪些步骤呢？</strong></p><p>我们已经知道RPC是一个远程调用，那肯定就需要通过网络来传输数据，并且RPC常用于业务系统之间的数据交互，需要保证其可靠性，所以RPC一般默认采用TCP来传输。我们常用的HTTP协议也是建立在TCP之上的。</p><p>网络传输的数据必须是二进制数据，但调用方请求的出入参数都是对象。对象是肯定没法直接在网络中传输的，需要提前把它转成可传输的二进制，并且要求转换算法是可逆的，这个过程我们一般叫做“序列化”。</p><p>调用方持续地把请求参数序列化成二进制后，经过TCP传输给了服务提供方。服务提供方从TCP通道里面收到二进制数据，那如何知道一个请求的数据到哪里结束，是一个什么类型的请求呢？</p><p>在这里我们可以想想高速公路，它上面有很多出口，为了让司机清楚地知道从哪里出去，管理部门会在路上建立很多指示牌，并在指示牌上标明下一个出口是哪里、还有多远。那回到数据包识别这个场景，我们是不是也可以建立一些“指示牌”，并在上面标明数据包的类型和长度，这样就可以正确的解析数据了。确实可以，并且我们把数据格式的约定内容叫做“协议”。大多数的协议会分成两部分，分别是数据头和消息体。数据头一般用于身份识别，包括协议标识、数据大小、请求类型、序列化类型等信息；消息体主要是请求的业务参数信息和扩展属性等。</p><p>根据协议格式，服务提供方就可以正确地从二进制数据中分割出不同的请求来，同时根据请求类型和序列化类型，把二进制的消息体逆向还原成请求对象。这个过程叫作“反序列化”。</p><p>服务提供方再根据反序列化出来的请求对象找到对应的实现类，完成真正的方法调用，然后把执行结果序列化后，回写到对应的TCP通道里面。调用方获取到应答的数据包后，再反序列化成应答对象，这样调用方就完成了一次RPC调用。</p><p><strong>那上述几个流程就组成了一个完整的RPC吗？</strong></p><p>在我看来，还缺点东西。因为对于研发人员来说，这样做要掌握太多的RPC底层细节，需要手动写代码去构造请求、调用序列化，并进行网络调用，整个API非常不友好。</p><p>那我们有什么办法来简化API，屏蔽掉RPC细节，让使用方只需要关注业务接口，像调用本地一样来调用远程呢？</p><p>如果你了解Spring，一定对其AOP技术很佩服，其核心是采用动态代理的技术，通过字节码增强对方法进行拦截增强，以便于增加需要的额外处理逻辑。其实这个技术也可以应用到RPC场景来解决我们刚才面临的问题。</p><p>由服务提供者给出业务接口声明，在调用方的程序里面，RPC框架根据调用的服务接口提前生成动态代理实现类，并通过依赖注入等技术注入到声明了该接口的相关业务逻辑里面。该代理实现类会拦截所有的方法调用，在提供的方法处理逻辑里面完成一整套的远程调用，并把远程调用结果返回给调用方，这样调用方在调用远程方法的时候就获得了像调用本地接口一样的体验。</p><p>到这里，一个简单版本的RPC框架就实现了。我把整个流程都画出来了，供你参考：</p><p><img src=\"https://static001.geekbang.org/resource/image/ac/fa/acf53138659f4982bbef02acdd30f1fa.jpg?wh=3846*1377\" alt=\"\"></p><h2>RPC在架构中的位置</h2><p>围绕RPC我们讲了这么多，那RPC在架构中究竟处于什么位置呢？</p><p>如刚才所讲，RPC是解决应用间通信的一种方式，而无论是在一个大型的分布式应用系统还是中小型系统中，应用架构最终都会从“单体”演进成“微服务化”，整个应用系统会被拆分为多个不同功能的应用，并将它们部署在不同的服务器中，而应用之间会通过RPC进行通信，可以说RPC对应的是整个分布式应用系统，就像是“经络”一样的存在。</p><p>那么如果没有RPC，我们现实中的开发过程是怎样的一个体验呢？</p><p>所有的功能代码都会被我们堆砌在一个大项目中，开发过程中你可能要改一行代码，但改完后编译会花掉你2分钟，编译完想运行起来验证下结果可能要5分钟，是不是很酸爽？更难受的是在人数比较多的团队里面，多人协同开发的时候，如果团队其他人把接口定义改了，你连编译通过的机会都没有，系统直接报错，从而导致整个团队的开发效率都会非常低下。而且当我们准备要上线发版本的时候，QA也很难评估这次的测试范围，为了保险起见我们只能把所有的功能进行回归测试，这样会导致我们上线新功能的整体周期都特别长。</p><p>无论你是研发还是架构师，我相信这种系统架构我们肯定都不能接受，那怎么才能解决这个问题呢？</p><p>我们首先都会想到可以采用“分而治之”的思想来进行拆分，但是拆分完的系统怎么保持跟未拆分前的调用方式一样呢？我们总不能因为架构升级，就把所有的代码都推倒重写一遍吧。</p><p><strong>RPC框架能够帮助我们解决系统拆分后的通信问题，并且能让我们像调用本地一样去调用远程方法。</strong>利用RPC我们不仅可以很方便地将应用架构从“单体”演进成“微服务化”，而且还能解决实际开发过程中的效率低下、系统耦合等问题，这样可以使得我们的系统架构整体清晰、健壮，应用可运维度增强。</p><p>当然RPC不仅可以用来解决通信问题，它还被用在了很多其他场景，比如：发MQ、分布式缓存、数据库等。下图是我之前开发的一个应用架构图：</p><p><img src=\"https://static001.geekbang.org/resource/image/50/be/506e902e06e91663334672c29bfbc2be.jpg?wh=3205*1778\" alt=\"\"></p><p>在这个应用中，我使用了MQ来处理异步流程、Redis缓存热点数据、MySQL持久化数据，还有就是在系统中调用另外一个业务系统的接口，对我的应用来说这些都是属于RPC调用，而MQ、MySQL持久化的数据也会存在于一个分布式文件系统中，他们之间的调用也是需要用RPC来完成数据交互的。</p><p>由此可见，RPC确实是我们日常开发中经常接触的东西，只是被包装成了各种框架，导致我们很少意识到这就是RPC，让RPC变成了我们最“熟悉的陌生人”。现在，回过头想想，我说RPC是整个应用系统的“经络”，这不为过吧？我们真的很有必要学好RPC，不仅因为RPC是构建复杂系统的基石，还是提升自身认知的利器。</p><h2>总结</h2><p>本讲我主要讲了下RPC的原理，RPC就是提供一种透明调用机制，让使用者不必显式地区分本地调用和远程调用。RPC虽然可以帮助开发者屏蔽远程调用跟本地调用的区别，但毕竟涉及到远程网络通信，所以这里还是有很多使用上的区别，比如：</p><ul>\n<li>调用过程中超时了怎么处理业务？</li>\n<li>什么场景下最适合使用RPC？</li>\n<li>什么时候才需要考虑开启压缩？</li>\n</ul><p>无论你是一个初级开发者还是高级开发者，RPC都应该是你日常开发过程中绕不开的一个话题，所以作为软件开发者的我们，真的很有必要详细地了解RPC实现细节。只有这样，才能帮助我们更好地在日常工作中使用RPC。</p><h2>课后思考</h2><ol>\n<li>你应用中有哪些地方用到了RPC？</li>\n<li>你认为，RPC使用过程中需要注意哪些问题？</li>\n</ol><p>欢迎留言和我分享你的思考和疑惑，也欢迎你把文章分享给你的朋友，邀请他加入学习。我们下节课再见！</p>","neighbors":{"left":{"article_title":"开篇词 | 别老想着怎么用好RPC框架，你得多花时间琢磨原理","id":199649},"right":{"article_title":"02 | 协议：怎么设计可扩展且向后兼容的协议？","id":199651}},"comments":[{"had_liked":false,"id":179351,"user_name":"楼下小黑哥","can_delete":false,"product_type":"c1","uid":1014680,"ip_address":"","ucode":"453B099B0EE52E","user_header":"https://static001.geekbang.org/account/avatar/00/0f/7b/98/8f1aecf4.jpg","comment_is_top":false,"comment_ctime":1581988678,"is_pvip":false,"replies":[{"id":"69650","content":"思路很好。","user_name":"作者回复","comment_id":179351,"uid":"1541007","ip_address":"","utype":1,"ctime":1581997213,"user_name_real":"何小锋"}],"discussion_count":7,"race_medal":0,"score":"405308914502","product_id":100046201,"comment_content":"我们目前服务内部调用都是使用 rpc，对外接口采用 restful 接口。<br>采用rpc 开发最终要我觉得是设置合理超时时间以及重试次数。因为 rpc毕竟需要走网络调用，存在网络耗时。超时间太短，可能导致服务提供端实际执行成功，消费端却因为超时报错结束。这就有可能导致数据状态不一致。<br><br>另外，整个链路的超时需要合理设置，如A-》B-〉C，A的超时时间要大于B。<br><br>重试次数也需要关注，默认情况下，如 dubbo 重试次数为2，调用失败的情况下，框架会重新调用。而有些服务不能重复调用。<br>服务提供者应该是最熟悉自己服务的，所以服务提供者可以设置默认超时时间以及重试次数，消费者不设置，就会采用服务提供者参数设置。<br>😅想了下，开发过程中其实还有好多细节要注意，细节决定成败，后面章节可以再聊聊，让我们跟老师一起学习。","like_count":94,"discussions":[{"author":{"id":1541007,"avatar":"https://static001.geekbang.org/account/avatar/00/17/83/8f/8471d633.jpg","nickname":"何小锋","note":"","ucode":"E9B3B4A1B75D8B","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":484219,"discussion_content":"思路很好。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1581997213,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":2820632,"avatar":"https://static001.geekbang.org/account/avatar/00/2b/0a/18/cdfd70ad.jpg","nickname":"LetMeCode","note":"","ucode":"AD6D729D42BB44","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":574343,"discussion_content":"我们目前超时时间还是服务消费者来设置的。你说的由提供者来提供超时时间是个很好的思路！","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1653985865,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1225224,"avatar":"https://static001.geekbang.org/account/avatar/00/12/b2/08/92f42622.jpg","nickname":"尔冬橙","note":"","ucode":"0B013A49BC18DA","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":386737,"discussion_content":"幂等性怎么控制","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1627750553,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":1,"child_discussions":[{"author":{"id":2791739,"avatar":"https://static001.geekbang.org/account/avatar/00/2a/99/3b/acbc0986.jpg","nickname":"记忆不寒凉","note":"","ucode":"AC1D0AA0740803","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1225224,"avatar":"https://static001.geekbang.org/account/avatar/00/12/b2/08/92f42622.jpg","nickname":"尔冬橙","note":"","ucode":"0B013A49BC18DA","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":413657,"discussion_content":"幂等性需要被调用方自己在业务上提供，rpc框架不可能提供幂等性的","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1636536183,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":386737,"ip_address":""},"score":413657,"extra":""}]},{"author":{"id":1243322,"avatar":"https://static001.geekbang.org/account/avatar/00/12/f8/ba/37c24a08.jpg","nickname":"学习学习学习学习学习学习学习","note":"","ucode":"FBEF1575658620","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":374512,"discussion_content":"Dubbo失败机制failfast\nFailsave\n这些是dubbo独有的么？","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1621225188,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1325997,"avatar":"https://static001.geekbang.org/account/avatar/00/14/3b/ad/31193b83.jpg","nickname":"孙志强","note":"","ucode":"9C070F1E4EC6FF","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":388182,"discussion_content":"restful不算rpc吗","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1628645622,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1228560,"avatar":"https://static001.geekbang.org/account/avatar/00/12/bf/10/b7974690.jpg","nickname":"BD","note":"","ucode":"A95CF8C3EDC228","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":343062,"discussion_content":"至于超时和重试而使用rpc的话也不能让人完全信服吧 就算使用restful也可以定制自己的超时和重试次数","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1610936250,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":181664,"user_name":"Geek_c8b5a1","can_delete":false,"product_type":"c1","uid":1092394,"ip_address":"","ucode":"9BD727FDD55AE3","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTJTBnGDMyaGia98uoKVFwpVFC4CiafrWySk2DsTA3pDSrm4wEfeFSnsnWc9qzcVWnDZEsYtV1DcEkYQ/132","comment_is_top":false,"comment_ctime":1582609053,"is_pvip":false,"replies":[{"id":"70545","content":"很好","user_name":"作者回复","comment_id":181664,"uid":"1541007","ip_address":"","utype":1,"ctime":1582763489,"user_name_real":"何小锋"}],"discussion_count":4,"race_medal":0,"score":"242100777629","product_id":100046201,"comment_content":"1、你应用中有哪些地方用到了 RPC？<br>在公司内部不同服务之间的调用都是走的RPC<br>2、你认为，RPC 使用过程中需要注意哪些问题？<br>1）下游服务的服务能力，避免因为你的调用把别人给调挂了，要事前协商好qps等，做好限流<br>2）调用服务异常时，要考虑降级、重试等措施<br>3）核心的服务不能强依赖非核心的服务，避免核心服务因为非核心服务异常而不可用","like_count":57,"discussions":[{"author":{"id":1541007,"avatar":"https://static001.geekbang.org/account/avatar/00/17/83/8f/8471d633.jpg","nickname":"何小锋","note":"","ucode":"E9B3B4A1B75D8B","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":485069,"discussion_content":"很好","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1582763489,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":2718510,"avatar":"","nickname":"jack123","note":"","ucode":"873D0046EF39D6","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":401274,"discussion_content":"直接降级限流，保全自己先😂","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1633617141,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":2231238,"avatar":"https://static001.geekbang.org/account/avatar/00/22/0b/c6/eacd1efd.jpg","nickname":"好好学习","note":"","ucode":"6DE79FE79CDCBB","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":382443,"discussion_content":"一看就是老手了","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1625573048,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1658734,"avatar":"https://static001.geekbang.org/account/avatar/00/19/4f/6e/bff1e33e.jpg","nickname":"Awake  Dreaming","note":"","ucode":"D1A19933863FD6","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":318426,"discussion_content":"老哥，说的不错！👍","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1603729398,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":215880,"user_name":"钱","can_delete":false,"product_type":"c1","uid":1009652,"ip_address":"","ucode":"2C92A243A463D4","user_header":"https://static001.geekbang.org/account/avatar/00/0f/67/f4/9a1feb59.jpg","comment_is_top":false,"comment_ctime":1589123991,"is_pvip":false,"replies":[{"id":"80431","content":"👍","user_name":"作者回复","comment_id":215880,"uid":"1541007","ip_address":"","utype":1,"ctime":1589499804,"user_name_real":"何小锋"}],"discussion_count":4,"race_medal":0,"score":"194862652311","product_id":100046201,"comment_content":"1：你应用中有哪些地方用到了 RPC？<br>       我认为还是分开说比较好一点，侠义的RPC就是为了实现进程间方法调用像进程内方法调用一样简单。广义的RPC可以认为只要跨进程通信就是RPC，即使是在一台机器上两个进程间进行通信了，也是RPC，，不过目前来看RPC更强调侠义的含义。广义的含义和网络通信是一个意思，话说两台电脑之间想通信不靠网络靠什么呢？人肉操作嘛？<br>OK，RPC核心就是为了应用解藕而存在，只有系统间是进程通信必然会用到RPC。<br><br>2：你认为，RPC 使用过程中需要注意哪些问题？<br>第一服务注册服务发现，服务注册中心<br>第二服务治理，有多少服务？都是那些服务？谁调用谁？怎么下线服务？怎么修改服务分组？怎么修改服务别名？服务限流怎么控制？服务降级怎么控制？服务上下游信息？服务调用链信息？<br>第三服务监控，方法调用链监控？每个方法的监控，比如：TPS&#47;调用量&#47;可用率&#47;以及各种汇总聚合信息，最小&#47;最大&#47;平均&#47;各种TP分位统计，报警配置信息等等，这些东西一下就知道服务是否可用？在一个完整的调用链上那个服务比较慢？也可以统计服务的调用次数？对于分析排查问题，尤其是性能问题帮助非常大<br>第四日志查询平台，实时日志、现场日志、历史日志都能根据关键字界面化傻瓜式的查询出来，也能统计出日志里的报错信息关键字等。非常利于业务问题的排查，及时发现系统中的业务问题。<br>第五配置中心，可以调整日志级别、各种业务开关、服务分组别名信息，对于服务控制会非常灵活。<br>话说JD这些做的还挺不错，不过全链路跟踪系统好像做的还不太好，如果这个改造好了，那链路上那个系统慢就一目了然了，性能问题的排查会更简单方便。","like_count":45,"discussions":[{"author":{"id":1541007,"avatar":"https://static001.geekbang.org/account/avatar/00/17/83/8f/8471d633.jpg","nickname":"何小锋","note":"","ucode":"E9B3B4A1B75D8B","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":494593,"discussion_content":"👍","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1589499804,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":2363763,"avatar":"https://static001.geekbang.org/account/avatar/00/24/11/73/bcec2ed6.jpg","nickname":"PeinVvv","note":"","ucode":"C876CA5B5712F7","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":391875,"discussion_content":"yingjie是你吗","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1630667870,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":2690172,"avatar":"","nickname":"Geek_设计模式之美","note":"","ucode":"59263416E65594","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":387620,"discussion_content":"QPS 怎么计算啊?","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1628306136,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":2231238,"avatar":"https://static001.geekbang.org/account/avatar/00/22/0b/c6/eacd1efd.jpg","nickname":"好好学习","note":"","ucode":"6DE79FE79CDCBB","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":382457,"discussion_content":"巨佬","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1625579832,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":179303,"user_name":"洛奇","can_delete":false,"product_type":"c1","uid":1624355,"ip_address":"","ucode":"662B4005721119","user_header":"https://static001.geekbang.org/account/avatar/00/18/c9/23/76511858.jpg","comment_is_top":false,"comment_ctime":1581954991,"is_pvip":false,"replies":[{"id":"69721","content":"序列化是对方法调用的请求信息进行处理，编解码是对网络传输消息进行处理。","user_name":"作者回复","comment_id":179303,"uid":"1541007","ip_address":"","utype":1,"ctime":1582027302,"user_name_real":"何小锋"}],"discussion_count":9,"race_medal":0,"score":"134725941167","product_id":100046201,"comment_content":"第一幅图中，编解码是一种码吗？<br>为什么序列化后生成编解码后还要再编码，才能放到网络上呢?<br>为什么不能直接一步序列化就放到网络上？","like_count":31,"discussions":[{"author":{"id":1541007,"avatar":"https://static001.geekbang.org/account/avatar/00/17/83/8f/8471d633.jpg","nickname":"何小锋","note":"","ucode":"E9B3B4A1B75D8B","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":484191,"discussion_content":"序列化是对方法调用的请求信息进行处理，编解码是对网络传输消息进行处理。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1582027302,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1257453,"avatar":"https://static001.geekbang.org/account/avatar/00/13/2f/ed/a87bb8fa.jpg","nickname":"此鱼不得水","note":"","ucode":"95268E823FB4D2","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":175826,"discussion_content":"这里的编码指的是把二进制的数据(payload)进一步封装为rpc的协议(消息头+消息体)","likes_number":32,"is_delete":false,"is_hidden":false,"ctime":1581997053,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":2,"child_discussions":[{"author":{"id":1624355,"avatar":"https://static001.geekbang.org/account/avatar/00/18/c9/23/76511858.jpg","nickname":"洛奇","note":"","ucode":"662B4005721119","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1257453,"avatar":"https://static001.geekbang.org/account/avatar/00/13/2f/ed/a87bb8fa.jpg","nickname":"此鱼不得水","note":"","ucode":"95268E823FB4D2","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":175860,"discussion_content":"明白了，谢谢","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1581999124,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":175826,"ip_address":""},"score":175860,"extra":""},{"author":{"id":1592279,"avatar":"https://static001.geekbang.org/account/avatar/00/18/4b/d7/f46c6dfd.jpg","nickname":"William Ning","note":"","ucode":"4DB8D05E69E5F3","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":1257453,"avatar":"https://static001.geekbang.org/account/avatar/00/13/2f/ed/a87bb8fa.jpg","nickname":"此鱼不得水","note":"","ucode":"95268E823FB4D2","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":546802,"discussion_content":"序列化的结果不应该是字符串吗？然后再将字符串编码为二进制流？","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1642426864,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":175826,"ip_address":""},"score":546802,"extra":""}]},{"author":{"id":1033240,"avatar":"https://wx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTJkwbyTYtSCx6Qc7cQPnnRWv38Jybh3etziaPmuP8gHcgS6FMxcdftrKgWiamH6fc2iciaicDKDVEwcEibQ/132","nickname":"sami","note":"","ucode":"9A66FCA00D8A37","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":207235,"discussion_content":"为了解决粘包半包的问题吧","likes_number":5,"is_delete":false,"is_hidden":false,"ctime":1584480718,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1102126,"avatar":"https://static001.geekbang.org/account/avatar/00/10/d1/2e/ad6315ab.jpg","nickname":"聂士伟","note":"","ucode":"C1624B259BB34E","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":581602,"discussion_content":"如果有gzip支持，可以加到这层","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1658883979,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":2690172,"avatar":"","nickname":"Geek_设计模式之美","note":"","ucode":"59263416E65594","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":387621,"discussion_content":"那么 我不手动指定 某个具体的序列化方法, 直接 write(object); 这跟 write(byte[]) 有社么区别吗?","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1628306219,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":1,"child_discussions":[{"author":{"id":2718510,"avatar":"","nickname":"jack123","note":"","ucode":"873D0046EF39D6","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":2690172,"avatar":"","nickname":"Geek_设计模式之美","note":"","ucode":"59263416E65594","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":401276,"discussion_content":"有区别，tcp传输过程只能传输二进制，它可不能识别你对象是长什么样子的。。。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1633617314,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":387621,"ip_address":""},"score":401276,"extra":""}]},{"author":{"id":1762252,"avatar":"https://static001.geekbang.org/account/avatar/00/1a/e3/cc/0947ff0b.jpg","nickname":"nestle","note":"","ucode":"469800BED81B54","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":182940,"discussion_content":"应该就是 封包+解包","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1582463364,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":179393,"user_name":"陛下","can_delete":false,"product_type":"c1","uid":1502609,"ip_address":"","ucode":"0EE22B4A1904F6","user_header":"https://static001.geekbang.org/account/avatar/00/16/ed/91/5dece756.jpg","comment_is_top":false,"comment_ctime":1581995300,"is_pvip":false,"replies":[{"id":"69646","content":"分布式事务是痛点，目前有开源方案了。我们为了性能常用补偿事务，最终一致性。","user_name":"作者回复","comment_id":179393,"uid":"1541007","ip_address":"","utype":1,"ctime":1581996866,"user_name_real":"何小锋"}],"discussion_count":3,"race_medal":0,"score":"91776308516","product_id":100046201,"comment_content":"现在最严重的问题就是事物吧，分布式事物，感觉一直没有好办法解决","like_count":21,"discussions":[{"author":{"id":1541007,"avatar":"https://static001.geekbang.org/account/avatar/00/17/83/8f/8471d633.jpg","nickname":"何小锋","note":"","ucode":"E9B3B4A1B75D8B","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":484240,"discussion_content":"分布式事务是痛点，目前有开源方案了。我们为了性能常用补偿事务，最终一致性。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1581996866,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1330357,"avatar":"https://static001.geekbang.org/account/avatar/00/14/4c/b5/fcede1a9.jpg","nickname":"IT小村","note":"","ucode":"BDFEE0D821CB6E","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":379468,"discussion_content":"所谓补偿事务，就是mq那些吧？","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1623916611,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":1,"child_discussions":[{"author":{"id":2791739,"avatar":"https://static001.geekbang.org/account/avatar/00/2a/99/3b/acbc0986.jpg","nickname":"记忆不寒凉","note":"","ucode":"AC1D0AA0740803","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1330357,"avatar":"https://static001.geekbang.org/account/avatar/00/14/4c/b5/fcede1a9.jpg","nickname":"IT小村","note":"","ucode":"BDFEE0D821CB6E","race_medal":0,"user_type":1,"is_pvip":true},"discussion":{"id":413662,"discussion_content":"最终一致性，mq是一种解决方案","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1636536747,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":379468,"ip_address":""},"score":413662,"extra":""}]}]},{"had_liked":false,"id":179609,"user_name":"雨霖铃声声慢","can_delete":false,"product_type":"c1","uid":1052607,"ip_address":"","ucode":"656D98310C6DA3","user_header":"https://static001.geekbang.org/account/avatar/00/10/0f/bf/ee93c4cf.jpg","comment_is_top":false,"comment_ctime":1582038629,"is_pvip":false,"replies":[{"id":"69892","content":"👍👍👍","user_name":"作者回复","comment_id":179609,"uid":"1541007","ip_address":"","utype":1,"ctime":1582170372,"user_name_real":"何小锋"}],"discussion_count":1,"race_medal":0,"score":"57416613477","product_id":100046201,"comment_content":"1. 你应用中有哪些地方用到了 RPC？<br>我们的应用是微服务架构的，RPC就是连接这些微服务之间的纽带。<br>2. 你认为，RPC 使用过程中需要注意哪些问题？<br>因为RPC也是网络调用，性能方面肯定不如本地调用，所有RPC的API设计要仔细考虑，比如一次性能完成的调用就不要走多次调用。另外我认为最重要的是要有监控系统能监控所有的调用链，方便问题排查和性能调优。 ","like_count":13,"discussions":[{"author":{"id":1541007,"avatar":"https://static001.geekbang.org/account/avatar/00/17/83/8f/8471d633.jpg","nickname":"何小锋","note":"","ucode":"E9B3B4A1B75D8B","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":484324,"discussion_content":"👍👍👍","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1582170372,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":181055,"user_name":"小伟","can_delete":false,"product_type":"c1","uid":1359701,"ip_address":"","ucode":"124953423491E2","user_header":"https://static001.geekbang.org/account/avatar/00/14/bf/55/198c6104.jpg","comment_is_top":false,"comment_ctime":1582467384,"is_pvip":false,"replies":[{"id":"70305","content":"外部用restful，主要是http协议标准，浏览器支持简单。而不是安全。都可以采用ssl加密","user_name":"作者回复","comment_id":181055,"uid":"1541007","ip_address":"","utype":1,"ctime":1582542968,"user_name_real":"何小锋"}],"discussion_count":1,"race_medal":0,"score":"53122074936","product_id":100046201,"comment_content":"我觉得广义来说，只要涉及调用的网络通信都属于RPC的范畴，包括Rest API，因为本质上都是走网络通信的非本地调用。<br>关于服务内部用RPC，服务外部用Rest API，主要考量的还是安全性。服务内部网络一般认为是相对安全的，因为已经有了很多手段来避免数据包外泄，故不需要强认证。而服务外部是对公网开放的，或至少部分是对公网开放的，数据在公网传输被认为是相对不安全的，所以要强认证。认证强弱的差别导致了RPC分成两派：针对服务内的高效的狭义RPC，和针对服务外的相对低效的RPC(Rest API)。<br>早在EJB的时代，有个叫RMI的东西，流程和RPC惊人的一致，只不过RMI还需要调用方维护大量底层细节，感觉RPC是从RMI发展来的，是好用版RMI。","like_count":12,"discussions":[{"author":{"id":1541007,"avatar":"https://static001.geekbang.org/account/avatar/00/17/83/8f/8471d633.jpg","nickname":"何小锋","note":"","ucode":"E9B3B4A1B75D8B","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":484902,"discussion_content":"外部用restful，主要是http协议标准，浏览器支持简单。而不是安全。都可以采用ssl加密","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1582542968,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":179352,"user_name":"忆水寒","can_delete":false,"product_type":"c1","uid":1147453,"ip_address":"","ucode":"E3F86BD8AA8903","user_header":"https://static001.geekbang.org/account/avatar/00/11/82/3d/356fc3d6.jpg","comment_is_top":false,"comment_ctime":1581988763,"is_pvip":false,"replies":[{"id":"69692","content":"这些都是rpc的核心功能。","user_name":"作者回复","comment_id":179352,"uid":"1541007","ip_address":"","utype":1,"ctime":1582010551,"user_name_real":"何小锋"}],"discussion_count":4,"race_medal":0,"score":"53121596315","product_id":100046201,"comment_content":"1、你应用中有哪些地方用到了 RPC？<br>答：我们目前系统进行拆分（C++开发的），也是分布式部署的，我们的RPC在系统间交互（或同步）数据时使用RPC接口进行调用。其次，我们RPC还是一个信息管家，可以通过事件进行提醒应用层主备机信息等。<br>2、你认为，RPC 使用过程中需要注意哪些问题？<br>答：这个问题让我想起了一次面试中面试官问我“你觉得一个设计RPC框架中最重要的是哪一点？”我当时首先说了RPC框架首先是通信、自定义协议（protobuf）、序列化、注册中心。我们的RPC由于C++开发的，只提供消息传输的功能，序列化和协议在应用层做的（主要是考虑不同项目的业务也有区别）。我觉得其中最重要的就是注册中心（数据中心）实现了，这个决定了RPC所能提供扩展功能。","like_count":12,"discussions":[{"author":{"id":1541007,"avatar":"https://static001.geekbang.org/account/avatar/00/17/83/8f/8471d633.jpg","nickname":"何小锋","note":"","ucode":"E9B3B4A1B75D8B","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":484220,"discussion_content":"这些都是rpc的核心功能。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1582010551,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1225224,"avatar":"https://static001.geekbang.org/account/avatar/00/12/b2/08/92f42622.jpg","nickname":"尔冬橙","note":"","ucode":"0B013A49BC18DA","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":575253,"discussion_content":"c++怎么实现文中的动态代理呢","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1654687384,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1009422,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/67/0e/c77ad9b1.jpg","nickname":"eason2017","note":"","ucode":"E070BA624FA490","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":175723,"discussion_content":"感觉服务治理也是必不可少的","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1581992003,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":1,"child_discussions":[{"author":{"id":1147453,"avatar":"https://static001.geekbang.org/account/avatar/00/11/82/3d/356fc3d6.jpg","nickname":"忆水寒","note":"","ucode":"E3F86BD8AA8903","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1009422,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/67/0e/c77ad9b1.jpg","nickname":"eason2017","note":"","ucode":"E070BA624FA490","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":175817,"discussion_content":"嗯，这个也很重要。作为扩展项，限流、鉴权也很重要。","likes_number":2,"is_delete":false,"is_hidden":false,"ctime":1581996611,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":175723,"ip_address":""},"score":175817,"extra":""}]}]},{"had_liked":false,"id":179462,"user_name":"Leon","can_delete":false,"product_type":"c1","uid":1133145,"ip_address":"","ucode":"AE4E9534B24C10","user_header":"https://static001.geekbang.org/account/avatar/00/11/4a/59/899e3b06.jpg","comment_is_top":false,"comment_ctime":1582009940,"is_pvip":false,"replies":[{"id":"69706","content":"你好，leon。互相交流。都是我们实战的经验","user_name":"作者回复","comment_id":179462,"uid":"1541007","ip_address":"","utype":1,"ctime":1582025190,"user_name_real":"何小锋"}],"discussion_count":3,"race_medal":0,"score":"40236715604","product_id":100046201,"comment_content":"老师你好，最近在从零开始手写个RPC框架，深有感触。<br>实现了多种序列化机制，集成了protobuff、protostuff、json和hessian等。<br>目前在编码服务发现，基于zk，思路是有，不是太清晰，编码总是断断续续。<br>希望多点实战性的指导","like_count":9,"discussions":[{"author":{"id":1541007,"avatar":"https://static001.geekbang.org/account/avatar/00/17/83/8f/8471d633.jpg","nickname":"何小锋","note":"","ucode":"E9B3B4A1B75D8B","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":484267,"discussion_content":"你好，leon。互相交流。都是我们实战的经验","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1582025190,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":2036705,"avatar":"https://static001.geekbang.org/account/avatar/00/1f/13/e1/6939ae4f.jpg","nickname":"knight劉先生","note":"","ucode":"CEE9BFC8D3D969","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":366302,"discussion_content":"兄台 有微信吗？ 可以交流下","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1618023034,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":1,"child_discussions":[{"author":{"id":1133145,"avatar":"https://static001.geekbang.org/account/avatar/00/11/4a/59/899e3b06.jpg","nickname":"Leon","note":"","ucode":"AE4E9534B24C10","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":2036705,"avatar":"https://static001.geekbang.org/account/avatar/00/1f/13/e1/6939ae4f.jpg","nickname":"knight劉先生","note":"","ucode":"CEE9BFC8D3D969","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":371561,"discussion_content":"咋了","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1619847417,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":366302,"ip_address":""},"score":371561,"extra":""}]}]},{"had_liked":false,"id":179376,"user_name":"eason2017","can_delete":false,"product_type":"c1","uid":1009422,"ip_address":"","ucode":"E070BA624FA490","user_header":"https://static001.geekbang.org/account/avatar/00/0f/67/0e/c77ad9b1.jpg","comment_is_top":false,"comment_ctime":1581992826,"is_pvip":false,"replies":[{"id":"69684","content":"👍","user_name":"作者回复","comment_id":179376,"uid":"1541007","ip_address":"","utype":1,"ctime":1582009423,"user_name_real":"何小锋"}],"discussion_count":3,"race_medal":0,"score":"27351796602","product_id":100046201,"comment_content":"调用过程中超时了怎么处理业务？<br>重试机制，降级处理。<br>什么场景下最适合使用 RPC？<br>网络安全稳定的环境。<br>什么时候才需要考虑开启压缩？<br>压缩后，数据量有明显的降低，压缩会使用CPU等资源，还是要看性价比。","like_count":6,"discussions":[{"author":{"id":1541007,"avatar":"https://static001.geekbang.org/account/avatar/00/17/83/8f/8471d633.jpg","nickname":"何小锋","note":"","ucode":"E9B3B4A1B75D8B","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":484231,"discussion_content":"👍","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1582009423,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":2690172,"avatar":"","nickname":"Geek_设计模式之美","note":"","ucode":"59263416E65594","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":387622,"discussion_content":"这 啥叫 网络安全稳定的环境 ?","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1628306519,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1009422,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/67/0e/c77ad9b1.jpg","nickname":"eason2017","note":"","ucode":"E070BA624FA490","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":176066,"discussion_content":"谢谢","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1582019465,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":227992,"user_name":"herongwei","can_delete":false,"product_type":"c1","uid":1153928,"ip_address":"","ucode":"E4158BF7AD2E70","user_header":"https://static001.geekbang.org/account/avatar/00/11/9b/88/34c171f1.jpg","comment_is_top":false,"comment_ctime":1592533826,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"18772403010","product_id":100046201,"comment_content":"我是刚开始学习 RPC 的同学，团队内部要考虑使用 RPC 了，老大让我来学习下这方面的相关的资料，第一时间就想到了极客时间，搜了下，发现了老师的这个专栏，果断下手，跟着学起来，希望能有所收获~","like_count":4},{"had_liked":false,"id":182104,"user_name":"旺旺","can_delete":false,"product_type":"c1","uid":1159196,"ip_address":"","ucode":"FE2CF90F446BFB","user_header":"https://static001.geekbang.org/account/avatar/00/11/b0/1c/2e30eeb8.jpg","comment_is_top":false,"comment_ctime":1582710206,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"18762579390","product_id":100046201,"comment_content":"RPC 是整个应用系统的“经络”，精辟","like_count":4},{"had_liked":false,"id":180900,"user_name":"阿卧","can_delete":false,"product_type":"c1","uid":1229566,"ip_address":"","ucode":"68C0CC25E57707","user_header":"https://static001.geekbang.org/account/avatar/00/12/c2/fe/038a076e.jpg","comment_is_top":false,"comment_ctime":1582439459,"is_pvip":false,"replies":[{"id":"70306","content":"是的","user_name":"作者回复","comment_id":180900,"uid":"1541007","ip_address":"","utype":1,"ctime":1582543014,"user_name_real":"何小锋"}],"discussion_count":1,"race_medal":0,"score":"18762308643","product_id":100046201,"comment_content":"1. 服务内部系统间交互时会经常用到rpc，例如创建订单的流程，订单中心调用业务系统的创单，并返回结果。<br>2. 要注意，rpc接口调用超时，接口访问量过高导致服务被拖垮等问题。","like_count":4,"discussions":[{"author":{"id":1541007,"avatar":"https://static001.geekbang.org/account/avatar/00/17/83/8f/8471d633.jpg","nickname":"何小锋","note":"","ucode":"E9B3B4A1B75D8B","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":484839,"discussion_content":"是的","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1582543014,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":179257,"user_name":"每天晒白牙","can_delete":false,"product_type":"c1","uid":1004698,"ip_address":"","ucode":"A1B102CD933DEA","user_header":"https://static001.geekbang.org/account/avatar/00/0f/54/9a/76c0af70.jpg","comment_is_top":false,"comment_ctime":1581946119,"is_pvip":false,"replies":[{"id":"69693","content":"接口是契约，需要接口设计者做向下兼容","user_name":"作者回复","comment_id":179257,"uid":"1541007","ip_address":"","utype":1,"ctime":1582010624,"user_name_real":"何小锋"}],"discussion_count":6,"race_medal":0,"score":"18761815303","product_id":100046201,"comment_content":"服务调用的RPC框架<br>RPC在使用中需要接口的版本，比如服务提供方升级了接口，比如增加字段了。请求方没有修改接口的版本。这样调用就会出问题了。这个问题的根本属于协议内容，如果设计好的协议支持兼容扩展，一般是向下兼容，就能实现低版本的调用方照样调用高版本的服务方","like_count":4,"discussions":[{"author":{"id":1541007,"avatar":"https://static001.geekbang.org/account/avatar/00/17/83/8f/8471d633.jpg","nickname":"何小锋","note":"","ucode":"E9B3B4A1B75D8B","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":484169,"discussion_content":"接口是契约，需要接口设计者做向下兼容","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1582010624,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1147453,"avatar":"https://static001.geekbang.org/account/avatar/00/11/82/3d/356fc3d6.jpg","nickname":"忆水寒","note":"","ucode":"E3F86BD8AA8903","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":175647,"discussion_content":"使用google的protobuf序列化，可以解决向下兼容性问题。","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1581988170,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1153391,"avatar":"https://static001.geekbang.org/account/avatar/00/11/99/6f/88886cf3.jpg","nickname":"陌上","note":"","ucode":"F3CAC97626E83C","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":286968,"discussion_content":"这个跟协议没关系，更多的是序列化/反序列化机制问题","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1593335715,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1251224,"avatar":"https://static001.geekbang.org/account/avatar/00/13/17/98/5386341d.jpg","nickname":"Coder","note":"","ucode":"70A8F12B864E4D","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":263103,"discussion_content":"那如果是高版本的调用方，调用了低版本的服务方，会怎么样，是在服务方报错，还是调用方报错？","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1589172958,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1000054,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/42/76/256bbd43.jpg","nickname":"松花皮蛋me","note":"","ucode":"B0846CEEF6B0D1","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":175610,"discussion_content":"你这个不算协议内的，应该算序列化和反序列化，协议只是在用二进制数据","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1581987039,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1196531,"avatar":"https://static001.geekbang.org/account/avatar/00/12/41/f3/8bca4aba.jpg","nickname":"普通熊猫 ଘ(੭ˊ꒳​ˋ)੭✧","note":"","ucode":"7FEF9C72B4801B","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":175188,"discussion_content":"比单机的代码更需要贯彻OCP，但其实反过来讲，即使用restful，也需要考虑向前兼容的问题","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1581951592,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":179221,"user_name":"Eclipse","can_delete":false,"product_type":"c1","uid":1589989,"ip_address":"","ucode":"E7EB0BA99FA644","user_header":"https://static001.geekbang.org/account/avatar/00/18/42/e5/61cfe267.jpg","comment_is_top":false,"comment_ctime":1581939271,"is_pvip":false,"replies":[{"id":"69555","content":"你好，eclipse。restful是一种常用的请求方式，在高性能，大并发的情况下，私有的rpc协议也很常用。如grpc，dubbo等。好的rpc总算要伴随治理才能完善。","user_name":"作者回复","comment_id":179221,"uid":"1541007","ip_address":"","utype":1,"ctime":1581946480,"user_name_real":"何小锋"}],"discussion_count":2,"race_medal":0,"score":"18761808455","product_id":100046201,"comment_content":"1 请求远程api接口，RESTful?<br>2 通讯的话，netty更适合做底层的事，rpc设计了部分业务治理？","like_count":4,"discussions":[{"author":{"id":1541007,"avatar":"https://static001.geekbang.org/account/avatar/00/17/83/8f/8471d633.jpg","nickname":"何小锋","note":"","ucode":"E9B3B4A1B75D8B","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":484152,"discussion_content":"你好，eclipse。restful是一种常用的请求方式，在高性能，大并发的情况下，私有的rpc协议也很常用。如grpc，dubbo等。好的rpc总算要伴随治理才能完善。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1581946480,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1284211,"avatar":"https://static001.geekbang.org/account/avatar/00/13/98/73/2b208bc9.jpg","nickname":"Hanson","note":"","ucode":"61D7218314EBC2","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":175712,"discussion_content":"RESTful API只是一种API设计规范（风格），和RPC不是一种东西","likes_number":2,"is_delete":false,"is_hidden":false,"ctime":1581991442,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":245467,"user_name":"鸠摩智","can_delete":false,"product_type":"c1","uid":1106201,"ip_address":"","ucode":"853E584FC4CD64","user_header":"https://static001.geekbang.org/account/avatar/00/10/e1/19/c756aaed.jpg","comment_is_top":false,"comment_ctime":1598950692,"is_pvip":true,"discussion_count":0,"race_medal":0,"score":"10188885284","product_id":100046201,"comment_content":"这个专栏反复看了好多遍了，受益匪浅。","like_count":2},{"had_liked":false,"id":196634,"user_name":"ant","can_delete":false,"product_type":"c1","uid":1556708,"ip_address":"","ucode":"A39A03AF257471","user_header":"https://wx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTKYLPAlGUWic4yAqsGtEYBSRR7gDjyg9yiaJicNhMwiaNw4rMKQ5DHTfp7gmic0gpqEwCZaou8G6CdHKCg/132","comment_is_top":false,"comment_ctime":1585298735,"is_pvip":false,"discussion_count":1,"race_medal":0,"score":"10175233327","product_id":100046201,"comment_content":"近期在做一个世界boss功能，其中涉及到一个跨服的世界boss伤害排行榜在服务器重启后需要通过rpc去玩家所在服务器获取消息，最开始开发时第一版的实现是遍历排行榜逐个rpc去请求消息，在代码review中发现了这个问题并优化。优化点：将相同区服玩家打包通过一次rpc拿到该服上榜玩家的信息。 原因：rpc即便让我门在使用过程中像是本地操作，但他毕竟是跨服务器的远程调用，中间各种网络请求，在耗费资源上还是远高于本地请求的所以，请求次数能少则少。","like_count":2,"discussions":[{"author":{"id":1876974,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/Q3auHgzwzM7ibQdsjXeG9eibBAQ8JPzhtaJj8P6YKeYjsg22qUCyGM9nOZkD0VKb4L1YyqBIy0kja6RFUf28Diar1Y6Wr6IhMZp/132","nickname":"Geek_f49323","note":"","ucode":"0B771719D1407E","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":258656,"discussion_content":"batching是常见的优化手段。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1588710072,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":179401,"user_name":"此鱼不得水","can_delete":false,"product_type":"c1","uid":1257453,"ip_address":"","ucode":"95268E823FB4D2","user_header":"https://static001.geekbang.org/account/avatar/00/13/2f/ed/a87bb8fa.jpg","comment_is_top":false,"comment_ctime":1581997252,"is_pvip":false,"replies":[{"id":"69714","content":"后面有分享，需要解答的可以提问。","user_name":"作者回复","comment_id":179401,"uid":"1541007","ip_address":"","utype":1,"ctime":1582025694,"user_name_real":"何小锋"}],"discussion_count":2,"race_medal":0,"score":"10171931844","product_id":100046201,"comment_content":"希望老师可以详细讲解一下服务注册和发现的流程，目前网上很多的资料对这个部分都介绍的比较马虎。","like_count":2,"discussions":[{"author":{"id":1541007,"avatar":"https://static001.geekbang.org/account/avatar/00/17/83/8f/8471d633.jpg","nickname":"何小锋","note":"","ucode":"E9B3B4A1B75D8B","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":484244,"discussion_content":"后面有分享，需要解答的可以提问。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1582025694,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1876710,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTIFPGpial25cV6RrmLESJWGYbcJI1cYErv5pfkThrGbeM5F3vVVpD4ePxhQxwMHPic0L2QpQhQOY6yg/132","nickname":"Novelian","note":"","ucode":"DA7850A80C0432","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":177191,"discussion_content":"核心是有统一的标准，每个插件都有个接口，通过该接口可获取这个插件所有信息。插件存储位置可感知。小项目中静态全局变量的构造函数可以告诉管理者自己能做什么。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1582084447,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":179360,"user_name":"一步","can_delete":false,"product_type":"c1","uid":1005391,"ip_address":"","ucode":"73CEA468CE70C3","user_header":"https://static001.geekbang.org/account/avatar/00/0f/57/4f/6fb51ff1.jpg","comment_is_top":false,"comment_ctime":1581989952,"is_pvip":true,"replies":[{"id":"69683","content":"rpc可以在不同网络协议上实现。具体的一种rpc实现一般采用一种网络协议。","user_name":"作者回复","comment_id":179360,"uid":"1541007","ip_address":"","utype":1,"ctime":1582009369,"user_name_real":"何小锋"}],"discussion_count":1,"race_medal":0,"score":"10171924544","product_id":100046201,"comment_content":"老师文中提到RPC主要体现再两个方面: <br>屏蔽远程调用跟本地调用的区别，让我们感觉就是调用项目内的方法；<br>隐藏底层网络通信的复杂性，让我们更专注于业务逻辑。<br><br>这样话是不是RPC的实现和具体的传输协议没有关系，不管是TCP还是UDP哪怕是http&#47;2只要能满足上面就可以？","like_count":2,"discussions":[{"author":{"id":1541007,"avatar":"https://static001.geekbang.org/account/avatar/00/17/83/8f/8471d633.jpg","nickname":"何小锋","note":"","ucode":"E9B3B4A1B75D8B","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":484223,"discussion_content":"rpc可以在不同网络协议上实现。具体的一种rpc实现一般采用一种网络协议。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1582009369,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":179305,"user_name":"洛奇","can_delete":false,"product_type":"c1","uid":1624355,"ip_address":"","ucode":"662B4005721119","user_header":"https://static001.geekbang.org/account/avatar/00/18/c9/23/76511858.jpg","comment_is_top":false,"comment_ctime":1581955852,"is_pvip":false,"replies":[{"id":"69635","content":"目前没有关系，目标是一样，进行远程调用","user_name":"作者回复","comment_id":179305,"uid":"1541007","ip_address":"","utype":1,"ctime":1581992636,"user_name_real":"何小锋"}],"discussion_count":1,"race_medal":0,"score":"10171890444","product_id":100046201,"comment_content":"老师，RPC和RMI  (远程方法调用) 有什么关系？","like_count":2,"discussions":[{"author":{"id":1541007,"avatar":"https://static001.geekbang.org/account/avatar/00/17/83/8f/8471d633.jpg","nickname":"何小锋","note":"","ucode":"E9B3B4A1B75D8B","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":484192,"discussion_content":"目前没有关系，目标是一样，进行远程调用","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1581992636,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":324358,"user_name":"悟尘","can_delete":false,"product_type":"c1","uid":2189310,"ip_address":"","ucode":"4E7E854340D3A4","user_header":"https://static001.geekbang.org/account/avatar/00/21/67/fe/5d17661a.jpg","comment_is_top":false,"comment_ctime":1638403922,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"5933371218","product_id":100046201,"comment_content":"由服务提供者给出业务接口声明，在调用方的程序里面，RPC 框架根据调用的服务接口提前生成动态代理实现类，并通过依赖注入等技术注入到声明了该接口的相关业务逻辑里面。该代理实现类会拦截所有的方法调用，在提供的方法处理逻辑里面完成一整套的远程调用，并把远程调用结果返回给调用方，这样调用方在调用远程方法的时候就获得了像调用本地接口一样的体验。<br>没看明白是什么意思？","like_count":1},{"had_liked":false,"id":293989,"user_name":"学习学习学习学习学习学习学习","can_delete":false,"product_type":"c1","uid":1243322,"ip_address":"","ucode":"FBEF1575658620","user_header":"https://static001.geekbang.org/account/avatar/00/12/f8/ba/37c24a08.jpg","comment_is_top":false,"comment_ctime":1621671032,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"5916638328","product_id":100046201,"comment_content":"RPC 的全称是 Remote Procedure Call，即远程过程调用<br><br>具有以下作用：<br><br>1. 屏蔽远程调用跟本地调用的区别，让我们感觉就是调用项目内的方法；<br>2. 隐藏底层网络通信的复杂性，让我们更专注于业务逻辑。<br><br>### RPC通信流程：<br><br>### RPC调用步骤如下：<br><br>1. RPC是远程调用，需要网络传输数据，并且由于常用于业务系统之间进行远程调用，所以需要使用TCP来进行传输<br>2. 网络传输的数据必须是二进制数据，但是调用方请求的出入参数都是对象，所以需要使用可逆的算法，来将对象转化为二进制数据，这一步叫做序列化<br>3. 调用方持续的将请求序列化为二进制数据，经过TCP后传输给了服务提供方。服务提供方如何知道请求的数据的大小，以及请求的是哪个接口类型；因此需要约定数据包的格式，这个步骤就是协议的约定<br>4. 根据协议格式，服务提供者可以正确的从二进制数据中分割出不同的请求，同事根据请求类型和序列化类型，把二进制的消息体逆向还原成请求对象，这一步就叫反序列化<br>5. 服务提供方根据反序列化出来的请求对象，找到对象的实现类，完成方法调用<br>6. 将执行结果序列化后，回写到TCP通道中。调用方获取到应答数据后，再进行反序列化得到Reponse数据，完成RPC调用<br>7. 简化调用链，利用反射或者其他方法让调用方在调用远程方法时，能够像调用本地接口一样<br><br>### RPC 注意点<br><br>1. 使用rpc的场景是否合适，<br>2. 什么是否需要开启压缩，根据配置，根据部署机器配置，根据网络环境，根据传输数据大小<br>3. 调用过程超时处理，以及失败重试机制，例如dubbo的failfast，failover等<br>4. 服务集群注意点<br>    1. 服务注册，发现，服务注册中心<br>    2. 服务治理，服务分组，服务别名，服务限流，服务降级，服务调用链，链路跟踪<br>    3. 服务监控，调用链监控，方法监控，数据指标监控（TPS，调用量，可用率，调用返回时间，服务网络响应时间）<br>    4. 服务日志，聚合查询，整理，告警<br>    5. 服务集群化，分组化的在线配置中心。支持日志等级控制，服务控制","like_count":1},{"had_liked":false,"id":293045,"user_name":"Geek_47baf9","can_delete":false,"product_type":"c1","uid":1793038,"ip_address":"","ucode":"DCF187338050DC","user_header":"","comment_is_top":false,"comment_ctime":1621172134,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"5916139430","product_id":100046201,"comment_content":"1、你应用中有哪些地方用到了 RPC？<br>我司采用spring cloud架构，内部使用feign进行rpc通信调用，还有.net使用httpclient方式进行内网调用，也算是rpc<br>2、你认为，RPC 使用过程中需要注意哪些问题？<br>服务调用方：做好服务不可用的降级及服务异常的处理，尝试机制，超时时间等处理<br>服务提供者：做好熔断和限流和缓存，避免请求过多，直接被过量请求打死应用（一般是服务调用方尝试次数太多不合理导致的）","like_count":1},{"had_liked":false,"id":292730,"user_name":"Sic Pavis","can_delete":false,"product_type":"c1","uid":1106088,"ip_address":"","ucode":"48B5F0118347C8","user_header":"https://static001.geekbang.org/account/avatar/00/10/e0/a8/4e739cf6.jpg","comment_is_top":false,"comment_ctime":1620954545,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"5915921841","product_id":100046201,"comment_content":"其实没太理解rpc和正常http的优劣在哪里，说屏蔽本地和远程差异吗？http我也可以封装好方法，让调用和本地差不多。而rpc也绕不开网络异常之类的场景考虑","like_count":1},{"had_liked":false,"id":292031,"user_name":"young__30","can_delete":false,"product_type":"c1","uid":2026415,"ip_address":"","ucode":"293191E899B776","user_header":"https://static001.geekbang.org/account/avatar/00/1e/eb/af/880859e9.jpg","comment_is_top":false,"comment_ctime":1620649721,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"5915617017","product_id":100046201,"comment_content":"老师请问一个问题，“在调用方的程序里面，RPC 框架根据调用的服务接口提前生成动态代理实现类，并通过依赖注入等技术注入到声明了该接口的相关业务逻辑里面。” 为什么restful风格的http调用就不需要这种动态代理的方式提前在客户端生成桩代码呢？？","like_count":1},{"had_liked":false,"id":291934,"user_name":"xueyuan","can_delete":false,"product_type":"c1","uid":1128121,"ip_address":"","ucode":"3DE20A723EBAFE","user_header":"https://static001.geekbang.org/account/avatar/00/11/36/b9/3b28f67c.jpg","comment_is_top":false,"comment_ctime":1620615137,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"5915582433","product_id":100046201,"comment_content":"你应用中有哪些地方用到了 RPC？<br>目前是服务内部调用使用了RPC<br><br>你认为，RPC 使用过程中需要注意哪些问题？<br><br>1 异常处理<br>1.1 失败的处理情况<br>1.2 超时处理<br><br>2 网络问题<br>2.1 网络连接池<br>2.2 服务发现和治理<br>2.3 负载均衡<br>2.4 网络传输文件大小选择，是否把一个大包拆成多个小包<br><br>3 协议兼容<br>3.1 新旧协议兼容问题<br>3.2 协议选择，json和pb","like_count":1},{"had_liked":false,"id":203299,"user_name":"番茄炒西红柿","can_delete":false,"product_type":"c1","uid":1690242,"ip_address":"","ucode":"13F47BABAB2110","user_header":"https://static001.geekbang.org/account/avatar/00/19/ca/82/85f6a1a2.jpg","comment_is_top":false,"comment_ctime":1586168120,"is_pvip":false,"replies":[{"id":"76827","content":"分布式事务确实不好处理","user_name":"作者回复","user_name_real":"何小锋","uid":"1541007","ctime":1586691797,"ip_address":"","comment_id":203299,"utype":1}],"discussion_count":1,"race_medal":0,"score":"5881135416","product_id":100046201,"comment_content":"1.公司内的服务一般走rpc（目前用的是spring的解决方法）<br>2.rpc的问题：流控，错误处理，最难的问题：分布式事务处理","like_count":1,"discussions":[{"author":{"id":1541007,"avatar":"https://static001.geekbang.org/account/avatar/00/17/83/8f/8471d633.jpg","nickname":"何小锋","note":"","ucode":"E9B3B4A1B75D8B","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":490823,"discussion_content":"分布式事务确实不好处理","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1586691797,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":191501,"user_name":"旭东(Frank)","can_delete":false,"product_type":"c1","uid":1024486,"ip_address":"","ucode":"176FA629800062","user_header":"https://static001.geekbang.org/account/avatar/00/0f/a1/e6/50da1b2d.jpg","comment_is_top":false,"comment_ctime":1584777954,"is_pvip":false,"replies":[{"id":"73820","content":"可以通过unix domain socket来实现","user_name":"作者回复","user_name_real":"何小锋","uid":"1541007","ctime":1585006505,"ip_address":"","comment_id":191501,"utype":1}],"discussion_count":1,"race_medal":0,"score":"5879745250","product_id":100046201,"comment_content":"调用跨进程的服务或者跨网络的进程服务，像调用本地服务一样。<br><br>请问老师，课程中RPC 如果是调用同台上的不同应用服务是否也是按网络调用方式执行，还是有所优化呢？","like_count":1,"discussions":[{"author":{"id":1541007,"avatar":"https://static001.geekbang.org/account/avatar/00/17/83/8f/8471d633.jpg","nickname":"何小锋","note":"","ucode":"E9B3B4A1B75D8B","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":488191,"discussion_content":"可以通过unix domain socket来实现","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1585006505,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":183917,"user_name":"芒果少侠","can_delete":false,"product_type":"c1","uid":1350159,"ip_address":"","ucode":"98D0BBB52BB80F","user_header":"https://static001.geekbang.org/account/avatar/00/14/9a/0f/da7ed75a.jpg","comment_is_top":false,"comment_ctime":1583162125,"is_pvip":true,"replies":[{"id":"71621","content":"很棒","user_name":"作者回复","user_name_real":"何小锋","uid":"1541007","ctime":1583621679,"ip_address":"","comment_id":183917,"utype":1}],"discussion_count":1,"race_medal":0,"score":"5878129421","product_id":100046201,"comment_content":"1 公司项目不同服务之间的内部调用<br>2 数据传输量大小&#47;超时处理&#47;异常处理","like_count":1,"discussions":[{"author":{"id":1541007,"avatar":"https://static001.geekbang.org/account/avatar/00/17/83/8f/8471d633.jpg","nickname":"何小锋","note":"","ucode":"E9B3B4A1B75D8B","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":485820,"discussion_content":"很棒","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1583621679,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":183125,"user_name":"kevin","can_delete":false,"product_type":"c1","uid":1199192,"ip_address":"","ucode":"918EFC033B1630","user_header":"https://static001.geekbang.org/account/avatar/00/12/4c/58/25152fa9.jpg","comment_is_top":false,"comment_ctime":1582956990,"is_pvip":false,"replies":[{"id":"71641","content":"很棒","user_name":"作者回复","user_name_real":"何小锋","uid":"1541007","ctime":1583627975,"ip_address":"","comment_id":183125,"utype":1}],"discussion_count":2,"race_medal":0,"score":"5877924286","product_id":100046201,"comment_content":"1.内部服务见调用，访问缓存，ＭQ，数据库等都是通过RPC调用的；<br>2. 对于RPC调用要注意设置服务端超时时间和客户端超时时间，重试策略，快速失败，限流，降级，线程池等，对于多中心和机房的还要考虑具体的理由策略。","like_count":1,"discussions":[{"author":{"id":1541007,"avatar":"https://static001.geekbang.org/account/avatar/00/17/83/8f/8471d633.jpg","nickname":"何小锋","note":"","ucode":"E9B3B4A1B75D8B","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":485565,"discussion_content":"很棒","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1583627975,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1567891,"avatar":"https://static001.geekbang.org/account/avatar/00/17/ec/93/d77a303a.jpg","nickname":"孙腾蛟","note":"","ucode":"2721492BB91B24","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":373756,"discussion_content":"理由？","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1620866731,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":180651,"user_name":"felix","can_delete":false,"product_type":"c1","uid":1086157,"ip_address":"","ucode":"DF514D0BB9B508","user_header":"https://static001.geekbang.org/account/avatar/00/10/92/cd/d39e568c.jpg","comment_is_top":false,"comment_ctime":1582358871,"is_pvip":false,"replies":[{"id":"70301","content":"👌","user_name":"作者回复","user_name_real":"何小锋","uid":"1541007","ctime":1582542586,"ip_address":"","comment_id":180651,"utype":1}],"discussion_count":1,"race_medal":0,"score":"5877326167","product_id":100046201,"comment_content":"建议老师，回复不要再加“您好，用户ID”了，用户ID非常干扰回复内容，谢谢。","like_count":1,"discussions":[{"author":{"id":1541007,"avatar":"https://static001.geekbang.org/account/avatar/00/17/83/8f/8471d633.jpg","nickname":"何小锋","note":"","ucode":"E9B3B4A1B75D8B","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":484746,"discussion_content":"👌","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1582542586,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":180498,"user_name":"(Kelen)","can_delete":false,"product_type":"c1","uid":1241185,"ip_address":"","ucode":"C8578DB62E3B2D","user_header":"https://static001.geekbang.org/account/avatar/00/12/f0/61/fedca2e9.jpg","comment_is_top":false,"comment_ctime":1582297358,"is_pvip":false,"replies":[{"id":"70309","content":"解决一个场景需要大量的代码。不是简单的贴一点代码","user_name":"作者回复","user_name_real":"何小锋","uid":"1541007","ctime":1582543185,"ip_address":"","comment_id":180498,"utype":1}],"discussion_count":1,"race_medal":0,"score":"5877264654","product_id":100046201,"comment_content":"老师你好，有个想法，我们在熟悉rpc过程中，我体会到，把概念最好解释清楚的方法之一是结合实际例子。就像算法学习一样，比如rpc,老师可以概念后面结合一个自己手写的简单的rpc，然后贴上各种代码。这样读者会不会更清楚，课下也可以练习","like_count":1,"discussions":[{"author":{"id":1541007,"avatar":"https://static001.geekbang.org/account/avatar/00/17/83/8f/8471d633.jpg","nickname":"何小锋","note":"","ucode":"E9B3B4A1B75D8B","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":484683,"discussion_content":"解决一个场景需要大量的代码。不是简单的贴一点代码","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1582543185,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":180386,"user_name":"cricket1981","can_delete":false,"product_type":"c1","uid":1001715,"ip_address":"","ucode":"758262F5958DA4","user_header":"https://static001.geekbang.org/account/avatar/00/0f/48/f3/f1034ffd.jpg","comment_is_top":false,"comment_ctime":1582273245,"is_pvip":false,"replies":[{"id":"70048","content":"rpc用于远程通信，client+server就是这样的场景。netty是java里面网络通信的最著名框架。","user_name":"作者回复","user_name_real":"何小锋","uid":"1541007","ctime":1582288673,"ip_address":"","comment_id":180386,"utype":1}],"discussion_count":1,"race_medal":0,"score":"5877240541","product_id":100046201,"comment_content":"只要存在client server通讯就需要rpc，对吗？知名rpc框架底层用的都是netty吗？","like_count":1,"discussions":[{"author":{"id":1541007,"avatar":"https://static001.geekbang.org/account/avatar/00/17/83/8f/8471d633.jpg","nickname":"何小锋","note":"","ucode":"E9B3B4A1B75D8B","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":484639,"discussion_content":"rpc用于远程通信，client+server就是这样的场景。netty是java里面网络通信的最著名框架。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1582288673,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":180051,"user_name":"阳🌏Y(^_^)Y☀️光","can_delete":false,"product_type":"c1","uid":1508490,"ip_address":"","ucode":"6C3120844A450C","user_header":"https://static001.geekbang.org/account/avatar/00/17/04/8a/942719cd.jpg","comment_is_top":false,"comment_ctime":1582174602,"is_pvip":false,"replies":[{"id":"69922","content":"网站对外用http和浏览器交互，内部可以使用rpc。","user_name":"作者回复","user_name_real":"何小锋","uid":"1541007","ctime":1582184818,"ip_address":"","comment_id":180051,"utype":1}],"discussion_count":1,"race_medal":0,"score":"5877141898","product_id":100046201,"comment_content":"网站应用互相调用用的都是RESTful API，在学习各类分布式框架和计算引擎的时候基本随时都会看到RPC ","like_count":1,"discussions":[{"author":{"id":1541007,"avatar":"https://static001.geekbang.org/account/avatar/00/17/83/8f/8471d633.jpg","nickname":"何小锋","note":"","ucode":"E9B3B4A1B75D8B","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":484501,"discussion_content":"网站对外用http和浏览器交互，内部可以使用rpc。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1582184818,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":179983,"user_name":"crown","can_delete":false,"product_type":"c1","uid":1038168,"ip_address":"","ucode":"4F802FE672A1C5","user_header":"https://static001.geekbang.org/account/avatar/00/0f/d7/58/a2e8084f.jpg","comment_is_top":false,"comment_ctime":1582148308,"is_pvip":false,"replies":[{"id":"69881","content":"你好，crown。调用方的超时时间可以传递到服务。如果超时了，服务端可以尽快的释放资源，不必再处理已经超时的请求","user_name":"作者回复","user_name_real":"何小锋","uid":"1541007","ctime":1582169448,"ip_address":"","comment_id":179983,"utype":1}],"discussion_count":1,"race_medal":0,"score":"5877115604","product_id":100046201,"comment_content":"工作中哪里用到了rpc？<br>    我是做游戏服务器开发的，有多个网关，多个业务处理服务器，玩家socket和某个确定的网关连接，网关和多个业务服务器连接。<br>   玩家发出请求，网关把请求转发给确定的业务服务器(也可以rpc调用)，业务服务器把处理结果返回给网关，网关再转发给客户端。<br>    重点是:如果网关和业务服务器rpc调用出现了超时后的处理。  希望能从本专栏学到点rpc知识应用到游戏服务器框架设计。","like_count":1,"discussions":[{"author":{"id":1541007,"avatar":"https://static001.geekbang.org/account/avatar/00/17/83/8f/8471d633.jpg","nickname":"何小锋","note":"","ucode":"E9B3B4A1B75D8B","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":484477,"discussion_content":"你好，crown。调用方的超时时间可以传递到服务。如果超时了，服务端可以尽快的释放资源，不必再处理已经超时的请求","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1582169448,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":179311,"user_name":"阿土","can_delete":false,"product_type":"c1","uid":1183019,"ip_address":"","ucode":"2DBEAD80B0CA3C","user_header":"https://static001.geekbang.org/account/avatar/00/12/0d/2b/4814d3db.jpg","comment_is_top":false,"comment_ctime":1581957651,"is_pvip":false,"replies":[{"id":"69636","content":"你好，阿土。变更接口最好按照新版本或新分组发布。消费方升级前，老接口还能继续服务在线业务。","user_name":"作者回复","user_name_real":"何小锋","uid":"1541007","ctime":1581992829,"ip_address":"","comment_id":179311,"utype":1}],"discussion_count":2,"race_medal":0,"score":"5876924947","product_id":100046201,"comment_content":"RPC的接口升级是一个很大而且很考验设计能力、管理能力的问题。包括且不限于接口字段添加与减少，版本升级，向下兼容，变更通知等。","like_count":1,"discussions":[{"author":{"id":1541007,"avatar":"https://static001.geekbang.org/account/avatar/00/17/83/8f/8471d633.jpg","nickname":"何小锋","note":"","ucode":"E9B3B4A1B75D8B","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":484195,"discussion_content":"你好，阿土。变更接口最好按照新版本或新分组发布。消费方升级前，老接口还能继续服务在线业务。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1581992829,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1563813,"avatar":"https://static001.geekbang.org/account/avatar/00/17/dc/a5/fe89fd57.jpg","nickname":"rinne","note":"","ucode":"2328E08C3E2D96","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":343273,"discussion_content":"老师，这里能解释下按照新版本或分组是怎么发布的吗，怎么同时兼容？","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1610978530,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":179265,"user_name":"Tesla","can_delete":false,"product_type":"c1","uid":1500742,"ip_address":"","ucode":"98629AFD9861EE","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTKUcSLVV6ia3dibe7qvTu8Vic1PVs2EibxoUdx930MC7j2Q9A6s4eibMDZlcicMFY0D0icd3RrDorMChu0zw/132","comment_is_top":false,"comment_ctime":1581947557,"is_pvip":false,"replies":[{"id":"69643","content":"你好，你说的这个过程就是一个rpc调用。","user_name":"作者回复","user_name_real":"何小锋","uid":"1541007","ctime":1581995975,"ip_address":"","comment_id":179265,"utype":1}],"discussion_count":3,"race_medal":0,"score":"5876914853","product_id":100046201,"comment_content":"老师好，例如说redis的rpc调用。是指redis-cli开启的客户端，去远程调用redis-server中的方法吗？我一直以为redis-cls组件只是传命令字符串给服务端，经由服务端的唯一入口 一个解析命令的方法，再去触发相关操作。","like_count":1,"discussions":[{"author":{"id":1541007,"avatar":"https://static001.geekbang.org/account/avatar/00/17/83/8f/8471d633.jpg","nickname":"何小锋","note":"","ucode":"E9B3B4A1B75D8B","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":484173,"discussion_content":"你好，你说的这个过程就是一个rpc调用。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1581995975,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1196531,"avatar":"https://static001.geekbang.org/account/avatar/00/12/41/f3/8bca4aba.jpg","nickname":"普通熊猫 ଘ(੭ˊ꒳​ˋ)੭✧","note":"","ucode":"7FEF9C72B4801B","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":175171,"discussion_content":"私以为，以何种方式将指令传到服务器并不是关键。关键可能是：是否拥有了像调用本地方法一样的编程体验，比如：能够以同步方式调用，立马得到返回结果。\n\nrpc跟aop一样，是一种关注点分离的手段，让程序员可以专注于业务。","likes_number":2,"is_delete":false,"is_hidden":false,"ctime":1581951406,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1571460,"avatar":"https://static001.geekbang.org/account/avatar/00/17/fa/84/f01d203a.jpg","nickname":"Simple life","note":"","ucode":"1902D7F72FB43F","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":309855,"discussion_content":"个人认为RPC已经成了一种功能的代名词了，是微服务间通讯的一种手段，而REDIS通讯个人不认为可以叫做RPC，正如上面所说的，已经成为了一种代名词了，它有各种元素，而REDIS通讯则没有","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1601464926,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":359644,"user_name":"猪小擎","can_delete":false,"product_type":"c1","uid":1370959,"ip_address":"北京","ucode":"D9552746AE3327","user_header":"https://static001.geekbang.org/account/avatar/00/14/eb/4f/6a97b1cd.jpg","comment_is_top":false,"comment_ctime":1665726346,"is_pvip":true,"discussion_count":0,"race_medal":0,"score":"1665726346","product_id":100046201,"comment_content":"网络传输的数据必须是二进制？首先确定什么不是二进制，二进制对应的是text。text不会包含字节0，任何编码都不合法的字节流才叫二进制。不是所有的字节流都叫二进制。http里的data就不是二进制。","like_count":0},{"had_liked":false,"id":315357,"user_name":"俯瞰风景.","can_delete":false,"product_type":"c1","uid":1044166,"ip_address":"","ucode":"A6DB68B7B84AEE","user_header":"https://static001.geekbang.org/account/avatar/00/0f/ee/c6/bebcbcf0.jpg","comment_is_top":false,"comment_ctime":1633857021,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1633857021","product_id":100046201,"comment_content":"只要涉及到分布式系统，在物理分离的不同子系统之间的通信方式只有网络通信，而每次都进行网络编程是很麻烦的一件事，所以就有了rpc 框架。请求方调用远程的接口时，通过动态代理的方式附加上网络通信相关的代码。实现让调用远程接口想像调用本地接口一样。","like_count":0},{"had_liked":false,"id":312941,"user_name":"核桃","can_delete":false,"product_type":"c1","uid":1385204,"ip_address":"","ucode":"7AB05270CBCCCB","user_header":"https://static001.geekbang.org/account/avatar/00/15/22/f4/9fd6f8f0.jpg","comment_is_top":false,"comment_ctime":1632132698,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1632132698","product_id":100046201,"comment_content":"最早接触rpc是在spark和hadoop源码里面，那时候搞不懂为什么要这样弄，后面才逐渐了解一点，但是一直以来，rpc如果不是大型公司项目，很少用到，除非深入框架源码","like_count":0},{"had_liked":false,"id":301598,"user_name":"恶魔果实","can_delete":false,"product_type":"c1","uid":1962297,"ip_address":"","ucode":"691CD833C984AC","user_header":"https://static001.geekbang.org/account/avatar/00/1d/f1/39/b0960780.jpg","comment_is_top":false,"comment_ctime":1625756442,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1625756442","product_id":100046201,"comment_content":"为什么有了http还要用rpc呢？http和rpc是什么关系？","like_count":0},{"had_liked":false,"id":293263,"user_name":"七月","can_delete":false,"product_type":"c1","uid":1182349,"ip_address":"","ucode":"8E149210CF016D","user_header":"https://static001.geekbang.org/account/avatar/00/12/0a/8d/014f6933.jpg","comment_is_top":false,"comment_ctime":1621313962,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1621313962","product_id":100046201,"comment_content":"请问课程里有实战吗？有教怎么编写一个高性能的rpc框架吗？","like_count":0},{"had_liked":false,"id":276241,"user_name":"凌霄","can_delete":false,"product_type":"c1","uid":1107786,"ip_address":"","ucode":"19C4BFB0298276","user_header":"https://static001.geekbang.org/account/avatar/00/10/e7/4a/4dfb565a.jpg","comment_is_top":false,"comment_ctime":1611844304,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1611844304","product_id":100046201,"comment_content":"1、你应用中有哪些地方用到了 RPC？<br>答案：我们所有应用都是微服务，其中用到RPC的有京东自研发的JSF，JMQ，JIMDB，分布式统一配置等。<br><br>你认为，RPC 使用过程中需要注意哪些问题？<br>答案：序列化问题，之前默认用msgpack 序列化，对于泛型等集合的序列化和反序列化经常遇到坑，不支持内部匿名类等。<br>","like_count":0},{"had_liked":false,"id":275525,"user_name":"张申傲","can_delete":false,"product_type":"c1","uid":1182372,"ip_address":"","ucode":"22D46BC529BA8A","user_header":"https://static001.geekbang.org/account/avatar/00/12/0a/a4/828a431f.jpg","comment_is_top":false,"comment_ctime":1611571022,"is_pvip":true,"discussion_count":0,"race_medal":0,"score":"1611571022","product_id":100046201,"comment_content":"RPC 框架本身的使用并不复杂，但是如果基于 RPC 构建整个微服务体系，那么相关的服务治理就是一项艰巨的任务，具体到服务间超时、重试、熔断、限流、降级、鉴权，以及调用链追踪、服务监控报警等等，都是很大的挑战。","like_count":0},{"had_liked":false,"id":271268,"user_name":"走在久","can_delete":false,"product_type":"c1","uid":2391392,"ip_address":"","ucode":"3290A8D1881261","user_header":"https://static001.geekbang.org/account/avatar/00/24/7d/60/84855db2.jpg","comment_is_top":false,"comment_ctime":1609502953,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1609502953","product_id":100046201,"comment_content":"老师您好，我最近刚接触RPC这个概念，有一些疑问，可能在老师看来会很幼稚，但还是希望老师能够指点一二。<br>RPC有用吗？高效吗？举例来说，主机A希望对变量val 进行自增+1操作，通过RPC调用远程主机B的add()函数实现，把变量val作为参数传递过去，这一过程是值语义进行传递的，也就是说主机B对val进行自增操作后还要返回这个自增的结果，主机A接收到这个结果再对A进行赋值才能达到目的，当要进行操作的对象很复杂时，涉及对象的传递和返回，势必会造成低效甚至很难实现，该如何解决？有没有实现引用语义传递的方法？","like_count":0},{"had_liked":false,"id":263680,"user_name":"忘生","can_delete":false,"product_type":"c1","uid":2269951,"ip_address":"","ucode":"B6DAB06B020B98","user_header":"https://static001.geekbang.org/account/avatar/00/22/a2/ff/f9d2a7f7.jpg","comment_is_top":false,"comment_ctime":1606216456,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1606216456","product_id":100046201,"comment_content":"一：分布式系统不同模块分布在不同服务器上，中间的通信使用到了rpc<br>二：通信效率，准确性，安全性。","like_count":0},{"had_liked":false,"id":260442,"user_name":"未见","can_delete":false,"product_type":"c1","uid":1939320,"ip_address":"","ucode":"EC8F9B0E5F3D9A","user_header":"https://static001.geekbang.org/account/avatar/00/1d/97/78/9229749e.jpg","comment_is_top":false,"comment_ctime":1605007310,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1605007310","product_id":100046201,"comment_content":"1.在哪些地方用了rpc.<br>最近这两天才用的rpc，但只是调用一个接口方法调用另一个服务的方法，但感觉rpc不应该就这么点东西，就买了这门课看看。<br>2.rpc使用过程需要注意的。<br>应该是要设置过期时间吧，或者返回错误消息吧。因为rpc跟rest不同的一点，rpc会等待数据返回。","like_count":0},{"had_liked":false,"id":253438,"user_name":"J.Smile","can_delete":false,"product_type":"c1","uid":1336475,"ip_address":"","ucode":"C4D98DFDBF7584","user_header":"https://static001.geekbang.org/account/avatar/00/14/64/9b/0b578b08.jpg","comment_is_top":false,"comment_ctime":1602740270,"is_pvip":false,"discussion_count":1,"race_medal":0,"score":"1602740270","product_id":100046201,"comment_content":"RPC架构层次：<br>♻️序列化（编解码）框架：作用是将发送的数据从对象转为二进制，如jdk、msgpack、grpc、thrift等。<br>♻️协议：是数据格式的约定，作用将发送的数据按照一定的规约进行序列化为二进制流，有http&#47;tcp&#47;ftp等协议，grpc就是基于http的协议。<br>♻️Proxy：作用是让RPC框架根据调用的服务接口提前生成动态代理实现类，实现类似本地的调用感觉。<br>♻️负载均衡框架：结合服务注册中心实现服务端列表的路由选择和调用，如restTemplate、ribbon、feignClient等。<br>♻️熔断降级框架：实现调用过程中的熔断保护和降级函数。","like_count":0,"discussions":[{"author":{"id":1336475,"avatar":"https://static001.geekbang.org/account/avatar/00/14/64/9b/0b578b08.jpg","nickname":"J.Smile","note":"","ucode":"C4D98DFDBF7584","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":312588,"discussion_content":"这里序列化和编解码应该区分开：\n- 序列化就是将对象转化为二进制数据。\n- 编解码应该就是将二进制进一步封装为固定约定的header+body。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1602741042,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":241863,"user_name":"阿卧","can_delete":false,"product_type":"c1","uid":1229566,"ip_address":"","ucode":"68C0CC25E57707","user_header":"https://static001.geekbang.org/account/avatar/00/12/c2/fe/038a076e.jpg","comment_is_top":false,"comment_ctime":1597473704,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1597473704","product_id":100046201,"comment_content":"使用rpc过程中要注意哪些问题<br>1. 服务提供者要保证接口的qps，做好限流等<br>2. 服务调用端设置请求的超时时间、降级策略<br>3. 服务调用时保证请求能够均匀分配（负载均衡）<br>4. 做好服务监控、预警、快速扩容、缩容等","like_count":0},{"had_liked":false,"id":232910,"user_name":"见南山","can_delete":false,"product_type":"c1","uid":1118111,"ip_address":"","ucode":"6A8BB82B7573CA","user_header":"https://static001.geekbang.org/account/avatar/00/11/0f/9f/f4b06bd5.jpg","comment_is_top":false,"comment_ctime":1594167527,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1594167527","product_id":100046201,"comment_content":"RPC远程过程调用。RPC框架帮助屏蔽底层网络通讯细节，经过序列化反序列化-网络编码解码-网络的流程通信。主要用于服务间通信","like_count":0},{"had_liked":false,"id":226067,"user_name":"希恩","can_delete":false,"product_type":"c1","uid":1494523,"ip_address":"","ucode":"68DA017C8143B1","user_header":"https://static001.geekbang.org/account/avatar/00/16/cd/fb/490e31a7.jpg","comment_is_top":false,"comment_ctime":1591944624,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1591944624","product_id":100046201,"comment_content":"老师，我是做c++的，我发现c++的接口和java的接口区别好大，比如c++下没有NameResolver这个接口","like_count":0},{"had_liked":false,"id":216894,"user_name":"蔡佳伟","can_delete":false,"product_type":"c1","uid":1997605,"ip_address":"","ucode":"D7528B73994578","user_header":"","comment_is_top":false,"comment_ctime":1589363881,"is_pvip":false,"replies":[{"id":"80429","content":"👍","user_name":"作者回复","user_name_real":"何小锋","uid":"1541007","ctime":1589499680,"ip_address":"","comment_id":216894,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1589363881","product_id":100046201,"comment_content":"看完动手做一个！","like_count":0,"discussions":[{"author":{"id":1541007,"avatar":"https://static001.geekbang.org/account/avatar/00/17/83/8f/8471d633.jpg","nickname":"何小锋","note":"","ucode":"E9B3B4A1B75D8B","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":494980,"discussion_content":"👍","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1589499680,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":216038,"user_name":"Coder","can_delete":false,"product_type":"c1","uid":1251224,"ip_address":"","ucode":"70A8F12B864E4D","user_header":"https://static001.geekbang.org/account/avatar/00/13/17/98/5386341d.jpg","comment_is_top":false,"comment_ctime":1589172833,"is_pvip":false,"replies":[{"id":"80430","content":"可以考虑通过服务发现来解决","user_name":"作者回复","user_name_real":"何小锋","uid":"1541007","ctime":1589499757,"ip_address":"","comment_id":216038,"utype":1}],"discussion_count":2,"race_medal":0,"score":"1589172833","product_id":100046201,"comment_content":"请教一个问题，<br>调用方发起了一个请求K， 但是服务提供方是一个安装在分布式环境下每台主机上的一个程序。在不同的机器上安装不同的版本，比如版本1只实现了A,B请求， 版本2 实现了A,B,C请求，版本3实现了A,B,C,K请求。调用方对所有服务方机器进行调用，取得结果。那么没有实现k请求的机器，就会一直没有响应。这种问题怎么处理呢？ 是在调用方加上检查protocol版本检查，装了什么版本的机器发什么请求，还是在服务提供方那里，对不能识别的RPC请求，全部直接报错？","like_count":0,"discussions":[{"author":{"id":1541007,"avatar":"https://static001.geekbang.org/account/avatar/00/17/83/8f/8471d633.jpg","nickname":"何小锋","note":"","ucode":"E9B3B4A1B75D8B","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":494648,"discussion_content":"可以考虑通过服务发现来解决","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1589499757,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1153391,"avatar":"https://static001.geekbang.org/account/avatar/00/11/99/6f/88886cf3.jpg","nickname":"陌上","note":"","ucode":"F3CAC97626E83C","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":286969,"discussion_content":"服务注册和服务订阅机制，Pub/Sub","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1593335832,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":214592,"user_name":"winner","can_delete":false,"product_type":"c1","uid":1986314,"ip_address":"","ucode":"E077D3CEA57DEC","user_header":"","comment_is_top":false,"comment_ctime":1588769702,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1588769702","product_id":100046201,"comment_content":"我们项目与项目之间互相调用的方法使用了rpc,我觉得网络是使用rpc 调用时需要注意的问题","like_count":0},{"had_liked":false,"id":213827,"user_name":"Goslly","can_delete":false,"product_type":"c1","uid":1636659,"ip_address":"","ucode":"8F868DAF3275CD","user_header":"https://static001.geekbang.org/account/avatar/00/18/f9/33/17246ab9.jpg","comment_is_top":false,"comment_ctime":1588571784,"is_pvip":false,"replies":[{"id":"80436","content":"可以绕过去","user_name":"作者回复","user_name_real":"何小锋","uid":"1541007","ctime":1589500015,"ip_address":"","comment_id":213827,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1588571784","product_id":100046201,"comment_content":"服务提供方调用方法的时候，不一定非得是反射吧？！","like_count":0,"discussions":[{"author":{"id":1541007,"avatar":"https://static001.geekbang.org/account/avatar/00/17/83/8f/8471d633.jpg","nickname":"何小锋","note":"","ucode":"E9B3B4A1B75D8B","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":493880,"discussion_content":"可以绕过去","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1589500015,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":209020,"user_name":"Brave Shine","can_delete":false,"product_type":"c1","uid":1222003,"ip_address":"","ucode":"CBB1BAF89DB936","user_header":"https://static001.geekbang.org/account/avatar/00/12/a5/73/3ddc7c77.jpg","comment_is_top":false,"comment_ctime":1587481080,"is_pvip":false,"discussion_count":1,"race_medal":0,"score":"1587481080","product_id":100046201,"comment_content":"显然uds也属于rpc，远程过程的调用也不仅仅是网络","like_count":0,"discussions":[{"author":{"id":1876974,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/Q3auHgzwzM7ibQdsjXeG9eibBAQ8JPzhtaJj8P6YKeYjsg22qUCyGM9nOZkD0VKb4L1YyqBIy0kja6RFUf28Diar1Y6Wr6IhMZp/132","nickname":"Geek_f49323","note":"","ucode":"0B771719D1407E","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":258655,"discussion_content":"socket提供了网络的抽象，本地网络也是网络。","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1588709934,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":206526,"user_name":"密码123456","can_delete":false,"product_type":"c1","uid":1126593,"ip_address":"","ucode":"9889463CC0EA71","user_header":"https://static001.geekbang.org/account/avatar/00/11/30/c1/2dde6700.jpg","comment_is_top":false,"comment_ctime":1586875034,"is_pvip":false,"replies":[{"id":"77671","content":"在序列化那讲我有单独讲，希望对你有帮助","user_name":"作者回复","user_name_real":"何小锋","uid":"1541007","ctime":1587270979,"ip_address":"","comment_id":206526,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1586875034","product_id":100046201,"comment_content":"目前在公司用到的rpc，就是feign。遇到的问题，就是复杂泛型转化问题。","like_count":0,"discussions":[{"author":{"id":1541007,"avatar":"https://static001.geekbang.org/account/avatar/00/17/83/8f/8471d633.jpg","nickname":"何小锋","note":"","ucode":"E9B3B4A1B75D8B","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":491819,"discussion_content":"在序列化那讲我有单独讲，希望对你有帮助","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1587270979,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":196613,"user_name":"ant","can_delete":false,"product_type":"c1","uid":1556708,"ip_address":"","ucode":"A39A03AF257471","user_header":"https://wx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTKYLPAlGUWic4yAqsGtEYBSRR7gDjyg9yiaJicNhMwiaNw4rMKQ5DHTfp7gmic0gpqEwCZaou8G6CdHKCg/132","comment_is_top":false,"comment_ctime":1585297289,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1585297289","product_id":100046201,"comment_content":"游戏业务中rpc使用比比皆是，跨服争霸的功能和地图大多都有rpc的应用，而最常见的问题在于rpc请求超时，最尴尬的rpc的结果要在接下来的逻辑中被使用，也就无法异步调用，超时会造成等待和请求的堆积。","like_count":0},{"had_liked":false,"id":191496,"user_name":"旭东(Frank)","can_delete":false,"product_type":"c1","uid":1024486,"ip_address":"","ucode":"176FA629800062","user_header":"https://static001.geekbang.org/account/avatar/00/0f/a1/e6/50da1b2d.jpg","comment_is_top":false,"comment_ctime":1584777780,"is_pvip":false,"replies":[{"id":"73753","content":"其作用就是进程间通信。","user_name":"作者回复","user_name_real":"何小锋","uid":"1541007","ctime":1584942122,"ip_address":"","comment_id":191496,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1584777780","product_id":100046201,"comment_content":"微软称RPC 更倾向于 跨进程的调用","like_count":0,"discussions":[{"author":{"id":1541007,"avatar":"https://static001.geekbang.org/account/avatar/00/17/83/8f/8471d633.jpg","nickname":"何小锋","note":"","ucode":"E9B3B4A1B75D8B","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":488189,"discussion_content":"其作用就是进程间通信。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1584942122,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":191230,"user_name":"winko","can_delete":false,"product_type":"c1","uid":1396317,"ip_address":"","ucode":"7D72341A46A0F0","user_header":"https://static001.geekbang.org/account/avatar/00/15/4e/5d/7cbf9fe1.jpg","comment_is_top":false,"comment_ctime":1584756743,"is_pvip":true,"discussion_count":0,"race_medal":0,"score":"1584756743","product_id":100046201,"comment_content":"很有用，学习了","like_count":0},{"had_liked":false,"id":190076,"user_name":"Geek_90292b","can_delete":false,"product_type":"c1","uid":1923920,"ip_address":"","ucode":"CD4AD39F8A4CE6","user_header":"","comment_is_top":false,"comment_ctime":1584600582,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1584600582","product_id":100046201,"comment_content":"何老师, 因项目原因我们只能用Visual studio 2008 , 到哪儿找这么low 的编译器能用的rpc 呢? 我找到Zeroc Ice 但是几乎下载不下来. github 总断. 百度的只适合linux, 腾讯的不支持多进程. gRpc 编译器版本要求高.","like_count":0},{"had_liked":false,"id":187129,"user_name":"山头","can_delete":false,"product_type":"c1","uid":1610142,"ip_address":"","ucode":"9CD45A7966F37E","user_header":"https://thirdwx.qlogo.cn/mmopen/vi_32/1R7lHGBvwPTVfb3BAQrPX3AhsYWnXyicbUJUYDgWagWxMGTnsNFvKibzeJ8v7fF2vJLQGf2EY9dV07rnn5Mhv9Uw/132","comment_is_top":false,"comment_ctime":1584022370,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1584022370","product_id":100046201,"comment_content":"小峰哥霸气","like_count":0},{"had_liked":false,"id":181060,"user_name":"小伟","can_delete":false,"product_type":"c1","uid":1359701,"ip_address":"","ucode":"124953423491E2","user_header":"https://static001.geekbang.org/account/avatar/00/14/bf/55/198c6104.jpg","comment_is_top":false,"comment_ctime":1582468326,"is_pvip":false,"replies":[{"id":"70300","content":"服务治理，动态配置等等","user_name":"作者回复","user_name_real":"何小锋","uid":"1541007","ctime":1582542558,"ip_address":"","comment_id":181060,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1582468326","product_id":100046201,"comment_content":"一个好的RPC框架需要可灵活配置的协议封装、高效准确的系列化&#47;反序列化、强健高效的底层网络通信。还需要什么其他的呢？","like_count":0,"discussions":[{"author":{"id":1541007,"avatar":"https://static001.geekbang.org/account/avatar/00/17/83/8f/8471d633.jpg","nickname":"何小锋","note":"","ucode":"E9B3B4A1B75D8B","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":484903,"discussion_content":"服务治理，动态配置等等","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1582542558,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":180147,"user_name":"Why","can_delete":false,"product_type":"c1","uid":1878356,"ip_address":"","ucode":"21C4A52D9ED778","user_header":"https://static001.geekbang.org/account/avatar/00/1c/a9/54/8b0d4b0f.jpg","comment_is_top":false,"comment_ctime":1582198854,"is_pvip":false,"replies":[{"id":"70049","content":"调用者请求的数据包里面有协议，接口，分组，方法和参数信息，服务提供者解析出数据包，会从当前服务里面查找对应实例来调用","user_name":"作者回复","user_name_real":"何小锋","uid":"1541007","ctime":1582288831,"ip_address":"","comment_id":180147,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1582198854","product_id":100046201,"comment_content":"dubbo中的RPC实现，提供者的服务和调用者声明的函数是怎么映射的","like_count":0,"discussions":[{"author":{"id":1541007,"avatar":"https://static001.geekbang.org/account/avatar/00/17/83/8f/8471d633.jpg","nickname":"何小锋","note":"","ucode":"E9B3B4A1B75D8B","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":484545,"discussion_content":"调用者请求的数据包里面有协议，接口，分组，方法和参数信息，服务提供者解析出数据包，会从当前服务里面查找对应实例来调用","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1582288831,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":179970,"user_name":"Jackey","can_delete":false,"product_type":"c1","uid":1063751,"ip_address":"","ucode":"125DE81993FEDD","user_header":"https://static001.geekbang.org/account/avatar/00/10/3b/47/f6c772a1.jpg","comment_is_top":false,"comment_ctime":1582130144,"is_pvip":false,"replies":[{"id":"69882","content":"期望对你有帮助","user_name":"作者回复","user_name_real":"何小锋","uid":"1541007","ctime":1582169552,"ip_address":"","comment_id":179970,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1582130144","product_id":100046201,"comment_content":"印象最深的就是redis客户端与服务端的通信，也是因为这个更想深入了解RPC","like_count":0,"discussions":[{"author":{"id":1541007,"avatar":"https://static001.geekbang.org/account/avatar/00/17/83/8f/8471d633.jpg","nickname":"何小锋","note":"","ucode":"E9B3B4A1B75D8B","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":484467,"discussion_content":"期望对你有帮助","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1582169552,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":179590,"user_name":"Geek_zlu","can_delete":false,"product_type":"c1","uid":1564505,"ip_address":"","ucode":"9CAA70940C7A1A","user_header":"","comment_is_top":false,"comment_ctime":1582035580,"is_pvip":false,"replies":[{"id":"69749","content":"你好，geek_zku，根据业务和团队选择合适的技术。","user_name":"作者回复","user_name_real":"何小锋","uid":"1541007","ctime":1582070015,"ip_address":"","comment_id":179590,"utype":1}],"discussion_count":2,"race_medal":0,"score":"1582035580","product_id":100046201,"comment_content":"我们基于springcloud 搭建的分布式系统，远程调用是采用feign client，没有引入rpc框架，对于并发量不高的toB系统，rpc有必要纳入技术选型框架吗？","like_count":0,"discussions":[{"author":{"id":1541007,"avatar":"https://static001.geekbang.org/account/avatar/00/17/83/8f/8471d633.jpg","nickname":"何小锋","note":"","ucode":"E9B3B4A1B75D8B","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":484318,"discussion_content":"你好，geek_zku，根据业务和团队选择合适的技术。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1582070015,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1014680,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/7b/98/8f1aecf4.jpg","nickname":"楼下小黑哥","note":"","ucode":"453B099B0EE52E","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":176912,"discussion_content":"已经基于 Spring cloud 选型开发，流量不大，现阶段可以先不用考虑 rpc。Spring Cloud 全家庭全套方案反正都有","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1582068360,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":179573,"user_name":"张德","can_delete":false,"product_type":"c1","uid":1101929,"ip_address":"","ucode":"31FE63E8725EFC","user_header":"https://static001.geekbang.org/account/avatar/00/10/d0/69/5dbdc245.jpg","comment_is_top":false,"comment_ctime":1582033223,"is_pvip":false,"replies":[{"id":"69752","content":"从处理流程来看都是一样的","user_name":"作者回复","user_name_real":"何小锋","uid":"1541007","ctime":1582070297,"ip_address":"","comment_id":179573,"utype":1}],"discussion_count":4,"race_medal":0,"score":"1582033223","product_id":100046201,"comment_content":"你好  老师 MySQL怎么涉及到rpc了不太明白  能解释一下吗","like_count":0,"discussions":[{"author":{"id":1541007,"avatar":"https://static001.geekbang.org/account/avatar/00/17/83/8f/8471d633.jpg","nickname":"何小锋","note":"","ucode":"E9B3B4A1B75D8B","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":484311,"discussion_content":"从处理流程来看都是一样的","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1582070297,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1464949,"avatar":"https://static001.geekbang.org/account/avatar/00/16/5a/75/a7e79c49.jpg","nickname":"老焦","note":"","ucode":"74DDCA99E5B626","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":178381,"discussion_content":"我们可以把mysql的接口看成一种专用rpc接口。不同于通用rpc接口的是这种专用接口不能（或很难）自行扩展。比如自定义一个新的execute2方法。其实，sql访问框架（如Mybatis）使用底层的sql驱动（如Mysql通过jdbc提供的driver）就实现了同步调用，参数和结果序列化，网络编码，网络通信等功能。这些功能也是rpc所提供的功能的子集。假设你的系统打算采用分库分表的方法来分担数据压力。原来的一个表被拆成了n个，甚至于存在于不同的mysql服务器上。如果你想实现非侵入的调用，从而使得原来的代码不用大规模修改，应该怎么做呢？为了这个目的，你可能需要开发你自己的sql驱动，这样原来透过mybatis的调用就不用修改了。在这个驱动里，你必须决定实际上要访问哪个服务器，读取哪个表。这可以看做rpc中服务治理部分功能的子集。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1582160522,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":2,"child_discussions":[{"author":{"id":1101929,"avatar":"https://static001.geekbang.org/account/avatar/00/10/d0/69/5dbdc245.jpg","nickname":"张德","note":"","ucode":"31FE63E8725EFC","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1464949,"avatar":"https://static001.geekbang.org/account/avatar/00/16/5a/75/a7e79c49.jpg","nickname":"老焦","note":"","ucode":"74DDCA99E5B626","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":181299,"discussion_content":"👍","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1582357985,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":178381,"ip_address":""},"score":181299,"extra":""},{"author":{"id":1101929,"avatar":"https://static001.geekbang.org/account/avatar/00/10/d0/69/5dbdc245.jpg","nickname":"张德","note":"","ucode":"31FE63E8725EFC","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1464949,"avatar":"https://static001.geekbang.org/account/avatar/00/16/5a/75/a7e79c49.jpg","nickname":"老焦","note":"","ucode":"74DDCA99E5B626","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":181300,"discussion_content":"Frank Jiao? ","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1582358021,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":178381,"ip_address":""},"score":181300,"extra":""}]}]},{"had_liked":false,"id":179344,"user_name":"树洞老人","can_delete":false,"product_type":"c1","uid":1783249,"ip_address":"","ucode":"23C53DAFB28A78","user_header":"https://static001.geekbang.org/account/avatar/00/1b/35/d1/12439914.jpg","comment_is_top":false,"comment_ctime":1581987071,"is_pvip":false,"replies":[{"id":"69708","content":"你好，会让你深入了解原理和实战经验","user_name":"作者回复","user_name_real":"何小锋","uid":"1541007","ctime":1582025436,"ip_address":"","comment_id":179344,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1581987071","product_id":100046201,"comment_content":"RPC还是停留在会用的阶段，支持多语言的RPC框架只是大概了解原理，没实际使用过。希望这个专栏有所收获。","like_count":0,"discussions":[{"author":{"id":1541007,"avatar":"https://static001.geekbang.org/account/avatar/00/17/83/8f/8471d633.jpg","nickname":"何小锋","note":"","ucode":"E9B3B4A1B75D8B","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":484216,"discussion_content":"你好，会让你深入了解原理和实战经验","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1582025436,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":179337,"user_name":"lingjiango","can_delete":false,"product_type":"c1","uid":1876016,"ip_address":"","ucode":"202B67F1AACDAB","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/DYAIOgq83eoz2e0Ka1CFfMIgZ8XHaVukpJm0Upibh68Wplru5a6zv0SkibM668tVaIGdMjpUHN8wEmiaTVtWgiahKQ/132","comment_is_top":false,"comment_ctime":1581982983,"is_pvip":false,"replies":[{"id":"69642","content":"你好，这些都是rpc中的问题，超时等异常处理有专门章节讲。","user_name":"作者回复","user_name_real":"何小锋","uid":"1541007","ctime":1581995854,"ip_address":"","comment_id":179337,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1581982983","product_id":100046201,"comment_content":"你应用中有哪些地方用到了 RPC？<br>接口调用用到了RPC，最早是webservice，很老的方式了，中间是AMESB的方式，也很老的方式，现在开始基于HTTP的形式。<br>你认为，RPC 使用过程中需要注意哪些问题？<br>调用超时如何处理；<br>本质上是两个系统或者是网络节点的调用，如果涉及DB处理的话，会有分布式事务的问题.","like_count":0,"discussions":[{"author":{"id":1541007,"avatar":"https://static001.geekbang.org/account/avatar/00/17/83/8f/8471d633.jpg","nickname":"何小锋","note":"","ucode":"E9B3B4A1B75D8B","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":484210,"discussion_content":"你好，这些都是rpc中的问题，超时等异常处理有专门章节讲。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1581995854,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":179206,"user_name":"多襄丸","can_delete":false,"product_type":"c1","uid":1074310,"ip_address":"","ucode":"1AA1497C5A293C","user_header":"https://static001.geekbang.org/account/avatar/00/10/64/86/f5a9403a.jpg","comment_is_top":false,"comment_ctime":1581935918,"is_pvip":false,"replies":[{"id":"69556","content":"你好，gogo。这些交互都涉及到rpc调用。","user_name":"作者回复","user_name_real":"何小锋","uid":"1541007","ctime":1581946594,"ip_address":"","comment_id":179206,"utype":1}],"discussion_count":3,"race_medal":0,"score":"1581935918","product_id":100046201,"comment_content":"1. redis<br>2. mysql<br>3. eureka","like_count":0,"discussions":[{"author":{"id":1541007,"avatar":"https://static001.geekbang.org/account/avatar/00/17/83/8f/8471d633.jpg","nickname":"何小锋","note":"","ucode":"E9B3B4A1B75D8B","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":484142,"discussion_content":"你好，gogo。这些交互都涉及到rpc调用。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1581946594,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1543348,"avatar":"https://static001.geekbang.org/account/avatar/00/17/8c/b4/318ba5ef.jpg","nickname":"OldHemp","note":"","ucode":"8F58DA0BB478F4","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":215676,"discussion_content":"？","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1585370568,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1009422,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/67/0e/c77ad9b1.jpg","nickname":"eason2017","note":"","ucode":"E070BA624FA490","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":175726,"discussion_content":"MYSQL?","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1581992073,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]}]}