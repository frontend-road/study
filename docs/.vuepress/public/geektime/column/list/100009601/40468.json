{"id":40468,"title":"39 | 从小作坊到工厂：什么是Selenium Grid？如何搭建Selenium Grid？","content":"<p>你好，我是茹炳晟，今天我分享的主题是“从小作坊到工厂：什么是Selenium Grid？如何搭建Selenium Grid？”。</p>\n<p>从今天开始，我们就要一起进入测试基础架构这个新的系列了。我将用四篇文章的篇幅，从0到1，为你深入剖析大型互联网企业的测试基础架构设计，以及其原始驱动力，和你探讨测试执行环境设计、测试报告平台设计以及测试基础架构与CI/CD的集成等内容。当然，在这其中还会涉及到很多具有前瞻性的设计创新。</p>\n<p>虽说测试基础架构是资深测试开发人员的必备技能，但此时你可能还并不清楚测试基础架构到底指的是什么？没关系，当你阅读完这个系列的文章之后，相信你一定可以对测试基础架构，以及其关键设计有一个清晰、全面的认识。</p>\n<p>所以，今天我就先和你分享一下，我眼中的测试基础架构到底是指什么？</p>\n<h2>什么是测试基础架构？</h2>\n<p>测试基础架构指的是，执行测试的过程中用到的所有基础硬件设施以及相关的软件设施。因此，我们也把测试基础架构称之为广义的测试执行环境。通常来讲，测试基础架构主要包括以下内容：</p>\n<ul>\n<li>执行测试的机器；</li>\n<li>测试用例代码仓库；</li>\n<li>发起测试执行的Jenkins Job；</li>\n<li>统一的测试执行平台；</li>\n<li>测试用例执行过程中依赖的测试服务，比如提供测试数据的统一测试数据平台、提供测试全局配置的配置服务、生成测试报告的服务等；</li>\n<li>…</li>\n</ul><!-- [[[read_end]]] -->\n<p><strong>由于测试基础架构的核心是围绕测试执行展开的，所以我们今天就先来重点讨论一下“执行测试的机器”部分。</strong></p>\n<p>这部分内容的展开，我会从早期最简单的方法谈起，然后探讨这个方法在实际执行中的弊端，并由此引出我们今天讨论的主角：Selenium Grid。</p>\n<p>先试想一下：你要在一个典型测试场景中，基于某种浏览器去执行Web应用的GUI测试。这时，你首先要做的就是找到相应的机器，并确保上面已经安装了所需的浏览器。如果这台机器上，还没有安装所需浏览器的话，你需要先安装这个浏览器。一切准备就绪后，你就可以使用这台机器执行测试了。</p>\n<p>如果你要执行的测试只需要覆盖一种浏览器的话，那就很简单了，你只要事先准备好一批专门的机器或者虚拟机，然后安装好所需的浏览器就可以了。同时，如果测试用例的数量也不是很多的话，你需要的这批机器或者虚拟机的数量也不会很多。执行测试时，你只要将需要使用的那台机器的地址提供给测试用例就可以了。</p>\n<p>其实，这种模式就是典型的“小作坊”模式。“小作坊”模式的特点就是，人工维护一批数量不多（通常在30台以内）的执行测试的机器，然后按需使用。</p>\n<p>对于小团队来讲，“小作坊”模式的问题并不大。但是，随着测试覆盖率要求的提升，以及测试用例数量的增加，这种“小作坊”模式的弊端就逐渐显现，并被不断放大了。其中，最主要问题体现在以下四个方面：</p>\n<ol>\n<li>\n<p>当Web应用需要进行不同浏览器的兼容性测试时，首先你需要准备很多台机器或者虚拟机，并安装所需的不同浏览器；然后，你要为这些机器建立一个列表，用于记录各台机器安装了什么浏览器；最后，你在执行测试时，需要先查看机器列表以选择合适的测试执行机。</p>\n</li>\n<li>\n<p>当Web应用需要进行同一浏览器的不同版本的兼容性测试时，你同样需要准备很多安装有同一浏览器的不同版本的测试执行机，并为这些机器建立列表，记录各台机器安装的浏览器版本号，然后执行测试时先查看列表以选择合适的测试执行机。</p>\n</li>\n<li>\n<p>测试执行机的机器名或者IP发生变化，以及需要新增或者减少测试机时，都需要人工维护这些机器列表。很显然，这种维护方式效率低下，且容易出错。</p>\n</li>\n<li>\n<p>在GUI自动化测试用例的数量比较多的情况下，你不希望只用一台测试执行机以串行的方式执行测试用例，而是希望可以用上所有可用的测试执行机，以并发的方式执行测试用例，以加快测试速度。为了达到这个目的，你还是需要人工管理这些测试用例和测试执行机的对应关系。</p>\n</li>\n</ol>\n<p><strong>这四种情况的问题，可以归结为：测试执行机与测试用例的关系是不透明的，即每个测试用例都需要人为设置测试执行机。</strong></p>\n<p>为了改善这种局面，Selenium Grid就应运而生了。</p>\n<ul>\n<li>一方面，使用Selenium Grid可以让测试机器的选择变得“透明”。也就是说，我们只要在执行测试用例时指定需要的浏览器版本即可，而无需关心如何找到合适的测试执行机。因为，这寻找符合要求的测试执行机的工作，Selenium Grid可以帮你完成。</li>\n<li>另一方面，Selenium Grid的架构特点，天生就能很好地支持测试用例的并发执行。</li>\n</ul>\n<p>接下来，我就和你详细聊聊到底什么是Selenium Grid，Selenium Grid的架构是什么样的。</p>\n<p><img src=\"https://static001.geekbang.org/resource/image/30/bf/3077a24abcd93f063c7510fb81ccf9bf.png?wh=801*413\" alt=\"\" /></p>\n<center>图1 Selenium Grid的架构</center>\n<p>从本质上讲，Selenium Grid是一种可以并发执行GUI测试用例的测试执行机的集群环境，采用的是HUB和Node模式。这个概念有些晦涩难懂，我来举个例子吧。</p>\n<p>假如，现在有个律师事务所要接受外来业务，那么就会有一个老大专门负责对外接受任务。收到任务后，这个老大会根据任务的具体要求找到合适的手下，然后将该任务分发给手下去执行。</p>\n<p>那么，这个老大是怎么知道哪个手下最适合处理这个任务呢？其实，这个老大手下的每个人都会事先报备自己具备的技能，这样老大在分发任务的时候，就可以做到“有的放矢”了。</p>\n<p>现在，我们再回到Selenium Grid。Selenium Grid由两部分构成，一部分是Selenium Hub，另一部分是Selenium Node。</p>\n<p>将这个律师事务所的例子，与Selenium Grid做个类比，它们的对应关系是：</p>\n<ul>\n<li>这个对外的老大对应的是Selenium Hub；</li>\n<li>具体执行任务的手下，对应的是Selenium Node；</li>\n<li>老大接到任务后分配给手下执行的过程，就是Selenium Hub将测试分配到Selenium Node执行的过程；</li>\n<li>老大的手下向他报备自己技能的过程，就是Selenium Node向Selenium Hub注册的过程。</li>\n</ul>\n<p>也就是说，<strong>Selenium Hub用来管理各个Selenium Node的注册信息和状态信息，并且接收远程客户端代码的测试调用请求，并把请求命令转发给符合要求的Selenium Node执行。</strong></p>\n<p>现在，我们已经搞明白了什么是Selenium Grid，以及Selenium Grid的工作模式。Selenium Grid的功能是不是很酷炫呢？那么，Selenium Grid的搭建是不是很难？接下来，我们就看看如何搭建自己的Selenium Grid吧。</p>\n<p>在这里，我会依次给你介绍传统的Selenium Grid和基于Docker的Selenium Grid的搭建方法。通过这部分内容我要达到的目的是，可以帮你搭建起属于自己的Selenium Grid。</p>\n<h2>传统Selenium Grid的搭建方法</h2>\n<p>我将通过一个实例，和你分享如何搭建一个传统的Selenium Grid。</p>\n<p>现在，我们的需求是，搭建一个具有1个Node的Selenium Grid。那么通常来讲我们需要2台机器，其中一台作为Hub，另外一台作为Node，并要求这两台机器已经具备了Java执行环境。</p>\n<ol>\n<li>\n<p>通过官网下载selenium-server-standalone-<version>.jar文件。这里需要注意的是，不管是Hub还是Node，都使用同一个JAR包启动，只是启动参数不同而已。</p>\n</li>\n<li>\n<p>将下载的selenium-server-standalone-<version>.jar文件分别复制到两台机器上。</p>\n</li>\n<li>\n<p>选定其中一台机器作为Selenium Hub，并在这台机器的命令行中执行以下命令：</p>\n</li>\n</ol>\n<pre><code>java -jar selenium-server-standalone-&lt;version&gt;.jar -role hub\n</code></pre>\n<p>在这条命令中，“-role hub”的作用是将该机器启动为Selenium Hub。启动完成后，这台机器默认对外提供服务的端口是4444。</p>\n<p>然后，你就可以在这台机器上通过<a href=\"http://localhost:4444/grid/console\">http://localhost:4444/grid/console</a>观察Selenium Hub的状态，也可以在其他机器上通过http://&lt;Hub_IP&gt;:4444/grid/console观察Selenium Hub的状态。其中，&lt;Hub_IP&gt;是这台Selenium Hub机器的IP地址。由于此时还没有Node注册到该Hub上，所以你看不到任何的Node信息。</p>\n<p>启动过程和状态信息，分别如图2、3所示。</p>\n<p><img src=\"https://static001.geekbang.org/resource/image/a2/98/a275424067255c72da249734a203ba98.png?wh=902*124\" alt=\"\" /></p>\n<center>图2 Selenium Hub启动过程</center>\n<p><img src=\"https://static001.geekbang.org/resource/image/3d/15/3d73539d2b14aa45d4f2b19334eb9a15.png?wh=582*290\" alt=\"\" /></p>\n<center>图3 没有挂载任何Node的Selenium Hub</center>\n<ol start=\"4\">\n<li>在另一台作为Selenium Node的机器上执行以下命令：</li>\n</ol>\n<pre><code>java -jar selenium-server-standalone-&lt;version&gt;.jar -role node -hub http:// &lt;Hub_IP&gt;:4444/grid/register\n</code></pre>\n<p>这条命令中，“-role node”的作用是，将该机器启动为Selenium Node，并且通过“-hub”指定了Selenium Hub的节点注册URL。</p>\n<p>执行成功后，你可以再次打开http://&lt;Hub_IP&gt;:4444/grid/console观察Selenium Hub的状态。此时，你可以看到已经有一个Node挂载到了Hub上。这个Node，就是用来实际执行测试的机器了。并且，这个Node上已经缺省提供了5个Firefox浏览器的实例、5个Chrome浏览器的实例和1个IE浏览器的实例，同时默认允许的并发测试用例数是5个。</p>\n<p>如果你想自己配置这些内容，可以在启动Node的时候提供不同的启动参数。具体可以指定哪些参数，你可以参考<a href=\"https://github.com/SeleniumHQ/selenium/wiki/Grid2\">Selenium Grid</a>的官方文档。</p>\n<p>如图4所示为Node的启动过程，如图5所示为在Hub端注册Node的过程，如图6所示为挂载完Node后Selenium Hub的状态。</p>\n<p><img src=\"https://static001.geekbang.org/resource/image/db/96/db5edbf3d119ac17710a9640d905c596.png?wh=902*208\" alt=\"\" /></p>\n<center>图4 Node的启动过程</center>\n<p><img src=\"https://static001.geekbang.org/resource/image/3e/4b/3e4133f06d2cc5d812cef1f8f375c74b.png?wh=902*140\" alt=\"\" /></p>\n<center>图5 Hub端Node注册的过程</center>\n<p><img src=\"https://static001.geekbang.org/resource/image/58/06/58bf48cb7af0db82546902a3a5c99406.png?wh=622*326\" alt=\"\" /></p>\n<center>图6 挂载完Node后的Selenium Hub状态</center>\n<ol start=\"5\">\n<li>完成上述操作后，在测试用例中通过以下代码将测试指向Selenium Hub，然后由Selenium Hub完成实际测试执行机的分配与调度工作。其中，最关键的部分是，创建RemoteWebDriver实例的第一个参数，这个参数不再是一个具体的测试执行机的IP地址或者名字了，而是Selenium Hub的地址。</li>\n</ol>\n<pre><code>DesiredCapabilities capability = DesiredCapabilities.firefox();\nWebDriver driver = new RemoteWebDriver(new URL(&quot;http://&lt;Hub_IP&gt;:4444/wd/hub&quot;), capability);\n</code></pre>\n<p>至此，我们就已经完成了Selenium Grid的搭建工作。正如上面的五个步骤所示，这个搭建过程非常简单。接下来，你就自己动手尝试一下吧。</p>\n<h2>基于Docker的Selenium Grid的搭建方法</h2>\n<p>目前，Docker技术的广泛普及，再加上它的轻量级、灵活性等诸多优点，使得很多软件都出现了Docker版本。当然，Selenium Grid也不例外。所以，我也会在这里和你简单介绍一下基于Docker的Selenium Grid搭建过程。</p>\n<p>在这个搭建过程中，你将会发现基于Docker运行Selenium Grid的话，机器的利用率会得到大幅提高。因为，一台实体机或者虚拟机，往往可以运行非常多的Docker实例数量，而且Docker实例的启动速度也很快。因此，相对于虚拟机或者实体机方案而言，Docker方案可以更高效地创建Node。</p>\n<p>接下来，我们就一起看看如何基于Docker来搭建Selenium Grid吧。</p>\n<p>在基于Docker搭建Selenium Grid之前，你需要先安装Docker环境。具体安装方法，你可以参考<a href=\"https://docs.docker.com/get-started/\">Docker的官方文</a><a href=\"https://docs.docker.com/get-started/\">档</a>。</p>\n<p>接下来，你就可以通过以下命令分别启动Selenium Hub和Selenium Node了。</p>\n<pre><code>#创建了Docker的网络grid\n$ docker network create grid\n\n#以Docker容器的方式启动Selenium Hub，并且对外暴露了4444端口\n$ docker run -d -p 4444:4444 --net grid --name selenium-hub selenium/hub:3.14.0-europium\n\n#以Docker容器的方式启动并挂载了Chrome的Selenium Node\n$ docker run -d --net grid -e HUB_HOST=selenium-hub -v /dev/shm:/dev/shm selenium/node-chrome:3.14.0-europium\n\n#以Docker容器的方式启动并挂载了Firefox的Selenium Node\n$ docker run -d --net grid -e HUB_HOST=selenium-hub -v /dev/shm:/dev/shm selenium/node-firefox:3.14.0-europium\n</code></pre>\n<p>相比基于实体机或者虚拟机搭建Selenium Grid的方法，基于Docker的方式灵活性更大、启动效率也更高、可维护性也更好。而且，在更高级的应用中，比如当我们需要根据测试用例的排队情况，动态增加Selenium Grid中的Node数量的时候，Docker都将是最好的选择。关于这部分内容具体的细节，我会在后面两篇文章中详细展开。</p>\n<h2>总结</h2>\n<p>今天，我从测试基础架构的概念讲起，并和你分享了传统Selenium Grid 和基于Docker的Selenium Grid的搭建方法。</p>\n<p>首先，测试基础架构指的是，执行测试的过程中用到的所有基础硬件设施以及相关的软件设施，包括了执行测试的机器、测试用例代码仓库、统一的测试执行平台等。而，今天我针对测试执行的机器这个主题展开了分享。</p>\n<p>在最早起的测试执行场景中，采用的方法是由人工维护一批数量不多（通常在30台以内）的执行测试的机器，然后按需使用，完成整个测试过程，这也是典型的“小作坊”模式。随着测试需求日益复杂，“小作坊”模式的缺点也暴露无疑，其中最主要的问题在于：测试执行机和测试用例的对应关系不“透明”，以及由此带来的测试用例并发执行难以实施的问题。</p>\n<p>于是，为了解决这个问题，就出现了Selenium Grid。简单地说，Selenium Grid就是一种可以并发执行GUI测试用例的测试执行机的集群环境。由于它采用的是Hub和Node的架构模式，所以很容易就解决了“小作坊”模式的测试用例与测试执行机间的不“透明”关系，以及测试用例并发执行的问题。</p>\n<p>而Selenium Grid的搭建也是非常简单。其中，传统Selenium Grid搭建时只要在理解了Selenium Grid架构之后，通过Java命令分别启动Hub和Node即可；而基于Docker的Selenium Grid在搭建时，就更简单了，直接通过Docker命令运行已经封装好的Image就可以了。</p>\n<p>这么来看，Selenium Grid功能强大，搭建方法更是简单，也因此已经广泛应用于测试执行环境的搭建中。</p>\n<h2>思考题</h2>\n<p>目前Selenium Grid已经有Docker的版本了，你有没有考虑过可以在云端，比如PCF、GCP、AWS上搭建Selenium Grid呢？在我看来，这将是未来的主流方案，你也是类似的看法吗？</p>\n<p>感谢你的收听，欢迎你给我留言。</p>\n<p></p>\n","comments":[{"had_liked":false,"id":28016,"user_name":"元让","can_delete":false,"product_type":"c1","uid":1007149,"ip_address":"","ucode":"C84195CE61A643","user_header":"https://static001.geekbang.org/account/avatar/00/0f/5e/2d/99b4675c.jpg","comment_is_top":false,"comment_ctime":1537975777,"is_pvip":false,"replies":[{"id":"10858","content":"selenium grid和selenium 2.0&#47;3.0是两种完全不同的东西，虽然都有selenium这个单词，但是两者之间没有可比性，grid是目前最常用也是主流的测试分布式执行架构，其可以和selenium1&#47;2&#47;3结合使用。而selenium1&#47;2&#47;3是gui自动化框架，1的原理和2和3的差别较大，具体可以参考之前的文章。至于你说grid是非常老的技术，不知道是从哪个角度来讲的，据我所知目前为止好像没有超过grid的测试执行解决方案。","user_name":"作者回复","user_name_real":"dhrbc","uid":"1002226","ctime":1538699782,"ip_address":"","comment_id":28016,"utype":1}],"discussion_count":2,"race_medal":0,"score":"65962485217","product_id":100009601,"comment_content":"Selenium  Grid应该算是非常老的技术，在selenium 2.0包括后面的webdriver 出来后就应该应用比较少了，据说现在都有selenium 3.0了，为什么还用这么老的技术做UI 自动化","like_count":16,"discussions":[{"author":{"id":1002226,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/4a/f2/6ea13762.jpg","nickname":"茹炳晟","note":"","ucode":"1361AE1931E2DD","race_medal":0,"user_type":2,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":425118,"discussion_content":"selenium grid和selenium 2.0/3.0是两种完全不同的东西，虽然都有selenium这个单词，但是两者之间没有可比性，grid是目前最常用也是主流的测试分布式执行架构，其可以和selenium1/2/3结合使用。而selenium1/2/3是gui自动化框架，1的原理和2和3的差别较大，具体可以参考之前的文章。至于你说grid是非常老的技术，不知道是从哪个角度来讲的，据我所知目前为止好像没有超过grid的测试执行解决方案。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1538699782,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1628299,"avatar":"https://static001.geekbang.org/account/avatar/00/18/d8/8b/d81769bf.jpg","nickname":"太匆匆","note":"","ucode":"2F3F273CB65F5D","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":348915,"discussion_content":"迄今为止，Selenium仍然是使用最多、最为成熟的UI自动化框架吧，我们去做自动化测试持续关注新技术即可，但也无需盲目跟风新技术。","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1612774691,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":240009,"user_name":"捷后愚生","can_delete":false,"product_type":"c1","uid":1170483,"ip_address":"","ucode":"A1F935D39C8488","user_header":"https://static001.geekbang.org/account/avatar/00/11/dc/33/a68c6b26.jpg","comment_is_top":false,"comment_ctime":1596712889,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"35956451257","product_id":100009601,"comment_content":"在学习selenium的时候，知道selenium有三大组件，SeleniumIDE、Selenium WebDriver、Selenoium Grid，重点学习了Selenium WebDriver，这篇文章让自己更加深入理解Selenoium Grid。","like_count":8},{"had_liked":false,"id":27515,"user_name":"Ping","can_delete":false,"product_type":"c1","uid":1104951,"ip_address":"","ucode":"08592BF6EC217C","user_header":"https://static001.geekbang.org/account/avatar/00/10/dc/37/ca8f0979.jpg","comment_is_top":false,"comment_ctime":1537917783,"is_pvip":false,"replies":[{"id":"10000","content":"你的问题和selenium grid本身不相关，grid只是提供测试的执行环境，而和每个测试用例内部的执行顺序以及数据依赖没有关系，你的问题是在如何设计场景结偶的测试用例上，建议你参考前面gui和api测试设计的文章，比如如何做测试分层等等","user_name":"作者回复","user_name_real":"dhrbc","uid":"1002226","ctime":1537941530,"ip_address":"","comment_id":27515,"utype":1}],"discussion_count":1,"race_medal":0,"score":"23012754263","product_id":100009601,"comment_content":"针对互联网应用的测试场景，selenium grid的方式（尤其是基于docker部署，以及未来云部署）是可以提供更灵活的测试发布，更快的执行效率。我的疑问是：如果测试场景严重依赖于执行顺序，每个场景都对数据强依赖且消耗系统资源较多的情况下，如何更好的利用selenium grid来有效提升执行效率呢？","like_count":6,"discussions":[{"author":{"id":1002226,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/4a/f2/6ea13762.jpg","nickname":"茹炳晟","note":"","ucode":"1361AE1931E2DD","race_medal":0,"user_type":2,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":424933,"discussion_content":"你的问题和selenium grid本身不相关，grid只是提供测试的执行环境，而和每个测试用例内部的执行顺序以及数据依赖没有关系，你的问题是在如何设计场景结偶的测试用例上，建议你参考前面gui和api测试设计的文章，比如如何做测试分层等等","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1537941530,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":126655,"user_name":"(╯‵□′)╯︵┻━┻","can_delete":false,"product_type":"c1","uid":1387589,"ip_address":"","ucode":"10A03AB1CB6B42","user_header":"https://static001.geekbang.org/account/avatar/00/15/2c/45/e8bcf142.jpg","comment_is_top":false,"comment_ctime":1566442035,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"14451343923","product_id":100009601,"comment_content":"平台可以提供一站式selenium grid方案，包括node资源的自动创建与管理。从基础设施层到应用层都可以与云平台的其他工具整合，包括与部署在云端的CI&#47;CD流水线进行集成。","like_count":4},{"had_liked":false,"id":135628,"user_name":"Rachel_fang","can_delete":false,"product_type":"c1","uid":1004050,"ip_address":"","ucode":"9DE25BDC220185","user_header":"https://static001.geekbang.org/account/avatar/00/0f/52/12/e0460331.jpg","comment_is_top":false,"comment_ctime":1569231330,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"10159165922","product_id":100009601,"comment_content":"老师主要讲的还是 grid的 分布式架构设计，如果要开发测试执行平台 可以参考这个架构设计","like_count":2},{"had_liked":false,"id":57981,"user_name":"阿嬷","can_delete":false,"product_type":"c1","uid":1324085,"ip_address":"","ucode":"7812E1A15BAEFC","user_header":"https://static001.geekbang.org/account/avatar/00/14/34/35/50a6adc3.jpg","comment_is_top":false,"comment_ctime":1546956172,"is_pvip":false,"replies":[{"id":"21041","content":"是真实的浏览器实例，具体可以参考selenium grid的官方文档，登记是在挂node的时候完成的，版本就是你在机器上安装的浏览器版本，可以多个","user_name":"作者回复","user_name_real":"dhrbc","uid":"1002226","ctime":1547078449,"ip_address":"","comment_id":57981,"utype":1}],"discussion_count":1,"race_medal":0,"score":"10136890764","product_id":100009601,"comment_content":"node上的浏览器实例是真实存在在机器上的吗？如何进行版本控制和登记呢？","like_count":2,"discussions":[{"author":{"id":1002226,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/4a/f2/6ea13762.jpg","nickname":"茹炳晟","note":"","ucode":"1361AE1931E2DD","race_medal":0,"user_type":2,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":435860,"discussion_content":"是真实的浏览器实例，具体可以参考selenium grid的官方文档，登记是在挂node的时候完成的，版本就是你在机器上安装的浏览器版本，可以多个","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1547078449,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":36232,"user_name":"楚耳","can_delete":false,"product_type":"c1","uid":1068208,"ip_address":"","ucode":"7661633F3297C6","user_header":"https://static001.geekbang.org/account/avatar/00/10/4c/b0/f22017b0.jpg","comment_is_top":false,"comment_ctime":1540988273,"is_pvip":false,"discussion_count":1,"race_medal":0,"score":"10130922865","product_id":100009601,"comment_content":"老师，我看到我们运维用的是Kubernetes这套东西","like_count":2,"discussions":[{"author":{"id":1330305,"avatar":"https://static001.geekbang.org/account/avatar/00/14/4c/81/34398512.jpg","nickname":"PCC","note":"","ucode":"BA27B7737E232B","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":326669,"discussion_content":"可以把gui测试封装在一个docker内，然后用k8s实现调度","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1605658735,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":192396,"user_name":"Geek_bd7eb1","can_delete":false,"product_type":"c1","uid":1250635,"ip_address":"","ucode":"E7B29EFBB41D64","user_header":"https://static001.geekbang.org/account/avatar/00/13/15/4b/dc4fb21c.jpg","comment_is_top":false,"comment_ctime":1584848663,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"5879815959","product_id":100009601,"comment_content":"感谢分享，对于grid的理解加深了","like_count":1},{"had_liked":false,"id":94856,"user_name":"口水窝","can_delete":false,"product_type":"c1","uid":1004838,"ip_address":"","ucode":"6028B5AA10D8A1","user_header":"https://static001.geekbang.org/account/avatar/00/0f/55/26/154f9578.jpg","comment_is_top":false,"comment_ctime":1557910555,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"5852877851","product_id":100009601,"comment_content":"以前搭建过Selenium Grid的传统方式，对于Docker，以前做jmeter性能测试的时候，用过，但是只了解一部分原理，希望后面再深入学习网站内容，在理解的基础上搭建更易用的环境。","like_count":1},{"had_liked":false,"id":59621,"user_name":"年轻人的瞎折腾^.","can_delete":false,"product_type":"c1","uid":1266462,"ip_address":"","ucode":"179997C9622609","user_header":"https://static001.geekbang.org/account/avatar/00/13/53/1e/7d098b33.jpg","comment_is_top":false,"comment_ctime":1547392970,"is_pvip":false,"replies":[{"id":"26067","content":"不适合，但是可以用docker来做API的测试发起机","user_name":"作者回复","user_name_real":"dhrbc","uid":"1002226","ctime":1551502834,"ip_address":"","comment_id":59621,"utype":1}],"discussion_count":1,"race_medal":1,"score":"5842360266","product_id":100009601,"comment_content":"请问做接口自动化的话用selenium brid 版本docker的框架吗？","like_count":1,"discussions":[{"author":{"id":1002226,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/4a/f2/6ea13762.jpg","nickname":"茹炳晟","note":"","ucode":"1361AE1931E2DD","race_medal":0,"user_type":2,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":436369,"discussion_content":"不适合，但是可以用docker来做API的测试发起机","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1551502834,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":28865,"user_name":"Joey","can_delete":false,"product_type":"c1","uid":1103490,"ip_address":"","ucode":"D804B61B9A1645","user_header":"https://static001.geekbang.org/account/avatar/00/10/d6/82/14583cca.jpg","comment_is_top":false,"comment_ctime":1538183898,"is_pvip":false,"replies":[{"id":"11369","content":"ui自动化的对象就是界面，所以是需要有界面的测试才适合用ui测试","user_name":"作者回复","user_name_real":"dhrbc","uid":"1002226","ctime":1539252020,"ip_address":"","comment_id":28865,"utype":1}],"discussion_count":1,"race_medal":0,"score":"5833151194","product_id":100009601,"comment_content":"写ui自动化是否都需要有可视化界面，比如我公司都是天翼云的centos服务器，能否做？","like_count":1,"discussions":[{"author":{"id":1002226,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/4a/f2/6ea13762.jpg","nickname":"茹炳晟","note":"","ucode":"1361AE1931E2DD","race_medal":0,"user_type":2,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":425401,"discussion_content":"ui自动化的对象就是界面，所以是需要有界面的测试才适合用ui测试","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1539252020,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":28173,"user_name":"简","can_delete":false,"product_type":"c1","uid":1132597,"ip_address":"","ucode":"52169AA28EB74C","user_header":"https://static001.geekbang.org/account/avatar/00/11/48/35/2fe03602.jpg","comment_is_top":false,"comment_ctime":1538015135,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"5832982431","product_id":100009601,"comment_content":"老师好，最近老板给了一个竞品APP,让测试对比一下优劣势，我主要想到了以下几点去对比：功能完整度、用户体验、加载速度（静态资源、接口）、同等关键字的搜索排名、是否有对广告投入数据的采集与分析，从测试的角度还有什么可以对比分析的吗？（我是后端开发）<br>关于加载速度与性能优化这一块，请问有什么比较好的监控对比工具吗？(目前是使用fiddler进行抓包查看)","like_count":1},{"had_liked":false,"id":336987,"user_name":"小呀么小二郎","can_delete":false,"product_type":"c1","uid":1326905,"ip_address":"","ucode":"149540DCFDF43E","user_header":"https://static001.geekbang.org/account/avatar/00/14/3f/39/b1558fc9.jpg","comment_is_top":false,"comment_ctime":1646537928,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1646537928","product_id":100009601,"comment_content":"打卡学习～","like_count":0},{"had_liked":false,"id":257309,"user_name":"凯耐","can_delete":false,"product_type":"c1","uid":1672674,"ip_address":"","ucode":"DF9C2170509BD0","user_header":"https://static001.geekbang.org/account/avatar/00/19/85/e2/540b91fa.jpg","comment_is_top":false,"comment_ctime":1603935032,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1603935032","product_id":100009601,"comment_content":"以前公司用过这个测试基础架构做UI自动化，不知道Selenium Grid干嘛用的，直接用Git把代码push到gitlab远程仓库，jenkins一键触发生成测试报告，老师我想问一下UI自动化代码只需要部署到hub节点吗，运行后hub节点把信息推到node节点触发node节点运行测试用例，hub节点不执行用例只对node节点信息管理是这样吗？","like_count":0},{"had_liked":false,"id":80461,"user_name":"王大华","can_delete":false,"product_type":"c1","uid":1163590,"ip_address":"","ucode":"7AD5C4B8E93B0F","user_header":"https://static001.geekbang.org/account/avatar/00/11/c1/46/a81f7402.jpg","comment_is_top":false,"comment_ctime":1553663926,"is_pvip":false,"discussion_count":1,"race_medal":0,"score":"1553663926","product_id":100009601,"comment_content":"老师您好，看到docker方式启动可以通过-v设置浏览器的类型，但是传统方式官方文档中没有看到这个参数，请问传统方式启动可以支持-v指定浏览器的参数吗?","like_count":0,"discussions":[{"author":{"id":1026182,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/a8/86/701f461b.jpg","nickname":"xulz","note":"","ucode":"BF97067C2407D6","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":6376,"discussion_content":"-v是docker的命令行参数，用来加载磁盘文件夹映射。和浏览器无关","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1566874220,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":73964,"user_name":"小葱拌豆腐","can_delete":false,"product_type":"c1","uid":1341266,"ip_address":"","ucode":"086E3D86D6BC20","user_header":"https://static001.geekbang.org/account/avatar/00/14/77/52/a51b99f2.jpg","comment_is_top":false,"comment_ctime":1552047700,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1552047700","product_id":100009601,"comment_content":"除了替代web浏览器，支持替代移动设备的浏览器吗？","like_count":0},{"had_liked":false,"id":27994,"user_name":"一池浮萍","can_delete":false,"product_type":"c1","uid":1164560,"ip_address":"","ucode":"DC65B8CF1C870B","user_header":"https://static001.geekbang.org/account/avatar/00/11/c5/10/c0e61c5a.jpg","comment_is_top":false,"comment_ctime":1537973708,"is_pvip":false,"replies":[{"id":"10859","content":"感谢支持","user_name":"作者回复","user_name_real":"dhrbc","uid":"1002226","ctime":1538699791,"ip_address":"","comment_id":27994,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1537973708","product_id":100009601,"comment_content":"感谢老师的分享","like_count":0,"discussions":[{"author":{"id":1002226,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/4a/f2/6ea13762.jpg","nickname":"茹炳晟","note":"","ucode":"1361AE1931E2DD","race_medal":0,"user_type":2,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":425108,"discussion_content":"感谢支持","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1538699791,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]}]}