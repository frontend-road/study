{"id":326166,"title":"01 | 缺乏业务含义的命名：如何精准命名？","content":"<p>你好，我是郑晔。</p><p>讲写代码的书通常都会从命名开始讲，《<a href=\"https://book.douban.com/subject/1173548/\">程序设计实践</a>》如此，《<a href=\"https://book.douban.com/subject/4199741/\">代码整洁之道</a>》亦然。所以，我们这个讲代码坏味道的专栏，也遵循传统，从命名开始讲。</p><p>不过，也许你会说：“我知道，命名不就是不能用 abcxyz 命名，名字要有意义嘛，这有什么好讲的。”然而，即便懂得了名字要有意义这个道理，很多程序员依然无法从命名的泥潭中挣脱出来。</p><h2>不精准的命名</h2><p>我们先来看一段代码：</p><pre><code>public void processChapter(long chapterId) {\n  Chapter chapter = this.repository.findByChapterId(chapterId);\n  if (chapter == null) {\n    throw new IllegalArgumentException(&quot;Unknown chapter [&quot; + chapterId + &quot;]&quot;);  \n  }\n  \n  chapter.setTranslationState(TranslationState.TRANSLATING);\n  this.repository.save(chapter);\n}\n</code></pre><p>这是一段看上去还挺正常的代码，甚至以很多团队的标准来看，这段代码写得还不错。但如果我问你，这段代码是做什么的。你就需要调动全部注意力，去认真阅读这段代码，找出其中的逻辑。经过阅读我们发现，这段代码做的就是把一个章节的翻译状态改成翻译中。</p><p>问题来了，为什么你需要阅读这段代码的细节，才能知道这段代码是做什么的？</p><p>问题就出在函数名上。这个函数的名字叫 processChapter（处理章节），这个函数确实是在处理章节，但是，这个名字太过宽泛。如果说“将章节的翻译状态改成翻译中”叫做处理章节，那么“将章节的翻译状态改成翻译完”是不是也叫处理章节呢？“修改章节内容”是不是也叫处理章节呢？换句话说，如果各种场景都能够叫处理章节，那么处理章节就是一个过于宽泛的名字，没有错，但不精准。</p><!-- [[[read_end]]] --><p>这就是一类典型的命名问题，从表面上看，这个名字是有含义的，但实际上，它并不能有效地反映这段代码的含义。如果说我在做的是一个信息处理系统，你根本无法判断，我做是一个电商平台，还是一个图书管理系统，从沟通的角度看，这就不是一个有效的沟通。要想理解它，你需要消耗大量认知成本，无论是时间，还是精力。</p><p><strong>命名过于宽泛，不能精准描述，这是很多代码在命名上存在的严重问题，也是代码难以理解的根源所在</strong>。</p><p>或许这么说你的印象还是不深刻，我们看看下面这些词是不是经常出现在你的代码里：data、info、flag、process、handle、build、maintain、manage、modify 等等。这些名字都属于典型的过于宽泛的名字，当这些名字出现在你的代码里，多半是写代码的人当时没有想好用什么名字，就开始写代码了。我相信，只要稍微仔细想想，类似的名字你一定还能想出不少来。</p><p>回到前面那段代码上，如果它不叫“处理章节”，那应该叫什么呢？首先，<strong>命名要能够描述出这段代码在做的事情</strong>。这段代码在做的事情就是“将章节修改为翻译中”。那是不是它就应该叫 changeChapterToTranslating呢？</p><p>不可否认，相比于“处理章节”，changeChapterToTranslating这个名字已经进了一步，然而，它也不算是一个好名字，因为它更多的是在描述这段代码在做的细节。我们之所以要将一段代码封装起来，一个重要的原因就是，我们不想知道那么多的细节。如果把细节平铺开来，那本质上和直接阅读代码细节差别并不大。</p><p>所以，<strong>一个好的名字应该描述意图，而非细节。</strong></p><p>就这段代码而言， 我们为什么要把翻译状态修改成翻译中，这一定是有原因的，也就是意图。具体到这里的业务，我们把翻译状态修改成翻译中，是因为我们在这里开启了一个翻译的过程。所以，这段函数应该命名 startTranslation。</p><pre><code>public void startTranslation(long chapterId) {\n  Chapter chapter = this.repository.findByChapterId(chapterId);\n  if (chapter == null) {\n    throw new IllegalArgumentException(&quot;Unknown chapter [&quot; + chapterId + &quot;]&quot;); \n  }\n  \n  chapter.setTranslationState(TranslationState.TRANSLATING);\n  this.repository.save(chapter);\n}\n</code></pre><h2>用技术术语命名</h2><p>我们再来看一段代码：</p><pre><code>List&lt;Book&gt; bookList = service.getBooks();\n</code></pre><p>可以说这是一段常见得不能再常见的代码了，但这段代码却隐藏另外一个典型得不能再典型的问题：<strong>用技术术语命名。</strong></p><p>这个 bookList 变量之所以叫 bookList，原因就是它声明的类型是 List。这种命名在代码中几乎是随处可见的，比如 xxxMap、xxxSet。</p><p>这是一种不费脑子的命名方式，但是，这种命名却会带来很多问题，因为它是一种基于实现细节的命名方式。</p><p>我们都知道，编程有一个重要的原则是面向接口编程，这个原则从另外一个角度理解，就是不要面向实现编程，<strong>因为接口是稳定的，而实现是易变的</strong>。虽然在大多数人的理解里，这个原则是针对类型的，但在命名上，我们也应该遵循同样的原则。为什么？我举个例子你就知道了。</p><p>比如，如果我发现，我现在需要的是一个不重复的作品集合，也就是说，我需要把这个变量的类型从 List 改成 Set。变量类型你一定会改，但变量名你会改吗？这还真不一定，一旦出现遗忘，就会出现一个奇特的现象，一个叫 bookList 的变量，它的类型是一个 Set。这样，一个新的混淆就此产生了。</p><p>那有什么更好的名字吗？我们需要一个更面向意图的名字。其实，我们在这段代码里真正要表达的是拿到了一堆书，所以，这个名字可以命名成 books。</p><pre><code>List&lt;Book&gt; books = service.getBooks();\n</code></pre><p>也许你发现了，这个名字其实更简单，但从表意的程度上来说，它却是一个更有效的名字。</p><p>虽然这里我们只是以变量为例说明了以技术术语命名存在的问题，事实上，<strong>在实际的代码中，技术名词的出现，</strong><strong>往往就代表着它缺少了一个应有的模型。</strong></p><p>比如，在业务代码里如果直接出现了 Redis：</p><pre><code>public Book getByIsbn(String isbn) {\n  Book cachedBook = redisBookStore.get(isbn);\n  if (cachedBook != null) {\n    return cachedBook;\n  }\n  \n  Book book = doGetByIsbn(isbn);\n  redisBookStore.put(isbn, book);\n  return book;\n}\n</code></pre><p>通常来说，这里真正需要的是一个缓存。Redis 是缓存这个模型的一个实现：</p><pre><code>public Book getByIsbn(String isbn) {\n  Book cachedBook = cache.get(isbn);\n  if (cachedBook != null) {\n    return cachedBook;\n  }\n  \n  Book book = doGetByIsbn(isbn);\n  cache.put(isbn, book);\n  return book;\n}\n</code></pre><p>再进一步，缓存这个概念其实也是一个技术术语，从某种意义上说，它也不应该出现在业务代码中。这方面做得比较好的是 Spring。使用 Spring 框架时，如果需要缓存，我们通常是加上一个 Annotation（注解）：</p><pre><code>@Cacheable(&quot;books&quot;)\npublic Book getByIsbn(String isbn) {\n  ...\n}\n</code></pre><p>程序员之所以喜欢用技术名词去命名，一方面是因为，这是大家习惯的语言，另一方面也是因为程序员学习写代码，很大程度上是参考别人的代码，而行业里面优秀的代码常常是一些开源项目，而这些开源项目往往是技术类的项目。<strong>在一个技术类的项目中，这些技术术语其实就是它的业务语言。但对于业务项目，这个说法就必须重新审视了。</strong></p><p>如果这个部分的代码确实就是处理一些技术，使用技术术语无可厚非，但如果是在处理业务，就要尽可能把技术术语隔离开来。</p><h2>用业务语言写代码</h2><p>无论是不精准的命名也好，技术名词也罢，归根结底，体现的是同一个问题：对业务理解不到位。</p><p>我在《<a href=\"https://time.geekbang.org/column/intro/100022301\">10x 程序员工作法</a>》专栏中曾经说过，<strong>编写可维护的代码要使用业务语言</strong>。怎么才知道自己的命名是否用的是业务语言呢？一种简单的做法就是，把这个词讲给产品经理，看他知不知道是怎么回事。</p><p>从团队的角度看，让每个人根据自己的理解来命名，确实就有可能出现千奇百怪的名字，所以，一个良好的团队实践是，<strong>建立团队的词汇表</strong>，让团队成员有信息可以参考。</p><p>团队对于业务有了共同理解，我们也许就可以发现一些更高级的坏味道，比如说下面这个函数声明：</p><pre><code>public void approveChapter(long chapterId, long userId) {\n  ...\n}\n</code></pre><p>这个函数的意图是，确认章节内容审核通过。这里有一个问题，chapterId 是审核章节的 ID，这个没问题，但 userId 是什么呢？了解了一下背景，我们才知道，之所以这里要有一个 userId，是因为这里需要记录一下审核人的信息，这个 userId 就是审核人的 userId。</p><p>你看，通过业务的分析，我们会发现，这个 userId 并不是一个好的命名，因为它还需要更多的解释，更好的命名是 reviewerUserId，之所以起这个名字，因为这个用户在这个场景下扮演的角色是审核人（Reviewer）。</p><pre><code>public void approveChapter(long chapterId, long reviewerUserId) {\n  ...\n}\n</code></pre><p>从某种意义上来说，这个坏味道也是一种不精准的命名，但它不是那种一眼可见的坏味道，<strong>而是需要在业务层面上再进行讨论</strong>，所以，它是一种更高级的坏味道。</p><p>我初入职场的时候，有一次为一个名字陷入了沉思，一个工作经验丰富的同事对此的评价是：你开始进阶了。确实，能够意识到自己的命名有问题，是程序员进阶的第一步。</p><h2>总结时刻</h2><p>我们今天讲了两个典型的命名坏味道：</p><ul>\n<li>不精准的命名；</li>\n<li>用技术术语命名。</li>\n</ul><p>命名是软件开发中两件难事之一（另一个难事是缓存失效），不好的命名本质上是增加我们的认知成本，同样也增加了后来人（包括我们自己）维护代码的成本。</p><p>好的命名要体现出这段代码在做的事情，而无需展开代码了解其中的细节，这是最低的要求。再进一步，好的命名要准确地体现意图，而不是实现细节。更高的要求是，用业务语言写代码。</p><p>至此，我们已经对命名有了一个更深入的认识。下一讲，我们来说说国外那些经典的讲编码的书都不曾覆盖到的一个话题：英文命名。</p><p>如果今天的内容你只能记住一件事，那请记住：<strong>好的命名，是体现业务含义的命名</strong>。</p><p><img src=\"https://static001.geekbang.org/resource/image/4e/66/4e725dfea2eeb16ef0f654813ca42066.jpg?wh=2284*3156\" alt=\"\"></p><h2>思考题</h2><p>前面我们提到了一些代码中常见的不精准的命名所用的词汇，你还能想到哪些词呢？欢迎在留言区分享你的想法。也欢迎你把这节课分享给你身边对命名问题感到困惑的朋友。</p><p>感谢阅读，我们下一讲再见！</p><p><span class=\"reference\">参考资料: </span><a href=\"https://time.geekbang.org/column/article/82581\">你的代码为谁而写？</a></p>","comments":[{"had_liked":false,"id":270521,"user_name":"刘大明","can_delete":false,"product_type":"c1","uid":1035081,"ip_address":"","ucode":"83C063FBD9BF2B","user_header":"https://static001.geekbang.org/account/avatar/00/0f/cb/49/0b9ffc8e.jpg","comment_is_top":false,"comment_ctime":1609149806,"is_pvip":false,"replies":[{"id":"98108","content":"aaaaa还是突破底线了。","user_name":"作者回复","user_name_real":"郑晔","uid":"1258861","ctime":1609162077,"ip_address":"","comment_id":270521,"utype":1}],"discussion_count":5,"race_medal":0,"score":"87508495726","product_id":100068401,"comment_content":"老师提的命名不规范，在项目中全中。<br>还有项目总监写的这种代码<br>aaaaaa.updateFlight(airOrder, airOrderOld);<br>各种不规范命名。难受<br><br>","like_count":20,"discussions":[{"author":{"id":1289852,"avatar":"https://static001.geekbang.org/account/avatar/00/13/ae/7c/251fc690.jpg","nickname":"Dany","note":"","ucode":"AC92B9B5D541CE","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":389531,"discussion_content":"我认为这里有一些含沙射影。这个世界有很多不合理，而我们需要追求属于自己的合理。换言之，职场法则之一，便是自扫门前雪，至于总监是不是应该写出这种代码，其实不如改换思维，他有哪些值得学习的地方，最终都是为了自己能提高。","likes_number":6,"is_delete":false,"is_hidden":false,"ctime":1629307408,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1258861,"avatar":"https://static001.geekbang.org/account/avatar/00/13/35/6d/07a42f81.jpg","nickname":"郑晔","note":"","ucode":"1EBD5AA5D4FC89","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":512658,"discussion_content":"aaaaa还是突破底线了。","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1609162077,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1218162,"avatar":"https://static001.geekbang.org/account/avatar/00/12/96/72/a517bf25.jpg","nickname":"方舟勇士","note":"","ucode":"53D3D844B08B92","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":362198,"discussion_content":"小刘，我是项目总监，你做代码总监","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1616889186,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1759325,"avatar":"https://static001.geekbang.org/account/avatar/00/1a/d8/5d/07dfb3b5.jpg","nickname":"杯莫停","note":"","ucode":"4FA1D5CBBEF702","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":338179,"discussion_content":"你们项目总监看来也是野路子出来的，你在群里给他一份阿里巴巴的开发规范看看。","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1609209717,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":1,"child_discussions":[{"author":{"id":1064018,"avatar":"https://static001.geekbang.org/account/avatar/00/10/3c/52/5951ffb4.jpg","nickname":"Sinvi","note":"","ucode":"2A90976980CA3C","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1759325,"avatar":"https://static001.geekbang.org/account/avatar/00/1a/d8/5d/07dfb3b5.jpg","nickname":"杯莫停","note":"","ucode":"4FA1D5CBBEF702","race_medal":0,"user_type":1,"is_pvip":true},"discussion":{"id":339026,"discussion_content":"总监：小王你来我办公室一下。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1609479646,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":338179,"ip_address":""},"score":339026,"extra":""}]}]},{"had_liked":false,"id":270669,"user_name":"Jxin","can_delete":false,"product_type":"c1","uid":1251111,"ip_address":"","ucode":"4C03928388C413","user_header":"https://static001.geekbang.org/account/avatar/00/13/17/27/ec30d30a.jpg","comment_is_top":false,"comment_ctime":1609211786,"is_pvip":false,"replies":[{"id":"98272","content":"坚持做正确的事情有难度，不坚持却难以提升。","user_name":"作者回复","user_name_real":"郑晔","uid":"1258861","ctime":1609323658,"ip_address":"","comment_id":270669,"utype":1}],"discussion_count":2,"race_medal":0,"score":"83213590410","product_id":100068401,"comment_content":"1.实际工作时，去抓别人的命名规范其实挺不舒服的，显得自己爱计较，而且在缺少共同认知，一般人家也觉得你爱计较。<br>2.命名其实就是对抽象的定义。不能描述业务含义的命名往往是由于抽象的角度不正确或不明确引起的。设计建模时我们会说，业务驱动,认知先行。这里的认知先行就是要先建立与业务侧达成共识的模型（可以认为就是文中让产品看看能不能理解）。然后基于这个认知模型直接翻译成代码，不要扯什么实现和设计允许不一致，好的设计和实现应该就是一模一样的。这样翻译出来的代码，其行为和能力的定义（命名）自然是对应在业务特征上的。遗憾的是，大多数时候，在一个叫现实的东西面前，我不得不低下头，毕竟时间有限，测试支撑无力，在对项目没有足够认知之前，我们只能用最小的改动、最大的复用和差不多的命名去实现功能，设计和对齐认知的事情放到后面可能存在的重构上。（实现先行，设计随后）","like_count":19,"discussions":[{"author":{"id":1258861,"avatar":"https://static001.geekbang.org/account/avatar/00/13/35/6d/07a42f81.jpg","nickname":"郑晔","note":"","ucode":"1EBD5AA5D4FC89","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":512708,"discussion_content":"坚持做正确的事情有难度，不坚持却难以提升。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1609323658,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1187021,"avatar":"https://static001.geekbang.org/account/avatar/00/12/1c/cd/8d552516.jpg","nickname":"Gojustforfun","note":"","ucode":"7513A40F27344F","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":338261,"discussion_content":"其实算总帐，还是你所说的“业务驱动,认知先行”所用总时间少、总成本低，缺点是慢。","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1609226259,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":270920,"user_name":"Demon.Lee","can_delete":false,"product_type":"c1","uid":1052859,"ip_address":"","ucode":"7F0E5493A8E345","user_header":"https://static001.geekbang.org/account/avatar/00/10/10/bb/f1061601.jpg","comment_is_top":false,"comment_ctime":1609318189,"is_pvip":false,"replies":[{"id":"98526","content":"按照我习惯的约定，Map 表示的是一个数据结构，而映射关系我会写成 Mapping。","user_name":"作者回复","user_name_real":"郑晔","uid":"1258861","ctime":1609762088,"ip_address":"","comment_id":270920,"utype":1}],"discussion_count":3,"race_medal":1,"score":"61738860333","product_id":100068401,"comment_content":"老师，xxxMap这种命名表示映射关系，比如：书id与书的映射关系，不能命名为bookIdMap么？一时没想到好的命名，老师能给点建议么","like_count":14,"discussions":[{"author":{"id":1258861,"avatar":"https://static001.geekbang.org/account/avatar/00/13/35/6d/07a42f81.jpg","nickname":"郑晔","note":"","ucode":"1EBD5AA5D4FC89","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":512791,"discussion_content":"按照我习惯的约定，Map 表示的是一个数据结构，而映射关系我会写成 Mapping。","likes_number":3,"is_delete":false,"is_hidden":false,"ctime":1609762088,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1113737,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTI2icbib62icXtibTkThtyRksbuJLoTLMts7zook2S30MiaBtbz0f5JskwYicwqXkhpYfvCpuYkcvPTibEaQ/132","nickname":"xuanyuan","note":"","ucode":"1EC79B9372868F","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":570899,"discussion_content":"bookId2Book是不是更合适，一眼就知道key，value是啥","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1651988367,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1052859,"avatar":"https://static001.geekbang.org/account/avatar/00/10/10/bb/f1061601.jpg","nickname":"Demon.Lee","note":"","ucode":"7F0E5493A8E345","race_medal":1,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":339719,"discussion_content":"谢谢郑大，以前Map和Mapping都用，但不区分，以后知道了","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1609764211,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":270615,"user_name":"捞鱼的搬砖奇","can_delete":false,"product_type":"c1","uid":1021539,"ip_address":"","ucode":"2FD194C4DA26E5","user_header":"https://static001.geekbang.org/account/avatar/00/0f/96/63/7eb32c9b.jpg","comment_is_top":false,"comment_ctime":1609172298,"is_pvip":false,"replies":[{"id":"98150","content":"欢迎回来！<br><br>进步都一点一点来的，没有谁一开始就很牛。","user_name":"作者回复","user_name_real":"郑晔","uid":"1258861","ctime":1609206544,"ip_address":"","comment_id":270615,"utype":1}],"discussion_count":5,"race_medal":0,"score":"35968910666","product_id":100068401,"comment_content":"老师好，我又又又来了。<br>18年末，我看了你的10X 工作法专栏，里面有提到过“代码的坏味道”碰巧那时候我刚读完重构第一版，对你专栏的的观点非常认同，几个月之后重构出了第二版，一半是好奇，一半是自己对优秀代码的向往把书买回来读完了。几个月前我看完了软件设计之美。这样一想三年过去了，自己在代码量有了更多的积累，每次回过去看那些重构的原则，都会有新的体会，写的时候依旧会犯迷糊，一个查询方法，是用 listXX，getXX还是queryXX呢，光是思考这些我都会想好一会，还有就是有时候写的时候觉得合适的，之后等整个功能完成回去检查时又觉得这样不好了。动手之前想的更多了。<br><br>期待后面课程。","like_count":8,"discussions":[{"author":{"id":1258861,"avatar":"https://static001.geekbang.org/account/avatar/00/13/35/6d/07a42f81.jpg","nickname":"郑晔","note":"","ucode":"1EBD5AA5D4FC89","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":512690,"discussion_content":"欢迎回来！\n\n进步都一点一点来的，没有谁一开始就很牛。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1609206544,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":2725667,"avatar":"https://static001.geekbang.org/account/avatar/00/29/97/23/9c9bd0d4.jpg","nickname":"苜蓿°","note":"","ucode":"BEEDCB2B88363A","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":572752,"discussion_content":"巧了 最近我也在思考到底用 listXX，getXX还是queryXX呢哈哈哈哈","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1652947490,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1229143,"avatar":"https://static001.geekbang.org/account/avatar/00/12/c1/57/27de274f.jpg","nickname":"萧","note":"","ucode":"0C2239867AFF5F","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":339075,"discussion_content":"老哥还是火星网大佬，滋滋滋","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1609494266,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1075666,"avatar":"https://static001.geekbang.org/account/avatar/00/10/69/d2/8a53f0a3.jpg","nickname":"E","note":"","ucode":"80B68506B590EF","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":338420,"discussion_content":"火星网大佬早上好","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1609279035,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":1,"child_discussions":[{"author":{"id":1021539,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/96/63/7eb32c9b.jpg","nickname":"捞鱼的搬砖奇","note":"","ucode":"2FD194C4DA26E5","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1075666,"avatar":"https://static001.geekbang.org/account/avatar/00/10/69/d2/8a53f0a3.jpg","nickname":"E","note":"","ucode":"80B68506B590EF","race_medal":0,"user_type":1,"is_pvip":true},"discussion":{"id":338499,"discussion_content":"老板好。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1609301516,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":338420,"ip_address":""},"score":338499,"extra":""}]}]},{"had_liked":false,"id":278239,"user_name":"布凡","can_delete":false,"product_type":"c1","uid":1202465,"ip_address":"","ucode":"346FCD332F8BFA","user_header":"https://static001.geekbang.org/account/avatar/00/12/59/21/d2efde18.jpg","comment_is_top":false,"comment_ctime":1612841088,"is_pvip":false,"replies":[{"id":"101126","content":"很好的总结","user_name":"作者回复","user_name_real":"郑晔","uid":"1258861","ctime":1612927305,"ip_address":"","comment_id":278239,"utype":1}],"discussion_count":1,"race_medal":0,"score":"31677612160","product_id":100068401,"comment_content":"今日总结：<br>1、命名要能描述功能（或方法）所做的事情，要用具体的（动词+名称）比如AddChapter<br>2、一个好的名字应该描述意图，而非细节，比如, StartTranslation <br>3、不能用技术术语命名，因为接口时稳定的，而实现时易变的，比如不能用  bookList 这样的命名就不够好，而应该用books<br>4、实际代码中，技术名称的出现，比如redis 代表的就是具体的技术实现，而应该用cache这样更广泛的词，和第一点正好相反<br>5、保持团队代码的统一，建立团队的词汇表，并进行代码评审，保证项目命名的统一，也能更好的让业务知识在项目成员中传递","like_count":7,"discussions":[{"author":{"id":1258861,"avatar":"https://static001.geekbang.org/account/avatar/00/13/35/6d/07a42f81.jpg","nickname":"郑晔","note":"","ucode":"1EBD5AA5D4FC89","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":515322,"discussion_content":"很好的总结","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1612927305,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":270711,"user_name":"Gojustforfun","can_delete":false,"product_type":"c1","uid":1187021,"ip_address":"","ucode":"7513A40F27344F","user_header":"https://static001.geekbang.org/account/avatar/00/12/1c/cd/8d552516.jpg","comment_is_top":false,"comment_ctime":1609225975,"is_pvip":true,"replies":[{"id":"98521","content":"先对你的处境表示一下同情。<br><br>分层命名一般是团队的习惯，像我现在的团队，一般是用 resource&#47;application&#47;service&#47;repository 来命名，实际上，这里的 application 对应着 DDD 中的应用服务，service 对应着领域服务，在很多团队里，这些都放到了 service 里面。<br><br>也有的团队 resource 叫 controller，repository 叫 mapper 或 dao。具体叫哪个，按照团队的约定就好。","user_name":"作者回复","user_name_real":"郑晔","uid":"1258861","ctime":1609761799,"ip_address":"","comment_id":270711,"utype":1}],"discussion_count":2,"race_medal":0,"score":"27379029751","product_id":100068401,"comment_content":"唉，啥也白说了，都是眼泪啊.....<br><br>刚写代码时，老鸟通常会对菜鸟说教：你不要期望一次将代码写好，得注重健壮性（鲁棒性）、可读性、可维护性、可扩展性，多思考、常重构....多看书去看看《重构》《代码整洁之道》等等。然而你看他的提交记录除了改bug就没重构过！再看看他写的代码（后面举例），你会发现他推荐你看的书他其实没读完或者根本没读过！（类比于学算法让你看算法导论）当你再追问为什么不按书中&#47;大厂规范做，他两手一滩说到不能教条要变通，脱离场景谈优化都是耍流氓——得按咱们团队规范写（其实没规范），我写的就符合规范！（我C，直接说照着你的代码风格写不就好了，非得套在一堆大道理凸显自己，事后分析起来仍旧是个笑话！其实，在大多数情况下，个体是无法对抗群体习惯的！）<br><br>1) 包名明明已经限定语义，赋值运算符右侧User后的后缀其实是可以省略。<br>左侧的变量名，在一般场景可以用dao&#47;srv&#47;repo表示，在聚合场景可能还得用userDao&#47;chapterDao来区分。<br>UserDao userDao = dao.UserDao();<br>UserService userSrv = services.UserService();<br>UserRepository userRepo = repositories.UserRespository();<br>这就完了？怎么可能！包名dao&#47;model用单数而services和repositories用复数！对就是这么坑，这么任性！<br><br>2）对于缩略词的命名：userId还是userID？Isbn还是ISBN<br>3）我的理解，api、service、repository这几层通常是面向业务的，应该使用面向业务的命名；dao层的业务就是和具体数据源打交道，所以命名可以是UpdateXXXByID，希望老师针对软件的每个分层给点命名建议，谢谢！","like_count":6,"discussions":[{"author":{"id":1193874,"avatar":"https://static001.geekbang.org/account/avatar/00/12/37/92/961ba560.jpg","nickname":"授人以🐟，不如授人以渔","note":"","ucode":"BD53829E924B66","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":566473,"discussion_content":"选择团队很重要，本质上就是挑选自己的成长环境。","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1650698899,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1258861,"avatar":"https://static001.geekbang.org/account/avatar/00/13/35/6d/07a42f81.jpg","nickname":"郑晔","note":"","ucode":"1EBD5AA5D4FC89","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":512723,"discussion_content":"先对你的处境表示一下同情。\n\n分层命名一般是团队的习惯，像我现在的团队，一般是用 resource/application/service/repository 来命名，实际上，这里的 application 对应着 DDD 中的应用服务，service 对应着领域服务，在很多团队里，这些都放到了 service 里面。\n\n也有的团队 resource 叫 controller，repository 叫 mapper 或 dao。具体叫哪个，按照团队的约定就好。","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1609761799,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":271319,"user_name":"adang","can_delete":false,"product_type":"c1","uid":1143712,"ip_address":"","ucode":"0F2ECF8B92D46B","user_header":"https://static001.geekbang.org/account/avatar/00/11/73/a0/7dcc9212.jpg","comment_is_top":false,"comment_ctime":1609556595,"is_pvip":false,"replies":[{"id":"98366","content":"从最佳实践的角度来说，Rails一直是表现优异的，因为它的设计者是行业中的佼佼者。所以，我在《软件设计之美》中，专门把它拿出来讲。","user_name":"作者回复","user_name_real":"郑晔","uid":"1258861","ctime":1609577538,"ip_address":"","comment_id":271319,"utype":1}],"discussion_count":1,"race_medal":0,"score":"18789425779","product_id":100068401,"comment_content":"进入程序员这个行业，第一个使用的框架就是Rails，Rails在很多地方做了很好的约定，例如：Controller名字要用复数，Model名字要用单数，相对应的数据库表名名字要用复数等。老师课程中举的变量名bookList的例子，在Rails中约定的命名就是books。<br>现在已经不再使用ROR了，但是在动手之前还是会认真思考，尤其是有多种方式可以选择，拿不准要采用哪种的时候会想，如果这种场景在Rails下会怎样处理，这个时候通常心里就有答案了。<br>现在研发团队成员命名随心所欲。数据库字段驼峰式与蛇形式混合双打；字段名单复数不分，如：表示操作人的字段名定义为people；一个修改账号状态的方法里还会有更新这个账号下关联的其它业务的代码；Example.Criteria c1， Example.Criteria c2 这样的命名更是随处可见。每次读代码都是苦不堪言。","like_count":4,"discussions":[{"author":{"id":1258861,"avatar":"https://static001.geekbang.org/account/avatar/00/13/35/6d/07a42f81.jpg","nickname":"郑晔","note":"","ucode":"1EBD5AA5D4FC89","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":512899,"discussion_content":"从最佳实践的角度来说，Rails一直是表现优异的，因为它的设计者是行业中的佼佼者。所以，我在《软件设计之美》中，专门把它拿出来讲。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1609577538,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":271002,"user_name":"huaweichen","can_delete":false,"product_type":"c1","uid":1249907,"ip_address":"","ucode":"974917DE2AE92E","user_header":"https://static001.geekbang.org/account/avatar/00/13/12/73/2183839d.jpg","comment_is_top":false,"comment_ctime":1609342305,"is_pvip":false,"replies":[{"id":"98530","content":"当它把类型从 Array 改成 Collection，就需要改一次变量名，那以后同样的事情还是会发生的。<br><br>同样，这里的复数实际上也可以里面只有一个，这并不是问题。<br><br>你可以看一下我在文章结尾附上的资料，这是我在《10x 程序员工作法》关于命名的介绍。","user_name":"作者回复","user_name_real":"郑晔","uid":"1258861","ctime":1609762326,"ip_address":"","comment_id":271002,"utype":1}],"discussion_count":2,"race_medal":0,"score":"18789211489","product_id":100068401,"comment_content":"为了命名，和同事展开了很多争论：<br>原命名为$personsArray。<br>我的任务是重构。<br>我在重构过程中，我把变量换为Collection类型，变量名改为$persons。<br><br>同事给我review的建议：“应该把$persons改为$personCollection。1. 因为变量如之前的legacy代码的personArray，表明了这个变量的类型，所以，我们用$personCollection有助于其他人阅读和理解。 2. person的Collection可以是一个person为Collection，也可以是多个persons，于是这个变量不一定永远是复数persons。”<br><br>请问老师，怎么怼回去？感觉他们说得也有理啊……<br>您的这些理论，有出处reference吗？","like_count":4,"discussions":[{"author":{"id":1475017,"avatar":"https://thirdwx.qlogo.cn/mmopen/vi_32/WnBSns7n0sHzbXaoKyr5SKpnyxNMu1ib0uN3JKic4DVJqWvVqYFtPSxNo2fQfnpg47QxaVK1BPdL6hEZeTLXMmGQ/132","nickname":"Geek_7efe82","note":"","ucode":"BA827CF76C3D89","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":339429,"discussion_content":"1.一致性优先，如果只是重构一小部分模块，并且其他模块的复数变量名都是xxxArray，xxxCollection之类的，那就加类型后缀，反之看变量的作用域范围，范围较小，可以用s结尾。\n\n2.保证命名的精确性，这里不建议一个变量可以充当两种类型，第二种嵌套类型可以单独使用personCollections作为变量名。\n\n以上仅个人观点","likes_number":2,"is_delete":false,"is_hidden":false,"ctime":1609668674,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1258861,"avatar":"https://static001.geekbang.org/account/avatar/00/13/35/6d/07a42f81.jpg","nickname":"郑晔","note":"","ucode":"1EBD5AA5D4FC89","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":512814,"discussion_content":"当它把类型从 Array 改成 Collection，就需要改一次变量名，那以后同样的事情还是会发生的。\n\n同样，这里的复数实际上也可以里面只有一个，这并不是问题。\n\n你可以看一下我在文章结尾附上的资料，这是我在《10x 程序员工作法》关于命名的介绍。","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1609762326,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":284913,"user_name":"李叶","can_delete":false,"product_type":"c1","uid":1470449,"ip_address":"","ucode":"41B33FA8526E48","user_header":"https://static001.geekbang.org/account/avatar/00/16/6f/f1/35f9f16f.jpg","comment_is_top":false,"comment_ctime":1616543881,"is_pvip":false,"replies":[{"id":"110745","content":"很好的总结","user_name":"作者回复","user_name_real":"郑晔","uid":"1258861","ctime":1628319226,"ip_address":"","comment_id":284913,"utype":1}],"discussion_count":1,"race_medal":0,"score":"14501445769","product_id":100068401,"comment_content":"精准命名，体现业务含义，表名意图，不暴露细节，不使用技术用语","like_count":3,"discussions":[{"author":{"id":1258861,"avatar":"https://static001.geekbang.org/account/avatar/00/13/35/6d/07a42f81.jpg","nickname":"郑晔","note":"","ucode":"1EBD5AA5D4FC89","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":517508,"discussion_content":"很好的总结","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1628319226,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":270795,"user_name":"Geek_3b1096","can_delete":false,"product_type":"c1","uid":1549364,"ip_address":"","ucode":"A6BD92B79B3632","user_header":"","comment_is_top":false,"comment_ctime":1609273041,"is_pvip":false,"replies":[{"id":"98351","content":"多么痛的领悟","user_name":"作者回复","user_name_real":"郑晔","uid":"1258861","ctime":1609512715,"ip_address":"","comment_id":270795,"utype":1}],"discussion_count":1,"race_medal":0,"score":"14494174929","product_id":100068401,"comment_content":"写了很多processXXXX","like_count":3,"discussions":[{"author":{"id":1258861,"avatar":"https://static001.geekbang.org/account/avatar/00/13/35/6d/07a42f81.jpg","nickname":"郑晔","note":"","ucode":"1EBD5AA5D4FC89","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":512754,"discussion_content":"多么痛的领悟","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1609512715,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":270662,"user_name":"杯莫停","can_delete":false,"product_type":"c1","uid":1759325,"ip_address":"","ucode":"4FA1D5CBBEF702","user_header":"https://static001.geekbang.org/account/avatar/00/1a/d8/5d/07dfb3b5.jpg","comment_is_top":false,"comment_ctime":1609209639,"is_pvip":true,"replies":[{"id":"98240","content":"有所得，没白学。","user_name":"作者回复","user_name_real":"郑晔","uid":"1258861","ctime":1609254620,"ip_address":"","comment_id":270662,"utype":1}],"discussion_count":1,"race_medal":0,"score":"14494111527","product_id":100068401,"comment_content":"看完后我去review了下我的代码，确实有的地方命名太过宽泛。之前也遇到过返回值类型改了之后，下面的变量名很尴尬的问题。以后写代码会注意的到了。","like_count":3,"discussions":[{"author":{"id":1258861,"avatar":"https://static001.geekbang.org/account/avatar/00/13/35/6d/07a42f81.jpg","nickname":"郑晔","note":"","ucode":"1EBD5AA5D4FC89","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":512706,"discussion_content":"有所得，没白学。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1609254620,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":270627,"user_name":"webmin","can_delete":false,"product_type":"c1","uid":1047014,"ip_address":"","ucode":"98B0CA882454E8","user_header":"https://static001.geekbang.org/account/avatar/00/0f/f9/e6/47742988.jpg","comment_is_top":false,"comment_ctime":1609198794,"is_pvip":true,"replies":[{"id":"98149","content":"有直接的收获就好，专栏没白学。","user_name":"作者回复","user_name_real":"郑晔","uid":"1258861","ctime":1609206487,"ip_address":"","comment_id":270627,"utype":1}],"discussion_count":1,"race_medal":0,"score":"14494100682","product_id":100068401,"comment_content":"听完老师的课，对有意义的名字的理解有进了一步，之前只做到不用abcd等来命名，今天学到了名字要根据场景取一个有业务含义的名字。表明意图的名字可以让Review代码的人先了解意图，再结合情况来看是否要了解细节。","like_count":3,"discussions":[{"author":{"id":1258861,"avatar":"https://static001.geekbang.org/account/avatar/00/13/35/6d/07a42f81.jpg","nickname":"郑晔","note":"","ucode":"1EBD5AA5D4FC89","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":512693,"discussion_content":"有直接的收获就好，专栏没白学。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1609206487,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":270584,"user_name":"小袁","can_delete":false,"product_type":"c1","uid":1185489,"ip_address":"","ucode":"59F0E7929F65DE","user_header":"https://static001.geekbang.org/account/avatar/00/12/16/d1/690231cf.jpg","comment_is_top":false,"comment_ctime":1609166203,"is_pvip":true,"replies":[{"id":"98134","content":"22，这个还是挺有勇气的。","user_name":"作者回复","user_name_real":"郑晔","uid":"1258861","ctime":1609198180,"ip_address":"","comment_id":270584,"utype":1}],"discussion_count":1,"race_medal":0,"score":"14494068091","product_id":100068401,"comment_content":"我曾见在一个很长的代码中看到。catch(expection ee1)~atch(expection ee22)","like_count":3,"discussions":[{"author":{"id":1258861,"avatar":"https://static001.geekbang.org/account/avatar/00/13/35/6d/07a42f81.jpg","nickname":"郑晔","note":"","ucode":"1EBD5AA5D4FC89","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":512679,"discussion_content":"22，这个还是挺有勇气的。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1609198180,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":272973,"user_name":"Hobo","can_delete":false,"product_type":"c1","uid":1041960,"ip_address":"","ucode":"BE991F04E66ECD","user_header":"https://static001.geekbang.org/account/avatar/00/0f/e6/28/1d3aace3.jpg","comment_is_top":false,"comment_ctime":1610373831,"is_pvip":false,"replies":[{"id":"98958","content":"你说得有道理，是可以的。","user_name":"作者回复","user_name_real":"郑晔","uid":"1258861","ctime":1610457108,"ip_address":"","comment_id":272973,"utype":1}],"discussion_count":1,"race_medal":0,"score":"10200308423","product_id":100068401,"comment_content":"如果叫reviewerId是不是更好一点","like_count":2,"discussions":[{"author":{"id":1258861,"avatar":"https://static001.geekbang.org/account/avatar/00/13/35/6d/07a42f81.jpg","nickname":"郑晔","note":"","ucode":"1EBD5AA5D4FC89","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":513443,"discussion_content":"你说得有道理，是可以的。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1610457108,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":271663,"user_name":"Richard Zhong","can_delete":false,"product_type":"c1","uid":1213417,"ip_address":"","ucode":"F91A8EE5992FAB","user_header":"https://static001.geekbang.org/account/avatar/00/12/83/e9/3016ed84.jpg","comment_is_top":false,"comment_ctime":1609750902,"is_pvip":false,"replies":[{"id":"98533","content":"实话说，想做好程序员，英语是要加强的。","user_name":"作者回复","user_name_real":"郑晔","uid":"1258861","ctime":1609763850,"ip_address":"","comment_id":271663,"utype":1}],"discussion_count":1,"race_medal":0,"score":"10199685494","product_id":100068401,"comment_content":"英语太差，词汇量不够。","like_count":2,"discussions":[{"author":{"id":1258861,"avatar":"https://static001.geekbang.org/account/avatar/00/13/35/6d/07a42f81.jpg","nickname":"郑晔","note":"","ucode":"1EBD5AA5D4FC89","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":512995,"discussion_content":"实话说，想做好程序员，英语是要加强的。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1609763850,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":270910,"user_name":"冯将","can_delete":false,"product_type":"c1","uid":1595747,"ip_address":"","ucode":"F2EEA94129ECD1","user_header":"https://static001.geekbang.org/account/avatar/00/18/59/63/6e69883a.jpg","comment_is_top":false,"comment_ctime":1609316502,"is_pvip":false,"replies":[{"id":"98797","content":"名字长不是问题，问题是表达是否清晰，像repMonthCompanyService这个名字，是不太容易一眼看出来含义的。<br><br>另外，传给 service 的参数是一个字符串，这个从逻辑上是有问题的，没有进行参数的校验。后面的内容也会讲到，这个做法是一种缺乏封装的表现。<br><br>变量名是 list，按照这一讲的说法是用技术术语在命名。<br><br>再有，这个 URI 是 getTotalSettlementInfoByYear，这是不符合 REST 的命名规范的，比如，动词不应该出现在 URI 里，分词应该是“-”，byYear 实际上是一个过滤条件等等。","user_name":"作者回复","user_name_real":"郑晔","uid":"1258861","ctime":1610153202,"ip_address":"","comment_id":270910,"utype":1}],"discussion_count":2,"race_medal":0,"score":"10199251094","product_id":100068401,"comment_content":"@GetMapping(&quot;getTotalSettlementInfoByYear&quot;)<br>@ApiOperation(&quot;公司结算信息按年求和&quot;)<br>public Result&lt;List&lt;RepMonthCompanyDTO&gt;&gt; getTotalSettlementInfoByYear(@RequestParam String year) {<br>\tList&lt;RepMonthCompanyDTO&gt; list = repMonthCompanyService.getTotalSettlementInfoByYear(year);<br>\treturn new Result&lt;List&lt;RepMonthCompanyDTO&gt;&gt;().ok(list);<br>}<br>这是我前俩天刚写的，欢迎老师给出点评<br>我是起方法名和字段名经常会特别长，很纠结","like_count":2,"discussions":[{"author":{"id":1258861,"avatar":"https://static001.geekbang.org/account/avatar/00/13/35/6d/07a42f81.jpg","nickname":"郑晔","note":"","ucode":"1EBD5AA5D4FC89","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":512789,"discussion_content":"名字长不是问题，问题是表达是否清晰，像repMonthCompanyService这个名字，是不太容易一眼看出来含义的。\n\n另外，传给 service 的参数是一个字符串，这个从逻辑上是有问题的，没有进行参数的校验。后面的内容也会讲到，这个做法是一种缺乏封装的表现。\n\n变量名是 list，按照这一讲的说法是用技术术语在命名。\n\n再有，这个 URI 是 getTotalSettlementInfoByYear，这是不符合 REST 的命名规范的，比如，动词不应该出现在 URI 里，分词应该是“-”，byYear 实际上是一个过滤条件等等。","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1610153202,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1595747,"avatar":"https://static001.geekbang.org/account/avatar/00/18/59/63/6e69883a.jpg","nickname":"冯将","note":"","ucode":"F2EEA94129ECD1","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":342602,"discussion_content":"谢谢老师的点评","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1610726299,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":270807,"user_name":"topsion","can_delete":false,"product_type":"c1","uid":1158152,"ip_address":"","ucode":"01366517C6F564","user_header":"https://static001.geekbang.org/account/avatar/00/11/ac/08/8b99367c.jpg","comment_is_top":false,"comment_ctime":1609287545,"is_pvip":false,"replies":[{"id":"98350","content":"加油！","user_name":"作者回复","user_name_real":"郑晔","uid":"1258861","ctime":1609512678,"ip_address":"","comment_id":270807,"utype":1}],"discussion_count":1,"race_medal":0,"score":"10199222137","product_id":100068401,"comment_content":"感谢大大用我的代码做经典案例。🌝🌝🌝🌝","like_count":2,"discussions":[{"author":{"id":1258861,"avatar":"https://static001.geekbang.org/account/avatar/00/13/35/6d/07a42f81.jpg","nickname":"郑晔","note":"","ucode":"1EBD5AA5D4FC89","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":512758,"discussion_content":"加油！","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1609512678,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":270540,"user_name":"瓜瓜","can_delete":false,"product_type":"c1","uid":1053853,"ip_address":"","ucode":"2E98377E48399E","user_header":"https://static001.geekbang.org/account/avatar/00/10/14/9d/19dcdd42.jpg","comment_is_top":false,"comment_ctime":1609153304,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"10199087896","product_id":100068401,"comment_content":" 果断拿下","like_count":2},{"had_liked":false,"id":277514,"user_name":"无道win","can_delete":false,"product_type":"c1","uid":1461075,"ip_address":"","ucode":"0C026BB03A53EA","user_header":"https://static001.geekbang.org/account/avatar/00/16/4b/53/f797f031.jpg","comment_is_top":false,"comment_ctime":1612439793,"is_pvip":true,"replies":[{"id":"100676","content":"可以，但是不建议，这是直接映射通常也是一种技术思维，最好能找到更好的业务术语，否则，就会走到另一条“老路”上。","user_name":"作者回复","user_name_real":"郑晔","uid":"1258861","ctime":1612482385,"ip_address":"","comment_id":277514,"utype":1}],"discussion_count":1,"race_medal":0,"score":"5907407089","product_id":100068401,"comment_content":"老师，看您在评论留言说映射关系写成 Mapping，那如果一个章节id与章节的map  Map&lt;chapterId,chapter&gt; 是不是可以写成 chapterMapping ?","like_count":1,"discussions":[{"author":{"id":1258861,"avatar":"https://static001.geekbang.org/account/avatar/00/13/35/6d/07a42f81.jpg","nickname":"郑晔","note":"","ucode":"1EBD5AA5D4FC89","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":515077,"discussion_content":"可以，但是不建议，这是直接映射通常也是一种技术思维，最好能找到更好的业务术语，否则，就会走到另一条“老路”上。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1612482385,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":271221,"user_name":"Sinvi","can_delete":false,"product_type":"c1","uid":1064018,"ip_address":"","ucode":"2A90976980CA3C","user_header":"https://static001.geekbang.org/account/avatar/00/10/3c/52/5951ffb4.jpg","comment_is_top":false,"comment_ctime":1609479793,"is_pvip":false,"replies":[{"id":"98345","content":"如果考虑到在特定的上下文里，有些名字就可以短一些了。","user_name":"作者回复","user_name_real":"郑晔","uid":"1258861","ctime":1609512357,"ip_address":"","comment_id":271221,"utype":1}],"discussion_count":1,"race_medal":0,"score":"5904447089","product_id":100068401,"comment_content":"考虑业务相关的话有时候命名会比较长。。。","like_count":1,"discussions":[{"author":{"id":1258861,"avatar":"https://static001.geekbang.org/account/avatar/00/13/35/6d/07a42f81.jpg","nickname":"郑晔","note":"","ucode":"1EBD5AA5D4FC89","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":512870,"discussion_content":"如果考虑到在特定的上下文里，有些名字就可以短一些了。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1609512357,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":270600,"user_name":"明","can_delete":false,"product_type":"c1","uid":1607502,"ip_address":"","ucode":"34FF545704EA8A","user_header":"https://static001.geekbang.org/account/avatar/00/18/87/4e/98173974.jpg","comment_is_top":false,"comment_ctime":1609168502,"is_pvip":false,"replies":[{"id":"98133","content":"坚持以这个标准，多看一些代码，积累一些经验。","user_name":"作者回复","user_name_real":"郑晔","uid":"1258861","ctime":1609197610,"ip_address":"","comment_id":270600,"utype":1}],"discussion_count":3,"race_medal":0,"score":"5904135798","product_id":100068401,"comment_content":"老师说的初入职场思考命名那块，深有同感，我现在就发现不会写代码了 不知道怎么样才能写好 也不知道这些对不对 导致写的特别慢 不知道啥时候能度过这个迷茫期","like_count":1,"discussions":[{"author":{"id":1258861,"avatar":"https://static001.geekbang.org/account/avatar/00/13/35/6d/07a42f81.jpg","nickname":"郑晔","note":"","ucode":"1EBD5AA5D4FC89","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":512685,"discussion_content":"坚持以这个标准，多看一些代码，积累一些经验。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1609197610,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1251111,"avatar":"https://static001.geekbang.org/account/avatar/00/13/17/27/ec30d30a.jpg","nickname":"Jxin","note":"","ucode":"4C03928388C413","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":338208,"discussion_content":"这个很快。1.找到一个好的项目，中小规模。2.看他的需求文档，自己实现看看（一个功能一个功能来）。3.看看人家的实现与自己有什么不同,各自利弊在哪里。4.看不懂就抄一遍，看懂就过。5.补基础知识，看郑老师提到的那几本书也够了。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1609213335,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":1,"child_discussions":[{"author":{"id":1607502,"avatar":"https://static001.geekbang.org/account/avatar/00/18/87/4e/98173974.jpg","nickname":"明","note":"","ucode":"34FF545704EA8A","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1251111,"avatar":"https://static001.geekbang.org/account/avatar/00/13/17/27/ec30d30a.jpg","nickname":"Jxin","note":"","ucode":"4C03928388C413","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":338227,"discussion_content":"嗯嗯，其实我蛮想看老师的那个moco项目的 然后gradle那块没用过 一下午也没搞定 就搁浅了😂😂","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1609217814,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":338208,"ip_address":""},"score":338227,"extra":""}]}]},{"had_liked":false,"id":270547,"user_name":"00舟州","can_delete":false,"product_type":"c1","uid":2016489,"ip_address":"","ucode":"1562277CAD100D","user_header":"https://static001.geekbang.org/account/avatar/00/1e/c4/e9/3f434258.jpg","comment_is_top":false,"comment_ctime":1609155717,"is_pvip":false,"replies":[{"id":"98109","content":"能直接用起来，真好。","user_name":"作者回复","user_name_real":"郑晔","uid":"1258861","ctime":1609162127,"ip_address":"","comment_id":270547,"utype":1}],"discussion_count":1,"race_medal":0,"score":"5904123013","product_id":100068401,"comment_content":"我们的代码里恰好就有类似userId的问题，实际业务是创建者和修改者，可惜方法都给取名uId了，虽然有方法名，但听完课感觉还是应该统一一下。","like_count":1,"discussions":[{"author":{"id":1258861,"avatar":"https://static001.geekbang.org/account/avatar/00/13/35/6d/07a42f81.jpg","nickname":"郑晔","note":"","ucode":"1EBD5AA5D4FC89","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":512666,"discussion_content":"能直接用起来，真好。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1609162127,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":270507,"user_name":"封志强","can_delete":false,"product_type":"c1","uid":1227989,"ip_address":"","ucode":"ADE15283C10CAE","user_header":"https://static001.geekbang.org/account/avatar/00/12/bc/d5/036bc464.jpg","comment_is_top":false,"comment_ctime":1609147542,"is_pvip":false,"replies":[{"id":"98113","content":"欢迎加入！","user_name":"作者回复","user_name_real":"郑晔","uid":"1258861","ctime":1609162210,"ip_address":"","comment_id":270507,"utype":1}],"discussion_count":1,"race_medal":0,"score":"5904114838","product_id":100068401,"comment_content":"老师，来了","like_count":1,"discussions":[{"author":{"id":1258861,"avatar":"https://static001.geekbang.org/account/avatar/00/13/35/6d/07a42f81.jpg","nickname":"郑晔","note":"","ucode":"1EBD5AA5D4FC89","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":512651,"discussion_content":"欢迎加入！","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1609162210,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":357797,"user_name":"snake","can_delete":false,"product_type":"c1","uid":3183263,"ip_address":"重庆","ucode":"0C7398D3A68119","user_header":"https://static001.geekbang.org/account/avatar/00/30/92/9f/d5255fe8.jpg","comment_is_top":false,"comment_ctime":1663646270,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1663646270","product_id":100068401,"comment_content":"List这个命名方式中枪了","like_count":0},{"had_liked":false,"id":352200,"user_name":"谢谢","can_delete":false,"product_type":"c1","uid":1628883,"ip_address":"","ucode":"D6F0F92C413731","user_header":"https://static001.geekbang.org/account/avatar/00/18/da/d3/12fb6fa9.jpg","comment_is_top":false,"comment_ctime":1658454068,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1658454068","product_id":100068401,"comment_content":"今天很有收获，特别是使用业务命名。不过，这个也带给我一个困惑，如果业务也变了呢？比如最近我们的项目里定义了一种显示给用户的元素，这种元素的特点就是没有被其他元素使用。所以，刚开始代码里我们很多获取元素的时候，都包含了“unused”这个word。界面上显示的也是“unused”。但是后来PO觉得unused不能反映这种元素的真实意图，于是界面上就改成了“unreferenced”。这种改变也就导致代码里的“unused”都需要去改，包括一些文件名字。请问种情况下，您会怎么做呢？","like_count":0},{"had_liked":false,"id":351271,"user_name":"2018","can_delete":false,"product_type":"c1","uid":1107371,"ip_address":"","ucode":"4C2CD47AD70177","user_header":"https://static001.geekbang.org/account/avatar/00/10/e5/ab/6fab2492.jpg","comment_is_top":false,"comment_ctime":1657669895,"is_pvip":true,"discussion_count":0,"race_medal":0,"score":"1657669895","product_id":100068401,"comment_content":"精准命名那一块，描述意图而非细节，这是针对函数的命名规则，那对于类名的命名，有对应规则嘛？","like_count":0},{"had_liked":false,"id":350002,"user_name":"杯莫停","can_delete":false,"product_type":"c1","uid":1759325,"ip_address":"陕西","ucode":"4FA1D5CBBEF702","user_header":"https://static001.geekbang.org/account/avatar/00/1a/d8/5d/07dfb3b5.jpg","comment_is_top":false,"comment_ctime":1656500510,"is_pvip":true,"replies":[{"id":"128415","content":"有机会可以参与大型的开源项目","user_name":"作者回复","user_name_real":"编辑","uid":"1258861","ctime":1659312068,"ip_address":"陕西","comment_id":350002,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1656500510","product_id":100068401,"comment_content":"其实最高效的方法是模仿大牛的代码风格或者被大牛code review","like_count":0,"discussions":[{"author":{"id":1258861,"avatar":"https://static001.geekbang.org/account/avatar/00/13/35/6d/07a42f81.jpg","nickname":"郑晔","note":"","ucode":"1EBD5AA5D4FC89","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":582193,"discussion_content":"有机会可以参与大型的开源项目","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1659312068,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"陕西"},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":348274,"user_name":"温雅小公子","can_delete":false,"product_type":"c1","uid":2260390,"ip_address":"","ucode":"9EA63E36D7C85C","user_header":"https://static001.geekbang.org/account/avatar/00/22/7d/a6/15798bf2.jpg","comment_is_top":false,"comment_ctime":1654924179,"is_pvip":true,"discussion_count":0,"race_medal":1,"score":"1654924179","product_id":100068401,"comment_content":"看Acmer的代码挺难受的，会出现a aa aaa让人裂开。","like_count":0},{"had_liked":false,"id":346927,"user_name":"if...else...","can_delete":false,"product_type":"c1","uid":2550743,"ip_address":"","ucode":"D0565908C99695","user_header":"https://static001.geekbang.org/account/avatar/00/26/eb/d7/90391376.jpg","comment_is_top":false,"comment_ctime":1653540801,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1653540801","product_id":100068401,"comment_content":"好的命名，是体现业务含义的命名--记下来","like_count":0},{"had_liked":false,"id":344453,"user_name":"小袁","can_delete":false,"product_type":"c1","uid":1811495,"ip_address":"","ucode":"3F5D8721F577D9","user_header":"https://static001.geekbang.org/account/avatar/00/1b/a4/27/15e75982.jpg","comment_is_top":false,"comment_ctime":1651563778,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1651563778","product_id":100068401,"comment_content":"自从我带了个合作方，我才知命名真的很重要。坏的命名需要你逐行去看到底做了什么。","like_count":0},{"had_liked":false,"id":344222,"user_name":"吴良虎","can_delete":false,"product_type":"c1","uid":2388521,"ip_address":"","ucode":"0C5A02598EB5E7","user_header":"https://static001.geekbang.org/account/avatar/00/24/72/29/e5bbb871.jpg","comment_is_top":false,"comment_ctime":1651377787,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1651377787","product_id":100068401,"comment_content":"名字太长貌似也不好","like_count":0},{"had_liked":false,"id":343189,"user_name":"授人以🐟，不如授人以渔","can_delete":false,"product_type":"c1","uid":1193874,"ip_address":"","ucode":"BD53829E924B66","user_header":"https://static001.geekbang.org/account/avatar/00/12/37/92/961ba560.jpg","comment_is_top":false,"comment_ctime":1650698234,"is_pvip":true,"discussion_count":0,"race_medal":0,"score":"1650698234","product_id":100068401,"comment_content":"课前思考：这篇文章的主要核心内容是命名，可以对很多实体进行命名，比如：类型、变量、函数、文件、程序包等等。那我的疑问是：<br>1. 一个好的命名和代码的正确性、可读性之间有什么关系？<br>2. 一个好的命名是什么样子的？<br>3. 不好的命名是什么样子的，潜在的会带来哪些问题？<br>4. 如何判断命名是好的，还是不好的——导致了代码“坏味道”？判断的标准是什么？<br>5. 有了以上的一些体会，我如何能够写出好的命名？","like_count":0},{"had_liked":false,"id":343168,"user_name":"William Ning","can_delete":false,"product_type":"c1","uid":1592279,"ip_address":"","ucode":"4DB8D05E69E5F3","user_header":"https://static001.geekbang.org/account/avatar/00/18/4b/d7/f46c6dfd.jpg","comment_is_top":false,"comment_ctime":1650687850,"is_pvip":true,"discussion_count":0,"race_medal":0,"score":"1650687850","product_id":100068401,"comment_content":"公司现在使用的是sonarcloud静态代码分析工具，会检查代码的坏味道[Code Smell], 但是个人认为提的那些坏味道，也不是合理，比如真个代码文件中，出现，三次相同的单词，就要求提出来，去掉重复，解决办法就是提取为类常量，会有很多的类常量，感觉只是为了解决而解决, 个并认为有些死板，动态分析工具，应是还没上～","like_count":0},{"had_liked":false,"id":324296,"user_name":"aoe","can_delete":false,"product_type":"c1","uid":1121758,"ip_address":"","ucode":"1C6201EDB4E954","user_header":"https://static001.geekbang.org/account/avatar/00/11/1d/de/62bfa83f.jpg","comment_is_top":false,"comment_ctime":1638363547,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1638363547","product_id":100068401,"comment_content":"突然发现我的命名一塌糊涂","like_count":0},{"had_liked":false,"id":283440,"user_name":"慎独明强","can_delete":false,"product_type":"c1","uid":1965699,"ip_address":"","ucode":"DC2F7F2C0C8F60","user_header":"https://static001.geekbang.org/account/avatar/00/1d/fe/83/df562574.jpg","comment_is_top":false,"comment_ctime":1615782485,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1615782485","product_id":100068401,"comment_content":"对于返回集合类型，我一直用的是**List或者**Set，之前还以为这样能够让同事一下子比较明了，这就是list或set。如果是面向接口编程，那么返回的应该是一个集合。   对于技术含义，自己代码里经常带有这样。应该用一个模型去实现，这样更好替换具体实现","like_count":0},{"had_liked":false,"id":275267,"user_name":"gker","can_delete":false,"product_type":"c1","uid":2394862,"ip_address":"","ucode":"0513243E4EF989","user_header":"https://static001.geekbang.org/account/avatar/00/24/8a/ee/8bf05a0a.jpg","comment_is_top":false,"comment_ctime":1611416131,"is_pvip":false,"replies":[{"id":"99893","content":"通常来说，在写代码的过程中，map 是一种数据结构，而 mapping 是映射的意思，英文上是不一样的。重点不是 map 对象该如何命名，而是业务上是什么含义。","user_name":"作者回复","user_name_real":"郑晔","uid":"1258861","ctime":1611452384,"ip_address":"","comment_id":275267,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1611416131","product_id":100068401,"comment_content":"如果是map的命名，老师的意思是以mapping结尾吗？还有如果是那种复杂结构的map，类似于，map&lt;string，map&lt;&gt;&gt;，这种怎么命名好一点呢？请指教","like_count":0,"discussions":[{"author":{"id":1258861,"avatar":"https://static001.geekbang.org/account/avatar/00/13/35/6d/07a42f81.jpg","nickname":"郑晔","note":"","ucode":"1EBD5AA5D4FC89","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":514289,"discussion_content":"通常来说，在写代码的过程中，map 是一种数据结构，而 mapping 是映射的意思，英文上是不一样的。重点不是 map 对象该如何命名，而是业务上是什么含义。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1611452384,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":270891,"user_name":"长发姑娘","can_delete":false,"product_type":"c1","uid":1347602,"ip_address":"","ucode":"6A3D60F4886837","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTKcqnTRJ8rcoHEMBKNc2aZBnNy7ByTK1v2U3nmgYPbODiahs7ePd9VZy37ySAfsPZFQ0MzUicCsLUVA/132","comment_is_top":false,"comment_ctime":1609313615,"is_pvip":false,"replies":[{"id":"98349","content":"加油，我们一起精进！","user_name":"作者回复","user_name_real":"郑晔","uid":"1258861","ctime":1609512666,"ip_address":"","comment_id":270891,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1609313615","product_id":100068401,"comment_content":"看了老师提到的根据业务场景去命名，真的很提高我的认知。以往对于命名的规范只存在于不要使用不明含义的表达，但是却从来没有人告诉我们需要使用表达清晰到位的词语去进行命名。<br><br>userId 以及 xxxList，xxxMap 这些在太多场景下被使用，看了老师的分析深深的震撼了我。即使是写业务代码，原来我们也可以将自己的代码打磨的更加精准。跟着老师学，一步一步精进。","like_count":0,"discussions":[{"author":{"id":1258861,"avatar":"https://static001.geekbang.org/account/avatar/00/13/35/6d/07a42f81.jpg","nickname":"郑晔","note":"","ucode":"1EBD5AA5D4FC89","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":512782,"discussion_content":"加油，我们一起精进！","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1609512666,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":270682,"user_name":"☞亡","can_delete":false,"product_type":"c1","uid":1209115,"ip_address":"","ucode":"C064A834A9BDE2","user_header":"https://static001.geekbang.org/account/avatar/00/12/73/1b/9eb14f07.jpg","comment_is_top":false,"comment_ctime":1609216515,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1609216515","product_id":100068401,"comment_content":"刷新了我的认知。","like_count":0}]}