{"id":111675,"title":"08 | 有话好商量，论媒体协商","content":"<p>在<a href=\"https://time.geekbang.org/column/article/111337\">《07 | 你竟然不知道SDP？它可是WebRTC的驱动核心！》</a>一文中，我向你详细介绍了标准 SDP 规范，以及 WebRTC 与标准 SDP 规范的一些不同，而本文我们将重点学习一下 WebRTC 究竟是如何使用 SDP 规范进行<strong>媒体协商</strong>的。</p><p>我们平时所说的<strong>协商</strong>你应该清楚是什么意思，说白了就是讨价还价。以买白菜为例，商家说 5元一颗，买家说身上只有 4.5元卖不卖？商家同意卖，这样一次协商就完成了。</p><p>而<strong>媒体协商</strong>也是这个意思，只不过它们讨价还价的不是一般商品，而是与媒体相关的能力。那<strong>媒体能力</strong>是什么呢？实际就是你的设备所支持的音视频编解码器、使用的传输协议、传输的速率是多少等信息。</p><p>所以简单地说，<strong>媒体协商</strong>就是看看你的设备都支持那些编解码器，我的设备是否也支持？如果我的设备也支持，那么咱们双方就算协商成功了。</p><h2>在WebRTC 处理过程中的位置</h2><p>在正式进入主题之前，我们还是来看看本文在整个 WebRTC 处理过程中的位置，如下图所示：</p><p><img src=\"https://static001.geekbang.org/resource/image/f5/de/f5a65fd87dc667af6761ba7e25abe1de.png?wh=1142*599\" alt=\"\"></p><center><span class=\"reference\">WebRTC处理过程图</span></center><p>通过这张图你可以了解到，本文所涉及的内容包括<strong>创建连接</strong>和<strong>信令</strong>两部分。</p><ul>\n<li>创建连接，指的是创建RTCPeerConnection，它负责端与端之间彼此建立 P2P 连接。在后面 RTCPeerConnection 一节中，我们还会对其做进一步的介绍。</li>\n<li>信令，指的是客户端通过信令服务器交换 SDP 信息。</li>\n</ul><!-- [[[read_end]]] --><p>所以从本文开始，我们就开始讲解 WebRTC 最核心的一部分知识了，下面就让我们开始吧。</p><h2>WebRTC中媒体协商的作用</h2><p>在 WebRTC 1.0 规范中，在双方通信时，双方必须清楚彼此使用的编解码器是什么，也必须知道传输过来的音视频流的 SSRC（SSRC的概念参见<a href=\"https://time.geekbang.org/column/article/109999\">《06 | WebRTC中的RTP及RTCP详解》</a>一文）信息，如果连这些最基本的信息彼此都不清楚的话，那么双方是无法正常通信的。</p><p>举个例子，如果WebRTC不清楚对方使用的是哪种编码器编码的数据，比如到底是H264，还是VP8？那WebRTC就无法将这些数据包正常解码，还原成原来的音视频帧，这将导致音视频无法正常显示或播放。</p><p>同样的道理，如果WebRTC不知道对方发过来的音视频流的 SSRC 是多少，那么WebRTC就无法对该音视频流的合法性做验证，这也将导致你无法观看正常的音视频。因为对于无法验证的音视频流，WebRTC在接收音视频包后会直接将其抛弃。</p><p>通过上面的描述，我想你已经非常清楚媒体协商的作用是什么了。没错，<strong>媒体协商的作用就是让双方找到共同支持的媒体能力</strong>，如双方都支持的编解码器，从而<strong>最终实现彼此之间的音视频通信</strong>。</p><p>那 WebRTC 是怎样进行媒体协商的呢？这就要用到<a href=\"https://time.geekbang.org/column/article/111337\">《07 | 你竟然不知道SDP？它可是WebRTC的驱动核心！》</a>文章中讲解的 SDP了。</p><ul>\n<li>首先，通信双方将它们各自的媒体信息，如编解码器、媒体流的SSRC、传输协议、IP地址和端口等，按 SDP 格式整理好。</li>\n<li>然后，通信双方通过信令服务器交换SDP信息，并待彼此拿到对方的 SDP 信息后，找出它们共同支持的媒体能力。</li>\n<li>最后，双方按照协商好的媒体能力开始音视频通信。</li>\n</ul><p>WebRTC 进行媒体协商的步骤基本如上所述。接下来，我们来看看 WebRTC 具体是如何操作的。</p><h2>RTCPeerConnection</h2><p>讲到媒体协商，我们就不得不介绍一下 RTCPeerConnection 类， 顾名思义，它表示的就是端与端之间建立的<strong>连接</strong>。</p><p>该类是整个 WebRTC 库中<strong>最关键</strong>的一个类，通过它创建出来的对象可以做很多事情，如NAT穿越、音视频数据的接收与发送，甚至它还可以用于非音视频数据的传输等等 。</p><p>而在这里我们之所以要介绍RTCPeerConnection，最主要的原因是<strong>我们今天要讲的端到端之间的媒体协商，就是基于 RTCPeerConnection 对象实现的</strong>。</p><p>首先，我们来看一下如何创建一个RTCPeerConnection对象：</p><pre><code>...\nvar pcConfig = null;\nvar pc = new RTCPeerConnection(pcConfig);\n...\n</code></pre><p>在JavaScript下创建RTCPeerConnection对象非常简单，如上所述，只要通过 new 关键字创建即可。</p><p>在创建 RTCPeerConnection 对象时，还可以给它传一个参数<strong>pcConfig</strong>，该参数的结构非常复杂，这里我们先将其设置为null，后面在《12 | RTCPeerConnection：音视频实时通讯的核心》一文中我再对其做更详尽的描述。</p><p>有了RTCPeerConnection对象，接下来，让我们再来看看端与端之间是如何进行媒体协商的吧！</p><h2>媒体协商的过程</h2><p><strong>在通讯双方都创建好 RTCPeerConnection 对象后</strong>，它们就可以开始进行媒体协商了。不过在进行媒体协商之前，有两个重要的概念，即 <strong>Offer</strong> 与 <strong>Answer</strong> ，你必须要弄清楚。</p><p>Offer 与 Answer 是什么呢？对于1对1 通信的双方来说，我们称首先发送媒体协商消息的一方为<strong>呼叫方</strong>，而另一方则为<strong>被呼叫方</strong>。</p><ul>\n<li>Offer，在双方通讯时，呼叫方发送的 SDP 消息称为 Offer。</li>\n<li>Answer，在双方通讯时，被呼叫方发送的 SDP 消息称为  Answer。</li>\n</ul><p>在WebRTC中，双方协商的整个过程如下图所示：</p><p><img src=\"https://static001.geekbang.org/resource/image/55/29/55971e410ce15be231b3f5fab0881e29.png?wh=1142*628\" alt=\"\"></p><center><span class=\"reference\">媒体协商过程图</span></center><p>首先，呼叫方创建 Offer 类型的SDP消息。创建完成后，调用 setLocalDescriptoin 方法将该Offer 保存到本地 Local 域，然后通过信令将 Offer 发送给被呼叫方。</p><p>被呼叫方收到 Offer 类型的 SDP 消息后，调用 setRemoteDescription 方法将 Offer 保存到它的 Remote 域。作为应答，被呼叫方要创建  Answer 类型的 SDP 消息，Answer消息创建成功后，再调用 setLocalDescription 方法将 Answer 类型的 SDP 消息保存到本地的 Local 域。最后，被呼叫方将 Answer 消息通过信令发送给呼叫方。至此，被呼叫方的工作就完部完成了。</p><p>接下来是呼叫方的收尾工作，呼叫方收到 Answer 类型的消息后，调用 RTCPeerConnecton 对象的 setRemoteDescription 方法，将 Answer 保存到它的 Remote 域。</p><p>至此，<strong>整个媒体协商过程处理完毕</strong>。</p><p>当通讯双方拿到彼此的SDP信息后，就可以进行媒体协商了。媒体协商的具体过程是在 WebRTC内部实现的，我们就不去细讲了。你只需要记住本地的 SDP 和远端的 SDP 都设置好后，协商就算成功了。</p><h2>媒体协商的代码实现</h2><p>了解了WebRTC的媒体协商过程之后，我们再看一下如何使用 JavaScript 代码来实现这一功能。浏览器提供了几个非常方便的 API，这些 API 是对底层 WebRTC API 的封装。如下所示：</p><ul>\n<li>createOffer ，创建 Offer；</li>\n<li>createAnswer，创建 Answer；</li>\n<li>setLocalDescription，设置本地 SDP 信息；</li>\n<li>setRemoteDescription，设置远端的 SDP 信息。</li>\n</ul><p>接下来，我们就结合上述的协商过程对这几个重要的 API 做下详细的讲解。</p><h3>1. 呼叫方创建Offer</h3><p>当呼叫方发起呼叫之前，首先要创建 Offer 类型的 SDP 信息，即调用 <strong>RTCPeerConnection</strong> 的 createOffer() 方法。代码如下：</p><pre><code>   function doCall() {\n       console.log('Sending offer to peer');\n       pc.createOffer(setLocalAndSendMessage, handleCreateOfferError);\n\t}\t\n</code></pre><p>如果createOffer函数调用成功的话，浏览器会回调我们设置的 setLocalAndSendMessage 方法，你可以在 setLocalAndSendMessage 方法里获取到 <strong>RTCSessionDescription 类型的 SDP 信息</strong>；如果出错则会回调 handleCreateOfferError 方法。</p><p>最终，在 setLocalAndSendMessage 回调方法中，通过 <strong>setLocalDescription()</strong> 方法将本地SDP描述信息设置到 WebRTC 的Local  域。然后通过信令通道将此会话描述发送给被呼叫方。代码如下所示：</p><pre><code>  function setLocalAndSendMessage(sessionDescription) {\n      pc.setLocalDescription(sessionDescription);\n      sendMessage(sessionDescription);\n  }\n</code></pre><h3>2. 被呼叫方收到Offer</h3><p>被呼叫方收到 Offer 后，调用 <strong>setRemoteDescription</strong> 方法设置呼叫方发送给它的Offer作为远端描述。代码如下：</p><pre><code>  socket.on('message', function(message) {\n      ...\n      } else if (message.type === 'offer') {\n    \n          pc.setRemoteDescription(new RTCSessionDescription(message));\n          doAnswer();\n      } else if (...) {\n          ...\n      }\n      ....\n  });\n</code></pre><h3>3. 被呼叫方创建Answer</h3><p>然后，被呼叫方调用 RTCPeerConnection 对象的 createAnswer 方法，它会生成一个与远程会话兼容的本地会话，并最终将该会话描述发送给呼叫方。</p><pre><code> function doAnswer() {\n     pc.createAnswer().then(\n         setLocalAndSendMessage,\n         onCreateSessionDescriptionError\n     );\n }\n</code></pre><h3>4. 呼叫方收到Answer</h3><p>当呼叫方得到被呼叫方的会话描述，即 SDP 时，调用 setRemoteDescription方法，将收到的会话描述设置为一个远程会话。代码如下：</p><pre><code>  socket.on('message', function(message) {\n      ...\n      } else if (message.type === 'answer') {\n    \n          pc.setRemoteDescription(new RTCSessionDescription(message));\n      } else if (...) {\n          ...\n      }\n      ....\n  });\n</code></pre><p>此时，媒体协商过程完成。紧接着在 WebRTC 底层会收集 Candidate，并进行连通性检测，最终在通话双方之间建立起一条链路来。</p><p>以上就是通信双方交换媒体能力信息的过程。 对于你来说，如果媒体协商这个逻辑没搞清楚的话，那么，你在编写音视频相关程序时很容易出现各种问题，最常见的就是音视之间不能互通。</p><p>另外，<strong>需要特别注意的是，通信双方链路的建立是在设置本地媒体能力，即调用 setLocalDescription 函数之后才进行的</strong>。</p><h2>小结</h2><p>在本文中，我向你详细介绍了 WebRTC 进行媒体协商的过程，这个过程是你必须牢记在脑子里的。如果对这块不熟悉的话，后面你在真正使用 WebRTC 开发音视频应用程序时就会遇到各种困难，如音视频不通、单通等情况。</p><p>另外，本文还向你简要介绍了 RTCPeerConnection 对象，它是 WebRTC 的核心 API，媒体协商的具体操作都是通过该对象来完成的。对于该对象，我会在后面的文章中做更详尽的解答。</p><p>RTCPeerConnection 除了会在端与端之间建立连接、传输音视频数据外，还要进行两次绑定：一次是与媒体源进行绑定，以解决数据从哪里来的问题；另外一次是与输出进行绑定，以解决接收到的音视频数据显示/播放的问题。</p><h2>思考时间</h2><p>在 WebRTC中，SDP 消息的交换是使用 RTCPeerConnection 对象完成的吗？</p><p>欢迎在留言区与我分享你的想法，也欢迎你在留言区记录你的思考过程。感谢阅读，如果你觉得这篇文章对你有帮助的话，也欢迎把它分享给更多的朋友。</p><p></p>","neighbors":{"left":{"article_title":"07 | 你竟然不知道SDP？它可是WebRTC的驱动核心！","id":111337},"right":{"article_title":"09 | 让我们揭开WebRTC建立连接的神秘面纱","id":112325}},"comments":[{"had_liked":false,"id":161532,"user_name":"qiezitx","can_delete":false,"product_type":"c1","uid":1664274,"ip_address":"","ucode":"AEA470E33B4C19","user_header":"https://static001.geekbang.org/account/avatar/00/19/65/12/98fe9d80.jpg","comment_is_top":false,"comment_ctime":1576224860,"is_pvip":false,"replies":[{"id":"62493","content":"非常准确！","user_name":"作者回复","comment_id":161532,"uid":"1507837","ip_address":"","utype":1,"ctime":1577025304,"user_name_real":"garrylee"}],"discussion_count":1,"race_medal":0,"score":"61705767004","product_id":100031801,"comment_content":"sdp信息的交换是通过信令服务器完成的，只不过sdp的填写是通过RTCPeerConnection完成的","like_count":15,"discussions":[{"author":{"id":1507837,"avatar":"https://static001.geekbang.org/account/avatar/00/17/01/fd/69869646.jpg","nickname":"音视频专家-李超","note":"","ucode":"5557943CF28441","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":477752,"discussion_content":"非常准确！","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1577025304,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":119461,"user_name":"wuqilv","can_delete":false,"product_type":"c1","uid":1169314,"ip_address":"","ucode":"B9C4A2C2FF32AE","user_header":"https://static001.geekbang.org/account/avatar/00/11/d7/a2/5f6b90a9.jpg","comment_is_top":false,"comment_ctime":1564595106,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"18744464290","product_id":100031801,"comment_content":"客户端通过信令服务器交换 SDP 信息。","like_count":4},{"had_liked":false,"id":230876,"user_name":"波波安","can_delete":false,"product_type":"c1","uid":1044388,"ip_address":"","ucode":"1BF03F6698CA65","user_header":"https://static001.geekbang.org/account/avatar/00/0f/ef/a4/8882d172.jpg","comment_is_top":false,"comment_ctime":1593511135,"is_pvip":true,"replies":[{"id":"87933","content":"修改SDP,将m=video中的多个编码器换一下位置，把H264放在最前面就可以了。不过由于WebRTC的整体机制没有对 H264做特别好的适配，所以特别容易产生卡顿与花屏。","user_name":"作者回复","comment_id":230876,"uid":"1507837","ip_address":"","utype":1,"ctime":1596027598,"user_name_real":"音视频专家-李超"}],"discussion_count":1,"race_medal":0,"score":"14478413023","product_id":100031801,"comment_content":"我使用chrome播放h264视频流，流媒体使用kurento，内部做了转码为vp8，chrome默认使用vp8协商，什么方法可以使chrome使用h264，避免转码","like_count":4,"discussions":[{"author":{"id":1507837,"avatar":"https://static001.geekbang.org/account/avatar/00/17/01/fd/69869646.jpg","nickname":"音视频专家-李超","note":"","ucode":"5557943CF28441","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":500058,"discussion_content":"修改SDP,将m=video中的多个编码器换一下位置，把H264放在最前面就可以了。不过由于WebRTC的整体机制没有对 H264做特别好的适配，所以特别容易产生卡顿与花屏。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1596027598,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":142303,"user_name":"俊哥","can_delete":false,"product_type":"c1","uid":1678451,"ip_address":"","ucode":"C5548F817D97B0","user_header":"https://static001.geekbang.org/account/avatar/00/19/9c/73/4d23e4f2.jpg","comment_is_top":false,"comment_ctime":1571329516,"is_pvip":false,"replies":[{"id":"55200","content":"通过信令服务器转发。 A与B都要先与信令服务器建立连接，之后通过服务器转发。","user_name":"作者回复","comment_id":142303,"uid":"1507837","ip_address":"","utype":1,"ctime":1571586515,"user_name_real":"garrylee"}],"discussion_count":3,"race_medal":0,"score":"14456231404","product_id":100031801,"comment_content":"老师，我有一个疑问，A怎么知道呼叫的B而不是其他的C、D呢？从你的js代码里没有看出来对B的描述，比如B的ip地址是xxx.xxx.xxx.xxx。那么A调用sendMessage(sessionDescription)发到哪里去了呢？","like_count":3,"discussions":[{"author":{"id":1507837,"avatar":"https://static001.geekbang.org/account/avatar/00/17/01/fd/69869646.jpg","nickname":"音视频专家-李超","note":"","ucode":"5557943CF28441","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":471068,"discussion_content":"通过信令服务器转发。 A与B都要先与信令服务器建立连接，之后通过服务器转发。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1571586515,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1148770,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTIROsBAWicJYLbnzYH3ibiaX2T2am9z4IKxp34uJSgib2ntfh9zKLtndAcfCUJHLZO7Q3jkia3aKu8eOSg/132","nickname":"lqq热爱学习","note":"","ucode":"25795B06CA56A1","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":369428,"discussion_content":"sendMessage是你自己实现的, 你要负责写一个服务把offer从A端发送给B端, 然后B端协商完成后返回给A端, 这个是你自己要做的一个服务, webrtc并没有规定你要怎么做, 现在主流的做法是搞一个信令服务器, 也称之为房间服务","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1619021339,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1029473,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/b5/61/9802a552.jpg","nickname":"ican_只会0到9","note":"","ucode":"9EE33C42EE519D","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":272391,"discussion_content":"找一个中间人","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1590297361,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":119487,"user_name":"Jian","can_delete":false,"product_type":"c1","uid":1023040,"ip_address":"","ucode":"358133EC2AFEB0","user_header":"https://static001.geekbang.org/account/avatar/00/0f/9c/40/6323850e.jpg","comment_is_top":false,"comment_ctime":1564618692,"is_pvip":false,"replies":[{"id":"43840","content":"谁先发起呼叫谁就发offer,另一方发answer;这完全有应用层控制；比如第一个人进入房间后，就在哪里等待，当发现第二个人上来的时候它就给对方发offer 就好了。如果两个人同时进入房间，就在服务器端建个队列，让他们顺序进入就好了，非常好处理对吧？另外两端都发offer 那协商必然失败。","user_name":"作者回复","comment_id":119487,"uid":"1507837","ip_address":"","utype":1,"ctime":1564626679,"user_name_real":"garrylee"}],"discussion_count":3,"race_medal":0,"score":"14449520580","product_id":100031801,"comment_content":"呼叫方和被呼叫方的角色是如何确认的呢？会否存在两端都向对方发送offer的情况？是由服务器确定的？","like_count":3,"discussions":[{"author":{"id":1507837,"avatar":"https://static001.geekbang.org/account/avatar/00/17/01/fd/69869646.jpg","nickname":"音视频专家-李超","note":"","ucode":"5557943CF28441","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":460923,"discussion_content":"谁先发起呼叫谁就发offer,另一方发answer;这完全有应用层控制；比如第一个人进入房间后，就在哪里等待，当发现第二个人上来的时候它就给对方发offer 就好了。如果两个人同时进入房间，就在服务器端建个队列，让他们顺序进入就好了，非常好处理对吧？另外两端都发offer 那协商必然失败。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1564626679,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1105387,"avatar":"https://static001.geekbang.org/account/avatar/00/10/dd/eb/80f9d212.jpg","nickname":"lttzzlll","note":"","ucode":"FA160F7C02ABAA","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":397592,"discussion_content":"用队列保证顺序，不会出现 “同时进入”的情况。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1632647745,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1078023,"avatar":"https://static001.geekbang.org/account/avatar/00/10/73/07/c1a31ede.jpg","nickname":"刘先森","note":"","ucode":"87ACF0D9AFD52D","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":139626,"discussion_content":"在node中不会出现同时进入的情况吧","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1579309045,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":208964,"user_name":"icema","can_delete":false,"product_type":"c1","uid":1967595,"ip_address":"","ucode":"0054EBA80A8E5F","user_header":"https://thirdwx.qlogo.cn/mmopen/vi_32/6Cyqp7uksJibb0mowEHwauO21PhC2caIBz0ZZQq9Xpzo9jGYYnXamIP6n6YJWoDm9wngTPh0x8GzDLpaun6H9HA/132","comment_is_top":false,"comment_ctime":1587474740,"is_pvip":false,"replies":[{"id":"78596","content":"你可能通过receiver里的统计信息来判断","user_name":"作者回复","comment_id":208964,"uid":"1507837","ip_address":"","utype":1,"ctime":1587983224,"user_name_real":"garrylee"}],"discussion_count":1,"race_medal":0,"score":"10177409332","product_id":100031801,"comment_content":"目前遇到了采集steam没有声音的问题，对方听不到我的声音，并且是偶现，不是必现，前端有没有什么方式可以检测或者监控采集到的流是存在异常的或者没有声音的呢？","like_count":2,"discussions":[{"author":{"id":1507837,"avatar":"https://static001.geekbang.org/account/avatar/00/17/01/fd/69869646.jpg","nickname":"音视频专家-李超","note":"","ucode":"5557943CF28441","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":492687,"discussion_content":"你可能通过receiver里的统计信息来判断","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1587983224,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":119814,"user_name":"君","can_delete":false,"product_type":"c1","uid":1607419,"ip_address":"","ucode":"F3051212585BF5","user_header":"https://thirdwx.qlogo.cn/mmopen/vi_32/u9oss767Kxzbl3SVgibUzngqMiafndGzA43bgPTw8BRvTCGicAl5La5HfZJm9rTYQJBE65TkePiaVEtMDquUIaEOAg/132","comment_is_top":false,"comment_ctime":1564707458,"is_pvip":false,"replies":[{"id":"44091","content":"你可以使用sip 协议做信令，但sip 协议用的人比较少，一般都在监控系统中使用，目前开源的基本没有人使用sip 与WebRTC 结合","user_name":"作者回复","comment_id":119814,"uid":"1507837","ip_address":"","utype":1,"ctime":1564796553,"user_name_real":"garrylee"}],"discussion_count":2,"race_medal":0,"score":"10154642050","product_id":100031801,"comment_content":"请问老师哪些开源的sip框架支持webrtbc的吗","like_count":2,"discussions":[{"author":{"id":1507837,"avatar":"https://static001.geekbang.org/account/avatar/00/17/01/fd/69869646.jpg","nickname":"音视频专家-李超","note":"","ucode":"5557943CF28441","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":461083,"discussion_content":"你可以使用sip 协议做信令，但sip 协议用的人比较少，一般都在监控系统中使用，目前开源的基本没有人使用sip 与WebRTC 结合","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1564796553,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1625822,"avatar":"https://static001.geekbang.org/account/avatar/00/18/ce/de/6a9aa35a.jpg","nickname":"极有钱","note":"","ucode":"F42EA654005525","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":60582,"discussion_content":"据说sipjs 就是用webrtc实现的sip","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1574739324,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":288601,"user_name":"Her later","can_delete":false,"product_type":"c1","uid":2033044,"ip_address":"","ucode":"85BDB2DC93C0F2","user_header":"https://static001.geekbang.org/account/avatar/00/1f/05/94/e55abef3.jpg","comment_is_top":false,"comment_ctime":1618556994,"is_pvip":false,"replies":[{"id":"105426","content":"Webrtc 底层收集的candidate 是他自己的地址信息呀，需要通过信令服务器交换给对端双方才能通信","user_name":"作者回复","comment_id":288601,"uid":"1507837","ip_address":"","utype":1,"ctime":1619871111,"user_name_real":"音视频专家-李超"}],"discussion_count":2,"race_medal":0,"score":"5913524290","product_id":100031801,"comment_content":"此时，媒体协商过程完成。紧接着在 WebRTC 底层会收集 Candidate，并进行连通性检测，最终在通话双方之间建立起一条链路来。<br>如果 Candidate 是 WebRTC 底层收集的 ，那么为什么还需要经过信令服务器呢 ？<br>","like_count":1,"discussions":[{"author":{"id":1507837,"avatar":"https://static001.geekbang.org/account/avatar/00/17/01/fd/69869646.jpg","nickname":"音视频专家-李超","note":"","ucode":"5557943CF28441","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":518681,"discussion_content":"Webrtc 底层收集的candidate 是他自己的地址信息呀，需要通过信令服务器交换给对端双方才能通信","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1619871111,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1148770,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTIROsBAWicJYLbnzYH3ibiaX2T2am9z4IKxp34uJSgib2ntfh9zKLtndAcfCUJHLZO7Q3jkia3aKu8eOSg/132","nickname":"lqq热爱学习","note":"","ucode":"25795B06CA56A1","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":369424,"discussion_content":"Candidate的数据是ice那一套获得的, Candidate数据是要给对端, 让对方连上你. 双端是不能直接交换数据的, 只能通过信令服务器获取到对方的Candidate才能连上对方.","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1619020665,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":177596,"user_name":"Benjamin","can_delete":false,"product_type":"c1","uid":1168314,"ip_address":"","ucode":"9650EFA8481B41","user_header":"https://static001.geekbang.org/account/avatar/00/11/d3/ba/75f3b73b.jpg","comment_is_top":false,"comment_ctime":1581431357,"is_pvip":false,"replies":[{"id":"70153","content":"协商成功之后就不会再有了，除非你自己要重新再进行协商","user_name":"作者回复","comment_id":177596,"uid":"1507837","ip_address":"","utype":1,"ctime":1582429837,"user_name_real":"garrylee"}],"discussion_count":1,"race_medal":0,"score":"5876398653","product_id":100031801,"comment_content":"两端的 SDP 的创建都是在 RTCPeerConnection 中完成，创建好了 SDP 信息。至于两端交换这个 SDP 的实现，是完全可以剥离解耦的。<br>常见就是用 single 服务器来交换，至于交换 SDP 的具体承载模式都是自己去实现的。<br>常见就是用 socket，为了好玩或者一些常见用 HTTP 也可以，甚至可以生成 txt 文件在用 ftp 交换都可以只要不嫌麻烦 😀<br><br>但是，SDP 第一次后的来回交换是不是还有，这块一直很疑惑。","like_count":2,"discussions":[{"author":{"id":1507837,"avatar":"https://static001.geekbang.org/account/avatar/00/17/01/fd/69869646.jpg","nickname":"音视频专家-李超","note":"","ucode":"5557943CF28441","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":483478,"discussion_content":"协商成功之后就不会再有了，除非你自己要重新再进行协商","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1582429837,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":119666,"user_name":"Jason","can_delete":false,"product_type":"c1","uid":1053390,"ip_address":"","ucode":"ABB3F1A63E102A","user_header":"https://static001.geekbang.org/account/avatar/00/10/12/ce/a8c8b5e8.jpg","comment_is_top":false,"comment_ctime":1564648947,"is_pvip":false,"replies":[{"id":"43913","content":"有没有想过用http？它可是浏览器天然的哈","user_name":"作者回复","comment_id":119666,"uid":"1507837","ip_address":"","utype":1,"ctime":1564664505,"user_name_real":"garrylee"}],"discussion_count":1,"race_medal":0,"score":"5859616243","product_id":100031801,"comment_content":"思考题：从老师的讲解来看，SDP 消息的交换不是使用 RTCPeerConnection对象完成的，RTCPeerConnection对象负责创建offer、设置本地SDP描述信息、设置远端SDP描述信息、创建answer。交换SDP消息应该是socket对象完成的，但socket的类型啥呢，还不知道。<br>","like_count":1,"discussions":[{"author":{"id":1507837,"avatar":"https://static001.geekbang.org/account/avatar/00/17/01/fd/69869646.jpg","nickname":"音视频专家-李超","note":"","ucode":"5557943CF28441","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":461005,"discussion_content":"有没有想过用http？它可是浏览器天然的哈","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1564664505,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":119504,"user_name":"Beast-Of-Prey","can_delete":false,"product_type":"c1","uid":1615956,"ip_address":"","ucode":"C8BAEB1EFA50EE","user_header":"https://static001.geekbang.org/account/avatar/00/18/a8/54/06da255b.jpg","comment_is_top":false,"comment_ctime":1564620133,"is_pvip":false,"replies":[{"id":"43835","content":"由于信令数据量不大，所以你可选择的协议就比较多了，TCP、HTTP&#47;HTTPS、WS&#47;WSS，都可以，底层实现都是用的socket","user_name":"作者回复","comment_id":119504,"uid":"1507837","ip_address":"","utype":1,"ctime":1564626344,"user_name_real":"garrylee"}],"discussion_count":1,"race_medal":0,"score":"5859587429","product_id":100031801,"comment_content":"发送信令用socket？<br>","like_count":1,"discussions":[{"author":{"id":1507837,"avatar":"https://static001.geekbang.org/account/avatar/00/17/01/fd/69869646.jpg","nickname":"音视频专家-李超","note":"","ucode":"5557943CF28441","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":460933,"discussion_content":"由于信令数据量不大，所以你可选择的协议就比较多了，TCP、HTTP/HTTPS、WS/WSS，都可以，底层实现都是用的socket","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1564626344,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":346928,"user_name":"npersonal","can_delete":false,"product_type":"c1","uid":1337630,"ip_address":"","ucode":"060839D2BF5E33","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTKOCkbWo7KTAUYkTk5sqgOSAdjS51ZH8bTxiaBNLVnIFUOMsicBHRJBoXSOX6sZp5uORE2waGyz3ysw/132","comment_is_top":false,"comment_ctime":1653540847,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1653540847","product_id":100031801,"comment_content":"老师，有办法指定codec是使用硬解还是软解吗，目前发现在苹果设备上硬解一些h264的视频会失败掉，safari也没有降级处理，chrome有降级到软解","like_count":0},{"had_liked":false,"id":340300,"user_name":"冤大头","can_delete":false,"product_type":"c1","uid":2440525,"ip_address":"","ucode":"692BD60A03D593","user_header":"","comment_is_top":false,"comment_ctime":1648731644,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1648731644","product_id":100031801,"comment_content":"多人进来协商，然后如果ABC已经协商好了 在通话视频，然后D进来，是要跟ABC三人都协商么？4个人要协商出来一个相同的交集么？如果第四个人进来没有交集，比如前三个支持h264,第四个人只支持vp8，怎么办？","like_count":0},{"had_liked":false,"id":288058,"user_name":"Her later","can_delete":false,"product_type":"c1","uid":2033044,"ip_address":"","ucode":"85BDB2DC93C0F2","user_header":"https://static001.geekbang.org/account/avatar/00/1f/05/94/e55abef3.jpg","comment_is_top":false,"comment_ctime":1618283077,"is_pvip":false,"replies":[{"id":"105429","content":"没上来一个人就发送一次offer 和answer ","user_name":"作者回复","comment_id":288058,"uid":"1507837","ip_address":"","utype":1,"ctime":1619871431,"user_name_real":"音视频专家-李超"}],"discussion_count":1,"race_medal":0,"score":"1618283077","product_id":100031801,"comment_content":"如果多人互动，怎么交换sdp呢，每两个人之间都需要发送offer和answer 吗？1v1场景，一个发offer 一个发answer ，怎么确保发offer 的人会先进房间呢？","like_count":0,"discussions":[{"author":{"id":1507837,"avatar":"https://static001.geekbang.org/account/avatar/00/17/01/fd/69869646.jpg","nickname":"音视频专家-李超","note":"","ucode":"5557943CF28441","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":518501,"discussion_content":"没上来一个人就发送一次offer 和answer ","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1619871431,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":257427,"user_name":"Bubbly","can_delete":false,"product_type":"c1","uid":1932887,"ip_address":"","ucode":"5AAAFDBCBC4CEB","user_header":"https://static001.geekbang.org/account/avatar/00/1d/7e/57/588337e9.jpg","comment_is_top":false,"comment_ctime":1603967886,"is_pvip":false,"replies":[{"id":"94539","content":"在信令服务器上有room的概念，大家要先加入到同一个room中，这样就可以彼此找到对方了","user_name":"作者回复","comment_id":257427,"uid":"1507837","ip_address":"","utype":1,"ctime":1605003504,"user_name_real":"音视频专家-李超"}],"discussion_count":2,"race_medal":0,"score":"1603967886","product_id":100031801,"comment_content":"<br>  function setLocalAndSendMessage(sessionDescription) {<br>      pc.setLocalDescription(sessionDescription);<br>      sendMessage(sessionDescription);<br>  }<br>这里的sendMessage在真实项目中是如何实现的呢？创建者是如何准确的找到对端的呢？这里没搞清楚","like_count":0,"discussions":[{"author":{"id":1507837,"avatar":"https://static001.geekbang.org/account/avatar/00/17/01/fd/69869646.jpg","nickname":"音视频专家-李超","note":"","ucode":"5557943CF28441","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":508325,"discussion_content":"在信令服务器上有room的概念，大家要先加入到同一个room中，这样就可以彼此找到对方了","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1605003504,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1148770,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTIROsBAWicJYLbnzYH3ibiaX2T2am9z4IKxp34uJSgib2ntfh9zKLtndAcfCUJHLZO7Q3jkia3aKu8eOSg/132","nickname":"lqq热爱学习","note":"","ucode":"25795B06CA56A1","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":369427,"discussion_content":"webrtc都没有规定, webrtc只规定了offer/answer这个流程, 至于你offer怎么发到对端, answer怎么接受都是你自己实现. 甚至你可以直接手动输入这些信息(当然这个是开玩笑的,我们都是不会这么实现的), 一般都是通过一个叫信令服务器的交换数据, 也称之为房间服务. ","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1619021174,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":215901,"user_name":"林晓威","can_delete":false,"product_type":"c1","uid":1972511,"ip_address":"","ucode":"1CD7376C5A7F23","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/uoPcB6q9VZmyV1IYrnBiaYneyrTeibjSbo981QYQK7O968w1ticehtGmNJ8Kx9EdKFwoiczuUT3blkNn1EBO3PXWgA/132","comment_is_top":false,"comment_ctime":1589127908,"is_pvip":true,"replies":[{"id":"81391","content":"JS 的 socket.io 库","user_name":"作者回复","comment_id":215901,"uid":"1507837","ip_address":"","utype":1,"ctime":1590295693,"user_name_real":"音视频专家-李超"}],"discussion_count":1,"race_medal":0,"score":"1589127908","product_id":100031801,"comment_content":"老师，那个socket对象是用什么类创建的","like_count":0,"discussions":[{"author":{"id":1507837,"avatar":"https://static001.geekbang.org/account/avatar/00/17/01/fd/69869646.jpg","nickname":"音视频专家-李超","note":"","ucode":"5557943CF28441","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":494602,"discussion_content":"JS 的 socket.io 库","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1590295693,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":119944,"user_name":"scorpio","can_delete":false,"product_type":"c1","uid":1097663,"ip_address":"","ucode":"E70367E765C33E","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTLqw36DnEjicRuXZO3fg3FftGLu6Kyvf7mOh456wicRan0hnghLoGowpYjnic5aTVESLE7oWqjljvj4A/132","comment_is_top":false,"comment_ctime":1564734896,"is_pvip":true,"replies":[{"id":"44201","content":"应该要做协议转换， 要看 NVR用的啥协议，SIP？","user_name":"作者回复","comment_id":119944,"uid":"1507837","ip_address":"","utype":1,"ctime":1564919980,"user_name_real":"garrylee"}],"discussion_count":1,"race_medal":0,"score":"1564734896","product_id":100031801,"comment_content":"老师，从NVR推流到Web端展示监控的实时视频，有什么好的解决方案吗？系统运行在内网上","like_count":0,"discussions":[{"author":{"id":1507837,"avatar":"https://static001.geekbang.org/account/avatar/00/17/01/fd/69869646.jpg","nickname":"音视频专家-李超","note":"","ucode":"5557943CF28441","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":461142,"discussion_content":"应该要做协议转换， 要看 NVR用的啥协议，SIP？","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1564919980,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":119733,"user_name":"Geek_e39e6f","can_delete":false,"product_type":"c1","uid":1462248,"ip_address":"","ucode":"E84FEA1FF40AC7","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/DYAIOgq83eo6WShSZ8pdClLHyxyH8ER3HlaQN8mWUCWiasIe5RUCWJ0Rbxq4eMIibibt606yh2cpTicZoyCou8Eaxg/132","comment_is_top":false,"comment_ctime":1564667691,"is_pvip":false,"replies":[{"id":"43918","content":"你说的那是以前了，现在方式已经改了！","user_name":"作者回复","comment_id":119733,"uid":"1507837","ip_address":"","utype":1,"ctime":1564672787,"user_name_real":"garrylee"}],"discussion_count":3,"race_medal":0,"score":"1564667691","product_id":100031801,"comment_content":" WebRTC 底层会收集 Candidate，就是通过stun，turn服务获取候选地址吗？<br>这个流程不是在交换sdp之前就应该获取，然后记录在sdp里，发送给对端的吗？","like_count":0,"discussions":[{"author":{"id":1507837,"avatar":"https://static001.geekbang.org/account/avatar/00/17/01/fd/69869646.jpg","nickname":"音视频专家-李超","note":"","ucode":"5557943CF28441","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":461044,"discussion_content":"你说的那是以前了，现在方式已经改了！","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1564672787,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1462248,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/DYAIOgq83eo6WShSZ8pdClLHyxyH8ER3HlaQN8mWUCWiasIe5RUCWJ0Rbxq4eMIibibt606yh2cpTicZoyCou8Eaxg/132","nickname":"Geek_e39e6f","note":"","ucode":"E84FEA1FF40AC7","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":3666,"discussion_content":"老师，那收集到candidate后，相关信息是怎么通知给对端的？","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1564673281,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":1,"child_discussions":[{"author":{"id":1148770,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTIROsBAWicJYLbnzYH3ibiaX2T2am9z4IKxp34uJSgib2ntfh9zKLtndAcfCUJHLZO7Q3jkia3aKu8eOSg/132","nickname":"lqq热爱学习","note":"","ucode":"25795B06CA56A1","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1462248,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/DYAIOgq83eo6WShSZ8pdClLHyxyH8ER3HlaQN8mWUCWiasIe5RUCWJ0Rbxq4eMIibibt606yh2cpTicZoyCou8Eaxg/132","nickname":"Geek_e39e6f","note":"","ucode":"E84FEA1FF40AC7","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":369426,"discussion_content":"一般都是通过信令服务器通知对方, 信令服务器一般都会和每个用户之间有一个长链接.","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1619020911,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":3666,"ip_address":""},"score":369426,"extra":""}]}]},{"had_liked":false,"id":119679,"user_name":"花果山の酸梅汤","can_delete":false,"product_type":"c1","uid":1606018,"ip_address":"","ucode":"E4A71E8AD52CB3","user_header":"https://thirdwx.qlogo.cn/mmopen/vi_32/DYAIOgq83eoicwtj6x3l7NEcODqsXHjUTjzbl99pesNbydQUSfR6IywcKKyyaY9AIhBS0bCz3R8icMRIploDdUQA/132","comment_is_top":false,"comment_ctime":1564651314,"is_pvip":false,"replies":[{"id":"43912","content":"Js 与 c++的互调是通过V8 引擎，至于那些是WebRTC 实现的，那些是浏览器实现的，你后面慢慢熟悉了就清楚了，别着急","user_name":"作者回复","comment_id":119679,"uid":"1507837","ip_address":"","utype":1,"ctime":1564664418,"user_name_real":"garrylee"}],"discussion_count":1,"race_medal":0,"score":"1564651314","product_id":100031801,"comment_content":"感谢讲解，请问李老师webrtc的c++ API是如何映射为JS API的，另外官方JS API规范定义的功能，如何可以确认那些是在浏览器中实现，那些是在webrtc c++中实现？","like_count":0,"discussions":[{"author":{"id":1507837,"avatar":"https://static001.geekbang.org/account/avatar/00/17/01/fd/69869646.jpg","nickname":"音视频专家-李超","note":"","ucode":"5557943CF28441","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":461014,"discussion_content":"Js 与 c++的互调是通过V8 引擎，至于那些是WebRTC 实现的，那些是浏览器实现的，你后面慢慢熟悉了就清楚了，别着急","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1564664418,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]}]}