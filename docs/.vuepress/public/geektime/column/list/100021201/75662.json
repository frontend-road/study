{"id":75662,"title":"08 | 组合：如何让计算机安排世界杯的赛程？","content":"<p>你好，我是黄申。</p><p>2018年足球世界杯结束有半年了，当时激烈的赛况你现在还记忆犹新吧？你知道这场足球盛宴的比赛日程是怎么安排的吗？如果现在你是组委会，你会怎么安排比赛日程呢？我们可以用上一节的排列思想，让全部的32支入围球队都和其他球队进行一次主客场的比赛。</p><p>自己不可能和自己比赛，因此在这种不可重复的排列中，主场球队有32种选择，而客场球队有31种选择。那么一共要进行多少场比赛呢？很简单，就是32x31=992场！这也太夸张了吧？一天看2场，也要1年多才能看完！即使球迷开心了，可是每队球员要踢主客场共62场，早已累趴下了。</p><p>好吧，既然这样，我们是否可以取消主客场制，让任意两个球队之间只要踢1场就好啦？取消主客场，这就意味着原来两队之间的比赛由2场降为1场，那么所有比赛场次就是992/2=496场。还是很多，对吧？</p><p>是的，这就是为什么要将所有32支队伍分成8个小组先进行小组赛的原因。一旦分成小组，每个小组的赛事就是(4x3)/2=6场。所有小组赛就是6x8=48场。</p><p>再加上在16强阶段开始采取淘汰制，两两淘汰，所以需要8+4+2+2=16场淘汰赛（最后一次加2是因为还有3、4名的决赛），那么整个世界杯决赛阶段就是48+16=64场比赛。</p><!-- [[[read_end]]] --><p>当然，说了这么多，你可能会好奇，这两两配对比赛的场次，我是如何计算出来的？让我引出今天的概念，<strong>组合</strong>（Combination）。</p><p>组合可以说是排列的兄弟，两者类似但又有所不同，这两者的区别，不知道你还记得不，上学的时候，老师肯定说过不止一次，那就是，组合是不考虑每个元素出现的顺序的。</p><p>从定义上来说，组合是指，从n个不同元素中取出m（1≤m≤n）个不同的元素。例如，我们前面说到的世界杯足球赛的例子，从32支球队里找出任意2支球队进行比赛，就是从32个元素中取出2个元素的组合。如果上一讲中，田忌赛马的规则改一下，改为从10匹马里挑出3匹比赛，但是并不关心这3匹马的出战顺序，那么也是一个组合的问题。</p><p>对于所有m取值的组合之全集合，我们可以叫作<strong>全组合</strong>（All Combination）。例如对于集合{1, 2, 3}而言，全组合就是{空集, {1}, {2}, {3}, {1, 2}, {1,3} {2, 3}, {1, 2, 3}}。</p><p>如果我们安排足球比赛时，不考虑主客场，也就是不考虑这两支球队的顺序，两队只要踢一次就行了。那么从n个元素取出m个的组合，有多少种可能呢？</p><p>我们假设某种运动需要3支球队一起比赛，那么32支球队就有32x31x30种排列，如果三支球队在一起只要比一场，那么我们要抹除多余的比赛。三支球队按照任意顺序的比赛有3x2x1=6场，所以从32支队伍里取出3支队伍的组合是(32x31x30)/(3x2x1)。基于此，我们可以扩展成以下两种情况。</p><ul>\n<li>\n<p>n个元素里取出m个的组合，可能性数量就是n个里取m个的排列数量，除以m个全排列的数量，也就是(n! / (n-m)!) / m!。</p>\n</li>\n<li>\n<p>对于全组合而言，可能性为2^n种。例如，当n=3的时候，全组合包括了8种情况。</p>\n</li>\n</ul><p>这两点都可以用数学归纳法证明，有兴趣的话你可以自己尝试一下。</p><h2>如何让计算机来组合队伍？</h2><p>上一节，我用递归实现了全排列。全组合就是将所有元素列出来，没有太大意义，所以我这里就带你看下，如何使用递归从3个元素中选取2个元素的组合。</p><p>我们假设有3个队伍，t1，t2和t3。我还是把递归的选择画成图，这样比较直观，你也好理解。从图中我们可以看出，对于组合而言，由于{t1, t2}已经出现了，因此就无需{t2, t1}。同理，出现{t1, t3}，就无需{t3, t1}等等。对于重复的，我用叉划掉了。这样，最终只有3种组合了。</p><p><img src=\"https://static001.geekbang.org/resource/image/82/4b/827020c47c2c4b825dc5d51697f5cd4b.jpg?wh=1142*650\" alt=\"\"></p><p>那么，如何使用代码来实现呢？一种最简单粗暴的做法是：</p><ol>\n<li>\n<p>先实现排列的代码，输出所有的排列。例如{t1, t2}, {t2, t1}；</p>\n</li>\n<li>\n<p>针对每种排列，对其中的元素按照一定的规则排序。那么上述两种排列经过排序后，就是{t1, t2}, {t1, t2}；</p>\n</li>\n<li>\n<p>对排序后的排列，去掉重复的那些。上述两种排列最终只保留一个{t1, t2}。</p>\n</li>\n</ol><p>这样做效率就会比较低，很多排列生成之后，最终还是要被当做重复的结果去掉。</p><p>显然，还有更好的做法。从图中我们可以看出被划掉的那些，都是那些出现顺序和原有顺序颠倒的元素。</p><p>例如，在原有集合中，t1在t2的前面，所以我们划掉了{t2, t1}的组合。这是因为，我们知道t1出现在t2之前，t1的组合中一定已经包含了t2，所以t2的组合就无需再考虑t1了。因此，我只需要在原有的排列代码中，稍作修改，每次传入嵌套函数的剩余元素，不再是所有的未选择元素，而是出现在当前被选元素之后的那些。具体代码是这样的：</p><pre><code>import java.util.ArrayList;\nimport java.util.Arrays; \n\npublic class Lesson8_1 {\n\t\n\t/**\n    * @Description:\t使用函数的递归（嵌套）调用，找出所有可能的队伍组合\n    * @param teams-目前还剩多少队伍没有参与组合，result-保存当前已经组合的队伍\n    * @return void\n    */\n\t\n    public static void combine(ArrayList&lt;String&gt; teams, ArrayList&lt;String&gt; result, int m) {\n    \t\n    \t// 挑选完了m个元素，输出结果\n    \tif (result.size() == m) {\n    \t\tSystem.out.println(result);\n    \t\treturn;\n    \t}\n    \t\n    \tfor (int i = 0; i &lt; teams.size(); i++) {\n    \t\t// 从剩下的队伍中，选择一队，加入结果\n    \t\tArrayList&lt;String&gt; newResult = (ArrayList&lt;String&gt;)(result.clone());\n    \t\tnewResult.add(teams.get(i));\n    \t\t\n    \t\t// 只考虑当前选择之后的所有队伍\n    \t\tArrayList&lt;String&gt; rest_teams = new ArrayList&lt;String&gt;(teams.subList(i + 1, teams.size()));\n    \t\t\n    \t\t// 递归调用，对于剩余的队伍继续生成组合\n    \t\tcombine(rest_teams, newResult, m);\n    \t}\n    \t\n    }\n    \n}\n\n</code></pre><p>这是一段测试代码，可以帮助我们找到从3个元素中选择2个元素的所有组合。</p><pre><code>public static void main(String[] args) {\n  \n  ArrayList&lt;String&gt; teams = new ArrayList&lt;String&gt;(Arrays.asList(&quot;t1&quot;, &quot;t2&quot;, &quot;t3&quot;));\n  Lesson8_1.combine(teams, new ArrayList&lt;String&gt;(), 2);\n  \n }\n\n</code></pre><h2>组合的应用：如何高效地处理词组？</h2><p>组合在计算机领域中也有很多的应用场景。比如大型比赛中赛程的自动安排、多维度的数据分析以及自然语言处理的优化等等。</p><p>在我之前的研究工作中，经常要处理一些自然语言，用组合的思想提升系统性能。今天我结合自己亲身的经历，先来说说组合在自然语言处理中的应用。</p><p>当时，我们需要将每篇很长的文章，分隔成一个个的单词，然后对每个单词进行索引，便于日后的查询。但是很多时候，光有单个的单词是不够的，还要考虑多个单词所组成的词组。例如，“red bluetooth mouse”这样的词组。</p><p>处理词组最常见的一种方式是<strong>多元文法</strong>。什么是多元文法呢？这词看起来很复杂，其实就是把邻近的几个单词合并起来，组合一个新的词组。比如我可以把“red”和“bluetooth”合并为“red bluetooth”，还可以把“bluetooth”和“mouse”合并为“bluetooth mouse”。</p><p>设计多元文法只是为了方便计算机的处理，而不考虑组合后的词组是不是有正确的语法和语义。例如“red bluetooth”，从人类的角度来看，这个词就很奇怪。但是毕竟它还会生成很多合理的词组，例如“bluetooth mouse”。所以，如果不进行任何深入的语法分析，我们其实没办法区分哪些多元词组是有意义的，哪些是没有意义的，因此最简单的做法就是保留所有词组。</p><p>普通的多元文法本身存在一个问题，那就是定死了每个元组内单词出现的顺序。例如，原文中可能出现的是“red bluetooth mouse”，可是用户在查询的时候可能输入的是“bluetooth mouse red”。这么输入肯定不符合语法，但实际上互联网上的用户经常会这么干。</p><p>那么，在这种情况下，如果我们只保留原文的“red bluetooth mouse”，就无法将其和用户输入的“bluetooth red mouse”匹配了。所以，如果我们并不要求查询词组中单词所出现的顺序和原文一致，那该怎么办呢？</p><p>我当时就在想，可以把每个二元或三元组进行全排列，得到所有的可能。但是这样的话，二元组的数量就会增加1倍，三元组的数量就会增加5倍，一篇文章的数据保存量就会增加3倍左右。我也试过对用户查询做全排列，把原有的二元组查询变为2个不同的二元组查询，把原有的三元组查询变为6个不同的三元组查询，但是事实是，这样会增加实时查询的耗时。</p><p>于是，我就想到了组合。多个单词出现时，我并不关心它们的顺序（也就是不关心排列），而只关心它们的组合。因为无需关心顺序，就意味着我可以对多元组内的单词进行某种形式的标准化。即使原来的单词出现顺序有所不同，经过这个标准化过程之后，都会变成唯一的顺序。</p><p>例如，“red bluetooth mouse”，这三个词排序后就是“bluetooth,mouse,red”，而“bluetooth red mouse”排序后也是“bluetooth,mouse,red”，自然两者就能匹配上了。我需要做的事情就是在保存文章多元组和处理用户查询这两个阶段分别进行这种排序。这样既可以减少保存的数据量，同时可以减少查询的耗时。这个问题很容易就解决了。怎么样，组合是不是非常神奇？</p><p>此外，组合思想还广泛应用在多维度的数据分析中。比如，我们要设计一个连锁店的销售业绩报表。这张报表有若干个属性，包括分店名称、所在城市、销售品类等等。那么最基本的总结数据包括每个分店的销售额、每个城市的销售额、每个品类的销售额。除了这些最基本的数据，我们还可以利用组合的思想，生成更多的筛选条件。</p><h2>小结</h2><p>组合和排列有相似之处，都是从n个元素中取出若干个元素。不过，排列考虑了取出的元素它们之间的顺序，而组合无需考虑这种顺序。这是排列和组合最大的区别。因此，组合适合找到多个元素之间的联系而并不在意它们之间的先后顺序，例如多元文法中的多元组，这有利于避免不必要的数据保存或操作。</p><p>具体到编程，组合和排列两者的实现非常类似。区别在于，组合并不考虑挑选出来的元素之间，是如何排序的。所以，在递归的时候，传入下一个嵌套调用函数的剩余元素，只需要包含当前被选元素之后的那些，以避免重复的组合。</p><p><img src=\"https://static001.geekbang.org/resource/image/b2/ee/b2cbd776947f32b6a3e5e30f388e0eee.jpg?wh=1242*1397\" alt=\"\"></p><h2>思考题</h2><p>假设现在需要设计一个抽奖系统。需要依次从100个人中，抽取三等奖10名，二等奖3名和一等奖1名。请列出所有可能的组合，需要注意的每人最多只能被抽中1次。</p><p><span class=\"orange\">欢迎在留言区交作业，并写下你今天的学习笔记。你可以点击“请朋友读”，把今天的内容分享给你的好友，和他一起精进。</span></p>","neighbors":{"left":{"article_title":"07 | 排列：如何让计算机学会“田忌赛马”？","id":75129},"right":{"article_title":"09 | 动态规划（上）：如何实现基于编辑距离的查询推荐？","id":75807}},"comments":[{"had_liked":false,"id":200647,"user_name":"罗耀龙@坐忘","can_delete":false,"product_type":"c1","uid":1917663,"ip_address":"","ucode":"3CEA258DE7F3C7","user_header":"https://static001.geekbang.org/account/avatar/00/1d/42/df/a034455d.jpg","comment_is_top":false,"comment_ctime":1585628832,"is_pvip":true,"replies":[{"id":"75084","content":"关于婚姻的点，要点赞👍","user_name":"作者回复","user_name_real":"黄申","uid":"1275061","ctime":1585633002,"ip_address":"","comment_id":200647,"utype":1}],"discussion_count":2,"race_medal":5,"score":"100369876640","product_id":100021201,"comment_content":"茶艺师学编程<br><br>可以这么记：<br>排列—大家走到一块，还要比个高低<br>组合—大家聚到一起，就是有缘<br><br>生活中的一个例子，比如婚姻，就应该是组合，“我和你一起，怎么都好”，而不是“排列”，“你，都得听我的！”<br>","like_count":24,"discussions":[{"author":{"id":1275061,"avatar":"https://static001.geekbang.org/account/avatar/00/13/74/b5/b68e3740.jpg","nickname":"黄申","note":"","ucode":"EE9AC074A322FF","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":490086,"discussion_content":"关于婚姻的点，要点赞👍","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1585633002,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":2272533,"avatar":"","nickname":"Geek_0a3a08","note":"","ucode":"363BB7F5420841","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":319398,"discussion_content":"观点清奇！","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1604023384,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":55615,"user_name":"风轨","can_delete":false,"product_type":"c1","uid":1185844,"ip_address":"","ucode":"7B8A5233B61EB0","user_header":"https://static001.geekbang.org/account/avatar/00/12/18/34/c082419c.jpg","comment_is_top":false,"comment_ctime":1546243962,"is_pvip":false,"replies":[{"id":"20104","content":"确实数字取得太大了","user_name":"作者回复","user_name_real":"黄申","uid":"1275061","ctime":1546313232,"ip_address":"","comment_id":55615,"utype":1}],"discussion_count":4,"race_medal":0,"score":"91740557178","product_id":100021201,"comment_content":"从100人中选10人得3等奖，C(100, 10) = 17310309456440<br>再从剩下90人中选3人的3等奖，C(90, 3) = 117480<br>再从剩下87人中选1人得1等奖， C(87, 1) = 87<br>总共有大约有1.8×10^20种可能性，<br>假设我们的计算机每1ns就能输出1个结果，全部输出来大约要5610年！<br>假设每个结果占13个字节，把结果保存下来大约要占1995EB，远远大于世界上存储总容量！<br><br>当数据量比较小时，还是可以算的：<br>public class Combination {<br><br>    &#47;**<br>     * 求组合数<br>     * <br>     * @param n<br>     * @param r<br>     * @return<br>     *&#47;<br>    static int c(int n, int r) {<br>        if (r &gt; n) {<br>            return 0;<br>        }<br>        int R =  n - r;<br>        int ret = 1;<br>        while (n &gt; R) {<br>            ret *= n--;<br>        }<br>        while (r &gt; 1) {<br>            ret &#47;= r--;<br>        }<br>        return ret;<br>    }<br><br>    &#47;**<br>     * 求组合情况<br>     * @param es<br>     * @param r<br>     * @param I 数组es开始取数位置<br>     * @return<br>     *&#47;<br>    static int[][] C(int[] es, int r, int I) {<br>        int[][] rst = new int[c(es.length - I, r)][];<br>        if (r == 1) {<br>            for (int rsti = 0; rsti &lt; rst.length; rsti++, I++) {<br>                rst[rsti] = new int[] { es[I] };<br>            }<br>        } else {<br>            for (int rsti = 0; I &lt; es.length; I++) {<br>                int[][] srst = C(es, r - 1, I + 1);<br>                for (int[] sc : srst) {<br>                    int[] t = rst[rsti] = new int[sc.length + 1];<br>                    t[0] = es[I];<br>                    System.arraycopy(sc, 0, t, 1, sc.length);<br>                    rsti++;<br>                }<br>            }<br>        }<br>        return rst;<br>    }<br><br>    public static void main(String[] args) {<br>        int[][] c = C(new int[] { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10 }, 3, 0);<br>        for (int[] cc : c) {<br>            System.out.println(Arrays.toString(cc));<br>        }<br>        &#47;**<br>         * 输出结果<br>         * [1, 2, 3]<br>         * [1, 2, 4]<br>         * [1, 2, 5]<br>         * [1, 2, 6]<br>         * ··· 省略111行 ···<br>         * [6, 9, 10]<br>         * [7, 8, 9]<br>         * [7, 8, 10]<br>         * [7, 9, 10]<br>         * [8, 9, 10]<br>         * <br>         *&#47;<br>    }<br>}<br>","like_count":21,"discussions":[{"author":{"id":1275061,"avatar":"https://static001.geekbang.org/account/avatar/00/13/74/b5/b68e3740.jpg","nickname":"黄申","note":"","ucode":"EE9AC074A322FF","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":434809,"discussion_content":"确实数字取得太大了","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1546313232,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":2027228,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTK2ibcQVCzwThf79tLAK9Fickoe75YVBK8X6tYggichZlgv07XtdpJcFYIRPBicbwdibzzicghyFpt3EfXg/132","nickname":"Geek_1bca3e","note":"","ucode":"B801B5B2416B4C","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":283627,"discussion_content":"\n//数量太大在上节课老师的代码代码上改造的，100个人抽取一二三等奖就很多了，我压缩到7个人抽取","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1592314466,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1199968,"avatar":"https://static001.geekbang.org/account/avatar/00/12/4f/60/049a20e9.jpg","nickname":"吴宇晨","note":"","ucode":"F8F45B7067DF6D","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":194243,"discussion_content":"我说我怎么跑了5分钟还没跑完","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1583200957,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1365108,"avatar":"https://static001.geekbang.org/account/avatar/00/14/d4/74/4ce902f7.jpg","nickname":"天地之悠悠","note":"","ucode":"DC85067C3B89C5","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":15016,"discussion_content":"也有计算机无能为力的时候，哈哈","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1568795877,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":166052,"user_name":"cwtxz","can_delete":false,"product_type":"c1","uid":1778151,"ip_address":"","ucode":"4F35AEDB8F5D5D","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/BAuQlia9Dc07m3icOkibIqu2lhbnLD6cjgCNE8FSzG5Aj4cd26eRgspicTsWvA7WK1ftlQBD34PYRucZRXML5FA27A/132","comment_is_top":false,"comment_ctime":1577371622,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"44527044582","product_id":100021201,"comment_content":"老师的这节课更让我加深了编程思维本质是数学思维的观点。各种各样的if和else语句，实质是从所有可能的集合之中选择符合条件的小集合。各种各样的循环语句实质是从集合里面筛选符合某种条件的集合。这些例子不胜枚举。所以说，数学思维的灵活程度决定了你代码的优雅程度与质量高低，进而影响你的职业极限。数学思维越好，代码的生命才会更健壮，你的职业瓶颈才能越容易被打破，你的生涯才能走得越高远，所以，学数学，会让你的代码功底更强。","like_count":10},{"had_liked":false,"id":55635,"user_name":"Wing·三金","can_delete":false,"product_type":"c1","uid":1341402,"ip_address":"","ucode":"6B9F5822C3717F","user_header":"https://static001.geekbang.org/account/avatar/00/14/77/da/54c663f3.jpg","comment_is_top":false,"comment_ctime":1546248766,"is_pvip":false,"discussion_count":1,"race_medal":0,"score":"44495921726","product_id":100021201,"comment_content":"思路一：<br>先运行combine(100, 1)，将所有结果保存。然后用一层迭代对每个结果运行combine(99, 3)，将所有结果append进去。<br>然后再来一层迭代对上一结果运行combine(96, 10)，同样依次append进去。<br>此处的关键点在于每个迭代下得将上一结果中的数拿掉，以及得保存临时结果。<br><br>此思路也等价于直接上三个嵌套循环+运行递归程序。<br><br>思路二：<br>先运行combine(100, 14)，对每个结果运行combine(14, 10)，再对每个更新的结果运行combine(4, 3)。其实就是思路一逆过来。<br><br>理论上二者的复杂度是一样的，用scipy验证了下确实如此。<br>","like_count":11,"discussions":[{"author":{"id":2430797,"avatar":"https://static001.geekbang.org/account/avatar/00/25/17/4d/59760205.jpg","nickname":"Geekpie","note":"","ucode":"49252BF5618BFF","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":383894,"discussion_content":"认同","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1626272559,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":56069,"user_name":"行者","can_delete":false,"product_type":"c1","uid":1364703,"ip_address":"","ucode":"EF25E67B261553","user_header":"https://static001.geekbang.org/account/avatar/00/14/d2/df/48378afe.jpg","comment_is_top":false,"comment_ctime":1546391271,"is_pvip":false,"discussion_count":1,"race_medal":0,"score":"35906129639","product_id":100021201,"comment_content":"案例python实现：<br><br>comb = [&#39;t1&#39;, &#39;t2&#39;, &#39;t3&#39;, &#39;t4&#39;, &#39;t5&#39;]<br>import copy<br><br>def combination(n, comb, result):<br><br>    if n == 0:<br>        print(result)<br>        return<br>    for i in comb:<br>        newResult = copy.copy(result)<br>        newComb = copy.copy(comb)<br>        newResult.append(i)<br>        newComb = list(set(newComb).difference(set(comb[:comb.index(i) + 1])))<br>        combination(n - 1, newComb, newResult)<br><br>combination(4, comb, [])","like_count":8,"discussions":[{"author":{"id":1177167,"avatar":"https://static001.geekbang.org/account/avatar/00/11/f6/4f/f8464167.jpg","nickname":"阿琐","note":"","ucode":"5537036AA263FE","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":403788,"discussion_content":"newComb 可以直接 comb[comb.index(i) + 1:]","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1634140502,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":60475,"user_name":"夏微凉","can_delete":false,"product_type":"c1","uid":1337702,"ip_address":"","ucode":"7ACFCF35D969B9","user_header":"https://static001.geekbang.org/account/avatar/00/14/69/66/e8c207e6.jpg","comment_is_top":false,"comment_ctime":1547477143,"is_pvip":false,"replies":[{"id":"21692","content":"这道题是用到了组合及排列，先看100个人里取1人的数量是C100,1 (格式问题，C100,1表示从100人里取1人的组合数量)，剩下99人里取2人为C99,2，再剩下97人里取3人为C97,3，然后再利用排列，总共可能为C100,1 x C99,2 x C97,3","user_name":"作者回复","user_name_real":"黄申","uid":"1275061","ctime":1547574484,"ip_address":"","comment_id":60475,"utype":1}],"discussion_count":4,"race_medal":0,"score":"27317280919","product_id":100021201,"comment_content":"黄老师，我这几天一直在纠结思考题，总共10人，一等名1名，二等奖2名，三等3名，还是没有完全理解思路，希望老师方便的时候解答下","like_count":6,"discussions":[{"author":{"id":1275061,"avatar":"https://static001.geekbang.org/account/avatar/00/13/74/b5/b68e3740.jpg","nickname":"黄申","note":"","ucode":"EE9AC074A322FF","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":436519,"discussion_content":"这道题是用到了组合及排列，先看100个人里取1人的数量是C100,1 (格式问题，C100,1表示从100人里取1人的组合数量)，剩下99人里取2人为C99,2，再剩下97人里取3人为C97,3，然后再利用排列，总共可能为C100,1 x C99,2 x C97,3","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1547574484,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":3,"child_discussions":[{"author":{"id":1338107,"avatar":"https://static001.geekbang.org/account/avatar/00/14/6a/fb/1b4b7420.jpg","nickname":"何轩","note":"","ucode":"4F9BBB03AB3382","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1275061,"avatar":"https://static001.geekbang.org/account/avatar/00/13/74/b5/b68e3740.jpg","nickname":"黄申","note":"","ucode":"EE9AC074A322FF","race_medal":0,"user_type":2,"is_pvip":false},"discussion":{"id":530929,"discussion_content":"最后为啥要把三种组合结果相乘？","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1637167471,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":436519,"ip_address":""},"score":530929,"extra":"{\"user_type\":1}"},{"author":{"id":1014665,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/7b/89/34f2cbcc.jpg","nickname":"杨宇","note":"","ucode":"EB74DF6E269F03","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":1338107,"avatar":"https://static001.geekbang.org/account/avatar/00/14/6a/fb/1b4b7420.jpg","nickname":"何轩","note":"","ucode":"4F9BBB03AB3382","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":572841,"discussion_content":"我们看前两项，C(100,1)和C(99,2)：对于前者的每一个取值，后者的所有取值都满足题意要求，能与其搭配，所以是乘积的关系。以此类推，C(97,3)也是如此。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1653008497,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":530929,"ip_address":""},"score":572841,"extra":""},{"author":{"id":1008348,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/62/dc/8876c73b.jpg","nickname":"moooofly","note":"","ucode":"4A20795C281B6F","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1275061,"avatar":"https://static001.geekbang.org/account/avatar/00/13/74/b5/b68e3740.jpg","nickname":"黄申","note":"","ucode":"EE9AC074A322FF","race_medal":0,"user_type":2,"is_pvip":false},"discussion":{"id":591144,"discussion_content":"有个问题，为啥不是先取3个第三名，然后取2个第二名，最后再取1个第一名？如果用这个顺序的话，那结果是不是变成了 C100,3 * C97,2 * C95,1 ？","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1666322441,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":436519,"ip_address":"上海"},"score":591144,"extra":""}]}]},{"had_liked":false,"id":126152,"user_name":"Paul Shan","can_delete":false,"product_type":"c1","uid":1593140,"ip_address":"","ucode":"32D99989028284","user_header":"","comment_is_top":false,"comment_ctime":1566339157,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"18746208341","product_id":100021201,"comment_content":"总结<br>排列的递归公式是P(n,m) = nP(n-1,m-1)<br>可以按照这条公式组织递归，也就是一次n的循环（放入第i号元素）调用P(n-1,m-1)<br><br>组合的递归公式是C(n,m) =  C(n-1,m-1) +C(n-1,m)<br>可以按照这条公式（放入或者不放入第0号元素）递归调用","like_count":5},{"had_liked":false,"id":65897,"user_name":"qinggeouye","can_delete":false,"product_type":"c1","uid":1251536,"ip_address":"","ucode":"5B53EEDD7BEC9C","user_header":"https://static001.geekbang.org/account/avatar/00/13/18/d0/49b06424.jpg","comment_is_top":false,"comment_ctime":1549741647,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"18729610831","product_id":100021201,"comment_content":"python (比较粗暴的解法...)<br>import copy<br><br>def lucky_draw_combination(n, m, result=None, all_results=None):<br>    &quot;&quot;&quot;<br>    使用函数的递归（嵌套）调用，找出所有可能的中奖者的组合<br>    :param all_results: 中奖者的所有组合<br>    :param n: 参与抽奖的人<br>    :param result: 抽奖结果<br>    :param m: 中奖的人数<br>    :return: None<br>    &quot;&quot;&quot;<br>    if result is None:<br>        result = []<br>    if all_results is None:<br>        all_results = []<br>    if len(result) == m:<br>        # print(result)<br>        return all_results.append(result)<br>    for i in range(len(n)):<br>        # 从剩下的人中，抽出一个人加入结果<br>        new_result = copy.copy(result)<br>        new_result.append(n[i])<br>        # 每人最多只能被抽中一次，当前被抽中的人之后的人，进入下一次抽奖<br>        rest_n = n[i + 1: len(n)]<br>        # 递归调用 在剩下的人中继续抽奖<br>        lucky_draw_combination(rest_n, m, new_result, all_results)<br>    return all_results<br><br><br>if __name__ == &quot;__main__&quot;:<br>    total = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10]  # 被抽奖人列表<br>    m_ = [3, 2, 1]  # 三等奖、二等奖、一等奖的个数<br>    lucky1 = lucky_draw_combination(total, m_[0])<br>    for k1 in lucky1:<br>        total2 = copy.copy(total)<br>        for j1 in k1:<br>            total2.remove(j1)<br>        lucky2 = lucky_draw_combination(total2, m_[1])<br>        for k2 in lucky2:<br>            total3 = copy.copy(total2)<br>            for j2 in k2:<br>                total3.remove(j2)<br>            lucky3 = lucky_draw_combination(total3, m_[2])<br>            for k3 in lucky3:<br>                print(k1, k2, k3)<br>","like_count":4},{"had_liked":false,"id":58511,"user_name":"Ricky","can_delete":false,"product_type":"c1","uid":1238256,"ip_address":"","ucode":"0B29C730CAD29C","user_header":"https://static001.geekbang.org/account/avatar/00/12/e4/f0/82281239.jpg","comment_is_top":false,"comment_ctime":1547097888,"is_pvip":false,"discussion_count":1,"race_medal":0,"score":"18726967072","product_id":100021201,"comment_content":"#include &lt;iostream&gt;<br>#include &lt;vector&gt;<br><br>using namespace std;<br>void winPrize(int f, int s, int t,<br>        vector&lt;int&gt; &amp;first, vector&lt;int&gt; &amp;second, vector&lt;int&gt; &amp;third, vector&lt;int&gt; &amp;base) {<br><br>    if (first.size() == f &amp;&amp; second.size() == s &amp;&amp; third.size() == t) {<br>        cout &lt;&lt; &quot;\\nAwards Notification&quot; &lt;&lt; endl;<br>        cout &lt;&lt; &quot;Prize 1: &quot; &lt;&lt; first.back() &lt;&lt; endl;<br>        cout &lt;&lt; &quot;Prize 2: &quot;;<br>        for (int x: second) {<br>            cout &lt;&lt; x &lt;&lt; &quot; &quot;;<br>        }<br>        cout &lt;&lt; endl;<br>        cout &lt;&lt; &quot;Prize 3: &quot;;<br>        for (int y: third) {<br>            cout &lt;&lt; y &lt;&lt; &quot; &quot;;<br>        }<br>        cout &lt;&lt; endl;<br>        return;<br>    }<br>    for (int x: base) {<br>        &#47;&#47; 每次仅添加一个成员进奖项圈, 优先级按照一等奖 &gt; 二等奖 &gt; 三等奖<br>        auto f1 = first, s1 = second, t1 = third, left = base;<br>        if (first.size() &lt; f) {<br>            f1.push_back(x);<br>        } else if (second.size() &lt; s) {<br>            s1.push_back(x);<br>        } else if (third.size() &lt; t) {<br>            t1.push_back(x);<br>        }<br>        &#47;&#47; 删除成员<br>        auto iter = left.begin();<br>        while (iter != left.end()) {<br>            if (*iter == x) {<br>                iter = left.erase(iter);<br>            } else iter++;<br>        }<br>        winPrize(f, s, t, f1, s1, t1, left);<br>    }<br>}<br><br>void winPrize(int tl, int f, int s, int t) {<br>    vector&lt;int&gt; first, second, third, base;<br>    for (int i = 0; i &lt; tl; ++i) {<br>        base.push_back(i);<br>    }<br><br>    winPrize(f, s, t, first, second, third, base);<br>}<br>int main() {<br>    cout &lt;&lt; &quot;Prize Result&quot; &lt;&lt; endl;<br>    winPrize(10, 1, 2, 3);<br>    return 0;<br>}<br>******************结果********************<br>Awards Notification<br>Prize 1: 2<br>Prize 2: 0 6<br>Prize 3: 8 3 1<br><br>Awards Notification<br>Prize 1: 2<br>Prize 2: 0 6<br>Prize 3: 8 3 4<br><br>Awards Notification<br>Prize 1: 2<br>Prize 2: 0 6<br>Prize 3: 8 3 5<br><br>Awards Notification<br>Prize 1: 2<br>Prize 2: 0 6<br>Prize 3: 8 3 7","like_count":4,"discussions":[{"author":{"id":2168796,"avatar":"https://static001.geekbang.org/account/avatar/00/21/17/dc/8edbd93e.jpg","nickname":"zhaoey","note":"","ucode":"CD70AA3ED52B5B","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":312990,"discussion_content":"总人数为10时，有多少种可能？","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1602903214,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":205939,"user_name":"天涯不是咫尺","can_delete":false,"product_type":"c1","uid":1264213,"ip_address":"","ucode":"7D86C9428A9B13","user_header":"https://static001.geekbang.org/account/avatar/00/13/4a/55/41c73dbe.jpg","comment_is_top":false,"comment_ctime":1586760558,"is_pvip":false,"replies":[{"id":"77047","content":"因为自己不会和自己踢，所以选定主场球队之后，客场就只有31种选择。同样，如果先选择客场，那么也有32种选择，但是主场就只有31种了","user_name":"作者回复","user_name_real":"黄申","uid":"1275061","ctime":1586842880,"ip_address":"","comment_id":205939,"utype":1}],"discussion_count":1,"race_medal":0,"score":"14471662446","product_id":100021201,"comment_content":"老师，为什么主场球队有32种选择，客场球队只有31种选择？","like_count":3,"discussions":[{"author":{"id":1275061,"avatar":"https://static001.geekbang.org/account/avatar/00/13/74/b5/b68e3740.jpg","nickname":"黄申","note":"","ucode":"EE9AC074A322FF","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":491622,"discussion_content":"因为自己不会和自己踢，所以选定主场球队之后，客场就只有31种选择。同样，如果先选择客场，那么也有32种选择，但是主场就只有31种了","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1586842880,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":214912,"user_name":"Mr.L","can_delete":false,"product_type":"c1","uid":1861785,"ip_address":"","ucode":"ABE2D44AA9B8E5","user_header":"","comment_is_top":false,"comment_ctime":1588846798,"is_pvip":false,"discussion_count":1,"race_medal":0,"score":"10178781390","product_id":100021201,"comment_content":"class lucky:<br>    def get_lucky_num(self, rest, result):<br>        if len(result) == 14:<br>            print(result)<br>            return<br>        for i,k in enumerate(rest):<br>            result2 = result.copy()<br>            result2.append(k)<br>            rest2 = rest[i+1:]<br>            self.get_lucky_num(rest2, result2)<br>#test:<br>rest = range(1,101)<br>result = list()<br>lucky().get_lucky_num(rest,result)","like_count":2,"discussions":[{"author":{"id":1915334,"avatar":"https://static001.geekbang.org/account/avatar/00/1d/39/c6/1e12f271.jpg","nickname":"凹凸鸿","note":"","ucode":"A458BAEBF314B2","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":331947,"discussion_content":"这个好简洁","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1607009568,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":311349,"user_name":"Duke","can_delete":false,"product_type":"c1","uid":2131512,"ip_address":"","ucode":"77BB22ADCC2AB9","user_header":"https://static001.geekbang.org/account/avatar/00/20/86/38/379a9da5.jpg","comment_is_top":false,"comment_ctime":1631181856,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"5926149152","product_id":100021201,"comment_content":"&#47;&#47; 课后作业 .Net 实现<br>void Main()<br>{<br>\tprize.Sum(i =&gt; total += i);<br>\tCombine(Enumerable.Range(1, 8).ToList&lt;int&gt;(), null);<br>\tConsole.WriteLine($&quot;\\n total:{count}&quot;);<br>}<br><br>static int count = 0;  <br>static List&lt;int&gt; prize = <br>\tnew List&lt;int&gt; { 1, 2, 1 };  &#47;&#47; （8）*（7）*(6*5&#47;2) = 8 * 7 * 15 = 840 <br>\t&#47;&#47;new List&lt;int&gt; { 3, 1 };  &#47;&#47; 8*7*6&#47;3*2）* (5) = 280<br><br>static int total = 0; &#47;&#47; 总奖项数<br><br>&#47;&#47; 组合取出所有获奖人数<br>static void Combine(List&lt;int&gt; sourceList, List&lt;int&gt; destList)<br>{<br>\tif (destList == null) destList = new List&lt;int&gt;();<br>\t&#47;&#47; 获取一个完整的获奖组合后，将他们排序<br>\tif (destList.Count == total)<br>\t{<br>\t\tPermutation(destList, null);<br><br>\t\treturn;<br>\t}<br><br>\tsourceList.ForEach(<br>\titem =&gt;<br>\t{<br>\t\tvar newDestList = destList.Take(destList.Count).ToList();<br>\t\tnewDestList.Add(item);<br>\t\tvar newSourceList = sourceList.Skip(sourceList.FindIndex(s =&gt; s.Equals(item)) + 1).ToList();<br><br>\t\tCombine(newSourceList, newDestList);<br>\t});<br>}<br><br>&#47;&#47; 将获取人数按照奖项排序<br>static void Permutation(List&lt;int&gt; sourceList, List&lt;int&gt; destList)<br>{<br>\tif (destList == null) destList = new List&lt;int&gt;();<br><br>\t&#47;&#47; 获取一个完整按照奖项排序后的组合，将结果打印<br>\tif (destList.Count == total)<br>\t{<br>\t\tcount++;<br>\t\tvar str = &quot;&quot;;<br>\t\tdestList.ForEach(l =&gt; str += l + &quot;,&quot;);<br>\t\tstr = str.TrimEnd(&#39;,&#39;);<br>\t\tConsole.WriteLine(str);<br><br>\t\treturn;<br>\t}<br><br>\tif (destList == null) destList = new List&lt;int&gt;();<br><br>\tsourceList.ForEach(item =&gt;<br>\t{<br>\t\tvar newDestList = destList.Take(destList.Count).ToList();<br>\t\tnewDestList.Add(item);<br><br>\t\tvar newSourceList = new List&lt;int&gt;();<br>\t\t&#47;&#47; 同一奖项多人不区分顺序：如果当前和前一位都处于同一奖项的位置（通过奖项集合下标判断），忽略该记录<br>\t\tvar currentIndex = newDestList.Count - 1;<br>\t\tif (newDestList.Count &gt; 1<br>\t\t\t&amp;&amp; prize[GetPrizeIndex(newDestList.Count - 1)] &gt; 1<br>\t\t\t&amp;&amp; prize[GetPrizeIndex(newDestList.Count)] &gt; 1<br>\t\t\t&amp;&amp; newDestList[currentIndex] &lt; newDestList[currentIndex - 1])<br>\t\t\treturn;<br><br>\t\tnewSourceList = sourceList.Where(s =&gt; !s.Equals(item)).ToList();<br><br>\t\tPermutation(newSourceList, newDestList);<br>\t});<br>}<br><br>static int GetPrizeIndex(int num)<br>{<br>\tvar index = 0;<br>\tfor (int i = 0; i &lt; prize.Count; i++)<br>\t{<br>\t\tnum -= prize[i];<br>\t\tif (num &lt;= 0)<br>\t\t{<br>\t\t\tindex = i;<br>\t\t\tbreak;<br>\t\t}<br>\t}<br>\treturn index;<br>}","like_count":1},{"had_liked":false,"id":271407,"user_name":"Geek_c23a4c","can_delete":false,"product_type":"c1","uid":2310989,"ip_address":"","ucode":"A74EACB790590D","user_header":"","comment_is_top":false,"comment_ctime":1609598666,"is_pvip":false,"replies":[{"id":"98474","content":"对，这里举出组合可能的不同应用场景，多元文法和销售维度没有联系","user_name":"作者回复","user_name_real":"黄申","uid":"1275061","ctime":1609733366,"ip_address":"","comment_id":271407,"utype":1}],"discussion_count":1,"race_medal":0,"score":"5904565962","product_id":100021201,"comment_content":"连锁店的销售业绩报表的例子不是太理解。意思是分店名称、所在城市、销售品类三个维度做组合来对不同的维度的组合进行统计吗？这个和上面多元文法的应用比起来没啥意思，感觉脱节了","like_count":1,"discussions":[{"author":{"id":1275061,"avatar":"https://static001.geekbang.org/account/avatar/00/13/74/b5/b68e3740.jpg","nickname":"黄申","note":"","ucode":"EE9AC074A322FF","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":512919,"discussion_content":"对，这里举出组合可能的不同应用场景，多元文法和销售维度没有联系","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1609733366,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":239751,"user_name":"Ball","can_delete":false,"product_type":"c1","uid":1521451,"ip_address":"","ucode":"1EE949E68D84CA","user_header":"https://static001.geekbang.org/account/avatar/00/17/37/2b/b32f1d66.jpg","comment_is_top":false,"comment_ctime":1596632758,"is_pvip":false,"replies":[{"id":"88531","content":"数学思维很重要，多多学习和运用，你会发现更多妙用","user_name":"作者回复","user_name_real":"黄申","uid":"1275061","ctime":1596649097,"ip_address":"","comment_id":239751,"utype":1}],"discussion_count":1,"race_medal":0,"score":"5891600054","product_id":100021201,"comment_content":"用组合思想来处理多元词组的问题确实妙","like_count":1,"discussions":[{"author":{"id":1275061,"avatar":"https://static001.geekbang.org/account/avatar/00/13/74/b5/b68e3740.jpg","nickname":"黄申","note":"","ucode":"EE9AC074A322FF","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":503204,"discussion_content":"数学思维很重要，多多学习和运用，你会发现更多妙用","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1596649097,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":159037,"user_name":"teddytyy","can_delete":false,"product_type":"c1","uid":1268738,"ip_address":"","ucode":"E1569D81A4154E","user_header":"https://static001.geekbang.org/account/avatar/00/13/5c/02/e7af1750.jpg","comment_is_top":false,"comment_ctime":1575519474,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"5870486770","product_id":100021201,"comment_content":"100！&#47;（90！*10！） *  90！&#47;（87！*3！） * 87","like_count":1},{"had_liked":false,"id":125971,"user_name":"Paul Shan","can_delete":false,"product_type":"c1","uid":1593140,"ip_address":"","ucode":"32D99989028284","user_header":"","comment_is_top":false,"comment_ctime":1566286960,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"5861254256","product_id":100021201,"comment_content":"思考题<br>C(100,14) C(14,10)C(4,3)种可能性","like_count":1},{"had_liked":false,"id":86597,"user_name":"flow","can_delete":false,"product_type":"c1","uid":1270302,"ip_address":"","ucode":"B482ACF0E413C7","user_header":"https://static001.geekbang.org/account/avatar/00/13/62/1e/ad721e61.jpg","comment_is_top":false,"comment_ctime":1555406936,"is_pvip":true,"discussion_count":0,"race_medal":0,"score":"5850374232","product_id":100021201,"comment_content":"&#47;&#47; JavaScript实现<br>var arr = [1, 2, 3, 4, 5, 6];<br><br>function genGroup(arr, result, count) {<br>  if (result.length === count) {<br>    console.log(result);<br>    return;<br>  }<br><br>  for (let i = 0; i &lt; arr.length; i++) {<br>    let new_arr = [...arr];<br>    let new_result = [...result];<br>    new_result.push(arr[i]);<br>    new_arr.splice(0, i + 1);<br>    genGroup(new_arr, new_result, count);<br>  }<br>}<br><br>genGroup(arr, [], 3);<br>&#47;&#47; 思考题也是同理, 100人取14个, 第1个为一等奖, 2-4为二等奖, 5-14为三等奖","like_count":1},{"had_liked":false,"id":56967,"user_name":"文刂 氵共 超","can_delete":false,"product_type":"c1","uid":1282813,"ip_address":"","ucode":"C2CE1512D23012","user_header":"https://static001.geekbang.org/account/avatar/00/13/92/fd/6b0e58fe.jpg","comment_is_top":false,"comment_ctime":1546588636,"is_pvip":false,"replies":[{"id":"21424","content":"使用栈来实现递归过程的想法很棒","user_name":"作者回复","user_name_real":"黄申","uid":"1275061","ctime":1547401528,"ip_address":"","comment_id":56967,"utype":1}],"discussion_count":1,"race_medal":0,"score":"5841555932","product_id":100021201,"comment_content":"使用C++实现组合问题-从n个数中取出m个不同的元素，不考虑顺序<br><br>#include &lt;iostream&gt;<br>#include &lt;vector&gt;<br><br>using namespace std;<br><br>template &lt;class T&gt;<br>void PrintVector(vector&lt;T&gt; &amp; DataVec)<br>{<br>\tfor (size_t i = 0; i &lt; DataVec.size(); ++i)<br>\t{<br>\t\tcout &lt;&lt; DataVec[i] &lt;&lt; &quot;  &quot;;<br>\t}<br>\tcout &lt;&lt; endl;<br>}<br><br>template &lt;class T&gt;<br>void Combination(vector&lt;T&gt; &amp;DataVec, int m, vector&lt;T&gt; &amp;resultVec)<br>{<br>\tif (m &lt;= 0 &amp;&amp; m &gt; DataVec.size())<br>\t{<br>\t\treturn;<br>\t}<br><br>\tif (resultVec.size() == m)<br>\t{<br>\t\tPrintVector(resultVec);<br>\t\treturn;<br>\t}<br><br>\tfor (size_t i = 0; i &lt; DataVec.size(); ++i)<br>\t{<br>\t\tvector&lt;T&gt; tempResultVec = resultVec;<br>\t\ttempResultVec.push_back(DataVec[i]);<br><br>\t\tvector&lt;T&gt; tempDataVec(DataVec.begin()+i+1, DataVec.end());<br><br>\t\tCombination(tempDataVec, m, tempResultVec);<br>\t}<br>}<br><br>int _tmain(int argc, _TCHAR* argv[])<br>{<br>\tvector&lt;int&gt; resultV;<br>\tint dataList[] = {2,6,8,23,78,45,32,64};<br>\tvector&lt;int&gt; dataV(dataList, dataList+8);<br><br>\tCombination(dataV, 5, resultV);<br><br>\tPrintVector(resultV);<br><br>\treturn 0;<br>}","like_count":1,"discussions":[{"author":{"id":1275061,"avatar":"https://static001.geekbang.org/account/avatar/00/13/74/b5/b68e3740.jpg","nickname":"黄申","note":"","ucode":"EE9AC074A322FF","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":435337,"discussion_content":"使用栈来实现递归过程的想法很棒","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1547401528,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":56321,"user_name":"Youngggg","can_delete":false,"product_type":"c1","uid":1203378,"ip_address":"","ucode":"DA1F55A2CB5868","user_header":"https://static001.geekbang.org/account/avatar/00/12/5c/b2/dca010e5.jpg","comment_is_top":false,"comment_ctime":1546421680,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"5841388976","product_id":100021201,"comment_content":"由于数量过大 设置10个人中 1等奖1名 2等奖2名 3等奖3名<br>import copy<br>word = []<br>for i in range(1,11):<br>    word.append(i)<br>def sort(one_num, two_num, three_num, one_result=[], two_result=[], three_result=[]):<br>    if len(one_result) == one_num and len(two_result) == two_num and len(three_result) == three_num:<br>        print(&quot;一等奖&quot;, one_result)<br>        print(&quot;二等奖&quot;, two_result)<br>        print(&quot;三等奖&quot;, three_result)<br>        return<br>    else:<br>        i = 0<br>        while i &lt; len(word):<br>            if word[i] not in one_result and len(one_result) &lt; one_num:<br>                if len(one_result)&gt;0:<br>                    if one_result[-1] &gt; word[i]:<br>                        i = i+1<br>                        continue<br>                new_one_result = copy.copy(one_result)<br>                new_one_result.append(word[i])<br>                i = i+1<br>                sort(one_num, two_num, three_num, new_one_result, [], [])<br>            elif word[i] not in one_result and word[i] not in two_result and len(two_result) &lt; two_num:<br>                if len(two_result)&gt;0:<br>                    if two_result[-1] &gt; word[i]:<br>                        i = i + 1<br>                        continue<br>                new_two_result = copy.copy(two_result)<br>                new_two_result.append(word[i])<br>                i = i+1<br>                sort(one_num, two_num, three_num, one_result, new_two_result, [])<br>            elif word[i] not in one_result and word[i] not in two_result and word[i] not in three_result and len(three_result) &lt; three_num:<br>                if len(three_result)&gt;0:<br>                    if three_result[-1] &gt; word[i]:<br>                        i = i+1<br>                        continue<br>                new_three_result = copy.copy(three_result)<br>                new_three_result.append(word[i])<br>                i = i+1<br>                sort(one_num, two_num, three_num, one_result, two_result, new_three_result)<br>            else:<br>                i = i+1<br>                continue<br>sort(1, 2, 3, [], [], [])<br>运行结果：<br>一等奖 [1]<br>二等奖 [2, 3]<br>三等奖 [4, 5, 6]<br>.....<br>","like_count":1},{"had_liked":false,"id":352869,"user_name":"013923","can_delete":false,"product_type":"c1","uid":3035193,"ip_address":"北京","ucode":"1214DAADBCA848","user_header":"","comment_is_top":false,"comment_ctime":1658990395,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1658990395","product_id":100021201,"comment_content":"学习了！","like_count":0},{"had_liked":false,"id":350960,"user_name":"DFighting","can_delete":false,"product_type":"c1","uid":1233193,"ip_address":"","ucode":"F3BA2426FF8582","user_header":"https://static001.geekbang.org/account/avatar/00/12/d1/29/1b1234ed.jpg","comment_is_top":false,"comment_ctime":1657421667,"is_pvip":true,"replies":[{"id":"127848","content":"很好的总结","user_name":"作者回复","user_name_real":"编辑","uid":"1275061","ctime":1657923725,"ip_address":"","comment_id":350960,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1657421667","product_id":100021201,"comment_content":"组合是不考虑顺序的排列，但是应用的时候需要存储数据，存储的势必只是某种组合的某种排列方式，这时候就需要一个标准化的流程来保证同一种组合的不同排列都可以转换成标准的排列已完成程序的存储，检索和比对","like_count":0,"discussions":[{"author":{"id":1275061,"avatar":"https://static001.geekbang.org/account/avatar/00/13/74/b5/b68e3740.jpg","nickname":"黄申","note":"","ucode":"EE9AC074A322FF","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":580145,"discussion_content":"很好的总结","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1657923725,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":348751,"user_name":"Marco","can_delete":false,"product_type":"c1","uid":1397516,"ip_address":"","ucode":"796A4B9D1DE55D","user_header":"https://static001.geekbang.org/account/avatar/00/15/53/0c/b4907516.jpg","comment_is_top":false,"comment_ctime":1655368095,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1655368095","product_id":100021201,"comment_content":"这题自己写出来好复杂，用了三个list。<br>一个存结果，一个存剩余要组合的数据，还有一个得存着剩余要排列的数据。<br>因为三等奖抽完了抽二等奖的时候，之前没用到的数据都需要保留。保留一个全局全量的list删除已经获奖的list看起来能降低代码复杂度。<br>不知道有没有简单点的写法","like_count":0},{"had_liked":false,"id":340139,"user_name":"克己求生","can_delete":false,"product_type":"c1","uid":1055204,"ip_address":"","ucode":"F684AA10ECBBBA","user_header":"https://static001.geekbang.org/account/avatar/00/10/19/e4/09de1820.jpg","comment_is_top":false,"comment_ctime":1648623651,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1648623651","product_id":100021201,"comment_content":"def combine(l, n):<br>    answers = []<br>    answer = n * [0]<br>    <br>    def generate(li, i):<br>        if i == n:<br>            answers.append(answer.copy())<br>            return<br>        <br>        for j in range(li, len(l)):<br>            answer[i] = l[j]<br>            <br>            generate(li + 1, i + 1)<br>        <br>    generate(0, 0)    <br>    return answers<br><br>combine(list(range(1, 101)), 14)","like_count":0},{"had_liked":false,"id":335806,"user_name":"江河","can_delete":false,"product_type":"c1","uid":1981442,"ip_address":"","ucode":"C91566C13DD825","user_header":"https://static001.geekbang.org/account/avatar/00/1e/3c/02/8a07be41.jpg","comment_is_top":false,"comment_ctime":1645695660,"is_pvip":true,"discussion_count":0,"race_medal":0,"score":"1645695660","product_id":100021201,"comment_content":"有评论也指出题目数据比较大，计算了10个人，1个1等奖，2个2等奖，3个3等奖的样例。<br>```<br><br>local Persons = {}<br>for i=1,10 do<br>    table.insert(Persons, i)<br>end<br><br>local sub = function(t, n)<br>    local r = {}<br>    for i=n, #t do<br>        table.insert(r, t[i])<br>    end<br>    return r<br>end<br><br>local clone = function(t)<br>    local r = {}<br>    for _, v in ipairs(t) do<br>        table.insert(r, v)<br>    end<br>    return r<br>end<br><br>local cloneAwards = function(t)<br>    local r = {}<br>    for _, v in ipairs(t) do<br>        table.insert(r, clone(v))<br>    end<br>    return r<br>end<br><br>local printAwards = function(awards)<br>    local s = string.format(&quot;%s;%s;%s&quot;,<br>        table.concat(awards[1], &#39;,&#39;),<br>        table.concat(awards[2], &#39;,&#39;),<br>        table.concat(awards[3], &#39;,&#39;))<br>    print(s)<br>end<br><br><br>local choujiang<br>choujiang = function(p, a)<br>    if #a[3] == 3 then<br>        printAwards(a)<br>        return<br>    end<br>    for i=1,#p do<br>        local persons = clone(p)<br>        local awards = cloneAwards(a)<br>        if #awards[1] &lt; 1 then<br>            table.insert(awards[1], persons[i])<br>            persons = sub(persons, i+1)<br>            choujiang(persons, awards)<br>        elseif #awards[2] &lt; 2 then<br>            table.insert(awards[2], persons[i])<br>            persons = sub(persons, i+1)<br>            choujiang(persons, awards)<br>        elseif #awards[3] &lt; 3 then<br>            table.insert(awards[3], persons[i])<br>            persons = sub(persons, i+1)<br>            choujiang(persons, awards)<br>        end<br>    end<br>end<br><br><br>local Awards = {{}, {}, {}}<br>choujiang(Persons, Awards)<br><br>```","like_count":0},{"had_liked":false,"id":333920,"user_name":"吾颜六涩","can_delete":false,"product_type":"c1","uid":1898594,"ip_address":"","ucode":"4C42E903AD2E39","user_header":"https://static001.geekbang.org/account/avatar/00/1c/f8/62/6a51ed0c.jpg","comment_is_top":false,"comment_ctime":1644584569,"is_pvip":true,"replies":[{"id":"124732","content":"很高兴对你有价值","user_name":"作者回复","user_name_real":"编辑","uid":"1275061","ctime":1649449448,"ip_address":"","comment_id":333920,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1644584569","product_id":100021201,"comment_content":"看到了组合的实用性","like_count":0,"discussions":[{"author":{"id":1275061,"avatar":"https://static001.geekbang.org/account/avatar/00/13/74/b5/b68e3740.jpg","nickname":"黄申","note":"","ucode":"EE9AC074A322FF","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":560799,"discussion_content":"很高兴对你有价值","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1649449448,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":331889,"user_name":"52hz","can_delete":false,"product_type":"c1","uid":1065933,"ip_address":"","ucode":"099A27AEF2C575","user_header":"https://static001.geekbang.org/account/avatar/00/10/43/cd/dff748b8.jpg","comment_is_top":false,"comment_ctime":1642853068,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1642853068","product_id":100021201,"comment_content":"从n个不同元素中取出m个不同的元素，不考虑顺序。 n!&#47;((n-m)!m!)<br><br>全组合： 2**n<br><br>思考题：c(100,10)*c(90,3)*c(87,1)","like_count":0},{"had_liked":false,"id":328489,"user_name":"test","can_delete":false,"product_type":"c1","uid":1065849,"ip_address":"","ucode":"9A4973E591DD12","user_header":"https://static001.geekbang.org/account/avatar/00/10/43/79/18073134.jpg","comment_is_top":false,"comment_ctime":1640751548,"is_pvip":false,"replies":[{"id":"120176","content":"是的","user_name":"作者回复","user_name_real":"编辑","uid":"1275061","ctime":1641688254,"ip_address":"","comment_id":328489,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1640751548","product_id":100021201,"comment_content":"多元文法的解法存在一个问题，用户的输入会有单词间前后顺序不同造成的语意上下文不同。","like_count":0,"discussions":[{"author":{"id":1275061,"avatar":"https://static001.geekbang.org/account/avatar/00/13/74/b5/b68e3740.jpg","nickname":"黄申","note":"","ucode":"EE9AC074A322FF","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":544741,"discussion_content":"是的","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1641688254,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":316658,"user_name":"史佳宾","can_delete":false,"product_type":"c1","uid":2775048,"ip_address":"","ucode":"FB9F5C5D583C4F","user_header":"https://static001.geekbang.org/account/avatar/00/2a/58/08/b650aee8.jpg","comment_is_top":false,"comment_ctime":1634478849,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1634478849","product_id":100021201,"comment_content":"1. 从100个人中选14个人的组合作为中奖人。<br>2. 生成14个中奖人的排列","like_count":0},{"had_liked":false,"id":253833,"user_name":"zhaoey","can_delete":false,"product_type":"c1","uid":2168796,"ip_address":"","ucode":"CD70AA3ED52B5B","user_header":"https://static001.geekbang.org/account/avatar/00/21/17/dc/8edbd93e.jpg","comment_is_top":false,"comment_ctime":1602909634,"is_pvip":false,"discussion_count":1,"race_medal":0,"score":"1602909634","product_id":100021201,"comment_content":"# 由于100人得出的组合可能太大，我稍微修改了题目<br># 题目：10 个人中，抽取三等奖 5 名，二等奖 3 名和一等奖 1 名，每人最多抽中一次<br><br>=======================<br>结果<br>=======================<br>[1]一等奖：[1] 二等奖：[2, 3, 4] 三等奖：[5, 6, 7, 8, 9]<br>...<br>[5040]一等奖：[10] 二等奖：[7, 8, 9] 三等奖：[2, 3, 4, 5, 6]<br>总可能数：5040","like_count":0,"discussions":[{"author":{"id":2168796,"avatar":"https://static001.geekbang.org/account/avatar/00/21/17/dc/8edbd93e.jpg","nickname":"zhaoey","note":"","ucode":"CD70AA3ED52B5B","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":313011,"discussion_content":"老师，这个结果对吗？\n这个题目的公式怎么写？","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1602910131,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":252136,"user_name":"zhaoey","can_delete":false,"product_type":"c1","uid":2168796,"ip_address":"","ucode":"CD70AA3ED52B5B","user_header":"https://static001.geekbang.org/account/avatar/00/21/17/dc/8edbd93e.jpg","comment_is_top":false,"comment_ctime":1602142123,"is_pvip":false,"replies":[{"id":"92517","content":"这个都是编辑的功劳 :)","user_name":"作者回复","user_name_real":"黄申","uid":"1275061","ctime":1602648081,"ip_address":"","comment_id":252136,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1602142123","product_id":100021201,"comment_content":"手绘图风格真好看，是用的啥工具画的？","like_count":0,"discussions":[{"author":{"id":1275061,"avatar":"https://static001.geekbang.org/account/avatar/00/13/74/b5/b68e3740.jpg","nickname":"黄申","note":"","ucode":"EE9AC074A322FF","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":506723,"discussion_content":"这个都是编辑的功劳 :)","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1602648081,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":249747,"user_name":"nate_luo","can_delete":false,"product_type":"c1","uid":1980442,"ip_address":"","ucode":"2A2E880126E9E1","user_header":"","comment_is_top":false,"comment_ctime":1600777780,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1600777780","product_id":100021201,"comment_content":"代码：<br><br>import getopt<br>import sys<br><br>def print_prize_third(l, start, num):<br>    if len(l) == 14:<br>        print(&quot;1:{}, 2:{}, 3:{}&quot;.format(l[0:1], l[1:4], l[4:]))<br>        return<br><br>    for i in range(start,num + 1):<br>        if i not in l:<br>            print_prize_third(l + [i], i + 1, num)<br><br>def print_prize_second(l, start, num):<br>    if len(l) == 4:<br>        print_prize_third(l, 1, num)<br>        return<br><br>    for i in range(start,num + 1):<br>        if i not in l:<br>            print_prize_second(l + [i], i + 1, num)<br><br>def print_prize_all(num):<br>    for i in range(1, num+1) :<br>        print_prize_second([i], 1, num)<br><br><br>def main():<br>    num = 100<br>    try:<br>        opts, args = getopt.getopt(sys.argv[1:], &quot;hn:&quot;, [&quot;help&quot;, &quot;num=&quot;])<br>    except getopt.GetoptError:<br>        print(&quot;usage: &quot; + sys.argv[0] + &quot; -n number&quot;)<br>        sys.exit(2)<br><br>    for opt, arg in opts:<br>        if opt in (&quot;-h&quot;, &quot;--help&quot;):<br>            print(&quot;usage: &quot; + sys.argv[0] + &quot; -n number&quot;)<br>            sys.exit()<br>        elif opt in (&quot;-n&quot;, &quot;--num&quot;):<br>            num = int(arg)<br><br>    print_prize_all(num)<br><br><br>if __name__ == &quot;__main__&quot;:<br>    main()<br>----------------------------<br><br>在n为15的情况下，可以得到C(15,10)*C(5,3)*C(2,1)=3003*10*2=60060<br>前几个输出为：<br>1:[1], 2:[2, 3, 4], 3:[5, 6, 7, 8, 9, 10, 11, 12, 13, 14]<br>1:[1], 2:[2, 3, 4], 3:[5, 6, 7, 8, 9, 10, 11, 12, 13, 15]<br>1:[1], 2:[2, 3, 4], 3:[5, 6, 7, 8, 9, 10, 11, 12, 14, 15]<br>1:[1], 2:[2, 3, 4], 3:[5, 6, 7, 8, 9, 10, 11, 13, 14, 15]<br>1:[1], 2:[2, 3, 4], 3:[5, 6, 7, 8, 9, 10, 12, 13, 14, 15]<br>最后几个输出为：<br><br>1:[15], 2:[12, 13, 14], 3:[1, 2, 3, 4, 6, 7, 8, 9, 10, 11]<br>1:[15], 2:[12, 13, 14], 3:[1, 2, 3, 5, 6, 7, 8, 9, 10, 11]<br>1:[15], 2:[12, 13, 14], 3:[1, 2, 4, 5, 6, 7, 8, 9, 10, 11]<br>1:[15], 2:[12, 13, 14], 3:[1, 3, 4, 5, 6, 7, 8, 9, 10, 11]<br>1:[15], 2:[12, 13, 14], 3:[2, 3, 4, 5, 6, 7, 8, 9, 10, 11]<br>-------------------------------------<br>总结一下：这个题跟第6课的题有点类似，也要用到递归。对于组合，按照本课中提到的方法，每次递归时传入不同的参数来避免重复。","like_count":0},{"had_liked":false,"id":237660,"user_name":"Geek_ba6f28","can_delete":false,"product_type":"c1","uid":2075683,"ip_address":"","ucode":"5EC1D41CAD7A58","user_header":"","comment_is_top":false,"comment_ctime":1595917575,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1595917575","product_id":100021201,"comment_content":"private static List&lt;Integer&gt; per = new ArrayList&lt;&gt;();<br>    static {<br>        for(int i = 1;i&lt;=100;i++) {<br>            per.add(i);<br>        }<br>    }<br>    public static void getAllPrize() {<br>        getAllPrize(new ArrayList&lt;&gt;());<br>    }<br>    private static void getAllPrize(ArrayList&lt;Integer&gt; list) {<br>        if(list.size()==14) {<br>            System.out.print(&quot;N1:&quot;+&quot;[&quot;+list.get(0)+&quot;] &quot;);<br>            System.out.print(&quot;N2:&quot;+&quot;[&quot;+list.get(1)+&quot;,&quot;+list.get(2)+&quot;,&quot;+list.get(3)+&quot;] N3:[&quot;);<br>            for(int i = 4;i&lt;list.size();i++) {<br>                System.out.print(list.get(i)+&quot;,&quot;);<br>            }<br>            System.out.print(&quot;]&quot;+&quot;\\n&quot;);<br>            return;<br>        }<br>        for(int i = 0;i&lt;per.size();i++) {<br>            ArrayList&lt;Integer&gt; list2 = (ArrayList&lt;Integer&gt;)list.clone();<br>            if(!list2.contains(per.get(i)))<br>                list2.add(per.get(i));<br>            else continue;<br>            getAllPrize(list2);<br>        }<br>    }","like_count":0},{"had_liked":false,"id":227214,"user_name":"Geek_1bca3e","can_delete":false,"product_type":"c1","uid":2027228,"ip_address":"","ucode":"B801B5B2416B4C","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTK2ibcQVCzwThf79tLAK9Fickoe75YVBK8X6tYggichZlgv07XtdpJcFYIRPBicbwdibzzicghyFpt3EfXg/132","comment_is_top":false,"comment_ctime":1592314632,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1592314632","product_id":100021201,"comment_content":"\tpublic static void main(String[] args) {  <br>\t\tArrayList&lt;String&gt; teams = new ArrayList&lt;String&gt;(Arrays.asList(&quot;t1&quot;, &quot;t2&quot;, &quot;t3&quot;,&quot;t4&quot;, &quot;t5&quot;, &quot;t6&quot;,&quot;t7&quot;));<br>\t\tCombintion.combine(teams,teams, new ArrayList&lt;String&gt;(), 3,3);<br>\t\tSystem.out.println(&quot;三等奖变化总数为：&quot;+thirdLevelCount);<br>\t\tSystem.out.println(&quot;二等奖变化总数为：&quot;+secondLevelCount);<br>\t\tSystem.out.println(&quot;一等奖变化总数为：&quot;+oneLevelCount);<br>\t\tSystem.out.println(&quot;总变化变化总数为一等奖变化数oneLevelCount*secondLevelCount*thirdLevelCount：&quot;+oneLevelCount*secondLevelCount*thirdLevelCount);<br><br>\t}<br>","like_count":0},{"had_liked":false,"id":227213,"user_name":"Geek_1bca3e","can_delete":false,"product_type":"c1","uid":2027228,"ip_address":"","ucode":"B801B5B2416B4C","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTK2ibcQVCzwThf79tLAK9Fickoe75YVBK8X6tYggichZlgv07XtdpJcFYIRPBicbwdibzzicghyFpt3EfXg/132","comment_is_top":false,"comment_ctime":1592314623,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1592314623","product_id":100021201,"comment_content":"<br>public class Combintion {<br>\tpublic static int thirdLevelCount = 0 ;<br>\tpublic static int secondLevelCount = 0 ;<br>\tpublic static int oneLevelCount = 0 ;<br><br> \tpublic static void combine(ArrayList&lt;String&gt; orginalTeams,  ArrayList&lt;String&gt; teams, ArrayList&lt;String&gt; result, int m ,int type) {<br><br>\t\t&#47;&#47; 梯度递归三等奖<br>\t\tif (result.size() == m &amp;&amp; type==3) {<br><br>\t\t\tArrayList&lt;String&gt; tempteams = new ArrayList&lt;String&gt;(orginalTeams);<br>\t\t\ttempteams.removeAll(result);<br>\t\t\tSystem.out.println(&quot;三等奖剩余元素========&quot;+tempteams);<br>\t\t\tSystem.out.println(&quot;三等奖筛选元素========&quot;+result);<br>\t\t\tthirdLevelCount ++;<br>\t\t\tcombine(tempteams,tempteams, new ArrayList&lt;String&gt;(), 2,2);&#47;&#47;进入二等奖抽取<br>\t\t\treturn;<br>\t\t}<br>\t\t&#47;&#47; 梯度递归二等奖<br>\t\tif (result.size() == m &amp;&amp; type==2) {<br><br>\t\t\tArrayList&lt;String&gt; tempteams = new ArrayList&lt;String&gt;(orginalTeams);<br>\t\t\ttempteams.removeAll(result);<br>\t\t\tSystem.out.println(&quot;二等奖剩余元素========&quot;+tempteams);<br>\t\t\tSystem.out.println(&quot;二等奖筛选元素========&quot;+result);<br>\t\t\tsecondLevelCount ++;<br>\t\t\tcombine(tempteams,tempteams, new ArrayList&lt;String&gt;(), 1,1);&#47;&#47;进入一等奖抽取<br>\t\t\treturn;<br>\t\t}<br>\t\t&#47;&#47; 梯度递归一等奖<br>\t\tif (result.size() == m &amp;&amp; type==1) {<br><br>\t\t\tArrayList&lt;String&gt; tempteams = new ArrayList&lt;String&gt;(orginalTeams);<br>\t\t\ttempteams.removeAll(result);<br>\t\t\tSystem.out.println(&quot;一等奖剩余元素========&quot;+tempteams);<br>\t\t\tSystem.out.println(&quot;一等奖筛选元素========&quot;+result);<br>\t\t\toneLevelCount ++;<br>\t\t\treturn;<br>\t\t}<br>\t\tfor (int i = 0; i &lt; teams.size(); i++) {<br>\t\t\t&#47;&#47; 从剩下的队伍中，选择一队，加入结果<br>\t\t\tArrayList&lt;String&gt; newResult = (ArrayList&lt;String&gt;)(result.clone());<br>\t\t\tnewResult.add(teams.get(i));<br><br>\t\t\t&#47;&#47; 只考虑当前选择之后的所有队伍<br>\t\t\tArrayList&lt;String&gt; rest_teams = new ArrayList&lt;String&gt;(teams.subList(i + 1, teams.size()));<br><br>\t\t\t&#47;&#47; 递归调用，对于剩余的队伍继续生成组合<br>\t\t\tcombine(orginalTeams,rest_teams, newResult, m,type);<br>\t\t}<br><br>\t}","like_count":1},{"had_liked":false,"id":226011,"user_name":"code everything","can_delete":false,"product_type":"c1","uid":1321772,"ip_address":"","ucode":"05A46B98C1A3F2","user_header":"https://static001.geekbang.org/account/avatar/00/14/2b/2c/7dc551b5.jpg","comment_is_top":false,"comment_ctime":1591928564,"is_pvip":false,"replies":[{"id":"83373","content":"注意每次抽取一个人，那么再次参与抽奖的总人数就会变化。我们假设每人最多只能中奖一次","user_name":"作者回复","user_name_real":"黄申","uid":"1275061","ctime":1592098229,"ip_address":"","comment_id":226011,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1591928564","product_id":100021201,"comment_content":"抽奖组合，我分析认为是从100的范围里取出（10 + 3 + 1）个组合，因为抽奖过程就是一口气在100人中连续抽14次。不知道我的理解是否正确？而且这样计算与(100, 10) + (90, 3) + (87, 1) 的值是不一样的。","like_count":0,"discussions":[{"author":{"id":1275061,"avatar":"https://static001.geekbang.org/account/avatar/00/13/74/b5/b68e3740.jpg","nickname":"黄申","note":"","ucode":"EE9AC074A322FF","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":498078,"discussion_content":"注意每次抽取一个人，那么再次参与抽奖的总人数就会变化。我们假设每人最多只能中奖一次","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1592098229,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":224309,"user_name":"Chuck.le","can_delete":false,"product_type":"c1","uid":1645644,"ip_address":"","ucode":"04F3D28E43C671","user_header":"https://static001.geekbang.org/account/avatar/00/19/1c/4c/edfbb57a.jpg","comment_is_top":false,"comment_ctime":1591342186,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1591342186","product_id":100021201,"comment_content":"答案就是A（14，100），排列数本身的性质决定了从第一位开始到最后一位所得的奖项","like_count":0},{"had_liked":false,"id":206644,"user_name":"Geek_773687","can_delete":false,"product_type":"c1","uid":1594185,"ip_address":"","ucode":"5644C28B54E1D5","user_header":"https://thirdwx.qlogo.cn/mmopen/vi_32/1OwVS6FvlwNGuZSszYyErKygNKEDibDicRL5QmVficugNro3lMeFDwnnVXWIetLzVOUPyvPPRDzeB60TuqtW71wpw/132","comment_is_top":false,"comment_ctime":1586912907,"is_pvip":false,"replies":[{"id":"77290","content":"我只记得强调3、4名比赛了，忘记强调冠亚军比赛了。。。","user_name":"作者回复","user_name_real":"黄申","uid":"1275061","ctime":1586992191,"ip_address":"","comment_id":206644,"utype":1}],"discussion_count":2,"race_medal":0,"score":"1586912907","product_id":100021201,"comment_content":"有一个疑问问一下，足球比赛三四名不是两个决赛失败的队进行比赛麼，应该是一次，不清楚2是如何算呢😇","like_count":0,"discussions":[{"author":{"id":1275061,"avatar":"https://static001.geekbang.org/account/avatar/00/13/74/b5/b68e3740.jpg","nickname":"黄申","note":"","ucode":"EE9AC074A322FF","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":491850,"discussion_content":"我只记得强调3、4名比赛了，忘记强调冠亚军比赛了。。。","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1586992191,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1014665,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/7b/89/34f2cbcc.jpg","nickname":"杨宇","note":"","ucode":"EB74DF6E269F03","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":572842,"discussion_content":"帮老师扩大了思考边界，好样的","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1653008946,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":201353,"user_name":"海晏","can_delete":false,"product_type":"c1","uid":1915554,"ip_address":"","ucode":"38E998D2036115","user_header":"https://static001.geekbang.org/account/avatar/00/1d/3a/a2/d9f736c6.jpg","comment_is_top":false,"comment_ctime":1585754998,"is_pvip":false,"replies":[{"id":"75885","content":"有些题目看起来简单，实现起来要考虑很多极端的corner case，也是对能力的一种锻炼","user_name":"作者回复","user_name_real":"黄申","uid":"1275061","ctime":1586109291,"ip_address":"","comment_id":201353,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1585754998","product_id":100021201,"comment_content":"天哪，各种报错，我竟然写了两个多小时，我真是太祥林嫂了。。。<br>而且这个函数扩展性还不够，不支持修改获奖人数，真是。。。<br>革命尚未成功，仍需努力<br><br>#从5个人里面选出1个一等奖，2个二等奖<br>import copy<br><br>members = [i for i in range(1,6)]<br><br>def combin(result=[],k=0):<br>    if len(result) == 3:<br>        for i in range(len(result)):#根据奖励设置对组合进行排列<br>            result[0],result[i] = result[i],result[0]<br>            print(result)#第0个元素为一等奖，第1，2个元素为二等奖<br>    else:<br>        for i in range(k,len(members)):#获取从5个人里选出3个人的组合<br>            newresult = copy.copy(result)<br>            newresult.append(members[i])<br>            k = i + 1<br>            combin(newresult,k)<br><br>combin()","like_count":0,"discussions":[{"author":{"id":1275061,"avatar":"https://static001.geekbang.org/account/avatar/00/13/74/b5/b68e3740.jpg","nickname":"黄申","note":"","ucode":"EE9AC074A322FF","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":490309,"discussion_content":"有些题目看起来简单，实现起来要考虑很多极端的corner case，也是对能力的一种锻炼","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1586109291,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":199673,"user_name":"刘桢","can_delete":false,"product_type":"c1","uid":1482815,"ip_address":"","ucode":"3BFAB1C9772EB4","user_header":"https://static001.geekbang.org/account/avatar/00/16/a0/3f/06b690ba.jpg","comment_is_top":false,"comment_ctime":1585493489,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1585493489","product_id":100021201,"comment_content":"打卡","like_count":0},{"had_liked":false,"id":199250,"user_name":"Simon","can_delete":false,"product_type":"c1","uid":1914504,"ip_address":"","ucode":"A8A2E3E57BD029","user_header":"https://static001.geekbang.org/account/avatar/00/1d/36/88/20b6a6ee.jpg","comment_is_top":false,"comment_ctime":1585484473,"is_pvip":true,"discussion_count":0,"race_medal":0,"score":"1585484473","product_id":100021201,"comment_content":"n元文法，就是N-gram","like_count":0},{"had_liked":false,"id":187606,"user_name":"喻茂","can_delete":false,"product_type":"c1","uid":1318661,"ip_address":"","ucode":"C8BD8086A17365","user_header":"https://static001.geekbang.org/account/avatar/00/14/1f/05/8a06692e.jpg","comment_is_top":false,"comment_ctime":1584170737,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1584170737","product_id":100021201,"comment_content":"php示例<br>&lt;?php<br>&#47;**<br> * $remainPeople 未抽取的人<br> * $result 结果保存<br> * $curPrize 当前抽取奖项<br> * $resultTotal 保存当前奖项所有可能<br> * $num抽取数量<br> *&#47;<br>function choosePeople($remainPeople,&amp;$result,$curPrize,$num,&amp;$resultTotal) {<br>\tif (count($result) == $num) { &#47;&#47; 抽出的人数达到奖项的数据再抽奖<br>\t\t$resultTotal[] = [$curPrize=&gt;$result];<br>\t} else { &#47;&#47; 细分问题<br>\t\t$tmpResult = $result;<br>\t\t$remainPeople = array_values($remainPeople); &#47;&#47; 把索引重新从0开始<br>\t\tforeach ($remainPeople as $remainPeopleKey=&gt;$remainPeopleOne) { &#47;&#47; 先抽出人<br>\t\t\t$result = $tmpResult;<br>\t\t\t$result[] = $remainPeopleOne;<br>\t\t\tchoosePeople(array_slice($remainPeople,$remainPeopleKey+1),$result,$curPrize,$num,$resultTotal);<br>\t\t}<br>\t}<br>}","like_count":0},{"had_liked":false,"id":187505,"user_name":"喻茂","can_delete":false,"product_type":"c1","uid":1318661,"ip_address":"","ucode":"C8BD8086A17365","user_header":"https://static001.geekbang.org/account/avatar/00/14/1f/05/8a06692e.jpg","comment_is_top":false,"comment_ctime":1584149271,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1584149271","product_id":100021201,"comment_content":"php示例<br>&lt;?php<br>&#47;**<br> * @Description:  使用函数的递归（嵌套）调用，找出所有可能的队伍组合<br> * @param teams-目前还剩多少队伍没有参与组合，result-保存当前已经组合的队伍<br> * @return void<br> *&#47;<br>function combine($teams,&amp;$result,$n) {<br>\tif (count($result) == $n) {<br>\t\tprint_R($result);<br>\t\techo &quot;&lt;br&gt;&quot;;<br>\t} elseif(empty($teams)) {<br>\t\treturn false;<br>\t} else {<br>\t\t$tmpResult = $result;<br>\t\tforeach ($teams as $teamKey=&gt;$teamOne) {<br>\t\t\t$result = $tmpResult;<br>\t\t\t$result[] = $teamOne;<br>\t\t\tcombine(array_slice($teams,$teamKey+1),$result,$n);<br>\t\t}<br>\t}<br>}<br><br>$teams = [&#39;t1&#39;,&#39;t2&#39;,&#39;t3&#39;];<br>$n=2;<br>combine($teams,$result,$n);","like_count":0},{"had_liked":false,"id":184194,"user_name":"Andy","can_delete":false,"product_type":"c1","uid":1237557,"ip_address":"","ucode":"72EB0F3E195269","user_header":"https://static001.geekbang.org/account/avatar/00/12/e2/35/5d015881.jpg","comment_is_top":false,"comment_ctime":1583245458,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1583245458","product_id":100021201,"comment_content":"def combitions():<br>    a = [1,2,3,4]<br>    com = []<br>    def helper(nums, ret, depth):<br>        if depth == 3:<br>            com.append(ret)<br>            return<br>        for idx, n in enumerate(nums):<br>            helper(nums[idx+1:],ret+[n],depth+1)<br>    helper(a, [], 0)<br>    print(com)<br>combitions()","like_count":0},{"had_liked":false,"id":169425,"user_name":"Joker","can_delete":false,"product_type":"c1","uid":1156592,"ip_address":"","ucode":"126AF848001A1E","user_header":"https://static001.geekbang.org/account/avatar/00/11/a5/f0/8648c464.jpg","comment_is_top":false,"comment_ctime":1578354908,"is_pvip":false,"replies":[{"id":"65853","content":"很好的优化👍","user_name":"作者回复","user_name_real":"黄申","uid":"1275061","ctime":1578421786,"ip_address":"","comment_id":169425,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1578354908","product_id":100021201,"comment_content":"老师，我感觉这样也可以达到你的文中的那个例子的效果，但是节省了不少的空间了。<br>```java\r<br>private static void combine_3(ArrayList&lt;String&gt; terms, ArrayList&lt;String&gt; result, int index, int m) {<br>        if (result.size() == m) {<br>            System.out.println(result);<br>            return;<br>        }<br>        for (int i = index, len = terms.size(); i &lt; len; i++) {<br>            result.add(terms.get(i));<br>            combine_3(terms, result, i+1, m);<br>            result.remove(result.size() - 1);<br>        }<br>    }<br>```\r","like_count":0,"discussions":[{"author":{"id":1275061,"avatar":"https://static001.geekbang.org/account/avatar/00/13/74/b5/b68e3740.jpg","nickname":"黄申","note":"","ucode":"EE9AC074A322FF","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":480552,"discussion_content":"很好的优化👍","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1578421786,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":157195,"user_name":"aoe","can_delete":false,"product_type":"c1","uid":1121758,"ip_address":"","ucode":"1C6201EDB4E954","user_header":"https://static001.geekbang.org/account/avatar/00/11/1d/de/62bfa83f.jpg","comment_is_top":false,"comment_ctime":1575078492,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1575078492","product_id":100021201,"comment_content":"原来组合这么强大！","like_count":0},{"had_liked":false,"id":151753,"user_name":"顾骨","can_delete":false,"product_type":"c1","uid":1131165,"ip_address":"","ucode":"3F6BA592AB7723","user_header":"https://static001.geekbang.org/account/avatar/00/11/42/9d/c36b7ef7.jpg","comment_is_top":false,"comment_ctime":1573785417,"is_pvip":true,"discussion_count":0,"race_medal":0,"score":"1573785417","product_id":100021201,"comment_content":"&#47;&#47; decrease decreate []int{3,2,1} to []int{0,0,0} gradually<br>func decrease(c []int) {<br>\tfor i := range c {<br>\t\tif 0 != c[i] {<br>\t\t\tc[i]--<br>\t\t\tbreak<br>\t\t}<br>\t}<br>}<br><br>&#47;&#47; delElement delete target element from c<br>func delElement(c []string, target string) []string {<br>\tvar newc []string<br>\tfor i := range c {<br>\t\tif target == c[i] {<br>\t\t\tnewc = append(newc, c[0:i]...)<br>\t\t\tnewc = append(newc, c[i+1:]...)<br>\t\t\treturn newc<br>\t\t}<br>\t}<br>\treturn nil<br>}<br><br>&#47;&#47; in a total of 10 person, the number of third prize is 3,<br>&#47;&#47; the number of second prize is 2,the number of first prize is 1,<br>&#47;&#47; combinations=120*21*5=12600<br>&#47;&#47;<br>&#47;&#47; prize format: int[3,2,1], it means the number of third prize is 3,the number of second prize is 2,the number of first prize is 1<br>func lottery(origin, rest, result []string, prize []int) {<br>\t&#47;&#47; it means that the third prize is over, go to the second prize and so on<br>\tif 0 == prize[0] {<br>\t\torigin = rest<br>\t\tprize = prize[1:]<br>\t}<br><br>\t&#47;&#47; it means lottery game is over, print result<br>\tif 0 == len(prize) {<br>\t\tfmt.Println(result)<br>\t\treturn<br>\t}<br><br>\tfor i := range origin {<br>\t\tvar newResult []string<br>\t\tnewResult = append(newResult, result...) &#47;&#47; copy result<br>\t\tnewResult = append(newResult, origin[i])<br><br>\t\tvar newRest []string<br>\t\tnewRest = delElement(rest, origin[i])<br><br>\t\tvar newPrize []int<br>\t\tnewPrize = append(newPrize, prize...)<br>\t\tdecrease(newPrize)<br><br>\t\tlottery(origin[i+1:], newRest, newResult, newPrize)<br>\t}<br>}<br><br>func main() {<br>\tin := []string{&quot;m0&quot;, &quot;m1&quot;, &quot;m2&quot;, &quot;m3&quot;, &quot;m4&quot;}<br>\tlottery(in, in, []string{}, []int{2, 1, 1}) &#47;&#47;output: 60<br>\tfmt.Println(&quot;-------------------------&quot;)<br>\tin = []string{&quot;m0&quot;, &quot;m1&quot;, &quot;m2&quot;, &quot;m3&quot;, &quot;m4&quot;, &quot;m5&quot;, &quot;m6&quot;, &quot;m6&quot;, &quot;m8&quot;, &quot;m9&quot;}<br>\tlottery(in, in, []string{}, []int{3, 2, 1}) &#47;&#47;output: 12600<br>}","like_count":0},{"had_liked":false,"id":144966,"user_name":"建强","can_delete":false,"product_type":"c1","uid":1397126,"ip_address":"","ucode":"62B03D0E0C64EC","user_header":"https://static001.geekbang.org/account/avatar/00/15/51/86/b5fd8dd8.jpg","comment_is_top":false,"comment_ctime":1572142513,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1572142513","product_id":100021201,"comment_content":"简单地用Python写了一程序，由于组合的数量太多，程序中加了适当的限制<br>import copy<br>&#39;&#39;&#39;<br>参数说明：<br>all_person：   全体人员列表<br>sel_person:    可选人员列表<br>award_rank:    当前正在抽奖的等级<br>award_result： 各奖项的人员列表<br>award_psn_num：各奖项的人数列表<br>&#39;&#39;&#39;<br>def assemble(all_person,sel_person,award_rank,award_result,award_psn_num):<br>    global schema_num<br>    global schema_limit<br><br>    #超出组合限制，则不再作组合运算<br>    if schema_limit &gt; 0 and schema_num &gt; schema_limit:<br>        return<br><br>    #输出结果<br>    if sum(award_psn_num) == 0:<br>        schema_num += 1<br>        print(&#39;-&#39;*10,&#39;方案&#39;+ str(schema_num), &#39;-&#39;*10)<br>        for i in range(len(award_result)):<br>            print(&#39;{}等奖：{}&#39;.format(i+1,&#39;,&#39;.join(award_result[i])))<br>        print(&#39;-&#39;*30)<br>        print()<br>        return<br><br>    #挑选当前奖项的人员<br>    i = award_rank - 1<br><br>    if i&gt;= 0 and award_psn_num[i] &gt; 0:<br>        new_award_psn_num = award_psn_num.copy()<br>        new_award_psn_num[i] -= 1<br>        for j in range(len(sel_person)):<br>            new_award_result = copy.deepcopy(award_result)<br>            new_award_result[i].append(sel_person[j])<br>            new_sel_person = sel_person[j+1:].copy()<br>            assemble(all_person, new_sel_person, award_rank, new_award_result, new_award_psn_num)<br>    else:<br>        #初始化下一奖项的可选人员<br>        if i &gt; 0 and len(award_result[i-1]) == 0:<br>            new_sel_person = all_person.copy()<br><br>            award_psn = []<br>            for result in award_result:<br>                award_psn += result<br><br>            for psn in award_psn:<br>                new_sel_person.remove(psn)<br>        <br>            #抽取下一奖项人员<br>            assemble(all_person, new_sel_person, award_rank-1, award_result, award_psn_num)<br>           <br>def main():<br>    person_num = 100  #总人数<br>    award3_num = 10   #三等奖人数<br>    award2_num = 3    #二等奖人数<br>    award1_num = 1    #一等奖人数<br>    person_list = [&#39;P&#39; + str(i) for i in range(person_num)]<br>    assemble(person_list, person_list.copy(), 3, [[], [], []], [award1_num, award2_num, award3_num])<br><br>if __name__ == &#39;__main__&#39;:<br>    schema_num = 0<br>    schema_limit = 10 #限制组合的次数<br>    main()","like_count":0},{"had_liked":false,"id":143964,"user_name":"monalisali","can_delete":false,"product_type":"c1","uid":1299521,"ip_address":"","ucode":"1FDEC87C133E28","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTJbh5FQajwKhNlMrkoSklPpOXBtEYXCLvuWibhfWIS9QxHWDqzhEHJzEdmtUiaiaqFjfpsr2LwgNGpbQ/132","comment_is_top":false,"comment_ctime":1571816415,"is_pvip":false,"replies":[{"id":"55614","content":"很高兴对你有所帮助！","user_name":"作者回复","user_name_real":"黄申","uid":"1275061","ctime":1571875113,"ip_address":"","comment_id":143964,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1571816415","product_id":100021201,"comment_content":"老师那个 “red bluetooth mouse” 真是大开眼界了！ 其实把数学思维对应到程序解决方案这个过程才是最难的，就像程序员要把现实世界的问题抽象成代码一样。","like_count":0,"discussions":[{"author":{"id":1275061,"avatar":"https://static001.geekbang.org/account/avatar/00/13/74/b5/b68e3740.jpg","nickname":"黄申","note":"","ucode":"EE9AC074A322FF","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":471763,"discussion_content":"很高兴对你有所帮助！","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1571875113,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":139269,"user_name":"丁丁历险记","can_delete":false,"product_type":"c1","uid":1661704,"ip_address":"","ucode":"A43829E454C067","user_header":"https://static001.geekbang.org/account/avatar/00/19/5b/08/b0b0db05.jpg","comment_is_top":false,"comment_ctime":1570598050,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1570598050","product_id":100021201,"comment_content":"讲个段子   <br>淘汰赛  14只球队输一场，第四名输两场。<br>刚好16场。<br>","like_count":0},{"had_liked":false,"id":105570,"user_name":"风","can_delete":false,"product_type":"c1","uid":1444483,"ip_address":"","ucode":"E1CE0825AAF805","user_header":"https://static001.geekbang.org/account/avatar/00/16/0a/83/f916f903.jpg","comment_is_top":false,"comment_ctime":1561033200,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1561033200","product_id":100021201,"comment_content":"C语言  递归实现组合<br><br>#include &lt;stdio.h&gt;<br><br>&#47;&#47;记录项的定义<br>typedef struct record_type {<br>\tint data;<br>} RecordType;<br><br>#define MAX_NBR 100<br><br><br>static void visit(RecordType r[], int s[], int n)<br>{<br>\tint i;<br><br>\tfor (i = 0; i &lt; n - 1; i++)<br>\t\tprintf(&quot;%d, &quot;, r[s[i]].data);<br>\tprintf(&quot;%d\\n&quot;, r[s[i]].data);<br>}<br><br><br>&#47;&#47; s 和 rest 数组，存的是索引<br>void recursion(RecordType r[], int s[], int n, int rest[], int m, int num)<br>{<br>\tif (n &lt; num)<br>\t{<br>\t\tint i, j;<br>\t\tint rest2[MAX_NBR];<br><br>\t\tfor (i = 0; i &lt; m; i++)<br>\t\t{<br>\t\t\ts[n] = rest[i];<br>\t\t\tfor (j = 0; j &lt; m-i-1; j++)<br>\t\t\t\trest2[j] = rest[i+1+j];<br><br>\t\t\trecursion(r, s, n + 1, rest2, m-i-1, num);<br>\t\t}<br>\t}<br>\telse<br>\t{<br>\t\tvisit(r, s, n);<br>\t}<br>}<br><br>void combination(RecordType r[], int len, int num)<br>{<br>\tint n, m;<br>\tint s[MAX_NBR], rest[MAX_NBR];<br><br>\tn = 0;<br>\tm = len;<br>\tfor (int i = 0; i &lt; len; i++)<br>\t\trest[i] = i;<br><br>\trecursion(r, s, n, rest, m, num);<br>}<br><br><br>int main(void)<br>{<br>\tint data[5] = { 1, 2, 3, 4, 5 };<br>\tRecordType r[5];<br><br>\tfor (int i = 0; i &lt; 5; i++)<br>\t\tr[i].data = data[i];<br><br>\tcombination(r, 5, 3);<br>}<br>","like_count":0},{"had_liked":false,"id":89545,"user_name":"jiangjing","can_delete":false,"product_type":"c1","uid":1295268,"ip_address":"","ucode":"D45001E5FB4D6F","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/ibcRNslcyp7dwIR3TIwvloCibMd7Ew2TB3MU0wISFXEolyuHRtfIriagm6PMX5zQHicmc78BrBcxA6vQ5qnTPCev9A/132","comment_is_top":false,"comment_ctime":1556200791,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1556200791","product_id":100021201,"comment_content":"直接等于 C(100，10+3+1)？","like_count":0},{"had_liked":false,"id":58598,"user_name":"Joe","can_delete":false,"product_type":"c1","uid":1337998,"ip_address":"","ucode":"EC76699640B7BF","user_header":"https://static001.geekbang.org/account/avatar/00/14/6a/8e/7b6ea886.jpg","comment_is_top":false,"comment_ctime":1547131616,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1547131616","product_id":100021201,"comment_content":"C++实现<br>#include &lt;cmath&gt;<br>  #include &lt;iostream&gt;<br>  #include &lt;vector&gt;<br>  <br>  using namespace std;<br><br>  class Combination {<br>    private:<br>    const int firstPrize;<br>    const int secondPrize;<br>    const int thirdPrize;<br>  <br>    public:<br>    Combination(int x, int y, int z)<br>        : firstPrize(x), secondPrize(y), thirdPrize(z) {<br>    }<br>    &#47;**<br>    * @description:<br>    * 从10个人中选出三等奖3人，二等奖2人，一等奖1人，不能重复获奖。<br>    * @param {type} rewardNum- 指定赏金数， result- 奖赏方式结果。<br>    * @return: null<br>    *&#47;<br>  void rewardMethods(vector&lt;int&gt; result, vector&lt;int&gt; candidate) {<br>      unsigned int len = thirdPrize + secondPrize + firstPrize;<br>      if (result.size() == len) {<br>        &#47;&#47; 输出结果<br>        resultOutput(result);<br>        return;<br>      } else {<br>        for (unsigned int i = 0; i &lt; candidate.size(); i++) {<br>          vector&lt;int&gt; resultNew = result;<br>          resultNew.push_back(candidate[i]);<br>  <br>          vector&lt;int&gt; candidateNew;<br>          copyElem(candidate, candidateNew, i + 1);<br>          rewardMethods(resultNew, candidateNew);<br>        }<br>      }<br>    }<br>    &#47;&#47; 数据复制函数<br>    void copyElem(vector&lt;int&gt;&amp; input, vector&lt;int&gt;&amp; output, int i) {<br>      vector&lt;int&gt;::iterator it = input.begin() + i;<br>      for (; it &lt; input.end(); it++) {<br>        output.push_back(*it);<br>      }<br>    }<br>  &#47;&#47; 数据复制函数<br>    void copyElem(vector&lt;int&gt;&amp; input, vector&lt;int&gt;&amp; output, int i) {<br>      vector&lt;int&gt;::iterator it = input.begin() + i;<br>      for (; it &lt; input.end(); it++) {<br>        output.push_back(*it);<br>      }<br>    }<br>    &#47;&#47; 输出结果<br>    void resultOutput(vector&lt;int&gt; res) {<br>      for (unsigned int i = 0; i &lt; res.size(); i++) {<br>        if (i == thirdPrize) cout &lt;&lt; &#39;*&#39;;<br>        if (i == thirdPrize + secondPrize) cout &lt;&lt; &#39;*&#39;;<br>        cout &lt;&lt; res[i] &lt;&lt; &#39; &#39;;<br>      }<br>      cout &lt;&lt; endl;<br>    }<br>  };<br>  <br>  &#47;&#47; test<br>  int main(void) {<br>    Combination test(1, 2, 3);<br>    vector&lt;int&gt; res;<br>    vector&lt;int&gt; candidate;<br>    &#47;&#47; 输入<br>    for (unsigned int i = 0; i &lt; 10; i++) {<br>      candidate.push_back(i + 1);<br>    }<br>    test.rewardMethods(res, candidate);<br>  }<br>","like_count":0},{"had_liked":false,"id":58247,"user_name":"神蛊温皇","can_delete":false,"product_type":"c1","uid":1362371,"ip_address":"","ucode":"368DB1F860A7F6","user_header":"","comment_is_top":false,"comment_ctime":1547018258,"is_pvip":false,"replies":[{"id":"21438","content":"这个是排列的数量","user_name":"作者回复","user_name_real":"黄申","uid":"1275061","ctime":1547403326,"ip_address":"","comment_id":58247,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1547018258","product_id":100021201,"comment_content":"100人中抽取14个中奖者，每人只能一次，可能的组合有 100!&#47;(100-14)! 种。","like_count":0,"discussions":[{"author":{"id":1275061,"avatar":"https://static001.geekbang.org/account/avatar/00/13/74/b5/b68e3740.jpg","nickname":"黄申","note":"","ucode":"EE9AC074A322FF","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":435970,"discussion_content":"这个是排列的数量","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1547403326,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":58125,"user_name":"曹宇","can_delete":false,"product_type":"c1","uid":1354271,"ip_address":"","ucode":"0CDF9B3806FB32","user_header":"https://static001.geekbang.org/account/avatar/00/14/aa/1f/38b1bb9e.jpg","comment_is_top":false,"comment_ctime":1547000172,"is_pvip":true,"replies":[{"id":"21436","content":"思路是对的","user_name":"作者回复","user_name_real":"黄申","uid":"1275061","ctime":1547403178,"ip_address":"","comment_id":58125,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1547000172","product_id":100021201,"comment_content":"思路：先抽一等奖，然后在剩余的人中抽二等奖，最后然后在剩余的人中抽三等奖。<br><br><br>public static void recGenComb2(final ArrayList&lt;String&gt; originalList, ArrayList&lt;String&gt; remainderList, ArrayList&lt;String&gt; resultList, int remainderNum, int selectNum){<br><br>if (remainderNum == 1 &amp;&amp; selectNum == 1){<br><br>logger.debug( &quot;一等奖：&quot;+resultList );<br><br>ArrayList&lt;String&gt; remainOriginalList = cloneExt(originalList, resultList);<br><br>recGenComb2(remainOriginalList,remainOriginalList,new ArrayList&lt;&gt;(),0,2);<br><br>return;<br><br>}<br><br>if (remainderNum == 3 &amp;&amp; selectNum == 2){<br><br>logger.debug( &quot;二等奖：&quot; + resultList );<br><br>ArrayList&lt;String&gt; remainOriginalList = cloneExt(originalList, resultList);<br><br>recGenComb2(remainOriginalList,remainOriginalList,new ArrayList&lt;&gt;(),0,3);<br><br>return;<br><br>}<br><br>if (remainderNum == 10 &amp;&amp; selectNum == 3){<br><br>logger.debug( &quot;三等奖：&quot; + resultList );<br><br>return;<br><br>}<br><br>for (int i=0;i&lt;remainderList.size();i++){<br><br>ArrayList&lt;String&gt; copyResultList = (ArrayList&lt;String&gt;)resultList.clone();<br><br>copyResultList.add( remainderList.get( i ) );<br><br>ArrayList&lt;String&gt; copyRemainderList = new ArrayList&lt;&gt;(remainderList.subList( i+1, remainderList.size() ));<br><br>recGenComb2(originalList, copyRemainderList,copyResultList,remainderNum+1,selectNum);<br><br>}<br><br>}<br><br>","like_count":0,"discussions":[{"author":{"id":1275061,"avatar":"https://static001.geekbang.org/account/avatar/00/13/74/b5/b68e3740.jpg","nickname":"黄申","note":"","ucode":"EE9AC074A322FF","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":435918,"discussion_content":"思路是对的","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1547403178,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":57794,"user_name":"Geek_477c02","can_delete":false,"product_type":"c1","uid":1218578,"ip_address":"","ucode":"CB9A714A50B977","user_header":"https://static001.geekbang.org/account/avatar/00/12/98/12/a169bdcd.jpg","comment_is_top":false,"comment_ctime":1546912576,"is_pvip":false,"replies":[{"id":"20903","content":"你是指词组如何生成的吗？基本的方法是使用n元文法，把相邻的2个或3个单词（或者中文词）合并起来，比如句子&quot;a red bluetooth mouse&quot;，二元文法就可以得到&quot;a red&quot;, &quot;red bluetooth&quot;, &quot;bluetooth mouse&quot;。我们可以把这个过程，想做从n个元素里跳出2个元素的组合，然后利用组合内不区别元素顺序的特点，对这些单词进行统一的排序，这样&quot;red bluetooth&quot;和&quot;bluetooth red&quot;都能对应的上","user_name":"作者回复","user_name_real":"黄申","uid":"1275061","ctime":1546961696,"ip_address":"","comment_id":57794,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1546912576","product_id":100021201,"comment_content":"老师，可以说下文章里的“词组”是如何总结出来的么？","like_count":0,"discussions":[{"author":{"id":1275061,"avatar":"https://static001.geekbang.org/account/avatar/00/13/74/b5/b68e3740.jpg","nickname":"黄申","note":"","ucode":"EE9AC074A322FF","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":435765,"discussion_content":"你是指词组如何生成的吗？基本的方法是使用n元文法，把相邻的2个或3个单词（或者中文词）合并起来，比如句子&amp;quot;a red bluetooth mouse&amp;quot;，二元文法就可以得到&amp;quot;a red&amp;quot;, &amp;quot;red bluetooth&amp;quot;, &amp;quot;bluetooth mouse&amp;quot;。我们可以把这个过程，想做从n个元素里跳出2个元素的组合，然后利用组合内不区别元素顺序的特点，对这些单词进行统一的排序，这样&amp;quot;red bluetooth&amp;quot;和&amp;quot;bluetooth red&amp;quot;都能对应的上","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1546961696,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":56533,"user_name":"焦太郎","can_delete":false,"product_type":"c1","uid":1325464,"ip_address":"","ucode":"72D48AD49C07C3","user_header":"https://static001.geekbang.org/account/avatar/00/14/39/98/4c96c6f4.jpg","comment_is_top":false,"comment_ctime":1546483420,"is_pvip":false,"replies":[{"id":"20450","content":"因为每场球有两个球队参与，或者换个角度想，每对需要和另外31队踢，主客场制，所以31*2","user_name":"作者回复","user_name_real":"黄申","uid":"1275061","ctime":1546540380,"ip_address":"","comment_id":56533,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1546483420","product_id":100021201,"comment_content":"晕了已经，为什么共32X31场比赛，每队却只踢62场？","like_count":0,"discussions":[{"author":{"id":1275061,"avatar":"https://static001.geekbang.org/account/avatar/00/13/74/b5/b68e3740.jpg","nickname":"黄申","note":"","ucode":"EE9AC074A322FF","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":435098,"discussion_content":"因为每场球有两个球队参与，或者换个角度想，每对需要和另外31队踢，主客场制，所以31*2","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1546540380,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":56384,"user_name":"Ryoma","can_delete":false,"product_type":"c1","uid":1130590,"ip_address":"","ucode":"7F692369239692","user_header":"https://static001.geekbang.org/account/avatar/00/11/40/5e/b8fada94.jpg","comment_is_top":false,"comment_ctime":1546433251,"is_pvip":true,"replies":[{"id":"20321","content":"全组合应该是包括空集的，组合中没有考虑m=0是为了计算组合数量","user_name":"作者回复","user_name_real":"黄申","uid":"1275061","ctime":1546442175,"ip_address":"","comment_id":56384,"utype":1}],"discussion_count":1,"race_medal":2,"score":"1546433251","product_id":100021201,"comment_content":"在组合的定义中，老师你说m的范围是1≤m≤n，那全组合应该是不包括的空集的。<br><br>不知我说的对不对？","like_count":0,"discussions":[{"author":{"id":1275061,"avatar":"https://static001.geekbang.org/account/avatar/00/13/74/b5/b68e3740.jpg","nickname":"黄申","note":"","ucode":"EE9AC074A322FF","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":435009,"discussion_content":"全组合应该是包括空集的，组合中没有考虑m=0是为了计算组合数量","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1546442175,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":56331,"user_name":"樊少皇","can_delete":false,"product_type":"c1","uid":1243453,"ip_address":"","ucode":"17D7928D8FFFDB","user_header":"https://static001.geekbang.org/account/avatar/00/12/f9/3d/3e20a86a.jpg","comment_is_top":false,"comment_ctime":1546423018,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1546423018","product_id":100021201,"comment_content":"public static void lottery(ArrayList&lt;Integer&gt; resultF, ArrayList&lt;Integer&gt; resultS, ArrayList&lt;Integer&gt; resultT,<br>\t\t\tArrayList&lt;Integer&gt; remain,ArrayList&lt;Integer&gt; remainList, int f, int s, int t) {\t<br>\t\tif(resultT.size() == t){<br>\t\t\tremain = (ArrayList&lt;Integer&gt;) remainList.clone();<br>\t\t\tremain.removeAll(resultT);<br>\t\t\tif(resultS.size() == s){<br>\t\t\t\tremain = (ArrayList&lt;Integer&gt;) remainList.clone();<br>\t\t\t\tremain.removeAll(resultT);<br>\t\t\t\tremain.removeAll(resultS);<br>\t\t\t\tif(resultF.size() == f){<br>\t\t\t\t\tSystem.out.print(&quot;三等奖:&quot; + resultT + &quot;;&quot;);<br>\t\t\t\t\tSystem.out.print(&quot;二等奖:&quot; + resultS+ &quot;;&quot;);<br>\t\t\t\t\tSystem.out.println(&quot;一等奖:&quot; + resultF);<br>\t\t\t\t\treturn;<br>\t\t\t\t} else {<br>\t\t\t\t\tfor (int i = 0; i &lt; remain.size(); i++) {<br>\t\t\t\t\t\tArrayList&lt;Integer&gt; newResult = (ArrayList&lt;Integer&gt;) resultF.clone();<br>\t\t\t\t\t\tnewResult.add(remain.get(i));<br>\t\t\t\t\t\tArrayList&lt;Integer&gt; newRemain = new ArrayList&lt;Integer&gt;(remain.subList(i + 1, remain.size()));<br>\t\t\t\t\t\tlottery(newResult, resultS, resultT, newRemain,remainList, f, s, t);<br>\t\t\t\t\t}<br>\t\t\t\t}<br>\t\t\t} else {<br>\t\t\t\tfor (int i = 0; i &lt; remain.size(); i++) {<br>\t\t\t\t\tArrayList&lt;Integer&gt; newResult = (ArrayList&lt;Integer&gt;) resultS.clone();<br>\t\t\t\t\tnewResult.add(remain.get(i));<br>\t\t\t\t\tArrayList&lt;Integer&gt; newRemain = new ArrayList&lt;Integer&gt;(remain.subList(i + 1, remain.size()));<br>\t\t\t\t\tlottery(resultF, newResult, resultT, newRemain,remainList, f, s, t);<br>\t\t\t\t}<br>\t\t\t}<br>\t\t} else {<br>\t\t\tfor (int i = 0; i &lt; remain.size(); i++) {<br>\t\t\t\tArrayList&lt;Integer&gt; newResult = (ArrayList&lt;Integer&gt;) resultT.clone();<br>\t\t\t\tnewResult.add(remain.get(i));<br>\t\t\t\tArrayList&lt;Integer&gt; newRemain = new ArrayList&lt;Integer&gt;(remain.subList(i + 1, remain.size()));<br>\t\t\t\tlottery(resultF, resultS, newResult, newRemain,remainList, f, s, t);<br>\t\t\t}<br>\t\t}<br>\t}","like_count":0},{"had_liked":false,"id":55784,"user_name":"菩提","can_delete":false,"product_type":"c1","uid":1309278,"ip_address":"","ucode":"19586AC50BEF1E","user_header":"","comment_is_top":false,"comment_ctime":1546308411,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1546308411","product_id":100021201,"comment_content":"思考题，我对题目的理解是从100个选14个排列，C100,4。程序实现，将老师文章中的示例代码从3个选2排列修改，t1,t2,t3改为 t1,t2......t99,t100,排列方法调用第三个参数2改为14。<br>100x99x......87&#47;(14x13x......x2x1)种结果。","like_count":0},{"had_liked":false,"id":55624,"user_name":"Being","can_delete":false,"product_type":"c1","uid":1152227,"ip_address":"","ucode":"80A8783927B650","user_header":"https://static001.geekbang.org/account/avatar/00/11/94/e3/ed118550.jpg","comment_is_top":false,"comment_ctime":1546244873,"is_pvip":false,"replies":[{"id":"20106","content":"确实是很大的数字，可以用小的数字来测试","user_name":"作者回复","user_name_real":"黄申","uid":"1275061","ctime":1546313484,"ip_address":"","comment_id":55624,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1546244873","product_id":100021201,"comment_content":"老师，这个数是不是特别大呀，用排列的公式   P(14,100) &#47;P(1,1)&#47;P(3,3)&#47;P(10,10)     对吗？思路就是一共有1+3+10=14个人中奖，即在100个人中取14个人进行排序，然后去掉一、二、三等奖各自的重复情况，就得到了最终中奖情况的组合。<br>我用Python实现的，但是数值太大，输出不了，我就改用小的数进行了验证<br>rewordMap = {&#39;一等奖&#39;:1,&#39;二等奖&#39;:2,&#39;三等奖&#39;:3}<br>peopleSize = 7<br>peopleList = []<br><br>for i in range(peopleSize):<br>    peopleList.append(&quot;People&quot; + str(i + 1))<br><br>def CombinationReword(rewordList, rewordSet, peopleList, rewordSize):<br>    if len(rewordSet) == rewordSize:<br>        rewordList.append(rewordSet.copy())<br>        return <br><br>    for people in peopleList:<br>        newRewordSet =  rewordSet.copy()<br>        newRewordSet.add(people)<br>        <br>        newPeopleList = peopleList[peopleList.index(people) + 1:]<br>        CombinationReword(rewordList, newRewordSet, newPeopleList, rewordSize)<br>        <br>#===== 计算各个奖项的组合情况     <br>rewordFirstList = []<br>CombinationReword(rewordFirstList,set(), peopleList, rewordMap[&#39;一等奖&#39;])<br><br>rewordSecondList = []<br>CombinationReword(rewordSecondList,set(), peopleList, rewordMap[&#39;二等奖&#39;])<br><br>rewordThridList = []<br>CombinationReword(rewordThridList,set(), peopleList,rewordMap[&#39;三等奖&#39;])<br>#=====<br><br>#===== 将各个奖项的的set取交集，若有重复，去除，未有重复，则为一种情况，输出<br>count = 0<br>for thirdSet in rewordThridList:<br>    for secondSet  in rewordSecondList:<br>        for firstSet in rewordFirstList:<br>            set1 = thirdSet &amp; secondSet<br>            if len(set1) != 0:<br>                continue<br>            set2 = thirdSet &amp; firstSet<br>            if len(set2) != 0:<br>                continue<br>            set3 = secondSet &amp; firstSet<br>            if len(set3) != 0:<br>                continue<br><br>            count += 1<br>            print(&quot;First&quot;)<br>            print(firstSet)<br>            print(&quot;Second&quot;)<br>            print(secondSet)<br>            print(&quot;Third&quot;)<br>            print(thirdSet)<br>            print(&quot;=======================&quot;)<br><br>print(count)<br><br>","like_count":0,"discussions":[{"author":{"id":1275061,"avatar":"https://static001.geekbang.org/account/avatar/00/13/74/b5/b68e3740.jpg","nickname":"黄申","note":"","ucode":"EE9AC074A322FF","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":434812,"discussion_content":"确实是很大的数字，可以用小的数字来测试","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1546313484,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":55620,"user_name":"JonathanShi","can_delete":false,"product_type":"c1","uid":1154370,"ip_address":"","ucode":"CA519F3ABE96BF","user_header":"https://static001.geekbang.org/account/avatar/00/11/9d/42/a7da3229.jpg","comment_is_top":false,"comment_ctime":1546244338,"is_pvip":false,"replies":[{"id":"20105","content":"总的可能是三者的乘积，是个非常大的数字","user_name":"作者回复","user_name_real":"黄申","uid":"1275061","ctime":1546313443,"ip_address":"","comment_id":55620,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1546244338","product_id":100021201,"comment_content":"依次抽奖的话，三等奖为 C100 10  ( 100! ÷90!)÷10!<br>二等奖。C90 3；(90!÷87!)÷3!<br>一等奖C 87 1 <br>总的可能应该是三项的和，不知道是不是这个结果，请老师指正","like_count":0,"discussions":[{"author":{"id":1275061,"avatar":"https://static001.geekbang.org/account/avatar/00/13/74/b5/b68e3740.jpg","nickname":"黄申","note":"","ucode":"EE9AC074A322FF","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":434811,"discussion_content":"总的可能是三者的乘积，是个非常大的数字","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1546313443,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]}]}