{"id":75129,"title":"07 | 排列：如何让计算机学会“田忌赛马”？","content":"<p>你好，我是黄申。</p><p>“田忌赛马”的故事我想你肯定听过吧？田忌是齐国有名的将领，他常常和齐王赛马，可是总是败下阵来，心中非常不悦。孙膑想帮田忌一把。他把这些马分为上、中、下三等。他让田忌用自己的下等马来应战齐王的上等马，用上等马应战齐王的中等马，用中等马应战齐王的下等马。三场比赛结束后，田忌只输了第一场，赢了后面两场，最终赢得与齐王的整场比赛。</p><p>孙膑每次都从田忌的马匹中挑选出一匹，一共进行三次，排列出战的顺序。是不是感觉这个过程很熟悉？这其实就是数学中的<strong>排列</strong>过程。</p><p>我们初高中的时候，都学过排列，它的概念是这么说的：从n个不同的元素中取出m（1≤m≤n）个不同的元素，按照一定的顺序排成一列，这个过程就叫<strong>排列</strong>（Permutation）。当m=n这种特殊情况出现的时候，比如说，在田忌赛马的故事中，田忌的三匹马必须全部出战，这就是<strong>全排列</strong>（All Permutation）。</p><p>如果选择出的这m个元素可以有重复的，这样的排列就是为<strong>重复排列</strong>（Permutation with Repetition），否则就是<strong>不重复排列</strong>（Permutation without Repetition）。</p><p><img src=\"https://static001.geekbang.org/resource/image/98/15/98df21876ad52195217709e298707515.jpg?wh=1142*792\" alt=\"\"></p><p>看出来没有？这其实是一个树状结构。从树的根结点到叶子结点，每种路径都是一种排列。有多少个叶子结点就有多少种全排列。从图中我们可以看出，最终叶子结点的数量是3x2x1=6，所以最终排列的数量为6。</p><!-- [[[read_end]]] --><pre><code>{上等，中等，下等}\n{上等，下等，中等}\n{中等，上等，下等}\n{中等，下等，上等}\n{下等，上等，中等}\n{下等，中等，上等}\n</code></pre><p>我用t1，t2和t3分别表示田忌的上、中、下等马跑完全程所需的时间，用q1，q2和q3分别表示齐王的上、中、下等马跑全程所需的时间，因此，q1&lt;t1&lt;q2&lt;t2&lt;q3&lt;t3。</p><p>如果你将这些可能的排列，仔细地和齐王的上等、中等和下等马进行对比，只有{下等，上等，中等}这一种可能战胜齐王，也就是t3&gt;q1，t1&lt;q2，t2&lt;q3。</p><p>对于最终排列的数量，这里我再推广一下：</p><ul>\n<li>\n<p>对于n个元素的全排列，所有可能的排列数量就是nx(n-1)x(n-2)x…x2x1，也就是n!；</p>\n</li>\n<li>\n<p>对于n个元素里取出m(0&lt;m≤n)个元素的不重复排列数量是nx(n-1)x(n-2)x…x(n - m + 1)，也就是n!/(n-m)!。</p>\n</li>\n</ul><p>这两点都是可以用数学归纳法证明的，有兴趣的话你可以自己尝试一下。</p><h2>如何让计算机为田忌安排赛马？</h2><p>我们刚才讨论了3匹马的情况，这倒还好。可是，如果有30匹马、300匹马，怎么办？30的阶乘已经是天文数字了。更糟糕的是，如果两组马之间的速度关系也是非常随机的，例如q1&lt;q2&lt;t1&lt;t2&lt;q3&lt;t3， 那就不能再使用“最差的马和对方最好的马比赛”这种战术了。这个时候，人手动肯定是算不过来了，计算机又要帮我们大忙啦！我们使用代码来展示如何生成所有的排列。</p><p>如果你细心的话，就会发现在新版舍罕王赏麦的案例中，其实已经涉及了排列的思想，不过那个案例不是以“选取多少个元素”为终止条件，而是以“选取元素的总和”为终止条件。尽管这样，我们仍然可以使用递归的方式来快速地实现排列。</p><p>不过，要把田忌赛马的案例，转成计算机所能理解的内容，还需要额外下点功夫。</p><p>首先，在不同的选马阶段，我们都要保存已经有几匹马出战、它们的排列顺序、以及还剩几匹马没有选择。我使用变量result来存储到当前函数操作之前，已经出战的马匹及其排列顺序。而变量horses存储了到当前函数操作之前，还剩几匹马还没出战。变量new_result和rest_horses是分别从result和horses克隆而来，保证不会影响上一次的结果。</p><p>其次，孙膑的方法之所以奏效，是因为他看到每一等马中，田忌的马只比齐王的差一点点。如果相差太多，可能就会有不同的胜负结局。所以，在设置马匹跑完全程的时间上，我特意设置为q1&lt;t1&lt;q2&lt;t2&lt;q3&lt;t3，只有这样才能保证计算机得出和孙膑相同的结论。</p><pre><code>import java.util.ArrayList;\nimport java.util.Arrays; \nimport java.util.HashMap;\n\npublic class Lesson7_1 {\n\t\n\t// 设置齐王的马跑完所需时间\n\tpublic static HashMap&lt;String, Double&gt; q_horses_time = new HashMap&lt;String, Double&gt;(){\n\t\t{\n\t\t \t  put(&quot;q1&quot;, 1.0);\n\t\t \t  put(&quot;q2&quot;, 2.0);\n\t\t    put(&quot;q3&quot;, 3.0);\n\t\t}\n\t};\n\t\n\t// 设置田忌的马跑完所需时间\n\tpublic static HashMap&lt;String, Double&gt; t_horses_time = new HashMap&lt;String, Double&gt;(){\n\t\t{\n\t\t \t  put(&quot;t1&quot;, 1.5);\n\t\t \t  put(&quot;t2&quot;, 2.5);\n\t\t    put(&quot;t3&quot;, 3.5);\n\t\t}\n\t};\n\t\n\tpublic\tstatic ArrayList&lt;String&gt; q_horses = new ArrayList&lt;String&gt;(Arrays.asList(&quot;q1&quot;, &quot;q2&quot;, &quot;q3&quot;));\n\t\n\t/**\n    * @Description:\t使用函数的递归（嵌套）调用，找出所有可能的马匹出战顺序\n    * @param horses-目前还剩多少马没有出战，result-保存当前已经出战的马匹及顺序\n    * @return void\n    */\n\t\n    public static void permutate(ArrayList&lt;String&gt; horses, ArrayList&lt;String&gt; result) {\n    \t\n    \t// 所有马匹都已经出战，判断哪方获胜，输出结果\n    \tif (horses.size() == 0) {\n    \t\tSystem.out.println(result);\n    \t\tcompare(result, q_horses);\n    \t\t\n    \t\tSystem.out.println();\n    \t\t\n \t \t\t\treturn;\n   \t\t}\n    \t\n   \t\tfor (int i = 0; i &lt; horses.size(); i++) {\n    \t\t// 从剩下的未出战马匹中，选择一匹，加入结果\n \t \t\t\tArrayList&lt;String&gt; new_result = (ArrayList&lt;String&gt;)(result.clone());\n   \t\t\tnew_result.add(horses.get(i));\n  \t \t\t\n    \t\t// 将已选择的马匹从未出战的列表中移出\n \t \t\t\tArrayList&lt;String&gt; rest_horses = ((ArrayList&lt;String&gt;)horses.clone());\n \t \t\t\trest_horses.remove(i);\n    \t\t\n    \t\t// 递归调用，对于剩余的马匹继续生成排列\n   \t\t\tpermutate(rest_horses, new_result);\n   \t\t}\n    \t\n    }\n\n\n}\n \n</code></pre><p>另外，我还使用了compare的函数来比较田忌和齐王的马匹，看哪方获胜。</p><pre><code>    public static void compare(ArrayList&lt;String&gt; t, ArrayList&lt;String&gt; q) {\n    \tint t_won_cnt = 0;\n    \tfor (int i = 0; i &lt; t.size(); i++) {\n\t\t\tSystem.out.println(t_horses_time.get(t.get(i)) + &quot; &quot; +  q_horses_time.get(q.get(i)));\n\t\t\tif (t_horses_time.get(t.get(i)) &lt; q_horses_time.get(q.get(i))) t_won_cnt ++;\n\t\t}\n\t\t\n\t\tif (t_won_cnt &gt; (t.size() / 2)) System.out.println(&quot;田忌获胜！&quot;);\n\t\telse System.out.println(&quot;齐王获胜！&quot;);\n\t\t\n\t\tSystem.out.println();\n    }\n \n</code></pre><p>下面是测试代码。当然你可以设置更多的马匹，并增加相应的马匹跑完全程的时间。</p><pre><code>  public static void main(String[] args) {\n\t\t\n\t\tArrayList&lt;String&gt; horses = new\tArrayList&lt;String&gt;(Arrays.asList(&quot;t1&quot;, &quot;t2&quot;, &quot;t3&quot;));\n\t\tLesson7_1.permutate(horses,\tnew ArrayList&lt;String&gt;());\n\t\t\n\t}\n\n</code></pre><p>在最终的输出结果中，6种排列中只有一种情况是田忌获胜的。</p><pre><code>[t3, t1, t2]\n3.5 1.0\n1.5 2.0\n2.5 3.0\n田忌获胜！\n</code></pre><p>如果田忌不听从孙膑的建议，而是随机的安排马匹出战，那么他只有1/6的获胜概率。</p><p>说到这里，我突然产生了一个想法，如果齐王也是随机安排他的马匹出战顺序，又会是怎样的结果？如果动手来实现的话，大体思路是我们为田忌和齐王两方都生成他们马匹的全排序，然后再做交叉对比，看哪方获胜。这个交叉对比的过程也是个排列的问题，田忌这边有6种顺序，而齐王也是6种顺序，所以一共的可能性是6x6=36种。</p><p>我用代码模拟了一下，你可以看看。</p><pre><code>public static void main(String[] args) {\n\t\t\n\t\tArrayList&lt;String&gt; t_horses = new ArrayList&lt;String&gt;(Arrays.asList(&quot;t1&quot;, &quot;t2&quot;, &quot;t3&quot;));\n\t\tLesson7_2.permutate(t_horses, new ArrayList&lt;String&gt;(), t_results);\n\t\t\n\t\tArrayList&lt;String&gt; q_horses = new ArrayList&lt;String&gt;(Arrays.asList(&quot;q1&quot;, &quot;q2&quot;, &quot;q3&quot;));\n\t\tLesson7_2.permutate(q_horses, new ArrayList&lt;String&gt;(), q_results);\n\t\t\n\t\tSystem.out.println(t_results);\n\t\tSystem.out.println(q_results);\n\t\tSystem.out.println();\n\t\t\n\t\tfor (int i = 0; i &lt; t_results.size(); i++) {\n\t\t\tfor (int j = 0; j &lt; q_results.size(); j++) {\n\t\t\t\tLesson7_2.compare(t_results.get(i), q_results.get(j));\n\t\t\t}\n\t\t}\n\t\t\n\t}\n \n</code></pre><p>由于交叉对比时只需要选择2个元素，分别是田忌的出战顺序和齐王的出战顺序，所以这里使用2层循环的嵌套来实现。从最后的结果可以看出，田忌获胜的概率仍然是1/6。</p><h2>暴力破解密码如何使用排列思想？</h2><p>聊了这么多，相信你对排列有了更多了解。在概率中，排列有很大的作用，因为排列会帮助我们列举出随机变量取值的所有可能性，用于生成这个变量的概率分布，之后在概率统计篇我还会具体介绍。此外，排列在计算机领域中有着很多应用场景。我这里讲讲最常见的密码的暴力破解。</p><p>我们先来看去年网络安全界的两件大事。第一件发生在2017年5月，新型“蠕虫”式勒索病毒WannaCry爆发。当时这个病毒蔓延得非常迅速，电脑被感染后，其中的文件会被加密锁住，黑客以此会向用户勒索比特币。第二件和美国的信用评级公司Equifax有关。仅在2017年内，这个公司就被黑客盗取了大约1.46亿用户的数据。</p><p>看样子，黑客攻击的方式多种多样，手段也高明了很多，但是窃取系统密码仍然是最常用的攻击方式。有时候，黑客们并不需要真的拿到你的密码，而是通过“猜”，也就是列举各种可能的密码，然后逐个地去尝试密码的正确性。如果某个尝试的密码正好和原先管理员设置的一样，那么系统就被破解了。这就是我们常说的<strong>暴力破解法</strong>。</p><p>我们可以假设一个密码是由英文字母组成的，那么每位密码有52种选择，也就是大小写字母加在一起的数量。那么，生成m位密码的可能性就是52^m种。也就是说，从n（这里n为52）个元素取出m（0&lt;m≤n）个元素的可重复全排列，总数量为n^m。如果你遍历并尝试所有的可能性，就能破解密码了。</p><p>不过，即使存在这种暴力法，你也不用担心自己的密码很容易被人破解。我们平时需要使用密码登录的网站或者移动端App程序，基本上都限定了一定时间内尝试密码的次数，例如1天之内只能尝试5次等等。这些次数一定远远小于密码排列的可能性。</p><p>这也是为什么有些网站或App需要你一定使用多种类型的字符来创建密码，比如字母加数字加特殊符号。因为类型越多，n^m中的n越大，可能性就越多。如果使用英文字母的4位密码，就有52^4=7311616种，超过了700万种。如果我们在密码中再加入0～9这10个阿拉伯数字，那么可能性就是62^4=14776336种，超过了1400万。</p><p>同理，我们也可以增加密码长度，也就是用n^m中的m来实现这一点。如果在英文和阿拉伯数字的基础上，我们把密码的长度增加到6位，那么就是62^6=56800235584种，已经超过了568亿了！这还没有考虑键盘上的各种特殊符号。有人估算了一下，如果用上全部256个ASCII码字符，设置长度为8的密码，那么一般的黑客需要10年左右的时间才能暴力破解这种密码。</p><h2>小结</h2><p>排列可以帮助我们生成很多可能性。由于这种特性，排列最多的用途就是穷举法，也就是，列出所有可能的情况，一个一个验证，然后看每种情况是否符合条件的解。</p><p>古代的孙膑利用排列的思想，穷举了田忌马匹的各种出战顺序，然后获得了战胜齐王的策略。现代的黑客，通过排列的方法，穷举了各种可能的密码，试图破坏系统的安全性。如果你所面临的问题，它的答案也是各种元素所组成的排列，那么你就可以考虑，有没有可能排列出所有的可能性，然后通过穷举的方式来获得最终的解。</p><p><img src=\"https://static001.geekbang.org/resource/image/84/45/84f9e15c857ca0dbc49837ff0e107945.jpg?wh=1242*1547\" alt=\"\"></p><h2>思考题</h2><p>假设有一个4位字母密码，每位密码是a～e之间的小写字母。你能否编写一段代码，来暴力破解该密码？（提示：根据可重复排列的规律，生成所有可能的4位密码。）</p><p><span class=\"orange\">欢迎在留言区交作业，并写下你今天的学习笔记。你可以点击“请朋友读”，把今天的内容分享给你的好友，和他一起精进。</span></p><p></p>","neighbors":{"left":{"article_title":"06 | 递归（下）：分而治之，从归并排序到MapReduce","id":73834},"right":{"article_title":"08 | 组合：如何让计算机安排世界杯的赛程？","id":75662}},"comments":[{"had_liked":false,"id":54933,"user_name":"alic","can_delete":false,"product_type":"c1","uid":1240077,"ip_address":"","ucode":"47E9D22030CA01","user_header":"https://static001.geekbang.org/account/avatar/00/12/ec/0d/43d46889.jpg","comment_is_top":false,"comment_ctime":1545984125,"is_pvip":false,"replies":[{"id":"20068","content":"可以的👍","user_name":"作者回复","user_name_real":"黄申","uid":"1275061","ctime":1546211243,"ip_address":"","comment_id":54933,"utype":1}],"discussion_count":4,"race_medal":0,"score":"121805068413","product_id":100021201,"comment_content":"password = &#39;bacdce&#39;<br>classes = [&#39;a&#39;, &#39;b&#39;, &#39;c&#39;, &#39;d&#39;, &#39;e&#39;]<br><br>def get_password(n, result = &#39;&#39;):<br>    if n == 0:<br>        if result == password:<br>            print(password)<br>    else:<br>        for i in classes:<br>            new_result = copy.copy(result)<br>            new_result = new_result + i<br>            get_password(n - 1, new_result)<br><br>get_password(6)","like_count":28,"discussions":[{"author":{"id":1275061,"avatar":"https://static001.geekbang.org/account/avatar/00/13/74/b5/b68e3740.jpg","nickname":"黄申","note":"","ucode":"EE9AC074A322FF","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":434618,"discussion_content":"可以的👍","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1546211243,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1915334,"avatar":"https://static001.geekbang.org/account/avatar/00/1d/39/c6/1e12f271.jpg","nickname":"凹凸鸿","note":"","ucode":"A458BAEBF314B2","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":331560,"discussion_content":"怎么我运行只打印bacdce，然后就没了","likes_number":2,"is_delete":false,"is_hidden":false,"ctime":1606900329,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":1,"child_discussions":[{"author":{"id":1014665,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/7b/89/34f2cbcc.jpg","nickname":"杨宇","note":"","ucode":"EB74DF6E269F03","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":1915334,"avatar":"https://static001.geekbang.org/account/avatar/00/1d/39/c6/1e12f271.jpg","nickname":"凹凸鸿","note":"","ucode":"A458BAEBF314B2","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":572838,"discussion_content":"因为层主写的是相等才输出，这点与题意不符","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1653006686,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":331560,"ip_address":""},"score":572838,"extra":""}]},{"author":{"id":1661704,"avatar":"https://static001.geekbang.org/account/avatar/00/19/5b/08/b0b0db05.jpg","nickname":"丁丁历险记","note":"","ucode":"A43829E454C067","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":25944,"discussion_content":"加油各位py 友军，这里是不错的练习场。\n突然觉得老师的java版显的好孤单，好啰哩巴嗦。。。","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1570581171,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":55432,"user_name":"菩提","can_delete":false,"product_type":"c1","uid":1309278,"ip_address":"","ucode":"19586AC50BEF1E","user_header":"","comment_is_top":false,"comment_ctime":1546177017,"is_pvip":false,"replies":[{"id":"20060","content":"很赞","user_name":"作者回复","user_name_real":"黄申","uid":"1275061","ctime":1546204174,"ip_address":"","comment_id":55432,"utype":1}],"discussion_count":1,"race_medal":0,"score":"44495849977","product_id":100021201,"comment_content":"交作业：<br>public class L7_2 {<br><br>\tpublic static void calLetterList(ArrayList&lt;String&gt; l, ArrayList&lt;String&gt; result) {<br>\t\tif (result.size() == l.size()) {<br>\t\t\tSystem.out.println(result);<br>\t\t\treturn;<br>\t\t}<br><br>\t\tfor (String letter : l) {<br>\t\t\tArrayList&lt;String&gt; newResult = (ArrayList&lt;String&gt;) result.clone();<br>\t\t\tnewResult.add(letter);<br>\t\t\tcalLetterList(l, newResult);<br>\t\t}<br>\t}<br><br>\tpublic static void main(String[] args) {<br>\t\tArrayList&lt;String&gt; l = new ArrayList&lt;&gt;(Arrays.asList(&quot;a&quot;, &quot;b&quot;, &quot;c&quot;, &quot;d&quot;, &quot;e&quot;));<br>\t\tcalLetterList(l, new ArrayList&lt;&gt;());<br>\t}<br><br>}","like_count":10,"discussions":[{"author":{"id":1275061,"avatar":"https://static001.geekbang.org/account/avatar/00/13/74/b5/b68e3740.jpg","nickname":"黄申","note":"","ucode":"EE9AC074A322FF","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":434769,"discussion_content":"很赞","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1546204174,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":58334,"user_name":"Joe","can_delete":false,"product_type":"c1","uid":1337998,"ip_address":"","ucode":"EC76699640B7BF","user_header":"https://static001.geekbang.org/account/avatar/00/14/6a/8e/7b6ea886.jpg","comment_is_top":false,"comment_ctime":1547038577,"is_pvip":false,"replies":[{"id":"21031","content":"c语言确实更简洁👍","user_name":"作者回复","user_name_real":"黄申","uid":"1275061","ctime":1547047337,"ip_address":"","comment_id":58334,"utype":1}],"discussion_count":1,"race_medal":0,"score":"40201744241","product_id":100021201,"comment_content":"C++形式交作业，好像用list数据结果会方便一点。<br>&#47;** permutaion: 排列。<br> * 从n个数中选出m个数的方式，若不考虑顺序Cn(m)，若考虑顺序An(m)<br> *&#47;<br><br>&#47;* 问题：密码排列<br> * 假设有一个 4 位字母密码，每位密码是 a～e 之间的小写字。<br> * 编写密码可能排列方式。<br> *&#47;<br>#include &lt;iostream&gt;<br>#include &lt;vector&gt;<br>using namespace std;<br><br>class Permutation {<br>  private:<br>  int resultCount_ = 0;<br><br>  public:<br>  &#47;** Details: 根据输入字母列表，获得所有的排列方式。<br>   *  params: result- 当前排列形式， candidate- 未排列字母表。<br>   *  return: null<br>   *&#47;<br>  void breakPassword(vector&lt;string&gt; result, vector&lt;string&gt; candidate) {<br>    int len = candidate.size();<br>    if (0 == len) {<br>      &#47;&#47; 无字母剩余，输出排列结果<br>      outputResult(result);<br>      resultCount_++;<br>      return;<br>    }<br>    for (int i = 0; i &lt; len; i++) {<br>      vector&lt;string&gt; resultNew;<br>      vector&lt;string&gt; candidateLeft;<br>      &#47;&#47; 读取排列字母<br>      resultNew = result;<br>      resultNew.push_back(candidate[i]);<br>      &#47;&#47; 获得剩余字母表<br>      candidateLeft = candidate;<br>      vector&lt;string&gt;::iterator it = candidateLeft.begin();<br>      candidateLeft.erase(it + i);<br>      &#47;&#47; 递归<br>      breakPassword(resultNew, candidateLeft);<br>    }<br>  }<br>  &#47;&#47; 输出结果<br>  void outputResult(vector&lt;string&gt; result) {<br>    for (unsigned int i = 0; i &lt; result.size(); i++) {<br>      cout &lt;&lt; result[i];<br>    }<br>    cout &lt;&lt; endl;<br>  }<br>  &#47;&#47; 获得所有可能密码总数<br>  int getResultCount() {<br>    return resultCount_;<br>  }<br>};<br><br>int main(void) {<br>  vector&lt;string&gt; fourAlphabetString = {&quot;a&quot;, &quot;b&quot;, &quot;c&quot;, &quot;d&quot;, &quot;e&quot;};<br>  vector&lt;string&gt; res;<br>  Permutation test;<br>  test.breakPassword(res, fourAlphabetString);<br>  cout &lt;&lt; &quot;可能的密码形式：&quot;;<br>  cout &lt;&lt; test.getResultCount() &lt;&lt; &quot;种&quot; &lt;&lt; endl;<br>}<br>","like_count":9,"discussions":[{"author":{"id":1275061,"avatar":"https://static001.geekbang.org/account/avatar/00/13/74/b5/b68e3740.jpg","nickname":"黄申","note":"","ucode":"EE9AC074A322FF","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":436017,"discussion_content":"c语言确实更简洁👍","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1547047337,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":65685,"user_name":"qinggeouye","can_delete":false,"product_type":"c1","uid":1251536,"ip_address":"","ucode":"5B53EEDD7BEC9C","user_header":"https://static001.geekbang.org/account/avatar/00/13/18/d0/49b06424.jpg","comment_is_top":false,"comment_ctime":1549563042,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"35909301410","product_id":100021201,"comment_content":"python<br>一、田忌和齐王双方都随机选择马匹出战顺序<br>import copy<br># 设置齐王的马跑完所需时间<br>q_horses_time = {&quot;q1&quot;: 1.0, &quot;q2&quot;: 2.0, &quot;q3&quot;: 3.0}<br># 设置田忌的马跑完所需时间<br>t_horses_time = {&quot;t1&quot;: 1.5, &quot;t2&quot;: 2.5, &quot;t3&quot;: 3.5}<br># 双方均随机选择出战的马匹<br><br>q_horses = [&quot;q1&quot;, &quot;q2&quot;, &quot;q3&quot;]<br>t_horses = [&quot;t1&quot;, &quot;t2&quot;, &quot;t3&quot;]<br><br>def permutation(horses, result=None, all_results=None):<br>    &quot;&quot;&quot;<br>    使用函数的递归（嵌套）调用，找出所有可能的马匹出战顺序<br>    :param all_results: 马匹出战顺序的所有排列（全排列）<br>    :param horses: 目前还剩多少马没有出战<br>    :param result: 保存当前已经出战的马匹及顺序（其中一种排列）<br>    :return:<br>    &quot;&quot;&quot;<br>    if result is None:<br>        result = []<br>    if all_results is None:<br>        all_results = []<br><br>    # 所有马匹都已经出战，返回出战顺序<br>    if len(horses) == 0:<br>        all_results.append(result)<br>        return<br><br>    for k in range(len(horses)):<br>        # 从剩下的未出战马匹中 选择一匹 加入结果<br>        new_result = copy.copy(result)<br>        new_result.append(horses[k])<br>        # 将已选择的马匹从未出战的列表中移除<br>        rest_horses = copy.copy(horses)<br>        rest_horses.pop(k)<br>        # 递归调用 对于剩余的马匹继续生成排列<br>        permutation(rest_horses, new_result, all_results)<br>    return all_results<br><br><br>def compare(t, q):<br>    t_won_cnt = 0<br>    for m in range(len(t)):<br>        print(str(t_horses_time.get(t[m])) + &#39;,&#39; + str(q_horses_time.get(q[m])))<br>        if t_horses_time.get(t[m]) &lt; q_horses_time.get(q[m]):<br>            t_won_cnt = t_won_cnt + 1<br>    if t_won_cnt &gt; len(t)&#47;&#47;2:<br>        print(&quot;田忌获胜！&quot;)<br>    else:<br>        print(&quot;齐王获胜！&quot;)<br><br>if __name__ == &#39;__main__&#39;:<br>    # 双方均随机安排马匹出战，田忌获胜的概率仍为 1&#47;6<br>    t_results = permutation(t_horses)<br>    q_results = permutation(q_horses)<br>    print(t_results)<br>    print(q_results)<br>    for i in range(len(t_results)):<br>        for j in range(len(q_results)):<br>            compare(t_results[i], q_results[j])<br>","like_count":8},{"had_liked":false,"id":200350,"user_name":"罗耀龙@坐忘","can_delete":false,"product_type":"c1","uid":1917663,"ip_address":"","ucode":"3CEA258DE7F3C7","user_header":"https://static001.geekbang.org/account/avatar/00/1d/42/df/a034455d.jpg","comment_is_top":false,"comment_ctime":1585575697,"is_pvip":true,"replies":[{"id":"75037","content":"确实，懂了很多数学原理，算法设计就很简单了，而且效率和质量都会得到提升","user_name":"作者回复","user_name_real":"黄申","uid":"1275061","ctime":1585628927,"ip_address":"","comment_id":200350,"utype":1}],"discussion_count":1,"race_medal":5,"score":"23060412177","product_id":100021201,"comment_content":"茶艺师学编程<br><br>1、学完这节课要记住的<br><br>●不重复排列 n!&#47;(n-m)!   （1≤m≤n）<br>●不重复全排列 n！<br>●重复排列 n＾m<br><br>2、田忌赛马也好，穷举破解法也好，背后的数学原理都是一样的，就是排列。由此我获得两点体会<br><br>●这就是所谓“等价问题”。正因为存在“等价”，才能实现“融会贯通”。<br>●正如黄老师所说，在确定好数学的解决办法后，程序的解法也自然出来了。<br>把这项本领练到极致的话，也许就能像那位高德纳（《计算机程序设计艺术》的作者），总是能用最慢的电脑获得编程大赛的第一名。","like_count":6,"discussions":[{"author":{"id":1275061,"avatar":"https://static001.geekbang.org/account/avatar/00/13/74/b5/b68e3740.jpg","nickname":"黄申","note":"","ucode":"EE9AC074A322FF","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":490001,"discussion_content":"确实，懂了很多数学原理，算法设计就很简单了，而且效率和质量都会得到提升","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1585628927,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":83073,"user_name":"Jing","can_delete":false,"product_type":"c1","uid":1474491,"ip_address":"","ucode":"690067C1ACA141","user_header":"https://static001.geekbang.org/account/avatar/00/16/7f/bb/794dd610.jpg","comment_is_top":false,"comment_ctime":1554393719,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"14439295607","product_id":100021201,"comment_content":"&#47;&#47;思考题 c#版本<br>private static char[] _letters = { &#39;a&#39;, &#39;b&#39;, &#39;c&#39;, &#39;d&#39;, &#39;e&#39; };<br>public static void GetPassword()<br>{<br>string password = &quot;abded&quot;;<br>CrackPassword(password.Length, new StringBuilder(), password);<br>}<br><br>private static void CrackPassword(int length, StringBuilder result, string realPsd)<br>{<br>if (length == 0)<br>{<br>if (realPsd.Equals(result.ToString()))<br>{<br>Console.WriteLine(&quot;Your password is:&quot; + result.ToString());<br>}<br>result.Length = 0;<br>return;<br>}<br>else if (length &lt; 0)<br>{<br>return;<br>}<br>for (int i = 0; i &lt; _letters.Length; i++)<br>{<br>StringBuilder temp = new StringBuilder();<br>temp.Append(result.ToString());<br>temp.Append(_letters[i]);<br>CrackPassword(length - 1, temp, realPsd);<br>}<br>}","like_count":3},{"had_liked":false,"id":58129,"user_name":"瓶子dian","can_delete":false,"product_type":"c1","uid":1324116,"ip_address":"","ucode":"1B2D2992DD2A8D","user_header":"https://static001.geekbang.org/account/avatar/00/14/34/54/e9e0f8d6.jpg","comment_is_top":false,"comment_ctime":1547000695,"is_pvip":false,"replies":[{"id":"21437","content":"代码很简洁","user_name":"作者回复","user_name_real":"黄申","uid":"1275061","ctime":1547403225,"ip_address":"","comment_id":58129,"utype":1}],"discussion_count":2,"race_medal":0,"score":"14431902583","product_id":100021201,"comment_content":"var chars = [&#39;a&#39;, &#39;b&#39;, &#39;c&#39;, &#39;d&#39;, &#39;e&#39;]<br>var result = []<br><br>function getPassword(passwordChars, num, password) {<br>    if (num == 0) {<br>        return result.push(password)<br>    } else {<br>        for (var i = 0; i &lt; passwordChars.length; i++) {<br>            getPassword(passwordChars, num - 1, password + passwordChars[i])<br>        }<br>    }<br>}<br>getPassword(chars, 4, &#39;&#39;)<br>","like_count":3,"discussions":[{"author":{"id":1275061,"avatar":"https://static001.geekbang.org/account/avatar/00/13/74/b5/b68e3740.jpg","nickname":"黄申","note":"","ucode":"EE9AC074A322FF","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":435920,"discussion_content":"代码很简洁","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1547403225,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1223158,"avatar":"https://static001.geekbang.org/account/avatar/00/12/a9/f6/1cdb3d52.jpg","nickname":"乐达","note":"","ucode":"4A1CCA0633DB45","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":210918,"discussion_content":"优雅👍","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1584791256,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":54855,"user_name":"文刂 氵共 超","can_delete":false,"product_type":"c1","uid":1282813,"ip_address":"","ucode":"C2CE1512D23012","user_header":"https://static001.geekbang.org/account/avatar/00/13/92/fd/6b0e58fe.jpg","comment_is_top":false,"comment_ctime":1545970915,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"14430872803","product_id":100021201,"comment_content":"思考题 - 递归思想-C++<br>#include &lt;iostream&gt;<br>#include&lt;string&gt;<br><br>using std::string;<br>using namespace std;<br><br>void BreakPassword( string Words, int PasswordLen, string result)<br>{<br>\tif (result.length() == PasswordLen)<br>\t{<br>\t\t&#47;&#47;C++中string类型不能直接输出，需加头问题#include&lt;string&gt;，不能用#include&lt;string.h&gt;<br>\t\tcout &lt;&lt; result &lt;&lt; &quot;    &quot;;<br>\t\treturn;<br>\t}<br><br>\tfor (int i = 0; i &lt; Words.length(); ++i)<br>\t{<br>\t\tstring newResult = result;<br>\t\tnewResult.insert( newResult.end(), Words[i] );<br>\t\tBreakPassword(Words, PasswordLen, newResult);<br>\t}<br>}<br><br>int _tmain(int argc, _TCHAR* argv[])<br>{<br>\tint passwordLen = 4;<br>\tstring words(&quot;abcde&quot;);<br>\tstring result = &quot;&quot;;<br>\t<br>\tBreakPassword(words, passwordLen, result);<br><br>\treturn 0;<br>}","like_count":3},{"had_liked":false,"id":54845,"user_name":"alic","can_delete":false,"product_type":"c1","uid":1240077,"ip_address":"","ucode":"47E9D22030CA01","user_header":"https://static001.geekbang.org/account/avatar/00/12/ec/0d/43d46889.jpg","comment_is_top":false,"comment_ctime":1545969379,"is_pvip":false,"replies":[{"id":"19977","content":"具体是指哪道题目？","user_name":"作者回复","user_name_real":"黄申","uid":"1275061","ctime":1546018773,"ip_address":"","comment_id":54845,"utype":1}],"discussion_count":1,"race_medal":0,"score":"14430871267","product_id":100021201,"comment_content":"怎么用递归来求？","like_count":3,"discussions":[{"author":{"id":1275061,"avatar":"https://static001.geekbang.org/account/avatar/00/13/74/b5/b68e3740.jpg","nickname":"黄申","note":"","ucode":"EE9AC074A322FF","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":434583,"discussion_content":"具体是指哪道题目？","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1546018773,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":54768,"user_name":"毛毛","can_delete":false,"product_type":"c1","uid":1249698,"ip_address":"","ucode":"AD520D0011227D","user_header":"https://static001.geekbang.org/account/avatar/00/13/11/a2/33be69a6.jpg","comment_is_top":false,"comment_ctime":1545960976,"is_pvip":false,"replies":[{"id":"19847","content":"密码短的话，循环嵌套就可以了。如果密码很长，或者长度是满足某种条件的，就需要递归","user_name":"作者回复","user_name_real":"黄申","uid":"1275061","ctime":1545962484,"ip_address":"","comment_id":54768,"utype":1}],"discussion_count":1,"race_medal":0,"score":"14430862864","product_id":100021201,"comment_content":"最笨的方法，一个数组A容纳a~e，四个for循环遍历数组A，拼成一个新一维数组B，多个数组B再拼成二维数组，就是最后结果。","like_count":3,"discussions":[{"author":{"id":1275061,"avatar":"https://static001.geekbang.org/account/avatar/00/13/74/b5/b68e3740.jpg","nickname":"黄申","note":"","ucode":"EE9AC074A322FF","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":434559,"discussion_content":"密码短的话，循环嵌套就可以了。如果密码很长，或者长度是满足某种条件的，就需要递归","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1545962484,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":54669,"user_name":"石佳佳_Gemtra","can_delete":false,"product_type":"c1","uid":1235210,"ip_address":"","ucode":"C992091D9CC8D2","user_header":"https://static001.geekbang.org/account/avatar/00/12/d9/0a/ce61e397.jpg","comment_is_top":false,"comment_ctime":1545928431,"is_pvip":true,"discussion_count":0,"race_medal":0,"score":"10135863023","product_id":100021201,"comment_content":"对于 n 个元素里取出 m(0&lt;m≤n) 个元素的重复排列数量是 nxnxnx…xn，也就是 n^m。","like_count":2},{"had_liked":false,"id":350656,"user_name":"上善若水","can_delete":false,"product_type":"c1","uid":1271496,"ip_address":"","ucode":"1FE17489E0A2AE","user_header":"https://static001.geekbang.org/account/avatar/00/13/66/c8/4ef9a5b1.jpg","comment_is_top":false,"comment_ctime":1657076337,"is_pvip":true,"replies":[{"id":"127849","content":"Python确实很简洁👍","user_name":"作者回复","user_name_real":"编辑","uid":"1275061","ctime":1657923751,"ip_address":"","comment_id":350656,"utype":1}],"discussion_count":1,"race_medal":0,"score":"5952043633","product_id":100021201,"comment_content":"python3  一行解决<br>answer, = [f&quot;{a}{b}{c}{d}&quot; for a in &quot;abcde&quot; for b in &quot;abcde&quot; for c in &quot;abcde&quot; for d in &quot;abcde&quot; if f&quot;{a}{b}{c}{d}&quot; in password]","like_count":1,"discussions":[{"author":{"id":1275061,"avatar":"https://static001.geekbang.org/account/avatar/00/13/74/b5/b68e3740.jpg","nickname":"黄申","note":"","ucode":"EE9AC074A322FF","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":580146,"discussion_content":"Python确实很简洁👍","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1657923752,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":252150,"user_name":"zhaoey","can_delete":false,"product_type":"c1","uid":2168796,"ip_address":"","ucode":"CD70AA3ED52B5B","user_header":"https://static001.geekbang.org/account/avatar/00/21/17/dc/8edbd93e.jpg","comment_is_top":false,"comment_ctime":1602148147,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"5897115443","product_id":100021201,"comment_content":"思考题：<br>&#47;** 记录总结果数 *&#47;<br>    private static int total = 0;<br>    <br>    &#47;**<br>     * 暴力密码破解<br>     * @param codes<br>     * @param result<br>     *&#47;<br>    public static void permutation(ArrayList&lt;String&gt; codes, ArrayList&lt;String&gt; result){<br>        &#47;&#47; n = 0<br>        if (result.size() == 4){<br>            total ++;<br>            System.out.println(result);<br>            return;<br>        }<br><br>        for (int i = 0; i &lt; codes.size(); i++) {<br>            &#47;&#47; 取出一个字母添加到排列中<br>            ArrayList&lt;String&gt; newResult = (ArrayList)result.clone();<br>            newResult.add(codes.get(i));<br>            &#47;&#47; 递归调用，继续生成排列<br>            permutation(codes,newResult);<br>        }<br>    }<br><br>    public static void main(String[] args) {<br>        ArrayList&lt;String&gt; codes = new ArrayList&lt;&gt;(Arrays.asList(&quot;a&quot;,&quot;b&quot;,&quot;c&quot;,&quot;d&quot;,&quot;e&quot;));<br>        permutation(codes,new ArrayList&lt;&gt;());<br>        System.out.println(&quot;总结果数：&quot;+total);<br>    }<br># 输出结果<br>[a, a, a, a]<br>[a, a, a, b]<br>....<br>[e, e, e, d]<br>[e, e, e, e]<br>总结果数：625","like_count":1},{"had_liked":false,"id":214901,"user_name":"Mr.L","can_delete":false,"product_type":"c1","uid":1861785,"ip_address":"","ucode":"ABE2D44AA9B8E5","user_header":"","comment_is_top":false,"comment_ctime":1588844870,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"5883812166","product_id":100021201,"comment_content":"class decode:<br>    def __init__(self, secret):<br>        self.secret = secret<br>    def decode_s(self, result):<br>        if result == self.secret:<br>            print(&#39;The secret is:&#39;+result)<br>            return True<br>        elif len(result) &gt;= 4:<br>            return False<br>        code = [&#39;a&#39;, &#39;b&#39;, &#39;c&#39;, &#39;d&#39;, &#39;e&#39;]<br>        for c in code:<br>            result2 = result + c<br>            if self.decode_s(result2):<br>                return True<br>        return False<br>#test<br>secret = &#39;abde&#39;<br>result = &#39;&#39;<br>decode(secret).decode_s(result)","like_count":1},{"had_liked":false,"id":189673,"user_name":"渣渣辉","can_delete":false,"product_type":"c1","uid":1911235,"ip_address":"","ucode":"730838D9161579","user_header":"https://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTKIRSxInCiclMszZ21FptlHSHBB2icQSdIbRX2BYdiaEfdicsWxLzqB7h01jhibpLOAu9Hd8SfbZxHBaQg/132","comment_is_top":false,"comment_ctime":1584539996,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"5879507292","product_id":100021201,"comment_content":"static int sum = 0;<br>    public static void compare(char[] t, ArrayList&lt;String&gt; q) {<br>        if(q.size()==4)<br>        {<br>            System.out.println(q);<br>            sum+=1;<br>            return;<br>        }<br><br>        for (int i = 0; i &lt;t.length ; i++) {<br>            q.add(String.valueOf(t[i]));<br>            compare(t,q);<br>            q.remove(q.size()-1);<br>        }<br>    }<br><br><br><br>    public static void main(String[] args) {<br>        char[] t = {&#39;a&#39;,&#39;b&#39;,&#39;c&#39;,&#39;d&#39;,&#39;e&#39;};<br>        compare(t,new ArrayList&lt;String&gt;());<br>        System.out.println(sum);<br>    }","like_count":1},{"had_liked":false,"id":90465,"user_name":"QFann","can_delete":false,"product_type":"c1","uid":1258674,"ip_address":"","ucode":"910DD5C907E347","user_header":"https://static001.geekbang.org/account/avatar/00/13/34/b2/1e593de7.jpg","comment_is_top":false,"comment_ctime":1556526937,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"5851494233","product_id":100021201,"comment_content":"交作业<br>&#47;**<br>     *<br>     * @param password 密码组成元素<br>     * @param result 密码可能组合<br>     * @param number 密码个数<br>     *&#47;<br>    public static void getPassword(ArrayList&lt;String&gt; password,ArrayList&lt;String&gt; result,int number){<br><br>        if(result.size() &gt;= number ){<br>            System.out.println(result);<br>            return;<br>        }<br><br>        for (int i = 0;i &lt; password.size() ; i++){<br>            ArrayList&lt;String&gt; new_result = (ArrayList&lt;String&gt;) result.clone();<br>            new_result.add(password.get(i));<br>            getPassword(password,new_result,number);<br><br>        }<br><br>    }","like_count":1},{"had_liked":false,"id":57557,"user_name":"suiyueranzly","can_delete":false,"product_type":"c1","uid":1340756,"ip_address":"","ucode":"CCCF7E4E48447B","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/qC39IKuxA4tY32fcGlH3px3gcEO7qPictF6ptVwkJkYn8t49tuibS1aSN982KpG0WUxtZJNcbDWojOMsj6O2wgNA/132","comment_is_top":false,"comment_ctime":1546833394,"is_pvip":false,"replies":[{"id":"21429","content":"逻辑清晰","user_name":"作者回复","user_name_real":"黄申","uid":"1275061","ctime":1547402149,"ip_address":"","comment_id":57557,"utype":1}],"discussion_count":1,"race_medal":0,"score":"5841800690","product_id":100021201,"comment_content":"来补作业了，老师<br>-------------------------代码-----------------------------------<br> &#47;**<br>     * 排列<br>     *<br>     * @param passwords 待排列的字符<br>     * @param results   排列的结果<br>     ***&#47;<br>    public void range(ArrayList&lt;String&gt; passwords, ArrayList&lt;String&gt; results) {<br>        &#47;&#47;如果为空则不需要排列<br>        if (passwords.isEmpty()) {<br><br>            String collect = String.join(&quot;&quot;, results);<br><br>            System.out.print(collect + &quot;\\t&quot;);<br><br>        }<br><br>        for (int i = 0; i &lt; passwords.size(); i++) {<br><br>            String password = passwords.get(i);<br><br>            ArrayList&lt;String&gt; newResult = (ArrayList&lt;String&gt;) results.clone();<br><br>            ArrayList&lt;String&gt; newPassword = (ArrayList&lt;String&gt;) passwords.clone();<br><br>            newResult.add(password);<br><br>            newPassword.remove(i);<br><br>            range(newPassword,newResult);<br><br>        }<br>    }","like_count":1,"discussions":[{"author":{"id":1275061,"avatar":"https://static001.geekbang.org/account/avatar/00/13/74/b5/b68e3740.jpg","nickname":"黄申","note":"","ucode":"EE9AC074A322FF","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":435639,"discussion_content":"逻辑清晰","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1547402149,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":54790,"user_name":"风轨","can_delete":false,"product_type":"c1","uid":1185844,"ip_address":"","ucode":"7B8A5233B61EB0","user_header":"https://static001.geekbang.org/account/avatar/00/12/18/34/c082419c.jpg","comment_is_top":false,"comment_ctime":1545963059,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"5840930355","product_id":100021201,"comment_content":"public class Crack {<br>    static char[] pwdcs = new char[] { &#39;a&#39;, &#39;b&#39;, &#39;c&#39;, &#39;d&#39;, &#39;e&#39; };<br>    static String[] crack(int len) {<br>        String[] ps = new String[] { &quot;&quot; };<br>        while (len-- &gt; 0) {<br>            String[] nps = new String[ps.length * pwdcs.length];<br>            int nsbsi = 0;<br>            for (String pwd : ps) {<br>                for (char c : pwdcs) {<br>                    nps[nsbsi++] = pwd + c;<br>                }<br>            }<br>            ps = nps;<br>        }<br>        return ps;<br>    }<br>    <br>    <br>    public static void main(String[] args) {<br>        String[] pwds = crack(4);<br>        for (String pwd : pwds) {<br>            System.out.println(pwd);<br>        }<br>        &#47;**<br>         * 输出结果<br>         * aaaa<br>         * aaab<br>         * aaac<br>         * aaad<br>         * aaae<br>         * aaba<br>         * ....<br>         * 省略517行<br>         * ....<br>         * eeed<br>         * eeee<br>         * <br>         *&#47;<br>    }<br>}<br>","like_count":1},{"had_liked":false,"id":353975,"user_name":"高伸","can_delete":false,"product_type":"c1","uid":2421921,"ip_address":"北京","ucode":"63F615237C2E17","user_header":"https://static001.geekbang.org/account/avatar/00/24/f4/a1/51e99a88.jpg","comment_is_top":false,"comment_ctime":1659965351,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1659965351","product_id":100021201,"comment_content":"&#47;&#47;递归生成，变量是剩余长度及当前序列，当达到密码长度时记录结果<br>void generator(int len,const string&amp; passItems,string prePass,vector&lt;string&gt;&amp; passSet){<br>    if(len==0){<br>        passSet.push_back(prePass);<br>        return;<br>    }<br>    for(int i=0;i&lt;passItems.size();++i){<br>        generator(len-1,passItems,prePass+passItems[i],passSet);<br>    }<br>}<br>","like_count":0},{"had_liked":false,"id":352865,"user_name":"013923","can_delete":false,"product_type":"c1","uid":3035193,"ip_address":"北京","ucode":"1214DAADBCA848","user_header":"","comment_is_top":false,"comment_ctime":1658989093,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1658989093","product_id":100021201,"comment_content":"老师讲得好！","like_count":0},{"had_liked":false,"id":351298,"user_name":"万化8af10b","can_delete":false,"product_type":"c1","uid":1916746,"ip_address":"","ucode":"A5A212C8AE843E","user_header":"https://static001.geekbang.org/account/avatar/00/1d/3f/4a/b1c9e5e3.jpg","comment_is_top":false,"comment_ctime":1657682343,"is_pvip":true,"discussion_count":0,"race_medal":0,"score":"1657682343","product_id":100021201,"comment_content":"交作业：<br>import numpy as np<br>mm = np.random.randint(0,5,size=4)<br><br>def showmm(intmm):<br>    strmm=[]<br>    for i in intmm:<br>        strmm.append(chr(ord(&#39;a&#39;)+i))<br>    print(strmm)<br><br>def decryption(m):<br>    hit = False<br>    res = []<br>    for i in range(4):<br>        for j in range(5):<br>            if(m[i]==j):<br>                res.append(j)<br>                break<br>    print(res)<br><br>decryption(mm)","like_count":0},{"had_liked":false,"id":348824,"user_name":"二十年前","can_delete":false,"product_type":"c1","uid":1047278,"ip_address":"","ucode":"C98331689EECCF","user_header":"https://static001.geekbang.org/account/avatar/00/0f/fa/ee/748f13b5.jpg","comment_is_top":false,"comment_ctime":1655440391,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1655440391","product_id":100021201,"comment_content":"var (<br>\tlist           = []string{&quot;a&quot;, &quot;b&quot;, &quot;c&quot;, &quot;d&quot;, &quot;e&quot;}<br>\tpasswordLength = 4<br>\tresultTimes    = 0<br>)<br><br>func TestSort(t *testing.T) {<br>\tSort([]string{})<br>\tfmt.Println(resultTimes)<br>}<br><br>func Sort(result []string) {<br>\tif len(result) == passwordLength {<br>\t\tresultTimes++<br>\t\tfmt.Println(result)<br>\t\treturn<br>\t}<br><br>\tfor i := 0; i &lt; len(list); i++ {<br>\t\tnewResult := result<br>\t\tnewResult = append(newResult, list[i])<br>\t\tSort(newResult)<br>\t}<br>}<br><br>结果:625","like_count":0},{"had_liked":false,"id":346807,"user_name":"Bla bla bla","can_delete":false,"product_type":"c1","uid":2612053,"ip_address":"","ucode":"26662A6879A366","user_header":"https://static001.geekbang.org/account/avatar/00/27/db/55/f89f36b5.jpg","comment_is_top":false,"comment_ctime":1653447314,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1653447314","product_id":100021201,"comment_content":"public class Demo16 {<br>    public static void main(String[] args){<br><br>        &#47;&#47;a b c d e<br>        String password = &quot;ebcd&quot;;<br>        ArrayList&lt;String&gt; letters = new ArrayList&lt;&gt;(Arrays.asList(&quot;a&quot;, &quot;b&quot;, &quot;c&quot;, &quot;d&quot;, &quot;e&quot;));<br>        breakCode(password, letters, new ArrayList&lt;String&gt;());<br>    }<br><br>    public static void breakCode(String password, ArrayList&lt;String&gt; letters, ArrayList&lt;String&gt; result) {<br>        if (password == null || password.length() == 0) {<br>            return;<br>        }<br><br>        if (result.size() == password.length()) {<br>            System.out.println(result);<br>            return;<br>        }<br><br>        for (int i = 0; i &lt; letters.size(); i++) {<br><br>            ArrayList&lt;String&gt; newResult = (ArrayList&lt;String&gt;) result.clone();<br>            newResult.add(letters.get(i));<br><br>            ArrayList&lt;String&gt; newLetters = (ArrayList&lt;String&gt;) letters.clone();<br>            newLetters.remove(i);<br><br>            breakCode(password, newLetters, newResult);<br>        }<br>    }<br>}","like_count":0},{"had_liked":false,"id":339926,"user_name":"克己求生","can_delete":false,"product_type":"c1","uid":1055204,"ip_address":"","ucode":"F684AA10ECBBBA","user_header":"https://static001.geekbang.org/account/avatar/00/10/19/e4/09de1820.jpg","comment_is_top":false,"comment_ctime":1648464470,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1648464470","product_id":100021201,"comment_content":"alphas = &quot;abcde&quot;<br>max_size = 4<br><br>def list_all(results):<br>    if len(results) == max_size:<br>        print(results)<br>        return<br>    <br>    for i in range(len(alphas)):<br>        results.append(alphas[i])<br>        list_all(results)<br>        results.pop(-1)<br><br>list_all([])","like_count":0},{"had_liked":false,"id":334818,"user_name":"买了就等于学了","can_delete":false,"product_type":"c1","uid":1832194,"ip_address":"","ucode":"1FA56272783A53","user_header":"https://static001.geekbang.org/account/avatar/00/1b/f5/02/d1a1f878.jpg","comment_is_top":false,"comment_ctime":1645147277,"is_pvip":false,"replies":[{"id":"124731","content":"是的，就是比较麻烦一些","user_name":"作者回复","user_name_real":"编辑","uid":"1275061","ctime":1649449430,"ip_address":"","comment_id":334818,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1645147277","product_id":100021201,"comment_content":"田忌赛马还可以用贪心算法来解","like_count":0,"discussions":[{"author":{"id":1275061,"avatar":"https://static001.geekbang.org/account/avatar/00/13/74/b5/b68e3740.jpg","nickname":"黄申","note":"","ucode":"EE9AC074A322FF","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":560798,"discussion_content":"是的，就是比较麻烦一些","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1649449431,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":333367,"user_name":"鱼自由","can_delete":false,"product_type":"c1","uid":1101806,"ip_address":"","ucode":"4EA108884BE545","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTJFE8tbvsHARh0SaZk4aMBD4l3LQgicS44vPje09EWOES0ls4Q5vv4unsgJJZCm4P9ia8TYWa3kWsvA/132","comment_is_top":false,"comment_ctime":1644311800,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1644311800","product_id":100021201,"comment_content":"password = &#39;ebca&#39;<br>p_list = [&#39;a&#39;, &#39;b&#39;, &#39;c&#39;, &#39;d&#39;, &#39;e&#39;]<br><br>def list_pass(result):<br>    if len(result) == 4:<br>        print(result)<br>        if list(password) == result:<br>            print(&quot;this is password&quot;)<br>        return<br>    else:<br>        for i in p_list:<br>            new_result = result.copy()<br>            new_result.append(i)<br>            list_pass(new_result)<br><br>list_pass([])","like_count":0},{"had_liked":false,"id":331886,"user_name":"52hz","can_delete":false,"product_type":"c1","uid":1065933,"ip_address":"","ucode":"099A27AEF2C575","user_header":"https://static001.geekbang.org/account/avatar/00/10/43/cd/dff748b8.jpg","comment_is_top":false,"comment_ctime":1642851865,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1642851865","product_id":100021201,"comment_content":"排列：从n个不同的元素中取出m个不同的元素，按照一定的顺序排成一列，这个过程就是排列<br><br>n!&#47;(n-m)! = n*(n-1)*(n-2)*...*(n-m+1)<br><br>不可重复全排列： m=n时，n! = n*(n-1)*(n-2)*...*2*1<br><br>可重复全排列：n*m","like_count":0},{"had_liked":false,"id":311275,"user_name":"Duke","can_delete":false,"product_type":"c1","uid":2131512,"ip_address":"","ucode":"77BB22ADCC2AB9","user_header":"https://static001.geekbang.org/account/avatar/00/20/86/38/379a9da5.jpg","comment_is_top":false,"comment_ctime":1631153044,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1631153044","product_id":100021201,"comment_content":"void Main()<br>{<br>\tRecursionPassword(4, null);<br><br>\tConsole.WriteLine($&quot;\\n total:{count}&quot;);<br>}<br><br>static int count = 0;<br>static List&lt;char&gt; letters = new List&lt;char&gt; { &#39;a&#39;, &#39;b&#39;, &#39;c&#39;, &#39;d&#39;, &#39;e&#39; };<br><br>static void RecursionPassword(int passwordLength, List&lt;char&gt; destList)<br>{<br>\tif (destList == null) destList = new List&lt;char&gt;();<br><br>\t&#47;&#47; 密码符合预期的长度，打印结果。<br>\tif (passwordLength == destList.Count)<br>\t{<br>\t\tcount++;<br>\t\tvar str = &quot;&quot;;<br>\t\tdestList.ForEach(l =&gt; str += l + &quot;,&quot;);<br>\t\tstr.TrimEnd(&#39;,&#39;);<br>\t\tConsole.WriteLine(str);<br><br>\t\treturn;<br>\t}<br><br>\tletters.ForEach(l =&gt;<br>\t{<br>\t\tvar newDestList = new List&lt;char&gt;();<br>\t\tdestList.ForEach(d =&gt; newDestList.Add(d));<br>\t\tnewDestList.Add(l);<br><br>\t\tRecursionPassword(passwordLength, newDestList);<br>\t});<br>}","like_count":0},{"had_liked":false,"id":290196,"user_name":"MonkeyZz","can_delete":false,"product_type":"c1","uid":1390365,"ip_address":"","ucode":"8D2855FB446D70","user_header":"https://static001.geekbang.org/account/avatar/00/15/37/1d/374f80a4.jpg","comment_is_top":false,"comment_ctime":1619426725,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1619426725","product_id":100021201,"comment_content":"        static char[] origin_chars = { &#39;a&#39;, &#39;b&#39;, &#39;c&#39;, &#39;d&#39;, &#39;e&#39; };<br>        static int total = 0;<br>        static void CrackPassword(ArrayList result)<br>        {<br>            if (result.Count == 4)<br>            {<br>                string try_pwd = String.Join(&quot;&quot;, result.ToArray());<br>                Console.WriteLine(try_pwd);              <br>                total++;<br>                return;<br>            }<br>            for (int i = 0; i &lt; origin_chars.Length; i++)<br>            {<br>                ArrayList new_result = (ArrayList)result.Clone();<br>                new_result.Add(origin_chars[i]);<br>                CrackPassword(new_result);<br>            }<br>        }","like_count":0},{"had_liked":false,"id":273310,"user_name":"Dale","can_delete":false,"product_type":"c1","uid":1242602,"ip_address":"","ucode":"AD19A33FE5EEDF","user_header":"https://static001.geekbang.org/account/avatar/00/12/f5/ea/5f046856.jpg","comment_is_top":false,"comment_ctime":1610530767,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1610530767","product_id":100021201,"comment_content":"&#47;&#47; JavaScript version:<br>function resolve(dict = [], length = 4, temp = [], result = []) {<br>  if (length === 0) {<br>    return result.push(temp)<br>  }<br>  dict.forEach(char =&gt; {<br>    resolve(dict, length - 1, [...temp, char], result)<br>  })<br>  return result<br>}<br><br>resolve([&#39;a&#39;, &#39;b&#39;, &#39;c&#39;, &#39;d&#39;, &#39;e&#39;]) &#47;&#47; Array(625)","like_count":0},{"had_liked":false,"id":270893,"user_name":"大坏猪","can_delete":false,"product_type":"c1","uid":1662955,"ip_address":"","ucode":"326EC6BEEAE4FF","user_header":"https://static001.geekbang.org/account/avatar/00/19/5f/eb/b07245b7.jpg","comment_is_top":false,"comment_ctime":1609313699,"is_pvip":true,"discussion_count":0,"race_medal":0,"score":"1609313699","product_id":100021201,"comment_content":"var arr = [&#39;a&#39;, &#39;b&#39;, &#39;c&#39;, &#39;d&#39;, &#39;e&#39;]<br>    var num = 0<br>    function pai (result) {<br>        if (result.length == 4) {<br>            console.log(result);<br>            num++<br>            return<br>        }<br>        &#47;&#47; console.log(result);<br>        for (let i = 0; i &lt; arr.length; i++) {<br>            let newResult = JSON.parse(JSON.stringify(result))<br>            newResult.push(arr[i])<br>            pai(newResult)<br>        }<br>    }<br>    pai([])<br>    console.log(num, 9999);<br>js实现","like_count":0},{"had_liked":false,"id":269096,"user_name":"Geek_9cb913","can_delete":false,"product_type":"c1","uid":2273024,"ip_address":"","ucode":"394A9C1B44D9B9","user_header":"","comment_is_top":false,"comment_ctime":1608521823,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1608521823","product_id":100021201,"comment_content":"javascript:<br>let chars = [&#39;a&#39;, &#39;b&#39;, &#39;c&#39;, &#39;d&#39;, &#39;e&#39;]<br>let num = 0<br>getPassword(chars, [])<br>console.log(num)<br>function getPassword(passwordChars, password) {<br>  if (password.length === 4) {<br>    console.log(password)<br>    num++<br>    return<br>  }<br>  for (let i = 0; i &lt; passwordChars.length; i++) {<br>    let new_password = [...password]<br>    new_password.push(passwordChars[i])<br>    getPassword(passwordChars, new_password)<br>  }<br>}","like_count":0},{"had_liked":false,"id":264455,"user_name":"行望星烁","can_delete":false,"product_type":"c1","uid":1033321,"ip_address":"","ucode":"A779CE310F0BFE","user_header":"https://static001.geekbang.org/account/avatar/00/0f/c4/69/1946f360.jpg","comment_is_top":false,"comment_ctime":1606470169,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1606470169","product_id":100021201,"comment_content":"Java实现：<br>public class PasswordCracker {<br>\tprivate List&lt;String&gt; allCombination;<br>\tprivate String[] pwElementPool;<br>\tprivate int pwDigits;<br><br>\tprivate PasswordCracker(String[] pwElementPool, int pwDigits) {<br>\t\tallCombination = Lists.newArrayListWithExpectedSize(pwElementPool.length ^ pwDigits);<br>\t\tthis.pwElementPool = pwElementPool;<br>\t\tthis.pwDigits = pwDigits;<br>\t}<br><br>\tpublic void fillAllCombination(String aCombination) {<br>\t\tif (aCombination.length() == pwDigits) {<br>\t\t\tallCombination.add(aCombination);<br>\t\t\treturn;<br>\t\t}<br>\t\tfor (String element : pwElementPool) {<br>\t\t\tfillAllCombination(aCombination + element);<br>\t\t}<br><br>\t}<br><br>\tpublic static List&lt;String&gt; getAllCombination(String[] pwElementPool, int pwDigits) {<br>\t\tPasswordCracker passwordCracker = new PasswordCracker(pwElementPool, pwDigits);<br>\t\tpasswordCracker.fillAllCombination(&quot;&quot;);<br>\t\treturn passwordCracker.allCombination;<br>\t}<br><br>\tpublic static void main(String[] args) {<br>\t\tint pwDigits = 4;<br>\t\tString[] pwElementPool = {&quot;a&quot;, &quot;b&quot;, &quot;c&quot;, &quot;d&quot;, &quot;e&quot;};<br>\t\tList&lt;String&gt; allCombination = getAllCombination(pwElementPool, pwDigits);<br>\t\tSystem.out.println(String.format(&quot;共生成了%s种密码&quot;, allCombination.size()));<br>\t\tfor (String aCombination : allCombination) {<br>\t\t\tSystem.out.println(aCombination);<br>\t\t}<br>\t}<br>}","like_count":0},{"had_liked":false,"id":261797,"user_name":"换宇","can_delete":false,"product_type":"c1","uid":1001569,"ip_address":"","ucode":"F002F653C9B88F","user_header":"https://static001.geekbang.org/account/avatar/00/0f/48/61/83cddf89.jpg","comment_is_top":false,"comment_ctime":1605527062,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1605527062","product_id":100021201,"comment_content":"伪代码<br><br>public class  passport{<br><br>   public void getAllPassword(List passwordSet, List result,  int len) {<br>         if （len==0）{<br>             使用result比较密码是否相等<br>         }<br><br>         for(int i=0;i&lt;len;i++){<br>               List clonePasswordSet = passwordSet. clone();<br>              String item= clonePasswordSet. remove(i);<br>             List  cloneResult = result. clone();<br>             cloneResult. add(item);<br><br>           getAllpassword（clonePasswordSet, cloneResult,  len-1）；<br>          }<br>    }<br><br>}","like_count":0},{"had_liked":false,"id":240985,"user_name":"CML","can_delete":false,"product_type":"c1","uid":2104574,"ip_address":"","ucode":"15B22394C7D12C","user_header":"https://static001.geekbang.org/account/avatar/00/20/1c/fe/d3bd6d23.jpg","comment_is_top":false,"comment_ctime":1597142141,"is_pvip":false,"discussion_count":1,"race_medal":0,"score":"1597142141","product_id":100021201,"comment_content":"交作业，java语言完成<br>import java.util.ArrayList;<br>&#47;&#47;import java.util.Arrays;<br><br>import mathForProgramming.tools.Cast;<br><br>public class Lesson7_1Homework {<br>    &#47;**<br>     * @Description: 利用函数的递归调用，生成所有可能的密码组合破解密码<br>     * @param result-保存已经生成的组合,n-密码的位数<br>     * @return void<br>     *&#47;<br>    &#47;&#47;public static String[] pwd = {&quot;b&quot;,&quot;c&quot;,&quot;b&quot;,&quot;a&quot;};<br>    public static String pwd = &quot;bcba&quot;;<br>    public static String[] classes = {&quot;a&quot;,&quot;b&quot;,&quot;c&quot;,&quot;d&quot;,&quot;e&quot;};<br><br>    public static void attack(int n,ArrayList&lt;String&gt; result) {<br>        if (n == 0) {<br>            &#47;*if (result.equals(new ArrayList&lt;String&gt;(Arrays.asList(pwd.split(&quot;&quot;))))) {<br>                System.out.println(result);<br>                return;<br>            }*&#47;<br>            System.out.println(result);<br>            return;<br>        }else{<br>            for (String letter : classes) {<br>                ArrayList&lt;String&gt; newResult = Cast.cast(result.clone());<br>                newResult.add(letter);<br>                attack(n-1, newResult);<br>            }<br>        }<br>    }<br><br>    public static void main(String[] args) {<br><br>        attack(4, new ArrayList&lt;&gt;());<br>    }<br>}","like_count":0,"discussions":[{"author":{"id":1989445,"avatar":"https://static001.geekbang.org/account/avatar/00/1e/5b/45/a3fff72c.jpg","nickname":"Geek_457c8a","note":"","ucode":"62EDD7C6A20DCE","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":305882,"discussion_content":"可以加个好友，一起讨论学习吗，不过我基础不太好","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1600102238,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":236863,"user_name":"Geek_ba6f28","can_delete":false,"product_type":"c1","uid":2075683,"ip_address":"","ucode":"5EC1D41CAD7A58","user_header":"","comment_is_top":false,"comment_ctime":1595571365,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1595571365","product_id":100021201,"comment_content":"    static char[] b = {&#39;a&#39;,&#39;b&#39;,&#39;c&#39;,&#39;d&#39;,&#39;e&#39;};<br>    private static void showAll() {<br>        showAll(new ArrayList&lt;&gt;());<br><br>    }<br><br>    private static void showAll(ArrayList&lt;Character&gt; chars) {<br>        if(chars.size() == 4) {<br>            System.out.println(chars);<br>            return;<br>        }<br>        for(char c : b) {<br>            ArrayList&lt;Character&gt; chars2 = (ArrayList&lt;Character&gt;) chars.clone();<br>            chars2.add(c);<br>            showAll(chars2);<br>        }<br>    }","like_count":0},{"had_liked":false,"id":230903,"user_name":"爱学习不害怕","can_delete":false,"product_type":"c1","uid":1245504,"ip_address":"","ucode":"BE325C02E4C92F","user_header":"https://static001.geekbang.org/account/avatar/00/13/01/40/a203a3b9.jpg","comment_is_top":false,"comment_ctime":1593519584,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1593519584","product_id":100021201,"comment_content":"go语言可重复全排列版本：<br>package main<br><br>import (<br>\t&quot;fmt&quot;<br>\t&quot;strings&quot;<br>)<br><br>func main() {<br><br>\tres := make([]string, 0)<br>\tc := []string{&quot;a&quot;, &quot;b&quot;, &quot;c&quot;, &quot;d&quot;, &quot;e&quot;}<br>\ts := make([]string, 0)<br><br>\trun(&amp;res, c, s)<br><br>\tfmt.Println(res)<br>}<br><br>func run(res *[]string, c []string, s []string) {<br>\tif len(s) == 4 {<br>\t\t*res = append(*res, strings.Join(s, &quot;&quot;))<br>\t\treturn<br>\t}<br><br>\tfor i := 0; i &lt; len(c); i++ {<br>\t\tns := append(s[:0:0], s...)<br>\t\tns = append(ns, c[i])<br>\t\t&#47;&#47; nc := append(c[:0:0], c...)<br>\t\t&#47;&#47; nc = append(nc[:i], nc[i+1:]...)<br>\t\trun(res, c, ns)<br>\t}<br>}","like_count":0},{"had_liked":false,"id":230879,"user_name":"爱学习不害怕","can_delete":false,"product_type":"c1","uid":1245504,"ip_address":"","ucode":"BE325C02E4C92F","user_header":"https://static001.geekbang.org/account/avatar/00/13/01/40/a203a3b9.jpg","comment_is_top":false,"comment_ctime":1593511516,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1593511516","product_id":100021201,"comment_content":"go语言实现课后题：<br>package main<br><br>import (<br>\t&quot;fmt&quot;<br>\t&quot;strings&quot;<br>)<br><br>func main() {<br><br>\tres := make([]string, 0)<br>\tc := []string{&quot;a&quot;, &quot;b&quot;, &quot;c&quot;, &quot;d&quot;, &quot;e&quot;}<br>\ts := make([]string, 0)<br><br>\trun(&amp;res, c, s)<br><br>\tfmt.Println(res)<br>}<br><br>func run(res *[]string, c []string, s []string) {<br>\tif len(s) == 4 {<br>\t\t*res = append(*res, strings.Join(s, &quot;&quot;))<br>\t\treturn<br>\t}<br><br>\tfor i := 0; i &lt; len(c); i++ {<br>\t\tns := append(s[:0:0], s...)<br>\t\tns = append(ns, c[i])<br>\t\tnc := append(c[:0:0], c...)<br>\t\tnc = append(nc[:i], nc[i+1:]...)<br>\t\trun(res, nc, ns)<br>\t}<br>}","like_count":0},{"had_liked":false,"id":224633,"user_name":"寒江蓑笠","can_delete":false,"product_type":"c1","uid":1874882,"ip_address":"","ucode":"45334C53794243","user_header":"https://static001.geekbang.org/account/avatar/00/1c/9b/c2/5fd0b230.jpg","comment_is_top":false,"comment_ctime":1591490553,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1591490553","product_id":100021201,"comment_content":"javascript实现：<br><br><br>const startIndex = 97;<br>const endIndex = startIndex + 5;<br>const pwdLength = 4;<br><br>let letters = [];<br>let results = [];<br><br>for (let i = startIndex; i &lt; endIndex; i++) {<br>    letters.push(String.fromCharCode(i));<br>}<br><br>&#47;&#47; 组合<br>const permutate = function (pools, result = []) {<br>    if (result.length === pwdLength) {<br>        results.push(result);<br>        return;<br>    }<br><br>    for (let i = 0, l = pools.length; i &lt; l; i++) {<br>        const newResult = result.slice(0); &#47;&#47; 复制结果<br>        const curVal = pools[i];<br>        <br>        newResult.push(curVal);<br><br>        permutate(pools, newResult);<br>    }<br>};<br><br>permutate(letters);<br><br>console.log(&#39;results&#39;, results);<br>","like_count":0},{"had_liked":false,"id":224631,"user_name":"寒江蓑笠","can_delete":false,"product_type":"c1","uid":1874882,"ip_address":"","ucode":"45334C53794243","user_header":"https://static001.geekbang.org/account/avatar/00/1c/9b/c2/5fd0b230.jpg","comment_is_top":false,"comment_ctime":1591490154,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1591490154","product_id":100021201,"comment_content":"javascript<br><br>const startIndex = 97;<br>const endIndex = startIndex + 26;<br><br>let letters = [];<br>let results = [];<br><br>for (let i = 97; i &lt; 100; i++) {<br>    letters.push(String.fromCharCode(i));<br>}<br><br>&#47;&#47; 返回不含某个值的新数组<br>const remove = (arr, val) =&gt; {<br>    return arr.filter(item =&gt; item !== val);<br>};<br><br>&#47;&#47; 组合<br>const permutate = function (pools, result = []) {<br>    if (pools.length === 0) {<br>        results.push(result);<br>        return;<br>    }<br><br>    for (let i = 0, l = pools.length; i &lt; l; i++) {<br>        const newResult = result.slice(0); &#47;&#47; 复制结果<br>        const curVal = pools[i];<br>        <br>        newResult.push(curVal);<br>        <br>        const newPools = remove(pools, curVal);<br><br>        permutate(newPools, newResult);<br>    }<br>};<br><br>permutate(letters);<br><br>console.log(&#39;results&#39;, results);<br>","like_count":0},{"had_liked":false,"id":222077,"user_name":"林毅鑫","can_delete":false,"product_type":"c1","uid":1917916,"ip_address":"","ucode":"1BB3D186E90D96","user_header":"https://static001.geekbang.org/account/avatar/00/1d/43/dc/95d4f2c5.jpg","comment_is_top":false,"comment_ctime":1590670550,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1590670550","product_id":100021201,"comment_content":"这样写的代码感觉很有意思，赞一个","like_count":0},{"had_liked":false,"id":201157,"user_name":"云淡风轻","can_delete":false,"product_type":"c1","uid":1121817,"ip_address":"","ucode":"D6903A0FCEBC58","user_header":"https://static001.geekbang.org/account/avatar/00/11/1e/19/a235f31d.jpg","comment_is_top":false,"comment_ctime":1585724794,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1585724794","product_id":100021201,"comment_content":"#include &lt;iostream&gt;<br>using namespace std;<br>char ps_all[] = {&#39;a&#39;, &#39;b&#39;, &#39;c&#39;, &#39;d&#39;, &#39;e&#39;, &#39;f&#39;, &#39;g&#39;, &#39;h&#39;};<br>string my_ps = &quot;dddddhha&quot;;<br><br>bool check_ps(int len, string ps) {<br>  if (len == 0) {<br>    if (ps == my_ps) {<br>      cout &lt;&lt; &quot;password: &quot; &lt;&lt; ps &lt;&lt; endl;<br>      return true;<br>    }<br>  } else {<br>    for (char &amp;c : ps_all) {<br>      if (check_ps(len - 1, ps + c)) {<br>        return true;<br>      }<br>    }<br>  }<br>  return false;<br>}<br><br>int main() { cout &lt;&lt; check_ps(my_ps.length(), &quot;&quot;) &lt;&lt; endl; }","like_count":0},{"had_liked":false,"id":200802,"user_name":"海晏","can_delete":false,"product_type":"c1","uid":1915554,"ip_address":"","ucode":"38E998D2036115","user_header":"https://static001.geekbang.org/account/avatar/00/1d/3a/a2/d9f736c6.jpg","comment_is_top":false,"comment_ctime":1585653320,"is_pvip":false,"replies":[{"id":"75884","content":"非暴力破解，我的理解是需要结合一定的背景知识，更“准确”的去猜","user_name":"作者回复","user_name_real":"黄申","uid":"1275061","ctime":1586109189,"ip_address":"","comment_id":200802,"utype":1}],"discussion_count":0,"race_medal":0,"score":"1585653320","product_id":100021201,"comment_content":"这是今天baoli破解密码的作业（Python）<br>话说，这个密码非baoli破裂是什么样的思路？<br>import copy<br><br>passward = [&quot;e&quot;,&quot;b&quot;,&quot;e&quot;,&quot;c&quot;]<br>letters = [&quot;a&quot;,&quot;b&quot;,&quot;c&quot;,&quot;d&quot;,&quot;e&quot;]<br><br>def decoder(number,result=[]):<br>    if number == 0:<br>        if result == passward:<br>            print (result)<br>    else:<br>        for i in letters:<br>            newresult = copy.copy(result)<br>            newresult.append(i)<br>            decoder(number-1,newresult)<br><br>decoder(4)","like_count":0},{"had_liked":false,"id":199623,"user_name":"刘桢","can_delete":false,"product_type":"c1","uid":1482815,"ip_address":"","ucode":"3BFAB1C9772EB4","user_header":"https://static001.geekbang.org/account/avatar/00/16/a0/3f/06b690ba.jpg","comment_is_top":false,"comment_ctime":1585492691,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1585492691","product_id":100021201,"comment_content":"Python打卡","like_count":0},{"had_liked":false,"id":197938,"user_name":"徐旭","can_delete":false,"product_type":"c1","uid":1814806,"ip_address":"","ucode":"1D3091D15373E5","user_header":"https://static001.geekbang.org/account/avatar/00/1b/b1/16/dd11930c.jpg","comment_is_top":false,"comment_ctime":1585404174,"is_pvip":false,"replies":[{"id":"75048","content":"很高兴对你有价值","user_name":"作者回复","user_name_real":"黄申","uid":"1275061","ctime":1585629739,"ip_address":"","comment_id":197938,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1585404174","product_id":100021201,"comment_content":"赞赞，受益匪浅","like_count":0,"discussions":[{"author":{"id":1275061,"avatar":"https://static001.geekbang.org/account/avatar/00/13/74/b5/b68e3740.jpg","nickname":"黄申","note":"","ucode":"EE9AC074A322FF","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":489623,"discussion_content":"很高兴对你有价值","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1585629739,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":192291,"user_name":"乐达","can_delete":false,"product_type":"c1","uid":1223158,"ip_address":"","ucode":"4A1CCA0633DB45","user_header":"https://static001.geekbang.org/account/avatar/00/12/a9/f6/1cdb3d52.jpg","comment_is_top":false,"comment_ctime":1584845614,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1584845614","product_id":100021201,"comment_content":"交作业：<br>&lt;?php <br>\t$range_arr = [&#39;a&#39;,&#39;b&#39;,&#39;c&#39;,&#39;d&#39;,&#39;e&#39;];<br><br>\tfunction get_comma($range, $comma){<br>\t\tif ($range == 0) {<br>\t\t\t echo $comma,&quot;\\n&quot;;<br>\t\t} else {<br>\t\t\tforeach (global $range_arr as $value) {<br>\t\t\t\t$new_comma = $comma;<br>\t\t\t\tget_comma($range-1, $new_comma .= $value);<br>\t\t\t}<br>\t\t}<br>\t}<br>  <br>  \tget_comma(4, &#39;&#39;);","like_count":0},{"had_liked":false,"id":187495,"user_name":"喻茂","can_delete":false,"product_type":"c1","uid":1318661,"ip_address":"","ucode":"C8BD8086A17365","user_header":"https://static001.geekbang.org/account/avatar/00/14/1f/05/8a06692e.jpg","comment_is_top":false,"comment_ctime":1584147091,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1584147091","product_id":100021201,"comment_content":"php示例<br>&lt;?php<br>function create_password($n,$words,&amp;$result) {<br>\tif (count($result) &gt; $n) {<br>\t\treturn;<br>\t} elseif(count($result) == $n) { &#47;&#47; 密码生成完毕<br>\t\tprint_R($result);<br>\t\techo &quot;&lt;br&gt;&quot;;<br>\t} else {<br>\t\t$tmpResult = $result;<br>\t\tforeach ($words as $wordOne) {<br>\t\t\t$result = $tmpResult;<br>\t\t\t$result[] = $wordOne;<br>\t\t\tcreate_password($n,$words,$result);<br>\t\t}<br>\t}<br>}<br><br>$words = [&#39;a&#39;,&#39;b&#39;,&#39;c&#39;,&#39;d&#39;,&#39;e&#39;]; <br>$n = 4; &#47;&#47; 位数<br><br>create_password($n,$words,$result);","like_count":0},{"had_liked":false,"id":187452,"user_name":"喻茂","can_delete":false,"product_type":"c1","uid":1318661,"ip_address":"","ucode":"C8BD8086A17365","user_header":"https://static001.geekbang.org/account/avatar/00/14/1f/05/8a06692e.jpg","comment_is_top":false,"comment_ctime":1584112804,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1584112804","product_id":100021201,"comment_content":"php示例<br>&lt;?php<br>&#47;**   <br> * @Description:  使用函数的递归（嵌套）调用，找出所有可能的马匹出战顺序  <br> * @param horses-目前田忌还剩多少马没有出战，result-保存当前已经出战的马匹及顺序  <br> * @return void   <br> *&#47;<br>function permutate($horses,$horsesQi,&amp;$result,&amp;$qiResult) {<br>\tif (count($horses) == 0 &amp;&amp; count($horsesQi) == 0) { &#47;&#47; 所有马都已经出战计算结果<br>\t&#47;&#47;echo &quot;&lt;pre&gt;&quot;;<br>\t\t&#47;&#47;print_R($result);<br>\t\t&#47;&#47;print_R($qiResult);<br>\t\tcompare($result,$qiResult);<br>\t\techo &quot;&lt;br&gt;----------------------------------------&lt;br&gt;&quot;;<br>\t\treturn;<br>\t} else {<br>\t\t$tmpHorses = $horses; &#47;&#47; 把当前未出战的马保存下来<br>\t\t$tmpResult = $result;<br>\t\t$tmpHorsesQi = $horsesQi; &#47;&#47; 把当前未出战的马保存下来<br>\t\t$tmpQiResult = $qiResult;<br>\t\tforeach ($tmpHorses as $horseKey=&gt;$horseOne) {<br>\t\t\tforeach ($tmpHorsesQi as $horseQiKey=&gt;$horseQiOne) {<br>\t\t\t\t$horses = $tmpHorses; &#47;&#47; 每次循环前都初始化当前层马<br>\t\t\t\t$result = $tmpResult;<br>\t\t\t\t$result[] = $horseOne;&#47;&#47; 当前马加入到出战马数组<br>\t\t\t\tunset($horses[$horseKey]);&#47;&#47; 当前马从没出战的数组中删除<br>\t\t\t\t$horsesQi = $tmpHorsesQi; &#47;&#47; 每次循环前都初始化当前层马<br>\t\t\t\t$qiResult = $tmpQiResult;<br>\t\t\t\t$qiResult[] = $horseQiOne;&#47;&#47; 当前马加入到出战马数组<br>\t\t\t\tunset($horsesQi[$horseQiKey]);&#47;&#47; 当前马从没出战的数组中删除<br>\t\t\t\tpermutate($horses,$horsesQi,$result,$qiResult); &#47;&#47; 细分问题<br>\t\t\t}<br>\t\t}<br>\t}<br>}<br>function compare($result,$qiResult) {<br>\t$winNum = 0;<br>\t$size = count($result);<br>\t&#47;&#47;echo $size.&quot;&lt;br&gt;&quot;;<br>\tfor ($i=0;$i&lt;$size;$i++) {<br>\t\tif ($result[$i][&#39;speed&#39;] &gt;  $qiResult[$i][&#39;speed&#39;]) { &#47;&#47; 赢<br>\t\t\techo &quot;田忌{$result[$i][&#39;name&#39;]}马速度为{$result[$i][&#39;speed&#39;]}对战齐王{$qiResult[$i][&#39;name&#39;]}马速度为{$qiResult[$i][&#39;speed&#39;]}结果为：赢&lt;br&gt;&quot;;<br>\t\t\t$winNum++;<br>\t\t} else {<br>\t\t\techo &quot;田忌{$result[$i][&#39;name&#39;]}马速度为{$result[$i][&#39;speed&#39;]}对战齐王{$qiResult[$i][&#39;name&#39;]}马速度为{$qiResult[$i][&#39;speed&#39;]}结果为：输&lt;br&gt;&quot;;<br>\t\t}<br>\t}<br>\tif ($winNum &gt; $size &#47; 2) { &#47;&#47; 总结果为赢<br>\t\techo &quot;田忌对战齐王{$size}场总结果为:赢&lt;br&gt;&quot;;<br>\t} else {<br>\t\techo &quot;田忌对战齐王{$size}场总结果为:输&lt;br&gt;&quot;;<br>\t}<br>}<br>$horsesTian = [[&#39;name&#39;=&gt;&#39;t1&#39;,&#39;speed&#39;=&gt;1],[&#39;name&#39;=&gt;&#39;t2&#39;,&#39;speed&#39;=&gt;2],[&#39;name&#39;=&gt;&#39;t3&#39;,&#39;speed&#39;=&gt;3]];<br>$horsesQi = [[&#39;name&#39;=&gt;&#39;q1&#39;,&#39;speed&#39;=&gt;1.5],[&#39;name&#39;=&gt;&#39;q2&#39;,&#39;speed&#39;=&gt;2.5],[&#39;name&#39;=&gt;&#39;q3&#39;,&#39;speed&#39;=&gt;3.5]];<br><br>permutate($horsesTian,$horsesQi,$result,$qiResult);<br>","like_count":0},{"had_liked":false,"id":187446,"user_name":"喻茂","can_delete":false,"product_type":"c1","uid":1318661,"ip_address":"","ucode":"C8BD8086A17365","user_header":"https://static001.geekbang.org/account/avatar/00/14/1f/05/8a06692e.jpg","comment_is_top":false,"comment_ctime":1584110934,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1584110934","product_id":100021201,"comment_content":"php示例<br>&lt;?php<br>&#47;**   <br> * @Description:  使用函数的递归（嵌套）调用，找出所有可能的马匹出战顺序  <br> * @param horses-目前田忌还剩多少马没有出战，result-保存当前已经出战的马匹及顺序  <br> * @return void   <br> *&#47;<br>function permutate($horses,&amp;$result) {<br>\tglobal $horsesQi;<br>\tif (count($horses) == 0) { &#47;&#47; 所有马都已经出战计算结果<br>\t\t&#47;&#47;print_R($result);<br>\t\tcompare($result,$horsesQi);<br>\t\techo &quot;&lt;br&gt;----------------------------------------&lt;br&gt;&quot;;<br>\t\treturn;<br>\t} else {<br>\t\t$tmpHorses = $horses; &#47;&#47; 把当前未出战的马保存下来<br>\t\t$tmpResult = $result;<br>\t\tforeach ($tmpHorses as $horseKey=&gt;$horseOne) {<br>\t\t\t$horses = $tmpHorses; &#47;&#47; 每次循环前都初始化当前层马<br>\t\t\t$result = $tmpResult;<br>\t\t\t$result[] = $horseOne;&#47;&#47; 当前马加入到出战马数组<br>\t\t\tunset($horses[$horseKey]);&#47;&#47; 当前马从没出战的数组中删除<br>\t\t\tpermutate($horses,$result); &#47;&#47; 细分问题<br>\t\t}<br>\t}<br>}<br>function compare($result,$horsesQi) {<br>\t$winNum = 0;<br>\t$size = count($result);<br>\tfor ($i=0;$i&lt;$size;$i++) {<br>\t\tif ($result[$i][&#39;speed&#39;] &gt;  $horsesQi[$i][&#39;speed&#39;]) { &#47;&#47; 赢<br>\t\t\techo &quot;田忌{$result[$i][&#39;name&#39;]}马速度为{$result[$i][&#39;speed&#39;]}对战齐王{$horsesQi[$i][&#39;name&#39;]}马速度为{$horsesQi[$i][&#39;speed&#39;]}结果为：赢&lt;br&gt;&quot;;<br>\t\t\t$winNum++;<br>\t\t} else {<br>\t\t\techo &quot;田忌{$result[$i][&#39;name&#39;]}马速度为{$result[$i][&#39;speed&#39;]}对战齐王{$horsesQi[$i][&#39;name&#39;]}马速度为{$horsesQi[$i][&#39;speed&#39;]}结果为：输&lt;br&gt;&quot;;<br>\t\t}<br>\t}<br>\tif ($winNum &gt; count($result) &#47; 2) { &#47;&#47; 总结果为赢<br>\t\techo &quot;田忌对战齐王{$size}场总结果为:赢&lt;br&gt;&quot;;<br>\t} else {<br>\t\techo &quot;田忌对战齐王{$size}场总结果为:输&lt;br&gt;&quot;;<br>\t}<br>}<br>$horsesTian = [[&#39;name&#39;=&gt;&#39;t1&#39;,&#39;speed&#39;=&gt;1],[&#39;name&#39;=&gt;&#39;t2&#39;,&#39;speed&#39;=&gt;2],[&#39;name&#39;=&gt;&#39;t3&#39;,&#39;speed&#39;=&gt;3]];<br>$horsesQi = [[&#39;name&#39;=&gt;&#39;q1&#39;,&#39;speed&#39;=&gt;1.5],[&#39;name&#39;=&gt;&#39;q2&#39;,&#39;speed&#39;=&gt;2.5],[&#39;name&#39;=&gt;&#39;q3&#39;,&#39;speed&#39;=&gt;3.5]];<br><br>permutate($horsesTian,$result);","like_count":0},{"had_liked":false,"id":184175,"user_name":"Andy","can_delete":false,"product_type":"c1","uid":1237557,"ip_address":"","ucode":"72EB0F3E195269","user_header":"https://static001.geekbang.org/account/avatar/00/12/e2/35/5d015881.jpg","comment_is_top":false,"comment_ctime":1583243302,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1583243302","product_id":100021201,"comment_content":"def permutation():<br>    chars = [&#39;a&#39;,&#39;b&#39;,&#39;c&#39;,&#39;d&#39;,&#39;e&#39;]<br>    all_p = []<br>    def helper(ret, nums):<br>        if len(ret) == 5:<br>            all_p.append(ret)<br>            return<br>        for c in nums:<br>            new_nums = nums.copy()<br>            new_nums.remove(c)<br>            helper(ret+[c],new_nums)<br>    helper([],chars)<br>    print(f&#39;number of permutations are {len(all_p)}&#39;)<br>    print(all_p)<br><br>permutation()","like_count":0},{"had_liked":false,"id":178594,"user_name":"Geek_e2b99d","can_delete":false,"product_type":"c1","uid":1824010,"ip_address":"","ucode":"CE3A039A83B410","user_header":"","comment_is_top":false,"comment_ctime":1581754491,"is_pvip":false,"replies":[{"id":"69599","content":"是的","user_name":"作者回复","user_name_real":"黄申","uid":"1275061","ctime":1581965234,"ip_address":"","comment_id":178594,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1581754491","product_id":100021201,"comment_content":"排列和组合在代码上的细微差别，排列中的每一次递归只会剔除当前值，而组合中的递归是放弃先前使用过的数据。","like_count":0,"discussions":[{"author":{"id":1275061,"avatar":"https://static001.geekbang.org/account/avatar/00/13/74/b5/b68e3740.jpg","nickname":"黄申","note":"","ucode":"EE9AC074A322FF","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":483890,"discussion_content":"是的","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1581965234,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":177874,"user_name":"JustDoDT","can_delete":false,"product_type":"c1","uid":1127175,"ip_address":"","ucode":"6AF0B80F00EAEF","user_header":"https://static001.geekbang.org/account/avatar/00/11/33/07/8f351609.jpg","comment_is_top":false,"comment_ctime":1581519241,"is_pvip":false,"replies":[{"id":"69119","content":"如果位数不多，确实可以使用多层循环。更好的方式是采用类似递归的实现方式","user_name":"作者回复","user_name_real":"黄申","uid":"1275061","ctime":1581617965,"ip_address":"","comment_id":177874,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1581519241","product_id":100021201,"comment_content":"四层循环","like_count":0,"discussions":[{"author":{"id":1275061,"avatar":"https://static001.geekbang.org/account/avatar/00/13/74/b5/b68e3740.jpg","nickname":"黄申","note":"","ucode":"EE9AC074A322FF","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":483578,"discussion_content":"如果位数不多，确实可以使用多层循环。更好的方式是采用类似递归的实现方式","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1581617965,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":174805,"user_name":"Nikola","can_delete":false,"product_type":"c1","uid":1337553,"ip_address":"","ucode":"5E3AA9B8A45924","user_header":"https://static001.geekbang.org/account/avatar/00/14/68/d1/9550690a.jpg","comment_is_top":false,"comment_ctime":1580393502,"is_pvip":false,"replies":[{"id":"68014","content":"确实标注的ASCII只有128个，加上扩展的才256个，而且很多还无法输出。","user_name":"作者回复","user_name_real":"黄申","uid":"1275061","ctime":1580593783,"ip_address":"","comment_id":174805,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1580393502","product_id":100021201,"comment_content":"再说一遍ASCII字符一共有多少？256？这基础漏洞有点大了吧？更别提去掉32个不可输出字符，只有96个可输出字符。","like_count":0,"discussions":[{"author":{"id":1275061,"avatar":"https://static001.geekbang.org/account/avatar/00/13/74/b5/b68e3740.jpg","nickname":"黄申","note":"","ucode":"EE9AC074A322FF","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":482526,"discussion_content":"确实标注的ASCII只有128个，加上扩展的才256个，而且很多还无法输出。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1580593783,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":174134,"user_name":"Me.Gao","can_delete":false,"product_type":"c1","uid":1815189,"ip_address":"","ucode":"CA7696DAB95212","user_header":"https://static001.geekbang.org/account/avatar/00/1b/b2/95/349aef32.jpg","comment_is_top":false,"comment_ctime":1580019771,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1580019771","product_id":100021201,"comment_content":"#python version<br>import copy<br><br>passPool = [&#39;a&#39;, &#39;b&#39;, &#39;c&#39;, &#39;d&#39;, &#39;e&#39;]<br>password = &#39;beca&#39;<br><br>def passFinder(paWord):<br>    if len(paWord) &gt; 4:<br>        return<br>    if len(paWord) == 4:<br>        if  paWord == password:<br>            print(&#39;Password found, which is&#39;, paWord)<br>            return<br>    for i in passPool:<br>        new_paWord = copy.deepcopy(paWord)<br>        new_paWord += i<br>        passFinder(new_paWord)<br><br>if __name__ == &#39;__main__&#39;:<br>    passFinder(&#39;&#39;)<br>","like_count":0},{"had_liked":false,"id":174129,"user_name":"Me.Gao","can_delete":false,"product_type":"c1","uid":1815189,"ip_address":"","ucode":"CA7696DAB95212","user_header":"https://static001.geekbang.org/account/avatar/00/1b/b2/95/349aef32.jpg","comment_is_top":false,"comment_ctime":1580015651,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1580015651","product_id":100021201,"comment_content":"import copy<br>   <br>t_horse_time = dict([(&#39;t1&#39;, 1.5), (&#39;t2&#39;, 2.5), (&#39;t3&#39;, 3.5)])<br>q_horse_time = dict([(&#39;q1&#39;, 1), (&#39;q2&#39;, 2), (&#39;q3&#39;, 3)])<br>q_horse = [&#39;q1&#39;, &#39;q2&#39;, &#39;q3&#39;]<br><br>def compare(t, q):<br>    &quot;&quot;&quot;To Compare which one wins the horse race<br>        <br>    t, q: the horse sequence list<br>    &quot;&quot;&quot;<br>    t_won_cnt = 0<br>    for i in range(len(t)):<br>        print(t_horse_time[t[i]], q_horse_time[q[i]])<br>        if t_horse_time[t[i]] &lt; q_horse_time[q[i]]:<br>            t_won_cnt += 1<br>    if (t_won_cnt &gt; (len(t) &#47; 2)):<br>        print(&#39;田忌获胜！&#39;)<br>    else:<br>        print(&#39;齐王获胜！&#39;)<br>        <br>def permulation(horses, result):<br>    &quot;&quot;&quot;列出所有可能的比赛方式<br>    <br>    horses: 目前还有多少马没有出战, result: 保存当前已经出战的马匹顺序<br>    &quot;&quot;&quot;<br>    # 所有马匹都已经出战，判断哪方获胜，输出结果<br>    if (len(horses) == 0):<br>        print(result)<br>        compare(result, q_horse)<br>        return<br>    for cnt in range(len(horses)):<br>        #从剩下的未出战马匹中，选择一匹，加入结果<br>        new_result = copy.deepcopy(result)<br>        new_result += [horses[cnt]]<br>        #将已选择的马匹从未出战的列表中移出<br>        new_horses = copy.deepcopy(horses)<br>        del new_horses[cnt]<br>        #递归调用，对于剩余的马匹继续生成排列<br>        permulation(new_horses, new_result)<br><br>if __name__ == &#39;__main__&#39;:<br>    horses = [&#39;t1&#39;, &#39;t2&#39;, &#39;t3&#39;]<br>    permulation(horses, [])","like_count":0},{"had_liked":false,"id":172275,"user_name":"王宇","can_delete":false,"product_type":"c1","uid":1564353,"ip_address":"","ucode":"4A1B315A46A6B3","user_header":"https://static001.geekbang.org/account/avatar/00/17/de/c1/28079fef.jpg","comment_is_top":false,"comment_ctime":1579143807,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1579143807","product_id":100021201,"comment_content":"void permutationRecursive(QStringList restData, QStringList resultData){<br>    if(restData.isEmpty())<br>    {<br>        qDebug()&lt;&lt;resultData;<br>        return;<br>    }<br><br>    for(int i=0; i&lt;restData.length(); i++){<br>        QStringList newResultData = resultData;<br>        newResultData.append(restData[i]);<br><br>        QStringList newRestData = restData;<br>        newRestData.removeAt(i);<br><br>        permutationRecursive(newRestData, newResultData);<br>    }<br>}<br><br>void permutationIteration(QStringList list){<br>    QList&lt;QStringList&gt; result, tmp;<br><br>    result&lt;&lt;QStringList(list[0]);<br>    for(int j=1; j&lt;list.count(); j++){<br>        for(int k=0; k&lt;result.count(); k++){<br>            for(int m=0; m&lt;result[k].count()+1; m++){<br>                QStringList aa = result[k];<br>                aa.insert(m, list[j]);<br>                tmp&lt;&lt;aa;<br>            }<br>        }<br>        result = tmp;<br>        tmp.clear();<br>    }<br>    for(int i= 0; i &lt; result.count(); i++){<br>        qDebug()&lt;&lt;result[i];<br>    }<br>}<br><br>void repeatPermutationRecursive(QStringList list, QStringList result){<br>    if(list.count() == result.count()){<br>        qDebug()&lt;&lt;result;<br>        return;<br>    }<br>    for(int i=0; i&lt;list.count(); i++){<br>        QStringList resultCopy = result;<br>        resultCopy&lt;&lt;list[i];<br>        repeatPermutationRecursive(list, resultCopy);<br>    }<br>}<br><br>void repeatPermutationIteration(QStringList list){<br>    QList&lt;QStringList&gt; result, resultTmp;<br><br>    if(list.count() == 0)<br>        return;<br><br>    for(int i=0; i&lt;list.count(); i++){<br>        result&lt;&lt;QStringList(list[i]);<br>    }<br>    for(int i=1; i&lt;list.count(); i++){<br>        for(int j=0; j&lt;list.count(); j++){<br>            for(int k = 0; k&lt;result.count(); k++){<br>                QStringList tmp = result[k];<br>                tmp.append(list[j]);<br>                resultTmp.append(tmp);<br>            }<br>        }<br>        result = resultTmp;<br>        resultTmp.clear();<br>    }<br>    for(int i= 0; i &lt; result.count(); i++){<br>        qDebug()&lt;&lt;result[i];<br>    }<br>}<br>","like_count":0},{"had_liked":false,"id":171939,"user_name":"江河顺水","can_delete":false,"product_type":"c1","uid":1240807,"ip_address":"","ucode":"8FE80FB71DD63E","user_header":"https://static001.geekbang.org/account/avatar/00/12/ee/e7/450fe9eb.jpg","comment_is_top":false,"comment_ctime":1579055699,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1579055699","product_id":100021201,"comment_content":"排列是从n个元素的集合中选择m个元素，按照一定的顺序排列，这个过程叫做排序。选择的顺序列可有有重复的元素叫做重复排列。全部元素的排列是全排列。编码思路是通过递归，穷举不同的情况。","like_count":0},{"had_liked":false,"id":169582,"user_name":"Joker","can_delete":false,"product_type":"c1","uid":1156592,"ip_address":"","ucode":"126AF848001A1E","user_header":"https://static001.geekbang.org/account/avatar/00/11/a5/f0/8648c464.jpg","comment_is_top":false,"comment_ctime":1578382748,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1578382748","product_id":100021201,"comment_content":"```\rjava<br>public class Lesson7_02 {<br>    private static ArrayList&lt;ArrayList&lt;String&gt;&gt; ans = new ArrayList&lt;&gt;();<br>    private static String[] chars = {&quot;a&quot;, &quot;b&quot;, &quot;c&quot;, &quot;d&quot;, &quot;e&quot;};<br>    private static void permutate_1(ArrayList&lt;String&gt; tempList, int len, int charsLen) {<br>        if (tempList.size() == len) {<br>            ans.add(tempList);<br>            return;<br>        }<br>        for (int i = 0; i &lt; charsLen; i++) {<br>            ArrayList&lt;String&gt; newList = (ArrayList&lt;String&gt;) tempList.clone();<br>            newList.add(chars[i]);<br>            permutate_1(newList, len, charsLen);<br>        }<br>    }<br>    public static void main(String[] args) {<br>        permutate_1(new ArrayList&lt;&gt;(), 4, chars.length);<br>        for (ArrayList&lt;String&gt; item : ans) {<br>            System.out.println(item);<br>        }<br>    }<br>}<br>```\r","like_count":0},{"had_liked":false,"id":165656,"user_name":"cwtxz","can_delete":false,"product_type":"c1","uid":1778151,"ip_address":"","ucode":"4F35AEDB8F5D5D","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/BAuQlia9Dc07m3icOkibIqu2lhbnLD6cjgCNE8FSzG5Aj4cd26eRgspicTsWvA7WK1ftlQBD34PYRucZRXML5FA27A/132","comment_is_top":false,"comment_ctime":1577279505,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1577279505","product_id":100021201,"comment_content":"我个人也有了几年的编程经历，不说对编程这门手艺多么精通，但至少略有感悟。不说把算法和数据结构研究得多么深入，但至少，对一些常见的数据结构和常用的算法还是比较了解。学习算法和数据结构到一定程度的时候，我就明白了，算法对于优化程序很重要，良好的数据结构和算法设计会让程序变得更为健壮和优雅。只要你是程序员，那一定离不开算法和数据结构，这是编程的基石。然而高效优雅的算法设计又离不开数学思维的主导，所以，数学，才是一切的源头，是工具，是方法，是理解算法本质的东西。任何有志问鼎更高层次的程序员，都应该下足功夫去研究数学，只有这样才能对计算机世界有本质的理解。加油！！！","like_count":0},{"had_liked":false,"id":161789,"user_name":"西北偏北","can_delete":false,"product_type":"c1","uid":1779224,"ip_address":"","ucode":"EC8E2F218A15C6","user_header":"https://static001.geekbang.org/account/avatar/00/1b/26/18/2fae0d40.jpg","comment_is_top":false,"comment_ctime":1576327974,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1576327974","product_id":100021201,"comment_content":"产生全排列的过程也很适合用递归来实现，我来贴一个C#版的：<br>        public static List&lt;List&lt;string&gt;&gt; GenAllPermutations(List&lt;string&gt; members)<br>        {<br>            var allPerms = new List&lt;List&lt;string&gt;&gt;();<br>            if (members.Count &lt;= 1)<br>            {<br>                allPerms.Add(new List&lt;string&gt;(members));<br>                return allPerms;<br>            }<br><br>            for (int i = 0; i &lt; members.Count; i++)<br>            {<br>                var members2 = new List&lt;string&gt;(members);<br>                string first = members2[i];<br>                members2.RemoveAt(i);<br><br>                var allPerms2 = GenAllPermutations(members2);<br>                foreach (var perm2 in allPerms2)<br>                {<br>                    var perm = new List&lt;string&gt; {first};<br>                    perm.AddRange(perm2);<br>                    allPerms.Add(perm);<br>                }<br>            }<br><br>            return allPerms;<br>        }","like_count":0},{"had_liked":false,"id":160477,"user_name":"半湖思絮","can_delete":false,"product_type":"c1","uid":1236746,"ip_address":"","ucode":"ECE58303541E59","user_header":"https://static001.geekbang.org/account/avatar/00/12/df/0a/4084d5fa.jpg","comment_is_top":false,"comment_ctime":1575958880,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1575958880","product_id":100021201,"comment_content":"```<br>public class Lesson7_3 {<br><br>    private static final String[] charArr = {&quot;a&quot;, &quot;b&quot;, &quot;c&quot;, &quot;d&quot;, &quot;e&quot;};<br><br>    public static void permutate(int bit, String[] charArr, List&lt;String&gt; hasList) {<br>        if (bit == 0) {<br>            System.out.println(hasList);<br>        } else {<br>            int size = charArr.length;<br>            for (int i = 0; i &lt; size; i++) {<br>                List&lt;String&gt; tmpHas = new ArrayList&lt;&gt;(hasList);<br>                tmpHas.add(charArr[i]);<br>                permutate(bit - 1, charArr, tmpHas);<br>            }<br>        }<br>    }<br><br>    public static void main(String[] args) {<br>        permutate(4, charArr, new ArrayList&lt;&gt;());<br>    }<br>}<br>```","like_count":0},{"had_liked":false,"id":159032,"user_name":"teddytyy","can_delete":false,"product_type":"c1","uid":1268738,"ip_address":"","ucode":"E1569D81A4154E","user_header":"https://static001.geekbang.org/account/avatar/00/13/5c/02/e7af1750.jpg","comment_is_top":false,"comment_ctime":1575517838,"is_pvip":false,"replies":[{"id":"60884","content":"对，取决于密码的每一位是否可以重用","user_name":"作者回复","user_name_real":"黄申","uid":"1275061","ctime":1575573513,"ip_address":"","comment_id":159032,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1575517838","product_id":100021201,"comment_content":"破解密码的排列应该是可重复的，最终排列数是n^m，而非n！","like_count":0,"discussions":[{"author":{"id":1275061,"avatar":"https://static001.geekbang.org/account/avatar/00/13/74/b5/b68e3740.jpg","nickname":"黄申","note":"","ucode":"EE9AC074A322FF","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":476922,"discussion_content":"对，取决于密码的每一位是否可以重用","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1575573513,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":159028,"user_name":"teddytyy","can_delete":false,"product_type":"c1","uid":1268738,"ip_address":"","ucode":"E1569D81A4154E","user_header":"https://static001.geekbang.org/account/avatar/00/13/5c/02/e7af1750.jpg","comment_is_top":false,"comment_ctime":1575517522,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1575517522","product_id":100021201,"comment_content":"void brutalSolve(vector&lt;char&gt; factor, int num, vector&lt;char&gt; result, vector&lt;char&gt; passwd){<br>    if (num==0) {<br>        for(int i = 0; i &lt; result.size(); i++) {<br>            if(result[i] != passwd[i]) return;<br>            cout&lt;&lt;result;<br>        }<br>    }<br>    num--;<br>    for (int i=0; i&lt;factor.size(); i++) {<br>        result.pushback(factor[i]);<br>        brutalSolve(factor, num, result, passwd);<br>    }<br>}","like_count":0},{"had_liked":false,"id":155112,"user_name":"Geek_89b79a","can_delete":false,"product_type":"c1","uid":1525247,"ip_address":"","ucode":"29434C67A8A80F","user_header":"","comment_is_top":false,"comment_ctime":1574647307,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1574647307","product_id":100021201,"comment_content":"from copy import copy<br>password = &#39;dftegaukfhsjndfgaweyjukfhcjnarieukvfyreaufyyhweaicuaru&#39;<br>a = [chr(97+i) for i in range(26)]<br>def crack(length, result=&quot;&quot;):<br>    if result != password[0:len(result)]:<br>        return<br>    if length == 0:<br>        if result == password:<br>            print(result)<br>            return<br>    else:<br>        for i in a:<br>            new_result = copy(result)<br>            new_result = new_result + i<br>            crack(length - 1, new_result)<br><br>crack(len(password))","like_count":0},{"had_liked":false,"id":151607,"user_name":"Vincent🌫","can_delete":false,"product_type":"c1","uid":1150764,"ip_address":"","ucode":"F7DAF7942417A7","user_header":"https://static001.geekbang.org/account/avatar/00/11/8f/2c/5c267d3e.jpg","comment_is_top":false,"comment_ctime":1573749013,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1573749013","product_id":100021201,"comment_content":"205 次<br>package cn.algorithm;<br><br>import java.util.ArrayList;<br>import java.util.Arrays;<br>import java.util.HashMap;<br><br>public class Sort02 {<br><br>    static int ttt=0;<br><br>    public static void generatePassword(ArrayList&lt;String&gt; source,ArrayList&lt;String&gt; result,int count){<br><br>        if(result != null &amp;&amp; result.size() == 4){<br>            System.out.println(result);<br>            return;<br>        }<br><br>        for(int i = 0 ; i &lt; source.size() ; i++){<br>            ArrayList&lt;String&gt; new_result =  (ArrayList&lt;String&gt;)  result.clone();<br>            new_result.add(source.get(i));<br>            ArrayList&lt;String&gt; rest_source = (ArrayList&lt;String&gt;)  source.clone();<br>            rest_source.remove(i);<br>            ttt++;<br>            generatePassword(rest_source,new_result,count);<br>        }<br>    }<br><br>    public static void main(String[] args) {<br>        int count = 4;<br>        ArrayList&lt;String&gt; source = new ArrayList&lt;String&gt;();<br>        source.add(&quot;a&quot;);<br>        source.add(&quot;b&quot;);<br>        source.add(&quot;c&quot;);<br>        source.add(&quot;d&quot;);<br>        source.add(&quot;e&quot;);<br>        ArrayList&lt;String&gt; result = new ArrayList&lt;String&gt;();<br>        generatePassword(source,result,count);<br>        System.out.println(ttt);<br>    }<br><br>}<br>","like_count":0},{"had_liked":false,"id":150380,"user_name":"顾骨","can_delete":false,"product_type":"c1","uid":1131165,"ip_address":"","ucode":"3F6BA592AB7723","user_header":"https://static001.geekbang.org/account/avatar/00/11/42/9d/c36b7ef7.jpg","comment_is_top":false,"comment_ctime":1573524853,"is_pvip":true,"discussion_count":0,"race_medal":0,"score":"1573524853","product_id":100021201,"comment_content":"go 版本<br>--------------------------------------------------------<br><br>var letters = &quot;abcdefghijklmnopqrstuvwxyz&quot;<br><br>func breakPassword(password, result string) bool {<br>\tif len(password) == len(result) {<br>\t\tif password == result {<br>\t\t\tfmt.Println(result)<br>\t\t\treturn true<br>\t\t}<br>\t\treturn false<br>\t}<br><br>\tfor _, letter := range letters {<br>\t\tnetResult := result<br>\t\tnetResult += string(letter)<br>\t\tif found := breakPassword(password, netResult); found {<br>\t\t\treturn true<br>\t\t}<br>\t}<br>\treturn false<br>}<br><br>func main(){<br>    out := breakPassword(&quot;jgfdgh&quot;, &quot;&quot;) &#47;&#47; output: true<br>    out = breakPassword(&quot;zzzz&quot;, &quot;&quot;)&#47;&#47; output: true<br>    out = breakPassword(&quot;1zzz&quot;, &quot;&quot;) &#47;&#47; output: false<br>}<br><br>","like_count":0},{"had_liked":false,"id":140413,"user_name":"建强","can_delete":false,"product_type":"c1","uid":1397126,"ip_address":"","ucode":"62B03D0E0C64EC","user_header":"https://static001.geekbang.org/account/avatar/00/15/51/86/b5fd8dd8.jpg","comment_is_top":false,"comment_ctime":1570933994,"is_pvip":false,"replies":[{"id":"54508","content":"可以的👍 ","user_name":"作者回复","user_name_real":"黄申","uid":"1275061","ctime":1571073682,"ip_address":"","comment_id":140413,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1570933994","product_id":100021201,"comment_content":"用Python简单写了一段代码，请老师指正：<br><br>def makePassword(result, n):<br>#BEGIN<br>    global seqno<br>    for code in [&#39;a&#39;,&#39;b&#39;,&#39;c&#39;,&#39;d&#39;,&#39;e&#39;]:<br>        new_result = result.copy()<br>        new_result.append(code)<br>        if n &gt; 1:<br>            makePassword(new_result, n-1)<br>        else:<br>            seqno += 1<br>            print(&#39;password{}: {}&#39;.format(seqno, &#39;&#39;.join(new_result)))<br>#END<br><br>seqno = 0<br>makePassword([],4)","like_count":0,"discussions":[{"author":{"id":1275061,"avatar":"https://static001.geekbang.org/account/avatar/00/13/74/b5/b68e3740.jpg","nickname":"黄申","note":"","ucode":"EE9AC074A322FF","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":470380,"discussion_content":"可以的👍 ","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1571073682,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":130904,"user_name":"j 布衣羊","can_delete":false,"product_type":"c1","uid":1181641,"ip_address":"","ucode":"49277792FA29EE","user_header":"https://static001.geekbang.org/account/avatar/00/12/07/c9/e4cf0aac.jpg","comment_is_top":false,"comment_ctime":1567569791,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1567569791","product_id":100021201,"comment_content":"let count = 0;<br>let findFlag = false;<br>let maxPwdLength = 4;<br><br>let getLetter = () =&gt; {<br><br>    let tempLetter = [];<br>    for (let i = 0; i &lt; 26; i++) {<br><br>        tempLetter.push(String.fromCharCode(0x60 + i + 1));<br>    }<br>    return tempLetter;<br>};<br><br>let getRandPwd = () =&gt; {<br><br>    let pwd = &quot;&quot;;<br>    for (let j = 0; j &lt; maxPwdLength; j++) {<br><br>        let index = Math.floor(Math.random() * letter.length);<br>        pwd += letter[index];<br>    }<br>    return pwd;<br>};<br><br>let letter = getLetter();<br>let temPwd = getRandPwd();<br>let getCrackPwd = (pwd) =&gt; {<br><br>    count++;<br><br>    if (temPwd === pwd) {<br>        findFlag = true;<br>        console.log(&quot;破解密码&quot;, pwd);<br>    }<br><br>    if (findFlag) {<br>        return;<br>    }<br><br>    if (pwd.length &lt; maxPwdLength) {<br><br>        for (let m = 0; m &lt; letter.length; m++) {<br><br>            getCrackPwd(pwd + letter[m]);<br>        }<br>    }<br>};<br><br>getCrackPwd(&quot;&quot;, maxPwdLength);<br>console.log(&quot;运算次数&quot;, count);","like_count":0},{"had_liked":false,"id":129055,"user_name":"mimiyk","can_delete":false,"product_type":"c1","uid":1066964,"ip_address":"","ucode":"A12FAA6C327E3F","user_header":"https://static001.geekbang.org/account/avatar/00/10/47/d4/e216d06e.jpg","comment_is_top":false,"comment_ctime":1567036975,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1567036975","product_id":100021201,"comment_content":"from typing import List<br><br><br>def guess_password(table, length) -&gt; List[str]:<br><br>    def permutate(ele):<br>        if len(ele) == length:<br>            yield ele<br>            return<br>        for c in table:<br>            yield from permutate(ele + c)<br><br>    yield from permutate(&#39;&#39;)<br><br><br>if __name__ == &quot;__main__&quot;:<br>    table = &#39;abcde&#39;<br>    length = 4<br>    assert len(list(guess_password(table, length))) == len(table) ** length<br>","like_count":0},{"had_liked":false,"id":127470,"user_name":"N0mansky","can_delete":false,"product_type":"c1","uid":1265940,"ip_address":"","ucode":"86DC16096C4F5F","user_header":"https://static001.geekbang.org/account/avatar/00/13/51/14/c800c859.jpg","comment_is_top":false,"comment_ctime":1566725587,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1566725587","product_id":100021201,"comment_content":"package basic<br><br>import &quot;fmt&quot;<br><br>var Lower = lowercase(&quot;e&quot;)<br><br>func lowercase(end string) []string {<br>\trst := []string{}<br>\tstop := int([]rune(end)[0])<br>\tfor i := 97; i &lt;= stop; i++ {<br>\t\trst = append(rst, string(i))<br>\t}<br>\treturn rst<br>}<br>func brute(bit int, rst []string) {<br>\tif bit == 0 {<br>\t\tfmt.Println(rst)<br>\t\treturn<br>\t} else {<br>\t\tfor _, v := range Lower {<br>\t\t\tnewRst := make([]string, len(rst))<br>\t\t\tcopy(newRst, rst)<br>\t\t\tnewRst = append(newRst, v)<br>\t\t\tbrute(bit-1, newRst)<br>\t\t}<br><br>\t}<br><br>}","like_count":0},{"had_liked":false,"id":125736,"user_name":"Paul Shan","can_delete":false,"product_type":"c1","uid":1593140,"ip_address":"","ucode":"32D99989028284","user_header":"","comment_is_top":false,"comment_ctime":1566253279,"is_pvip":false,"replies":[{"id":"46784","content":"是的","user_name":"作者回复","user_name_real":"黄申","uid":"1275061","ctime":1566411191,"ip_address":"","comment_id":125736,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1566253279","product_id":100021201,"comment_content":"排列是穷举所有可能的一种方法，分为可重复排列和不可重复排列，两种计算都可以采用递归的方法处理，区别在于刚处理过的元素是否需要从候选集合中删除。","like_count":0,"discussions":[{"author":{"id":1275061,"avatar":"https://static001.geekbang.org/account/avatar/00/13/74/b5/b68e3740.jpg","nickname":"黄申","note":"","ucode":"EE9AC074A322FF","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":463678,"discussion_content":"是的","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1566411191,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":117286,"user_name":"小海","can_delete":false,"product_type":"c1","uid":1359881,"ip_address":"","ucode":"22148B7E971ACB","user_header":"https://wx.qlogo.cn/mmopen/vi_32/DYAIOgq83eqqcz9HKr8r3kibiaxve9icIuz1qKv2PAhCr7tO6tjMVtsDa2VBIZZicfRxzXf1DDeEQTaM45JSLnGibdQ/132","comment_is_top":false,"comment_ctime":1564018797,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1564018797","product_id":100021201,"comment_content":"作业：<br>import java.util.ArrayList;<br>import java.util.Arrays;<br><br>&#47;**<br> * 排列作业:<br> *    假设有一个四位字母密码，每位密码是a~e之间的小写字母，你能够编写一段代码，来破解该密码？<br> *    （提示：根据可重复排列的规律，生成所有可能的密码）<br> * <br> * @author hjh<br> *&#47;<br>public class CrackPassword {<br><br>\t&#47;**<br>\t * 四位字母密码(a~e) <br>\t * <br>\t * @param password<br>\t *               user password<br>\t * @param lists<br>\t *        (a~e) password value range <br>\t * @param sb<br>\t *        current crack password<br>\t *&#47;<br>\tpublic static void crack(String password, ArrayList&lt;String&gt; lists, StringBuilder sb) {<br>\t\t<br>\t\tif (sb.length() == password.length()) {<br>\t\t\tif (sb.toString().equals(password)) {<br>\t\t\t\tSystem.out.println(String.format(&quot;original password： %s , crack password：%s , succeed！&quot;, password, sb.toString()));<br>\t\t\t\tSystem.exit(0);    &#47;&#47; succeed，force exit<br>\t\t\t}<br>\t\t\tSystem.out.println(String.format(&quot;password matching failed： %s&quot;, sb.toString()));<br>\t\t\treturn;    &#47;&#47; crack failed ,continue<br>\t\t}<br>\t\t<br>\t\tfor (int i = 0; i &lt; lists.size(); i++) {<br>\t\t\tStringBuilder sBuilder = new StringBuilder(sb.toString());   &#47;&#47; copy and keep old state<br>\t\t\tsBuilder.append(lists.get(i));<br>\t\t\tcrack(password, lists, sBuilder); <br>\t\t}<br>\t}<br>\t<br>\t&#47;**<br>\t * test<br>\t *&#47;<br>\tpublic static void main(String[] args) {<br>\t\tArrayList&lt;String&gt; lists = new ArrayList&lt;String&gt;(Arrays.asList(&quot;a&quot;,&quot;b&quot;,&quot;c&quot;,&quot;d&quot;,&quot;e&quot;));<br>\t\tStringBuilder sb = new StringBuilder();<br>\t\tString password = &quot;acee&quot;;<br>\t\tCrackPassword.crack(password, lists, sb);<br>\t}<br>}<br><br>","like_count":0},{"had_liked":false,"id":112608,"user_name":"李斌","can_delete":false,"product_type":"c1","uid":1007369,"ip_address":"","ucode":"73D1A97F746F69","user_header":"https://static001.geekbang.org/account/avatar/00/0f/5f/09/80484e2e.jpg","comment_is_top":false,"comment_ctime":1562770885,"is_pvip":false,"replies":[{"id":"40987","content":"确实是经典的回溯问题","user_name":"作者回复","user_name_real":"黄申","uid":"1275061","ctime":1562813048,"ip_address":"","comment_id":112608,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1562770885","product_id":100021201,"comment_content":"回溯算法就是实现排列，比如八皇后问题","like_count":0,"discussions":[{"author":{"id":1275061,"avatar":"https://static001.geekbang.org/account/avatar/00/13/74/b5/b68e3740.jpg","nickname":"黄申","note":"","ucode":"EE9AC074A322FF","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":457817,"discussion_content":"确实是经典的回溯问题","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1562813048,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":107402,"user_name":"恬毅","can_delete":false,"product_type":"c1","uid":1015240,"ip_address":"","ucode":"914ED16F3BE714","user_header":"https://static001.geekbang.org/account/avatar/00/0f/7d/c8/e4727683.jpg","comment_is_top":false,"comment_ctime":1561529608,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1561529608","product_id":100021201,"comment_content":"Java版交作业<br>public static void pailie(ArrayList&lt;String&gt; list, ArrayList&lt;String&gt; result, int size) {<br>\t\tif (result.size() == size) {<br>\t\t\tSystem.out.println(result.toString());<br>\t\t\treturn;<br>\t\t}<br>\t\tfor (int i = 0; i &lt; list.size(); i ++) {<br>\t\t\tArrayList&lt;String&gt; newResult = (ArrayList&lt;String&gt;) result.clone();<br>\t\t\tnewResult.add(list.get(i));<br>\t\t\tpailie(list, newResult, size);<br>\t\t}<br>\t}<br>\tpublic static void main(String[] args) {<br>\t\tArrayList&lt;String&gt; list = new ArrayList&lt;String&gt;(Arrays.asList(&quot;a&quot;,&quot;b&quot;,&quot;c&quot;,&quot;d&quot;, &quot;e&quot;));<br>\t\tpailie(list, new ArrayList&lt;String&gt;(), 4);<br>\t}","like_count":0},{"had_liked":false,"id":105472,"user_name":"钠镁铝硅磷😒","can_delete":false,"product_type":"c1","uid":1575196,"ip_address":"","ucode":"40B91112F1F969","user_header":"https://static001.geekbang.org/account/avatar/00/18/09/1c/40a47446.jpg","comment_is_top":false,"comment_ctime":1561010174,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1561010174","product_id":100021201,"comment_content":"其实赛马和八皇后问题的解法都是一样的，用到了回溯算法","like_count":0},{"had_liked":false,"id":105467,"user_name":"风","can_delete":false,"product_type":"c1","uid":1444483,"ip_address":"","ucode":"E1CE0825AAF805","user_header":"https://static001.geekbang.org/account/avatar/00/16/0a/83/f916f903.jpg","comment_is_top":false,"comment_ctime":1561008496,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1561008496","product_id":100021201,"comment_content":"C语言 求全排列：<br><br>#include &lt;stdio.h&gt;<br><br>&#47;&#47;记录项的定义<br>typedef struct record_type {<br>\tint data;<br>} RecordType;<br><br>#define MAX_NBR 100<br><br><br>static void visit(RecordType r[], int s[], int n)<br>{<br>\tint i;<br><br>\tfor (i = 0; i &lt; n - 1; i++)<br>\t\tprintf(&quot;%d, &quot;, r[s[i]].data);<br>\tprintf(&quot;%d\\n&quot;, r[s[i]].data);<br>}<br><br><br>&#47;&#47; s 和 rest 数组，存的是索引<br>void recursion(RecordType r[], int s[], int n, int rest[], int m)<br>{<br>\tif (m &gt; 0)<br>\t{<br>\t\tint i, j;<br>\t\tint rest2[MAX_NBR];<br><br>\t\tfor (i = 0; i &lt; m; i++)<br>\t\t{<br>\t\t\ts[n] = rest[i];<br>\t\t\tfor (j = 0; j &lt; i; j++)<br>\t\t\t\trest2[j] = rest[j];<br>\t\t\tfor (j = i; j &lt; m-1; j++)<br>\t\t\t\trest2[j] = rest[j+1];<br><br>\t\t\trecursion(r, s, n + 1, rest2, m - 1);<br>\t\t}<br>\t}<br>\telse<br>\t{<br>\t\tvisit(r, s, n);<br>\t}<br>}<br><br>void permutation(RecordType r[], int len)<br>{<br>\tint n, m;<br>\tint s[MAX_NBR], rest[MAX_NBR];<br><br>\tn = 0;<br>\tm = len;<br>\tfor (int i = 0; i &lt; len; i++)<br>\t\trest[i] = i;<br><br>\trecursion(r, s, n, rest, m);<br>}<br><br><br>int main(void)<br>{<br>\tint data[5] = { 1, 2, 3, 4, 5 };<br>\tRecordType r[5];<br><br>\tfor (int i = 0; i &lt; 5; i++)<br>\t\tr[i].data = data[i];<br><br>\tpermutation(r, 5);<br>}","like_count":0},{"had_liked":false,"id":103320,"user_name":"H-Csj","can_delete":false,"product_type":"c1","uid":1574541,"ip_address":"","ucode":"DE3107D3B9ABBC","user_header":"https://static001.geekbang.org/account/avatar/00/18/06/8d/8a092d89.jpg","comment_is_top":false,"comment_ctime":1560413843,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1560413843","product_id":100021201,"comment_content":"public class BreakTheCode {<br><br>  static String[] strings = new String[] {&quot;a&quot;, &quot;b&quot;, &quot;c&quot;, &quot;d&quot;, &quot;e&quot;,&quot;f&quot;,&quot;g&quot;,&quot;h&quot;,&quot;q&quot;};<br><br>  static String code = &quot;adeagqh&quot;;<br><br>  public static void get(ArrayList&lt;String&gt; arrs) {<br>    if (arrs.size() == 7) {<br>      StringBuffer sb = new StringBuffer();<br>      for(String s  : arrs){<br>        sb.append(s);<br>      }<br>      if(sb.toString().equals(code)){<br>        System.out.println(&quot;这个密码是&quot;+sb.toString());<br>      }<br>    } else {<br>      for (int i = 0; i &lt; strings.length; i++) {<br>        ArrayList&lt;String&gt; result = (ArrayList&lt;String&gt;) arrs.clone();<br>        result.add(strings[i]);<br>        get(result);<br>      }<br>    }<br>  }<br><br>  public static void main(String[] args) {<br>    long start = System.currentTimeMillis();<br>    System.out.println(start);<br>    get(new ArrayList&lt;&gt;());<br>    long end = System.currentTimeMillis();<br>    System.out.println(end);<br>    long l = end-start;<br>    System.out.println(l);<br>    System.out.println(&quot;alapsed time &quot;);<br><br>  }","like_count":0},{"had_liked":false,"id":79955,"user_name":"枫林火山","can_delete":false,"product_type":"c1","uid":1199855,"ip_address":"","ucode":"66099C9D1AD36C","user_header":"https://static001.geekbang.org/account/avatar/00/12/4e/ef/2ad3effd.jpg","comment_is_top":false,"comment_ctime":1553582386,"is_pvip":true,"replies":[{"id":"29215","content":"Go语言最近很火啊，让我先补习一下Go语言 😆","user_name":"作者回复","user_name_real":"黄申","uid":"1275061","ctime":1553616297,"ip_address":"","comment_id":79955,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1553582386","product_id":100021201,"comment_content":"Go语言作业<br>&#47;**<br>实现一个密码破解Demo,不用递归实现,实现最大长度的破解.<br>这里复习用到了位运算和进制的概念<br>*&#47;<br>package main<br><br>import (<br>\t&quot;flag&quot;<br>\t&quot;fmt&quot;<br>\t&quot;math&quot;<br>\t&quot;strconv&quot;<br>\t&quot;strings&quot;<br>)<br><br>var inputPw = flag.String(&quot;pw&quot;, &quot;a&quot;, &quot;待测试密码&quot;)<br><br>var pwSet = [5]string{&quot;a&quot;, &quot;b&quot;, &quot;c&quot;, &quot;d&quot;, &quot;e&quot;}<br><br>type compareFunc = func(src string) bool<br><br>func main() {<br>\tflag.Parse()<br>\tcompare := createCompare(*inputPw)<br>\tresult, _ := getPassword(compare, len(*inputPw))<br><br>\tfmt.Println(result)<br>}<br><br>func getPassword(compare compareFunc, maxLength int) (string, bool) {<br>\tfor length := 1; length &lt;= maxLength; length++ {<br>\t\tkindsFloat := math.Pow(float64(len(pwSet)), float64(length))<br>\t\tkinds := int(kindsFloat)<br>\t\tbase := len(pwSet)<br>\t\tfor kind := 0; kind &lt; kinds; kind++ {<br>\t\t\t&#47;&#47;10进制转为pwSet.length的进制<br>\t\t\tnumStr := strconv.FormatInt(int64(kind), base)<br>\t\t\tvar srcPw = &quot;&quot;<br>\t\t\tfor _, indexStr := range []byte(numStr) {<br>\t\t\t\tindex, ok := strconv.ParseInt(string(indexStr), base, 64)<br>\t\t\t\tif ok == nil {<br>\t\t\t\t\tsrcPw = pwSet[index] + srcPw<br>\t\t\t\t}<br>\t\t\t}<br>\t\t\tif compare(srcPw) == true {<br>\t\t\t\treturn srcPw, true<br>\t\t\t}<br>\t\t}<br>\t}<br><br>\treturn &quot;未找到正确密码&quot;, false<br>}<br><br>&#47;&#47;&#47;返回比较函数<br>func createCompare(target string) compareFunc {<br>\treturn func(src string) bool {<br>\t\treturn strings.Compare(target, src) == 0<br>\t}<br>}<br>","like_count":0,"discussions":[{"author":{"id":1275061,"avatar":"https://static001.geekbang.org/account/avatar/00/13/74/b5/b68e3740.jpg","nickname":"黄申","note":"","ucode":"EE9AC074A322FF","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":444701,"discussion_content":"Go语言最近很火啊，让我先补习一下Go语言 😆","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1553616297,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":79362,"user_name":"jt","can_delete":false,"product_type":"c1","uid":1470991,"ip_address":"","ucode":"A3E2CAE00CE10A","user_header":"https://static001.geekbang.org/account/avatar/00/16/72/0f/f05b06d0.jpg","comment_is_top":false,"comment_ctime":1553446792,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1553446792","product_id":100021201,"comment_content":"&#47;* jt [2019-03-25 周一] *&#47;<br>#include &lt;memory.h&gt;<br>#include &lt;stdio.h&gt;<br>#include &lt;math.h&gt;<br><br>#define PASSWD   &quot;eeee&quot;<br>#define PASSLEN  4<br><br>&#47;* return cnt(&gt;1) if cracked *&#47;<br>double crack(char *str, int len, char start, char end)<br>{<br>    int i = 0;<br>    double limit, cnt = 0;<br><br>    limit = pow(end - start + 1, len); &#47;* iter limit *&#47;<br>    while (cnt++ &lt;= limit) {<br>        if (!memcmp(str, PASSWD, len)) return cnt; &#47;* found! *&#47;<br><br>        str[0]++;              <br>        &#47;* 循环递加字母，超过范围则进位 *&#47;<br>        for (i = 0; i &lt; len; i++) {<br>            if (str[i] &lt;= end) {<br>                break;          &#47;* 无需继续进位 *&#47;<br>            }<br>            if  (i == (len - 1)) {<br>                return 0;       &#47;* 最高位进位，表明没找到 *&#47;<br>            }<br><br>            str[i] = start;    &#47;* 循环进位递加字母 *&#47;<br>            str[i+1]++;<br>        }<br>    }<br>    return 0;<br>}<br><br>int main(void)<br>{<br>    char buf[PASSLEN+1] = &quot;aaaa&quot;;<br>    double cnt;<br><br>    if ((cnt = crack(buf, PASSLEN, &#39;a&#39;, &#39;e&#39;)) &gt; 0) {<br>        printf(&quot;success! key is [%s], cnt=%.0f\\n&quot;, buf, cnt);<br>    } else {<br>        printf(&quot;fail..\\n&quot;);<br>    }<br><br>    return 1;<br>}","like_count":0},{"had_liked":false,"id":76946,"user_name":"梦倚栏杆","can_delete":false,"product_type":"c1","uid":1095857,"ip_address":"","ucode":"BDEB97F2822445","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/bvj76PmeUvW8kokyu91IZWuRATKmabibDWbzAj2TajeEic7WvKCJOLaOh6jibEmdQ36EO3sBUZ0HibAiapsrZo64U8w/132","comment_is_top":false,"comment_ctime":1552779436,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1552779436","product_id":100021201,"comment_content":"@Getter<br>@Setter<br>class Permutation {<br><br>    &#47;&#47; 排列词<br>    private List&lt;Character&gt; words;<br><br>    &#47;&#47; 长度<br>    private int length;<br><br>    public List&lt;ArrayList&lt;Character&gt;&gt; getRepeatedFullyPermutation() {<br>        List&lt;ArrayList&lt;Character&gt;&gt; result = words.stream().map(character -&gt; {<br>            ArrayList&lt;Character&gt; res = new ArrayList&lt;&gt;();<br>            res.add(character);<br>            return res;<br>        }).collect(Collectors.toList());<br><br>        for (int i = 1; i &lt; length; i++) {<br>            List&lt;ArrayList&lt;Character&gt;&gt; newResult = new ArrayList&lt;&gt;();<br>            result.forEach(j -&gt; words.forEach(<br>                    character -&gt; {<br>                        ArrayList&lt;Character&gt; res = (ArrayList&lt;Character&gt;) j.clone();<br>                        res.add(character);<br>                        newResult.add(res);<br>                    }<br>                    )<br>            );<br>            result = newResult;<br>        }<br><br>        return result;<br>    }<br>}","like_count":0},{"had_liked":false,"id":66461,"user_name":"大王叫我来巡山","can_delete":false,"product_type":"c1","uid":1099513,"ip_address":"","ucode":"1B8D0C701BC95E","user_header":"https://static001.geekbang.org/account/avatar/00/10/c6/f9/caf27bd3.jpg","comment_is_top":false,"comment_ctime":1549942127,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1549942127","product_id":100021201,"comment_content":"```go<br>package main<br><br>import &quot;fmt&quot;<br><br>var option = []string{&quot;a&quot;, &quot;b&quot;, &quot;c&quot;, &quot;d&quot;, &quot;e&quot;}<br><br>func main() {<br>\tvar password [4]string<br>\tpasswdGen(4, password)<br>}<br><br>&#47;&#47; 最简单的情形就是只有密码只有1位，通过控制密码的位数，降低问题的规模<br>func passwdGen(length int, password [4]string) {<br>\tif length == 0 {<br>\t\tfmt.Println(password)<br>\t\treturn<br>\t} else {<br>\t\tpassword := password<br>\t\tfor _, val := range option {<br>\t\t\tpassword[length-1] = val<br>\t\t\tpasswdGen(length-1, password)<br>\t\t}<br>\t}<br><br>}<br>```","like_count":0},{"had_liked":false,"id":65686,"user_name":"qinggeouye","can_delete":false,"product_type":"c1","uid":1251536,"ip_address":"","ucode":"5B53EEDD7BEC9C","user_header":"https://static001.geekbang.org/account/avatar/00/13/18/d0/49b06424.jpg","comment_is_top":false,"comment_ctime":1549563060,"is_pvip":false,"replies":[{"id":"23237","content":"正解","user_name":"作者回复","user_name_real":"黄申","uid":"1275061","ctime":1549590758,"ip_address":"","comment_id":65686,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1549563060","product_id":100021201,"comment_content":"python<br>二、思考题：<br>import copy<br><br>my_pwd = &#39;bada&#39;  # 实际密码<br>pwd_char = [&#39;a&#39;, &#39;b&#39;, &#39;c&#39;, &#39;d&#39;, &#39;e&#39;]  # 字符数组<br><br>def decrypt(char, password=None):<br>    &quot;&quot;&quot;<br>    使用函数的递归（嵌套）调用，找出所有可能的 4 位密码<br>    :param char: 组成密码的字符<br>    :param password: 当前找出的密码<br>    :return:<br>    &quot;&quot;&quot;<br>    if password is None:<br>        password = []<br>    if len(password) == 4:<br>        if &quot;&quot;.join(password) == my_pwd:<br>            print(password)<br>            print(&quot;密码破解成功！&quot;)<br>            return True<br>        else:<br>            return False<br><br>    for i in range(len(char)):<br>        new_password = copy.copy(password)<br>        new_password.append(char[i])<br>        rest_char = copy.copy(char)<br>        if decrypt(rest_char, new_password):<br>            return True<br><br>    return False<br><br>if __name__ == &quot;__main__&quot;:<br>    decrypt(pwd_char)<br>","like_count":0,"discussions":[{"author":{"id":1275061,"avatar":"https://static001.geekbang.org/account/avatar/00/13/74/b5/b68e3740.jpg","nickname":"黄申","note":"","ucode":"EE9AC074A322FF","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":438550,"discussion_content":"正解","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1549590758,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":62771,"user_name":"路过蜻蜓","can_delete":false,"product_type":"c1","uid":1234390,"ip_address":"","ucode":"5BEB408982990B","user_header":"https://static001.geekbang.org/account/avatar/00/12/d5/d6/fe04f976.jpg","comment_is_top":false,"comment_ctime":1548153448,"is_pvip":false,"replies":[{"id":"22226","content":"代码是否没有贴全？好像这段代码只是比较了两个字符串","user_name":"作者回复","user_name_real":"黄申","uid":"1275061","ctime":1548193277,"ip_address":"","comment_id":62771,"utype":1}],"discussion_count":2,"race_medal":0,"score":"1548153448","product_id":100021201,"comment_content":"#python，一个复杂度高的写法，胜在少代码<br>a = [&#39;a&#39;,&#39;b&#39;,&#39;c&#39;,&#39;d&#39;,&#39;e&#39;]<br>password = &#39;abcd&#39;<br>f=&#39;&#39;<br>for i in password:<br>    for n in a:<br>        if n == i:<br>            f+=i<br>print(&#39;f=&#39;,f)","like_count":0,"discussions":[{"author":{"id":1275061,"avatar":"https://static001.geekbang.org/account/avatar/00/13/74/b5/b68e3740.jpg","nickname":"黄申","note":"","ucode":"EE9AC074A322FF","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":437345,"discussion_content":"代码是否没有贴全？好像这段代码只是比较了两个字符串","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1548193277,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1661704,"avatar":"https://static001.geekbang.org/account/avatar/00/19/5b/08/b0b0db05.jpg","nickname":"丁丁历险记","note":"","ucode":"A43829E454C067","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":25957,"discussion_content":"1 即使变量名寻求简单   f  的名字改成r  也更好理解。\n2 你这是拿着结果反求r   ，不客气的讲，就是菜鸡乱写，毛线的复杂度。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1570581628,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":62728,"user_name":"pz","can_delete":false,"product_type":"c1","uid":1136954,"ip_address":"","ucode":"0F2E159B71AD99","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTIRaULUfvK0HpItoOfzCCS9ZI0XXgpDdroWRCic99oyibnok4ib38xu5dO0lJUfqahyS3P8eH1DzGRXg/132","comment_is_top":false,"comment_ctime":1548143854,"is_pvip":false,"replies":[{"id":"22225","content":"思路很清晰，代码也很简短👍","user_name":"作者回复","user_name_real":"黄申","uid":"1275061","ctime":1548193146,"ip_address":"","comment_id":62728,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1548143854","product_id":100021201,"comment_content":"作业pyhton<br>dict = [&quot;a&quot;,&quot;b&quot;,&quot;c&quot;,&quot;d&quot;,&quot;e&quot;]<br>origPsw = &quot;caaeeae&quot;<br><br>def calcPsw(count,res):<br>\\t    if (count &lt;= 0):<br>\\t\\t        if(res==origPsw):<br>\\t\\t\\t            print(&quot;password:&quot;+res)<br>\\t\\t        return<br>\\t    c = count-1<br>\\t    for i in dict:<br>\\t\\t        newRes = res+i<br>\\t\\t        calcPsw(c,newRes)<br><br>calcPsw(7,&quot;&quot;)","like_count":0,"discussions":[{"author":{"id":1275061,"avatar":"https://static001.geekbang.org/account/avatar/00/13/74/b5/b68e3740.jpg","nickname":"黄申","note":"","ucode":"EE9AC074A322FF","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":437325,"discussion_content":"思路很清晰，代码也很简短👍","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1548193146,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":62112,"user_name":"予悠悠","can_delete":false,"product_type":"c1","uid":1211755,"ip_address":"","ucode":"93D785F354E225","user_header":"https://static001.geekbang.org/account/avatar/00/12/7d/6b/648c30bc.jpg","comment_is_top":false,"comment_ctime":1547920965,"is_pvip":false,"replies":[{"id":"22011","content":"因为格式上看不出缩进，对Python而言有歧义。你可以使用\\t来表示缩进，再贴一次代码","user_name":"作者回复","user_name_real":"黄申","uid":"1275061","ctime":1548000576,"ip_address":"","comment_id":62112,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1547920965","product_id":100021201,"comment_content":"用python来补作业。没有用递归，用了迭代来解决。<br>LETTERS = [&#39;a&#39;, &#39;b&#39;, &#39;c&#39;, &#39;d&#39;, &#39;e&#39;]<br><br>def all_passwords():<br>\tlast_passwords = [[]]<br>\tfor i in range(4):<br>\t\tnew_passwords = []<br>\t\tfor password in last_passwords:<br>\t\t\tfor letter in LETTERS:<br>\t\t\t\tnew_password = password + [letter]<br>\t\t\t\tnew_passwords.append(new_password)<br>\t\tlast_passwords = new_passwords<br>\treturn last_passwords","like_count":0,"discussions":[{"author":{"id":1275061,"avatar":"https://static001.geekbang.org/account/avatar/00/13/74/b5/b68e3740.jpg","nickname":"黄申","note":"","ucode":"EE9AC074A322FF","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":437100,"discussion_content":"因为格式上看不出缩进，对Python而言有歧义。你可以使用\\t来表示缩进，再贴一次代码","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1548000576,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":60127,"user_name":"李二木","can_delete":false,"product_type":"c1","uid":1103091,"ip_address":"","ucode":"30E03BB84ADB27","user_header":"https://static001.geekbang.org/account/avatar/00/10/d4/f3/129d6dfe.jpg","comment_is_top":false,"comment_ctime":1547444011,"is_pvip":true,"replies":[{"id":"21557","content":"是的 可以的","user_name":"作者回复","user_name_real":"黄申","uid":"1275061","ctime":1547479746,"ip_address":"","comment_id":60127,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1547444011","product_id":100021201,"comment_content":"只有4位密码的话，那可否是4个for循环搞定？","like_count":0,"discussions":[{"author":{"id":1275061,"avatar":"https://static001.geekbang.org/account/avatar/00/13/74/b5/b68e3740.jpg","nickname":"黄申","note":"","ucode":"EE9AC074A322FF","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":436448,"discussion_content":"是的 可以的","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1547479746,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":58681,"user_name":"microsnow","can_delete":false,"product_type":"c1","uid":1121444,"ip_address":"","ucode":"3C24EE8D64E5E5","user_header":"https://static001.geekbang.org/account/avatar/00/11/1c/a4/3a7a0213.jpg","comment_is_top":false,"comment_ctime":1547174249,"is_pvip":false,"replies":[{"id":"21296","content":"n个元素取m个，重复排列数量是n^m，重复组合数量是((n+m-1)*...*n)&#47;m!，证明有点复杂，我可以放到加餐来介绍","user_name":"作者回复","user_name_real":"黄申","uid":"1275061","ctime":1547221185,"ip_address":"","comment_id":58681,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1547174249","product_id":100021201,"comment_content":"交作业。顺便问下，黄老师，重复排列组合计算公式有吗？ <br>&#47;**<br> * a~e 区间 4位密码重复排列[PHP版]<br> * 625个<br> *&#47;<br>class Lession7_test<br>{<br>    public function __construct()<br>    {<br>        $this-&gt;permutate([&#39;a&#39;, &#39;b&#39;, &#39;c&#39;, &#39;d&#39;, &#39;e&#39;], &#39;&#39;);<br>    }<br><br>    public function permutate($letters, $result)<br>    {<br>        if (strlen($result) == 4) {<br>            echo $result.&quot;\\n&quot;;<br>            return ;<br>        }<br>        for($i = 0; $i &lt; count($letters); $i++) {<br>            $new_result = $result;<br>            $new_result .= $letters[$i];<br>            $this-&gt;permutate($letters, $new_result);<br>        }<br>    }<br>}<br><br>$Lession7_4 = new Lession7_test();","like_count":0,"discussions":[{"author":{"id":1275061,"avatar":"https://static001.geekbang.org/account/avatar/00/13/74/b5/b68e3740.jpg","nickname":"黄申","note":"","ucode":"EE9AC074A322FF","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":436169,"discussion_content":"n个元素取m个，重复排列数量是n^m，重复组合数量是((n+m-1)*...*n)/m!，证明有点复杂，我可以放到加餐来介绍","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1547221185,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":57346,"user_name":"杜凌霄","can_delete":false,"product_type":"c1","uid":1350995,"ip_address":"","ucode":"34E9C580A140C7","user_header":"https://static001.geekbang.org/account/avatar/00/14/9d/53/0748e5b1.jpg","comment_is_top":false,"comment_ctime":1546758174,"is_pvip":false,"replies":[{"id":"20727","content":"能再具体解释一下这个题目吗？不是太明白。感觉上可以用动态规划","user_name":"作者回复","user_name_real":"黄申","uid":"1275061","ctime":1546827889,"ip_address":"","comment_id":57346,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1546758174","product_id":100021201,"comment_content":"我现在也是遇到一个算法问题。不限制商品参与的活动，运算所有商品购买的价格达到最优解，有什么好的思路方法吗。我能想到的只有穷举所有的营销组合方式，计算出每一种的价格，排序。有没有更好的办法。","like_count":0,"discussions":[{"author":{"id":1275061,"avatar":"https://static001.geekbang.org/account/avatar/00/13/74/b5/b68e3740.jpg","nickname":"黄申","note":"","ucode":"EE9AC074A322FF","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":435536,"discussion_content":"能再具体解释一下这个题目吗？不是太明白。感觉上可以用动态规划","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1546827889,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":56541,"user_name":".","can_delete":false,"product_type":"c1","uid":1194614,"ip_address":"","ucode":"2FBBAB303A4D5A","user_header":"https://static001.geekbang.org/account/avatar/00/12/3a/76/e9f18792.jpg","comment_is_top":false,"comment_ctime":1546484601,"is_pvip":false,"replies":[{"id":"20453","content":"是的 不过某些场景下，例如赏金的可能组合，循环的嵌套层数不确定。后面我会介绍使用栈的数据结构，减少内存的使用","user_name":"作者回复","user_name_real":"黄申","uid":"1275061","ctime":1546540914,"ip_address":"","comment_id":56541,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1546484601","product_id":100021201,"comment_content":"老师，嵌套循环和递归调用分别应该在什么情景下使用呢？感觉相同的循环次数下，递归占用的资源更多，容易出现栈溢出的现象，而循环嵌套则不容易。","like_count":0,"discussions":[{"author":{"id":1275061,"avatar":"https://static001.geekbang.org/account/avatar/00/13/74/b5/b68e3740.jpg","nickname":"黄申","note":"","ucode":"EE9AC074A322FF","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":435104,"discussion_content":"是的 不过某些场景下，例如赏金的可能组合，循环的嵌套层数不确定。后面我会介绍使用栈的数据结构，减少内存的使用","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1546540914,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":56465,"user_name":"C_love","can_delete":false,"product_type":"c1","uid":1043613,"ip_address":"","ucode":"F268D1867C90C0","user_header":"https://static001.geekbang.org/account/avatar/00/0f/ec/9d/4d705f03.jpg","comment_is_top":false,"comment_ctime":1546468596,"is_pvip":false,"replies":[{"id":"20457","content":"对 可以不用，能记录选择的状态就行","user_name":"作者回复","user_name_real":"黄申","uid":"1275061","ctime":1546556335,"ip_address":"","comment_id":56465,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1546468596","product_id":100021201,"comment_content":"文中代码每层迭代应该可以不用clone吧？在permutate后面还原result和horse状态应该就可以了。对吗？","like_count":0,"discussions":[{"author":{"id":1275061,"avatar":"https://static001.geekbang.org/account/avatar/00/13/74/b5/b68e3740.jpg","nickname":"黄申","note":"","ucode":"EE9AC074A322FF","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":435050,"discussion_content":"对 可以不用，能记录选择的状态就行","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1546556335,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":56294,"user_name":"鹏飞天下","can_delete":false,"product_type":"c1","uid":1101792,"ip_address":"","ucode":"EB9FFD9FE64A4C","user_header":"https://static001.geekbang.org/account/avatar/00/10/cf/e0/f6819d03.jpg","comment_is_top":false,"comment_ctime":1546417079,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1546417079","product_id":100021201,"comment_content":"java 递归版本<br>    public static void main(String[] args) {<br>        char[] passwordCharts= {&#39;a&#39;,&#39;b&#39;,&#39;c&#39;,&#39;d&#39;,&#39;e&#39;};<br>        getPassword(passwordCharts,4,&quot;&quot;);<br>    }<br>    public static void getPassword(char[] passwdChars,int num,String pwd){<br>        if(num == 0){<br>            System.out.println(pwd);<br>            return;<br>        }<br>        for(int i = 0 ;i &lt; passwdChars.length;i ++){<br>            String pwdNew = pwd + passwdChars[i];<br>            getPassword(passwdChars,num-1,pwdNew);<br>        }<br>    }","like_count":0},{"had_liked":false,"id":56290,"user_name":"xzy","can_delete":false,"product_type":"c1","uid":1002095,"ip_address":"","ucode":"1A44368083A19E","user_header":"https://static001.geekbang.org/account/avatar/00/0f/4a/6f/e36b3908.jpg","comment_is_top":false,"comment_ctime":1546416707,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1546416707","product_id":100021201,"comment_content":"import java.util.Arrays;<br><br>public class Lesson7_Task {<br>\tprivate static char[] chars = new char[]{&#39;a&#39;, &#39;b&#39;, &#39;c&#39;, &#39;d&#39;, &#39;e&#39;};<br><br><br>\tpublic static void permutate(char[] result) {<br>\t\tif (result.length == 4 &amp;&amp; result[3] != 0) {<br>\t\t\tSystem.out.println(result);<br>\t\t\treturn;<br>\t\t}<br><br>\t\tfor (int i = 0; i &lt; chars.length; i++) {<br>\t\t\tchar[] new_result = Arrays.copyOf(result, result.length + 1);<br>\t\t\tnew_result[new_result.length - 1] = chars[i];<br>\t\t\tpermutate(new_result);<br>\t\t}<br>\t}<br><br>\tpublic static void main(String[] args) {<br>\t\tpermutate(new char[0]);<br><br>\t}<br>}","like_count":0},{"had_liked":false,"id":56241,"user_name":"Youngggg","can_delete":false,"product_type":"c1","uid":1203378,"ip_address":"","ucode":"DA1F55A2CB5868","user_header":"https://static001.geekbang.org/account/avatar/00/12/5c/b2/dca010e5.jpg","comment_is_top":false,"comment_ctime":1546411040,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1546411040","product_id":100021201,"comment_content":"import copy<br><br>word = [&#39;a&#39;, &#39;b&#39;, &#39;c&#39;, &#39;d&#39;, &#39;e&#39;]<br>def sort(result = &#39;&#39;):<br>    if len(result) == 4:<br>        print(result)<br>        return<br>    else:<br>        for i in word:<br>            new_result = copy.copy(result)<br>            new_result = new_result + i<br>            sort(new_result)<br><br>sort(&#39;&#39;)","like_count":0},{"had_liked":false,"id":55863,"user_name":"行者","can_delete":false,"product_type":"c1","uid":1364703,"ip_address":"","ucode":"EF25E67B261553","user_header":"https://static001.geekbang.org/account/avatar/00/14/d2/df/48378afe.jpg","comment_is_top":false,"comment_ctime":1546332221,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1546332221","product_id":100021201,"comment_content":"思考题里python实现如下，但是不知道为何密码只能够测试到五位数，超过五位数就无法正常显示答案了。还请老师指教。<br><br>password = &#39;abcde&#39;<br>code_list = [&#39;a&#39;,&#39;b&#39;,&#39;c&#39;,&#39;d&#39;,&#39;e&#39;]<br>import copy<br><br>def code_solution(n, code_list, result, code):<br><br>    if len(result) == n:<br>        if result == code:<br>            print(result)<br>        return<br>    for word in code_list:<br>        newResult = copy.copy(result)<br>        newList = copy.copy(code_list)<br>        newResult += word<br>        newList.remove(word)<br>        code_solution(n, newList, newResult, code)<br><br>code_solution(len(password), code_list, &#39;&#39;, password)","like_count":0},{"had_liked":false,"id":55210,"user_name":"gltjk","can_delete":false,"product_type":"c1","uid":1341515,"ip_address":"","ucode":"A2ACFE7D8A32C5","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTJ7hqBj1WIXVJgRwxVEg7fREAwI04BKRM8ibzVA8DIOaLSLqIrjw8UYr9GDUFFZW7mhBLC4hSp5r9g/132","comment_is_top":false,"comment_ctime":1546067009,"is_pvip":false,"replies":[{"id":"20061","content":"es6这个语言没用过，看语法很像spark，这里是如何控制密码的长度的？","user_name":"作者回复","user_name_real":"黄申","uid":"1275061","ctime":1546204402,"ip_address":"","comment_id":55210,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1546067009","product_id":100021201,"comment_content":"用ES6写了一个：Array(5).fill([&#39;a&#39;,&#39;b&#39;,&#39;c&#39;,&#39;d&#39;,&#39;e&#39;]).reduce((x,y)=&gt;x.flatMap(x=&gt;y.map(y=&gt;x+y)))<br><br>不过量级大了并不实用，因为要先生成所有组合。实际破解的时候，应该是每生成一个就试一次，如果成功了的话就不用生成后面的了。","like_count":0,"discussions":[{"author":{"id":1275061,"avatar":"https://static001.geekbang.org/account/avatar/00/13/74/b5/b68e3740.jpg","nickname":"黄申","note":"","ucode":"EE9AC074A322FF","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":434699,"discussion_content":"es6这个语言没用过，看语法很像spark，这里是如何控制密码的长度的？","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1546204402,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":55185,"user_name":"FengX","can_delete":false,"product_type":"c1","uid":1353041,"ip_address":"","ucode":"B1B0235B1D1935","user_header":"https://static001.geekbang.org/account/avatar/00/14/a5/51/7773d421.jpg","comment_is_top":false,"comment_ctime":1546061900,"is_pvip":false,"replies":[{"id":"20063","content":"还加了密码的测试 很棒","user_name":"作者回复","user_name_real":"黄申","uid":"1275061","ctime":1546210268,"ip_address":"","comment_id":55185,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1546061900","product_id":100021201,"comment_content":"import java.util.ArrayList;<br>import java.util.Arrays;<br><br>public class HelloPermutation {<br>\tpublic static ArrayList&lt;String&gt; letter=new ArrayList&lt;String&gt;(Arrays.asList(&quot;a&quot;,&quot;b&quot;,&quot;c&quot;,&quot;d&quot;,&quot;e&quot;));<br>\tpublic static ArrayList&lt;String&gt; pwd=new ArrayList&lt;String&gt;(Arrays.asList(&quot;b&quot;,&quot;a&quot;,&quot;c&quot;,&quot;d&quot;));<br>\t<br>    public static void main(String []args) {<br>\t\tSystem.out.println(letter);<br>\t\tSystem.out.println(&quot;Hello Permutation!&quot;);<br>\t\tpermutate(pwd.size(),new ArrayList&lt;String&gt;());<br>    }<br>\tpublic static void permutate(int len,ArrayList&lt;String&gt; result){<br>\t\tif(len==0){<br>\t\t\t&#47;&#47;System.out.println(result);System.out.println();<br>\t\t\tif(result.equals(pwd))<br>\t\t\t\tSystem.out.println(&quot;password: &quot;+result);<br>\t\t\treturn;\t\t\t<br>\t\t}<br>\t\tfor(int i=0;i&lt;letter.size();i++){<br>\t\t\tArrayList&lt;String&gt; new_result=(ArrayList&lt;String&gt;)result.clone();<br>\t\t\tnew_result.add(letter.get(i));<br>\t\t\tpermutate(len-1,new_result);<br>\t\t}<br>\t}<br>}","like_count":0,"discussions":[{"author":{"id":1275061,"avatar":"https://static001.geekbang.org/account/avatar/00/13/74/b5/b68e3740.jpg","nickname":"黄申","note":"","ucode":"EE9AC074A322FF","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":434691,"discussion_content":"还加了密码的测试 很棒","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1546210268,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":54865,"user_name":"云韵","can_delete":false,"product_type":"c1","uid":1025622,"ip_address":"","ucode":"3DE26DBAAAEDE6","user_header":"https://static001.geekbang.org/account/avatar/00/0f/a6/56/abb7bfe3.jpg","comment_is_top":false,"comment_ctime":1545972903,"is_pvip":true,"replies":[{"id":"20067","content":"如果想快速熟悉一下计算机中常用的概率和线性代数知识，可以看看Ian Goodfellow写的deep learning开头的回顾部分","user_name":"作者回复","user_name_real":"黄申","uid":"1275061","ctime":1546211223,"ip_address":"","comment_id":54865,"utype":1}],"discussion_count":1,"race_medal":1,"score":"1545972903","product_id":100021201,"comment_content":"老师，想学线性代数，和概率论，老师帮忙推荐几本","like_count":0,"discussions":[{"author":{"id":1275061,"avatar":"https://static001.geekbang.org/account/avatar/00/13/74/b5/b68e3740.jpg","nickname":"黄申","note":"","ucode":"EE9AC074A322FF","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":434591,"discussion_content":"如果想快速熟悉一下计算机中常用的概率和线性代数知识，可以看看Ian Goodfellow写的deep learning开头的回顾部分","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1546211223,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":54812,"user_name":"云韵","can_delete":false,"product_type":"c1","uid":1025622,"ip_address":"","ucode":"3DE26DBAAAEDE6","user_header":"https://static001.geekbang.org/account/avatar/00/0f/a6/56/abb7bfe3.jpg","comment_is_top":false,"comment_ctime":1545964419,"is_pvip":true,"replies":[{"id":"19854","content":"数学的范围比较广，你希望学习的有侧重点吗？","user_name":"作者回复","user_name_real":"黄申","uid":"1275061","ctime":1545969099,"ip_address":"","comment_id":54812,"utype":1}],"discussion_count":1,"race_medal":1,"score":"1545964419","product_id":100021201,"comment_content":"老师，推荐几本学习数学的书吧。感觉配合书会更有感觉。","like_count":0,"discussions":[{"author":{"id":1275061,"avatar":"https://static001.geekbang.org/account/avatar/00/13/74/b5/b68e3740.jpg","nickname":"黄申","note":"","ucode":"EE9AC074A322FF","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":434571,"discussion_content":"数学的范围比较广，你希望学习的有侧重点吗？","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1545969099,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":54800,"user_name":"指间砂的宿命","can_delete":false,"product_type":"c1","uid":1338245,"ip_address":"","ucode":"DFAE22BF3BD415","user_header":"https://static001.geekbang.org/account/avatar/00/14/6b/85/be43d09f.jpg","comment_is_top":false,"comment_ctime":1545963703,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1545963703","product_id":100021201,"comment_content":"a到e总共五个字符，4位允许相同，那就是5的4次方全部鼠粮网，这个量级计算机循环计算就能输出所有了","like_count":0},{"had_liked":false,"id":54681,"user_name":"Pwhxbdk","can_delete":false,"product_type":"c1","uid":1333742,"ip_address":"","ucode":"64634AAF8F2CFD","user_header":"https://static001.geekbang.org/account/avatar/00/14/59/ee/92b7c27c.jpg","comment_is_top":false,"comment_ctime":1545934495,"is_pvip":false,"discussion_count":1,"race_medal":0,"score":"1545934495","product_id":100021201,"comment_content":"bit币挖矿计算hash值的时候 矿机算10分钟 也是用的穷举吧 ","like_count":0,"discussions":[{"author":{"id":1237557,"avatar":"https://static001.geekbang.org/account/avatar/00/12/e2/35/5d015881.jpg","nickname":"Andy","note":"","ucode":"72EB0F3E195269","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":194806,"discussion_content":"只能暴力","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1583243334,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]}]}