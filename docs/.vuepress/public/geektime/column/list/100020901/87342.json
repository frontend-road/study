{"id":87342,"title":"52 | 案例篇：服务吞吐量下降很厉害，怎么分析？","content":"<p>你好，我是倪朋飞。</p><p>上一节，我们一起学习了怎么使用动态追踪来观察应用程序和内核的行为。先简单来回顾一下。</p><p>所谓动态追踪，就是在系统或者应用程序还在正常运行的时候，通过内核中提供的探针，来动态追踪它们的行为，从而辅助排查出性能问题的瓶颈。</p><p>使用动态追踪，便可以在不修改代码也不重启服务的情况下，动态了解应用程序或者内核的行为。这对排查线上的问题、特别是不容易重现的问题尤其有效。</p><p>在 Linux 系统中，常见的动态追踪方法包括 ftrace、perf、eBPF/BCC 以及 SystemTap 等。</p><ul>\n<li>\n<p>使用 perf 配合火焰图寻找热点函数，是一个比较通用的性能定位方法，在很多场景中都可以使用。</p>\n</li>\n<li>\n<p>如果这仍满足不了你的要求，那么在新版的内核中，eBPF 和 BCC 是最灵活的动态追踪方法。</p>\n</li>\n<li>\n<p>而在旧版本内核，特别是在 RHEL 系统中，由于 eBPF 支持受限，SystemTap 和 ftrace 往往是更好的选择。</p>\n</li>\n</ul><p>在 <a href=\"https://time.geekbang.org/column/article/82833\">网络请求延迟变大</a> 的案例中，我带你一起分析了一个网络请求延迟增大的问题。当时我们分析知道，那是由于服务器端开启 TCP 的 Nagle 算法，而客户端却开启了延迟确认所导致的。</p><p>其实，除了延迟问题外，网络请求的吞吐量下降，是另一个常见的性能问题。那么，针对这种吞吐量下降问题，我们又该如何进行分析呢？</p><!-- [[[read_end]]] --><p>接下来，我就以最常用的反向代理服务器 Nginx 为例，带你一起看看，如何分析服务吞吐量下降的问题。</p><h2>案例准备</h2><p>今天的案例需要用到两台虚拟机，还是基于 Ubuntu 18.04，同样适用于其他的 Linux 系统。我使用的案例环境如下所示：</p><ul>\n<li>\n<p>机器配置：2 CPU，8GB 内存。</p>\n</li>\n<li>\n<p>预先安装 docker、curl、wrk、perf、FlameGraph 等工具，比如</p>\n</li>\n</ul><pre><code># 安装必备docker、curl和perf\n$ apt-get install -y docker.io curl build-essential linux-tools-common\n# 安装火焰图工具\n$ git clone https://github.com/brendangregg/FlameGraph\n# 安装wrk\n$ git clone https://github.com/wg/wrk\n$ cd wrk &amp;&amp; make &amp;&amp; sudo cp wrk /usr/local/bin/\n</code></pre><p>这些工具，我们在前面的案例中已经多次使用，这儿就不再重复。你可以打开两个终端，分别登录到这两台虚拟机中，并安装上述工具。</p><blockquote>\n<p>注意，以下所有命令都默认以 root 用户运行，如果你用普通用户身份登陆系统，请运行 sudo su root 命令切换到 root 用户。</p>\n</blockquote><p>到这里，准备工作就完成了。接下来，我们正式进入操作环节。</p><h2>案例分析</h2><p>我们今天要分析的案例是一个 Nginx + PHP 应用，它们的关系如下图所示：</p><p><img src=\"https://static001.geekbang.org/resource/image/e9/bb/e90d67270cf703aba6c487584d17cfbb.png?wh=1632*1032\" alt=\"\"></p><p>其中，wrk 和 curl 是 Nginx 的客户端，而 PHP 应用则是一个简单的 Hello World：</p><pre><code>&lt;?php\necho &quot;Hello World!&quot;\n?&gt;\n</code></pre><p>为了方便你运行，我已经把案例应用打包成了两个 Docker 镜像，并推送到 Docker Hub 中。你可以直接按照下面的步骤来运行它。</p><p>同时，为了分析方便，这两个容器都将运行在 host network 模式中。这样，我们就不用切换到容器的网络命名空间，而可以直接观察它们的套接字状态。</p><p>我们先在终端一中，执行下面的命令，启动 Nginx 应用，并监听在 80 端口。如果一切正常，你应该可以看到如下的输出：</p><pre><code>$ docker run --name nginx --network host --privileged -itd feisky/nginx-tp\n6477c607c13b37943234755a14987ffb3a31c33a7f04f75bb1c190e710bce19e\n$ docker run --name phpfpm --network host --privileged -itd feisky/php-fpm-tp\n09e0255159f0c8a647e22cd68bd097bec7efc48b21e5d91618ff29b882fa7c1f\n</code></pre><p>然后，执行 docker ps 命令，查询容器的状态，你会发现，容器已经处于运行状态（Up）了：</p><pre><code>$ docker ps\nCONTAINER ID        IMAGE               COMMAND                  CREATED             STATUS              PORTS               NAMES\n09e0255159f0        feisky/php-fpm-tp   &quot;php-fpm -F --pid /o…&quot;   28 seconds ago      Up 27 seconds                           phpfpm\n6477c607c13b        feisky/nginx-tp     &quot;/init.sh&quot;               29 seconds ago      Up 28 seconds                           nginx\n</code></pre><p>不过，从 docker ps 的输出，我们只能知道容器处于运行状态。至于 Nginx 能不能正常处理外部的请求，还需要我们进一步确认。</p><p>接着，切换到终端二中，执行下面的 curl 命令，进一步验证 Nginx 能否正常访问。如果你看到 “Hello World!” 的输出，说明 Nginx+PHP 的应用已经正常启动了：</p><pre><code>$ curl http://192.168.0.30\nHello World!\n</code></pre><blockquote>\n<p>提示：如果你看到不一样的结果，可以再次执行 docker ps -a 确认容器的状态，并执行 docker logs &lt;容器名&gt; 来查看容器日志，从而找出原因。</p>\n</blockquote><p>接下来，我们就来测试一下，案例中 Nginx 的吞吐量。</p><p>我们继续在终端二中，执行 wrk 命令，来测试 Nginx 的性能：</p><pre><code># 默认测试时间为10s，请求超时2s\n$ wrk --latency -c 1000 http://192.168.0.30\nRunning 10s test @ http://192.168.0.30\n  2 threads and 1000 connections\n  Thread Stats   Avg      Stdev     Max   +/- Stdev\n    Latency    14.82ms   42.47ms 874.96ms   98.43%\n    Req/Sec   550.55      1.36k    5.70k    93.10%\n  Latency Distribution\n     50%   11.03ms\n     75%   15.90ms\n     90%   23.65ms\n     99%  215.03ms\n  1910 requests in 10.10s, 573.56KB read\n  Non-2xx or 3xx responses: 1910\nRequests/sec:    189.10\nTransfer/sec:     56.78KB\n</code></pre><p>从 wrk 的结果中，你可以看到吞吐量（也就是每秒请求数）只有 189，并且所有 1910 个请求收到的都是异常响应（非 2xx 或 3xx）。这些数据显然表明，吞吐量太低了，并且请求处理都失败了。这是怎么回事呢？</p><p>根据 wrk 输出的统计结果，我们可以看到，总共传输的数据量只有 573 KB，那就肯定不会是带宽受限导致的。所以，我们应该从请求数的角度来分析。</p><p>分析请求数，特别是 HTTP 的请求数，有什么好思路吗？当然就要从 TCP 连接数入手。</p><h3>连接数优化</h3><p>要查看 TCP 连接数的汇总情况，首选工具自然是 ss 命令。为了观察 wrk 测试时发生的问题，我们在终端二中再次启动 wrk，并且把总的测试时间延长到 30 分钟：</p><pre><code># 测试时间30分钟\n$ wrk --latency -c 1000 -d 1800 http://192.168.0.30\n</code></pre><p>然后，回到终端一中，观察 TCP 连接数：</p><pre><code>$ ss -s\nTotal: 177 (kernel 1565)\nTCP:   1193 (estab 5, closed 1178, orphaned 0, synrecv 0, timewait 1178/0), ports 0\n\nTransport Total     IP        IPv6\n*\t  1565      -         -\nRAW\t  1         0         1\nUDP\t  2         2         0\nTCP\t  15        12        3\nINET\t  18        14        4\nFRAG\t  0         0         0\n</code></pre><p>从这里看出，wrk 并发 1000 请求时，建立连接数只有 5，而 closed 和 timewait 状态的连接则有 1100 多 。其实从这儿你就可以发现两个问题：</p><ul>\n<li>\n<p>一个是建立连接数太少了；</p>\n</li>\n<li>\n<p>另一个是 timewait 状态连接太多了。</p>\n</li>\n</ul><p>分析问题，自然要先从相对简单的下手。我们先来看第二个关于 timewait 的问题。在之前的 NAT 案例中，我已经提到过，内核中的连接跟踪模块，有可能会导致 timewait 问题。我们今天的案例还是基于 Docker 运行，而 Docker 使用的 iptables ，就会使用连接跟踪模块来管理 NAT。那么，怎么确认是不是连接跟踪导致的问题呢？</p><p>其实，最简单的方法，就是通过 dmesg 查看系统日志，如果有连接跟踪出了问题，应该会看到 nf_conntrack 相关的日志。</p><p>我们可以继续在终端一中，运行下面的命令，查看系统日志：</p><pre><code>$ dmesg | tail\n[88356.354329] nf_conntrack: nf_conntrack: table full, dropping packet\n[88356.354374] nf_conntrack: nf_conntrack: table full, dropping packet\n\n</code></pre><p>从日志中，你可以看到 nf_conntrack: table full, dropping packet 的错误日志。这说明，正是连接跟踪导致的问题。</p><p>这种情况下，我们应该想起前面学过的两个内核选项——连接跟踪数的最大限制 nf_conntrack_max ，以及当前的连接跟踪数 nf_conntrack_count。执行下面的命令，你就可以查询这两个选项：</p><pre><code>$ sysctl net.netfilter.nf_conntrack_max\nnet.netfilter.nf_conntrack_max = 200\n$ sysctl net.netfilter.nf_conntrack_count\nnet.netfilter.nf_conntrack_count = 200\n</code></pre><p>这次的输出中，你可以看到最大的连接跟踪限制只有 200，并且全部被占用了。200 的限制显然太小，不过相应的优化也很简单，调大就可以了。</p><p>我们执行下面的命令，将 nf_conntrack_max 增大：</p><pre><code># 将连接跟踪限制增大到1048576\n$ sysctl -w net.netfilter.nf_conntrack_max=1048576\n</code></pre><p>连接跟踪限制增大后，对 Nginx 吞吐量的优化效果如何呢？我们不妨再来测试一下。你可以切换到终端二中，按下 Ctrl+C ；然后执行下面的 wrk 命令，重新测试 Nginx 的性能：</p><pre><code># 默认测试时间为10s，请求超时2s\n$ wrk --latency -c 1000 http://192.168.0.30\n...\n  54221 requests in 10.07s, 15.16MB read\n  Socket errors: connect 0, read 7, write 0, timeout 110\n  Non-2xx or 3xx responses: 45577\nRequests/sec:   5382.21\nTransfer/sec:      1.50MB\n</code></pre><p>从 wrk 的输出中，你可以看到，连接跟踪的优化效果非常好，吞吐量已经从刚才的 189 增大到了 5382。看起来性能提升了将近 30 倍，</p><p>不过，这是不是就能说明，我们已经把 Nginx 的性能优化好了呢？</p><p>别急，我们再来看看 wrk 汇报的其他数据。果然，10s 内的总请求数虽然增大到了 5 万，但是有 4 万多响应异常，说白了，真正成功的只有 8000多个（54221-45577=8644）。</p><p>很明显，大部分请求的响应都是异常的。那么，该怎么分析响应异常的问题呢？</p><h3>工作进程优化</h3><p>由于这些响应并非 Socket error，说明 Nginx 已经收到了请求，只不过，响应的状态码并不是我们期望的 2xx （表示成功）或 3xx（表示重定向）。所以，这种情况下，搞清楚 Nginx 真正的响应就很重要了。</p><p>不过这也不难，我们切换回终端一，执行下面的 docker 命令，查询 Nginx 容器日志就知道了：</p><pre><code>$ docker logs nginx --tail 3\n192.168.0.2 - - [15/Mar/2019:2243:27 +0000] &quot;GET / HTTP/1.1&quot; 499 0 &quot;-&quot; &quot;-&quot; &quot;-&quot;\n192.168.0.2 - - [15/Mar/2019:22:43:27 +0000] &quot;GET / HTTP/1.1&quot; 499 0 &quot;-&quot; &quot;-&quot; &quot;-&quot;\n192.168.0.2 - - [15/Mar/2019:22:43:27 +0000] &quot;GET / HTTP/1.1&quot; 499 0 &quot;-&quot; &quot;-&quot; &quot;-&quot;\n</code></pre><p>从 Nginx 的日志中，我们可以看到，响应状态码为 499。</p><p>499 并非标准的 HTTP 状态码，而是由 Nginx 扩展而来，表示服务器端还没来得及响应时，客户端就已经关闭连接了。换句话说，问题在于服务器端处理太慢，客户端因为超时（wrk超时时间为2s），主动断开了连接。</p><p>既然问题出在了服务器端处理慢，而案例本身是 Nginx+PHP 的应用，那是不是可以猜测，是因为 PHP 处理过慢呢？</p><p>我么可以在终端中，执行下面的 docker 命令，查询 PHP 容器日志：</p><pre><code>$ docker logs phpfpm --tail 5\n[15-Mar-2019 22:28:56] WARNING: [pool www] server reached max_children setting (5), consider raising it\n[15-Mar-2019 22:43:17] WARNING: [pool www] server reached max_children setting (5), consider raising it\n</code></pre><p>从这个日志中，我们可以看到两条警告信息，server reached max_children setting (5)，并建议增大 max_children。</p><p>max_children 表示 php-fpm 子进程的最大数量，当然是数值越大，可以同时处理的请求数就越多。不过由于这是进程问题，数量增大，也会导致更多的内存和 CPU 占用。所以，我们还不能设置得过大。</p><p>一般来说，每个 php-fpm 子进程可能会占用 20 MB 左右的内存。所以，你可以根据内存和 CPU个数，估算一个合理的值。这儿我把它设置成了 20，并将优化后的配置重新打包成了 Docker 镜像。你可以执行下面的命令来执行它：</p><pre><code># 停止旧的容器\n$ docker rm -f nginx phpfpm\n\n# 使用新镜像启动Nginx和PHP\n$ docker run --name nginx --network host --privileged -itd feisky/nginx-tp:1\n$ docker run --name phpfpm --network host --privileged -itd feisky/php-fpm-tp:1\n</code></pre><p>然后我们切换到终端二，再次执行下面的 wrk 命令，重新测试 Nginx 的性能：</p><pre><code># 默认测试时间为10s，请求超时2s\n$ wrk --latency -c 1000 http://192.168.0.30\n...\n  47210 requests in 10.08s, 12.51MB read\n  Socket errors: connect 0, read 4, write 0, timeout 91\n  Non-2xx or 3xx responses: 31692\nRequests/sec:   4683.82\nTransfer/sec:      1.24MB\n</code></pre><p>从 wrk 的输出中，可以看到，虽然吞吐量只有 4683，比刚才的 5382 少了一些；但是测试期间成功的请求数却多了不少，从原来的 8000，增长到了 15000（47210-31692=15518）。</p><p>不过，虽然性能有所提升，可 4000 多的吞吐量显然还是比较差的，并且大部分请求的响应依然还是异常。接下来，该怎么去进一步提升 Nginx 的吞吐量呢？</p><h3>套接字优化</h3><p>回想一下网络性能的分析套路，以及 Linux 协议栈的原理，我们可以从从套接字、TCP 协议等逐层分析。而分析的第一步，自然还是要观察有没有发生丢包现象。</p><p>我们切换到终端二中，重新运行测试，这次还是要用 -d 参数延长测试时间，以便模拟性能瓶颈的现场：</p><pre><code># 测试时间30分钟\n$ wrk --latency -c 1000 -d 1800 http://192.168.0.30\n</code></pre><p>然后回到终端一中，观察有没有发生套接字的丢包现象：</p><pre><code># 只关注套接字统计\n$ netstat -s | grep socket\n    73 resets received for embryonic SYN_RECV sockets\n    308582 TCP sockets finished time wait in fast timer\n    8 delayed acks further delayed because of locked socket\n    290566 times the listen queue of a socket overflowed\n    290566 SYNs to LISTEN sockets dropped\n\n# 稍等一会，再次运行\n$ netstat -s | grep socket\n    73 resets received for embryonic SYN_RECV sockets\n    314722 TCP sockets finished time wait in fast timer\n    8 delayed acks further delayed because of locked socket\n    344440 times the listen queue of a socket overflowed\n    344440 SYNs to LISTEN sockets dropped\n</code></pre><p>根据两次统计结果中 socket overflowed 和 sockets dropped 的变化，你可以看到，有大量的套接字丢包，并且丢包都是套接字队列溢出导致的。所以，接下来，我们应该分析连接队列的大小是不是有异常。</p><p>你可以执行下面的命令，查看套接字的队列大小：</p><pre><code>$ ss -ltnp\nState     Recv-Q     Send-Q            Local Address:Port            Peer Address:Port\nLISTEN    10         10                      0.0.0.0:80                   0.0.0.0:*         users:((&quot;nginx&quot;,pid=10491,fd=6),(&quot;nginx&quot;,pid=10490,fd=6),(&quot;nginx&quot;,pid=10487,fd=6))\nLISTEN    7          10                            *:9000                       *:*         users:((&quot;php-fpm&quot;,pid=11084,fd=9),...,(&quot;php-fpm&quot;,pid=10529,fd=7))\n</code></pre><p>这次可以看到，Nginx 和 php-fpm 的监听队列 （Send-Q）只有 10，而 nginx 的当前监听队列长度 （Recv-Q）已经达到了最大值，php-fpm 也已经接近了最大值。很明显，套接字监听队列的长度太小了，需要增大。</p><p>关于套接字监听队列长度的设置，既可以在应用程序中，通过套接字接口调整，也支持通过内核选项来配置。我们继续在终端一中，执行下面的命令，分别查询 Nginx 和内核选项对监听队列长度的配置：</p><pre><code># 查询nginx监听队列长度配置\n$ docker exec nginx cat /etc/nginx/nginx.conf | grep backlog\n        listen       80  backlog=10;\n\n# 查询php-fpm监听队列长度\n$ docker exec phpfpm cat /opt/bitnami/php/etc/php-fpm.d/www.conf | grep backlog\n; Set listen(2) backlog.\n;listen.backlog = 511\n\n# somaxconn是系统级套接字监听队列上限\n$ sysctl net.core.somaxconn\nnet.core.somaxconn = 10\n</code></pre><p>从输出中可以看到，Nginx 和 somaxconn 的配置都是 10，而 php-fpm 的配置也只有 511，显然都太小了。那么，优化方法就是增大这三个配置，比如，可以把 Nginx 和 php-fpm 的队列长度增大到 8192，而把 somaxconn 增大到 65536。</p><p>同样地，我也把这些优化后的 Nginx ，重新打包成了两个 Docker 镜像，你可以执行下面的命令来运行它：</p><pre><code># 停止旧的容器\n$ docker rm -f nginx phpfpm\n\n# 使用新镜像启动Nginx和PHP\n$ docker run --name nginx --network host --privileged -itd feisky/nginx-tp:2\n$ docker run --name phpfpm --network host --privileged -itd feisky/php-fpm-tp:2\n</code></pre><p>然后，切换到终端二中，重新测试 Nginx 的性能：</p><pre><code>$ wrk --latency -c 1000 http://192.168.0.30\n...\n  62247 requests in 10.06s, 18.25MB read\n  Non-2xx or 3xx responses: 62247\nRequests/sec:   6185.65\nTransfer/sec:      1.81MB\n</code></pre><p>现在的吞吐量已经增大到了 6185，并且在测试的时候，如果你在终端一中重新执行 <em>netstat -s | grep socket</em>，还会发现，现在已经没有套接字丢包问题了。</p><p>不过，这次 Nginx 的响应，再一次全部失败了，都是 Non-2xx or 3xx。这是怎么回事呢？我们再去终端一中，查看 Nginx 日志：</p><pre><code>$ docker logs nginx --tail 10\n2019/03/15 16:52:39 [crit] 15#15: *999779 connect() to 127.0.0.1:9000 failed (99: Cannot assign requested address) while connecting to upstream, client: 192.168.0.2, server: localhost, request: &quot;GET / HTTP/1.1&quot;, upstream: &quot;fastcgi://127.0.0.1:9000&quot;, host: &quot;192.168.0.30&quot;\n</code></pre><p>你可以看到，Nginx 报出了无法连接 fastcgi 的错误，错误消息是 Connect 时， Cannot assign requested address。这个错误消息对应的错误代码为 EADDRNOTAVAIL，表示 IP 地址或者端口号不可用。</p><p>在这里，显然只能是端口号的问题。接下来，我们就来分析端口号的情况。</p><h3>端口号优化</h3><p>根据网络套接字的原理，当客户端连接服务器端时，需要分配一个临时端口号，而  Nginx 正是 PHP-FPM 的客户端。端口号的范围并不是无限的，最多也只有6万多。</p><p>我们执行下面的命令，就可以查询系统配置的临时端口号范围：</p><pre><code>$ sysctl net.ipv4.ip_local_port_range\nnet.ipv4.ip_local_port_range=20000 20050\n</code></pre><p>你可以看到，临时端口的范围只有50个，显然太小了 。优化方法很容易想到，增大这个范围就可以了。比如，你可以执行下面的命令，把端口号范围扩展为 “10000 65535”：</p><pre><code>$ sysctl -w net.ipv4.ip_local_port_range=&quot;10000 65535&quot;\nnet.ipv4.ip_local_port_range = 10000 65535\n</code></pre><p>优化完成后，我们再次切换到终端二中，测试性能：</p><pre><code>$ wrk --latency -c 1000 http://192.168.0.30/\n...\n  32308 requests in 10.07s, 6.71MB read\n  Socket errors: connect 0, read 2027, write 0, timeout 433\n  Non-2xx or 3xx responses: 30\nRequests/sec:   3208.58\nTransfer/sec:    682.15KB\n</code></pre><p>这次，异常的响应少多了 ，不过，吞吐量也下降到了 3208。并且，这次还出现了很多 Socket read errors。显然，还得进一步优化。</p><h3>火焰图</h3><p>前面我们已经优化了很多配置。这些配置在优化网络的同时，却也会带来其他资源使用的上升。这样来看，是不是说明其他资源遇到瓶颈了呢？</p><p>我们不妨在终端二中，执行下面的命令，重新启动长时间测试：</p><pre><code># 测试时间30分钟\n$ wrk --latency -c 1000 -d 1800 http://192.168.0.30\n</code></pre><p>然后，切换回终端一中，执行 top ，观察 CPU 和内存的使用：</p><pre><code>$ top\n...\n%Cpu0  : 30.7 us, 48.7 sy,  0.0 ni,  2.3 id,  0.0 wa,  0.0 hi, 18.3 si,  0.0 st\n%Cpu1  : 28.2 us, 46.5 sy,  0.0 ni,  2.0 id,  0.0 wa,  0.0 hi, 23.3 si,  0.0 st\nKiB Mem :  8167020 total,  5867788 free,   490400 used,  1808832 buff/cache\nKiB Swap:        0 total,        0 free,        0 used.  7361172 avail Mem\n\n  PID USER      PR  NI    VIRT    RES    SHR S  %CPU %MEM     TIME+ COMMAND\n20379 systemd+  20   0   38068   8692   2392 R  36.1  0.1   0:28.86 nginx\n20381 systemd+  20   0   38024   8700   2392 S  33.8  0.1   0:29.29 nginx\n 1558 root      20   0 1118172  85868  39044 S  32.8  1.1  22:55.79 dockerd\n20313 root      20   0   11024   5968   3956 S  27.2  0.1   0:22.78 docker-containe\n13730 root      20   0       0      0      0 I   4.0  0.0   0:10.07 kworker/u4:0-ev\n</code></pre><p>从 top 的结果中可以看到，可用内存还是很充足的，但系统 CPU 使用率（sy）比较高，两个 CPU 的系统 CPU 使用率都接近 50%，且空闲 CPU 使用率只有 2%。再看进程部分，CPU 主要被两个 Nginx 进程和两个 docker 相关的进程占用，使用率都是 30% 左右。</p><p>CPU 使用率上升了，该怎么进行分析呢？我想，你已经还记得我们多次用到的 perf，再配合前两节讲过的火焰图，很容易就能找到系统中的热点函数。</p><p>我们保持终端二中的 wrk 继续运行；在终端一中，执行 perf 和 flamegraph 脚本，生成火焰图：</p><pre><code># 执行perf记录事件\n$ perf record -g\n\n# 切换到FlameGraph安装路径执行下面的命令生成火焰图\n$ perf script -i ~/perf.data | ./stackcollapse-perf.pl --all | ./flamegraph.pl &gt; nginx.svg\n</code></pre><p>然后，使用浏览器打开生成的 nginx.svg ，你就可以看到下面的火焰图：</p><p><img src=\"https://static001.geekbang.org/resource/image/89/c6/8933557b5eb8c8f41a629e751fd7f0c6.png?wh=2400*2156\" alt=\"\"></p><p>根据我们讲过的火焰图原理，这个图应该从下往上、沿着调用栈中最宽的函数，来分析执行次数最多的函数。</p><p>这儿中间的 do_syscall_64、tcp_v4_connect、inet_hash_connect 这个堆栈，很明显就是最需要关注的地方。inet_hash_connect() 是 Linux 内核中负责分配临时端口号的函数。所以，这个瓶颈应该还在临时端口的分配上。</p><p>在上一步的“端口号”优化中，临时端口号的范围，已经优化成了 “10000 65535”。这显然是一个非常大的范围，那么，端口号的分配为什么又成了瓶颈呢？</p><p>一时想不到也没关系，我们可以暂且放下，先看看其他因素的影响。再顺着 inet_hash_connect 往堆栈上面查看，下一个热点是__init_check_established 函数。而这个函数的目的，是检查端口号是否可用。结合这一点，你应该可以想到，如果有大量连接占用着端口，那么检查端口号可用的函数，不就会消耗更多的CPU吗？</p><p>实际是否如此呢？我们可以继续在终端一中运行 ss 命令， 查看连接状态统计：</p><pre><code>$ ss -s\nTCP:   32775 (estab 1, closed 32768, orphaned 0, synrecv 0, timewait 32768/0), ports 0\n...\n</code></pre><p>这回可以看到，有大量连接（这儿是 32768）处于 timewait 状态，而 timewait 状态的连接，本身会继续占用端口号。如果这些端口号可以重用，那么自然就可以缩短 __init_check_established 的过程。而 Linux 内核中，恰好有一个 tcp_tw_reuse 选项，用来控制端口号的重用。</p><p>我们在终端一中，运行下面的命令，查询它的配置：</p><pre><code>$ sysctl net.ipv4.tcp_tw_reuse\nnet.ipv4.tcp_tw_reuse = 0\n</code></pre><p>你可以看到，tcp_tw_reuse 是0，也就是禁止状态。其实看到这里，我们就能理解，为什么临时端口号的分配会是系统运行的热点了。当然，优化方法也很容易，把它设置成 1 就可以开启了。</p><p>我把优化后的应用，也打包成了两个 Docker 镜像，你可以执行下面的命令来运行：</p><pre><code># 停止旧的容器\n$ docker rm -f nginx phpfpm\n\n# 使用新镜像启动Nginx和PHP\n$ docker run --name nginx --network host --privileged -itd feisky/nginx-tp:3\n$ docker run --name phpfpm --network host --privileged -itd feisky/php-fpm-tp:3\n</code></pre><p>容器启动后，切换到终端二中，再次测试优化后的效果：</p><pre><code>$ wrk --latency -c 1000 http://192.168.0.30/\n...\n  52119 requests in 10.06s, 10.81MB read\n  Socket errors: connect 0, read 850, write 0, timeout 0\nRequests/sec:   5180.48\nTransfer/sec:      1.07MB\n</code></pre><p>现在的吞吐量已经达到了 5000 多，并且只有少量的 Socket errors，也不再有 Non-2xx or 3xx 的响应了。说明一切终于正常了。</p><p>案例的最后，不要忘记执行下面的命令，删除案例应用：</p><pre><code># 停止nginx和phpfpm容器\n$ docker rm -f nginx phpfpm\n</code></pre><h2>小结</h2><p>今天，我带你一起学习了服务吞吐量下降后的分析方法。其实，从这个案例你也可以看出，性能问题的分析，总是离不开系统和应用程序的原理。</p><p>实际上，分析性能瓶颈，最核心的也正是掌握运用这些原理。</p><ul>\n<li>\n<p>首先，利用各种性能工具，收集想要的性能指标，从而清楚系统和应用程序的运行状态；</p>\n</li>\n<li>\n<p>其次，拿目前状态跟系统原理进行比较，不一致的地方，就是我们要重点分析的对象。</p>\n</li>\n</ul><p>从这个角度出发，再进一步借助 perf、火焰图、bcc 等动态追踪工具，找出热点函数，就可以定位瓶颈的来源，确定相应的优化方法。</p><h2>思考</h2><p>最后，我想邀请你一起来聊聊，你碰到过的吞吐量下降问题。你是怎么分析它们的根源？又是怎么解决的？你可以结合我的讲述，总结自己的思路。</p><p>欢迎在留言区和我讨论，也欢迎把这篇文章分享给你的同事、朋友。我们一起在实战中演练，在交流中进步。</p><p></p>","neighbors":{"left":{"article_title":"51 | 案例篇：动态追踪怎么用？（下）","id":86710},"right":{"article_title":"53 | 套路篇：系统监控的综合思路","id":87980}},"comments":[{"had_liked":false,"id":79889,"user_name":"我来也","can_delete":false,"product_type":"c1","uid":1205253,"ip_address":"","ucode":"773D6104F56767","user_header":"https://static001.geekbang.org/account/avatar/00/12/64/05/6989dce6.jpg","comment_is_top":false,"comment_ctime":1553569271,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"151877424631","product_id":100020901,"comment_content":"[D52打卡]<br>哈哈,看专栏的同时,也在生产环境中执行下查看套接字的命令.<br>居然还发现了一个高并发时的隐患.<br>`ss -ltnp`<br>  有些监听端口半链接队列的值偏小,只有32.而有些都是128.<br>  赶紧查看程序源码,发现是调用框架的接口时未传递backlog的值,导致使用框架默认的值32.<br>  哈哈,这个程序是专门处理客户端连接的,虽然目前Recv-Q都为0,但也确实是一个隐患吧.<br>`ss -s` <br>  看到的连接数和各状态数还正常.<br>`netstat -s | grep -wE &quot;socket|listen&quot;`<br>  结果还比较稳定.<br>像 sysctl 相关的配置,由于没有权限,就无缘查看了.<br><br>不得不说,综合案例篇的内容真不错.老师也是够狠,设置了这么多的坑.填了一个一个又一个.<br>1.内核连接数限制 nf_conntrack.<br>2.php程序的工作进程数量<br>3.半链接队列偏小,导致高并发时的丢包.<br>4.系统分配的临时端口号范围.<br>5.系统的端口复用参数配置.<br><br>调优过程中,有时甚至是一波未平一波又起,很是惊险刺激.<br><br>","like_count":36},{"had_liked":false,"id":79520,"user_name":"2xshu","can_delete":false,"product_type":"c1","uid":1188473,"ip_address":"","ucode":"71584CB9676EDF","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTKsz8j0bAayjSne9iakvjzUmvUdxWEbsM9iasQ74spGFayIgbSE232sH2LOWmaKtx1WqAFDiaYgVPwIQ/132","comment_is_top":false,"comment_ctime":1553504357,"is_pvip":false,"replies":[{"id":"29048","content":"嗯，谢谢指出，是文中的步骤不严谨了。实际上应该再加上两步<br><br>1. 查看调优 tcp_max_syn_backlog<br>2. 观察全连接的状况之后再调优全连接队列","user_name":"作者回复","comment_id":79520,"uid":"1001282","ip_address":"","utype":1,"ctime":1553526345,"user_name_real":"倪朋飞"}],"discussion_count":1,"race_medal":0,"score":"61683046501","product_id":100020901,"comment_content":"老师，有个疑问。<br>套接字优化部分，你用ss -s输出的两个队列，根据“关于 Linux 网络，你必须知道这些（下）”你讲的内容，当链接处于listening状态是，Send-Q和Recv-Q都是半链接队列，但是你这里却都是调的全连接队列啊？不是应该调整tcp_max_syn_backlog吗？","like_count":15,"discussions":[{"author":{"id":1001282,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/47/42/5b55bd1a.jpg","nickname":"倪朋飞","note":"","ucode":"F0FAC195CDE7AC","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":444527,"discussion_content":"嗯，谢谢指出，是文中的步骤不严谨了。实际上应该再加上两步\n\n1. 查看调优 tcp_max_syn_backlog\n2. 观察全连接的状况之后再调优全连接队列","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1553526345,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":80845,"user_name":"xfan","can_delete":false,"product_type":"c1","uid":1315147,"ip_address":"","ucode":"48ED8D498D7F56","user_header":"https://static001.geekbang.org/account/avatar/00/14/11/4b/fa64f061.jpg","comment_is_top":false,"comment_ctime":1553741313,"is_pvip":false,"replies":[{"id":"29608","content":"嗯 也可以的。打包成镜像的是最后优化的结果","user_name":"作者回复","comment_id":80845,"uid":"1001282","ip_address":"","utype":1,"ctime":1554018620,"user_name_real":"倪朋飞"}],"discussion_count":2,"race_medal":0,"score":"18733610497","product_id":100020901,"comment_content":"内核选项 tcp_tw_reuse，不是直接修改内核参数就好了么，为什么还有修改后的tag:3 ,这里不太清楚","like_count":4,"discussions":[{"author":{"id":1001282,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/47/42/5b55bd1a.jpg","nickname":"倪朋飞","note":"","ucode":"F0FAC195CDE7AC","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":444999,"discussion_content":"嗯 也可以的。打包成镜像的是最后优化的结果","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1554018620,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1571649,"avatar":"https://static001.geekbang.org/account/avatar/00/17/fb/41/50ca8761.jpg","nickname":"思考的小蜜蜂","note":"","ucode":"E17F035342B1CE","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":8051,"discussion_content":"docker应用 共用同一内核吧 ","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1567767540,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":79386,"user_name":"ninuxer","can_delete":false,"product_type":"c1","uid":1243135,"ip_address":"","ucode":"5394ADAF2667D6","user_header":"https://wx.qlogo.cn/mmopen/vi_32/PiajxSqBRaEKQMM4m7NHuicr55aRiblTSEWIYe0QqbpyHweaoAbG7j2v7UUElqqeP3Ihrm3UfDPDRb1Hv8LvPwXqA/132","comment_is_top":false,"comment_ctime":1553473158,"is_pvip":false,"replies":[{"id":"29038","content":"还是需要加强原理的理解","user_name":"作者回复","comment_id":79386,"uid":"1001282","ip_address":"","utype":1,"ctime":1553525766,"user_name_real":"倪朋飞"}],"discussion_count":3,"race_medal":0,"score":"18733342342","product_id":100020901,"comment_content":"打卡day55<br>缺乏由现象联想到可能原因的系统性思维～","like_count":5,"discussions":[{"author":{"id":1001282,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/47/42/5b55bd1a.jpg","nickname":"倪朋飞","note":"","ucode":"F0FAC195CDE7AC","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":444477,"discussion_content":"还是需要加强原理的理解","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1553525766,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1129668,"avatar":"https://static001.geekbang.org/account/avatar/00/11/3c/c4/7c2bf312.jpg","nickname":"草根","note":"","ucode":"7C97CB09A4D8F1","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":541834,"discussion_content":"这都是经验","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1640577346,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":2060756,"avatar":"","nickname":"在下蟑螂王","note":"","ucode":"E66A65A327095A","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":302496,"discussion_content":"说明悬疑片看少了，建议工作之余多看悬疑电影","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1598935163,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":79963,"user_name":"泡泡","can_delete":false,"product_type":"c1","uid":1147399,"ip_address":"","ucode":"7F071EE06D7747","user_header":"https://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTKCmqW21Zguv8kPiayib4U42B3jLGk2Y4Leia0fQjnU0Lfgic8BwbdMIePiayDadFKzV9kSt3F8jRicZxxA/132","comment_is_top":false,"comment_ctime":1553584882,"is_pvip":false,"replies":[{"id":"29204","content":"-c是并发数，输出中是每秒请求数，不是一回事","user_name":"作者回复","comment_id":79963,"uid":"1001282","ip_address":"","utype":1,"ctime":1553611011,"user_name_real":"倪朋飞"}],"discussion_count":1,"race_medal":0,"score":"14438486770","product_id":100020901,"comment_content":"wrk命令-c参数用来模拟连接数为1000，<br>为什么输出中的连接数有1910，不理解","like_count":4,"discussions":[{"author":{"id":1001282,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/47/42/5b55bd1a.jpg","nickname":"倪朋飞","note":"","ucode":"F0FAC195CDE7AC","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":444705,"discussion_content":"-c是并发数，输出中是每秒请求数，不是一回事","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1553611011,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":79486,"user_name":"Maxwell","can_delete":false,"product_type":"c1","uid":1086275,"ip_address":"","ucode":"720A00AD472616","user_header":"https://static001.geekbang.org/account/avatar/00/10/93/43/0e84492d.jpg","comment_is_top":false,"comment_ctime":1553495643,"is_pvip":false,"replies":[{"id":"29035","content":"可以在测试的时候同时观察一下网络吞吐和丢包（比如使用sar）","user_name":"作者回复","comment_id":79486,"uid":"1001282","ip_address":"","utype":1,"ctime":1553525551,"user_name_real":"倪朋飞"}],"discussion_count":1,"race_medal":0,"score":"14438397531","product_id":100020901,"comment_content":"在公司局域网下做性能测试，如何判断网络会不会成为压测的瓶颈呢？也就是说如果开了500线程进行压测，会不会因为网络瓶颈，导致请求无法发送到服务器端？","like_count":4,"discussions":[{"author":{"id":1001282,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/47/42/5b55bd1a.jpg","nickname":"倪朋飞","note":"","ucode":"F0FAC195CDE7AC","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":444514,"discussion_content":"可以在测试的时候同时观察一下网络吞吐和丢包（比如使用sar）","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1553525551,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":79439,"user_name":"Lane","can_delete":false,"product_type":"c1","uid":1008257,"ip_address":"","ucode":"F70459D1BBD9F4","user_header":"https://static001.geekbang.org/account/avatar/00/0f/62/81/ad80f427.jpg","comment_is_top":false,"comment_ctime":1553483943,"is_pvip":true,"discussion_count":0,"race_medal":0,"score":"10143418535","product_id":100020901,"comment_content":"一天看2篇，终于追上进度了","like_count":3},{"had_liked":false,"id":255722,"user_name":"儿戏","can_delete":false,"product_type":"c1","uid":1133809,"ip_address":"","ucode":"02956B19F65C7A","user_header":"https://static001.geekbang.org/account/avatar/00/11/4c/f1/8dc266ee.jpg","comment_is_top":false,"comment_ctime":1603418315,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1603418315","product_id":100020901,"comment_content":"老师，请问下 nginx 用wrk 进行压测的时候报[error] 7696#0: *3730171 no live upstreams while connecting to upstream这个错误，用您教的方法都已经优化过了，还是没找到这个问题原因，nginx 连接后端的服务还是Nginx，为了保证后端服务没问题才用nginx。 针对这个问题，我应该如何排除呢？","like_count":0},{"had_liked":false,"id":236432,"user_name":"子杨","can_delete":false,"product_type":"c1","uid":1236803,"ip_address":"","ucode":"EA7555EEE6DECE","user_header":"https://static001.geekbang.org/account/avatar/00/12/df/43/1aa8708a.jpg","comment_is_top":false,"comment_ctime":1595413706,"is_pvip":false,"replies":[{"id":"87354","content":"端口号是16位的，自然有最大限制。你从哪里看到端口号无限？","user_name":"作者回复","comment_id":236432,"uid":"1001282","ip_address":"","utype":1,"ctime":1595426665,"user_name_real":"倪朋飞"}],"discussion_count":2,"race_medal":0,"score":"1595413706","product_id":100020901,"comment_content":"服务端端口号不是近似无限的吗，这里怎么又有限制了。","like_count":0,"discussions":[{"author":{"id":1001282,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/47/42/5b55bd1a.jpg","nickname":"倪朋飞","note":"","ucode":"F0FAC195CDE7AC","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":502057,"discussion_content":"端口号是16位的，自然有最大限制。你从哪里看到端口号无限？","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1595426665,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1171280,"avatar":"https://static001.geekbang.org/account/avatar/00/11/df/50/ed811610.jpg","nickname":"睡着了去做梦","note":"","ucode":"1B553D695BC70D","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":337470,"discussion_content":"客户端的端口有限制，每建立一个连接，客户端都要消耗一个端口","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1608932842,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":226027,"user_name":"jorin@zou","can_delete":false,"product_type":"c1","uid":1564869,"ip_address":"","ucode":"A8CEF7CCF33570","user_header":"https://static001.geekbang.org/account/avatar/00/17/e0/c5/c324a7de.jpg","comment_is_top":false,"comment_ctime":1591931007,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1591931007","product_id":100020901,"comment_content":"这个案例很强","like_count":1},{"had_liked":false,"id":211774,"user_name":"星之所在","can_delete":false,"product_type":"c1","uid":1247574,"ip_address":"","ucode":"03ADB0ADD5FC27","user_header":"https://static001.geekbang.org/account/avatar/00/13/09/56/2628852c.jpg","comment_is_top":false,"comment_ctime":1588002730,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1588002730","product_id":100020901,"comment_content":"老师我的一台8G内存的虚拟机这个nf_conntrack_max最大值能调整多大，太大了貌似也没用对吧","like_count":0},{"had_liked":false,"id":203513,"user_name":"初音未来","can_delete":false,"product_type":"c1","uid":1274518,"ip_address":"","ucode":"3AE23DBC649B97","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/DYAIOgq83erKFNFAQl3ibwlic54a5SQYAMhQYeVtMnSmMahZZjyqG2d66whxbEE3I3IyD07pSmte5DSibr71m6A9g/132","comment_is_top":false,"comment_ctime":1586225091,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1586225091","product_id":100020901,"comment_content":"老师问一个关于docker的问题，修改docker内的应用配置后必须保存新的镜像，然后再启动新镜像吗，这个的话生产环境怎么办","like_count":0},{"had_liked":false,"id":197927,"user_name":"丁乐洪","can_delete":false,"product_type":"c1","uid":1264392,"ip_address":"","ucode":"549CE57AB20B49","user_header":"https://static001.geekbang.org/account/avatar/00/13/4b/08/52954cd7.jpg","comment_is_top":false,"comment_ctime":1585403767,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1585403767","product_id":100020901,"comment_content":"~最近碰到个问题，Rest接口访问返回404，是不是可以用动态跟踪来排查","like_count":0},{"had_liked":false,"id":191309,"user_name":"董皋","can_delete":false,"product_type":"c1","uid":1902756,"ip_address":"","ucode":"2F05C3DDBC18F7","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTJGMphabeneYRlxs1biaO9oKic6Dwgbe312561lE56V93uUHgXXAsGmK1pH18mvpElygoJh8SUtQPUA/132","comment_is_top":false,"comment_ctime":1584762282,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1584762282","product_id":100020901,"comment_content":"打卡","like_count":0},{"had_liked":false,"id":178931,"user_name":"Geek_b04b12","can_delete":false,"product_type":"c1","uid":1112139,"ip_address":"","ucode":"F8705A21FCDF09","user_header":"https://static001.geekbang.org/account/avatar/00/10/f8/4b/5ae62b10.jpg","comment_is_top":false,"comment_ctime":1581858303,"is_pvip":false,"discussion_count":1,"race_medal":0,"score":"1581858303","product_id":100020901,"comment_content":"我的ubuntu系统为什么没有nf_conntrack_count 等一些参数，提示找不到。。","like_count":0,"discussions":[{"author":{"id":2011816,"avatar":"","nickname":"Geek_ba98d6","note":"","ucode":"6ECFC5CE7C0B10","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":281309,"discussion_content":"没有加载模块","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1591709433,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":123593,"user_name":"burner","can_delete":false,"product_type":"c1","uid":1202414,"ip_address":"","ucode":"22B8C4622B6E3C","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTL7cOHiaxJBPvdic53UfP4VC2P4EsyYOGNEwhgYsrP4kw7MFhI7fKQ0GnIiadIHUEYVD85AkrcGv5DLg/132","comment_is_top":false,"comment_ctime":1565708177,"is_pvip":false,"replies":[{"id":"45974","content":"应用过载了","user_name":"作者回复","comment_id":123593,"uid":"1001282","ip_address":"","utype":1,"ctime":1566133753,"user_name_real":"倪朋飞"}],"discussion_count":1,"race_medal":0,"score":"1565708177","product_id":100020901,"comment_content":"老师，系统cpu只用了一半，但是就出现502和499的请求错误，是否意味这应用服务已经过载，还是系统连接数过载，查看netstat发现有28万失败的连接尝试，","like_count":1,"discussions":[{"author":{"id":1001282,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/47/42/5b55bd1a.jpg","nickname":"倪朋飞","note":"","ucode":"F0FAC195CDE7AC","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":462737,"discussion_content":"应用过载了","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1566133753,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":92014,"user_name":"陳先森","can_delete":false,"product_type":"c1","uid":1229006,"ip_address":"","ucode":"0F7AC617E3FE90","user_header":"https://static001.geekbang.org/account/avatar/00/12/c0/ce/fc41ad5e.jpg","comment_is_top":false,"comment_ctime":1557153809,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1557153809","product_id":100020901,"comment_content":"打下卡。","like_count":0},{"had_liked":false,"id":88379,"user_name":"如果","can_delete":false,"product_type":"c1","uid":1320638,"ip_address":"","ucode":"138A3EEEE50850","user_header":"","comment_is_top":false,"comment_ctime":1555914672,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1555914672","product_id":100020901,"comment_content":"DAY52，打卡<br>","like_count":0},{"had_liked":false,"id":86273,"user_name":"腾达","can_delete":false,"product_type":"c1","uid":1079876,"ip_address":"","ucode":"72F9CFBA44FDEE","user_header":"https://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTL9hlAIKQ1sGDu16oWLOHyCSicr18XibygQSMLMjuDvKk73deDlH9aMphFsj41WYJh121aniaqBLiaMNg/132","comment_is_top":false,"comment_ctime":1555336309,"is_pvip":false,"replies":[{"id":"31292","content":"嗯 用在客户端上","user_name":"作者回复","comment_id":86273,"uid":"1001282","ip_address":"","utype":1,"ctime":1555501511,"user_name_real":"倪朋飞"}],"discussion_count":2,"race_medal":0,"score":"1555336309","product_id":100020901,"comment_content":"net.ipv4.tcp_tw_reuse = 1 这里是影响到socket的客户端（nginx作为一个客户端连接php的服务端）的行为吗？ 不是影响到服务端的time_wait数量？ 我弄了个tomcat，用ab压测，tw_use=1, 用ss -s看time_wait 还很高啊，1万多。","like_count":1,"discussions":[{"author":{"id":1001282,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/47/42/5b55bd1a.jpg","nickname":"倪朋飞","note":"","ucode":"F0FAC195CDE7AC","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":446952,"discussion_content":"嗯 用在客户端上","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1555501511,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1010571,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/6b/8b/ccdb819a.jpg","nickname":"W","note":"","ucode":"62AE242DD703B7","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":377751,"discussion_content":"time_wait 本身就是TCP连接中的客户端的状态","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1622806722,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":85487,"user_name":"腾达","can_delete":false,"product_type":"c1","uid":1079876,"ip_address":"","ucode":"72F9CFBA44FDEE","user_header":"https://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTL9hlAIKQ1sGDu16oWLOHyCSicr18XibygQSMLMjuDvKk73deDlH9aMphFsj41WYJh121aniaqBLiaMNg/132","comment_is_top":false,"comment_ctime":1555076735,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1555076735","product_id":100020901,"comment_content":"是的，都对比过了，还包括php的配置，都对比过了","like_count":0},{"had_liked":false,"id":83645,"user_name":"腾达","can_delete":false,"product_type":"c1","uid":1079876,"ip_address":"","ucode":"72F9CFBA44FDEE","user_header":"https://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTL9hlAIKQ1sGDu16oWLOHyCSicr18XibygQSMLMjuDvKk73deDlH9aMphFsj41WYJh121aniaqBLiaMNg/132","comment_is_top":false,"comment_ctime":1554689835,"is_pvip":false,"replies":[{"id":"30640","content":"包括内核选项和Nginx配置吗？","user_name":"作者回复","user_name_real":"倪朋飞","uid":"1001282","ctime":1555076593,"ip_address":"","comment_id":83645,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1554689835","product_id":100020901,"comment_content":"老师，针对我提的问题，您的回复是：“不过你可以docker exec到容器内部查看”，我已经逐一对比过容器内的、我已知的参数了。未发现不同。您能否把最后一次的配置参数上传一下到github？","like_count":0,"discussions":[{"author":{"id":1001282,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/47/42/5b55bd1a.jpg","nickname":"倪朋飞","note":"","ucode":"F0FAC195CDE7AC","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":446112,"discussion_content":"包括内核选项和Nginx配置吗？","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1555076593,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":83174,"user_name":"腾达","can_delete":false,"product_type":"c1","uid":1079876,"ip_address":"","ucode":"72F9CFBA44FDEE","user_header":"https://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTL9hlAIKQ1sGDu16oWLOHyCSicr18XibygQSMLMjuDvKk73deDlH9aMphFsj41WYJh121aniaqBLiaMNg/132","comment_is_top":false,"comment_ctime":1554451072,"is_pvip":false,"replies":[{"id":"30197","content":"优化后的配置没有上传到github里面，不过你可以docker exec到容器内部查看","user_name":"作者回复","user_name_real":"倪朋飞","uid":"1001282","ctime":1554639485,"ip_address":"","comment_id":83174,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1554451072","product_id":100020901,"comment_content":"有2个问题：<br>1、在做perf，制作火焰图的部分，我自己本地看到的函数热点是类似：inet_sendmsg, tcp_write_xmit, e1000_xmit_frame 之类的，后续再对内核参数net.ipv4.tcp_tw_reuse做设置为1的处理后，函数热点依然是这几个。似乎我的机器上的热点是在发送数据，而不是在端口重用？<br>2、老师最后1个步骤的镜像，即：<br>$ docker run --name nginx --network host --privileged -itd feisky&#47;nginx-tp:3<br>$ docker run --name phpfpm --network host --privileged -itd feisky&#47;php-fpm-tp:3<br>这2个的配置能上传一下到github吗？我自己依照优化步骤修改的参数，放到镜像里去跑，压测后Requests&#47;sec只能达到： 1919，而是用老师的tag=3的镜像，压测后得到Requests&#47;sec是3107。我把我已知的参数都对比了一遍，如下：<br>sysctl  net.ipv4.ip_local_port_range=&#39;10000 65535&#39;<br>sysctl  net.ipv4.tcp_tw_reuse=1<br>sysctl  net.ipv4.tcp_fin_timeout=3<br>sysctl  net.ipv4.tcp_max_syn_backlog=8192<br>sysctl  net.netfilter.nf_conntrack_max=1048576<br>sysctl  net.core.somaxconn=65536<br>还有nginx、php的backlog=8192，php的max_children=40(我给了40，不是老师的20)。<br>发现都是一样的。不知道哪里有问题。<br>老师，你能把优化最后的配置文件上传一份到github吗？","like_count":0,"discussions":[{"author":{"id":1001282,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/47/42/5b55bd1a.jpg","nickname":"倪朋飞","note":"","ucode":"F0FAC195CDE7AC","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":445900,"discussion_content":"优化后的配置没有上传到github里面，不过你可以docker exec到容器内部查看","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1554639485,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":82122,"user_name":"腾达","can_delete":false,"product_type":"c1","uid":1079876,"ip_address":"","ucode":"72F9CFBA44FDEE","user_header":"https://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTL9hlAIKQ1sGDu16oWLOHyCSicr18XibygQSMLMjuDvKk73deDlH9aMphFsj41WYJh121aniaqBLiaMNg/132","comment_is_top":false,"comment_ctime":1554125483,"is_pvip":false,"replies":[{"id":"29837","content":"1，2: 实际上修改的是Host的<br>3: 文章中有讲到，每个镜像使用之前的分析就是修改的内容","user_name":"作者回复","user_name_real":"倪朋飞","uid":"1001282","ctime":1554210003,"ip_address":"","comment_id":82122,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1554125483","product_id":100020901,"comment_content":"有3个问题：<br>1.第一次运行 docker run --name nginx --network host --privileged -itd feisky&#47;nginx-tp这个命令，我参考的是对应的github.com&#47;linux-perf-examples&#47;nginx-throughput&#47; 下的一些文件知道了参数配置，问题：nginx里的init.sh运行的时候，sysctl修改的网络参数是作用在docker内的nginx？还是作用在宿主ubuntu上？<br>2.文章里查看、修改网络参数，并未提示说要进docker容器内部去修改，这个是在宿主ubuntu上做的修改吗？比如说到 sysctl -w net.netfilter.nf_conntrack_max=1048576 这个，是直接在宿主ubuntu上修改的吗？<br>3.从docker运行后续集个tag=2，3的镜像开始，例如：docker run --name nginx --network host --privileged -itd feisky&#47;nginx-tp:3 这个命令拉的镜像的参数修改了哪些地方？从哪里可以看到这些参数？","like_count":0,"discussions":[{"author":{"id":1001282,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/47/42/5b55bd1a.jpg","nickname":"倪朋飞","note":"","ucode":"F0FAC195CDE7AC","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":445476,"discussion_content":"1，2: 实际上修改的是Host的\n3: 文章中有讲到，每个镜像使用之前的分析就是修改的内容","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1554210003,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":80781,"user_name":"code2","can_delete":false,"product_type":"c1","uid":1281792,"ip_address":"","ucode":"BBA5748FB6A01C","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/8OPzdpDraQMvCNWAicicDt54sDaIYJZicBLfMyibXVs4V0ZibEdkZlbzxxL7aGpRoeyvibag5LaAaaGKSdwYQMY2hUrQ/132","comment_is_top":false,"comment_ctime":1553733671,"is_pvip":false,"replies":[{"id":"29590","content":"桌面Linux和服务器都适用的","user_name":"作者回复","user_name_real":"倪朋飞","uid":"1001282","ctime":1554003688,"ip_address":"","comment_id":80781,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1553733671","product_id":100020901,"comment_content":"用桌面linux分析服务器性能，有些勉强。","like_count":0,"discussions":[{"author":{"id":1001282,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/47/42/5b55bd1a.jpg","nickname":"倪朋飞","note":"","ucode":"F0FAC195CDE7AC","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":444972,"discussion_content":"桌面Linux和服务器都适用的","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1554003688,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":80148,"user_name":"夜空中最亮的星","can_delete":false,"product_type":"c1","uid":1267566,"ip_address":"","ucode":"ADC3E7B6789955","user_header":"https://static001.geekbang.org/account/avatar/00/13/57/6e/b6795c44.jpg","comment_is_top":false,"comment_ctime":1553609799,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1553609799","product_id":100020901,"comment_content":"报个到","like_count":1},{"had_liked":false,"id":80041,"user_name":"Maxwell","can_delete":false,"product_type":"c1","uid":1086275,"ip_address":"","ucode":"720A00AD472616","user_header":"https://static001.geekbang.org/account/avatar/00/10/93/43/0e84492d.jpg","comment_is_top":false,"comment_ctime":1553598589,"is_pvip":false,"replies":[{"id":"29198","content":"sar可以查看很多网络统计数据，可以看看-n选项的文档 ","user_name":"作者回复","user_name_real":"倪朋飞","uid":"1001282","ctime":1553610714,"ip_address":"","comment_id":80041,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1553598589","product_id":100020901,"comment_content":"Sar测试的只是网络的发送和接收数据吧，好像并不能发现网络的瓶颈导致压测请求无法发送至服务器端？","like_count":0,"discussions":[{"author":{"id":1001282,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/47/42/5b55bd1a.jpg","nickname":"倪朋飞","note":"","ucode":"F0FAC195CDE7AC","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":444735,"discussion_content":"sar可以查看很多网络统计数据，可以看看-n选项的文档 ","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1553610714,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":79990,"user_name":"Maxwell","can_delete":false,"product_type":"c1","uid":1086275,"ip_address":"","ucode":"720A00AD472616","user_header":"https://static001.geekbang.org/account/avatar/00/10/93/43/0e84492d.jpg","comment_is_top":false,"comment_ctime":1553589471,"is_pvip":false,"replies":[{"id":"29202","content":"火焰图的介绍在49篇，你可以照着分析下看看","user_name":"作者回复","user_name_real":"倪朋飞","uid":"1001282","ctime":1553610919,"ip_address":"","comment_id":79990,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1553589471","product_id":100020901,"comment_content":"这个火焰图咋分析？我这边和你的好像不太一样，系统我也是ubantu18.04<br>","like_count":0,"discussions":[{"author":{"id":1001282,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/47/42/5b55bd1a.jpg","nickname":"倪朋飞","note":"","ucode":"F0FAC195CDE7AC","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":444714,"discussion_content":"火焰图的介绍在49篇，你可以照着分析下看看","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1553610919,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":79988,"user_name":"Maxwell","can_delete":false,"product_type":"c1","uid":1086275,"ip_address":"","ucode":"720A00AD472616","user_header":"https://static001.geekbang.org/account/avatar/00/10/93/43/0e84492d.jpg","comment_is_top":false,"comment_ctime":1553589129,"is_pvip":false,"replies":[{"id":"29203","content":"看看socket errors这一行，有错误的类型。上面这个结果都是read错误","user_name":"作者回复","user_name_real":"倪朋飞","uid":"1001282","ctime":1553610960,"ip_address":"","comment_id":79988,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1553589129","product_id":100020901,"comment_content":"运行最后一次docker镜像，wrk测试结果中还是有很多error(read ),请问这个error指的是什么错误呢？<br>Running 10s test @ http:&#47;&#47;192.168.32.145<br>  2 threads and 1000 connections<br>  Thread Stats   Avg      Stdev     Max   +&#47;- Stdev<br>    Latency    97.36ms   22.29ms 394.39ms   90.57%<br>    Req&#47;Sec     5.01k     1.00k    7.01k    75.00%<br>  Latency Distribution<br>     50%   91.10ms<br>     75%  100.83ms<br>     90%  117.53ms<br>     99%  195.90ms<br>  99832 requests in 10.08s, 20.72MB read<br>  Socket errors: connect 0, read 11483, write 0, timeout 0<br>Requests&#47;sec:   9902.41<br>Transfer&#47;sec:      2.05MB<br>","like_count":0,"discussions":[{"author":{"id":1001282,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/47/42/5b55bd1a.jpg","nickname":"倪朋飞","note":"","ucode":"F0FAC195CDE7AC","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":444712,"discussion_content":"看看socket errors这一行，有错误的类型。上面这个结果都是read错误","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1553610960,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":79847,"user_name":"2xshu","can_delete":false,"product_type":"c1","uid":1188473,"ip_address":"","ucode":"71584CB9676EDF","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTKsz8j0bAayjSne9iakvjzUmvUdxWEbsM9iasQ74spGFayIgbSE232sH2LOWmaKtx1WqAFDiaYgVPwIQ/132","comment_is_top":false,"comment_ctime":1553563615,"is_pvip":false,"replies":[{"id":"29335","content":"ss -s 或者 ss -lnt","user_name":"作者回复","user_name_real":"倪朋飞","uid":"1001282","ctime":1553698368,"ip_address":"","comment_id":79847,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1553563615","product_id":100020901,"comment_content":"老师，怎么观察全链接的状况哇？ss -s？","like_count":0,"discussions":[{"author":{"id":1001282,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/47/42/5b55bd1a.jpg","nickname":"倪朋飞","note":"","ucode":"F0FAC195CDE7AC","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":444651,"discussion_content":"ss -s 或者 ss -lnt","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1553698368,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":79815,"user_name":"Leon📷","can_delete":false,"product_type":"c1","uid":1219496,"ip_address":"","ucode":"B9BBD1EFAAE5A2","user_header":"https://static001.geekbang.org/account/avatar/00/12/9b/a8/6a391c66.jpg","comment_is_top":false,"comment_ctime":1553560862,"is_pvip":false,"replies":[{"id":"29336","content":"找不到符号表，这个可以忽略，containerd-shim不是分析的目标","user_name":"作者回复","user_name_real":"倪朋飞","uid":"1001282","ctime":1553698399,"ip_address":"","comment_id":79815,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1553560862","product_id":100020901,"comment_content":"老师,我使用root@ubuntu:~&#47;FlameGraph# perf script -i ~&#47;perf.data | .&#47;stackcollapse-perf.pl --all<br>报出Failed to open &#47;usr&#47;bin&#47;containerd-shim, continuing without symbols错误，在网上搜了下也没找到正确答案，这是什么情况","like_count":0,"discussions":[{"author":{"id":1001282,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/47/42/5b55bd1a.jpg","nickname":"倪朋飞","note":"","ucode":"F0FAC195CDE7AC","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":444638,"discussion_content":"找不到符号表，这个可以忽略，containerd-shim不是分析的目标","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1553698399,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]}]}