{"id":101521,"title":"19 | 深入理解迭代器和生成器","content":"<p>你好，我是景霄。</p><p>在第一次接触 Python 的时候，你可能写过类似 <code>for i in [2, 3, 5, 7, 11, 13]: print(i)</code> 这样的语句。for in 语句理解起来很直观形象，比起 C++ 和 java 早期的 <code>for (int i = 0; i &lt; n; i ++) printf(\"%d\\n\", a[i])</code> 这样的语句，不知道简洁清晰到哪里去了。</p><p>但是，你想过 Python 在处理 for in 语句的时候，具体发生了什么吗？什么样的对象可以被 for in 来枚举呢？</p><p>这一节课，我们深入到  Python 的容器类型实现底层去走走，了解一种叫做迭代器和生成器的东西。</p><h2>你肯定用过的容器、可迭代对象和迭代器</h2><p>容器这个概念非常好理解。我们说过，在Python 中一切皆对象，对象的抽象就是类，而对象的集合就是容器。</p><p>列表（list: [0, 1, 2]），元组（tuple: (0, 1, 2)），字典（dict: {0:0, 1:1, 2:2}），集合（set: set([0, 1, 2])）都是容器。对于容器，你可以很直观地想象成多个元素在一起的单元；而不同容器的区别，正是在于内部数据结构的实现方法。然后，你就可以针对不同场景，选择不同时间和空间复杂度的容器。</p><p>所有的容器都是可迭代的（iterable）。这里的迭代，和枚举不完全一样。迭代可以想象成是你去买苹果，卖家并不告诉你他有多少库存。这样，每次你都需要告诉卖家，你要一个苹果，然后卖家采取行为：要么给你拿一个苹果；要么告诉你，苹果已经卖完了。你并不需要知道，卖家在仓库是怎么摆放苹果的。</p><!-- [[[read_end]]] --><p>严谨地说，迭代器（iterator）提供了一个 next 的方法。调用这个方法后，你要么得到这个容器的下一个对象，要么得到一个 StopIteration 的错误（苹果卖完了）。你不需要像列表一样指定元素的索引，因为字典和集合这样的容器并没有索引一说。比如，字典采用哈希表实现，那么你就只需要知道，next 函数可以不重复不遗漏地一个一个拿到所有元素即可。</p><p>而可迭代对象，通过 iter() 函数返回一个迭代器，再通过 next() 函数就可以实现遍历。for in 语句将这个过程隐式化，所以，你只需要知道它大概做了什么就行了。</p><p>我们来看下面这段代码，主要向你展示怎么判断一个对象是否可迭代。当然，这还有另一种做法，是 isinstance(obj, Iterable)。</p><pre><code>def is_iterable(param):\n    try: \n        iter(param) \n        return True\n    except TypeError:\n        return False\n\nparams = [\n    1234,\n    '1234',\n    [1, 2, 3, 4],\n    set([1, 2, 3, 4]),\n    {1:1, 2:2, 3:3, 4:4},\n    (1, 2, 3, 4)\n]\n    \nfor param in params:\n    print('{} is iterable? {}'.format(param, is_iterable(param)))\n\n########## 输出 ##########\n\n1234 is iterable? False\n1234 is iterable? True\n[1, 2, 3, 4] is iterable? True\n{1, 2, 3, 4} is iterable? True\n{1: 1, 2: 2, 3: 3, 4: 4} is iterable? True\n(1, 2, 3, 4) is iterable? True\n</code></pre><p>通过这段代码，你就可以知道，给出的类型中，除了数字 1234 之外，其它的数据类型都是可迭代的。</p><h2>生成器，又是什么？</h2><p>据我所知，很多人对生成器这个概念会比较陌生，因为生成器在很多常用语言中，并没有相对应的模型。</p><p>这里，你只需要记着一点：<strong>生成器是懒人版本的迭代器</strong>。</p><p>我们知道，在迭代器中，如果我们想要枚举它的元素，这些元素需要事先生成。这里，我们先来看下面这个简单的样例。</p><pre><code>import os\nimport psutil\n\n# 显示当前 python 程序占用的内存大小\ndef show_memory_info(hint):\n    pid = os.getpid()\n    p = psutil.Process(pid)\n    \n    info = p.memory_full_info()\n    memory = info.uss / 1024. / 1024\n    print('{} memory used: {} MB'.format(hint, memory))\n</code></pre><pre><code>def test_iterator():\n    show_memory_info('initing iterator')\n    list_1 = [i for i in range(100000000)]\n    show_memory_info('after iterator initiated')\n    print(sum(list_1))\n    show_memory_info('after sum called')\n\ndef test_generator():\n    show_memory_info('initing generator')\n    list_2 = (i for i in range(100000000))\n    show_memory_info('after generator initiated')\n    print(sum(list_2))\n    show_memory_info('after sum called')\n\n%time test_iterator()\n%time test_generator()\n\n########## 输出 ##########\n\niniting iterator memory used: 48.9765625 MB\nafter iterator initiated memory used: 3920.30078125 MB\n4999999950000000\nafter sum called memory used: 3920.3046875 MB\nWall time: 17 s\niniting generator memory used: 50.359375 MB\nafter generator initiated memory used: 50.359375 MB\n4999999950000000\nafter sum called memory used: 50.109375 MB\nWall time: 12.5 s\n</code></pre><p>声明一个迭代器很简单，<code>[i for i in range(100000000)]</code>就可以生成一个包含一亿元素的列表。每个元素在生成后都会保存到内存中，你通过代码可以看到，它们占用了巨量的内存，内存不够的话就会出现 OOM 错误。</p><p>不过，我们并不需要在内存中同时保存这么多东西，比如对元素求和，我们只需要知道每个元素在相加的那一刻是多少就行了，用完就可以扔掉了。</p><p>于是，生成器的概念应运而生，在你调用 next() 函数的时候，才会生成下一个变量。生成器在 Python 的写法是用小括号括起来，<code>(i for i in range(100000000))</code>，即初始化了一个生成器。</p><p>这样一来，你可以清晰地看到，生成器并不会像迭代器一样占用大量内存，只有在被使用的时候才会调用。而且生成器在初始化的时候，并不需要运行一次生成操作，相比于 test_iterator() ，test_generator() 函数节省了一次生成一亿个元素的过程，因此耗时明显比迭代器短。</p><p>到这里，你可能说，生成器不过如此嘛，我有的是钱，不就是多占一些内存和计算资源嘛，我多出点钱就是了呗。</p><p>哪怕你是土豪，请坐下先喝点茶，再听我继续讲完，这次，我们来实现一个自定义的生成器。</p><h2>生成器，还能玩什么花样？</h2><p>数学中有一个恒等式，<code>(1 + 2 + 3 + ... + n)^2 = 1^3 + 2^3 + 3^3 + ... + n^3</code>，想必你高中就应该学过它。现在，我们来验证一下这个公式的正确性。老规矩，先放代码，你先自己阅读一下，看不懂的也不要紧，接下来我再来详细讲解。</p><pre><code>def generator(k):\n    i = 1\n    while True:\n        yield i ** k\n        i += 1\n\ngen_1 = generator(1)\ngen_3 = generator(3)\nprint(gen_1)\nprint(gen_3)\n\ndef get_sum(n):\n    sum_1, sum_3 = 0, 0\n    for i in range(n):\n        next_1 = next(gen_1)\n        next_3 = next(gen_3)\n        print('next_1 = {}, next_3 = {}'.format(next_1, next_3))\n        sum_1 += next_1\n        sum_3 += next_3\n    print(sum_1 * sum_1, sum_3)\n\nget_sum(8)\n\n########## 输出 ##########\n\n&lt;generator object generator at 0x000001E70651C4F8&gt;\n&lt;generator object generator at 0x000001E70651C390&gt;\nnext_1 = 1, next_3 = 1\nnext_1 = 2, next_3 = 8\nnext_1 = 3, next_3 = 27\nnext_1 = 4, next_3 = 64\nnext_1 = 5, next_3 = 125\nnext_1 = 6, next_3 = 216\nnext_1 = 7, next_3 = 343\nnext_1 = 8, next_3 = 512\n1296 1296\n</code></pre><p>这段代码中，你首先注意一下 generator() 这个函数，它返回了一个生成器。</p><p>接下来的yield 是魔术的关键。对于初学者来说，你可以理解为，函数运行到这一行的时候，程序会从这里暂停，然后跳出，不过跳到哪里呢？答案是 next() 函数。那么 <code>i ** k</code> 是干什么的呢？它其实成了 next() 函数的返回值。</p><p>这样，每次 next(gen) 函数被调用的时候，暂停的程序就又复活了，从 yield 这里向下继续执行；同时注意，局部变量 i 并没有被清除掉，而是会继续累加。我们可以看到 next_1 从 1 变到 8，next_3 从 1 变到 512。</p><p>聪明的你应该注意到了，这个生成器居然可以一直进行下去！没错，事实上，迭代器是一个有限集合，生成器则可以成为一个无限集。我只管调用 next()，生成器根据运算会自动生成新的元素，然后返回给你，非常便捷。</p><p>到这里，土豪同志应该也坐不住了吧，那么，还能再给力一点吗？</p><p>别急，我们再来看一个问题：给定一个 list 和一个指定数字，求这个数字在 list 中的位置。</p><p>下面这段代码你应该不陌生，也就是常规做法，枚举每个元素和它的 index，判断后加入 result，最后返回。</p><pre><code>def index_normal(L, target):\n    result = []\n    for i, num in enumerate(L):\n        if num == target:\n            result.append(i)\n    return result\n\nprint(index_normal([1, 6, 2, 4, 5, 2, 8, 6, 3, 2], 2))\n\n########## 输出 ##########\n\n[2, 5, 9]\n</code></pre><p>那么使用迭代器可以怎么做呢？二话不说，先看代码。</p><pre><code>def index_generator(L, target):\n    for i, num in enumerate(L):\n        if num == target:\n            yield i\n\nprint(list(index_generator([1, 6, 2, 4, 5, 2, 8, 6, 3, 2], 2)))\n\n########## 输出 ##########\n\n[2, 5, 9]\n</code></pre><p>聪明的你应该看到了明显的区别，我就不做过多解释了。唯一需要强调的是， index_generator 会返回一个 Generator 对象，需要使用 list 转换为列表后，才能用 print 输出。</p><p>这里我再多说两句。在Python 语言规范中，用更少、更清晰的代码实现相同功能，一直是被推崇的做法，因为这样能够很有效提高代码的可读性，减少出错概率，也方便别人快速准确理解你的意图。当然，要注意，这里“更少”的前提是清晰，而不是使用更多的魔术操作，虽说减少了代码却反而增加了阅读的难度。</p><p>回归正题。接下来我们再来看一个问题：给定两个序列，判定第一个是不是第二个的子序列。（LeetCode 链接如下：<a href=\"https://leetcode.com/problems/is-subsequence/\">https://leetcode.com/problems/is-subsequence/</a> ）</p><p>先来解读一下这个问题本身。序列就是列表，子序列则指的是，一个列表的元素在第二个列表中都按顺序出现，但是并不必挨在一起。举个例子，[1, 3, 5] 是 [1, 2, 3, 4, 5] 的子序列，[1, 4, 3] 则不是。</p><p>要解决这个问题，常规算法是贪心算法。我们维护两个指针指向两个列表的最开始，然后对第二个序列一路扫过去，如果某个数字和第一个指针指的一样，那么就把第一个指针前进一步。第一个指针移出第一个序列最后一个元素的时候，返回 True，否则返回 False。</p><p>不过，这个算法正常写的话，写下来怎么也得十行左右。</p><p>那么如果我们用迭代器和生成器呢？</p><pre><code>def is_subsequence(a, b):\n    b = iter(b)\n    return all(i in b for i in a)\n\nprint(is_subsequence([1, 3, 5], [1, 2, 3, 4, 5]))\nprint(is_subsequence([1, 4, 3], [1, 2, 3, 4, 5]))\n\n########## 输出 ##########\n\nTrue\nFalse\n</code></pre><p>这简短的几行代码，你是不是看得一头雾水，不知道发生了什么？</p><p>来，我们先把这段代码复杂化，然后一步步看。</p><pre><code>def is_subsequence(a, b):\n    b = iter(b)\n    print(b)\n\n    gen = (i for i in a)\n    print(gen)\n\n    for i in gen:\n        print(i)\n\n    gen = ((i in b) for i in a)\n    print(gen)\n\n    for i in gen:\n        print(i)\n\n    return all(((i in b) for i in a))\n\nprint(is_subsequence([1, 3, 5], [1, 2, 3, 4, 5]))\nprint(is_subsequence([1, 4, 3], [1, 2, 3, 4, 5]))\n\n########## 输出 ##########\n\n&lt;list_iterator object at 0x000001E7063D0E80&gt;\n&lt;generator object is_subsequence.&lt;locals&gt;.&lt;genexpr&gt; at 0x000001E70651C570&gt;\n1\n3\n5\n&lt;generator object is_subsequence.&lt;locals&gt;.&lt;genexpr&gt; at 0x000001E70651C5E8&gt;\nTrue\nTrue\nTrue\nFalse\n&lt;list_iterator object at 0x000001E7063D0D30&gt;\n&lt;generator object is_subsequence.&lt;locals&gt;.&lt;genexpr&gt; at 0x000001E70651C5E8&gt;\n1\n4\n3\n&lt;generator object is_subsequence.&lt;locals&gt;.&lt;genexpr&gt; at 0x000001E70651C570&gt;\nTrue\nTrue\nFalse\nFalse\n</code></pre><p>首先，第二行的<code>b = iter(b)</code>，把列表 b 转化成了一个迭代器，这里我先不解释为什么要这么做。</p><p>接下来的<code>gen = (i for i in a)</code>语句很好理解，产生一个生成器，这个生成器可以遍历对象 a，因此能够输出 1, 3, 5。而 <code>(i in b)</code>需要好好揣摩，这里你是不是能联想到 for in 语句？</p><p>没错，这里的<code>(i in b)</code>，大致等价于下面这段代码：</p><pre><code>while True:\n    val = next(b)\n    if val == i:\n        yield True\n</code></pre><p>这里非常巧妙地利用生成器的特性，next() 函数运行的时候，保存了当前的指针。比如再看下面这个示例：</p><pre><code>b = (i for i in range(5))\n\nprint(2 in b)\nprint(4 in b)\nprint(3 in b)\n\n########## 输出 ##########\n\nTrue\nTrue\nFalse\n</code></pre><p>至于最后的 all() 函数，就很简单了。它用来判断一个迭代器的元素是否全部为 True，如果是则返回 True，否则就返回 False.</p><p>于是到此，我们就很优雅地解决了这道面试题。不过你一定注意，面试的时候尽量不要用这种技巧，因为你的面试官有可能并不知道生成器的用法，他们也没有看过我的极客时间专栏。不过，在这个技术知识点上，在实际工作的应用上，你已经比很多人更加熟练了。继续加油！</p><h2>总结</h2><p>总结一下，今天我们讲了四种不同的对象，分别是容器、可迭代对象、迭代器和生成器。</p><ul>\n<li>容器是可迭代对象，可迭代对象调用 iter() 函数，可以得到一个迭代器。迭代器可以通过 next() 函数来得到下一个元素，从而支持遍历。</li>\n<li>生成器是一种特殊的迭代器（注意这个逻辑关系反之不成立）。使用生成器，你可以写出来更加清晰的代码；合理使用生成器，可以降低内存占用、优化程序结构、提高程序速度。</li>\n<li>生成器在 Python 2 的版本上，是协程的一种重要实现方式；而 Python 3.5 引入 async await 语法糖后，生成器实现协程的方式就已经落后了。我们会在下节课，继续深入讲解 Python 协程。</li>\n</ul><h2>思考题</h2><p>最后给你留一个思考题。对于一个有限元素的生成器，如果迭代完成后，继续调用 next() ，会发生什么呢？生成器可以遍历多次吗？</p><p>欢迎留言和我讨论，也欢迎你把这篇文章分享给你的同事、朋友，一起在交流中进步。</p><p></p>","neighbors":{"left":{"article_title":"18 | metaclass，是潘多拉魔盒还是阿拉丁神灯？","id":101288},"right":{"article_title":"20 | 揭秘 Python 协程","id":101855}},"comments":[{"had_liked":false,"id":106274,"user_name":"Jingxiao","can_delete":false,"product_type":"c1","uid":1259521,"ip_address":"","ucode":"EB966BB87132F6","user_header":"https://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTJJOlibibPFEWOib8ib7RtfAtxND5FUqCxxoeTuLAbBI9ic23xuwdXT4IyiaWq3Fic9RgEAYI0lBTbEp2rcg/132","comment_is_top":true,"comment_ctime":1561252124,"is_pvip":false,"discussion_count":4,"race_medal":0,"score":"9.2233722188046991e+18","product_id":100026901,"comment_content":"思考题答案：<br>很多同学的回复非常正确，生成器只能遍历一次，继续调用 next() 会 raise StopIteration。只有复位生成器才能重新进行遍历。","like_count":43,"discussions":[{"author":{"id":1044785,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/f1/31/5001390b.jpg","nickname":"Lonely绿豆蛙","note":"","ucode":"0862179B614974","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":161242,"discussion_content":"那请问如何复位生成器呢？","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1580879767,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":1,"child_discussions":[{"author":{"id":1828065,"avatar":"","nickname":"曾伟杰","note":"","ucode":"3DC3F0CC443E90","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1044785,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/f1/31/5001390b.jpg","nickname":"Lonely绿豆蛙","note":"","ucode":"0862179B614974","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":260992,"discussion_content":"重新生成一个生成器","likes_number":2,"is_delete":false,"is_hidden":false,"ctime":1588924417,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":161242,"ip_address":""},"score":260992,"extra":""}]},{"author":{"id":2252211,"avatar":"https://static001.geekbang.org/account/avatar/00/22/5d/b3/aa2c17f0.jpg","nickname":"🔥 如初之光","note":"","ucode":"0FB2BA12D4B15A","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":332703,"discussion_content":"上面有个列子   很有意思   判断4在[0，1，2，3，4]里了，在判断3返回的就是false了","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1607318299,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1187197,"avatar":"https://static001.geekbang.org/account/avatar/00/12/1d/7d/368df396.jpg","nickname":"somenzz","note":"","ucode":"EA59A170DF8910","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":310977,"discussion_content":"这里是迭代器吧","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1602163745,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":105905,"user_name":"John Si","can_delete":false,"product_type":"c1","uid":1526611,"ip_address":"","ucode":"705B90724A4BD4","user_header":"https://static001.geekbang.org/account/avatar/00/17/4b/53/67c08006.jpg","comment_is_top":true,"comment_ctime":1561102440,"is_pvip":false,"replies":[{"id":"38391","content":"例子已经在文中举了不少，对于如何娴熟地在编程中运用，这个需要长时间的积累，从阅读别人高质量的源代码，自己主动有意识地在自己的项目中思考，最后才会形成质变，内化成自己的能力，从而清楚地知道哪里应该用高级语法，高级工具，哪里应该简单的一笔带过。Python 的生成器无疑是最有用的特性，但也是最不广泛被使用的特性，这一章的目的，能够让你对生成器有基本的了解，下次在代码中遇到，能够说，“这个我知道，这个我懂！”便已足够。加油！","user_name":"作者回复","user_name_real":"高山流水","uid":"1513504","ctime":1561240202,"ip_address":"","comment_id":105905,"utype":1}],"discussion_count":3,"race_medal":0,"score":"9.2233722016246006e+18","product_id":100026901,"comment_content":"我不知道如何把这技巧运用在编程中，老师能否举几个例子来说明一下呢？谢谢","like_count":38,"discussions":[{"author":{"id":1513504,"avatar":"https://static001.geekbang.org/account/avatar/00/17/18/20/75ea3b20.jpg","nickname":"高山流水","note":"","ucode":"71E513B5937481","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":454861,"discussion_content":"例子已经在文中举了不少，对于如何娴熟地在编程中运用，这个需要长时间的积累，从阅读别人高质量的源代码，自己主动有意识地在自己的项目中思考，最后才会形成质变，内化成自己的能力，从而清楚地知道哪里应该用高级语法，高级工具，哪里应该简单的一笔带过。Python 的生成器无疑是最有用的特性，但也是最不广泛被使用的特性，这一章的目的，能够让你对生成器有基本的了解，下次在代码中遇到，能够说，“这个我知道，这个我懂！”便已足够。加油！","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1561240202,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":2344816,"avatar":"https://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTLCbnGYOhwYmBwytX5e8Dd3ll9JwjUgaS5QK2JnbxrNdwJiaFksjsKQXBw9OuLZicrCB7unnS3ZGLOw/132","nickname":"米勒","note":"","ucode":"9C02A167B593A9","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":342321,"discussion_content":"广泛使用，看起代码来很头疼。。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1610636092,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1126441,"avatar":"https://static001.geekbang.org/account/avatar/00/11/30/29/d6816ebf.jpg","nickname":"小侠龙旋风","note":"","ucode":"073F3924A99835","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":183,"discussion_content":"老师，为什么说生成器是最不广泛被使用的特性？","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1561261382,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":105661,"user_name":"时间小偷","can_delete":false,"product_type":"c1","uid":1516796,"ip_address":"","ucode":"0EBC79DDD822C3","user_header":"","comment_is_top":false,"comment_ctime":1561071152,"is_pvip":false,"discussion_count":2,"race_medal":0,"score":"280733945392","product_id":100026901,"comment_content":"上一篇的分享mateclass写得看不懂，老师可否重新通俗写一下，分享嘉宾的风格跟老师不太一样啊","like_count":66,"discussions":[{"author":{"id":1918922,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/8P1a8D3WButrPQicebnKkrAiaI1lWUfZicWPtWfXHbm9Xv7qb1tkJ7eiaxVG2JfO8mLJt7AzmPXjn0MsgjKBWujFfQ/132","nickname":"余皇南","note":"","ucode":"3CCED29D3D513D","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":213103,"discussion_content":"可以结合《python设计模式》单例模式看看metaclass，另外可以多搜索网络知识进行互补理解，毕竟每个作者的讲解思路是不一样的","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1585051703,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":1,"child_discussions":[{"author":{"id":1919541,"avatar":"https://static001.geekbang.org/account/avatar/00/1d/4a/35/66caeed9.jpg","nickname":"完美坚持","note":"","ucode":"AE0261D8DDEF64","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1918922,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/8P1a8D3WButrPQicebnKkrAiaI1lWUfZicWPtWfXHbm9Xv7qb1tkJ7eiaxVG2JfO8mLJt7AzmPXjn0MsgjKBWujFfQ/132","nickname":"余皇南","note":"","ucode":"3CCED29D3D513D","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":310094,"discussion_content":"确实是，不同的老师是常态，应该是我们能适应不同的风格，而不是妄想让老师适合我们的节奏","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1601614436,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":213103,"ip_address":""},"score":310094,"extra":""}]}]},{"had_liked":false,"id":105766,"user_name":"TKbook","can_delete":false,"product_type":"c1","uid":1073829,"ip_address":"","ucode":"F6E0E99CC79059","user_header":"https://static001.geekbang.org/account/avatar/00/10/62/a5/43aa0c27.jpg","comment_is_top":false,"comment_ctime":1561082055,"is_pvip":false,"replies":[{"id":"38388","content":"解释的很好","user_name":"作者回复","user_name_real":"高山流水","uid":"1513504","ctime":1561239813,"ip_address":"","comment_id":105766,"utype":1}],"discussion_count":6,"race_medal":0,"score":"207719512263","product_id":100026901,"comment_content":"def is_subsequence(a, b):<br>    b = iter(b)<br>    print(b)<br><br>    gen = (i for i in a)<br>    print(gen)<br><br>    for i in gen:<br>        print(i)<br><br>    gen = ((i in b) for i in a)<br>    print(gen)<br><br>    for i in gen:<br>        print(i)<br><br>    return all(((i in b) for i in a))<br><br>print(is_subsequence([1, 3, 5], [1, 2, 3, 4, 5]))<br>print(is_subsequence([1, 4, 3], [1, 2, 3, 4, 5]))<br><br>########## 输出 ##########<br><br>&lt;list_iterator object at 0x000001E7063D0E80&gt;<br>&lt;generator object is_subsequence.&lt;locals&gt;.&lt;genexpr&gt; at 0x000001E70651C570&gt;<br>1<br>3<br>5<br>&lt;generator object is_subsequence.&lt;locals&gt;.&lt;genexpr&gt; at 0x000001E70651C5E8&gt;<br>True<br>True<br>True<br>False<br>&lt;list_iterator object at 0x000001E7063D0D30&gt;<br>&lt;generator object is_subsequence.&lt;locals&gt;.&lt;genexpr&gt; at 0x000001E70651C5E8&gt;<br>1<br>4<br>3<br>&lt;generator object is_subsequence.&lt;locals&gt;.&lt;genexpr&gt; at 0x000001E70651C570&gt;<br>True<br>True<br>False<br>False<br><br>为什么这里的print(is_subsequence([1, 3, 5], [1, 2, 3, 4, 5]))会返回False？<br>解释一下：<br>因为<br>    gen = ((i in b) for i in a)<br>    print(gen)<br>    <br>    for i in gen:<br>        print(i)<br>这段代码的 for i in gen 已经b的迭代器消耗完，此时的b已经是个空的迭代器。所以，再执行all(((i in b) for i in a))，就是False了。<br>","like_count":49,"discussions":[{"author":{"id":1513504,"avatar":"https://static001.geekbang.org/account/avatar/00/17/18/20/75ea3b20.jpg","nickname":"高山流水","note":"","ucode":"71E513B5937481","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":454802,"discussion_content":"解释的很好","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1561239813,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":2347194,"avatar":"https://static001.geekbang.org/account/avatar/00/23/d0/ba/98bc816b.jpg","nickname":"Shu🐹","note":"","ucode":"29521F803CE2CC","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":339078,"discussion_content":"我还是没明白，那为什么    \ngen = (i for i in a)\n    print(gen)\n\n    for i in gen:\n        print(i)\n没有消耗完a，下面的方法还是output了true呢？","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1609495572,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":2,"child_discussions":[{"author":{"id":2347422,"avatar":"https://static001.geekbang.org/account/avatar/00/23/d1/9e/69475316.jpg","nickname":"Sen","note":"","ucode":"97C752839D0A7B","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":2347194,"avatar":"https://static001.geekbang.org/account/avatar/00/23/d0/ba/98bc816b.jpg","nickname":"Shu🐹","note":"","ucode":"29521F803CE2CC","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":358594,"discussion_content":"因为b = iter(b) ，b现在是迭代器。\n而a是列表，是可迭代对象，不是迭代器，没有消耗。","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1615995771,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":339078,"ip_address":""},"score":358594,"extra":""},{"author":{"id":2369413,"avatar":"https://static001.geekbang.org/account/avatar/00/24/27/85/ddeeaf30.jpg","nickname":"dived","note":"","ucode":"141916A3BAF5A1","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":2347194,"avatar":"https://static001.geekbang.org/account/avatar/00/23/d0/ba/98bc816b.jpg","nickname":"Shu🐹","note":"","ucode":"29521F803CE2CC","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":374422,"discussion_content":"    for i in gen:\n        print(&#39;i&#39;,i)\n    print(list(gen))\n    # for i in gen:\n    #     print(&#34;i1&#34;,i)\n    # print(list(b))\n    for i in b:\n        print(&#34;j&#34;,i)\n    print(list(b))\n\n##输出\ni 1\ni 3\ni 5\n[]\nj 1\nj 2\nj 3\nj 4\nj 5\n[]\n\na是列表不会被消耗完地\n迭代器和生成器 循环一次后都会被消耗完\n例子里地代码要正确输出 ，把消耗b = iter(b)的注释掉就可以了\n#gen = ((i in b) for i in a) \n或者干脆return(all(gen)) 也能得到结果","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1621174279,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":339078,"ip_address":""},"score":374422,"extra":""}]},{"author":{"id":1590953,"avatar":"https://static001.geekbang.org/account/avatar/00/18/46/a9/70fa676f.jpg","nickname":"Luke","note":"","ucode":"2C8A1FAB8B6301","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":323798,"discussion_content":"还有一点直接next(b)会抛出StopIteration异常，这里的all将抛出这种异常也认为是False的一种场景","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1604997794,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1047936,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/fd/80/52763d62.jpg","nickname":"周平","note":"","ucode":"CA1869B139A4F6","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":1031,"discussion_content":"谢谢解答了在下的困惑","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1562253669,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":105830,"user_name":"SCAR","can_delete":false,"product_type":"c1","uid":1031209,"ip_address":"","ucode":"38C0927FA3C5FC","user_header":"https://static001.geekbang.org/account/avatar/00/0f/bc/29/022905e6.jpg","comment_is_top":false,"comment_ctime":1561090397,"is_pvip":false,"replies":[{"id":"38387","content":"👍","user_name":"作者回复","user_name_real":"高山流水","uid":"1513504","ctime":1561239744,"ip_address":"","comment_id":105830,"utype":1}],"discussion_count":1,"race_medal":0,"score":"130410109277","product_id":100026901,"comment_content":"思考题：对于一个有限元素的生成器，如果迭代完成后，继续调用 next(),会跳出StopIteration:。生成器可以遍历多次吗？不行。也正是这个原因，老师代码复杂化那段代码，在<br>    gen = ((i in b) for i in a)<br>    for i in gen: <br>        print(i)<br>之后应该是需要给b复位下，不然b会是空的，那么return回来永远会是False。<br><br>这段判断是否是子序列的指针用的真是巧妙，区区几行，精华尽现。","like_count":30,"discussions":[{"author":{"id":1513504,"avatar":"https://static001.geekbang.org/account/avatar/00/17/18/20/75ea3b20.jpg","nickname":"高山流水","note":"","ucode":"71E513B5937481","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":454830,"discussion_content":"👍","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1561239744,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":151751,"user_name":"恨你","can_delete":false,"product_type":"c1","uid":1059810,"ip_address":"","ucode":"6B6A80A04A4D55","user_header":"https://static001.geekbang.org/account/avatar/00/10/2b/e2/a2a0f83f.jpg","comment_is_top":false,"comment_ctime":1573784803,"is_pvip":false,"replies":[{"id":"58340","content":"收到，我看看","user_name":"编辑回复","user_name_real":"郭蕾","uid":"1000473","ctime":1573785844,"ip_address":"","comment_id":151751,"utype":2}],"discussion_count":8,"race_medal":0,"score":"74588228835","product_id":100026901,"comment_content":"有错误的地方：list_1 = [i for i in range(100000000)]结果是一个可迭代对象，是一个列表，而不是一个迭代器。所以文中使用例子来说明的是生成器比列表节省内存，而不是迭代器比生成器节省内存。<br>from collections import Iterator<br>from sys import getsizeof<br>a = [i for i in range(1001)]<br>print(type(a))<br>print(getsizeof(a))#4516<br> <br>b = iter(a)<br>print(type(b))<br>print(isinstance(b,Iterator))<br>print(getsizeof(b))#32<br>c = (i for i in range(1001))<br>print(getsizeof(b))  #32<br>这个例子可以说明生成器跟迭代器一样，都可以节省内存。请详细讲明可迭代对象，迭代器生成器的关系，重点说明迭代器与生成器的关系，生成器是特殊的迭代器，特殊之处不在于生成器能够节省内存。具体哪里特殊，个人还没有好的总结，只是浅显认为：生成器写法更优雅，可以使用send方法修改值<br>，请老师深入研究下后讲给我们。谢谢。<br>","like_count":18,"discussions":[{"author":{"id":1000473,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/44/19/17fadc62.jpg","nickname":"郭蕾","note":"","ucode":"34F4C07D1C5FE8","race_medal":0,"user_type":8,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":474602,"discussion_content":"收到，我看看","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1573785844,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":4}","child_discussion_number":1,"child_discussions":[{"author":{"id":1170358,"avatar":"https://static001.geekbang.org/account/avatar/00/11/db/b6/c17dadae.jpg","nickname":"安","note":"","ucode":"2AA737A16110A7","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1000473,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/44/19/17fadc62.jpg","nickname":"郭蕾","note":"","ucode":"34F4C07D1C5FE8","race_medal":0,"user_type":8,"is_pvip":false},"discussion":{"id":558248,"discussion_content":"编辑老师，这个地方景霄老师可以再核实解释下么？","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1648175781,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":474602,"ip_address":""},"score":558248,"extra":""}]},{"author":{"id":1059810,"avatar":"https://static001.geekbang.org/account/avatar/00/10/2b/e2/a2a0f83f.jpg","nickname":"恨你","note":"","ucode":"6B6A80A04A4D55","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":72839,"discussion_content":"还没有做修改啊","likes_number":2,"is_delete":false,"is_hidden":false,"ctime":1575535148,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1187197,"avatar":"https://static001.geekbang.org/account/avatar/00/12/1d/7d/368df396.jpg","nickname":"somenzz","note":"","ucode":"EA59A170DF8910","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":325012,"discussion_content":"生成器是迭代器，但迭代器不一定是生成器。迭代器是一种更为广泛的概念，任何一个类，只要实现了__next__方法和__iter__方法（__iter__方法返回自身），它就是一个迭代器，而生成器是只要使用了 yield 或者 （i for i in some_squence）。可以说迭代器写的代码更多，也更为灵活一些。\n\n比如实现一个生成器计算整数 a b 之前的数的平方：\ndef squares(start, stop):\n    for i in range(start, stop):\n        yield i * i\n\ngenerator = squares(a, b)\n\n或者：\n\ngenerator = (i*i for i in range(a, b))\n\n如果是迭代器，则是：\n\nclass Squares(object):\n    def __init__(self, start, stop):\n       self.start = start\n       self.stop = stop\n    def __iter__(self): return self\n    def __next__(self): # next in Python 2\n       if self.start >= self.stop:\n           raise StopIteration\n       current = self.start * self.start\n       self.start += 1\n       return current\n\niterator = Squares(a, b)\n\n迭代器还可以添加自定义的方法：\n    def current(self):\n       return self.start\n\n从这里可以看出，迭代器也并不是一次存储a到b中间的所有值。\n \n\n\n\n\n","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1605220837,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":2369413,"avatar":"https://static001.geekbang.org/account/avatar/00/24/27/85/ddeeaf30.jpg","nickname":"dived","note":"","ucode":"141916A3BAF5A1","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":374418,"discussion_content":"initing generator memory used: 82.81640625 MB\nafter generator initiated memory used: 82.81640625 MB\n4999999950000000\nafter sum called memory used: 82.81640625 MB\nWall time: 6.31 s\niniting iterator memory used: 82.81640625 MB\nafter iterator initiated memory used: 82.81640625 MB\n4999999950000000\nafter sum called memory used: 82.81640625 MB\nWall time: 2.72 s\niniting list memory used: 82.81640625 MB\nafter list initiated memory used: 3952.27734375 MB\n4999999950000000\nafter sum called memory used: 3952.27734375 MB\nWall time: 7.7 s\n三种方法都试了下 列表慢且浪费空间\n生成器和迭代器空间占用一样小，迭代器速度快地很明显","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1621172902,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1405256,"avatar":"https://static001.geekbang.org/account/avatar/00/15/71/48/44df7f4e.jpg","nickname":"凯","note":"","ucode":"60DB11CF72C7B0","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":323428,"discussion_content":"a = iter([i for i in range(1001)]) 这样应该就变成迭代器了吧，内存消耗和列表是一样的，\n\n但是%time test_iterator()   %time test_generator() 的先后顺便切换之后，第一个执行消耗的内存都比第二个消耗的内存多，\n\n这么看来，应该和迭代器、生成器都一样，","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1604933904,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1526343,"avatar":"https://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTIfCY2mvbZ2Po4efYBhMJPacb9mlOicNI6Us4ph3ianrkGlUcop8ZlzN6QiaDrnvFcNeaAfwP7XAv5fw/132","nickname":"even","note":"","ucode":"2EDE76B1F80F33","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":289830,"discussion_content":"怎么还么修改，这块的内容完全是错误的","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1594222113,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1727789,"avatar":"https://static001.geekbang.org/account/avatar/00/1a/5d/2d/4bcffdef.jpg","nickname":"Santo","note":"","ucode":"59B0F4B63C5530","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":282306,"discussion_content":"额 还没修改？","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1591937673,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":105744,"user_name":"tt","can_delete":false,"product_type":"c1","uid":1489957,"ip_address":"","ucode":"7753B79AD5A9AC","user_header":"https://static001.geekbang.org/account/avatar/00/16/bc/25/1c92a90c.jpg","comment_is_top":false,"comment_ctime":1561080430,"is_pvip":false,"replies":[{"id":"38389","content":"对，这里是个很巧妙的利用","user_name":"作者回复","user_name_real":"高山流水","uid":"1513504","ctime":1561239858,"ip_address":"","comment_id":105744,"utype":1}],"discussion_count":2,"race_medal":0,"score":"53100687982","product_id":100026901,"comment_content":"明白为啥要把b转换成迭代器了，是为了下面的代码中可以用next():<br><br>while True:<br>    val = next(b)<br>    if val == i:<br>        yield True<br><br>这样才可以利用next()可以保存指针位置的特性，从而确保子序列中元素的顺序。","like_count":13,"discussions":[{"author":{"id":1513504,"avatar":"https://static001.geekbang.org/account/avatar/00/17/18/20/75ea3b20.jpg","nickname":"高山流水","note":"","ucode":"71E513B5937481","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":454796,"discussion_content":"对，这里是个很巧妙的利用","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1561239858,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1248286,"avatar":"https://static001.geekbang.org/account/avatar/00/13/0c/1e/74d65100.jpg","nickname":"jack motor","note":"","ucode":"158814F7DBBDC5","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":269342,"discussion_content":"b转换为迭代器对象之后才能记住指针位置","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1589896382,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":105683,"user_name":"kyle","can_delete":false,"product_type":"c1","uid":1179158,"ip_address":"","ucode":"DB05C0F7D2C472","user_header":"https://static001.geekbang.org/account/avatar/00/11/fe/16/0f096793.jpg","comment_is_top":false,"comment_ctime":1561074919,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"53100682471","product_id":100026901,"comment_content":"gen = ((i in b) for i in a)<br>实际上是先遍历 a，取出一个值赋给i，然后再判断i是否在b中，判断一次，b中的指针后移一位。<br><br>所以，第一轮的输出应该是:TRUE，TRUE，TRUE(前三个是for循环打印的，因为a中有3个元素)，TRUE(最后一个是函数返回的)；<br><br>第二轮输出是:TRUE，TRUE，FALSE，FALSE","like_count":12},{"had_liked":false,"id":105650,"user_name":"farFlight","can_delete":false,"product_type":"c1","uid":1245211,"ip_address":"","ucode":"B0872D3ECBEC38","user_header":"https://wx.qlogo.cn/mmopen/vi_32/DYAIOgq83epbRibsic15KXfGEN3SSjnLhXGyhK2Uyrj5ibBJsKAjicNqtafDaQOLH4xpSJRZD1vmibFPJER1ySmwP9A/132","comment_is_top":false,"comment_ctime":1561062421,"is_pvip":false,"replies":[{"id":"38385","content":"正确","user_name":"作者回复","user_name_real":"高山流水","uid":"1513504","ctime":1561239618,"ip_address":"","comment_id":105650,"utype":1}],"discussion_count":1,"race_medal":0,"score":"40215768085","product_id":100026901,"comment_content":"迭代完成后，继续调用 next()会出现StopIteration。<br>生成器只能遍历一次，但是可以重新调用重新遍历。","like_count":9,"discussions":[{"author":{"id":1513504,"avatar":"https://static001.geekbang.org/account/avatar/00/17/18/20/75ea3b20.jpg","nickname":"高山流水","note":"","ucode":"71E513B5937481","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":454755,"discussion_content":"正确","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1561239618,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":108486,"user_name":"xmr","can_delete":false,"product_type":"c1","uid":1009622,"ip_address":"","ucode":"1BBF165F91F10B","user_header":"https://static001.geekbang.org/account/avatar/00/0f/67/d6/2f5cb85c.jpg","comment_is_top":false,"comment_ctime":1561781973,"is_pvip":true,"discussion_count":0,"race_medal":0,"score":"31626553045","product_id":100026901,"comment_content":"def is_subsequence(a, b):<br>    b = iter(b)<br>    print(b)<br><br>    gen = (i for i in a)<br>    print(gen)<br><br>    for i in gen:<br>        print(i)<br><br>    gen = ((i in b) for i in a)<br>    print(gen)<br><br>    for i in gen:<br>        print(i)<br><br>    return all(((i in b) for i in a))<br><br>print(is_subsequence([1, 3, 5], [1, 2, 3, 4, 5]))<br>print(is_subsequence([1, 4, 3], [1, 2, 3, 4, 5]))<br><br>这个代码很容易让人误解，is_subsequence的返回结果永远是False的，因为迭代器b被用了两次了。<br>","like_count":7},{"had_liked":false,"id":175891,"user_name":"Lonely绿豆蛙","can_delete":false,"product_type":"c1","uid":1044785,"ip_address":"","ucode":"0862179B614974","user_header":"https://static001.geekbang.org/account/avatar/00/0f/f1/31/5001390b.jpg","comment_is_top":false,"comment_ctime":1580880333,"is_pvip":false,"replies":[{"id":"68442","content":"正确","user_name":"作者回复","user_name_real":"高山流水","uid":"1513504","ctime":1580969543,"ip_address":"","comment_id":175891,"utype":1}],"discussion_count":2,"race_medal":0,"score":"27350684109","product_id":100026901,"comment_content":"比较下return 与 yield的区别：<br><br>return：在程序函数中返回某个值，返回之后函数不在继续执行，彻底结束。<br>yield: 带有yield的函数是一个迭代器，函数返回某个值时，会停留在某个位置，返回函数值后，会在前面停留的位置继续执行，直到程序结束。","like_count":6,"discussions":[{"author":{"id":1513504,"avatar":"https://static001.geekbang.org/account/avatar/00/17/18/20/75ea3b20.jpg","nickname":"高山流水","note":"","ucode":"71E513B5937481","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":482942,"discussion_content":"正确","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1580969543,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":2413127,"avatar":"https://static001.geekbang.org/account/avatar/00/24/d2/47/24f5bda9.jpg","nickname":"Dont call me jack","note":"","ucode":"86B29471CFC6B2","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":410879,"discussion_content":"我还是期望老师出一个偏底层的，装饰器是基于闭包实现的，闭包中nonlocal变量是如何工作的，以及weakref等等，future对象中为什么使用递归锁，而不是其他锁等等","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1635783952,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":106088,"user_name":"許敲敲","can_delete":false,"product_type":"c1","uid":1046681,"ip_address":"","ucode":"6486466820E7BF","user_header":"https://static001.geekbang.org/account/avatar/00/0f/f8/99/8e760987.jpg","comment_is_top":false,"comment_ctime":1561170571,"is_pvip":false,"discussion_count":1,"race_medal":0,"score":"23036007051","product_id":100026901,"comment_content":"b = (i for i in range(5))<br><br>print(2 in b)<br>print(4 in b)<br>print(3 in b)<br><br>########## 输出 ##########<br><br>True<br>True<br>False<br><br>这里面的判断4 in b后，指针已经在3 之后了吗？所以 3 in b 会返回 false<br><br>反过来 如果 <br>b = (i for i in range(5))<br><br>print(2 in b)<br>print(3 in b)<br>print(4 in b)<br><br>########## 输出 ##########<br><br>True<br>True<br>True<br><br>这么理解对吗？<br><br>","like_count":5,"discussions":[{"author":{"id":1018685,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/8b/3d/0c3a2fd4.jpg","nickname":"偶尔复活下","note":"","ucode":"18B1D525CD50D3","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":340570,"discussion_content":"对","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1610062081,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":106193,"user_name":"Wing·三金","can_delete":false,"product_type":"c1","uid":1341402,"ip_address":"","ucode":"6B9F5822C3717F","user_header":"https://static001.geekbang.org/account/avatar/00/14/77/da/54c663f3.jpg","comment_is_top":false,"comment_ctime":1561199554,"is_pvip":false,"discussion_count":1,"race_medal":0,"score":"18741068738","product_id":100026901,"comment_content":"思考题：其实开头就已经明示了答案，会出现 StopIteration Error。遍历是一次性，参考下面这段代码：<br><br>def index_generator(L, target):<br>    for i, num in enumerate(L):<br>        if num == target:<br>            yield i<br><br>result = index_generator([1, 6, 2, 4, 5, 23, 4, 54, 34, 3, 2], 2)<br>print(list(result))<br>print(list(result))<br><br>### output<br>[2, 10]<br>[]<br><br>补充一小点：上面的 isinstance(obj, Iterable) 中的 Iterable 需要先 from collections import Iterable。<br><br>另外有个问题，py3 中的 range() 本质上也是 generator 吗？如果是，为何下面这段代码的结果会是这样呢？<br><br>e = range(3)<br><br>for i in e:<br>    print(i)<br>for i in e:<br>    print(i)<br><br>### expected<br>0<br>1<br>2<br>### real output<br>0<br>1<br>2<br>0<br>1<br>2<br><br>请各位指教~！<br>","like_count":4,"discussions":[{"author":{"id":1528805,"avatar":"https://static001.geekbang.org/account/avatar/00/17/53/e5/3a50d563.jpg","nickname":"秦丽荣","note":"","ucode":"8C7A038788D9F4","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":2741,"discussion_content":"貌似range得到的是迭代器，而不是生成器。只有生成器才是只能遍历一遍。生成器可以理解为特殊的迭代器。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1563891363,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":135547,"user_name":"蒋腾飞同学","can_delete":false,"product_type":"c1","uid":1645665,"ip_address":"","ucode":"AF72D93DDAC536","user_header":"https://static001.geekbang.org/account/avatar/00/19/1c/61/0ca1ca43.jpg","comment_is_top":false,"comment_ctime":1569208274,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"14454110162","product_id":100026901,"comment_content":"老师好 ，生成器(i for i in range(5))和tuple数据很像，都是可迭代的，请问有什么本质区别吗？都是小括号扩起来～","like_count":3},{"had_liked":false,"id":106144,"user_name":"Geek_59f23e","can_delete":false,"product_type":"c1","uid":1513783,"ip_address":"","ucode":"A463C6EB7447FD","user_header":"https://static001.geekbang.org/account/avatar/00/17/19/37/e0a9bf99.jpg","comment_is_top":false,"comment_ctime":1561188396,"is_pvip":false,"replies":[{"id":"38381","content":"👍","user_name":"作者回复","user_name_real":"高山流水","uid":"1513504","ctime":1561239071,"ip_address":"","comment_id":106144,"utype":1}],"discussion_count":1,"race_medal":0,"score":"14446090284","product_id":100026901,"comment_content":"1、大家对next函数可能有些误区，迭代完成后继续调用next函数会返回默认值None。<br> iterator.__next__() 方法和 next(iterator, default=None) 函数的区别在于：前者迭代完成后会抛出StopIteration错误，中断程序运行，而后者会返回一个默认值None（可以指定），不会报错和中断程序运行。<br><br>2、生成器遍历到最后一个元素后抛出StopIteration，不能遍历多次，重新遍历需要生成一个新的生成器。","like_count":3,"discussions":[{"author":{"id":1513504,"avatar":"https://static001.geekbang.org/account/avatar/00/17/18/20/75ea3b20.jpg","nickname":"高山流水","note":"","ucode":"71E513B5937481","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":454973,"discussion_content":"👍","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1561239071,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":205074,"user_name":"Nemo","can_delete":false,"product_type":"c1","uid":1657039,"ip_address":"","ucode":"2B11D18D6FA2AE","user_header":"https://static001.geekbang.org/account/avatar/00/19/48/cf/8c88e6c0.jpg","comment_is_top":false,"comment_ctime":1586521961,"is_pvip":false,"discussion_count":3,"race_medal":0,"score":"10176456553","product_id":100026901,"comment_content":"%time test_iterator()<br>%time test_generator()<br><br>这个%和time是啥意思？哪位大哥解释一下","like_count":2,"discussions":[{"author":{"id":1087879,"avatar":"https://static001.geekbang.org/account/avatar/00/10/99/87/98ebb20e.jpg","nickname":"dao","note":"","ucode":"4181FB270462CF","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":327996,"discussion_content":"Jupyter 魔法命令，参考https://ipython.readthedocs.io/en/stable/interactive/magics.html","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1606039170,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1078556,"avatar":"https://static001.geekbang.org/account/avatar/00/10/75/1c/0238b794.jpg","nickname":"陆洋","note":"","ucode":"F5D82385EAD25C","race_medal":1,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":290359,"discussion_content":"jupter的语法糖","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1594442533,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1078556,"avatar":"https://static001.geekbang.org/account/avatar/00/10/75/1c/0238b794.jpg","nickname":"陆洋","note":"","ucode":"F5D82385EAD25C","race_medal":1,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":290358,"discussion_content":"计时啊","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1594442510,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":199738,"user_name":"单色","can_delete":false,"product_type":"c1","uid":1907486,"ip_address":"","ucode":"A1DA6E497FD74C","user_header":"https://static001.geekbang.org/account/avatar/00/1d/1b/1e/f5c16f7e.jpg","comment_is_top":false,"comment_ctime":1585494890,"is_pvip":false,"replies":[{"id":"75935","content":"👍","user_name":"作者回复","user_name_real":"高山流水","uid":"1513504","ctime":1586150438,"ip_address":"","comment_id":199738,"utype":1}],"discussion_count":1,"race_medal":0,"score":"10175429482","product_id":100026901,"comment_content":"生成器之前一直是一知半解，似懂非懂，今天学习后，有了更深入的了解。","like_count":2,"discussions":[{"author":{"id":1513504,"avatar":"https://static001.geekbang.org/account/avatar/00/17/18/20/75ea3b20.jpg","nickname":"高山流水","note":"","ucode":"71E513B5937481","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":489871,"discussion_content":"👍","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1586150438,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":179803,"user_name":"力维","can_delete":false,"product_type":"c1","uid":1527672,"ip_address":"","ucode":"BF4E04AEE52AC6","user_header":"https://static001.geekbang.org/account/avatar/00/17/4f/78/1fe13460.jpg","comment_is_top":false,"comment_ctime":1582102306,"is_pvip":false,"replies":[{"id":"69929","content":"理解的很好。<br><br>大括号是很好很简洁的 set 初始化写法，这里用 set() 是为了更容易让读者明白具体类型。","user_name":"作者回复","user_name_real":"高山流水","uid":"1513504","ctime":1582190693,"ip_address":"","comment_id":179803,"utype":1}],"discussion_count":1,"race_medal":0,"score":"10172036898","product_id":100026901,"comment_content":"最后的例子的确比较有意思，个人理解有三个关键点：<br>一是(i in b)的含义<br>b = (i for i in range(5))<br>print(2 in b)<br>print(4 in b) # 执行完后，b中剩下5了<br>print(3 in b) # 此时3 不在b中<br><br>二是，gen = ((i in b) for i in a) <br> 先执行 for i in a ，把a中元素逐个取出；再执行 i in b ，判断是否在b中；最后把判断结果保存在生成器gen中<br><br>三是，return all(((i in b) for i in a)) <br>由于之前 i in b使得b到达StopIteration，再执行就是空集了<br><br>另外，第七段“集合（set: set([0, 1, 2])）都是容器。”  是否改为 set: {0,1,2}比较好？虽然都是同一个意思。","like_count":2,"discussions":[{"author":{"id":1513504,"avatar":"https://static001.geekbang.org/account/avatar/00/17/18/20/75ea3b20.jpg","nickname":"高山流水","note":"","ucode":"71E513B5937481","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":484405,"discussion_content":"理解的很好。\n\n大括号是很好很简洁的 set 初始化写法，这里用 set() 是为了更容易让读者明白具体类型。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1582190693,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":106894,"user_name":"Element 静婷","can_delete":false,"product_type":"c1","uid":1363882,"ip_address":"","ucode":"E43C1BBBFBDDB3","user_header":"https://static001.geekbang.org/account/avatar/00/14/cf/aa/28c29472.jpg","comment_is_top":false,"comment_ctime":1561423142,"is_pvip":false,"discussion_count":1,"race_medal":0,"score":"10151357734","product_id":100026901,"comment_content":"老师好，请问子序列的问题中,[1,3,5]不是[1, 2, 3, 4, 5]吗？怎么返回false","like_count":2,"discussions":[{"author":{"id":1556373,"avatar":"https://static001.geekbang.org/account/avatar/00/17/bf/95/d25f3f1b.jpg","nickname":"武动","note":"","ucode":"F84F25D04BAF49","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":337683,"discussion_content":"不是，子序列必须是原来序列中的连续","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1609041107,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":105782,"user_name":"Redevil","can_delete":false,"product_type":"c1","uid":1527609,"ip_address":"","ucode":"21C90472DC6357","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/PrKSgib1DcguTZYoOAqNw8tpLKylQU6dQPwI4NLJkd6344EWHaLF5yHe6PpAD6fsxSm0no7qiakiaEHUYw4nzTEyw/132","comment_is_top":false,"comment_ctime":1561083684,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"10151018276","product_id":100026901,"comment_content":"前三个布尔值打印的是a的三个元素在不在b中的判断结果<br>第四个值是打印is_subsequence的最终返回值","like_count":2},{"had_liked":false,"id":105712,"user_name":"Hurt","can_delete":false,"product_type":"c1","uid":1050946,"ip_address":"","ucode":"DCE7428CCF08EF","user_header":"https://static001.geekbang.org/account/avatar/00/10/09/42/1f762b72.jpg","comment_is_top":false,"comment_ctime":1561078119,"is_pvip":false,"discussion_count":1,"race_medal":0,"score":"10151012711","product_id":100026901,"comment_content":"老师并没讲迭代器和可迭代对象区别，另外还有他们底层的实现，魔法方法","like_count":2,"discussions":[{"author":{"id":1529393,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/DYAIOgq83er1RdQnOhMLv7dAwpBLAoUOM8icEnH8b1oSZ0cSYoryM6ng5cHcnsRRhYRny8NlrjuaQuOWy4e9Yqw/132","nickname":"羁绊","note":"","ucode":"68CA15169C9DBF","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":382,"discussion_content":"Iterator：迭代器对象，必须要实现next魔法(__next__)函数，实现（__iter__）可以支持循环遍历\nIterable：可迭代对象，继承Iterator，必须要实现iter魔法函（__iter__）函数\ngenerator:生成器对象，函数中只要有yield，这个函数就会变成生成器\n\nIterator：迭代器对象\n\t一类是generator，包括生成器和带yield的generator function。为迭代器对象：Iterator\n\nIterable：可迭代对象\n\t一类是集合数据类型，如list、tuple、dict、set、str 是迭代器对象：Iterable\n\t这些可以直接作用于for循环的对象统称为可迭代对象：Iterable","likes_number":3,"is_delete":false,"is_hidden":false,"ctime":1561517903,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":105665,"user_name":"鱼_XueTr","can_delete":false,"product_type":"c1","uid":1506691,"ip_address":"","ucode":"A164D2540F251D","user_header":"https://static001.geekbang.org/account/avatar/00/16/fd/83/b432b125.jpg","comment_is_top":false,"comment_ctime":1561072302,"is_pvip":false,"replies":[{"id":"38390","content":"👍","user_name":"作者回复","user_name_real":"高山流水","uid":"1513504","ctime":1561239874,"ip_address":"","comment_id":105665,"utype":1}],"discussion_count":1,"race_medal":0,"score":"10151006894","product_id":100026901,"comment_content":"会引发StopIteration。<br>生成器只能使用一次。","like_count":2,"discussions":[{"author":{"id":1513504,"avatar":"https://static001.geekbang.org/account/avatar/00/17/18/20/75ea3b20.jpg","nickname":"高山流水","note":"","ucode":"71E513B5937481","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":454761,"discussion_content":"👍","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1561239874,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":135077,"user_name":"夜雨声烦","can_delete":false,"product_type":"c1","uid":1349749,"ip_address":"","ucode":"87D8DB1E32522A","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTK6mh3xlaMoGtWjmVJh2LutdLcQcPbKNjRlVru3bx8ynPhgwuGhhdzTkwEMoXbvBtgkcDSfom1kZg/132","comment_is_top":false,"comment_ctime":1568998929,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"5863966225","product_id":100026901,"comment_content":"对于&#39;gen = ((i in b) for i in a)&#39;部分的理解，&quot;for i in a&quot;很好理解，就是遍历生成器a，重点在&quot;(i in b)&quot;，这个行代码的意思老师已经说过了，需要注意的是的迭代器的next就像是消费数据一样，消费了之后前面的数据就没了。以最后一个例子为例，b中存的是(0,1,2,3,4)，执行print(2 in b)时会消费掉(0,1,2)，执行print(4 in b)会消耗(3,4)，因此执行print(3 in b)已经没数据了才会返回False。如果按照如下顺序都会返回true：<br>b = (i for i in range(5))<br>print(2 in b)<br>print(3 in b)<br>print(4 in b)<br><br>还有def is_subsequence(a, b)代码块中，第一个数据最终应该输入True啊，怎么会输出false呢..","like_count":1},{"had_liked":false,"id":115185,"user_name":"佛本是道","can_delete":false,"product_type":"c1","uid":1011377,"ip_address":"","ucode":"6710218F8509CB","user_header":"https://static001.geekbang.org/account/avatar/00/0f/6e/b1/ec1feb7e.jpg","comment_is_top":false,"comment_ctime":1563504347,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"5858471643","product_id":100026901,"comment_content":"生成器复位怎么操作？","like_count":1},{"had_liked":false,"id":107215,"user_name":"超人","can_delete":false,"product_type":"c1","uid":1156329,"ip_address":"","ucode":"119ED76F577FC7","user_header":"https://static001.geekbang.org/account/avatar/00/11/a4/e9/3b65c171.jpg","comment_is_top":false,"comment_ctime":1561482911,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"5856450207","product_id":100026901,"comment_content":"看完文章后一直不明白为什么输出的是<br>true，true，true，false<br>true，true，false，false，以及最后的例子输出true，true，false<br>看完看完评论后搞懂了，关键在下面代码<br>while True:<br>    val = next(b)<br>    if val == i:<br>        yield True<br><br>1，4，3列表，在判断4时，指针指向迭代器4的位置，判断3时，next是5，所以返回false<br><br><br><br>","like_count":1},{"had_liked":false,"id":106647,"user_name":"Monroe  He","can_delete":false,"product_type":"c1","uid":1348219,"ip_address":"","ucode":"D04ECB2EF2E0DA","user_header":"https://static001.geekbang.org/account/avatar/00/14/92/7b/8c7e3e61.jpg","comment_is_top":false,"comment_ctime":1561364209,"is_pvip":false,"discussion_count":2,"race_medal":0,"score":"5856331505","product_id":100026901,"comment_content":"列表元组字典集合都是可迭代对象，它们可以通过 iter() 函数返回一个迭代器，再通过next()函数就可以实现遍历，for in语句将整个过程隐式化。<br>gen = ((i in b) for i in a)<br>print(gen) <br>for i in gen: <br>    print(i)<br>先得到a中的一个元素i; 迭代b,检查i是否与b当前位置相等,如果i与b当前位置元素相等，则返回True,b继续停留在当前位置,等待下次从当前位置开始迭代。<br><br>问题：b是一个迭代器，如果在之前不将b转换为迭代器，而保持b为可迭代对象（也就是列表）为什么不行。因为之前说过for in 语句会隐式化地执行iter()函数，并利用next()函数进行遍历。既然可以隐式化的执行，为什么要将列表转为迭代器呢？","like_count":1,"discussions":[{"author":{"id":1179969,"avatar":"https://static001.geekbang.org/account/avatar/00/12/01/41/25572996.jpg","nickname":"夜一星","note":"","ucode":"FE84E34E2140EA","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":386767,"discussion_content":"这里用b的迭代器是因为题意要求，需要迭代器吐一个少一个的特性","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1627787609,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1051873,"avatar":"https://static001.geekbang.org/account/avatar/00/10/0c/e1/f663213e.jpg","nickname":"拾掇拾掇","note":"","ucode":"D775F374C2A1D3","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":171503,"discussion_content":"for in 执行的是后面的 可迭代对象，前面expression不会","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1581727700,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":105978,"user_name":"布霆","can_delete":false,"product_type":"c1","uid":1525986,"ip_address":"","ucode":"D9C966DDA1ACA7","user_header":"https://static001.geekbang.org/account/avatar/00/17/48/e2/0a1dff73.jpg","comment_is_top":false,"comment_ctime":1561118924,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"5856086220","product_id":100026901,"comment_content":"老师最后那段长代码中，1，3，5都是True，怎么all()函数返回的也是False啊。","like_count":1},{"had_liked":false,"id":105652,"user_name":"honnkyou","can_delete":false,"product_type":"c1","uid":1026608,"ip_address":"","ucode":"FD5EC4120EE803","user_header":"https://static001.geekbang.org/account/avatar/00/0f/aa/30/acc91f01.jpg","comment_is_top":false,"comment_ctime":1561064284,"is_pvip":false,"discussion_count":1,"race_medal":0,"score":"5856031580","product_id":100026901,"comment_content":"“接下来我们再来看一个问题：给定两个序列，判定第一个是不是第二个的子序列。”<br>老师，这个问题复杂版的代码为什么会有4个判断值。true,true,true,false跟true,true,false,false","like_count":1,"discussions":[{"author":{"id":1525624,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/DYAIOgq83epEbrWwrlSUzSxBXV401OuYGL4yveAly9ib4licXb9yqoBFIYGicqJKrzGr8iaianLZo8ZPx7X4eAltM4g/132","nickname":"易拉罐","note":"","ucode":"56B05C4F621B3F","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":1497,"discussion_content":"return all(((i in b) for i in ...\n最后一个true/false是这行代码的结果. ","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1562665027,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":347501,"user_name":"Geek_a42381","can_delete":false,"product_type":"c1","uid":2998108,"ip_address":"","ucode":"70BF3B625C8748","user_header":"","comment_is_top":false,"comment_ctime":1654078986,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1654078986","product_id":100026901,"comment_content":"<br>借鉴了某个同学的回答，这个样子理解器来方便些<br>b = [1, 2, 3, 4, 5, 6, ]<br>b = iter(b)<br>print(list(copy.deepcopy(b)), 1 in b, list(copy.deepcopy(b)))<br>print(list(copy.deepcopy(b)), 4 in b, list(copy.deepcopy(b)))<br><br>","like_count":0},{"had_liked":false,"id":339428,"user_name":"Geek_fc975d","can_delete":false,"product_type":"c1","uid":2459939,"ip_address":"","ucode":"05B6507FE4349B","user_header":"https://static001.geekbang.org/account/avatar/00/25/89/23/e71f180b.jpg","comment_is_top":false,"comment_ctime":1648094809,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1648094809","product_id":100026901,"comment_content":"很多同学的回复非常正确，生成器只能遍历一次，继续调用 next() 会 raise StopIteration。只有复位生成器才能重新进行遍历。","like_count":0},{"had_liked":false,"id":329095,"user_name":"王政","can_delete":false,"product_type":"c1","uid":2297381,"ip_address":"","ucode":"A7DCA909FC8A38","user_header":"https://static001.geekbang.org/account/avatar/00/23/0e/25/aad87c07.jpg","comment_is_top":false,"comment_ctime":1641116685,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1641116685","product_id":100026901,"comment_content":"迭代器是可迭代的对象。<br>生成器是只有被调用时才会产生迭代行为的对象。<br>迭代器在初始化时就完成了所有元素在内存中的产生，内存空间占用等于其大小。<br>生成器在初始化时只是完成了其被调用时行为的定义，在被调用时才返回由方法计算得到的元素。<br>生成器通过被访问时调度cpu计算完成了对返回元素的即时生成，是一种能够有效节省内存和利用cpu算力的方法。即生成器将定义了容器被枚举时的行为，迭代器则在一开始就依据行为初始化了了容器内所有元素。","like_count":0},{"had_liked":false,"id":326921,"user_name":"大猫","can_delete":false,"product_type":"c1","uid":1084768,"ip_address":"","ucode":"80BC2BE4DF96F0","user_header":"https://static001.geekbang.org/account/avatar/00/10/8d/60/ef9dd940.jpg","comment_is_top":false,"comment_ctime":1639751787,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1639751787","product_id":100026901,"comment_content":"这里非常巧妙地利用生成器的特性，next() 函数运行的时候，保存了当前的指针。作者的这句话里面的生成器应该说的是迭代器吧。","like_count":0},{"had_liked":false,"id":326271,"user_name":"ITCamel","can_delete":false,"product_type":"c1","uid":2110272,"ip_address":"","ucode":"FB260BF4A9DD46","user_header":"https://static001.geekbang.org/account/avatar/00/20/33/40/69c65edc.jpg","comment_is_top":false,"comment_ctime":1639455730,"is_pvip":true,"discussion_count":0,"race_medal":0,"score":"1639455730","product_id":100026901,"comment_content":"关于__getitem__在该部分有一些困惑，我自己写了一个测试类，只实现了__getitem__函数，结果这个对象便可以在for循环中进行应用，而打印该对象，发现既不是Iterator，也不是Iterable。正常来说，for循环不是先是执行iter获取一个Iterator，然后再调用next()来执行的语法糖么？<br>from collections.abc import Iterable, Iterator<br>class MyTestClass():<br>    def __init__(word):<br>        self.word = word<br>        self.index = 0<br>    def __getitem__(index):<br>        if index &lt; len(self.word):<br>            return self.word[index]<br>        else:<br>            raise IndexError<br>if __name__ == &#39;__main__&#39;:<br>    f = MyTestClass(&#39;abc&#39;)<br>    print(isinstance(f, Iterable))<br>    print(isinstance(f, Iterator))<br>    for i in f:<br>        print(i)","like_count":0},{"had_liked":false,"id":314707,"user_name":"暮夜天璇","can_delete":false,"product_type":"c1","uid":1487218,"ip_address":"","ucode":"6003A04D264B5D","user_header":"https://static001.geekbang.org/account/avatar/00/16/b1/72/25c952ca.jpg","comment_is_top":false,"comment_ctime":1633339044,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1633339044","product_id":100026901,"comment_content":"老师好，想问下<br>while True: <br>    val = next(b) <br>    if val == i: <br>        yield True<br>a为[1,4,3]，当判断到i为3的时，val = next(b)是5了，所以不会yield True，这个我是理解得，但为什么会打印False？感觉像是yield False。<br>gen = ((i in b) for i in a) <br>print(gen)<br>为什么不是True, True, None而是True, True, False","like_count":0},{"had_liked":false,"id":306006,"user_name":"somenzz","can_delete":false,"product_type":"c1","uid":1187197,"ip_address":"","ucode":"EA59A170DF8910","user_header":"https://static001.geekbang.org/account/avatar/00/12/1d/7d/368df396.jpg","comment_is_top":false,"comment_ctime":1628289787,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1628289787","product_id":100026901,"comment_content":"学了一年多再回来看，我现在终于明白了生成器和迭代器的区别：生成器只是一种迭代器，除此之外没有任何区别。根据迭代器的定义，一个迭代器也可以实现懒人版本的，也可以实现只能遍历一次，只不过使用 yield 关键字或 (i for i in []) 这种形式的产生的迭代器，我们给它起了个名字，叫生成器。","like_count":0},{"had_liked":false,"id":286534,"user_name":"完美坚持","can_delete":false,"product_type":"c1","uid":1919541,"ip_address":"","ucode":"AE0261D8DDEF64","user_header":"https://static001.geekbang.org/account/avatar/00/1d/4a/35/66caeed9.jpg","comment_is_top":false,"comment_ctime":1617360101,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1617360101","product_id":100026901,"comment_content":"如何检验是不是生成器<br>You can use GeneratorType from types:<br><br>&gt;&gt;&gt; import types<br>&gt;&gt;&gt; types.GeneratorType<br>&lt;class &#39;generator&#39;&gt;<br>&gt;&gt;&gt; gen = (i for i in range(10))<br>&gt;&gt;&gt; isinstance(gen, types.GeneratorType)<br>True","like_count":0},{"had_liked":false,"id":263202,"user_name":"dao","can_delete":false,"product_type":"c1","uid":1087879,"ip_address":"","ucode":"4181FB270462CF","user_header":"https://static001.geekbang.org/account/avatar/00/10/99/87/98ebb20e.jpg","comment_is_top":false,"comment_ctime":1606043557,"is_pvip":true,"discussion_count":0,"race_medal":0,"score":"1606043557","product_id":100026901,"comment_content":"b = iter(b) 是蛮关键的一步，这里简单拆解一下<br>------<br>import copy<br><br>def is_subsequence(a, b):<br>    b = iter(b)<br>    for i in a:<br>        print(&#39;i: {} - b: {}&#39;.format(i, list(copy.deepcopy(b))))<br>        yield i in b<br><br>gen = is_subsequence([1, 4, 3], [1, 2, 3, 4, 5])<br><br>list(gen)<br><br>### 输出<br>i: 1 - b: [1, 2, 3, 4, 5]<br>i: 4 - b: [2, 3, 4, 5]<br>i: 3 - b: [5]<br>[True, True, False]<br>","like_count":0},{"had_liked":false,"id":252179,"user_name":"somenzz","can_delete":false,"product_type":"c1","uid":1187197,"ip_address":"","ucode":"EA59A170DF8910","user_header":"https://static001.geekbang.org/account/avatar/00/12/1d/7d/368df396.jpg","comment_is_top":false,"comment_ctime":1602163709,"is_pvip":false,"discussion_count":1,"race_medal":0,"score":"1602163709","product_id":100026901,"comment_content":"我感觉那道 LeeCode，只用到了迭代器的知识，跟生成器没有任何关系。","like_count":0,"discussions":[{"author":{"id":1087879,"avatar":"https://static001.geekbang.org/account/avatar/00/10/99/87/98ebb20e.jpg","nickname":"dao","note":"","ucode":"4181FB270462CF","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":328040,"discussion_content":"如果改成 [(i in b) for i in a] ，那么只用到迭代器。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1606040826,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":242746,"user_name":"AI Stupid","can_delete":false,"product_type":"c1","uid":1172510,"ip_address":"","ucode":"02C1AC190BB6B2","user_header":"https://static001.geekbang.org/account/avatar/00/11/e4/1e/704b5dc7.jpg","comment_is_top":false,"comment_ctime":1597829856,"is_pvip":true,"discussion_count":0,"race_medal":0,"score":"1597829856","product_id":100026901,"comment_content":"def is_subsequence(a, b):<br>    b = iter(b)<br>    return all(i in b for i in a)<br><br>试了下把 (i in b) 抽离出来：<br><br>def is_subsequence(a, b):<br>    b = iter(b)<br>    def check(i):<br>        for val in b:<br>            if val == i:<br>                return True<br>        return False<br>    return all(check(i) for i in a)<br><br>才发现 (i in b) 这种写法真是太妙了。","like_count":0},{"had_liked":false,"id":242707,"user_name":"Geek_b692f5","can_delete":false,"product_type":"c1","uid":2064044,"ip_address":"","ucode":"C2826604F71C36","user_header":"https://static001.geekbang.org/account/avatar/00/1f/7e/ac/4303e8ef.jpg","comment_is_top":false,"comment_ctime":1597820939,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1597820939","product_id":100026901,"comment_content":"本来还有点疑惑 all 调用会导致需要遍历a中所有元素在b中是否存在，实际用代码调试了一下，才发现 i in b 这种写法真的很微妙：<br><br>from collections import Iterable<br><br>def is_sub_sequence(a: Iterable, b: Iterable) -&gt; bool:<br>    c = iter(b)<br><br>    gen = ((i in c, i) for i in a)<br>    print(gen)<br>    for _, i in gen:<br>        print(&quot;i: {}, in c = {}&quot;.format(i, _))<br>        if not _:<br>            # 此时 next(c) 已经抛出异常 StopIteration，再执行 i in c 实际上直接返回 False<br>            return False<br><br>    return True","like_count":0},{"had_liked":false,"id":241797,"user_name":"Leoorz","can_delete":false,"product_type":"c1","uid":1030657,"ip_address":"","ucode":"8912628AD6ADE0","user_header":"https://static001.geekbang.org/account/avatar/00/0f/ba/01/5ce8ce0b.jpg","comment_is_top":false,"comment_ctime":1597445825,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1597445825","product_id":100026901,"comment_content":"生成器用在非一次遍历完的场景时，可以认为是有状态的，可以通过 条件 让生成器暂时&quot;停&quot;下来，待下次启动时从保存的状态继续执行<br>这个重要的思想学到了","like_count":0},{"had_liked":false,"id":237510,"user_name":"Run","can_delete":false,"product_type":"c1","uid":1371941,"ip_address":"","ucode":"6738D2F36ACFF6","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTLMDBq7lqg9ZasC4f21R0axKJRVCBImPKlQF8yOicLLXIsNgsZxsVyN1mbvFOL6eVPluTNgJofwZeA/132","comment_is_top":false,"comment_ctime":1595849905,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1595849905","product_id":100026901,"comment_content":"def generator(k):<br>    i = 1<br>    while True:<br>        yield i ** k<br>        i += 1<br><br><br>def get_sum(n):<br>    gen_1 = generator(1)<br>    gen_3 = generator(3)<br>    sum_1, sum_3 = 0, 0<br>    for i in range(n):<br>        next_1 = next(gen_1)<br>        next_3 = next(gen_3)<br>        print(&#39;next_1 = {}, next_3 = {}&#39;.format(next_1, next_3))<br>        sum_1 += next_1<br>        sum_3 += next_3<br>    print(sum_1 ** 2, sum_3)<br><br><br>def gg():<br>    i = 1<br>    while True:<br>        yield i<br>        i += 1<br><br><br>tt = gg()<br>while True:<br>    get_sum(next(tt))<br>    time.sleep(0.25)","like_count":0},{"had_liked":false,"id":230893,"user_name":"youaresherlock","can_delete":false,"product_type":"c1","uid":1281550,"ip_address":"","ucode":"B4D379C6B50DD4","user_header":"https://static001.geekbang.org/account/avatar/00/13/8e/0e/3fbc418d.jpg","comment_is_top":false,"comment_ctime":1593515879,"is_pvip":false,"replies":[{"id":"87205","content":"👍","user_name":"作者回复","user_name_real":"高山流水","uid":"1513504","ctime":1595310752,"ip_address":"","comment_id":230893,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1593515879","product_id":100026901,"comment_content":"from collections import Iterable, Iterator <br>isinstance(object, Iterable)等等可以判断是否是可迭代对象或者迭代器对象","like_count":0,"discussions":[{"author":{"id":1513504,"avatar":"https://static001.geekbang.org/account/avatar/00/17/18/20/75ea3b20.jpg","nickname":"高山流水","note":"","ucode":"71E513B5937481","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":500064,"discussion_content":"👍","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1595310752,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":225913,"user_name":"Shirley媛","can_delete":false,"product_type":"c1","uid":1545972,"ip_address":"","ucode":"107CE700CC13BD","user_header":"https://static001.geekbang.org/account/avatar/00/17/96/f4/8fa63bca.jpg","comment_is_top":false,"comment_ctime":1591887481,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1591887481","product_id":100026901,"comment_content":"在运行 %time test_iterator()<br>%time test_generator()<br>是会报出<br>PermissionError                           Traceback (most recent call last)<br>C:\\ProgramData\\Anaconda3\\lib\\site-packages\\psutil\\_pswindows.py in wrapper(self, *args, **kwargs)<br>    666         try:<br>--&gt; 667             return fun(self, *args, **kwargs)<br>    668         except OSError as err:<br><br>……<br><br>的错误，要如何解决？！","like_count":0},{"had_liked":false,"id":225290,"user_name":"哇唔","can_delete":false,"product_type":"c1","uid":2029341,"ip_address":"","ucode":"662C0062C0A8A3","user_header":"https://static001.geekbang.org/account/avatar/00/1e/f7/1d/9fad5459.jpg","comment_is_top":false,"comment_ctime":1591706304,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1591706304","product_id":100026901,"comment_content":"请问iter函数是生成迭代器还是生成器，如果是迭代器为什么内存大小明显减小，作者说过迭代器很消耗内存感觉我还是有点不理解。","like_count":0},{"had_liked":false,"id":221277,"user_name":"lcqbug","can_delete":false,"product_type":"c1","uid":1268609,"ip_address":"","ucode":"08FA17F21BCEC5","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/DYAIOgq83epbyHPGNLu9sDQOs1V6brMcDwia55pyIlP9n62oO6IYS6kIFDnOSON4ugSeBSy6WhDUnYyJC6vtnHQ/132","comment_is_top":false,"comment_ctime":1590460651,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1590460651","product_id":100026901,"comment_content":"生成器是迭代器。生成器和迭代器都是记录的一个值和一个计算规则，底层是闭包实现的。迭代器和生成器是不是同一个东西？究竟它们之间是什么关系？","like_count":0},{"had_liked":false,"id":217006,"user_name":"shiziwen","can_delete":false,"product_type":"c1","uid":1016917,"ip_address":"","ucode":"ADADC770D82D66","user_header":"https://static001.geekbang.org/account/avatar/00/0f/84/55/1e40bd61.jpg","comment_is_top":false,"comment_ctime":1589384209,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1589384209","product_id":100026901,"comment_content":"文章中提到的:<br>没错，这里的(i in b)，大致等价于下面这段代码：<br>while True:<br>    val = next(b)<br>    if val == i:<br>        yield True<br>这里非常巧妙地利用生成器的特性，next() 函数运行的时候，保存了当前的指针。<br><br>这里的b，是一个迭代器，而不是生成器，所以&quot;利用生成器的特性，&quot;不是指的b?","like_count":0},{"had_liked":false,"id":203234,"user_name":"TristanDong","can_delete":false,"product_type":"c1","uid":1199392,"ip_address":"","ucode":"632B5E364C8AA8","user_header":"https://static001.geekbang.org/account/avatar/00/12/4d/20/9f430641.jpg","comment_is_top":false,"comment_ctime":1586159031,"is_pvip":false,"discussion_count":1,"race_medal":0,"score":"1586159031","product_id":100026901,"comment_content":"实现了__iter__()就是一个可迭代对象，使用for in默认会调用__iter__()返回一个迭代器，而迭代器具有__next__()方式。这是网上找到的资料，对于这点，能帮忙再解释一下吗","like_count":0,"discussions":[{"author":{"id":1005520,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/57/d0/b9312769.jpg","nickname":"北斗(宇)","note":"","ucode":"9532B48D7C29C7","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":543235,"discussion_content":"实现了__iter__()就是一个可迭代对象,     有函数__iter__()的对象就是一个可迭代对象\n调用__iter__()返回一个迭代器               函数__iter__()的返回类型是迭代器\n迭代器具有__next__()方式                     迭代器有__next__()函数","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1641016511,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":201829,"user_name":"王大华","can_delete":false,"product_type":"c1","uid":1163590,"ip_address":"","ucode":"7AD5C4B8E93B0F","user_header":"https://static001.geekbang.org/account/avatar/00/11/c1/46/a81f7402.jpg","comment_is_top":false,"comment_ctime":1585842057,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1585842057","product_id":100026901,"comment_content":"看完第一遍没有抓住重点，要再看一遍","like_count":0},{"had_liked":false,"id":200411,"user_name":"Geek_04e22a","can_delete":false,"product_type":"c1","uid":1184505,"ip_address":"","ucode":"B64FF12EA28BA6","user_header":"https://static001.geekbang.org/account/avatar/00/12/12/f9/7e6e3ac6.jpg","comment_is_top":false,"comment_ctime":1585580918,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1585580918","product_id":100026901,"comment_content":"b = iter(b) 这个是为了把b转化为迭代器，对于a使用for in把这个过程隐式化了，而把b转化为迭代器就是为了调用next方法，保存当前指针","like_count":1},{"had_liked":false,"id":200409,"user_name":"Geek_04e22a","can_delete":false,"product_type":"c1","uid":1184505,"ip_address":"","ucode":"B64FF12EA28BA6","user_header":"https://static001.geekbang.org/account/avatar/00/12/12/f9/7e6e3ac6.jpg","comment_is_top":false,"comment_ctime":1585580822,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1585580822","product_id":100026901,"comment_content":"b = iter(b)","like_count":0},{"had_liked":false,"id":199820,"user_name":"单色","can_delete":false,"product_type":"c1","uid":1907486,"ip_address":"","ucode":"A1DA6E497FD74C","user_header":"https://static001.geekbang.org/account/avatar/00/1d/1b/1e/f5c16f7e.jpg","comment_is_top":false,"comment_ctime":1585496432,"is_pvip":false,"replies":[{"id":"75934","content":"next 返回本次结果，并暂停在 yield。","user_name":"作者回复","user_name_real":"高山流水","uid":"1513504","ctime":1586150425,"ip_address":"","comment_id":199820,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1585496432","product_id":100026901,"comment_content":"问题<br>生成器的next()函数：是保存返回本次结果，并去计算下次调用结果？","like_count":0,"discussions":[{"author":{"id":1513504,"avatar":"https://static001.geekbang.org/account/avatar/00/17/18/20/75ea3b20.jpg","nickname":"高山流水","note":"","ucode":"71E513B5937481","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":489883,"discussion_content":"next 返回本次结果，并暂停在 yield。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1586150425,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":192503,"user_name":"sundy","can_delete":false,"product_type":"c1","uid":1724856,"ip_address":"","ucode":"581D4B976524B6","user_header":"https://static001.geekbang.org/account/avatar/00/1a/51/b8/f76b15a1.jpg","comment_is_top":false,"comment_ctime":1584856178,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1584856178","product_id":100026901,"comment_content":"说一顿也没给迭代器和生成器下一个明确的定义，基本靠感觉","like_count":0},{"had_liked":false,"id":174914,"user_name":"苹果","can_delete":false,"product_type":"c1","uid":1761988,"ip_address":"","ucode":"5D0FA9D8560FD8","user_header":"https://static001.geekbang.org/account/avatar/00/1a/e2/c4/25acaa38.jpg","comment_is_top":false,"comment_ctime":1580456547,"is_pvip":false,"replies":[{"id":"68443","content":"iterater = iter(dic.items())","user_name":"作者回复","user_name_real":"高山流水","uid":"1513504","ctime":1580969675,"ip_address":"","comment_id":174914,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1580456547","product_id":100026901,"comment_content":"dic = {1:&#39;a&#39;,2:&#39;b&#39;,3:&#39;c&#39;}<br>iterater = iter(dic)<br>next(iterater)<br>Out[105]: 1<br>next(iterater)<br>Out[106]: 2<br>对于字典生成的迭代器，只返回Key的值，怎么放回value，或k,v 的值？","like_count":0,"discussions":[{"author":{"id":1513504,"avatar":"https://static001.geekbang.org/account/avatar/00/17/18/20/75ea3b20.jpg","nickname":"高山流水","note":"","ucode":"71E513B5937481","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":482563,"discussion_content":"iterater = iter(dic.items())","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1580969675,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":152892,"user_name":"Paul Shan","can_delete":false,"product_type":"c1","uid":1593140,"ip_address":"","ucode":"32D99989028284","user_header":"","comment_is_top":false,"comment_ctime":1574111325,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1574111325","product_id":100026901,"comment_content":"迭代器是容器迭代的抽象，比数组更一般，迭代步骤类似于单向链表的遍历。所有容器都是可迭代的。生成器是自定义迭代器的生成工具。<br>思考题<br>迭代完成以后再调用next 应该要报错，这个时候已经是没有下一个苹果的状态。生成器应该不能遍历多次，原因还是苹果没了。<br>文章当中利用生成器保存遍历状态方法，我个人觉得不太直观，虽然多看几遍能看懂，这应该是因为Python不是我的工作语言。","like_count":0},{"had_liked":false,"id":147843,"user_name":"小球就是饭二妞🐷🐷","can_delete":false,"product_type":"c1","uid":1135053,"ip_address":"","ucode":"68A25ABE3263F1","user_header":"https://static001.geekbang.org/account/avatar/00/11/51/cd/443cc3be.jpg","comment_is_top":false,"comment_ctime":1572913255,"is_pvip":false,"replies":[{"id":"57028","content":"暂时没有打算呢","user_name":"作者回复","user_name_real":"Jingxiao","uid":"1259521","ctime":1572933903,"ip_address":"","comment_id":147843,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1572913255","product_id":100026901,"comment_content":"老师还会开专栏吗？","like_count":0,"discussions":[{"author":{"id":1259521,"avatar":"https://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTJJOlibibPFEWOib8ib7RtfAtxND5FUqCxxoeTuLAbBI9ic23xuwdXT4IyiaWq3Fic9RgEAYI0lBTbEp2rcg/132","nickname":"Jingxiao","note":"","ucode":"EB966BB87132F6","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":473321,"discussion_content":"暂时没有打算呢","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1572933903,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":145807,"user_name":"Bourne Cruise","can_delete":false,"product_type":"c1","uid":1698799,"ip_address":"","ucode":"4332FC315CEF69","user_header":"https://static001.geekbang.org/account/avatar/00/19/eb/ef/04776da2.jpg","comment_is_top":false,"comment_ctime":1572382501,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1572382501","product_id":100026901,"comment_content":"数字在list中位置的那个例子，尝试了一下一行代码:<br>print(list((i for i,  num in enumerate(L) if num == target)))","like_count":0},{"had_liked":false,"id":143519,"user_name":"沛野","can_delete":false,"product_type":"c1","uid":1159216,"ip_address":"","ucode":"435D2F5AB9BB32","user_header":"https://static001.geekbang.org/account/avatar/00/11/b0/30/1343b0c3.jpg","comment_is_top":false,"comment_ctime":1571723867,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1571723867","product_id":100026901,"comment_content":"pyhton垃圾回收机制怎么回答呢？我面试自动化测试竟然都问这种开发的问题","like_count":0},{"had_liked":false,"id":143027,"user_name":"Adam","can_delete":false,"product_type":"c1","uid":1305633,"ip_address":"","ucode":"338BA720880E4F","user_header":"https://static001.geekbang.org/account/avatar/00/13/ec/21/b0fe1bfd.jpg","comment_is_top":false,"comment_ctime":1571621537,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1571621537","product_id":100026901,"comment_content":"声明一个迭代器很简单，[i for i in range(100000000)]就可以生成一个包含一亿元素的列表。这句话是不是有问题？列表并不是迭代器。","like_count":0},{"had_liked":false,"id":138710,"user_name":"丁丁历险记","can_delete":false,"product_type":"c1","uid":1661704,"ip_address":"","ucode":"A43829E454C067","user_header":"https://static001.geekbang.org/account/avatar/00/19/5b/08/b0b0db05.jpg","comment_is_top":false,"comment_ctime":1570428726,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1570428726","product_id":100026901,"comment_content":"越看越蒙","like_count":0},{"had_liked":false,"id":138651,"user_name":"自由民","can_delete":false,"product_type":"c1","uid":1346236,"ip_address":"","ucode":"435C67531697F1","user_header":"https://static001.geekbang.org/account/avatar/00/14/8a/bc/cb39ed38.jpg","comment_is_top":false,"comment_ctime":1570409521,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1570409521","product_id":100026901,"comment_content":"总结:生成器是特殊的迭代器(反之不成立)。使用生成器，可以生成更清晰，内存占用更少的代码。<br>思考题:有限元素生成器，迭代完成后，如果继续迭代，会抛出StopIteration异常。<br># 思考题 有限元素生成器无限迭代<br> gen = (i for i in range(5))<br> for i in range(10):<br>  print(next(gen))<br><br>课程的练习代码: https:&#47;&#47;github.com&#47;zwdnet&#47;PythonPractice","like_count":0},{"had_liked":false,"id":138134,"user_name":"逍遥思","can_delete":false,"product_type":"c1","uid":1015512,"ip_address":"","ucode":"340F05C786730F","user_header":"https://static001.geekbang.org/account/avatar/00/0f/7e/d8/92a98fb6.jpg","comment_is_top":false,"comment_ctime":1570059705,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1570059705","product_id":100026901,"comment_content":"[i for i in range(100000000)]并不是迭代器，而是列表生成式吧？<br><br>“生成器是懒人版的迭代器”非常准确，但由于本文没有提供一个完整的手写迭代器，所以“懒人版”无从体现，补充一个很好的例子：https:&#47;&#47;stackoverflow.com&#47;a&#47;2776865&#47;3301515","like_count":0},{"had_liked":false,"id":136271,"user_name":"建强","can_delete":false,"product_type":"c1","uid":1397126,"ip_address":"","ucode":"62B03D0E0C64EC","user_header":"https://static001.geekbang.org/account/avatar/00/15/51/86/b5fd8dd8.jpg","comment_is_top":false,"comment_ctime":1569401080,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1569401080","product_id":100026901,"comment_content":"对于有限元素的生成器，如果迭代完成后，再调用next()函数会报StopIteration的错误。生成器没有提供回到初始元素的方法，因此无法遍历多次。","like_count":0},{"had_liked":false,"id":133128,"user_name":"djfhchdh","can_delete":false,"product_type":"c1","uid":1484184,"ip_address":"","ucode":"E71D75328CE398","user_header":"https://static001.geekbang.org/account/avatar/00/16/a5/98/a65ff31a.jpg","comment_is_top":false,"comment_ctime":1568370825,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1568370825","product_id":100026901,"comment_content":"思考题：会抛出StopIteration错误","like_count":0},{"had_liked":false,"id":133127,"user_name":"djfhchdh","can_delete":false,"product_type":"c1","uid":1484184,"ip_address":"","ucode":"E71D75328CE398","user_header":"https://static001.geekbang.org/account/avatar/00/16/a5/98/a65ff31a.jpg","comment_is_top":false,"comment_ctime":1568370087,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1568370087","product_id":100026901,"comment_content":"def is_subsequence(a, b):<br>    b = iter(b)<br>    print(b)<br><br>    gen = (i for i in a)<br>    print(gen)<br><br>    for i in gen:<br>        print(i)<br><br>    gen = ((i in b) for i in a)<br>    print(gen)<br><br>    for i in gen:<br>        print(i)<br><br>    return all(((i in b) for i in a))<br><br>print(is_subsequence([1, 3, 5], [1, 2, 3, 4, 5]))<br>print(is_subsequence([1, 4, 3], [1, 2, 3, 4, 5]))<br><br>########## 输出 ##########<br><br>&lt;list_iterator object at 0x000001E7063D0E80&gt;<br>&lt;generator object is_subsequence.&lt;locals&gt;.&lt;genexpr&gt; at 0x000001E70651C570&gt;<br>1<br>3<br>5<br>&lt;generator object is_subsequence.&lt;locals&gt;.&lt;genexpr&gt; at 0x000001E70651C5E8&gt;<br>True<br>True<br>True<br>False   ##这里写错了，应该是True~~~~<br>&lt;list_iterator object at 0x000001E7063D0D30&gt;<br>&lt;generator object is_subsequence.&lt;locals&gt;.&lt;genexpr&gt; at 0x000001E70651C5E8&gt;<br>1<br>4<br>3<br>&lt;generator object is_subsequence.&lt;locals&gt;.&lt;genexpr&gt; at 0x000001E70651C570&gt;<br>True<br>True<br>False<br>False<br>","like_count":0},{"had_liked":false,"id":132920,"user_name":"Geek_siskin","can_delete":false,"product_type":"c1","uid":1138986,"ip_address":"","ucode":"333EA30F8FB6DB","user_header":"https://static001.geekbang.org/account/avatar/00/11/61/2a/71aeffe6.jpg","comment_is_top":false,"comment_ctime":1568274831,"is_pvip":false,"discussion_count":1,"race_medal":0,"score":"1568274831","product_id":100026901,"comment_content":"yield I**k<br>只是一个返回，并没有修改i的值，为什么k=3的第二轮调用 next(gen_3) ，函数内i就成了8呢？而不是2呢？","like_count":0,"discussions":[{"author":{"id":1222119,"avatar":"https://static001.geekbang.org/account/avatar/00/12/a5/e7/815acbf7.jpg","nickname":"warm_day","note":"","ucode":"3CD078E809497C","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":89025,"discussion_content":"debug一下就明白了","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1576746264,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":121927,"user_name":"©™","can_delete":false,"product_type":"c1","uid":1024962,"ip_address":"","ucode":"766C79DEFA2887","user_header":"https://static001.geekbang.org/account/avatar/00/0f/a3/c2/abb7bfe3.jpg","comment_is_top":false,"comment_ctime":1565250885,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1565250885","product_id":100026901,"comment_content":"1<br>3<br>5<br>************************************************************<br>True<br>True<br>True<br>************************************************************<br>False<br><br>这里为什么3个True，最后却返回了False呢？","like_count":0},{"had_liked":false,"id":119987,"user_name":"大宝","can_delete":false,"product_type":"c1","uid":1544876,"ip_address":"","ucode":"2CBF687E603996","user_header":"https://static001.geekbang.org/account/avatar/00/17/92/ac/16545faf.jpg","comment_is_top":false,"comment_ctime":1564745262,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1564745262","product_id":100026901,"comment_content":"没有太能理解，3 in b 为什么会 false？","like_count":0},{"had_liked":false,"id":115511,"user_name":"JustDoDT","can_delete":false,"product_type":"c1","uid":1127175,"ip_address":"","ucode":"6AF0B80F00EAEF","user_header":"https://static001.geekbang.org/account/avatar/00/11/33/07/8f351609.jpg","comment_is_top":false,"comment_ctime":1563609157,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1563609157","product_id":100026901,"comment_content":"# 第一个简单迭代器pycharm版，用上了上一讲的装饰器，计算耗时。<br>import os<br>import time<br>import psutil<br><br><br>def cost_time(func):<br>    def wrapper(*args, **kwargs):<br>        start = time.perf_counter()<br>        res = func(*args, **kwargs)<br>        end = time.perf_counter()<br>        print(&#39;cost time: {}s&#39;.format(end - start))<br>        return res<br><br>    return wrapper<br><br><br># 显示当前 python 程序占用的内存大小<br>def show_memory_info(hint):<br>    pid = os.getpid()<br>    p = psutil.Process(pid)<br><br>    info = p.memory_full_info()<br>    memory = info.uss &#47; 1024.0 &#47; 1024<br>    print(&#39;{} memory used: {} MB&#39;.format(hint, memory))<br><br><br>@cost_time<br>def tst_iterator():<br>    show_memory_info(&#39;initing iterator&#39;)<br>    list_1 = [i for i in range(10000000)]<br>    show_memory_info(&#39;after iterator initiated&#39;)<br>    print(sum(list_1))<br>    show_memory_info(&#39;after sum called&#39;)<br><br><br>@cost_time<br>def tst_generator():<br>    show_memory_info(&#39;initing generator&#39;)<br>    list_2 = (i for i in range(10000000))<br>    show_memory_info(&#39;after generator initiated&#39;)<br>    print(sum(list_2))<br>    show_memory_info(&#39;after sum called&#39;)<br><br><br>tst_iterator()<br>tst_generator()<br># 注意pycharm不要用test在最前面命名函数，要不然运行的时候会跑成测试模式。","like_count":0},{"had_liked":false,"id":114297,"user_name":"昵称已隐藏","can_delete":false,"product_type":"c1","uid":1528423,"ip_address":"","ucode":"0462993893FEE0","user_header":"https://static001.geekbang.org/account/avatar/00/17/52/67/fcc15216.jpg","comment_is_top":false,"comment_ctime":1563267349,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1563267349","product_id":100026901,"comment_content":"为了理解((i in b) for i in a)将<br>while True:<br>    val = next(b)<br>    if val == i:<br>        yield True<br>补全，大概是：<br>def is_subsequence(a,b):<br>  b = iter(b)<br>  for i in a:<br>    while True:<br>      try:<br>        val = next(b)<br>        if val == i:<br>          yield True<br>          break<br>      except StopIteration:<br>        yield False<br>        return<br>        <br><br>res = is_subsequence([1,3,2],[1,2,3,4,5])<br>for i in res:<br>  print(i)<br># 输出：<br># True<br># True<br># False<br>res = is_subsequence([1,3,2],[1,2,3,4,5])<br>print(all(res))<br># 输出：<br># False","like_count":0},{"had_liked":false,"id":111616,"user_name":"一眼看穿你😏","can_delete":false,"product_type":"c1","uid":1201256,"ip_address":"","ucode":"36CF6C2E34AC26","user_header":"https://static001.geekbang.org/account/avatar/00/12/54/68/96c4ebb6.jpg","comment_is_top":false,"comment_ctime":1562573093,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1562573093","product_id":100026901,"comment_content":"看到子序列判断的问题，第一反应就是贪心算法，但当这区区三行代码一出现，真他妈太神奇了。激动无比啊，","like_count":0},{"had_liked":false,"id":109277,"user_name":"magician","can_delete":false,"product_type":"c1","uid":1483968,"ip_address":"","ucode":"1BD1125C7C907A","user_header":"https://static001.geekbang.org/account/avatar/00/16/a4/c0/c6880c07.jpg","comment_is_top":false,"comment_ctime":1561991991,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1561991991","product_id":100026901,"comment_content":"raise StopIteration","like_count":0},{"had_liked":false,"id":107439,"user_name":"响雨","can_delete":false,"product_type":"c1","uid":1581705,"ip_address":"","ucode":"C5FB3A3BC68F92","user_header":"https://static001.geekbang.org/account/avatar/00/18/22/89/73397ccb.jpg","comment_is_top":false,"comment_ctime":1561536266,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1561536266","product_id":100026901,"comment_content":"生成器消耗完后,next会报StopIteration的错误。<br>生成器只能遍历一次。","like_count":0},{"had_liked":false,"id":107290,"user_name":"无法言喻.","can_delete":false,"product_type":"c1","uid":1322328,"ip_address":"","ucode":"7F375BE388D4FC","user_header":"https://static001.geekbang.org/account/avatar/00/14/2d/58/aa35c402.jpg","comment_is_top":false,"comment_ctime":1561511713,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1561511713","product_id":100026901,"comment_content":"补充一下。函数迭代器实际变成了一个对象。可以使用close方法停止迭代器，或者threw来为迭代器抛出错误。使用send函数可以和迭代器进行通信。","like_count":0},{"had_liked":false,"id":107280,"user_name":"无法言喻.","can_delete":false,"product_type":"c1","uid":1322328,"ip_address":"","ucode":"7F375BE388D4FC","user_header":"https://static001.geekbang.org/account/avatar/00/14/2d/58/aa35c402.jpg","comment_is_top":false,"comment_ctime":1561511299,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1561511299","product_id":100026901,"comment_content":"老师 3.5以后 yield from 是被 await替代了吗？","like_count":0},{"had_liked":false,"id":107131,"user_name":"李朝辉","can_delete":false,"product_type":"c1","uid":1152951,"ip_address":"","ucode":"8E4A4469A77A88","user_header":"https://static001.geekbang.org/account/avatar/00/11/97/b7/d5a83264.jpg","comment_is_top":false,"comment_ctime":1561464091,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1561464091","product_id":100026901,"comment_content":"还有一个与本节无关的问题：<br>请问用 %s 与 format，实现字符串格式化有什么不同<br>实际的场景是这样的，但我在实际工作中调用微信支付接口时，拼接http请求的xml字符串时，用%s无法通过微信服务端的校验，而format则可以。但是根据打印结果显示，二者输出的字符串并没有什么不同","like_count":0},{"had_liked":false,"id":107129,"user_name":"李朝辉","can_delete":false,"product_type":"c1","uid":1152951,"ip_address":"","ucode":"8E4A4469A77A88","user_header":"https://static001.geekbang.org/account/avatar/00/11/97/b7/d5a83264.jpg","comment_is_top":false,"comment_ctime":1561463848,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1561463848","product_id":100026901,"comment_content":"老师，我问一个与本节无关的问题，希望得到您的解答：<br>l1 = [{&#39;res_model&#39;:&#39;coffee&#39;}, {&#39;res_field&#39;:&#39;name&#39;}, {&#39;res_id&#39;:1}]<br>d1 = reduce(lambda x,y:dict(x,**y),l1)  #可以正常运行<br>d2 = reduce(lambda x,y:x.update(y),l1)  #会报错,AttributeError: &#39;NoneType&#39; object has no attribute &#39;update&#39;","like_count":0},{"had_liked":false,"id":106697,"user_name":"炸糕","can_delete":false,"product_type":"c1","uid":1334386,"ip_address":"","ucode":"B93B5D72F67542","user_header":"https://static001.geekbang.org/account/avatar/00/14/5c/72/fc5fd68a.jpg","comment_is_top":false,"comment_ctime":1561373905,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1561373905","product_id":100026901,"comment_content":"```<br>def is_subsequence(a, b): <br>    b = iter(b)<br>    print(b) <br>...<br><br>没错，这⾥的(i in b)，⼤致等价于下⾯这段代码：<br>while True:<br>    val = next(b)<br>    if val == i:<br>        yield True<br>这⾥⾮常巧妙地利⽤⽣成器的特性，next() 函数运⾏的时候，保存了当前的指针。⽐如再看下⾯这<br>个示例：<br>```<br><br>应该是非常巧妙地利用了 *迭代器* 的特性吧   <br><br>迭代器 跟 生成器 只是返回值的区别吗？   内存的使用情况差别好大","like_count":0},{"had_liked":false,"id":106588,"user_name":"yshan","can_delete":false,"product_type":"c1","uid":1136788,"ip_address":"","ucode":"A2ECDCDA52B8EE","user_header":"https://static001.geekbang.org/account/avatar/00/11/58/94/c8bc2b59.jpg","comment_is_top":false,"comment_ctime":1561350626,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1561350626","product_id":100026901,"comment_content":"while True:<br>    val = next(b)<br>    if val == i:<br>        yield True<br><br><br>b = (i for i in range(5))<br><br>print(2 in b)<br>print(4 in b)<br>print(3 in b)<br><br>########## 输出 ##########<br><br>True<br>True<br>False<br><br>-----------------------------<br>&gt;&gt;&gt; b = (i for i in range(10))<br>&gt;&gt;&gt; print(1 in b,next(b))<br>True 2<br>&gt;&gt;&gt; print(3 in b,next(b))<br>True 4<br>&gt;&gt;&gt; print(1 in b,next(b))<br>Traceback (most recent call last):<br>  File &quot;&lt;stdin&gt;&quot;, line 1, in &lt;module&gt;<br>StopIteration<br>&gt;&gt;&gt; b = (i for i in range(10))<br>&gt;&gt;&gt; print(1 in b)<br>True<br>&gt;&gt;&gt; print(3 in b)<br>True<br>&gt;&gt;&gt; print(6 in b)<br>True<br>&gt;&gt;&gt; print(2 in b)<br>False<br>&gt;&gt;&gt; next(b)<br>Traceback (most recent call last):<br>  File &quot;&lt;stdin&gt;&quot;, line 1, in &lt;module&gt;<br>StopIteration<br>&gt;&gt;&gt;<br><br>i in b 会从头到尾遍历一次，如果找到，则yield True，继续往下遍历，遍历后返回False，说明此时生成器已经遍历结束，使用next()可知。","like_count":0},{"had_liked":false,"id":106583,"user_name":"yshan","can_delete":false,"product_type":"c1","uid":1136788,"ip_address":"","ucode":"A2ECDCDA52B8EE","user_header":"https://static001.geekbang.org/account/avatar/00/11/58/94/c8bc2b59.jpg","comment_is_top":false,"comment_ctime":1561349687,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1561349687","product_id":100026901,"comment_content":"抛出StopIteration","like_count":0},{"had_liked":false,"id":106549,"user_name":"Jon徐","can_delete":false,"product_type":"c1","uid":1206774,"ip_address":"","ucode":"D203B6848C1D9C","user_header":"https://static001.geekbang.org/account/avatar/00/12/69/f6/40c497a3.jpg","comment_is_top":false,"comment_ctime":1561342458,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1561342458","product_id":100026901,"comment_content":"迭代器和生成器是以前只是在模块中碰到用一下，没有深入的理解过。迭代器只能遍历一次，只能向前遍历，不能回退。最后的例子使用这一特性将生成器和迭代器配合使用，非常巧妙，回味了很久。","like_count":0},{"had_liked":false,"id":106310,"user_name":"小侠龙旋风","can_delete":false,"product_type":"c1","uid":1126441,"ip_address":"","ucode":"073F3924A99835","user_header":"https://static001.geekbang.org/account/avatar/00/11/30/29/d6816ebf.jpg","comment_is_top":false,"comment_ctime":1561261287,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1561261287","product_id":100026901,"comment_content":"&gt;&gt;&gt; gen = (i for i in range(3))<br>&gt;&gt;&gt; next(gen)<br>0<br>&gt;&gt;&gt; next(gen)<br>1<br>&gt;&gt;&gt; next(gen)<br>2<br>&gt;&gt;&gt; next(gen)<br>Traceback (most recent call last):<br>  File &quot;&lt;stdin&gt;&quot;, line 1, in &lt;module&gt;<br>StopIteration","like_count":0},{"had_liked":false,"id":106272,"user_name":"Geek_59f23e","can_delete":false,"product_type":"c1","uid":1513783,"ip_address":"","ucode":"A463C6EB7447FD","user_header":"https://static001.geekbang.org/account/avatar/00/17/19/37/e0a9bf99.jpg","comment_is_top":false,"comment_ctime":1561249789,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1561249789","product_id":100026901,"comment_content":"def next(iterator, default=None): <br>    &quot;&quot;&quot;<br>    next(iterator[, default])<br>    <br>    Return the next item from the iterator. If default is given and the iterator<br>    is exhausted, it is returned instead of raising StopIteration.<br>    &quot;&quot;&quot;","like_count":0},{"had_liked":false,"id":106187,"user_name":"Geek_59f23e","can_delete":false,"product_type":"c1","uid":1513783,"ip_address":"","ucode":"A463C6EB7447FD","user_header":"https://static001.geekbang.org/account/avatar/00/17/19/37/e0a9bf99.jpg","comment_is_top":false,"comment_ctime":1561198305,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1561198305","product_id":100026901,"comment_content":"呃。是我弄错了 next函数不设置默认值时迭代完成后调用它会抛出StopIteration。<br><br>如果指定default参数值，则不会抛出StopIteration，而是返回default值。","like_count":0},{"had_liked":false,"id":106029,"user_name":"voc","can_delete":false,"product_type":"c1","uid":1526888,"ip_address":"","ucode":"EDAFFBA02550FF","user_header":"https://static001.geekbang.org/account/avatar/00/17/4c/68/77a0ac2d.jpg","comment_is_top":false,"comment_ctime":1561130312,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1561130312","product_id":100026901,"comment_content":"例子的实现太巧妙了，学习了","like_count":0},{"had_liked":false,"id":106001,"user_name":"somenzz","can_delete":false,"product_type":"c1","uid":1187197,"ip_address":"","ucode":"EA59A170DF8910","user_header":"https://static001.geekbang.org/account/avatar/00/12/1d/7d/368df396.jpg","comment_is_top":false,"comment_ctime":1561123300,"is_pvip":false,"replies":[{"id":"38382","content":"正确","user_name":"作者回复","user_name_real":"高山流水","uid":"1513504","ctime":1561239082,"ip_address":"","comment_id":106001,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1561123300","product_id":100026901,"comment_content":"1、如果迭代完成后，继续调用 next() 会发生<br>Traceback (most recent call last):<br>  File &quot;&lt;stdin&gt;&quot;, line 1, in &lt;module&gt;<br>StopIteration<br><br>2、生成器只可以遍历一次。","like_count":0,"discussions":[{"author":{"id":1513504,"avatar":"https://static001.geekbang.org/account/avatar/00/17/18/20/75ea3b20.jpg","nickname":"高山流水","note":"","ucode":"71E513B5937481","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":454910,"discussion_content":"正确","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1561239082,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":105965,"user_name":"","can_delete":false,"product_type":"c1","uid":1322330,"ip_address":"","ucode":"FA2983C5AD320C","user_header":"https://static001.geekbang.org/account/avatar/00/14/2d/5a/cc637589.jpg","comment_is_top":false,"comment_ctime":1561116307,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1561116307","product_id":100026901,"comment_content":"期待下节课。希望老师讲清楚协程和异步是不是一样的。","like_count":0},{"had_liked":false,"id":105929,"user_name":"catshitfive","can_delete":false,"product_type":"c1","uid":1542973,"ip_address":"","ucode":"E030B61F3D0811","user_header":"https://static001.geekbang.org/account/avatar/00/17/8b/3d/2a3b67f8.jpg","comment_is_top":false,"comment_ctime":1561105636,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1561105636","product_id":100026901,"comment_content":"可迭代对象里都实现了__iter__方法，不同的可迭代对象返回一个迭代器类对象(iterator)，迭代器对象实现了__next__方法，不同数据结构的可迭代对象产生的迭代器对象实现的__next__的方式应该是不同的(多态),但是他们都能将容器内的数据完整的遍历一遍(同时也记录了指针位置，以便下次从该位置继续遍历);生成器 是用关键字 yield或者类似推导式(for in 加())的方式来实现；生成器本质是迭代器。生成器生成的内容可以是无限的，不占用内存是他的优点(在next调用才会返回结果并挂起，记录指针并等待下一次的调用)；关键字 in后面可以跟iterator,可以巧妙的实现判断有序子列是否存在于有序总列中","like_count":0},{"had_liked":false,"id":105903,"user_name":"程序员人生","can_delete":false,"product_type":"c1","uid":1113668,"ip_address":"","ucode":"C5C5073D89AAA2","user_header":"https://static001.geekbang.org/account/avatar/00/10/fe/44/3e3040ac.jpg","comment_is_top":false,"comment_ctime":1561102303,"is_pvip":false,"replies":[{"id":"38383","content":"👍","user_name":"作者回复","user_name_real":"高山流水","uid":"1513504","ctime":1561239233,"ip_address":"","comment_id":105903,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1561102303","product_id":100026901,"comment_content":"def homework1():<br>    l = [1, 6, 2]<br>    b = (i for i in l)<br><br>    print(next(b))<br>    print(next(b))<br>    print(next(b))<br>    print(next(b))<br><br>homework1()<br><br>执行结果：<br>Traceback (most recent call last):<br>1<br>  File &quot;D:&#47;pywork1&#47;da1&#47;py19-2.py&quot;, line 22, in &lt;module&gt;<br>6<br>    homework1()<br>2<br>  File &quot;D:&#47;pywork1&#47;da1&#47;py19-2.py&quot;, line 8, in homework1<br>    print(next(b))<br>StopIteration<br><br>Process finished with exit code 1<br><br>说明迭代完成后，继续调用next(),会报StopIteration 错<br><br>def homework2():<br>    l = [1, 6, 2]<br>    b = (i for i in l)<br><br>    print(next(b))<br>    print(next(b))<br>    print(next(b))<br><br>    b = (i for i in l)<br><br>    print(next(b))<br><br>homework2()<br><br>执行结果：<br>1<br>6<br>2<br>1<br>说明生成器可以遍历多次<br>","like_count":0,"discussions":[{"author":{"id":1513504,"avatar":"https://static001.geekbang.org/account/avatar/00/17/18/20/75ea3b20.jpg","nickname":"高山流水","note":"","ucode":"71E513B5937481","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":454860,"discussion_content":"👍","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1561239233,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":105899,"user_name":"Jie","can_delete":false,"product_type":"c1","uid":1355892,"ip_address":"","ucode":"B251D8EB7BCEE1","user_header":"https://static001.geekbang.org/account/avatar/00/14/b0/74/5e8b277b.jpg","comment_is_top":false,"comment_ctime":1561101840,"is_pvip":false,"replies":[{"id":"48243","content":"对","user_name":"作者回复","user_name_real":"Jingxiao","uid":"1259521","ctime":1567141916,"ip_address":"","comment_id":105899,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1561101840","product_id":100026901,"comment_content":"出现StopIteration  ,生成器只能遍历一次","like_count":0,"discussions":[{"author":{"id":1259521,"avatar":"https://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTJJOlibibPFEWOib8ib7RtfAtxND5FUqCxxoeTuLAbBI9ic23xuwdXT4IyiaWq3Fic9RgEAYI0lBTbEp2rcg/132","nickname":"Jingxiao","note":"","ucode":"EB966BB87132F6","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":454857,"discussion_content":"对","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1567141916,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":105893,"user_name":"hlz-123","can_delete":false,"product_type":"c1","uid":1433586,"ip_address":"","ucode":"B7E5EF0C260BD2","user_header":"","comment_is_top":false,"comment_ctime":1561100694,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1561100694","product_id":100026901,"comment_content":"1、生成器是带有yield语句的函数，如下面形式：<br>    def generator():<br>          ......<br>          yield 2<br>          ......<br>     如果执行函数geberator(),什么也没有做，<br>     如果执行：a=generator()<br>                      b=next(a)<br>      函数会执行，碰到yield语句暂停并返回，<br>      继续执行 next(a)，函数就从上次暂停处继续往下执行语句，直至碰到yield语句，<br>      如果没有yield语句，也就是说迭代完成了，出现错误信息StopIteration。<br>2、生成器可以遍历多次，但需要重新赋值，如上面的函数，<br>      a=generator()<br>      重新赋值后，可以再次遍历。<br>      ","like_count":0},{"had_liked":false,"id":105875,"user_name":"csn","can_delete":false,"product_type":"c1","uid":1524609,"ip_address":"","ucode":"68FAE1EE372ADF","user_header":"https://static001.geekbang.org/account/avatar/00/17/43/81/8b09dd90.jpg","comment_is_top":false,"comment_ctime":1561097399,"is_pvip":false,"discussion_count":1,"race_medal":0,"score":"1561097399","product_id":100026901,"comment_content":"不明白为什么[1,3,5]前三个都为True，为何最后一个为False，这与“至于最后的 all() 函数，就很简单了。它用来判断一个迭代器的元素是否全部为 True，如果是则返回 True，否则就返回 False.”不是相悖吗？","like_count":0,"discussions":[{"author":{"id":1524609,"avatar":"https://static001.geekbang.org/account/avatar/00/17/43/81/8b09dd90.jpg","nickname":"csn","note":"","ucode":"68FAE1EE372ADF","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":230,"discussion_content":"请老师或同学指教一下","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1561344432,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":105833,"user_name":"大米饭","can_delete":false,"product_type":"c1","uid":1344410,"ip_address":"","ucode":"920D70AAFBAA98","user_header":"https://static001.geekbang.org/account/avatar/00/14/83/9a/e680db01.jpg","comment_is_top":false,"comment_ctime":1561090738,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1561090738","product_id":100026901,"comment_content":"学习了，in原来可以结合迭代器使用","like_count":0},{"had_liked":false,"id":105796,"user_name":"Geek_d848f7","can_delete":false,"product_type":"c1","uid":1524021,"ip_address":"","ucode":"F24BC59B6E9E6B","user_header":"","comment_is_top":false,"comment_ctime":1561084673,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1561084673","product_id":100026901,"comment_content":"因此我认为，生成器作用主要是解决空间的占用问题，它的最大好处是调用next（）才会生效，特别适合只需要遍历做其他计算的场景，不会浪费存储空间","like_count":0},{"had_liked":false,"id":105791,"user_name":"Geek_d848f7","can_delete":false,"product_type":"c1","uid":1524021,"ip_address":"","ucode":"F24BC59B6E9E6B","user_header":"","comment_is_top":false,"comment_ctime":1561084249,"is_pvip":false,"replies":[{"id":"38384","content":"如果最终目标是需要 print，那么生成器这里唯一的优点是代码简练；但是 index_generator 返回一个生成器，在调用后并不会立刻执行，在某些情况下对性能提升是有帮助的。","user_name":"作者回复","user_name_real":"高山流水","uid":"1513504","ctime":1561239453,"ip_address":"","comment_id":105791,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1561084249","product_id":100026901,"comment_content":"枚举每个元素和它index这个例子，使用生成器和列表区别不大，因为作者最后还是将生成器转换成列表，这里我反而觉得有点多余","like_count":0,"discussions":[{"author":{"id":1513504,"avatar":"https://static001.geekbang.org/account/avatar/00/17/18/20/75ea3b20.jpg","nickname":"高山流水","note":"","ucode":"71E513B5937481","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":454812,"discussion_content":"如果最终目标是需要 print，那么生成器这里唯一的优点是代码简练；但是 index_generator 返回一个生成器，在调用后并不会立刻执行，在某些情况下对性能提升是有帮助的。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1561239453,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":105780,"user_name":"随风の","can_delete":false,"product_type":"c1","uid":1307306,"ip_address":"","ucode":"50C25386889CC9","user_header":"https://static001.geekbang.org/account/avatar/00/13/f2/aa/47f2e37d.jpg","comment_is_top":false,"comment_ctime":1561083286,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1561083286","product_id":100026901,"comment_content":"然后 尝试将其修改为 return all(gen)  这个返回值均为True  然后奇怪地发现  return any(gen)  这个返回值变为了False?  生成器generator对象内部是什么构造呢?","like_count":0},{"had_liked":false,"id":105776,"user_name":"随风の","can_delete":false,"product_type":"c1","uid":1307306,"ip_address":"","ucode":"50C25386889CC9","user_header":"https://static001.geekbang.org/account/avatar/00/13/f2/aa/47f2e37d.jpg","comment_is_top":false,"comment_ctime":1561083108,"is_pvip":false,"discussion_count":1,"race_medal":0,"score":"1561083108","product_id":100026901,"comment_content":"有两个问题  判定子序列的复杂化方法中  return all(((i in b) for i in a))  无论gen的结果如何都会返回False, 这个((i in b) for i in a) 实际上是新建了一个生成器表达式, 为什么会返回False?","like_count":0,"discussions":[{"author":{"id":1031209,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/bc/29/022905e6.jpg","nickname":"SCAR","note":"","ucode":"38C0927FA3C5FC","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":105,"discussion_content":"for i in a这就实际上是for i in iter(a)，a是列表，那么iter(a)会生成新的迭代器实例，此时迭代器内是完整的。而 i in b这里其实也是iter(b)的,但是b已经是迭代器实例了，对于迭代器来说调用iter函数还是其本身即是iter(b) is b，而b上一句for过了，此时为空，所以return all(((i in b) for i in a))会是False。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1561106093,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":105737,"user_name":"tt","can_delete":false,"product_type":"c1","uid":1489957,"ip_address":"","ucode":"7753B79AD5A9AC","user_header":"https://static001.geekbang.org/account/avatar/00/16/bc/25/1c92a90c.jpg","comment_is_top":false,"comment_ctime":1561079927,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1561079927","product_id":100026901,"comment_content":"最后一个例子为什么要把b转换成迭代器呢？试了一下，不转换成b似乎就不是生成器而不能保存指针位置了，但是原理没搞清楚","like_count":0},{"had_liked":false,"id":105709,"user_name":"Hoo-Ah","can_delete":false,"product_type":"c1","uid":1306913,"ip_address":"","ucode":"823093A6C7DEE7","user_header":"https://static001.geekbang.org/account/avatar/00/13/f1/21/52e8267b.jpg","comment_is_top":false,"comment_ctime":1561078030,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1561078030","product_id":100026901,"comment_content":"生成器迭代完成后继续使用next会报错，生成器里面的元素只能被迭代一次，生成器只能往前迭代。","like_count":0},{"had_liked":false,"id":105649,"user_name":"LJK","can_delete":false,"product_type":"c1","uid":1199213,"ip_address":"","ucode":"12B2441099FF1D","user_header":"https://static001.geekbang.org/account/avatar/00/12/4c/6d/c20f2d5a.jpg","comment_is_top":false,"comment_ctime":1561060377,"is_pvip":false,"replies":[{"id":"38386","content":"四个结果中最后一个是最终 print is_subsequence 的结果，前三个对应于 a 的三个元素。","user_name":"作者回复","user_name_real":"高山流水","uid":"1513504","ctime":1561239707,"ip_address":"","comment_id":105649,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1561060377","product_id":100026901,"comment_content":"老师好，请问子序列的问题中为什么只有四个布尔值输出？不是一共五个元素吗？","like_count":0,"discussions":[{"author":{"id":1513504,"avatar":"https://static001.geekbang.org/account/avatar/00/17/18/20/75ea3b20.jpg","nickname":"高山流水","note":"","ucode":"71E513B5937481","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":454754,"discussion_content":"四个结果中最后一个是最终 print is_subsequence 的结果，前三个对应于 a 的三个元素。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1561239707,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]}]}