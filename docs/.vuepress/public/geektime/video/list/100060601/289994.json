{"id":289994,"title":"07 | 语法面面观：面向表达式（二）","content":"<p><strong>课件及Demo下载链接</strong><br>\n<a href=\"https://gitee.com/geektime-geekbang/geektime-Rust\">https://gitee.com/geektime-geekbang/geektime-Rust</a></p>","comments":[{"had_liked":false,"id":250141,"user_name":"__Unsafe","can_delete":false,"product_type":"c3","uid":1237779,"ip_address":"","ucode":"7D9975396A3194","user_header":"https://static001.geekbang.org/account/avatar/00/12/e3/13/feaf21e4.jpg","comment_is_top":false,"comment_ctime":1600949799,"is_pvip":false,"replies":null,"discussion_count":1,"race_medal":0,"score":2,"product_id":100060601,"comment_content":"const generic那里应该是let arr: [i32; 3] = [1, 2, 3];let arr: [i32; 5] = [1, 2, 3, 4, 5];","like_count":4,"discussions":[{"author":{"id":1198100,"avatar":"https://static001.geekbang.org/account/avatar/00/12/48/14/bb345fa8.jpg","nickname":"🍵Alex","note":"","ucode":"88373FAA431D5A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":311438,"discussion_content":"感谢反馈","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1602339094,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":283121,"user_name":"25ma","can_delete":false,"product_type":"c3","uid":1303713,"ip_address":"","ucode":"AB5435B9DB52C9","user_header":"https://static001.geekbang.org/account/avatar/00/13/e4/a1/178387da.jpg","comment_is_top":false,"comment_ctime":1615558722,"is_pvip":false,"replies":null,"discussion_count":1,"race_medal":0,"score":2,"product_id":100060601,"comment_content":"极客时间这个第二层的回复一定要点进去才能看，这个真的要命哦，尤其是视频区，体验很糟糕","like_count":2,"discussions":[{"author":{"id":1895905,"avatar":"https://static001.geekbang.org/account/avatar/00/1c/ed/e1/b06122f3.jpg","nickname":"八岛","note":"","ucode":"D64ABC0D3CF113","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":588328,"discussion_content":"视频交互做的真是垃圾，ipad连全屏都没","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1663667038,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":"北京","group_id":0},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":387783,"user_name":"Bachue Zhou","can_delete":false,"product_type":"c3","uid":1494491,"ip_address":"上海","ucode":"3175754775CA32","user_header":"https://static001.geekbang.org/account/avatar/00/16/cd/db/7467ad23.jpg","comment_is_top":false,"comment_ctime":1708579912,"is_pvip":false,"replies":null,"discussion_count":0,"race_medal":0,"score":2,"product_id":100060601,"comment_content":"为什么 Rust 已经能通过 constexpr 计算常量值，却不能在 while expr 里先判断下 expr 是不是 constexpr，如果是，判定值是不是 true 来正确实现编译器对 while true 的判断？","like_count":0},{"had_liked":false,"id":364994,"user_name":"谢作作的男人","can_delete":false,"product_type":"c3","uid":1909094,"ip_address":"广东","ucode":"4F220EA8AEBFB9","user_header":"https://static001.geekbang.org/account/avatar/00/1d/21/66/85f247e2.jpg","comment_is_top":false,"comment_ctime":1671870197,"is_pvip":false,"replies":null,"discussion_count":0,"race_medal":0,"score":2,"product_id":100060601,"comment_content":"书《rust编程之道》中，有一段ruby和rust的代码对比，5.times(|| println!(&quot;&quot;));，但rust中并没有这个times方法啊！","like_count":0},{"had_liked":false,"id":341000,"user_name":"c12","can_delete":false,"product_type":"c3","uid":2194243,"ip_address":"","ucode":"ED7FA87DFF0C87","user_header":"https://thirdwx.qlogo.cn/mmopen/vi_32/DYAIOgq83epGhcTibyH7n2bKIpzVf0FlUQAaicze0GpQOH1Z4j6dibtr8y17aY4gjmmg7dAuS1QBJPHP1RyoCCa1Q/132","comment_is_top":false,"comment_ctime":1649286819,"is_pvip":false,"replies":null,"discussion_count":0,"race_medal":0,"score":2,"product_id":100060601,"comment_content":"常量函数使用场景是啥","like_count":0},{"had_liked":false,"id":340448,"user_name":"Jzq","can_delete":false,"product_type":"c3","uid":2953704,"ip_address":"","ucode":"58E0C231E20A0C","user_header":"https://static001.geekbang.org/account/avatar/00/2d/11/e8/e26cc95a.jpg","comment_is_top":false,"comment_ctime":1648817461,"is_pvip":false,"replies":null,"discussion_count":0,"race_medal":0,"score":2,"product_id":100060601,"comment_content":"老师,求斐波那契数那里,判断语句最终应该返回a,而不是b吧,\n因为虽然在递归里面把b参数调到了前边,把const fn helper(n,b,a+b,i)的参数顺序改变了,但最后一行返回值helper(n,a,b,i)的参数顺序没有变.\n如果else里面写的是b,那么最终返回的将会是 a+b 的值\n改成a,才会最终返回b的值","like_count":0},{"had_liked":false,"id":327249,"user_name":"Amesy","can_delete":false,"product_type":"c3","uid":2843586,"ip_address":"","ucode":"84D0B7D133520A","user_header":"https://static001.geekbang.org/account/avatar/00/2b/63/c2/83d737ff.jpg","comment_is_top":false,"comment_ctime":1640006701,"is_pvip":false,"replies":null,"discussion_count":0,"race_medal":0,"score":2,"product_id":100060601,"comment_content":"数组是二等公民，你无法使用范型来定义不同长度的数组。","like_count":0},{"had_liked":false,"id":314448,"user_name":"aaron","can_delete":false,"product_type":"c3","uid":1097648,"ip_address":"","ucode":"7DBB9B0656BDC3","user_header":"https://static001.geekbang.org/account/avatar/00/10/bf/b0/6730d757.jpg","comment_is_top":false,"comment_ctime":1633065941,"is_pvip":false,"replies":null,"discussion_count":2,"race_medal":0,"score":2,"product_id":100060601,"comment_content":"写成const fn，是不是编译时帮助你计算完成，真正运行时并不会执行？\n\n```rust\nconst fn fib(n: u128) -&gt; u128 {\n    const fn helper(n: u128, a: u128, b: u128, i: u128) -&gt; u128 {\n        if i &lt;= n {\n            helper(n, b, a+b, i+1)\n        } else {\n            b\n        }\n    }\n    helper(n, 1, 1, 2)\n}\n\nfn main() {\n    println!(&quot;{}&quot;, fib(50));\n}\n```\n\n真正执行的时候，直接变为以下代码\n```rust\nfn main() {\n\tprintln!(&quot;{}&quot;, 20365011074);\n}\n```\n\n按照我的理解，Vec使用const，性能会更高，举例：\n```rust\nlet vec: Vec&lt;i32&gt; = vec![1, 2, 3];\n\n实际执行过程\nlet vec: Vec&lt;i32&gt; = Vec::new();\nvalue.push(1);\nvalue.push(2);\nvalue.push(3);\n```\n如果是const的话，应该一步到位。\n\n但是为啥const Vec只能是空Vec，否则会编译报错。\n```shell\nerror[E0010]: allocations are not allowed in constants\n  --&gt; console&#47;src&#47;main.rs:17:29\n   |\n17 |     const value: Vec&lt;i32&gt; = vec![1, 2, 3];\n   |                             ^^^^^^^^^^^^^ allocation not allowed in constants\n   |\n   = note: this error originates in the macro `vec` (in Nightly builds, run with -Z macro-backtrace for more info)\n```\n\n而且我还发现一件事。\n```rust\nfn main() {\n    const value: Vec&lt;i32&gt; = vec![];\n    \n    &#47;&#47;&#47; 这里尽然编译也不报错，why？\n    value.push(120);\n    \n    &#47;&#47;&#47; output：value: [] len: 0\n    println!(&quot;value: {:?} len: {}&quot;, value, value.len());\n}\n```","like_count":0,"discussions":[{"author":{"id":2651529,"avatar":"https://static001.geekbang.org/account/avatar/00/28/75/89/bc9048bf.jpg","nickname":"Night Cruising","note":"","ucode":"AD9D6E15320398","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":547034,"discussion_content":"因为Vec::new()是常量函数，所以可以使用let VALUE: Vec&lt;i32&gt; = Vec::new()定义一个常量，根据官方文档：“The vector will not allocate until elements are pushed onto it.”，可以知道实际上Vec::new()不会分布内存直到有数据被push进去，那么使用Vec::new()创建常量自然也就是可以的。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1642500728,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":2651529,"avatar":"https://static001.geekbang.org/account/avatar/00/28/75/89/bc9048bf.jpg","nickname":"Night Cruising","note":"","ucode":"AD9D6E15320398","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":547031,"discussion_content":"Vec的数据是在堆上管理的，所以自然不能使用const VALUE: Vec&lt;i32&gt; = vec![1, 2, 3]定义一个常量。同时下面的那个例子根据编译信息提示：“= note: each usage of a `const` item creates a new temporary\n     = note: the mutable reference will refer to this temporary, not the original `const` item”，之所以const定义的value.push(120)不报错是因为创建一个新的临时项，然后会有一个可变引用指向这个临时项，这与原来的value无关，那么自然就不会报错。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1642500556,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":293744,"user_name":"Nickel","can_delete":false,"product_type":"c3","uid":1067234,"ip_address":"","ucode":"72B23682231500","user_header":"https://static001.geekbang.org/account/avatar/00/10/48/e2/e5d8a9a9.jpg","comment_is_top":false,"comment_ctime":1621518480,"is_pvip":false,"replies":null,"discussion_count":0,"race_medal":0,"score":2,"product_id":100060601,"comment_content":"代码字体太小了，较短的代码最好将字体放大2倍方便阅读。较长的代码起码也得在手机上看得清才行。","like_count":0},{"had_liked":false,"id":251966,"user_name":"Believer(入陣)","can_delete":false,"product_type":"c3","uid":1127667,"ip_address":"","ucode":"A57EFA4E534019","user_header":"https://static001.geekbang.org/account/avatar/00/11/34/f3/465e90d0.jpg","comment_is_top":false,"comment_ctime":1602006822,"is_pvip":false,"replies":null,"discussion_count":1,"race_medal":0,"score":2,"product_id":100060601,"comment_content":"老师好，请问对开发者是隐藏的和对开发者是透明的区别是？","like_count":0,"discussions":[{"author":{"id":1198100,"avatar":"https://static001.geekbang.org/account/avatar/00/12/48/14/bb345fa8.jpg","nickname":"🍵Alex","note":"","ucode":"88373FAA431D5A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":311437,"discussion_content":"对开发者隐藏的意思是，它是编译器的行为，开发者看不到。常量传播是编译器的一种自动优化。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1602339086,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":251348,"user_name":"蜉蝣","can_delete":false,"product_type":"c3","uid":1229070,"ip_address":"","ucode":"77CF92496855D4","user_header":"https://static001.geekbang.org/account/avatar/00/12/c1/0e/2b987d54.jpg","comment_is_top":false,"comment_ctime":1601474042,"is_pvip":false,"replies":null,"discussion_count":1,"race_medal":0,"score":3,"product_id":100060601,"comment_content":"老师好，我的 const fn 报错：`if` is not allowed in a `const fn`\n\n是因为 rust 版本的原因吗？\n\ncode：\n```\nconst fn fib(n: u128) -&gt; u128 {\n    const fn helper(n: u128, a: u128, b: u128, i: u128) -&gt; u128 {\n        if i &lt;= n {\n            helper(n, b, a+b, i+1)\n        } else {\n            b\n        }\n    }\n    helper(n, 1, 1, 2)\n}\n```","like_count":0,"discussions":[{"author":{"id":1198100,"avatar":"https://static001.geekbang.org/account/avatar/00/12/48/14/bb345fa8.jpg","nickname":"🍵Alex","note":"","ucode":"88373FAA431D5A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":311436,"discussion_content":"看错误提示，显然是因为Rust版本。if 在 Rust 1.46才在const fn中支持。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1602338981,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":251248,"user_name":"小超人","can_delete":false,"product_type":"c3","uid":1048095,"ip_address":"","ucode":"4CDF9CA041859C","user_header":"https://static001.geekbang.org/account/avatar/00/0f/fe/1f/6a3f2abb.jpg","comment_is_top":false,"comment_ctime":1601435439,"is_pvip":false,"replies":null,"discussion_count":1,"race_medal":0,"score":3,"product_id":100060601,"comment_content":"3. 思考标准库中std::vec::Vec::new函数为什么是const fn？这样做有什么好处？\n我的理解是：为了提升性能，顺便问一下，是不是能写成const fn的函数尽量写成const fn？ 我看某些C语言加密算法的源码，把大部分纯计算类的函数都写成了宏。\n我同学的回答：把Vec::new定义成const fn，就可以很方便地定义Vec&lt;T&gt;类型的常量或静态变量了，如：\nstatic V: Vec&lt;i32&gt; = vec![];\nconst VV: Vec&lt;i32&gt; = vec![];\n如果Vec::new不是const fn，则无法定义Vec&lt;T&gt;常量，想定义Vec&lt;T&gt;静态变量的话，得借助第三方库lazy_static。","like_count":0,"discussions":[{"author":{"id":1198100,"avatar":"https://static001.geekbang.org/account/avatar/00/12/48/14/bb345fa8.jpg","nickname":"🍵Alex","note":"","ucode":"88373FAA431D5A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":311440,"discussion_content":"思考的结果不错。 Vec::new 成为 const fn ，它也不会进行任何内存分配。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1602339166,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":250370,"user_name":"吴翱翔","can_delete":false,"product_type":"c3","uid":2041232,"ip_address":"","ucode":"D62CAAF998430C","user_header":"https://static001.geekbang.org/account/avatar/00/1f/25/90/64d912ec.jpg","comment_is_top":false,"comment_ctime":1601039766,"is_pvip":false,"replies":null,"discussion_count":1,"race_medal":0,"score":3,"product_id":100060601,"comment_content":"sqlx库的编译时SQL语句类型和语法检查也是通过const fn去实现的吗？","like_count":0,"discussions":[{"author":{"id":1198100,"avatar":"https://static001.geekbang.org/account/avatar/00/12/48/14/bb345fa8.jpg","nickname":"🍵Alex","note":"","ucode":"88373FAA431D5A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":309198,"discussion_content":"这个问题不妨学完这节课当成你自己的练习作业，去看看sqlx源码了解一下，看能否应用学到的知识解决你这个问题。到时候你可以发布在这里给大家共享一下","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1601214383,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]}]}