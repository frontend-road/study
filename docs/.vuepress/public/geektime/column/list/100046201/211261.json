{"id":211261,"title":"12 | 异常重试：在约定时间内安全可靠地重试","content":"<p>你好，我是何小锋。上一讲我讲解了在RPC框架中如何设计自适应的负载均衡，其关键点就是调用端收集服务端每个节点的指标数据，再根据各方面的指标数据进行计算打分，最后根据每个节点的分数，将更多的流量打到分数较高的节点上。</p><p>今天我们就继续下一个话题，讲讲RPC框架中的异常重试机制。</p><h2>为什么需要异常重试？</h2><p>我们可以考虑这样一个场景。我们发起一次RPC调用，去调用远程的一个服务，比如用户的登录操作，我们会先对用户的用户名以及密码进行验证，验证成功之后会获取用户的基本信息。当我们通过远程的用户服务来获取用户基本信息的时候，恰好网络出现了问题，比如网络突然抖了一下，导致我们的请求失败了，而这个请求我们希望它能够尽可能地执行成功，那这时我们要怎么做呢？</p><p>我们需要重新发起一次RPC调用，那我们在代码中该如何处理呢？是在代码逻辑里catch一下，失败了就再发起一次调用吗？这样做显然不够优雅吧。这时我们就可以考虑使用RPC框架的重试机制。</p><h2>RPC框架的重试机制</h2><p>那什么是RPC框架的重试机制呢？</p><p>这其实很好理解，就是当调用端发起的请求失败时，RPC框架自身可以进行重试，再重新发送请求，用户可以自行设置是否开启重试以及重试的次数。</p><!-- [[[read_end]]] --><p>那这个机制是如何实现的呢？</p><p><img src=\"https://static001.geekbang.org/resource/image/32/81/32441dc643e64a022acfcbe0b4c77e81.jpg?wh=5154*1923\" alt=\"\" title=\"RPC异常重试\"></p><p>还是挺简单的。我们可以回想下<a href=\"https://time.geekbang.org/column/article/210893\">[第 11 讲]</a>，通过这一讲我们了解到，调用端在发起RPC调用时，会经过负载均衡，选择一个节点，之后它会向这个节点发送请求信息。当消息发送失败或收到异常消息时，我们就可以捕获异常，根据异常触发重试，重新通过负载均衡选择一个节点发送请求消息，并且记录请求的重试次数，当重试次数达到用户配置的重试次数的时候，就返回给调用端动态代理一个失败异常，否则就一直重试下去。</p><p>RPC框架的重试机制就是调用端发现请求失败时捕获异常，之后触发重试，那是不是所有的异常都要触发重试呢？</p><p>当然不是了，因为这个异常可能是服务提供方抛回来的业务异常，它是应该正常返回给动态代理的，所以我们要在触发重试之前对捕获的异常进行判定，只有符合重试条件的异常才能触发重试，比如网络超时异常、网络连接异常等等。</p><p>了解了RPC框架的重试机制，那用户在使用异常重试时需要注意哪些问题呢？</p><p>比如我刚才提的那个调用场景，当网络突然抖动了一下导致请求超时了，但这个时候调用方的请求信息可能已经发送到服务提供方的节点上，也可能已经发送到服务提供方的服务节点上，那如果请求信息成功地发送到了服务节点上，那这个节点是不是就要执行业务逻辑了呢？是的。</p><p>那如果这个时候发起了重试，业务逻辑是否会被执行呢？会的。</p><p>那如果这个服务业务逻辑不是幂等的，比如插入数据操作，那触发重试的话会不会引发问题呢？会的。</p><p>综上，我们可以总结出：在使用RPC框架的时候，我们要确保被调用的服务的业务逻辑是幂等的，这样我们才能考虑根据事件情况开启RPC框架的异常重试功能。这一点你要格外注意，这算是一个高频误区了。</p><p>通过上述讲解，我相信你已经非常清楚RPC框架的重试机制了，这也是现在大多数RPC框架所采用的重试机制。</p><p>那看到这儿，你觉得这个机制完善了吗？有没有想到连续重试对请求超时时间的影响？继续考虑这样一个场景：我把调用端的请求超时时间设置为5s，结果连续重试3次，每次都耗时2s，那最终这个请求的耗时是6s，那这样的话，调用端设置的超时时间是不是就不准确了呢？</p><h2>如何在约定时间内安全可靠地重试？</h2><p>我刚才讲到，连续的异常重试可能会出现一种不可靠的情况，那就是连续的异常重试并且每次处理的请求时间比较长，最终会导致请求处理的时间过长，超出用户设置的超时时间。</p><p>解决这个问题最直接的方式就是，在每次重试后都重置一下请求的超时时间。</p><p>当调用端发起RPC请求时，如果发送请求发生异常并触发了异常重试，我们可以先判定下这个请求是否已经超时，如果已经超时了就直接返回超时异常，否则就先重置下这个请求的超时时间，之后再发起重试。</p><p>那么解决了因多次异常重试引发的超时时间失效的问题，这个重试机制是不是就完全可靠了呢？</p><p>我们接着考虑，当调用端设置了异常重试策略，发起了一次RPC调用，通过负载均衡选择了节点，将请求消息发送到这个节点，这时这个节点由于负载压力较大，导致这个请求处理失败了，调用端触发了重试，再次通过负载均衡选择了一个节点，结果恰好仍选择了这个节点，那么在这种情况下，重试的效果是否受影响了呢？</p><p>当然有影响。因此，我们需要在所有发起重试、负载均衡选择节点的时候，去掉重试之前出现过问题的那个节点，以保证重试的成功率。</p><p>那我们现在再完整地回顾一下，<strong>考虑了业务逻辑必须是幂等的、超时时间需要重置以及去掉有问题的服务节点后，这样的异常重试机制，还有没有可优化的地方呢？</strong></p><p>我刚才讲过，RPC框架的异常重试机制，是调用端发送请求之后，如果发送失败会捕获异常，触发重试，但并不是所有的异常都会触发重试的，只有RPC框架中特定的异常才会如此，比如连接异常、超时异常。</p><p>而像服务端业务逻辑中抛回给调用端的异常是不能重试的。那么请你想一下这种情况：服务端的业务逻辑抛给调用端一个异常信息，而服务端抛出这个异常是允许调用端重新发起一次调用的。</p><p>比如这个场景：服务端的业务逻辑是对数据库某个数据的更新操作，更新失败则抛出个更新失败的异常，调用端可以再次调用，来触发服务端重新执行更新操作。那这个时候对于调用端来说，它接收到了更新失败异常，虽然是服务端抛回来的业务异常，但也是可以进行重试的。</p><p><strong>那么在这种情况下，RPC框架的重试机制需要怎么优化呢？</strong></p><p>RPC框架是不会知道哪些业务异常能够去进行异常重试的，我们可以加个重试异常的白名单，用户可以将允许重试的异常加入到这个白名单中。当调用端发起调用，并且配置了异常重试策略，捕获到异常之后，我们就可以采用这样的异常处理策略。如果这个异常是RPC框架允许重试的异常，或者这个异常类型存在于可重试异常的白名单中，我们就允许对这个请求进行重试。</p><p>所有可能出现的问题，我们排查了一圈下来之后，一个可靠的重试机制就诞生了，如下图所示：</p><p><img src=\"https://static001.geekbang.org/resource/image/5e/81/5e5706e6fc02ef0caaee565ea358f281.jpg?wh=5129*2058\" alt=\"\" title=\"可靠的异常重试机制\"></p><h2>总结</h2><p>今天我们讲解了RPC框架的重试机制，还有如何在约定时间内进行安全可靠地重试。</p><p>这个机制是当调用端发起的请求失败时，如果配置了异常重试策略，RPC框架会捕捉异常，对异常进行判定，符合条件则进行重试，重新发送请求。</p><p>在重试的过程中，为了能够在约定的时间内进行安全可靠地重试，在每次触发重试之前，我们需要先判定下这个请求是否已经超时，如果超时了会直接返回超时异常，否则我们需要重置下这个请求的超时时间，防止因多次重试导致这个请求的处理时间超过用户配置的超时时间，从而影响到业务处理的耗时。</p><p>在发起重试、负载均衡选择节点的时候，我们应该去掉重试之前出现过问题的那个节点，这样可以提高重试的成功率，并且我们允许用户配置可重试异常的白名单，这样可以让RPC框架的异常重试功能变得更加友好。</p><p>另外，在使用RPC框架的重试机制时，我们要确保被调用的服务的业务逻辑是幂等的，这样才能考虑是否使用重试，这一点至关重要。</p><h2>课后思考</h2><p>请你思考一下，在整个RPC调用的流程中，异常重试发生在哪个环节？</p><p>欢迎留言分享你的答案，也欢迎你把文章分享给你的朋友，邀请他加入学习。我们下节课再见！</p>","comments":[{"had_liked":false,"id":188003,"user_name":"shen","can_delete":false,"product_type":"c1","uid":1215066,"ip_address":"","ucode":"AE5737B0C7DC4F","user_header":"https://static001.geekbang.org/account/avatar/00/12/8a/5a/b67a82e3.jpg","comment_is_top":false,"comment_ctime":1584290797,"is_pvip":false,"discussion_count":1,"race_medal":0,"score":"139023244269","product_id":100046201,"comment_content":"每看一节内容就会对照下dubbo怎么实现的，理论和实践结合，老师后面可以给一个demo然后类比下dubbo相关的设计讲解下","like_count":32,"discussions":[{"author":{"id":1311995,"avatar":"https://static001.geekbang.org/account/avatar/00/14/04/fb/40f298bb.jpg","nickname":"小罗希冀","note":"","ucode":"88416458FF0041","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":218870,"discussion_content":"好建议！","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1585709360,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":189114,"user_name":"Darren","can_delete":false,"product_type":"c1","uid":1254968,"ip_address":"","ucode":"CCD2B2C492BE9A","user_header":"https://static001.geekbang.org/account/avatar/00/13/26/38/ef063dc2.jpg","comment_is_top":false,"comment_ctime":1584456706,"is_pvip":true,"replies":[{"id":"73842","content":"考虑的很周全","user_name":"作者回复","user_name_real":"何小锋","uid":"1541007","ctime":1585007806,"ip_address":"","comment_id":189114,"utype":1}],"discussion_count":6,"race_medal":0,"score":"113253606402","product_id":100046201,"comment_content":"其实重试也是需要时间间隔一直调整的，不然会影响服务方的性能；我们之前的处理是，重试的次数大于服务方实例的时候，我们会动态调整重试的间隔时间，举个例子：加入当前服务有3个实例，客户方重试的次数是10，那么前3次是失败就重试（不停的换下一个节点），从第四次开始，有延迟，第一次1S，第二次2S，第三次4S，以2的幂次方增加重试的等待时间，保证服务调用方不能被重试把QPS或者TPSzhan man占满。","like_count":26,"discussions":[{"author":{"id":1541007,"avatar":"https://static001.geekbang.org/account/avatar/00/17/83/8f/8471d633.jpg","nickname":"何小锋","note":"","ucode":"E9B3B4A1B75D8B","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":487610,"discussion_content":"考虑的很周全","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1585007806,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1106088,"avatar":"https://static001.geekbang.org/account/avatar/00/10/e0/a8/4e739cf6.jpg","nickname":"Sic Pavis","note":"","ucode":"48B5F0118347C8","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":379467,"discussion_content":"这种阶梯补发机制放到定时补发任务里更合理，一般接口不会在这耗这么长时间。","likes_number":2,"is_delete":false,"is_hidden":false,"ctime":1623915808,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1192218,"avatar":"https://static001.geekbang.org/account/avatar/00/12/31/1a/fd82b2d5.jpg","nickname":"刘士涛","note":"","ucode":"6D83F766D189E5","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":210806,"discussion_content":"二进制指数退避","likes_number":2,"is_delete":false,"is_hidden":false,"ctime":1584777299,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1066707,"avatar":"https://static001.geekbang.org/account/avatar/00/10/46/d3/e25d104a.jpg","nickname":"êｗěｎ","note":"","ucode":"5000233111BEFA","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":363950,"discussion_content":"backoff，可以看下google sre","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1617331695,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1571460,"avatar":"https://static001.geekbang.org/account/avatar/00/17/fa/84/f01d203a.jpg","nickname":"Simple life","note":"","ucode":"1902D7F72FB43F","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":310535,"discussion_content":"没意义，返回时长太久了，用户肯定等不及退出重试了，白白浪费了重试的流量","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1601895945,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":1,"child_discussions":[{"author":{"id":1963471,"avatar":"https://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTJ7II1e9tbUxZ3ialj44Vrw3w0jRlYrVWRyE2KveffALStawaiciaspatdweu7iaic96Yx9LV5WVPnVqAA/132","nickname":"零蛋大师(-_-)","note":"","ucode":"132A3779F9FA41","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1571460,"avatar":"https://static001.geekbang.org/account/avatar/00/17/fa/84/f01d203a.jpg","nickname":"Simple life","note":"","ucode":"1902D7F72FB43F","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":377121,"discussion_content":"看特定场景吧,比如后台更新操作","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1622514016,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":310535,"ip_address":""},"score":377121,"extra":""}]}]},{"had_liked":false,"id":188166,"user_name":"Reason","can_delete":false,"product_type":"c1","uid":1878898,"ip_address":"","ucode":"C2A8D67BC6F94D","user_header":"https://static001.geekbang.org/account/avatar/00/1c/ab/72/c3a5eff3.jpg","comment_is_top":false,"comment_ctime":1584325878,"is_pvip":false,"replies":[{"id":"72911","content":"很不错。","user_name":"作者回复","user_name_real":"何小锋","uid":"1541007","ctime":1584449243,"ip_address":"","comment_id":188166,"utype":1}],"discussion_count":1,"race_medal":0,"score":"57418900726","product_id":100046201,"comment_content":"按照老师所讲的内容，我认为异常重试机制发生在，客户端调用时，并且重试代码块包含的内容是集群处理(服务发现和负载均衡)，以及请求调用；并且包含异步响应的结果获取。<br>所以应该是在动态代理发起invoke，紧接着的一步","like_count":13,"discussions":[{"author":{"id":1541007,"avatar":"https://static001.geekbang.org/account/avatar/00/17/83/8f/8471d633.jpg","nickname":"何小锋","note":"","ucode":"E9B3B4A1B75D8B","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":487353,"discussion_content":"很不错。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1584449243,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":199381,"user_name":"小可","can_delete":false,"product_type":"c1","uid":1006735,"ip_address":"","ucode":"8834AF621FA67D","user_header":"https://static001.geekbang.org/account/avatar/00/0f/5c/8f/551b5624.jpg","comment_is_top":false,"comment_ctime":1585488116,"is_pvip":false,"replies":[{"id":"74783","content":"关键点就是这些。","user_name":"作者回复","user_name_real":"何小锋","uid":"1541007","ctime":1585529441,"ip_address":"","comment_id":199381,"utype":1}],"discussion_count":2,"race_medal":0,"score":"48830128372","product_id":100046201,"comment_content":"1.保证被重试的业务服务是幂等的，<br>2.超时重试前重置计时<br>3.针对业务返回的异常，设置重试异常名单<br>4.重试时负载均衡选取节点时要剔除前一次访问的节点","like_count":11,"discussions":[{"author":{"id":1541007,"avatar":"https://static001.geekbang.org/account/avatar/00/17/83/8f/8471d633.jpg","nickname":"何小锋","note":"","ucode":"E9B3B4A1B75D8B","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":489826,"discussion_content":"关键点就是这些。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1585529441,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1025340,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/a5/3c/7c0d2e57.jpg","nickname":"程序员老王","note":"","ucode":"28577A15F064CF","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":342697,"discussion_content":"一般操作很少米操作把，这个是伪命题","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1610781493,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":217744,"user_name":"钱","can_delete":false,"product_type":"c1","uid":1009652,"ip_address":"","ucode":"2C92A243A463D4","user_header":"https://static001.geekbang.org/account/avatar/00/0f/67/f4/9a1feb59.jpg","comment_is_top":false,"comment_ctime":1589600959,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"27359404735","product_id":100046201,"comment_content":"异常重试的要点：<br>第一重试的业务服务是幂等的（这个我认为，更细致一点，如果能判定连接未建立，请求未打到服务端，非幂等的也可以重试，毕竟请求压根就没到服务端）<br><br>第二重试时注意重置超时时间，不要超过业务设置的超时时间，目前组内的RPC这点貌似就没做<br><br>第三针对业务返回的异常，有些也需要重试，需要考虑怎么重试，比如：设置异常重试白名单，我们之前还使用过服务端告知的情况，在响应信息中给出是否可重试的建议，在服务端判断有些情况可以重试，就建议上游重试<br><br>第四重试时，在通过负载均衡选择重试节点时踢出异常的节点","like_count":6},{"had_liked":false,"id":199798,"user_name":"tttw","can_delete":false,"product_type":"c1","uid":1200858,"ip_address":"","ucode":"36EF5E82704346","user_header":"https://static001.geekbang.org/account/avatar/00/12/52/da/a6f990b6.jpg","comment_is_top":false,"comment_ctime":1585496051,"is_pvip":false,"replies":[{"id":"74782","content":"很不错！","user_name":"作者回复","user_name_real":"何小锋","uid":"1541007","ctime":1585529398,"ip_address":"","comment_id":199798,"utype":1}],"discussion_count":2,"race_medal":0,"score":"27355299827","product_id":100046201,"comment_content":"failsafe failfast failover failback ","like_count":6,"discussions":[{"author":{"id":1541007,"avatar":"https://static001.geekbang.org/account/avatar/00/17/83/8f/8471d633.jpg","nickname":"何小锋","note":"","ucode":"E9B3B4A1B75D8B","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":489878,"discussion_content":"很不错！","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1585529398,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1333380,"avatar":"https://static001.geekbang.org/account/avatar/00/14/58/84/fd5031e5.jpg","nickname":"别忘微笑","note":"","ucode":"855266F40976E7","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":385961,"discussion_content":"m","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1627362358,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":188030,"user_name":"每天晒白牙","can_delete":false,"product_type":"c1","uid":1004698,"ip_address":"","ucode":"A1B102CD933DEA","user_header":"https://static001.geekbang.org/account/avatar/00/0f/54/9a/76c0af70.jpg","comment_is_top":false,"comment_ctime":1584315917,"is_pvip":false,"replies":[{"id":"72782","content":"那如果是由于网络问题呢，调用端没收到响应，服务端就没法处理了吧？","user_name":"作者回复","user_name_real":"何小锋","uid":"1541007","ctime":1584410031,"ip_address":"","comment_id":188030,"utype":1}],"discussion_count":1,"race_medal":0,"score":"27354119693","product_id":100046201,"comment_content":"个人感觉异常重试还是主要放到远程调用服务端这块","like_count":6,"discussions":[{"author":{"id":1541007,"avatar":"https://static001.geekbang.org/account/avatar/00/17/83/8f/8471d633.jpg","nickname":"何小锋","note":"","ucode":"E9B3B4A1B75D8B","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":487321,"discussion_content":"那如果是由于网络问题呢，调用端没收到响应，服务端就没法处理了吧？","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1584410031,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":209800,"user_name":"忆水寒","can_delete":false,"product_type":"c1","uid":1147453,"ip_address":"","ucode":"E3F86BD8AA8903","user_header":"https://static001.geekbang.org/account/avatar/00/11/82/3d/356fc3d6.jpg","comment_is_top":false,"comment_ctime":1587617690,"is_pvip":false,"replies":[{"id":"79064","content":"rpc都是实时业务，退避好像不合适啊","user_name":"作者回复","user_name_real":"何小锋","uid":"1541007","ctime":1588255912,"ip_address":"","comment_id":209800,"utype":1}],"discussion_count":1,"race_medal":0,"score":"18767486874","product_id":100046201,"comment_content":"这个异常机制其实就像网络socket连接的时候发生的异常一样，我们可以采用避退策略。也就是第一次失败，延迟2秒再试第二次。假如第二次再失败，延迟4秒。直道重试次数达到上限。<br>当然了，在RPC场景下，我们也可以在前几次不断的路由切换，切换到不同的服务提供节点。","like_count":4,"discussions":[{"author":{"id":1541007,"avatar":"https://static001.geekbang.org/account/avatar/00/17/83/8f/8471d633.jpg","nickname":"何小锋","note":"","ucode":"E9B3B4A1B75D8B","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":492868,"discussion_content":"rpc都是实时业务，退避好像不合适啊","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1588255912,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":188046,"user_name":"高源","can_delete":false,"product_type":"c1","uid":1048887,"ip_address":"","ucode":"751B41FD38EF7D","user_header":"https://static001.geekbang.org/account/avatar/00/10/01/37/12e4c9c9.jpg","comment_is_top":false,"comment_ctime":1584318502,"is_pvip":false,"replies":[{"id":"72794","content":"每个框架的实现都有区别，你可以找一些开源框架，阅读源码，一一印证下，看他们的实现哪些可以借鉴，哪些需要改进。","user_name":"作者回复","user_name_real":"何小锋","uid":"1541007","ctime":1584410980,"ip_address":"","comment_id":188046,"utype":1}],"discussion_count":1,"race_medal":0,"score":"18764187686","product_id":100046201,"comment_content":"老师讲了这些，能不能加入演示例子，原理清楚了，还差在动手能力啊😊","like_count":4,"discussions":[{"author":{"id":1541007,"avatar":"https://static001.geekbang.org/account/avatar/00/17/83/8f/8471d633.jpg","nickname":"何小锋","note":"","ucode":"E9B3B4A1B75D8B","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":487326,"discussion_content":"每个框架的实现都有区别，你可以找一些开源框架，阅读源码，一一印证下，看他们的实现哪些可以借鉴，哪些需要改进。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1584410980,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":188560,"user_name":"楼下小黑哥","can_delete":false,"product_type":"c1","uid":1014680,"ip_address":"","ucode":"453B099B0EE52E","user_header":"https://static001.geekbang.org/account/avatar/00/0f/7b/98/8f1aecf4.jpg","comment_is_top":false,"comment_ctime":1584368464,"is_pvip":false,"replies":[{"id":"72912","content":"重置超时时间是指，将10秒置为5秒，很大开源的rpc框架是不会修改超时时间的。","user_name":"作者回复","user_name_real":"何小锋","uid":"1541007","ctime":1584449501,"ip_address":"","comment_id":188560,"utype":1}],"discussion_count":4,"race_medal":0,"score":"14469270352","product_id":100046201,"comment_content":"&gt;&gt;否则我们需要重置下这个请求的超时时间，防止因多次重试导致这个请求的处理时间超过用户配置的超时时间，从而影响到业务处理的耗时。<br><br>这段超时时间重置不是很理解，A---&gt;B---&gt;C，B 调用 C 超时时间 10s，重试次数为 2.<br>如果 B 调用 C 耗费 5s 失败，然后重试。这时重试的超时不是只剩下 5 s 了吗？<br>如果又将这次超时时间重置为 10s，假如这次调用成功了，消耗了 9S，那么 B 总体耗费了 14 S，但是 A 设置超时时间假如 12 s，这时 A 不是已经超时断开了吗？<br><br>","like_count":3,"discussions":[{"author":{"id":1541007,"avatar":"https://static001.geekbang.org/account/avatar/00/17/83/8f/8471d633.jpg","nickname":"何小锋","note":"","ucode":"E9B3B4A1B75D8B","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":487448,"discussion_content":"重置超时时间是指，将10秒置为5秒，很大开源的rpc框架是不会修改超时时间的。","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1584449501,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1595002,"avatar":"https://static001.geekbang.org/account/avatar/00/18/56/7a/60c3d6a5.jpg","nickname":"STAND ALONE COMPLEX","note":"","ucode":"2AC2F9B0A6D823","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":292011,"discussion_content":"我也感觉老师说的有些前后矛盾","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1595050677,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1556708,"avatar":"https://wx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTKYLPAlGUWic4yAqsGtEYBSRR7gDjyg9yiaJicNhMwiaNw4rMKQ5DHTfp7gmic0gpqEwCZaou8G6CdHKCg/132","nickname":"ant","note":"","ucode":"A39A03AF257471","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":233680,"discussion_content":"老师，您这个回复让我更加迷惑了，将10秒置为5秒难以理解啊，B调用C的超时时间设置为5秒是指开始配置的时候要考虑总超时时间大于重试次数乘重试部分的超时时间嘛？","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1586938753,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":1,"child_discussions":[{"author":{"id":1618828,"avatar":"","nickname":"面向工资编程","note":"","ucode":"07F797F021BDD0","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1556708,"avatar":"https://wx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTKYLPAlGUWic4yAqsGtEYBSRR7gDjyg9yiaJicNhMwiaNw4rMKQ5DHTfp7gmic0gpqEwCZaou8G6CdHKCg/132","nickname":"ant","note":"","ucode":"A39A03AF257471","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":271879,"discussion_content":"自己的理解是多次重试的时候，超时时间要减去重试的时间，这样防止重试期间内，虽然单次重试时间内调用不超时，但是整体调用其实是超时的情况。","likes_number":2,"is_delete":false,"is_hidden":false,"ctime":1590211923,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":233680,"ip_address":""},"score":271879,"extra":""}]}]},{"had_liked":false,"id":188460,"user_name":"answer宫","can_delete":false,"product_type":"c1","uid":1114020,"ip_address":"","ucode":"54CA51DE2BE829","user_header":"https://static001.geekbang.org/account/avatar/00/10/ff/a4/55520286.jpg","comment_is_top":false,"comment_ctime":1584356909,"is_pvip":false,"replies":[{"id":"72788","content":"这个应该是rpc框架实现，方便使用方使用，至于性能开销，就要看计算的算法了，不要小看计算机的能力","user_name":"作者回复","user_name_real":"何小锋","uid":"1541007","ctime":1584410646,"ip_address":"","comment_id":188460,"utype":1}],"discussion_count":1,"race_medal":0,"score":"10174291501","product_id":100046201,"comment_content":"老师您好,文中提到&quot;调用端收集服务端每个节点的指标数据，再根据各方面的指标数据进行计算打分，最后根据每个节点的分数，将更多的流量打到分数较高的节点上。&quot;,如果每个调用端都要单独检测服务端节点的各项指标,这也是一个不小的性能损耗把?这个检测要每个调用端自己实现吗?这个开发量也不少啊,请老师解惑","like_count":2,"discussions":[{"author":{"id":1541007,"avatar":"https://static001.geekbang.org/account/avatar/00/17/83/8f/8471d633.jpg","nickname":"何小锋","note":"","ucode":"E9B3B4A1B75D8B","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":487424,"discussion_content":"这个应该是rpc框架实现，方便使用方使用，至于性能开销，就要看计算的算法了，不要小看计算机的能力","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1584410646,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":188290,"user_name":"好运来","can_delete":false,"product_type":"c1","uid":1113937,"ip_address":"","ucode":"F469ED6CEFEF30","user_header":"https://static001.geekbang.org/account/avatar/00/10/ff/51/9d5cfadd.jpg","comment_is_top":false,"comment_ctime":1584336415,"is_pvip":true,"discussion_count":0,"race_medal":1,"score":"10174271007","product_id":100046201,"comment_content":"有demo代码能够结合所讲内容会更容易理解","like_count":2},{"had_liked":false,"id":257074,"user_name":"轨迹","can_delete":false,"product_type":"c1","uid":1738455,"ip_address":"","ucode":"6C9619A0B60CDD","user_header":"https://static001.geekbang.org/account/avatar/00/1a/86/d7/bfd9e42a.jpg","comment_is_top":false,"comment_ctime":1603847914,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"5898815210","product_id":100046201,"comment_content":"重置超时时间，意思是，如果调用方设置超时时间是3秒，第一次调用2秒发生异常，重试的时候会重置超时时间为3秒然后进行重试，重试3次都2秒异常，这样实际的调用时间不就是2+2+2+2，8秒了吗？是这个意思吗？","like_count":1},{"had_liked":false,"id":206813,"user_name":"ant","can_delete":false,"product_type":"c1","uid":1556708,"ip_address":"","ucode":"A39A03AF257471","user_header":"https://wx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTKYLPAlGUWic4yAqsGtEYBSRR7gDjyg9yiaJicNhMwiaNw4rMKQ5DHTfp7gmic0gpqEwCZaou8G6CdHKCg/132","comment_is_top":false,"comment_ctime":1586940232,"is_pvip":false,"replies":[{"id":"77662","content":"方案没问题，但需要考虑团队研发整体接受度","user_name":"作者回复","user_name_real":"何小锋","uid":"1541007","ctime":1587270473,"ip_address":"","comment_id":206813,"utype":1}],"discussion_count":1,"race_medal":0,"score":"5881907528","product_id":100046201,"comment_content":"老师，“保证被重试的业务服务是幂等的”，这就要求了服务提供方必须能支持重复请求，而这就需要业务部门在开发可提供的每一个服务时候都要注意到这一点，那么我们是否能在服务具体逻辑之前增加一层呢，比如每一次请求带有唯一id，这一层逻辑负责统计唯一id的执行情况以及是否完成了回调，重复收到的请求，是否能把保存下来的结果直接返回呢。","like_count":1,"discussions":[{"author":{"id":1541007,"avatar":"https://static001.geekbang.org/account/avatar/00/17/83/8f/8471d633.jpg","nickname":"何小锋","note":"","ucode":"E9B3B4A1B75D8B","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":491912,"discussion_content":"方案没问题，但需要考虑团队研发整体接受度","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1587270473,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":197085,"user_name":"魔曦","can_delete":false,"product_type":"c1","uid":1045408,"ip_address":"","ucode":"87BA5EC5B0BC42","user_header":"https://static001.geekbang.org/account/avatar/00/0f/f3/a0/a693e561.jpg","comment_is_top":false,"comment_ctime":1585357547,"is_pvip":false,"replies":[{"id":"74951","content":"rpc可以做到话，尽量下沉","user_name":"作者回复","user_name_real":"何小锋","uid":"1541007","ctime":1585570945,"ip_address":"","comment_id":197085,"utype":1}],"discussion_count":1,"race_medal":0,"score":"5880324843","product_id":100046201,"comment_content":"异常重试主要有客户端的重试，每个业务层也会有重试，通过幂等，白名单，摘除认为有问题的机器，重试次数来保证业务可用","like_count":1,"discussions":[{"author":{"id":1541007,"avatar":"https://static001.geekbang.org/account/avatar/00/17/83/8f/8471d633.jpg","nickname":"何小锋","note":"","ucode":"E9B3B4A1B75D8B","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":489446,"discussion_content":"rpc可以做到话，尽量下沉","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1585570945,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":188189,"user_name":"hello","can_delete":false,"product_type":"c1","uid":1464199,"ip_address":"","ucode":"854500026E2187","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTKhuGLVRYZibOTfMumk53Wn8Q0Rkg0o6DzTicbibCq42lWQoZ8lFeQvicaXuZa7dYsr9URMrtpXMVDDww/132","comment_is_top":false,"comment_ctime":1584327583,"is_pvip":false,"replies":[{"id":"72790","content":"调用端感知，超时后再发重试请求的时候，调用端自己去调整超时时间。","user_name":"作者回复","user_name_real":"何小锋","uid":"1541007","ctime":1584410724,"ip_address":"","comment_id":188189,"utype":1}],"discussion_count":2,"race_medal":0,"score":"5879294879","product_id":100046201,"comment_content":"老师，您好！请教您一个问题，文中“重试后都重置一下请求的超时时间”，这个操作是如何实现的（APP-&gt;A-&gt;B-&gt;C-&gt;D，C在调用D过程中超时了，是通过什么机制重置超时时间让APP端能感知到的）？","like_count":1,"discussions":[{"author":{"id":1541007,"avatar":"https://static001.geekbang.org/account/avatar/00/17/83/8f/8471d633.jpg","nickname":"何小锋","note":"","ucode":"E9B3B4A1B75D8B","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":487356,"discussion_content":"调用端感知，超时后再发重试请求的时候，调用端自己去调整超时时间。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1584410724,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1444145,"avatar":"https://static001.geekbang.org/account/avatar/00/16/09/31/535d60bc.jpg","nickname":"RuBy","note":"","ucode":"C677C3358CB295","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":205671,"discussion_content":"应该是说重置C给下游的时间","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1584330683,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":361074,"user_name":"TableBear","can_delete":false,"product_type":"c1","uid":1673990,"ip_address":"广东","ucode":"A2C0562EEA2725","user_header":"https://static001.geekbang.org/account/avatar/00/19/8b/06/fb3be14a.jpg","comment_is_top":false,"comment_ctime":1667186062,"is_pvip":true,"discussion_count":0,"race_medal":1,"score":"1667186062","product_id":100046201,"comment_content":"请问一下：超时时间重置是不是遇到可重试异常的时候，将超时时间重置为当前超时时间减去执行遇到异常的时间？","like_count":0},{"had_liked":false,"id":359397,"user_name":"hillwater","can_delete":false,"product_type":"c1","uid":2826205,"ip_address":"上海","ucode":"FB16D5FCE8C7E6","user_header":"","comment_is_top":false,"comment_ctime":1665494773,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1665494773","product_id":100046201,"comment_content":"阿里内部hsf不支持重试，因为太容易出bug了","like_count":0},{"had_liked":false,"id":334332,"user_name":"uking","can_delete":false,"product_type":"c1","uid":1522824,"ip_address":"","ucode":"41005AC547327B","user_header":"https://static001.geekbang.org/account/avatar/00/17/3c/88/e83528da.jpg","comment_is_top":false,"comment_ctime":1644889766,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1644889766","product_id":100046201,"comment_content":"“当调用端发起 RPC 请求时，如果发送请求发生异常并触发了异常重试，我们可以先判定下这个请求是否已经超时，如果已经超时了就直接返回超时异常，否则就先重置下这个请求的超时时间，之后再发起重试。”<br>原文这里没看懂，如果已经超时了就直接返回超时异常，否则...，否则这种情况不就是没超时么？为什么之后再发起超时请求呢？","like_count":0},{"had_liked":false,"id":295186,"user_name":"良记","can_delete":false,"product_type":"c1","uid":1033503,"ip_address":"","ucode":"F78CC56BB32D8F","user_header":"https://static001.geekbang.org/account/avatar/00/0f/c5/1f/485fcff9.jpg","comment_is_top":false,"comment_ctime":1622289549,"is_pvip":true,"discussion_count":0,"race_medal":0,"score":"1622289549","product_id":100046201,"comment_content":"老师这里说的异常应该不是业务逻辑报的异常吧？消费者自身的业务逻辑是不是不应该用异常的形式反馈到RPC框架中？","like_count":0},{"had_liked":false,"id":290814,"user_name":"黄堃健","can_delete":false,"product_type":"c1","uid":2037522,"ip_address":"","ucode":"B4AD5250A41B3A","user_header":"https://thirdwx.qlogo.cn/mmopen/vi_32/YbUxEV3741vKZAiasOXggWucQbmicJwIjg3HDE58oyibYXbSop9QQFqZ7X6OhynDoo6rDHwzK8njSeJjN9hx3pJXg/132","comment_is_top":false,"comment_ctime":1619767835,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1619767835","product_id":100046201,"comment_content":"超时重试不是tcp会重试吗？tcp有滑动窗口的功能？如果在指定时间范围，没有ack。会一直重试","like_count":0},{"had_liked":false,"id":276862,"user_name":"张申傲","can_delete":false,"product_type":"c1","uid":1182372,"ip_address":"","ucode":"22D46BC529BA8A","user_header":"https://static001.geekbang.org/account/avatar/00/12/0a/a4/828a431f.jpg","comment_is_top":false,"comment_ctime":1612159051,"is_pvip":true,"discussion_count":0,"race_medal":0,"score":"1612159051","product_id":100046201,"comment_content":"除了课程内容之外，异常重试还需要考虑到的点：1.最大重试次数：如果调用方设置了较长的超时时间，需要限制最大的可重试次数，避免无休止的重试 2.重试时间间隔：避免重试请求过多，对服务提供方造成影响","like_count":0},{"had_liked":false,"id":242038,"user_name":"阿卧","can_delete":false,"product_type":"c1","uid":1229566,"ip_address":"","ucode":"68C0CC25E57707","user_header":"https://static001.geekbang.org/account/avatar/00/12/c2/fe/038a076e.jpg","comment_is_top":false,"comment_ctime":1597569609,"is_pvip":false,"discussion_count":1,"race_medal":0,"score":"1597569609","product_id":100046201,"comment_content":"异常重试机制应该发生在负载均衡选取服务节点并发起服务调用这个阶段，可以做到以下需求<br>1. 服务调用失败，剔除失败的服务重新发起一次调用<br>2. 捕获返回的异常信息，决定是否再次发起请求","like_count":0,"discussions":[{"author":{"id":1571460,"avatar":"https://static001.geekbang.org/account/avatar/00/17/fa/84/f01d203a.jpg","nickname":"Simple life","note":"","ucode":"1902D7F72FB43F","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":310536,"discussion_content":"这个是对的，首先动态代理这个不变，不需要动，第二路由规则是不变的，这个不动，然后到负载均衡选择服务器，失败了重新调用负载策略选择","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1601896101,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":236090,"user_name":"STAND ALONE COMPLEX","can_delete":false,"product_type":"c1","uid":1595002,"ip_address":"","ucode":"2AC2F9B0A6D823","user_header":"https://static001.geekbang.org/account/avatar/00/18/56/7a/60c3d6a5.jpg","comment_is_top":false,"comment_ctime":1595311401,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1595311401","product_id":100046201,"comment_content":"老师，如果最后一次重试，失败了，服务实际执行成功，造成调用方本地事务回滚，而服务下游数据提交成功，就会出现数据不一致。这种问题能解决吗？还是这种问题出现概率小，到时候人工处理。","like_count":0},{"had_liked":false,"id":225762,"user_name":"pyhhou","can_delete":false,"product_type":"c1","uid":1256496,"ip_address":"","ucode":"31EF8D50CF91A5","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/ibZVAmmdAibBeVpUjzwId8ibgRzNk7fkuR5pgVicB5mFSjjmt2eNadlykVLKCyGA0GxGffbhqLsHnhDRgyzxcKUhjg/132","comment_is_top":false,"comment_ctime":1591847978,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1591847978","product_id":100046201,"comment_content":"感觉是在动态代理的地方增加一个重试插件来实现的。<br>","like_count":0},{"had_liked":false,"id":189138,"user_name":"美美","can_delete":false,"product_type":"c1","uid":1148422,"ip_address":"","ucode":"44CC95C45AF345","user_header":"https://static001.geekbang.org/account/avatar/00/11/86/06/72b01bb7.jpg","comment_is_top":false,"comment_ctime":1584458868,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1584458868","product_id":100046201,"comment_content":"老师讲的很棒！！！","like_count":0},{"had_liked":false,"id":188681,"user_name":"夜空中最亮的星","can_delete":false,"product_type":"c1","uid":1267566,"ip_address":"","ucode":"ADC3E7B6789955","user_header":"https://static001.geekbang.org/account/avatar/00/13/57/6e/b6795c44.jpg","comment_is_top":false,"comment_ctime":1584404328,"is_pvip":false,"replies":[{"id":"72786","content":"如果要重试，服务端的逻辑一定要幂等","user_name":"作者回复","user_name_real":"何小锋","uid":"1541007","ctime":1584410525,"ip_address":"","comment_id":188681,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1584404328","product_id":100046201,"comment_content":"rpc重试要业务层面负责幂等性","like_count":0,"discussions":[{"author":{"id":1541007,"avatar":"https://static001.geekbang.org/account/avatar/00/17/83/8f/8471d633.jpg","nickname":"何小锋","note":"","ucode":"E9B3B4A1B75D8B","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":487487,"discussion_content":"如果要重试，服务端的逻辑一定要幂等","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1584410525,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":188662,"user_name":"雨霖铃声声慢","can_delete":false,"product_type":"c1","uid":1052607,"ip_address":"","ucode":"656D98310C6DA3","user_header":"https://static001.geekbang.org/account/avatar/00/10/0f/bf/ee93c4cf.jpg","comment_is_top":false,"comment_ctime":1584401761,"is_pvip":false,"replies":[{"id":"72800","content":"再想一想，可以结合一些开源框架印证下。","user_name":"作者回复","user_name_real":"何小锋","uid":"1541007","ctime":1584411618,"ip_address":"","comment_id":188662,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1584401761","product_id":100046201,"comment_content":"在客户端使用动态代理执行远程调用的时候进行重试。因为这个时候能直接获取到调用结果，通过捕获的异常判断是否需要重试。","like_count":0,"discussions":[{"author":{"id":1541007,"avatar":"https://static001.geekbang.org/account/avatar/00/17/83/8f/8471d633.jpg","nickname":"何小锋","note":"","ucode":"E9B3B4A1B75D8B","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":487478,"discussion_content":"再想一想，可以结合一些开源框架印证下。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1584411618,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":188149,"user_name":"L!en6o","can_delete":false,"product_type":"c1","uid":1054472,"ip_address":"","ucode":"E0931CB8998260","user_header":"https://static001.geekbang.org/account/avatar/00/10/17/08/566fb246.jpg","comment_is_top":false,"comment_ctime":1584324840,"is_pvip":false,"replies":[{"id":"72780","content":"有些异常是业务抛出的，有一定的业务意义，是不应该被重试的。","user_name":"作者回复","user_name_real":"何小锋","uid":"1541007","ctime":1584409939,"ip_address":"","comment_id":188149,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1584324840","product_id":100046201,"comment_content":"如果不依赖异常也可以重试 对业务更具有意义","like_count":0,"discussions":[{"author":{"id":1541007,"avatar":"https://static001.geekbang.org/account/avatar/00/17/83/8f/8471d633.jpg","nickname":"何小锋","note":"","ucode":"E9B3B4A1B75D8B","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":487350,"discussion_content":"有些异常是业务抛出的，有一定的业务意义，是不应该被重试的。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1584409939,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]}]}