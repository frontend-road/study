{"id":397786,"title":"14 | 8X Flow（上）：何为业务？何为领域？","content":"<p>你好，我是徐昊。今天我们开始进入8X Flow的学习。</p><p>8X Flow是继四色建模法之后，由我发明的另一种建模方法。其实以前四色建模法也叫8X Flow。</p><p>从之前的学习中你会发现，四色法是一种数据流方法——Flow有了；而我姓徐名昊字八叉，以我的名字命名而得；但后来为了向Peter Coad致敬，表示灵感来自他的彩色建模法，就叫了四色建模法。于是今天要介绍的方法，我们内部之前叫8X Flow 2.0，现在直接叫8X Flow就行了。</p><p>8X Flow方法是四色法的一种演进。虽然<strong>权责追溯</strong>仍然是8X Flow的核心理念，但比起四色法，8X Flow更注重通过权责关系，提取业务模式；并通过引入变化点构建可复用的业务模型。所以对于业务平台或业务中台这类系统来说，8X Flow可谓是量身定制。此外，由于充分考虑了云时代的架构约束，得到的模型也能很容易地映射到微服务架构上。</p><p>那么接下来，我会用三节课来介绍8X Flow的具体内容。今天我们先来讲一讲业务系统与领域系统的区别，因为这二者之间有着明显的弹性边界，而根据弹性优先原则，我们首先要对它们加以区分。</p><h2>模型真的是稳定的吗？</h2><p>正如我们在“云时代的挑战”这两讲中提到的，进入云时代后，出于更有效地利用云平台的目的，我们引入了新的架构约束：弹性优先原则。也就是说，<strong>在云时代架构系统中，弹性是最需要优先考虑的因素。</strong></p><!-- [[[read_end]]] --><p>在具体讨论如何在业务模型中体现弹性优先原则之前，我想你可能会有这么一连串的问题。</p><ul>\n<li>对于业务建模而言，我们需要考虑弹性吗？</li>\n<li>业务不应该是独立于技术的吗？难道我们从前云时代过渡到云时代，连模型也要改变吗？那么我们怎么还能相信，建模的稳定性？</li>\n<li>我们在<a href=\"https://time.geekbang.org/column/article/389095\">第6讲</a>也说过：“一旦领域层出现重大改变，就意味着重大的业务调整，整个系统都可以推倒重来了。因而在软件系统有限的生命周期内，我们可以认为领域层应该是不变的。”难道说，云会让系统推倒重来吗？</li>\n</ul><p>这些都是很好的问题，触及了业务建模最底层的逻辑。而要回答这些问题，归根到底，我们需要弄清楚一件事：<strong>业务模型会不会受到技术范型的影响？</strong></p><p>答案是：<strong>会，但不经常发生</strong>。那么什么时候会发生呢？<strong>就是在技术范型改变可以带来成本大幅下降，或者带来收入巨幅增加的时候。</strong></p><p>说到底，我们做软件，特别是业务软件，并不是为了什么自我表达，而是为了更好地帮助业务方实现业务价值。而业务价值也很简单：<strong>产生更多的收入，或者用更低的成本</strong>。</p><p>那么，当技术范型的改变，可以带来巨幅收入或者成本改变时，业务自身的运营方式，必然也会利用这些技术的改变。所以从源头上，业务就变了，那么模型自然也要响应这种改变，作出对应的变化。</p><p>所以实际上，<strong>并不是新的技术范型直接改变了模型，而是新的技术范型带来了成本收入上的优势，业务方则为了利用这些优势，便根据这些新的技术范型，改变了业务运营方式，然后引起了背后模型的改变</strong>。</p><p>那么，能够引起业务重视的新的技术范型，自然不是什么新的编程语言或者新的框架，而是一些能够产生较大影响的技术范型的改变。</p><p>比如，企业级数据库系统（Enterprise Database System）的出现，直接将企业应用架构从单体桌面系统（Monolithic Desktop Application）架构转向了两层客户端/服务器架构（C/S，Client/ Server）。我觉得没有人会相信，自己在桌面应用中设计的模型，可以无缝过渡到数据库时代吧。毕竟我们需要思考范式、数据冗余、索引这些在之前根本不存在的概念，并在模型中加以体现。</p><p>类似的情况，在互联网（Internet）普及的过程中，客户端/服务器架构变成了多层架构（Multi-Tiered Architecture）。你在旧约部分能看到，过去十几年我们一直在与这种改变作斗争，让我们的建模方法可以适应架构的改变。</p><p>同样的，在C/S架构中的模型，也不能无缝过渡到多层架构里。那就需要考虑新的架构约束，重新建模。比如我们在旧约部分讲到的关联对象、角色对象和能力提供者等模式，都是重新建模时采用的手段。</p><p>可以说，好的模型可以在软件生命周期内保持稳定，帮助我们在特定的架构风格下高效应对变化。这没错儿。<strong>但是，模型不能帮我们渡劫。如果架构风格彻底改变了，那就没办法了，模型必须重建</strong>。</p><p>非常不巧的是，云计算就是我们现在正面临的这样一场大劫。而它带来的变革之大，也是这么多年来诸多变化之最。因为云改变了<strong>成本最低的运营模式，将其从统一模式（Unification）变成了复制模式（Replication）。</strong></p><p>统一模式与复制模式出自<strong>四种业务运营模型</strong>，最早由IBM在上世纪八十年代发明用以描述不同业务模式间的差异，以及需要何种IT能力来支撑与其对应的模式，后来被商学院教程广泛采纳，就成了一个讨论业务模式与IT诉求的非常有用的宏观模型。如下图所示：</p><p><img src=\"https://static001.geekbang.org/resource/image/48/07/48bf61723a09b1b05407de2d97f20c07.jpg?wh=2000x1125\" alt=\"\"></p><p>对于四种业务运营模型，我在这里还是做个简单的说明。你可以将流程标准化看做是否需要强制使用同样的业务流程；而将流程整合度，看做是否需要使用同一数据源。那么我们就可以这么来理解了：</p><ul>\n<li>\n<p>统一模式：强制使用同样的流程，也需要使用同样的数据源。业务上是强流程强管控模式，对应在软件上的运营模式就是单实例模式（Singleton）。举个例子，比如用户身份系统，在逻辑上我们始终认为只有一种，也就是单实例。当然，这个单实例可以是一片集群或云化的，但只要在概念是统一的，那么它就是统一模式。</p>\n</li>\n<li>\n<p>复制模式：强制使用同样的流程，但可以使用不同的数据源。业务上是以同样业务模式独立运营的业务单元（Business Unit），对应在软件上的运营模式是多租户模式（Multi Tenancy）。对于每个租户，他们如同独占整个系统一样，但是租户间数据是隔离的。也就是我们说的SaaS模式。</p>\n</li>\n<li>\n<p>协作模式：不强制使用同样的流程，但需要使用同样的数据源。业务上是仅仅在财务流程和关键数据上互通的，更具有独立性的业务单元或子公司模式。对应在软件上，可以看做通过开放API提供对于共享数据的访问。</p>\n</li>\n<li>\n<p>差异化模式：不强制使用同样的流程，也不使用同样的数据源。基本上就是不同的业务实体。对应到软件上，可以将其看作开放生态模式。</p>\n</li>\n</ul><p>这四种业务运营模式，不仅仅是对IT系统，对组织结构也有指导意义。而从这个角度来看，<strong>我们行业内存在的很多问题，就源自业务组织能力与IT能力的不匹配</strong>。</p><p>比如说，业务组织已经逐步过渡到独立BU的形态，而IT系统却无法提供与复制模式匹配的运营能力。当然，这种影响也是双向的。毕竟在逆康威定律（Inverse Conway Maneuver）的影响下，<strong>最低成本的软件架构模式，也会影响企业对运营模式的选择</strong>。</p><p>我们知道，在前云时代，统一模式所对应的软件架构也就是单实体模式，是最容易实现，也具有最低的运营成本（在数据中心为主的基础设施上）。所以<strong>我们所熟知的最佳实践，都是在统一模式为最低成本的假设前提下，被总结确立起来的。</strong></p><p>而在云时代，复制模式代替了统一模式，具有最低的成本。而业务方也在尝试改变运营模式，以获得云平台的红利。所以不仅仅是建模，我们所熟知的一切，都需要重新确认是否仍然是最佳实践。</p><p>说到底，我们不可低估云计算带来的改变。不过更重要的是，在这股巨浪中，我们不应保留任何先入之见，而是要去探索背后的核心逻辑。</p><h2>什么是模型中最明显的弹性边界？</h2><p>我们知道云是通过降低成本改变运营模式，从而给业务带来影响的。那么是否存在着某些业务功能更容易受到运营模式的影响，而另一些业务功能，则不容易受到运营模式的影响呢？</p><p>如果是这样的情况，就意味着<strong>这两种不同的功能存在不同的弹性边界。那么按照弹性优先的原则，我们就需要将这两类需求进行分离</strong>，从而在最宏观层面上，贯彻弹性优先的原则。</p><p>那真实情况是怎么样呢？让我们以极客时间专栏为例，罗列一下与之相关的功能点，看看这些功能点之间存在什么差异：</p><ol>\n<li>编辑发布新的专栏；</li>\n<li>编辑为专栏定价；</li>\n<li>读者订阅专栏；</li>\n<li>读者阅读专栏；</li>\n<li>读者转发专栏拉新返现；</li>\n<li>编辑发布专栏内新的课程章节；</li>\n<li>读者在课程下评论；</li>\n<li>作者回复读者评论；</li>\n<li>作者根据专栏销量获得提成。</li>\n</ol><p>现在让我们考虑一下，在运营模式改变的情况下，哪些功能点会发生改变。</p><p>比如说，极客时间专栏提供了企业版，也就是对企业收取特定的费用（每年或者一次性），这样企业内的员工就能无限或者按照规定的量来自由阅读专栏。</p><p>可以发现，与发布、阅读、评论相关的功能点，无论是公开版本，还是企业版本，都没有什么区别。而定价、返现、提成等功能，则会发生较大的改变。也就是说，这些功能点更容易受运营模式改变的影响。</p><p>如果按照变化隔离的原则，从架构上将这两类功能分割开的话，我们就有了一个不同的看待极客时间系统架构的角度。我们将它分成两部分：一个是与运营无关的内容管理系统（Content Management System，CMS）；一个是极客时间的运营系统。</p><p>那么，企业版不过就是在内容管理系统上，提供了另一套运营系统而已。如下图所示：</p><p><img src=\"https://static001.geekbang.org/resource/image/38/c0/38f4af6a80a833960a64e6b1d28074c0.jpg?wh=2000x1125\" alt=\"\"></p><p>由此我们就发现了一个常用的架构模式，可以把<strong>系统分解为两部分：与运营无关的部分；提供运营能力的部分。</strong></p><p>比如，对于类似Google、Bing这类搜索引擎而言，与运营无关的部分是搜索引擎，而与运营有关的则是广告的投放和竞价。对于类似优酷、爱奇艺这类视频网站而言，与运营无关的是流媒体部分，而与运营有关的则是VIP账户、广告等。</p><p>下面让我们来看看分开的这两部分中的模型。在与运营无关的部分中，模型似乎不怎么需要业务方的输入。比如说：</p><ul>\n<li>极客时间专栏中的内容管理系统，核心的概念是专栏、课程和评论，和通用的内容管理系统中的栏目（Category）、文章（Article）、评论（Comment）似乎没有什么区别。</li>\n<li>类似地，对于搜索引擎而言，与运营无关的部分中，关键概念是分词、词频、索引、爬虫等，似乎更不需要业务方的输入。</li>\n</ul><p>而在与运营相关的部分，模型则需要业务方的输入和验证。比如说：</p><ul>\n<li>对于极客时间专栏而言，这部分牵扯到如何定价、如何分成等诸多业务规则。在没有业务方输入的前提下，几乎不可能构造出任何的模型，甚至都无从开始。</li>\n<li>类似地，对于搜索引擎而言，广告如何与关键词关联、如何计算投放量、如何衡量广告效果等等，就需要业务方制定相应的规则与逻辑。</li>\n</ul><p>那么我们就会发现，在进行建模时，针对与运营无关的部分和与运营有关的部分，我们需要处理的核心复杂度并不相同。而且，“两关联一循环”对于这两部分的功用也不尽相同。事实上，从Eric Evans提出领域驱动设计开始，行业并没有明确区分这两种不同的领域逻辑。所以我们一直都在用“领域”这个词，指代这两种不同的领域逻辑。很多误会与歧义也是从这里就产生的。</p><p>我个人从2010年开始，就分别使用“领域”（Domain）和“业务”（Business）来指代这两类不同的逻辑。即：“<strong>领域”表示与运营无关的问题域，“业务”表示与运营相关的问题域</strong>。</p><p>之所以将与运营无关的逻辑称作“领域逻辑”，原因有二。</p><p>第一，这两部分分别有不同的建模方法。既然领域与业务有不同的关注点，那么针对不同的关注点，自然有不同的最佳实践和最佳建模方法。分别对待，会让我们更容易得到恰当的模型。</p><p>第二，在我们区分了领域逻辑与业务逻辑之后，再回过头去看Eric Evans的领域驱动设计，会发现他在书中给出的例子，大部分都是与领域系统相关的。所以他没起错书名，他讲的的确是“领域驱动设计”。因此，如此命名可以减少概念上的冲突。</p><h2>究竟是领域建模还是业务建模？</h2><p>知识消化的“两关联一循环”，对于领域逻辑和业务逻辑都是有效的吗？还是只对某一种逻辑更适用呢？<strong>从我的经验来看，通过“两关联一循环”对业务逻辑建模的效果，要远远好于对领域逻辑的建模的效果</strong>。</p><p>业务逻辑与运营相关。运营本身也没有绝对的好坏之分，只有合适与否。大量的业务逻辑其实是源自运营实践经验的总结，其背后也不一定存在什么严谨的逻辑。所以所谓的“专家”可能也只是经验丰富而已。</p><p>我经常举这样一个例子。比如你和你朋友都是卖烤白薯的，你们分别在东直门地铁站左右站立，配方、产品、文案无一不同。唯一的差别是，你每天进货，而你的朋友一次进一周的货。那么在运营中，你会有很多与采购有关的操作，而你的朋友则更多关注库存的管理。当你们都成为红薯专家的时候，如果互换位置（听起来有没有职业经理人空降的感觉），其实都玩不转。因为你不知道怎么管库存，而你的朋友可能无法处理频繁的采购操作。</p><p>业务逻辑是和某种运营方式绑定的，我们把业务逻辑的这个特性称作<strong>运营特定（Business Operation Specific）</strong>。知识消化对于这类逻辑的总结与提炼，具有很好的效果，这个我们在旧约部分已经讲过了，就不再复述了。</p><p>相对地，你可能会发现，如果把卖烤红薯变成卖烤土豆，那么采购或是库存的业务逻辑其实没什么改变。这种特性我们叫做<strong>领域中立（Domain Neutral）</strong>。</p><p>也就是说，某种业务运营的模式（也就是赚钱的办法）其实可能和对应的领域功能没什么关系。比如极客时间专栏的订阅分成模式，如果把内容换成网剧，其实也是成立的。还有Google的广告竞价模式，把搜索引擎换成门户类网站，也是成立的。</p><p><strong>因而业务逻辑一般具有运营特定和领域中立性。与之相对的，就是领域逻辑具有运营中立性和领域特定性</strong>。那么这里就有一个问题：对于领域逻辑，知识消化法还有效吗？</p><p>事实上，对于能通过面向对象模型表示核心复杂度的领域逻辑，知识消化法是能够发挥作用的。因为我们讲到现在，隐含的前提就是通过对象模型建模问题。但是，并不是所有的领域逻辑都适合使用对象模型表达。</p><p>比如推荐引擎，通过特征建模（Feature Modeling）并使用相似度算法，可能是更好的方法。当然，也可以是决策树（Decision Tree），甚至是神经网络（Neural Network）。这时候，知识消化并不能帮助我们得到这些模型。</p><p>那你可能会问，为什么Eric Evans可以从“领域逻辑”出发，提炼出知识消化法呢？</p><p>这主要是因为，他并没有区分领域和业务，所以他想解决的问题是对“业务逻辑”的提取。而书中例子多是“领域逻辑”，只不过因为“领域逻辑”更好举例而已。</p><p>所以知识消化实际是一种“业务建模”方法，而不是“领域建模”方法。这也是为什么，我们这门课叫《如何落地业务建模》。</p><p>总结来说，将领域与业务分开，可以让我们更好地理解什么是业务系统：<strong>支撑业务运营，利用领域系统赚钱/省钱的系统，叫做业务系统</strong>。所以我们业务建模的目的，就是寻找到恰当的业务模型，更好地支撑业务系统的构建与演进。</p><h2>小结</h2><p>这节课我们主要介绍了云给业务运营模式带来了什么样的改变，以及这种改变会如何影响我们获取业务模型。然后，我们将逻辑分成了领域逻辑与业务逻辑，分别讨论了它们的异同，以及我们究竟是在针对什么进行建模。</p><p>总结起来说，<strong>业务逻辑</strong>是源自业务运营的逻辑，是领域中立且运营特定的，其复杂度来自于业务流程，关注的是如何通过某个领域逻辑实现获利。因而它的关注点，就集中在盈利和成本结构上。或者说，业务逻辑对外体现为利润或现金，对内体现为成本和绩效承诺。</p><p>而<strong>领域逻辑</strong>源自问题域自身的逻辑，是运营中立而领域特定的，其复杂度来自于问题本身，关注点通常是算法、计划、统计、优化等等。</p><p>所以关注业务逻辑的组件与关注领域逻辑的组件，通常具有不同的弹性边界。以极客时间专栏为例，在缓存策略恰当的前提下，如果读者猛增，那么对内容管理部分的弹性需求，会远远小于对业务运营部分的弹性需求。而对于搜索引擎业务来说，当搜索用户猛增时，对广告投放这部分的弹性需求，要远远小于对索引部分的弹性需求。</p><p>因而从弹性优先的角度出发，我们应该将关注业务逻辑的组件与关注领域逻辑的组件分离。这样构建出来的模型，更能适应云时代的架构约束，也能让我们分别使用不同的建模方法，获得对应的领域模型与业务模型。</p><h2>思考题</h2><p>对于业务系统来说，除了可以使用事件建模法之外，还有没有其他的方式，可以让我们更好地从“盈利”的角度来展开业务维度？此外，在我们常见的领域系统中，有哪些可以使用非对象模型以更好地描述问题？</p><p><img src=\"https://static001.geekbang.org/resource/image/39/68/390d9cd901bef56e37f655da16789368.jpg?wh=1500x1798\" alt=\"\"></p><p>欢迎在留言区写下你的想法和思考，我会和你交流。我们下节课继续8X Flow的学习！</p>","comments":[{"had_liked":false,"id":306086,"user_name":"Oops!","can_delete":false,"product_type":"c1","uid":1479474,"ip_address":"","ucode":"E2678CC12121A7","user_header":"https://static001.geekbang.org/account/avatar/00/16/93/32/e11fcd33.jpg","comment_is_top":false,"comment_ctime":1628336810,"is_pvip":false,"replies":[{"id":"110764","content":"关键在有无合同","user_name":"作者回复","comment_id":306086,"uid":"2537798","ip_address":"","utype":1,"ctime":1628337702,"user_name_real":"徐八叉"}],"discussion_count":1,"race_medal":0,"score":"18808205994","product_id":100082101,"comment_content":"本文示例不是很明白，专栏管理 和 专栏贩售（运营）本来就是两个不同的领域 面向不同的问题域 本来就应该有两套不同的模型 把这两个用领域和业务来区分是否有太绝对了 换句话说 一个业务系统是否只可能有业务和领域两个类别的系统呢？比如用于支撑运营的BI系统、后台运维系统又属于什么呢。","like_count":4,"discussions":[{"author":{"id":2537798,"avatar":"https://static001.geekbang.org/account/avatar/00/26/b9/46/758ecf4a.jpg","nickname":"徐八叉","note":"","ucode":"DA6D1EB08A7396","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":524619,"discussion_content":"关键在有无合同","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1628337702,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":305383,"user_name":"狩月","can_delete":false,"product_type":"c1","uid":1204178,"ip_address":"","ucode":"472CCBFBE77785","user_header":"https://static001.geekbang.org/account/avatar/00/12/5f/d2/a39e5cea.jpg","comment_is_top":false,"comment_ctime":1627954908,"is_pvip":false,"replies":[{"id":"110464","content":"多年反思的结果 业务领域要分开","user_name":"作者回复","comment_id":305383,"uid":"2537798","ip_address":"","utype":1,"ctime":1627963874,"user_name_real":"徐八叉"}],"discussion_count":2,"race_medal":0,"score":"14512856796","product_id":100082101,"comment_content":"&quot;这主要是因为，他并没有区分领域和业务，所以他想解决的问题是对“业务逻辑”的提取。而书中例子多是“领域逻辑”，只不过因为“领域逻辑”更好举例而已&quot;<br><br>拆穿了皇帝的新衣啊。。很多时候ddd难理解就是因为书里的例子小而美， 而现实的中的复杂业务系统根本无法那样直觉性的建模","like_count":3,"discussions":[{"author":{"id":2537798,"avatar":"https://static001.geekbang.org/account/avatar/00/26/b9/46/758ecf4a.jpg","nickname":"徐八叉","note":"","ucode":"DA6D1EB08A7396","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":524369,"discussion_content":"多年反思的结果 业务领域要分开","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1627963874,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1043844,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/ed/84/0b8e2d25.jpg","nickname":"邓志国","note":"","ucode":"380AE67ED7B9D7","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":388636,"discussion_content":"从盈利角度，还可以业务进行中产生的各种单据来建模。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1628861187,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":336179,"user_name":"常文龙","can_delete":false,"product_type":"c1","uid":1204525,"ip_address":"","ucode":"4A126159D24766","user_header":"https://static001.geekbang.org/account/avatar/00/12/61/2d/5ca0a3da.jpg","comment_is_top":false,"comment_ctime":1645973382,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"10235907974","product_id":100082101,"comment_content":"我用自己的语言来总结、说穿这句话：<br>\t1.给客户提供核心价值的，是领域。譬如微信的核心价值是沟通，因此个人对话、群聊、公众号、支付能力，都属于领域。<br>\t2.企业利用核心价值来牟利的手段，是业务。譬如微信的付费表情、微信广告、甚至企业微信，属于业务。因为都只是利用核心价值牟利的手段。<br>    <br> 注意，每种分类都有他要解决的问题，否则没必要分类，没有解决问题的分类，只是认知噪音。领域和业务之所以被徐昊老师强调分开，一来是这两类需求，需要的“建模方法”不同，二来是弹性关注不同。<br><br>虽说业务是牟利方式，看起来变数很多、没有共性，那是因为只看到了不同的领域需要的牟利方式不同。实际上，牟利方式这件事可以复用，而这就是“领域中立”。也就是中台常说的“商业模式”<br><br>四色建模法以及后来的8x flow，认为现金流、KPI&#47;结果是核心事件，可以看出，这就是专注在“牟利”这件事。因此徐昊老师说，8x flow专注于“业务模式”，也就是“牟利模式”，是非常严谨的，很nice！","like_count":2},{"had_liked":false,"id":321836,"user_name":"易道","can_delete":false,"product_type":"c1","uid":1294692,"ip_address":"","ucode":"54D48B89E3FAA3","user_header":"","comment_is_top":false,"comment_ctime":1637058047,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"10226992639","product_id":100082101,"comment_content":"醍醐灌顶，领域和业务的概念分离，解决了困扰自己很久的问题。学习就是打破固有认知，重新构建知识边界的过程；从这个角度来看，这个专栏可谓大作。","like_count":2},{"had_liked":false,"id":314302,"user_name":"Z.G","can_delete":false,"product_type":"c1","uid":1641331,"ip_address":"","ucode":"AF2D041F9CBDF1","user_header":"https://static001.geekbang.org/account/avatar/00/19/0b/73/a04b5d3f.jpg","comment_is_top":false,"comment_ctime":1632965307,"is_pvip":false,"replies":[{"id":"114102","content":"对","user_name":"作者回复","comment_id":314302,"uid":"2537798","ip_address":"","utype":1,"ctime":1633673951,"user_name_real":"徐八叉"}],"discussion_count":1,"race_medal":0,"score":"10222899899","product_id":100082101,"comment_content":"老师好，我的理解，8xflow是不是也是尊重DDD的思想的一种建模方法，比如其实也符合两关联一循环，就像event storming，其实也属于建模方法，但和DDD不是同一个纬度的东西，8xflow和event storming更像是一种东西，只是不同视角的建模方法。<br>还请老师答疑解惑。","like_count":2,"discussions":[{"author":{"id":2537798,"avatar":"https://static001.geekbang.org/account/avatar/00/26/b9/46/758ecf4a.jpg","nickname":"徐八叉","note":"","ucode":"DA6D1EB08A7396","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":527636,"discussion_content":"对","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1633673951,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":309205,"user_name":"呵 哦 呵","can_delete":false,"product_type":"c1","uid":1249465,"ip_address":"","ucode":"4C6B80AD6BBE2B","user_header":"https://static001.geekbang.org/account/avatar/00/13/10/b9/e17d5768.jpg","comment_is_top":false,"comment_ctime":1629985621,"is_pvip":false,"replies":[{"id":"111931","content":"8x flow更关注业务模式 需要更多的业务视角 用一年四色回来再看 ","user_name":"作者回复","comment_id":309205,"uid":"2537798","ip_address":"","utype":1,"ctime":1630024855,"user_name_real":"徐八叉"}],"discussion_count":1,"race_medal":0,"score":"10219920213","product_id":100082101,"comment_content":"老师，请教个问题，我在应用您的方法时，发现用8xflow的思维方式识别合同，总觉得驴唇不对马嘴。而退而求其次，用四色建模法，发现整个思考过程非常顺畅，这是什么原因造成的呢？<br>我看文章最前面有一句话：<br>「8X Flow 方法是四色法的一种演进。虽然权责追溯仍然是 8X Flow 的核心理念，但比起四色法，8X Flow 更注重通过权责关系，提取业务模式；并通过引入变化点构建可复用的业务模型。所以对于业务平台或业务中台这类系统来说，8X Flow 可谓是量身定制」<br>这是不是说明，如果是普通的业务系统使用四色建模法就可以了，只有在做更抽象的中台平台等，才适合使用8xflow呢？<br>","like_count":2,"discussions":[{"author":{"id":2537798,"avatar":"https://static001.geekbang.org/account/avatar/00/26/b9/46/758ecf4a.jpg","nickname":"徐八叉","note":"","ucode":"DA6D1EB08A7396","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":525784,"discussion_content":"8x flow更关注业务模式 需要更多的业务视角 用一年四色回来再看 ","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1630024855,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":305993,"user_name":"码农戏码","can_delete":false,"product_type":"c1","uid":1607342,"ip_address":"","ucode":"2472A68B8A851E","user_header":"https://static001.geekbang.org/account/avatar/00/18/86/ae/163ec4e5.jpg","comment_is_top":false,"comment_ctime":1628263076,"is_pvip":false,"replies":[{"id":"110792","content":"合同上下文去框","user_name":"作者回复","comment_id":305993,"uid":"2537798","ip_address":"","utype":1,"ctime":1628418956,"user_name_real":"徐八叉"}],"discussion_count":1,"race_medal":0,"score":"10218197668","product_id":100082101,"comment_content":"这两个概念从了解DDD开始就有这个疑问，为什么叫domain driven design,而不是business driven design，我们平常都叫业务，从没讲过领域，难道是国外与国内叫法不同，但也不至于啊，给别人介绍DDD时，也会被问到底什么是domain，为什么不是BDD呢？当然，现在DDD被提多了，人们也不像刚开始时那么追问了，顺其自然地接受了，但疑问还在<br><br>application service编排业务流程，domain service编排领域，看来是对了，但我们的业务好像都比较简单，是不是只有业务横长，领域纵深的才需要同时业务建模和领域建模呢<br><br>当前我们是做票税业务的，接受发票，验真发票，认证抵扣，同步发票(更新由其他系统来的发票状态，也会再同步发票数据到下游系统)；整体看很简单，但复杂在状态同步，首先会多各个业务系统得到状态，比如报销系统来同步发票的报销状态，SAP系统来同步发票记帐状态等等，各个系统都会来写点东西，再把这些发票数据同步到下游系统，但同步下游时就麻烦了，有些客户需要在接受到记帐状态时同步，有些需要在接受到报销状态时同步，各种交叉同步；<br><br>从整体系统看似乎只有业务流程，没有领域问题，似乎一个状态机就搞定了，用流程引擎串业务感觉又太重，但现实又复杂得多，看着没法建模，微服务也拆得奇形怪状<br><br>像这样流程长而领域浅的系统不知道怎么玩了","like_count":2,"discussions":[{"author":{"id":2537798,"avatar":"https://static001.geekbang.org/account/avatar/00/26/b9/46/758ecf4a.jpg","nickname":"徐八叉","note":"","ucode":"DA6D1EB08A7396","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":524586,"discussion_content":"合同上下文去框","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1628418956,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":353279,"user_name":"aoe","can_delete":false,"product_type":"c1","uid":1121758,"ip_address":"浙江","ucode":"1C6201EDB4E954","user_header":"https://static001.geekbang.org/account/avatar/00/11/1d/de/62bfa83f.jpg","comment_is_top":false,"comment_ctime":1659330119,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1659330119","product_id":100082101,"comment_content":"原来极客时间 = 内容管理系统 + 运营系统<br><br>区分领域和业务很多问题就变简单了<br>- 领域”表示与运营无关的问题域<br>- “业务”表示与运营相关的问题域","like_count":0},{"had_liked":false,"id":346653,"user_name":"franktt","can_delete":false,"product_type":"c1","uid":1265660,"ip_address":"","ucode":"4D4DDA228E3A28","user_header":"https://thirdwx.qlogo.cn/mmopen/vi_32/Q3auHgzwzM42m6tsPDhJJPvNFZGgH0QLhzZfRia1jBG3Gia4mY3e9OdS4ibLISBzTyawz0s3yP0sKuQrOuObK0AkQ/132","comment_is_top":false,"comment_ctime":1653316572,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1653316572","product_id":100082101,"comment_content":"字字珠玑，谢谢徐老师","like_count":0},{"had_liked":false,"id":335158,"user_name":"Steven","can_delete":false,"product_type":"c1","uid":1253652,"ip_address":"","ucode":"3FE64459842015","user_header":"https://static001.geekbang.org/account/avatar/00/13/21/14/423a821f.jpg","comment_is_top":false,"comment_ctime":1645365567,"is_pvip":false,"replies":[{"id":"122417","content":"收到，感谢Steven的反馈！已经修正！","user_name":"编辑回复","comment_id":335158,"uid":"2189689","ip_address":"","utype":2,"ctime":1645405103,"user_name_real":"编辑"}],"discussion_count":1,"race_medal":0,"score":"1645365567","product_id":100082101,"comment_content":"有错别字：<br>“因而业务逻辑一般具有运营特性和领域中立性”，其中“运营特性”应该是“运营特定”。<br>“而领域逻辑源自问题域自身的逻辑，是运行中立而领域特定的”，其中“运行中立”应该是“运营中立”。<br><br>编辑仔细校一下啊，篇幅长再有错别字就容易误导了","like_count":0,"discussions":[{"author":{"id":2189689,"avatar":"https://static001.geekbang.org/account/avatar/00/21/69/79/b4132042.jpg","nickname":"🐑","note":"","ucode":"DE34B3B14287D1","race_medal":0,"user_type":8,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":552301,"discussion_content":"收到，感谢Steven的反馈！已经修正！","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1645405103,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":4}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":322454,"user_name":"果然爸爸","can_delete":false,"product_type":"c1","uid":1467300,"ip_address":"","ucode":"0E5F031A0E6A69","user_header":"https://static001.geekbang.org/account/avatar/00/16/63/a4/e663c4d4.jpg","comment_is_top":false,"comment_ctime":1637396777,"is_pvip":false,"discussion_count":1,"race_medal":0,"score":"1637396777","product_id":100082101,"comment_content":"我个人觉得业务还是领域只是企业中不同角色的视角，自己关注的就是业务，其他都可以看做领域。对于一个制作烤白薯的，制作烤白薯是业务，其他采购，仓储，销售都是领域。而一个销售白薯的，销售就是业务，其他都是领域。不知道我这样的理解对不对。","like_count":0,"discussions":[{"author":{"id":1512642,"avatar":"https://static001.geekbang.org/account/avatar/00/17/14/c2/46ebe3a0.jpg","nickname":"侧耳倾听","note":"","ucode":"5BF2A2440B54F0","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":561630,"discussion_content":"是针对业务和运营方式来划分的，不是根据角色划分的","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1649687624,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":319059,"user_name":"keys头","can_delete":false,"product_type":"c1","uid":1444919,"ip_address":"","ucode":"47C3E0648A8434","user_header":"https://static001.geekbang.org/account/avatar/00/16/0c/37/913de94f.jpg","comment_is_top":false,"comment_ctime":1635556657,"is_pvip":false,"replies":[{"id":"116201","content":"没有简单的例子","user_name":"作者回复","comment_id":319059,"uid":"2537798","ip_address":"","utype":1,"ctime":1636377075,"user_name_real":"徐八叉"}],"discussion_count":1,"race_medal":0,"score":"1635556657","product_id":100082101,"comment_content":"开放生态模式这个概念，有没有好的现实例子？对这个感觉理解没到位。","like_count":0,"discussions":[{"author":{"id":2537798,"avatar":"https://static001.geekbang.org/account/avatar/00/26/b9/46/758ecf4a.jpg","nickname":"徐八叉","note":"","ucode":"DA6D1EB08A7396","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":529479,"discussion_content":"没有简单的例子","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1636377075,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":314012,"user_name":"大海浮萍","can_delete":false,"product_type":"c1","uid":1067638,"ip_address":"","ucode":"7A3B9011C639ED","user_header":"https://static001.geekbang.org/account/avatar/00/10/4a/76/abb7bfe3.jpg","comment_is_top":false,"comment_ctime":1632800933,"is_pvip":false,"replies":[{"id":"114101","content":"很大的topic 回答写不下","user_name":"作者回复","comment_id":314012,"uid":"2537798","ip_address":"","utype":1,"ctime":1633673928,"user_name_real":"徐八叉"}],"discussion_count":1,"race_medal":0,"score":"1632800933","product_id":100082101,"comment_content":"在四种业务运营模型中，差异化模式，“对应到软件上，可以将其看作开放生态模式”，这种开放生态模式，该如何构建系统呀？构建不同的系统，由不同的团队开发、维护？","like_count":0,"discussions":[{"author":{"id":2537798,"avatar":"https://static001.geekbang.org/account/avatar/00/26/b9/46/758ecf4a.jpg","nickname":"徐八叉","note":"","ucode":"DA6D1EB08A7396","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":527545,"discussion_content":"很大的topic 回答写不下","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1633673928,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":310856,"user_name":"Geek_6a1185","can_delete":false,"product_type":"c1","uid":2222619,"ip_address":"","ucode":"65BD8F49E0F0AB","user_header":"","comment_is_top":false,"comment_ctime":1630936810,"is_pvip":false,"discussion_count":1,"race_medal":0,"score":"1630936810","product_id":100082101,"comment_content":"8X Flow看来是简捷易用的方法，请问若使用此方法执行客户的项目，是否要先得到徐老师的同意呢？","like_count":0,"discussions":[{"author":{"id":1641331,"avatar":"https://static001.geekbang.org/account/avatar/00/19/0b/73/a04b5d3f.jpg","nickname":"Z.G","note":"","ucode":"AF2D041F9CBDF1","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":399413,"discussion_content":"额，这个应该不用吧，用DDD也不需要去找Eric授权吧","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1632964952,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":310508,"user_name":"Learner","can_delete":false,"product_type":"c1","uid":1147456,"ip_address":"","ucode":"289EBF7A445808","user_header":"https://static001.geekbang.org/account/avatar/00/11/82/40/02ae9409.jpg","comment_is_top":false,"comment_ctime":1630688536,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1630688536","product_id":100082101,"comment_content":"用DDD建模，难道业务和领域会混杂在一起吗？我觉得即便用DDD建模，内容管理和运营也会在不同的限界上下文中。且DDD也没说一定要OOP啊，非说DDD做不了神经网络，恐DDD党难以接受","like_count":0},{"had_liked":false,"id":305923,"user_name":"姚磊","can_delete":false,"product_type":"c1","uid":1045862,"ip_address":"","ucode":"94C1399716AAD2","user_header":"https://static001.geekbang.org/account/avatar/00/0f/f5/66/ff9fb166.jpg","comment_is_top":false,"comment_ctime":1628232888,"is_pvip":false,"replies":[{"id":"110698","content":"不是标准 是参考","user_name":"作者回复","comment_id":305923,"uid":"2537798","ip_address":"","utype":1,"ctime":1628243475,"user_name_real":"徐八叉"}],"discussion_count":1,"race_medal":0,"score":"1628232888","product_id":100082101,"comment_content":"如果只看弹性边界，我觉得面向商家面向运营和面向用户的部分通常有不同的弹性，这是划分服务的标准吗？","like_count":0,"discussions":[{"author":{"id":2537798,"avatar":"https://static001.geekbang.org/account/avatar/00/26/b9/46/758ecf4a.jpg","nickname":"徐八叉","note":"","ucode":"DA6D1EB08A7396","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":524562,"discussion_content":"不是标准 是参考","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1628243475,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":305899,"user_name":"Jxin","can_delete":false,"product_type":"c1","uid":1251111,"ip_address":"","ucode":"4C03928388C413","user_header":"https://static001.geekbang.org/account/avatar/00/13/17/27/ec30d30a.jpg","comment_is_top":false,"comment_ctime":1628222090,"is_pvip":false,"replies":[{"id":"110667","content":"领域特定 是 特定于问题域 问题域本身就是抽象的 至于复用看下一节","user_name":"作者回复","comment_id":305899,"uid":"2537798","ip_address":"","utype":1,"ctime":1628225419,"user_name_real":"徐八叉"}],"discussion_count":1,"race_medal":0,"score":"1628222090","product_id":100082101,"comment_content":"关于本章<br>有个疑问，感觉用这两个角度来思考，还是无法区分需不需要对模型做抽象以便于复用。<br>1.领域逻辑运营中立性和领域特定性，可不可以就理解为领域逻辑是很具象的？毕竟是特定嘛，那我该不该为它做抽象的建模？可以预知的是卖烤红薯和卖烤土豆应该还是有很多能力是重叠的，抽象这些能力就能供两个领域公用。但是，公用也意味着耦合，不利于独立迭代，是有可能反而影响业务响应速度的。而这个矛盾，识别出领域逻辑的部分这件事好像都不是一个维度。（我们做领域建模时多数时候解决重叠问题域的问题，但今天这堂课的领域概念的区分好像与这个问题无关）<br>2.业务逻辑具有运营特性和领域中立性，基于经验的不稳定因素，本身就是摸石头过河，想沉淀可以供多个运营模式公用的模型感觉就不靠谱？基于不稳定的事实沉淀稳定的幻想？这个倒是直接说明了，对于业务模型，抽象公用价值会比较有限，快速支持业务的意义更大些。<br><br>以上，不知徐老师怎么看？","like_count":0,"discussions":[{"author":{"id":2537798,"avatar":"https://static001.geekbang.org/account/avatar/00/26/b9/46/758ecf4a.jpg","nickname":"徐八叉","note":"","ucode":"DA6D1EB08A7396","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":524552,"discussion_content":"领域特定 是 特定于问题域 问题域本身就是抽象的 至于复用看下一节","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1628225419,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":305781,"user_name":"jack","can_delete":false,"product_type":"c1","uid":1100326,"ip_address":"","ucode":"48A26A1737DA6D","user_header":"https://static001.geekbang.org/account/avatar/00/10/ca/26/3cc0a03c.jpg","comment_is_top":false,"comment_ctime":1628158201,"is_pvip":false,"replies":[{"id":"110629","content":"有合同的是业务","user_name":"作者回复","comment_id":305781,"uid":"2537798","ip_address":"","utype":1,"ctime":1628160009,"user_name_real":"徐八叉"}],"discussion_count":1,"race_medal":0,"score":"1628158201","product_id":100082101,"comment_content":"关于业务逻辑和领域逻辑的区分，对照CRM业务的人群运营计划，基于客户、标签、等级，圈选一个客户分群，然后按时间，给他推送优惠券等内容。运营计划可能会有变化，有可能是场景运营，比如会员日运营和生日运营。按照业务逻辑和领域逻辑的区分的逻辑，不涉及现金收益、利益承诺，是不是都算领域逻辑？但感觉客户、标签、等级 和运营计划是有区别的，有没有更多的区分原则或者便于理解的描述？","like_count":0,"discussions":[{"author":{"id":2537798,"avatar":"https://static001.geekbang.org/account/avatar/00/26/b9/46/758ecf4a.jpg","nickname":"徐八叉","note":"","ucode":"DA6D1EB08A7396","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":524512,"discussion_content":"有合同的是业务","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1628160009,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":305656,"user_name":"Williamleelol","can_delete":false,"product_type":"c1","uid":1019105,"ip_address":"","ucode":"4C9379D25AEC09","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/DYAIOgq83erD8CwHKGGIia1HwRBxy5GxMLTfGGzOeLjrmZ6ich9Ng7bbPia89iaSibbldnV4uiaKNXFcO2vQ3ztibCrDw/132","comment_is_top":false,"comment_ctime":1628088693,"is_pvip":true,"discussion_count":1,"race_medal":0,"score":"1628088693","product_id":100082101,"comment_content":"知道为什么叫《八叉说》了","like_count":0,"discussions":[{"author":{"id":2736916,"avatar":"https://static001.geekbang.org/account/avatar/00/29/c3/14/5208adb5.jpg","nickname":"极客侠女","note":"","ucode":"57A704A0DE9639","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":391432,"discussion_content":"姓徐名昊，字八叉；8X flow","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1630462435,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]}]}