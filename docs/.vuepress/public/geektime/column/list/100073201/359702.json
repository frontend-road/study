{"id":359702,"title":"14 | 视图：如何简化查询？","content":"<p>你好，我是朱晓峰。今天，我们来聊一聊视图。</p><p>视图是一种虚拟表，我们可以把一段查询语句作为视图存储在数据库中，在需要的时候，可以把视图看做一个表，对里面的数据进行查询。</p><p>举个小例子，在学校的信息系统里面，为了减少冗余数据，学生档案（包括姓名、年龄等）和考试成绩（包括考试时间、科目、分数等）是分别存放在不同的数据表里面的，但是，我们经常需要查询学生的考试成绩（包括学生姓名、科目、分数）。这个时候，我们就可以把查询学生考试成绩的这个关联查询，用视图的形式保存起来。这样一来，我们不仅可以从视图中直接查询学生考试成绩，让查询变得简单，而且，视图没有实际存储数据，还避免了数据存储过程中可能产生的冗余，提高了存储的效率。</p><p>今天，我就结合超市的项目，来具体讲解一下怎么创建和操作视图，来帮助你提高查询效率。</p><h2>视图的创建及其好处</h2><p>首先，我们来学习下创建视图的方法，以及使用视图的一些好处。</p><p>创建视图的语法结构：</p><pre><code>CREATE [OR REPLACE]\nVIEW 视图名称 [(字段列表)]\nAS 查询语句\n</code></pre><p>现在，假设我们要查询一下商品的每日销售明细，这就要从销售流水表（demo.trans）和商品信息表（demo.goodsmaster）中获取到销售数据和对应的商品信息数据。</p><p>销售流水表包含流水单号、商品编号、销售数量、销售金额和交易时间等信息：</p><!-- [[[read_end]]] --><p><img src=\"https://static001.geekbang.org/resource/image/65/56/65168f6e248fcc848e8b9968a712c956.jpeg?wh=1563*516\" alt=\"\"></p><p>商品信息表包含商品编号、条码、名称和售价等信息：</p><p><img src=\"https://static001.geekbang.org/resource/image/73/4b/73836142bbfd6cc0f69de418acb7444b.jpeg?wh=1257*561\" alt=\"\"></p><p>在不使用视图的情况下，我们可以通过对销售流水表和商品信息表进行关联查询，得到每天商品销售统计的结果，包括销售日期、商品名称、每天销售数量的合计和每天销售金额的合计，如下所示：</p><pre><code>mysql&gt; SELECT\n-&gt; a.transdate,\n-&gt; a.itemnumber,\n-&gt; b.goodsname,\n-&gt; SUM(a.quantity) AS quantity,   -- 统计销售数量\n-&gt; SUM(a.salesvalue) AS salesvalue -- 统计销售金额\n-&gt; FROM\n-&gt; demo.trans AS a\n-&gt; LEFT JOIN                 -- 连接查询\n-&gt; demo.goodsmaster AS b ON (a.itemnumber = b.itemnumber)\n-&gt; GROUP BY a.transdate , a.itemnumber;\n+---------------------+------------+-----------+----------+------------+\n| transdate | itemnumber | goodsname | quantity | salesvalue |\n+---------------------+------------+-----------+----------+------------+\n| 2020-12-01 00:00:00 | 1 | 本 | 1.000 | 89.00 |\n| 2020-12-01 00:00:00 | 2 | 笔 | 1.000 | 5.00 |\n| 2020-12-02 00:00:00 | 3 | 胶水 | 2.000 | 20.00 |\n+---------------------+------------+-----------+----------+------------+\n3 rows in set (0.00 sec)\n</code></pre><p>在实际项目中，我们发现，每日商品销售查询使用的频次很高，而且经常需要以这个查询的结果为基础，进行更进一步的统计。</p><p>举个例子，超市经营者要查一下“每天商品的销售数量和当天库存数量的对比”，如果用一个SQL语句查询，就会比较复杂。历史库存表（demo.inventoryhist）如下所示：</p><p><img src=\"https://static001.geekbang.org/resource/image/ac/bc/ac3f59ba59e460bb4962391b20a8c1bc.jpeg?wh=1626*939\" alt=\"\"></p><p>接下来我们的查询步骤会使用到子查询和派生表，很容易理解，你知道含义就行了。</p><ul>\n<li>子查询：就是嵌套在另一个查询中的查询。</li>\n<li>派生表：如果我们在查询中把子查询的结果作为一个表来使用，这个表就是派生表。</li>\n</ul><p>这个查询的具体步骤是：</p><ol>\n<li>通过子查询获得单品销售统计的查询结果；</li>\n<li>把第一步中的查询结果作为一个派生表，跟历史库存表进行连接，查询获得包括销售日期、商品名称、销售数量和历史库存数量在内的最终结果。</li>\n</ol><pre><code>mysql&gt; SELECT\n-&gt; a.transdate,\n-&gt; a.itemnumber,\n-&gt; a.goodsname,\n-&gt; a.quantity,       -- 获取单品销售数量\n-&gt; b.invquantity     -- 获取历史库存数量\n-&gt; FROM\n-&gt; (SELECT           -- 子查询，统计单品销售         \n-&gt; a.transdate,\n-&gt; a.itemnumber,\n-&gt; b.goodsname,\n-&gt; SUM(a.quantity) AS quantity,\n-&gt; SUM(a.salesvalue) AS salesvalue\n-&gt; FROM\n-&gt; demo.trans AS a\n-&gt; LEFT JOIN demo.goodsmaster AS b ON (a.itemnumber = b.itemnumber)\n-&gt; GROUP BY a.transdate , a.itemnumber\n-&gt; ) AS a -- 派生表，与历史库存进行连接\n-&gt; LEFT JOIN\n-&gt; demo.inventoryhist AS b\n-&gt; ON (a.transdate = b.invdate\n-&gt; AND a.itemnumber = b.itemnumber);\n+---------------------+------------+-----------+----------+-------------+\n| transdate | itemnumber | goodsname | quantity | invquantity |\n+---------------------+------------+-----------+----------+-------------+\n| 2020-12-01 00:00:00 | 1 | 本 | 1.000 | 100.000 |\n| 2020-12-01 00:00:00 | 2 | 笔 | 1.000 | 99.000 |\n| 2020-12-02 00:00:00 | 3 | 胶水 | 2.000 | 200.000 |\n+---------------------+------------+-----------+----------+-------------+\n3 rows in set (0.00 sec)\n</code></pre><p>可以看到，这个查询语句是比较复杂的，可读性和可维护性都比较差。那该怎么办呢？其实，针对这种情况，我们就可以使用视图。</p><p>我们可以把商品的每日销售统计查询做成一个视图，存储在数据库里，代码如下所示：</p><pre><code> mysql&gt; CREATE VIEW demo.trans_goodsmaster AS  -- 创建视图\n-&gt; SELECT\n-&gt; a.transdate,\n-&gt; a.itemnumber,\n-&gt; b.goodsname,                           -- 从商品信息表中获取名称\n-&gt; SUM(a.quantity) AS quantity,           -- 统计销售数量\n-&gt; SUM(a.salesvalue) AS salesvalue        -- 统计销售金额\n-&gt; FROM\n-&gt; demo.trans AS a\n-&gt; LEFT JOIN\n-&gt; demo.goodsmaster AS b ON (a.itemnumber = b.itemnumber) -- 与商品信息表关联\n-&gt; GROUP BY a.transdate , a.itemnumber;   -- 按照销售日期和商品编号分组\nQuery OK, 0 rows affected (0.01 sec)\n</code></pre><p>这样一来，我们每次需要查询每日商品销售数据的时候，就可以直接查询视图，不需要再写一个复杂的关联查询语句了。</p><p>我们来试试用一个查询语句直接从视图中进行查询：</p><pre><code>mysql&gt; SELECT *                 -- 直接查询\n-&gt; FROM demo.trans_goodsmaster; -- 视图\n+---------------------+------------+-----------+----------+------------+\n| transdate | itemnumber | goodsname | quantity | salesvalue |\n+---------------------+------------+-----------+----------+------------+\n| 2020-12-01 00:00:00 | 1 | 本 | 1.000 | 89.00 |\n| 2020-12-01 00:00:00 | 2 | 笔 | 1.000 | 5.00 |\n| 2020-12-02 00:00:00 | 3 | 胶水 | 2.000 | 20.00 |\n+---------------------+------------+-----------+----------+------------+\n3 rows in set (0.01 sec)\n</code></pre><p>结果显示，这两种查询方式得到的结果是一样的。</p><p>如果我们要进一步查询“每日单品销售的数量与当日的库存数量的对比”，就可以把刚刚定义的视图作为一个数据表来使用。我们把它跟历史库存表连接起来，来获取销售数量和历史库存数量。就像下面的代码这样，查询就简单多了：</p><pre><code>mysql&gt; SELECT\n-&gt; a.transdate,               -- 从视图中获取销售日期\n-&gt; a.itemnumber,              -- 从视图中获取商品编号\n-&gt; a.goodsname,               -- 从视图中获取商品名称\n-&gt; a.quantity,                -- 从视图中获取销售数量\n-&gt; b.invquantity              -- 从历史库存表中获取历史库存数量\n-&gt; FROM\n-&gt; demo.trans_goodsmaster AS a -- 视图\n-&gt; LEFT JOIN\n-&gt; demo.inventoryhist AS b ON (a.transdate = b.invdate\n-&gt; AND a.itemnumber = b.itemnumber);  -- 直接连接库存历史表\n+---------------------+------------+-----------+----------+-------------+\n| transdate | itemnumber | goodsname | quantity | invquantity |\n+---------------------+------------+-----------+----------+-------------+\n| 2020-12-01 00:00:00 | 1 | 本 | 1.000 | 100.000 |\n| 2020-12-01 00:00:00 | 2 | 笔 | 1.000 | 99.000 |\n| 2020-12-02 00:00:00 | 3 | 胶水 | 2.000 | 200.000 |\n+---------------------+------------+-----------+----------+-------------+\n3 rows in set (0.00 sec)\n</code></pre><p>结果显示，这里的查询结果和我们刚刚使用派生表的查询结果是一样的。但是，<strong>使用视图的查询语句明显简单多了，可读性更好，也更容易维护</strong>。</p><h2>如何操作视图和视图中的数据？</h2><p>创建完了视图，我们还经常需要对视图进行一些操作，比如修改、查看和删除视图。同时，我们可能还需要修改视图中的数据。具体咋操作呢？我来介绍下。</p><h3>如何操作视图？</h3><p>修改、查看、删除视图的操作比较简单，你只要掌握具体的语法就行了。</p><p>修改视图的语法如下所示：</p><pre><code>ALTER VIEW 视图名\nAS 查询语句;\n</code></pre><p>查看视图的语法是：</p><pre><code>查看视图：\nDESCRIBE 视图名；\n</code></pre><p>删除视图要使用DROP关键词，具体方法如下：</p><pre><code>删除视图：\nDROP VIEW 视图名;\n</code></pre><p>好了，到这里，对视图的操作我就介绍完了，下面我再讲讲怎么操作视图中的数据。</p><h3>如何操作视图中的数据？</h3><p>刚刚说过，视图本身是一个虚拟表，所以，对视图中的数据进行插入、修改和删除操作，实际都是通过对实际数据表的操作来实现的。</p><p><strong>1.在视图中插入数据</strong></p><p>为了方便你理解，我们创建一个视图，如下所示：</p><pre><code>CREATE VIEW demo.view_goodsmaster AS \nSELECT itemnumber,barcode,goodsname,specification,salesprice\nFROM demo.goodsmaster;\n</code></pre><p>假设商品信息表中的规格字段（specification）被删除了，当我们尝试用INSERT INTO 语句向视图中插入一条记录的时候，就会提示错误了：</p><pre><code>mysql&gt; INSERT INTO demo.view_goodsmaster\n-&gt; (itemnumber,barcode,goodsname,salesprice)\n-&gt; VALUES\n-&gt; (5,'0005','测试',100);\nERROR 1471 (HY000): The target table view_goodsmaster of the INSERT is not insertable-into\n</code></pre><p>这是因为，<strong>只有视图中的字段跟实际数据表中的字段完全一样，MySQL才允许通过视图插入数据</strong>。刚刚的视图中包含了实际数据表所没有的字段“specification”，所以在插入数据时，系统就会提示错误。</p><p>为了解决这个问题，我们来修改一下视图，让它只包含实际数据表中有的字段，也就是商品编号、条码、名称和售价。代码如下：</p><pre><code>mysql&gt; ALTER VIEW demo.view_goodsmaster\n-&gt; AS\n-&gt; SELECT itemnumber,barcode,goodsname,salesprice -- 只包含实际表中存在的字段\n-&gt; FROM demo.goodsmaster\n-&gt; WHERE salesprice &gt; 50;\nQuery OK, 0 rows affected (0.01 sec)\n</code></pre><p>对视图进行修改之后，我们重新尝试向视图中插入一条记录：</p><pre><code>mysql&gt; INSERT INTO demo.view_goodsmaster\n-&gt; (itemnumber,barcode,goodsname,salesprice)\n-&gt; VALUES\n-&gt; (5,'0005','测试',100);\nQuery OK, 1 row affected (0.02 sec)\n</code></pre><p>结果显示，插入成功了。</p><p>现在我们来查看一下视图中的数据：</p><pre><code>mysql&gt; SELECT *\n-&gt; FROM demo.view_goodsmaster;\n+------------+---------+-----------+------------+\n| itemnumber | barcode | goodsname | salesprice |\n+------------+---------+-----------+------------+\n| 1 | 0001 | 本 | 89.00 |\n| 5 | 0005 | 测试 | 100.00 |                        -- 通过视图插入的数据\n+------------+---------+-----------+------------+\n2 rows in set (0.01 sec)\n</code></pre><p>结果显示，表中确实包含了我们插入的商品编号是5的商品信息。</p><p>现在，视图中已经包括了刚才插入的数据，那么，实际数据表中的数据情况又是怎样的呢？我们再来看一下：</p><pre><code>mysql&gt; SELECT *\n-&gt; FROM demo.goodsmaster;\n+------------+---------+-----------+------------+\n| itemnumber | barcode | goodsname | salesprice |\n+------------+---------+-----------+------------+\n| 1 | 0001 | 本 | 89.00 |\n| 2 | 0002 | 笔 | 5.00 |\n| 3 | 0003 | 胶水 | 10.00 |\n| 5 | 0005 | 测试 | 100.00 |                      -- 通过视图插入的数据\n+------------+---------+-----------+------------+\n4 rows in set (0.00 sec)\n</code></pre><p>可以看到，实际数据表demo.goodsmaster中，也已经包含通过视图插入的商品编号是5的商品数据了。</p><p><strong>2.删除视图中的数据</strong></p><p>我们可以通过DELETE语句，删除视图中的数据：</p><pre><code>mysql&gt; DELETE FROM demo.view_goodsmaster   -- 直接在视图中删除数据\n-&gt; WHERE itemnumber = 5;\nQuery OK, 1 row affected (0.02 sec)\n</code></pre><p>现在我们来查看视图和实际数据表的内容，会发现商品编号是5的商品都已经被删除了。</p><pre><code>mysql&gt; SELECT *\n-&gt; FROM demo.view_goodsmaster;\n+------------+---------+-----------+------------+\n| itemnumber | barcode | goodsname | salesprice |\n+------------+---------+-----------+------------+\n| 1 | 0001 | 本 | 89.00 |                         -- 视图中已经没有商品编号是5的商品了\n+------------+---------+-----------+------------+\n1 row in set (0.00 sec)\n\nmysql&gt; SELECT *\n-&gt; FROM demo.goodsmaster;\n+------------+---------+-----------+------------+\n| itemnumber | barcode | goodsname | salesprice |\n+------------+---------+-----------+------------+\n| 1 | 0001 | 本 | 89.00 |\n| 2 | 0002 | 笔 | 5.00 |\n| 3 | 0003 | 胶水 | 10.00 |                        -- 实际表中也已经没有商品编号是5的商品了\n+------------+---------+-----------+------------+\n3 rows in set (0.00 sec)\n</code></pre><p><strong>3.修改视图中的数据</strong></p><p>我们可以通过UPDATE语句对视图中的数据进行修改：</p><pre><code>mysql&gt; UPDATE demo.view_goodsmaster             -- 更新视图中的数据\n-&gt; SET salesprice = 100\n-&gt; WHERE itemnumber = 1;\nQuery OK, 1 row affected (0.01 sec)\nRows matched: 1 Changed: 1 Warnings: 0\n</code></pre><p>结果显示，更新成功了。现在我们来查看一下视图和实际数据表，代码如下所示：</p><pre><code>mysql&gt; SELECT *\n-&gt; FROM demo.view_goodsmaster;\n+------------+---------+-----------+------------+\n| itemnumber | barcode | goodsname | salesprice |\n+------------+---------+-----------+------------+\n| 1 | 0001 | 本 | 100.00 |                        -- 视图中的售价改过了\n+------------+---------+-----------+------------+\n1 row in set (0.01 sec)\n\nmysql&gt; SELECT *\n-&gt; FROM demo.goodsmaster;\n+------------+---------+-----------+------------+\n| itemnumber | barcode | goodsname | salesprice |\n+------------+---------+-----------+------------+\n| 1 | 0001 | 本 | 100.00 |                        -- 实际数据表中的售价也改过了\n| 2 | 0002 | 笔 | 5.00 |\n| 3 | 0003 | 胶水 | 10.00 |\n+------------+---------+-----------+------------+\n3 rows in set (0.00 sec)\n</code></pre><p>可以发现，视图和原来的数据表都已经改过来了。</p><p>需要注意的是，<strong>我不建议你对视图的数据进行更新操作</strong>，因为MySQL允许用比较复杂的SQL查询语句来创建视图（比如SQL查询语句中使用了分组和聚合函数，或者是UION和DISTINCT关键字），所以，要通过对这个结果集的更新来更新实际数据表，有可能不被允许，因为MySQL没办法精确定位实际数据表中的记录。就比如刚刚讲到的那个“每日销售统计查询”视图就没办法更改，因为创建视图的SQL语句是一个包含了分组函数（GROUP BY）的查询。</p><h2>视图有哪些优缺点？</h2><p>到这里，视图的操作我就讲完了，现在我们把视线拔高一点，来看看视图都有哪些优缺点。只有全面掌握视图的特点，我们才能充分享受它的高效，避免踩坑。</p><p>首先，我来介绍下视图的优点。</p><p>第一，因为我们可以把视图看成一张表来进行查询，所以在使用视图的时候，我们不用考虑视图本身是如何获取数据的，里面有什么逻辑，包括了多少个表，有哪些关联操作，而是可以直接使用。这样一来，实际上就把查询模块化了，查询变得更加简单，提高了开发和维护的效率。所以，你可以把那些经常会用到的查询和复杂查询的子查询定义成视图，存储到数据库中，这样可以为你以后的使用提供方便。</p><p>第二，视图跟实际数据表不一样，它存储的是查询语句。所以，在使用的时候，我们要通过定义视图的查询语句来获取结果集。而视图本身不存储数据，不占用数据存储的资源。</p><p>第三，视图具有隔离性。视图相当于在用户和实际的数据表之间加了一层虚拟表。也就是说，<strong>用户不需要查询数据表，可以直接通过视图获取数据表中的信息</strong>。这样既提高了数据表的安全性，同时也通过视图把用户实际需要的信息汇总在了一起，查询起来很轻松。</p><p><img src=\"https://static001.geekbang.org/resource/image/a2/45/a2ca36c520ed6a6fee5f788d5dcb2845.jpg?wh=3270*1419\" alt=\"\"></p><p>第四，<strong>视图的数据结构相对独立，即便实际数据表的结构发生变化，我们也可以通过修改定义视图的查询语句，让查询结果集里的字段保持不变</strong>。这样一来，针对视图的查询就不受实际数据表结构变化的影响了。</p><p>这一点不容易理解，我举个小例子来说明一下。</p><p>假设我们有一个实际的数据表（demo.goodsmaster），包括商品编号、条码、名称、规格和售价等信息：</p><p><img src=\"https://static001.geekbang.org/resource/image/63/8f/63f46f64a5007278b97235a00633d58f.jpeg?wh=1445*614\" alt=\"\"></p><p>在这个表的基础上，我们建一个视图，查询所有价格超过50元的商品：</p><pre><code>mysql&gt; CREATE VIEW demo.view_goodsmaster AS\n-&gt; SELECT *\n-&gt; FROM demo.goodsmaster\n-&gt; WHERE salesprice &gt; 50;\nQuery OK, 0 rows affected (0.03 sec)\n</code></pre><p>接着，我们在这个视图的基础上做一个查询，来验证一下视图的内容：</p><pre><code>mysql&gt; SELECT barcode,goodsname,specification\n-&gt; FROM demo.view_goodsmaster;\n+---------+-----------+---------------+\n| barcode | goodsname | specification |\n+---------+-----------+---------------+\n| 0001 | 本 | 16开 |\n+---------+-----------+---------------+\n1 row in set (0.00 sec)\n</code></pre><p>结果显示，我们得到了商品信息表中售价大于50元的商品：本（16开）。</p><p>假设现在我们需要把数据表demo.goodsmaster中的字段“specification”删掉，就可以用下面的代码：</p><pre><code>mysql&gt; ALTER TABLE demo.goodsmaster DROP COLUMN specification;\nQuery OK, 0 rows affected (0.13 sec)\nRecords: 0 Duplicates: 0 Warnings: 0\n</code></pre><p>这样一来，因为少了一个字段，而我们的语句又是直接查询数据表的，代码就会提示错误：</p><pre><code>mysql&gt; SELECT barcode,goodsname,specification\n-&gt; FROM demo.goodsmaster;\nERROR 1054 (42S22): Unknown column 'specification' in 'field list'\n</code></pre><p>你看，代码提示字段“specification”不存在。</p><p>但是，如果查询的是视图，就可以通过修改视图来规避这个问题。我们可以用下面的代码把刚才的视图修改一下：</p><pre><code>mysql&gt; ALTER VIEW demo.view_goodsmaster\n-&gt; AS\n-&gt; SELECT\n-&gt; itemnumber,\n-&gt; barcode,\n-&gt; goodsname,\n-&gt; '' as specification, -- 由于字段不存在，插入一个长度是0的空字符串作为这个字段的值\n-&gt; salesprice\n-&gt; FROM demo.goodsmaster\n-&gt; WHERE salesprice &gt; 50;\nQuery OK, 0 rows affected (0.02 sec)\n</code></pre><p>你看，虽然实际数据表中已经没有字段“specification”了，但是视图中却保留了这个字段，而且字段值始终是空字符串。所以，我们不用修改原有视图的查询语句，它也会正常运行。下面的代码查询的结果中，就包括了实际数据表没有的字段“specification”。</p><pre><code>mysql&gt; SELECT barcode,goodsname,specification\n-&gt; FROM demo.view_goodsmaster;\n+---------+-----------+---------------+\n| barcode | goodsname | specification |\n+---------+-----------+---------------+\n| 0001 | 本 | |\n+---------+-----------+---------------+\n1 row in set (0.00 sec)\n</code></pre><p>结果显示，运行成功了。这个视图查询，就没有受到实际数据表中删除字段的影响。</p><p>看到这儿，你可能会说，视图有这么多好处，那我以后都用视图可以吗？其实不是的，视图也有自身的不足。</p><p>如果我们在实际数据表的基础上创建了视图，那么，<strong>如果实际数据表的结构变更了，我们就需要及时对相关的视图进行相应的维护</strong>。特别是当视图是由视图生成的时候，维护会变得比较复杂。因为创建视图的SQL查询可能会对字段重命名，也可能包含复杂的逻辑，这些都会增加维护的成本。</p><p>所以，在创建视图的时候，你要结合实际项目需求，综合考虑视图的优点和不足，这样才能正确使用视图，使系统整体达到最优。</p><p>为了方便你掌握，我用一张图来汇总下视图的优缺点：</p><p><img src=\"https://static001.geekbang.org/resource/image/d4/12/d4cb502799c8328d22774907d7b97212.jpeg?wh=1828*889\" alt=\"\"></p><h2>总结</h2><p>今天，我给你介绍了简化查询的工具：视图，我们学习了创建视图、操作视图和视图中的数据的方法以及视图的优缺点。你要重点掌握操作的语法结构。</p><p>最后，我还是想提醒你一下，虽然可以更新视图数据，但总的来说，视图作为虚拟表，主要用于方便查询。我不建议你更新视图的数据，因为对视图数据的更改，都是通过对实际数据表里数据的操作来完成的，而且有很多限制条件。</p><p>视图虽然有很多优点。但是在创建视图、简化查询的同时，也要考虑到视图太多而导致的数据库维护成本的问题。</p><p>视图不是越多越好，特别是嵌套的视图（就是在视图的基础上创建视图），我不建议你使用，因为逻辑复杂，可读性不好，容易变成系统的潜在隐患。</p><h2>思考题</h2><p>假设某公园售票系统包括门票信息表和类别信息表，这两个表之间通过类别编号相关联。</p><p>门票信息表包含门票编号、名称、类别编号和剩余数量等信息。</p><p><img src=\"https://static001.geekbang.org/resource/image/e1/6a/e1d07bcc301ec2929ff50d601b3c5a6a.jpeg?wh=1201*677\" alt=\"\"></p><p>类别信息表包含类别编号、开门时间和闭馆时间。</p><p><img src=\"https://static001.geekbang.org/resource/image/8f/42/8f21b2f64c2bb51ab7719f27d40ed942.jpeg?wh=1210*592\" alt=\"\"></p><p>请编写一个视图，视图返回的结果集包括：当前时间可以卖的门票名称和剩余数量（说明：开门前30分钟开始售票，结束前30分钟停止售票）。</p><p>欢迎在留言区写下你的思考和答案，我们一起交流讨论。如果你觉得今天的内容对你有所帮助，也欢迎你把它分享给你的朋友或同事，我们下节课见。</p>","comments":[{"had_liked":false,"id":289374,"user_name":"朱晓峰","can_delete":false,"product_type":"c1","uid":2356905,"ip_address":"","ucode":"D2F84F44329C29","user_header":"https://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTLZKoB7sooIiaCHqcdNGI97WI3ZJLJph4mibIiat1qRvrBmkicZTEYvyT5iax1vlLFFgk2xgUibmnWvkicWA/132","comment_is_top":true,"comment_ctime":1618991794,"is_pvip":false,"discussion_count":2,"race_medal":0,"score":"9.2233720470636995e+18","product_id":100073201,"comment_content":"你好，我是朱晓峰，下面我就来公布一下上节课思考题的答案：<br><br>上节课，我们学习了临时表。下面是思考题的答案：<br><br>第一步，先计算门店销售合计<br>CREATE TEMPORARY TABLE demo.temp <br>SELECT branchnumber,sum(actualvalue) AS actualvalue<br>FROM demo.trans<br>GROUP BY branchnumber;<br><br>第二步，再按照门店、收款机，计算合计<br>CREATE TEMPORARY TABLE demo.temp1<br>SELECT branchnumber,cashiernumber,sum(actualvalue) AS actualvalue<br>FROM demo.trans<br>GROUP BY branchnumber,cashiernumber;<br><br>第三步，计算按门店、收款机的销售占比<br>SELECT a.branchnumber,a.cashiernumber, a.actualvalue&#47;b.actualvalue<br>FROM demo.temp1 AS a,demo.temp AS b<br>WHERE (a.branchnumber=b.branchnumber)<br>ORDER BY a.branchnumber,a.cashiernumber<br>","like_count":2,"discussions":[{"author":{"id":1701572,"avatar":"https://static001.geekbang.org/account/avatar/00/19/f6/c4/e14686d4.jpg","nickname":"shk1230","note":"","ucode":"9E39279C23FF8F","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":555926,"discussion_content":"修正：有个疑问：即使门店不相同，收款机的编号都是唯一的吧？","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1647125973,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1701572,"avatar":"https://static001.geekbang.org/account/avatar/00/19/f6/c4/e14686d4.jpg","nickname":"shk1230","note":"","ucode":"9E39279C23FF8F","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":555925,"discussion_content":"第一步，先计算门店销售合计\nCREATE TEMPORARY TABLE demo.temp1\nSELECT branchnumber,sum(actualvalue) AS per_branch_sum-----每门店销售总金额\nFROM demo.trans\nGROUP BY branchnumber;\n\n第二步，每门店，每收款机的金额（有个疑问：即使门店相同，收款机的编号都是唯一的吧？）\nCREATE TEMPORARY TABLE demo.temp2\nSELECT branchnumber,cashiernumber,cashiernumber AS per_cashier_sum---每门店每台收款机的金额\nFROM demo.trans\n\n第三步，计算按每门店、每收款机的销售占比\nSELECT a.branchnumber,a.cashiernumber, a.per_cashier_sum/b. per_branch_sum\nFROM demo.temp2 AS a,demo.temp1 AS b\nWHERE (a.branchnumber=b.branchnumber)\nORDER BY a.branchnumber,a.cashiernumber","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1647125909,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":287946,"user_name":"lesserror","can_delete":false,"product_type":"c1","uid":1351076,"ip_address":"","ucode":"25A54D1165FCF6","user_header":"https://static001.geekbang.org/account/avatar/00/14/9d/a4/e481ae48.jpg","comment_is_top":false,"comment_ctime":1618230693,"is_pvip":false,"replies":[{"id":"106402","content":"谢谢鼓励，视图确实会增加维护成本，要根据实际情况决定是否使用","user_name":"作者回复","comment_id":287946,"uid":"2356905","ip_address":"","utype":1,"ctime":1621504578,"user_name_real":"朱晓峰"}],"discussion_count":1,"race_medal":0,"score":"23093067173","product_id":100073201,"comment_content":"在公司下班后用了一个多番茄种学完了这节的内容。要想保持工作之外挤出时间来学习，必须要让自己保持注意力高度集中。<br><br>老师「视图」这一讲的内容很清晰，这个专栏每一讲的内容都算很具体了。赞一个。<br><br>对于视图来说，好多公司都明确禁止使用了。比起它的那点查询的封装，后期的维护成本更高。因为开发中要经常对数据表结构做改动，如果对业务不熟的新同事，很容易就忘记修改对应的视图创建语句。而在代码中该SQL语句相对来说，更加直观和不容易遗忘。","like_count":6,"discussions":[{"author":{"id":2356905,"avatar":"https://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTLZKoB7sooIiaCHqcdNGI97WI3ZJLJph4mibIiat1qRvrBmkicZTEYvyT5iax1vlLFFgk2xgUibmnWvkicWA/132","nickname":"朱晓峰","note":"","ucode":"D2F84F44329C29","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":518470,"discussion_content":"谢谢鼓励，视图确实会增加维护成本，要根据实际情况决定是否使用","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1621504578,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":287662,"user_name":"undefined","can_delete":false,"product_type":"c1","uid":1100750,"ip_address":"","ucode":"768098DBDBE333","user_header":"https://static001.geekbang.org/account/avatar/00/10/cb/ce/d9e00eb5.jpg","comment_is_top":false,"comment_ctime":1618074892,"is_pvip":false,"replies":[{"id":"106394","content":"对的","user_name":"作者回复","comment_id":287662,"uid":"2356905","ip_address":"","utype":1,"ctime":1621504154,"user_name_real":"朱晓峰"}],"discussion_count":1,"race_medal":0,"score":"23092911372","product_id":100073201,"comment_content":"临时表针对当前会话生效，它把数据缓存在内存或磁盘；<br>而视图仅仅是SQL，每次执行Query时获得原始表的数据。<br><br>视图操作数据对应实际的Table，而临时表则是内存或磁盘上的一份拷贝。<br><br>由于临时表可以是原始数据的一份子集，所以用来提升查询速度，避免扫描所有数据。","like_count":5,"discussions":[{"author":{"id":2356905,"avatar":"https://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTLZKoB7sooIiaCHqcdNGI97WI3ZJLJph4mibIiat1qRvrBmkicZTEYvyT5iax1vlLFFgk2xgUibmnWvkicWA/132","nickname":"朱晓峰","note":"","ucode":"D2F84F44329C29","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":518380,"discussion_content":"对的","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1621504154,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":324962,"user_name":"艺超(鲁鸣)","can_delete":false,"product_type":"c1","uid":1029436,"ip_address":"","ucode":"7F749FA543E0F1","user_header":"https://static001.geekbang.org/account/avatar/00/0f/b5/3c/967d7291.jpg","comment_is_top":false,"comment_ctime":1638759224,"is_pvip":false,"replies":[{"id":"120754","content":"十分感谢您的指正，商品表中的字段名有误，应该是“quantity”而不是“salesquantity”，我已经请后台进行修正。","user_name":"作者回复","comment_id":324962,"uid":"2356905","ip_address":"","utype":1,"ctime":1642308101,"user_name_real":"编辑"}],"discussion_count":1,"race_medal":0,"score":"10228693816","product_id":100073201,"comment_content":"讲解简洁明了，案例很有用，但是本节trans表中销售数量栏位，前后文不太一致，有的地方是quantity,有的地方是salesquantity，可能会对初学者造成困扰。","like_count":2,"discussions":[{"author":{"id":2356905,"avatar":"https://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTLZKoB7sooIiaCHqcdNGI97WI3ZJLJph4mibIiat1qRvrBmkicZTEYvyT5iax1vlLFFgk2xgUibmnWvkicWA/132","nickname":"朱晓峰","note":"","ucode":"D2F84F44329C29","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":546392,"discussion_content":"十分感谢您的指正，商品表中的字段名有误，应该是“quantity”而不是“salesquantity”，我已经请后台进行修正。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1642308102,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":290381,"user_name":"末日，成欢","can_delete":false,"product_type":"c1","uid":1812201,"ip_address":"","ucode":"BBAEBB9C93558A","user_header":"https://wx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTLm8skz4F7FGGBTXWUMia6qVEc00BddeXapicv5FkAx62GmOnUNEcE4scSR60AmappQoNdIQhccKsBA/132","comment_is_top":false,"comment_ctime":1619519602,"is_pvip":false,"replies":[{"id":"106477","content":"视图就是一段SQL语句，如果数据表创建了索引，那么视图中的查询语句就可能会用到索引","user_name":"作者回复","comment_id":290381,"uid":"2356905","ip_address":"","utype":1,"ctime":1621561716,"user_name_real":"朱晓峰"}],"discussion_count":1,"race_medal":0,"score":"5914486898","product_id":100073201,"comment_content":"视图会用的索引吗","like_count":1,"discussions":[{"author":{"id":2356905,"avatar":"https://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTLZKoB7sooIiaCHqcdNGI97WI3ZJLJph4mibIiat1qRvrBmkicZTEYvyT5iax1vlLFFgk2xgUibmnWvkicWA/132","nickname":"朱晓峰","note":"","ucode":"D2F84F44329C29","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":519190,"discussion_content":"视图就是一段SQL语句，如果数据表创建了索引，那么视图中的查询语句就可能会用到索引","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1621561716,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":287616,"user_name":"bearlu","can_delete":false,"product_type":"c1","uid":1030862,"ip_address":"","ucode":"14F260C8B24E27","user_header":"https://static001.geekbang.org/account/avatar/00/0f/ba/ce/fd45714f.jpg","comment_is_top":false,"comment_ctime":1618050626,"is_pvip":true,"replies":[{"id":"106393","content":"第一，视图是存储在服务器上的查询语句，所有的连接只要有相应的权限，就可以使用。临时表只限于当前连接，连接中断自动删除的。<br>第二，视图是不保存数据的，临时表保存数据。","user_name":"作者回复","comment_id":287616,"uid":"2356905","ip_address":"","utype":1,"ctime":1621503910,"user_name_real":"朱晓峰"}],"discussion_count":3,"race_medal":0,"score":"5913017922","product_id":100073201,"comment_content":"老师，视图和临时表有什么区别？","like_count":1,"discussions":[{"author":{"id":2356905,"avatar":"https://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTLZKoB7sooIiaCHqcdNGI97WI3ZJLJph4mibIiat1qRvrBmkicZTEYvyT5iax1vlLFFgk2xgUibmnWvkicWA/132","nickname":"朱晓峰","note":"","ucode":"D2F84F44329C29","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":518369,"discussion_content":"第一，视图是存储在服务器上的查询语句，所有的连接只要有相应的权限，就可以使用。临时表只限于当前连接，连接中断自动删除的。\n第二，视图是不保存数据的，临时表保存数据。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1621503910,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1201022,"avatar":"https://static001.geekbang.org/account/avatar/00/12/53/7e/b6829040.jpg","nickname":"SevenMonths","note":"","ucode":"62A9740FBD1FAE","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":391527,"discussion_content":"【第二，视图是不保存数据的，临时表保存数据。】\n 每查询一次视图表。视图表都要根据语句去原始表查一遍吗？","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1630497164,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":2016188,"avatar":"https://static001.geekbang.org/account/avatar/00/1e/c3/bc/77549ce4.jpg","nickname":"小明针不戳","note":"","ucode":"64D729196221E2","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":370048,"discussion_content":"共同点是都可以节省空间,不同点是临时表只有自己可见,而视图是基于原始表的","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1619267271,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":346064,"user_name":"阿甘","can_delete":false,"product_type":"c1","uid":1057843,"ip_address":"","ucode":"BC93175B70E05D","user_header":"https://static001.geekbang.org/account/avatar/00/10/24/33/bcf37f50.jpg","comment_is_top":false,"comment_ctime":1652798060,"is_pvip":true,"discussion_count":0,"race_medal":0,"score":"1652798060","product_id":100073201,"comment_content":"我记得有一种视图叫做 物化视图 是有保存实际查询结果的。","like_count":0},{"had_liked":false,"id":331410,"user_name":"枫林血舞","can_delete":false,"product_type":"c1","uid":2809867,"ip_address":"","ucode":"EE7F6DA78D21EA","user_header":"https://static001.geekbang.org/account/avatar/00/2a/e0/0b/6f667b2c.jpg","comment_is_top":false,"comment_ctime":1642578190,"is_pvip":true,"replies":[{"id":"123470","content":"请参考思考题答案","user_name":"作者回复","comment_id":331410,"uid":"2356905","ip_address":"","utype":1,"ctime":1647072545,"user_name_real":"编辑"}],"discussion_count":1,"race_medal":0,"score":"1642578190","product_id":100073201,"comment_content":"交作业：<br>-- 门票信息表<br>create table demo.ticket<br>(<br>id int primary key,<br>tname text,<br>typeid int,<br>balance int<br>);<br>insert into demo.ticket<br>(<br>id,<br>tname,<br>typeid,<br>balance<br>)<br>values<br>(1, &#39;入园门票&#39;, 1, 100),<br>(2, &#39;收费场馆A门票&#39;, 2, 70),<br>(3, &#39;收费场馆B门票&#39;, 2, 50);<br><br>-- 类别信息表包含类别编号、开门时间和闭馆时间。<br>create table demo.typeinfo<br>(<br>typeid int primary key,<br>opentime text,<br>closetime text<br>);<br>insert into demo.typeinfo<br>(<br>typeid,<br>opentime,<br>closetime<br>)<br>values<br>(1, &#39;9:00&#39;, &#39;17:00&#39;),<br>(2, &#39;10:00&#39;, &#39;14:00&#39;);<br><br>-- demo.typeinfo demo.ticket<br>select * from demo.ticket;<br>select * from demo.typeinfo;<br><br>-- 请编写一个视图，视图返回的结果集包括：当前时间可以卖的门票名称和剩余数量（说明：开门前 30 分钟开始售票，结束前 30 分钟停止售票）<br>create view demo.ticket_typeinfo as <br>select <br>a.id,<br>a.tname,<br>a.balance<br>from <br>demo.ticket as a<br>join <br>demo.typeinfo as b<br>on a.typeid = b.typeid<br>where hour(current_time()) &gt; b.opentime<br>and hour(current_time()) &lt; b.closetime;","like_count":0,"discussions":[{"author":{"id":2356905,"avatar":"https://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTLZKoB7sooIiaCHqcdNGI97WI3ZJLJph4mibIiat1qRvrBmkicZTEYvyT5iax1vlLFFgk2xgUibmnWvkicWA/132","nickname":"朱晓峰","note":"","ucode":"D2F84F44329C29","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":555775,"discussion_content":"请参考思考题答案","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1647072545,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":326545,"user_name":"Geek_9a859a","can_delete":false,"product_type":"c1","uid":2859417,"ip_address":"","ucode":"5FB3A43EFE6F6A","user_header":"https://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTJOa3ev8pPVIEfM3jX2PfruhISTd1YduxgbAF7ELhYGibCdJRP9mtjsM4ib0SzNKIAHhiasoq5zAl8mQ/132","comment_is_top":false,"comment_ctime":1639556938,"is_pvip":false,"replies":[{"id":"120763","content":"是的","user_name":"作者回复","comment_id":326545,"uid":"2356905","ip_address":"","utype":1,"ctime":1642308243,"user_name_real":"编辑"}],"discussion_count":1,"race_medal":0,"score":"1639556938","product_id":100073201,"comment_content":"如果视图是以查询语句建立的，与基础表的数据没有一一对应的关系或者存在一些特殊结构，那么视图是不是就只有查看或者作为派生表这两种功能，不能对视图的数据进行更新了","like_count":0,"discussions":[{"author":{"id":2356905,"avatar":"https://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTLZKoB7sooIiaCHqcdNGI97WI3ZJLJph4mibIiat1qRvrBmkicZTEYvyT5iax1vlLFFgk2xgUibmnWvkicWA/132","nickname":"朱晓峰","note":"","ucode":"D2F84F44329C29","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":546402,"discussion_content":"是的","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1642308243,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":310138,"user_name":"SevenMonths","can_delete":false,"product_type":"c1","uid":1201022,"ip_address":"","ucode":"62A9740FBD1FAE","user_header":"https://static001.geekbang.org/account/avatar/00/12/53/7e/b6829040.jpg","comment_is_top":false,"comment_ctime":1630497074,"is_pvip":true,"replies":[{"id":"113739","content":"会反馈给后台","user_name":"作者回复","comment_id":310138,"uid":"2356905","ip_address":"","utype":1,"ctime":1632798532,"user_name_real":"朱晓峰"}],"discussion_count":1,"race_medal":0,"score":"1630497074","product_id":100073201,"comment_content":"看到这里发现评论依然特别少。后来才发现评论后需要作者同意才能展示。<br>自我感觉在评论区也能学到很多知识，有时候老师没时间回复的问题，评论区其他同学就回复了。<br>直白的说我是先看的盗版，觉得挺不错才来支持正版的。<br>最主要的原因是想和老师还有评论区的同学互动讨论下。","like_count":0,"discussions":[{"author":{"id":2356905,"avatar":"https://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTLZKoB7sooIiaCHqcdNGI97WI3ZJLJph4mibIiat1qRvrBmkicZTEYvyT5iax1vlLFFgk2xgUibmnWvkicWA/132","nickname":"朱晓峰","note":"","ucode":"D2F84F44329C29","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":526142,"discussion_content":"会反馈给后台","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1632798532,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":295794,"user_name":"追忆似水年华","can_delete":false,"product_type":"c1","uid":1160192,"ip_address":"","ucode":"C1D7C0DD7E7411","user_header":"https://static001.geekbang.org/account/avatar/00/11/b4/00/661fb98d.jpg","comment_is_top":false,"comment_ctime":1622600342,"is_pvip":true,"replies":[{"id":"109144","content":"非常感谢您的留言，这个地方的两个view意义不同，我已经请后台加以修正。","user_name":"作者回复","comment_id":295794,"uid":"2356905","ip_address":"","utype":1,"ctime":1625711666,"user_name_real":"朱晓峰"}],"discussion_count":1,"race_medal":0,"score":"1622600342","product_id":100073201,"comment_content":"视图的名称是不是前后不一致？前面是 trans_goodsmaster，后面成了 view_goodsmaster。","like_count":0,"discussions":[{"author":{"id":2356905,"avatar":"https://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTLZKoB7sooIiaCHqcdNGI97WI3ZJLJph4mibIiat1qRvrBmkicZTEYvyT5iax1vlLFFgk2xgUibmnWvkicWA/132","nickname":"朱晓峰","note":"","ucode":"D2F84F44329C29","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":521219,"discussion_content":"非常感谢您的留言，这个地方的两个view意义不同，我已经请后台加以修正。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1625711666,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":292225,"user_name":"菜鸟🐤要先飞","can_delete":false,"product_type":"c1","uid":1202379,"ip_address":"","ucode":"56668DB891F7BC","user_header":"https://static001.geekbang.org/account/avatar/00/12/58/cb/daf94c0e.jpg","comment_is_top":false,"comment_ctime":1620726818,"is_pvip":false,"replies":[{"id":"106534","content":"请参考思考题答案","user_name":"作者回复","comment_id":292225,"uid":"2356905","ip_address":"","utype":1,"ctime":1621567010,"user_name_real":"朱晓峰"}],"discussion_count":1,"race_medal":0,"score":"1620726818","product_id":100073201,"comment_content":"CREATE VIEW view_quantity_available AS SELECT<br>a.tname,<br>a.balance <br>FROM<br>\ttickets AS a<br>\tLEFT JOIN ticketstype AS b ON a.typeid = b.typeid <br>WHERE<br>\t( opentime - INTERVAL 30 MINUTE ) &lt;= time(<br>\tnow()) <br>\tAND time(<br>\t\tnow())&lt; (<br>\tclosetime - INTERVAL 30 MINUTE)","like_count":0,"discussions":[{"author":{"id":2356905,"avatar":"https://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTLZKoB7sooIiaCHqcdNGI97WI3ZJLJph4mibIiat1qRvrBmkicZTEYvyT5iax1vlLFFgk2xgUibmnWvkicWA/132","nickname":"朱晓峰","note":"","ucode":"D2F84F44329C29","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":519734,"discussion_content":"请参考思考题答案","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1621567010,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":287767,"user_name":"giteebravo","can_delete":false,"product_type":"c1","uid":1005290,"ip_address":"","ucode":"C087E8D6B5A98B","user_header":"https://static001.geekbang.org/account/avatar/00/0f/56/ea/32608c44.jpg","comment_is_top":false,"comment_ctime":1618139643,"is_pvip":false,"replies":[{"id":"106397","content":"视图会增加数据库的维护成本","user_name":"作者回复","comment_id":287767,"uid":"2356905","ip_address":"","utype":1,"ctime":1621504359,"user_name_real":"朱晓峰"}],"discussion_count":1,"race_medal":1,"score":"1618139643","product_id":100073201,"comment_content":"<br>使用视图后，代码的可读性更好，也更容易维护了。<br><br>不建议直接通过视图插入、修改和删除数据，后期维护会出现不可预料的麻烦。<br><br>使用视图最大的好处，我认为就是让查询变得更简单，且更模块化，提高了开发和维护的效率。<br><br>至于嵌套的视图，想想还是戒了吧。<br>","like_count":0,"discussions":[{"author":{"id":2356905,"avatar":"https://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTLZKoB7sooIiaCHqcdNGI97WI3ZJLJph4mibIiat1qRvrBmkicZTEYvyT5iax1vlLFFgk2xgUibmnWvkicWA/132","nickname":"朱晓峰","note":"","ucode":"D2F84F44329C29","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":518411,"discussion_content":"视图会增加数据库的维护成本","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1621504359,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]}]}