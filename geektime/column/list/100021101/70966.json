{"id":70966,"title":"02 | 崩溃优化（下）：应用崩溃了，你应该如何去分析？","content":"<p>在侦探漫画《名侦探柯南》中，无论柯南走到哪里都会遇到新的“案件”，这也很像程序员的“日常”，我们每天工作也会遇到各种各样的疑难问题，“崩溃”就是其中比较常见的一种问题。</p><p>解决崩溃跟破案一样需要经验，我们分析的问题越多越熟练，定位问题就会越快越准。当然这里也有很多套路，比如对于“案发现场”我们应该留意哪些信息？怎样找到更多的“证人”和“线索”？“侦查案件”的一般流程是什么？对不同类型的“案件”分别应该使用什么样的调查方式？</p><p>“真相永远只有一个”，崩溃也并不可怕。通过今天的学习，希望你能成为代码届的名侦探柯南。</p><h2>崩溃现场</h2><p>崩溃现场是我们的“第一案发现场”，它保留着很多有价值的线索。在这里我们挖掘到的信息越多，下一步分析的方向就越清晰，而不是去靠盲目猜测。</p><p>操作系统是整个崩溃过程的“旁观者”，也是我们最重要的“证人”。一个好的崩溃捕获工具知道应该采集哪些系统信息，也知道在什么场景要深入挖掘哪些内容，从而可以更好地帮助我们解决问题。</p><p>接下来我们具体来看看在崩溃现场应该采集哪些信息。</p><p>1.崩溃信息</p><p>从崩溃的基本信息，我们可以对崩溃有初步的判断。</p><ul>\n<li>\n<p>进程名、线程名。崩溃的进程是前台进程还是后台进程，崩溃是不是发生在UI线程。</p>\n</li>\n<li>\n<p>崩溃堆栈和类型。崩溃是属于Java崩溃、Native崩溃，还是ANR，对于不同类型的崩溃我们关注的点也不太一样。特别需要看崩溃堆栈的栈顶，看具体崩溃在系统的代码，还是我们自己的代码里面。</p>\n</li>\n</ul><!-- [[[read_end]]] --><pre><code>Process Name: 'com.sample.crash'\nThread Name: 'MyThread'\n\njava.lang.NullPointerException\n    at ...TestsActivity.crashInJava(TestsActivity.java:275)\n</code></pre><p>有时候我们除了崩溃的线程，还希望拿到其他关键的线程的日志。就像上面的例子，虽然是MyThread线程崩溃，但是我也希望可以知道主线程当前的调用栈。</p><p>2.系统信息</p><p>系统的信息有时候会带有一些关键的线索，对我们解决问题有非常大的帮助。</p><ul>\n<li>Logcat。这里包括应用、系统的运行日志。由于系统权限问题，获取到的Logcat可能只包含与当前App相关的。其中系统的event logcat会记录App运行的一些基本情况，记录在文件/system/etc/event-log-tags中。</li>\n</ul><pre><code>system logcat:\n10-25 17:13:47.788 21430 21430 D dalvikvm: Trying to load lib ... \nevent logcat:\n10-25 17:13:47.788 21430 21430 I am_on_resume_called: 生命周期\n10-25 17:13:47.788 21430 21430 I am_low_memory: 系统内存不足\n10-25 17:13:47.788 21430 21430 I am_destroy_activity: 销毁 Activty\n10-25 17:13:47.888 21430 21430 I am_anr: ANR 以及原因\n10-25 17:13:47.888 21430 21430 I am_kill: APP 被杀以及原因\n</code></pre><ul>\n<li>\n<p>机型、系统、厂商、CPU、ABI、Linux版本等。我们会采集多达几十个维度，这对后面讲到寻找共性问题会很有帮助。</p>\n</li>\n<li>\n<p>设备状态：是否root、是否是模拟器。一些问题是由Xposed或多开软件造成，对这部分问题我们要区别对待。</p>\n</li>\n</ul><p>3.内存信息</p><p>OOM、ANR、虚拟内存耗尽等，很多崩溃都跟内存有直接关系。如果我们把用户的手机内存分为“2GB以下”和“2GB以上”两个桶，会发现“2GB以下”用户的崩溃率是“2GB以上”用户的几倍。</p><ul>\n<li>\n<p>系统剩余内存。关于系统内存状态，可以直接读取文件/proc/meminfo。当系统可用内存很小（低于MemTotal的 10%）时，OOM、大量GC、系统频繁自杀拉起等问题都非常容易出现。</p>\n</li>\n<li>\n<p>应用使用内存。包括Java内存、RSS（Resident Set Size）、PSS（Proportional Set Size），我们可以得出应用本身内存的占用大小和分布。PSS和RSS通过/proc/self/smap计算，可以进一步得到例如apk、dex、so等更加详细的分类统计。</p>\n</li>\n<li>\n<p>虚拟内存。虚拟内存可以通过/proc/self/status得到，通过/proc/self/maps文件可以得到具体的分布情况。有时候我们一般不太重视虚拟内存，但是很多类似OOM、tgkill等问题都是虚拟内存不足导致的。</p>\n</li>\n</ul><pre><code>Name:     com.sample.name   // 进程名\nFDSize:   800               // 当前进程申请的文件句柄个数\nVmPeak:   3004628 kB        // 当前进程的虚拟内存峰值大小\nVmSize:   2997032 kB        // 当前进程的虚拟内存大小\nThreads:  600               // 当前进程包含的线程个数\n</code></pre><p>一般来说，对于32位进程，如果是32位的CPU，虚拟内存达到3GB就可能会引起内存申请失败的问题。如果是64位的CPU，虚拟内存一般在3～4GB之间。当然如果我们支持64位进程，虚拟内存就不会成为问题。Google Play要求 2019年8月一定要支持64位，在国内虽然支持64位的设备已经在90%以上了，但是商店都不支持区分CPU架构类型发布，普及起来需要更长的时间。</p><p>4.资源信息</p><p>有的时候我们会发现应用堆内存和设备内存都非常充足，还是会出现内存分配失败的情况，这跟资源泄漏可能有比较大的关系。</p><ul>\n<li>文件句柄fd。文件句柄的限制可以通过/proc/self/limits获得，一般单个进程允许打开的最大文件句柄个数为1024。但是如果文件句柄超过800个就比较危险，需要将所有的fd以及对应的文件名输出到日志中，进一步排查是否出现了有文件或者线程的泄漏。</li>\n</ul><pre><code>opened files count 812:\n0 -&gt; /dev/null\n1 -&gt; /dev/log/main4 \n2 -&gt; /dev/binder\n3 -&gt; /data/data/com.crash.sample/files/test.config\n...\n</code></pre><ul>\n<li>线程数。当前线程数大小可以通过上面的status文件得到，一个线程可能就占2MB的虚拟内存，过多的线程会对虚拟内存和文件句柄带来压力。根据我的经验来说，如果线程数超过400个就比较危险。需要将所有的线程id以及对应的线程名输出到日志中，进一步排查是否出现了线程相关的问题。</li>\n</ul><pre><code> threads count 412:               \n 1820 com.sample.crashsdk                         \n 1844 ReferenceQueueD                                             \n 1869 FinalizerDaemon   \n ...  \n</code></pre><ul>\n<li>JNI。使用JNI时，如果不注意很容易出现引用失效、引用爆表等一些崩溃。我们可以通过DumpReferenceTables统计JNI的引用表，进一步分析是否出现了JNI泄漏等问题。</li>\n</ul><p>5.应用信息</p><p>除了系统，其实我们的应用更懂自己，可以留下很多相关的信息。</p><ul>\n<li>\n<p>崩溃场景。崩溃发生在哪个Activity或Fragment，发生在哪个业务中。</p>\n</li>\n<li>\n<p>关键操作路径。不同于开发过程详细的打点日志，我们可以记录关键的用户操作路径，这对我们复现崩溃会有比较大的帮助。</p>\n</li>\n<li>\n<p>其他自定义信息。不同的应用关心的重点可能不太一样，比如网易云音乐会关注当前播放的音乐，QQ浏览器会关注当前打开的网址或视频。此外例如运行时间、是否加载了补丁、是否是全新安装或升级等信息也非常重要。</p>\n</li>\n</ul><p>除了上面这些通用的信息外，针对特定的一些崩溃，我们可能还需要获取类似磁盘空间、电量、网络使用等特定信息。所以说一个好的崩溃捕获工具，会根据场景为我们采集足够多的信息，让我们有更多的线索去分析和定位问题。当然数据的采集需要注意用户隐私，做到足够强度的加密和脱敏。</p><h2>崩溃分析</h2><p>有了这么多现场信息之后，我们可以开始真正的“破案”之旅了。绝大部分的“案件”只要我们肯花功夫，最后都能真相大白。不要畏惧问题，经过耐心和细心地分析，总能敏锐地发现一些异常或关键点，并且还要敢于怀疑和验证。下面我重点给你介绍崩溃分析“三部曲”。</p><p>第一步：确定重点</p><p>确认和分析重点，关键在于在日志中找到重要的信息，对问题有一个大致判断。一般来说，我建议在确定重点这一步可以关注以下几点。</p><p><strong>1. 确认严重程度</strong>。解决崩溃也要看性价比，我们优先解决Top崩溃或者对业务有重大影响，例如启动、支付过程的崩溃。我曾经有一次辛苦了几天解决了一个大的崩溃，但下个版本产品就把整个功能都删除了，这令我很崩溃。</p><p><strong>2. 崩溃基本信息</strong>。确定崩溃的类型以及异常描述，对崩溃有大致的判断。一般来说，大部分的简单崩溃经过这一步已经可以得到结论。</p><ul>\n<li>\n<p>Java崩溃。Java崩溃类型比较明显，比如NullPointerException是空指针，OutOfMemoryError是资源不足，这个时候需要去进一步查看日志中的 “内存信息”和“资源信息”。</p>\n</li>\n<li>\n<p>Native崩溃。需要观察signal、code、fault addr等内容，以及崩溃时Java的堆栈。关于各signal含义的介绍，你可以查看<a href=\"http://www.mkssoftware.com/docs/man5/siginfo_t.5.asp\">崩溃信号介绍</a>。比较常见的是有SIGSEGV和SIGABRT，前者一般是由于空指针、非法指针造成，后者主要因为ANR和调用abort() 退出所导致。</p>\n</li>\n<li>\n<p><strong>ANR</strong>。我的经验是，先看看主线程的堆栈，是否是因为锁等待导致。接着看看ANR日志中iowait、CPU、GC、system server等信息，进一步确定是I/O问题，或是CPU竞争问题，还是由于大量GC导致卡死。</p>\n</li>\n</ul><p><strong>3. Logcat</strong>。Logcat一般会存在一些有价值的线索，日志级别是Warning、Error的需要特别注意。从Logcat中我们可以看到当时系统的一些行为跟手机的状态，例如出现ANR时，会有“am_anr”；App被杀时，会有“am_kill”。不同的系统、厂商输出的日志有所差别，<strong>当从一条崩溃日志中无法看出问题的原因，或者得不到有用信息时，不要放弃，建议查看相同崩溃点下的更多崩溃日志。</strong></p><p><strong>4. 各个资源情况</strong>。结合崩溃的基本信息，我们接着看看是不是跟 “内存信息” 有关，是不是跟“资源信息”有关。比如是物理内存不足、虚拟内存不足，还是文件句柄fd泄漏了。</p><p>无论是资源文件还是Logcat，内存与线程相关的信息都需要特别注意，很多崩溃都是由于它们使用不当造成的。</p><p>第二步：查找共性</p><p>如果使用了上面的方法还是不能有效定位问题，我们可以尝试查找这类崩溃有没有什么共性。找到了共性，也就可以进一步找到差异，离解决问题也就更进一步。</p><p>机型、系统、ROM、厂商、ABI，这些采集到的系统信息都可以作为维度聚合，共性问题例如是不是因为安装了Xposed，是不是只出现在x86的手机，是不是只有三星这款机型，是不是只在Android 5.0的系统上。应用信息也可以作为维度来聚合，比如正在打开的链接、正在播放的视频、国家、地区等。</p><p>找到了共性，可以对你下一步复现问题有更明确的指引。</p><p>第三步：尝试复现</p><p>如果我们已经大概知道了崩溃的原因，为了进一步确认更多信息，就需要尝试复现崩溃。如果我们对崩溃完全没有头绪，也希望通过用户操作路径来尝试重现，然后再去分析崩溃原因。</p><p>“只要能本地复现，我就能解”，相信这是很多开发跟测试说过的话。有这样的底气主要是因为在稳定的复现路径上面，我们可以采用增加日志或使用Debugger、GDB等各种各样的手段或工具做进一步分析。</p><p>回想当时在开发Tinker的时候，我们遇到了各种各样的奇葩问题。比如某个厂商改了底层实现、新的Android系统实现有所更改，都需要去Google、翻源码，有时候还需要去抠厂商的ROM或手动刷ROM。这个痛苦的经历告诉我，很多疑难问题需要我们耐得住寂寞，反复猜测、反复发灰度、反复验证。</p><p>疑难问题：系统崩溃</p><p>系统崩溃常常令我们感到非常无助，它可能是某个Android版本的bug，也可能是某个厂商修改ROM导致。这种情况下的崩溃堆栈可能完全没有我们自己的代码，很难直接定位问题。针对这种疑难问题，我来谈谈我的解决思路。</p><p><strong>1. 查找可能的原因</strong>。通过上面的共性归类，我们先看看是某个系统版本的问题，还是某个厂商特定ROM的问题。虽然崩溃日志可能没有我们自己的代码，但通过操作路径和日志，我们可以找到一些怀疑的点。</p><p><strong>2. 尝试规避</strong>。查看可疑的代码调用，是否使用了不恰当的API，是否可以更换其他的实现方式规避。</p><p><strong>3. Hook解决</strong>。这里分为Java Hook和Native Hook。以我最近解决的一个系统崩溃为例，我们发现线上出现一个Toast相关的系统崩溃，它只出现在Android 7.0的系统中，看起来是在Toast显示的时候窗口的token已经无效了。这有可能出现在Toast需要显示时，窗口已经销毁了。</p><pre><code>android.view.WindowManager$BadTokenException: \n\tat android.view.ViewRootImpl.setView(ViewRootImpl.java)\n\tat android.view.WindowManagerGlobal.addView(WindowManagerGlobal.java)\n\tat android.view.WindowManagerImpl.addView(WindowManagerImpl.java4)\n\tat android.widget.Toast$TN.handleShow(Toast.java)\n</code></pre><p>为什么Android 8.0的系统不会有这个问题？在查看Android 8.0的源码后我们发现有以下修改：</p><pre><code>try {\n  mWM.addView(mView, mParams);\n  trySendAccessibilityEvent();\n} catch (WindowManager.BadTokenException e) {\n  /* ignore */\n}\n</code></pre><p>考虑再三，我们决定参考Android 8.0的做法，直接catch住这个异常。这里的关键在于寻找Hook点，这个案例算是相对比较简单的。Toast里面有一个变量叫mTN，它的类型为handler，我们只需要代理它就可以实现捕获。</p><p>如果你做到了我上面说的这些，<strong>95%以上的崩溃都能解决或者规避，大部分的系统崩溃也是如此</strong>。当然总有一些疑难问题需要依赖到用户的真实环境，我们希望具备类似动态跟踪和调试的能力。专栏后面还会讲到xlog日志、远程诊断、动态分析等高级手段，可以帮助我们进一步调试线上疑难问题，敬请期待。</p><p>崩溃攻防是一个长期的过程，我们希望尽可能地提前预防崩溃的发生，将它消灭在萌芽阶段。这可能涉及我们应用的整个流程，包括人员的培训、编译检查、静态扫描工作，还有规范的测试、灰度、发布流程等。</p><p>而崩溃优化也不是孤立的，它跟我们后面讲到的内存、卡顿、I/O等内容都有关。可能等你学完整个课程后，再回头来看会有不同的理解。</p><h2>总结</h2><p>今天我们介绍了崩溃问题的一些分析方法、特殊技巧、以及疑难和常见问题的解决方法。当然崩溃分析要具体问题具体分析，不同类型的应用侧重点可能也有所不同，我们不能只局限在上面所说的一些方法。</p><p>讲讲自己的一些心得体会，在解决崩溃特别是一些疑难问题时，总会觉得患得患失。有时候解了一个问题，发现其他问题也跟“开心消消乐”一样消失了。有时候有些问题“解不出来郁闷，解出来更郁闷”，可能只是一个小的代码疏忽，换来了一个月的青春和很多根白头发。</p><h2>课后作业</h2><p>在崩溃的长期保卫战中，你肯定有一些经典的漂亮战役，希望可以拿出来跟其他同学分享。当然也会有一些百思不得其解的问题，<span class=\"orange\">今天的课后作业是分享你破解崩溃问题的思路和方法，总结一下通过Sample的练习有什么收获。</span></p><p>如果想向崩溃发起挑战，那么Top 20崩溃就是我们无法避免的对手。在这里面会有不少疑难的系统崩溃问题，TimeoutException就是其中比较经典的一个。</p><pre><code>java.util.concurrent.TimeoutException: \n         android.os.BinderProxy.finalize() timed out after 10 seconds\nat android.os.BinderProxy.destroy(Native Method)\nat android.os.BinderProxy.finalize(Binder.java:459)\n</code></pre><p>今天的<a href=\"http://github.com/AndroidAdvanceWithGeektime/Chapter02\">Sample</a>提供了一种“完全解决”TimeoutException的方法，主要是希望你可以更好地学习解决系统崩溃的套路。</p><p>1.通过源码分析。我们发现TimeoutException是由系统的FinalizerWatchdogDaemon抛出来的。</p><p>2.寻找可以规避的方法。尝试调用了它的Stop()方法，但是线上发现在Android 6.0之前会有线程同步问题。</p><p>3.寻找其他可以Hook的点。通过代码的依赖关系，发现一个取巧的Hook点。</p><p>最终代码你可以参考Sample的实现，但是建议只在灰度中使用。这里需要提的是，虽然有一些黑科技可以帮助我们解决某些问题，但对于黑科技的使用我们需要慎重，比如有的黑科技对保活进程频率没有做限制，可能会导致系统卡死。</p><p>欢迎你点击“请朋友读”，把今天的内容分享给好友，邀请他一起学习。最后别忘了在评论区提交今天的作业，我也为认真完成作业的同学准备了丰厚的“<a href=\"http://time.geekbang.org/column/article/70250\">学习加油礼包</a>”，期待与你一起切磋进步哦。</p><p><img src=\"https://static001.geekbang.org/resource/image/24/c0/24c190870d71c3daa203a939d67358c0.jpg?wh=1110*549\" alt=\"\"><img src=\"https://static001.geekbang.org/resource/image/30/aa/306ef8892cc985a19fdd36534e7c5daa.png?wh=1110*110\" alt=\"\"></p>","comments":[{"had_liked":false,"id":46417,"user_name":"张绍文","can_delete":false,"product_type":"c1","uid":1009577,"ip_address":"","ucode":"94B49E5F80BFDE","user_header":"https://static001.geekbang.org/account/avatar/00/0f/67/a9/e251ace7.jpg","comment_is_top":true,"comment_ctime":1543918646,"is_pvip":false,"discussion_count":2,"race_medal":0,"score":"9.2233724550105006e+18","product_id":100021101,"comment_content":"补充一下获得logcat和Jave堆栈的方法：<br>一. 获取logcat<br>logcat日志流程是这样的，应用层 --&gt; liblog.so --&gt; logd，底层使用ring buffer来存储数据。<br>获取的方式有以下三种：<br>   1. 通过logcat命令获取。<br>   优点：非常简单，兼容性好。<br>   缺点：整个链路比较长，可控性差，失败率高，特别是堆破坏或者堆内存不足时，基本会失败。<br>   2. hook liblog.so实现。通过hook liblog.so 中__android_log_buf_write 方法，将内容重定向到自己的buffer中。<br>   优点：简单，兼容性相对还好。<br>   缺点：要一直打开。<br>   3.  自定义获取代码。通过移植底层获取logcat的实现，通过socket直接跟logd交互。<br>   优点：比较灵活，预先分配好资源，成功率也比较高。<br>   缺点：实现非常复杂<br><br>二. 获取Java 堆栈<br>   native崩溃时，通过unwind只能拿到Native堆栈。我们希望可以拿到当时各个线程的Java堆栈<br>   1. Thread.getAllStackTraces()。<br>    优点：简单，兼容性好。<br>    缺点：<br>        a. 成功率不高，依靠系统接口在极端情况也会失败。<br>        b. 7.0之后这个接口是没有主线程堆栈。<br>        c. 使用Java层的接口需要暂停线程<br>   2. hook libart.so。通过hook ThreadList和Thread的函数，获得跟ANR一样的堆栈。为了稳定性，我们会在fork子进程执行。<br>   优点：信息很全，基本跟ANR的日志一样，有native线程状态，锁信息等等。<br>   缺点：黑科技的兼容性问题，失败时可以用Thread.getAllStackTraces()兜底<br><br>获取Java堆栈的方法还可以用在卡顿时，因为使用fork进程，所以可以做到完全不卡主进程。这块我们在后面会详细的去讲。","like_count":98,"discussions":[{"author":{"id":1329847,"avatar":"https://static001.geekbang.org/account/avatar/00/14/4a/b7/a3468e61.jpg","nickname":"OF","note":"","ucode":"1087485CFAB7A1","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":235149,"discussion_content":"我洗吧，留言还得审核才能放出来，估计作者早不管这个了。单独在这里重新留一下关键信息把，关于sample里FinalizeWatchdogDaemon线程发生TimeoutException，滴滴团队分享了一个更好的规避方案：详情看这里：https://www.infoq.cn/article/NxlcJikbFaoTeACHxMQk ，是滴，目前没有人能解决这个问题，都是规避，Android的坑果然深。","likes_number":8,"is_delete":false,"is_hidden":false,"ctime":1587023982,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1634890,"avatar":"https://static001.geekbang.org/account/avatar/00/18/f2/4a/613d8ea7.jpg","nickname":"Zak","note":"","ucode":"40EF2AD4928530","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":45531,"discussion_content":"老师你好，文中提到的 hook 实现是怎么样的？当我们找到了类似的问题解决时机，是直接仿照源码进行处理就算是 hook 吗？那 hook so 文件又是什么概念呢？","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1573046375,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":46504,"user_name":"小龙虾","can_delete":false,"product_type":"c1","uid":1330947,"ip_address":"","ucode":"2D2FC1AC2F20E3","user_header":"https://static001.geekbang.org/account/avatar/00/14/4f/03/2f3e4069.jpg","comment_is_top":false,"comment_ctime":1543931050,"is_pvip":false,"replies":[{"id":"16635","content":"不会的，移动开发已经十年了，已经不是单独写个界面就可以了。应用层开发当你深入到后面，这些知识都是必须的。当你知道了更多，学习的更多深入的时候，你才能做一些别人做不了的东西。","user_name":"作者回复","user_name_real":"张绍文","uid":"1009577","ctime":1543935520,"ip_address":"","comment_id":46504,"utype":1}],"discussion_count":1,"race_medal":0,"score":"306486609066","product_id":100021101,"comment_content":"老师可能还不了解学生的水平，读者都是做应用层程序的你讲这么深入恐怕没什么效果","like_count":72,"discussions":[{"author":{"id":1009577,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/67/a9/e251ace7.jpg","nickname":"张绍文","note":"","ucode":"94B49E5F80BFDE","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":431474,"discussion_content":"不会的，移动开发已经十年了，已经不是单独写个界面就可以了。应用层开发当你深入到后面，这些知识都是必须的。当你知道了更多，学习的更多深入的时候，你才能做一些别人做不了的东西。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1543935520,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":47658,"user_name":"Stefan","can_delete":false,"product_type":"c1","uid":1331264,"ip_address":"","ucode":"68ADFEEA3A5C18","user_header":"https://static001.geekbang.org/account/avatar/00/14/50/40/292d0a3f.jpg","comment_is_top":false,"comment_ctime":1544173535,"is_pvip":false,"discussion_count":2,"race_medal":0,"score":"121803257823","product_id":100021101,"comment_content":"回答github上的问题：<br>通过对比Android 6.0前后的源码发现，FinalizerWatchdogDaemon调用的是父类Deamon中的stop方法，区别在于：<br>&#47;&#47;6.0之前<br>...<br>threadToStop.interrupt();<br>...<br>&#47;&#47;&gt;=6.0<br>...<br>interrupt(threadToStop);<br>...<br>public synchronized void interrupt(Thread thread) {<br>    if (thread == null) {<br>        throw new IllegalStateException(&quot;not running&quot;);<br>    }<br>    thread.interrupt();<br>}<br>...<br>可以发现区别在于6.0之前调用threadToStop的interrupt方法是没有加锁的，所以可能会有线程同步的问题。<br>PS：推荐一个在线看源码的网站，包括1.6到9.0全部的源码：http:&#47;&#47;androidxref.com&#47;","like_count":28,"discussions":[{"author":{"id":1752606,"avatar":"https://static001.geekbang.org/account/avatar/00/1a/be/1e/da44cb2a.jpg","nickname":"宅小野","note":"","ucode":"BAC8E2BD98E698","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":69349,"discussion_content":"在Android 6.0之前，这算是源代码中的一个bug吗？","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1575282314,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1016184,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/81/78/abb7bfe3.jpg","nickname":"Gavin","note":"","ucode":"E9AFFEA803B023","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":46024,"discussion_content":"发现少了个异常捕获\n catch (OutOfMemoryError ignored) {\n119                    // An OOME may be thrown if allocating the InterruptedException failed.\n120                }","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1573112309,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":46930,"user_name":"Find","can_delete":false,"product_type":"c1","uid":1329967,"ip_address":"","ucode":"3815471A854AC9","user_header":"https://static001.geekbang.org/account/avatar/00/14/4b/2f/ea949f1f.jpg","comment_is_top":false,"comment_ctime":1544003767,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"74558447799","product_id":100021101,"comment_content":"上一篇运行出啦后还没有达到最终效果，下一篇都出来了，Android开发5年都是应用层开发，突然一下这么深入感觉很难适应，真心建议由浅到深讲解下，针对例子可以讲解一下。","like_count":17},{"had_liked":false,"id":46345,"user_name":"arvinljw","can_delete":false,"product_type":"c1","uid":1328911,"ip_address":"","ucode":"1335400DE39E61","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTIJUpGziaiaJaMHbCFnM9iboQdu7aqlaB2zA3ClxcNrVOTkfFRygFBdYwr4nzAGjjiczBmNflT4YSM8Yg/132","comment_is_top":false,"comment_ctime":1543904990,"is_pvip":false,"replies":[{"id":"16634","content":"坚持，可能跟着学习完整个课程再回头看会有不一样的感觉","user_name":"作者回复","user_name_real":"张绍文","uid":"1009577","ctime":1543935209,"ip_address":"","comment_id":46345,"utype":1}],"discussion_count":1,"race_medal":0,"score":"74558349022","product_id":100021101,"comment_content":"张老师好，我想问一下，感觉学习这些课有点理解不了，不知道为什么，应该怎么入手呢？","like_count":17,"discussions":[{"author":{"id":1009577,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/67/a9/e251ace7.jpg","nickname":"张绍文","note":"","ucode":"94B49E5F80BFDE","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":431428,"discussion_content":"坚持，可能跟着学习完整个课程再回头看会有不一样的感觉","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1543935209,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":55004,"user_name":"尛鬼","can_delete":false,"product_type":"c1","uid":1264344,"ip_address":"","ucode":"D68CA7345C9726","user_header":"https://static001.geekbang.org/account/avatar/00/13/4a/d8/b43734f8.jpg","comment_is_top":false,"comment_ctime":1545999356,"is_pvip":false,"discussion_count":1,"race_medal":0,"score":"65970508796","product_id":100021101,"comment_content":"文哥，对于大多在应用层上开发的程序员来说，涉及到native的代码难度高了好多，其实也不是我们不想学，很多时候是因为没有这样的环境锻炼我们，再多的自学，没有一个真正项目的磨炼，这些知识很难巩固和加深，缺少关键性的实战经验，我自学过C&#47;C++好几个月，但是没有任何一个项目可以让我实践学习，没有一个项目告诉我的代码是否有问题，是否有性能问题等等，就是因为这样，让我不知道该如何学习，该向哪个方向进阶，文哥，可以指导一下么？","like_count":15,"discussions":[{"author":{"id":1054877,"avatar":"https://static001.geekbang.org/account/avatar/00/10/18/9d/23dd0017.jpg","nickname":"屈超","note":"","ucode":"98025A827041A1","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":57170,"discussion_content":"Android学习NDK细分路线：音视频、图像处理（Opengl、valkun）、OpenCv（计算机视觉）、热修复、增量更新、gif层高效实现","likes_number":4,"is_delete":false,"is_hidden":false,"ctime":1574578505,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":47308,"user_name":"mzh","can_delete":false,"product_type":"c1","uid":1121054,"ip_address":"","ucode":"DE92F5CE010225","user_header":"https://static001.geekbang.org/account/avatar/00/11/1b/1e/1ab1347f.jpg","comment_is_top":false,"comment_ctime":1544104753,"is_pvip":false,"replies":[{"id":"16874","content":"那个问题很经典，解决方法就是反射将输入法的两个view置空","user_name":"作者回复","user_name_real":"张绍文","uid":"1009577","ctime":1544107066,"ip_address":"","comment_id":47308,"utype":1}],"discussion_count":1,"race_medal":0,"score":"57378679601","product_id":100021101,"comment_content":"之前遇到过一个输入法的内存泄露，但是自己完全没有调用过输入法，后面查了一下   网上说是系统的一个bug    张老师  这种应该怎么解决呢？","like_count":13,"discussions":[{"author":{"id":1009577,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/67/a9/e251ace7.jpg","nickname":"张绍文","note":"","ucode":"94B49E5F80BFDE","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":431730,"discussion_content":"那个问题很经典，解决方法就是反射将输入法的两个view置空","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1544107066,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":46173,"user_name":"HI","can_delete":false,"product_type":"c1","uid":1238921,"ip_address":"","ucode":"C65218113883E6","user_header":"https://static001.geekbang.org/account/avatar/00/12/e7/89/207cc841.jpg","comment_is_top":false,"comment_ctime":1543880806,"is_pvip":true,"discussion_count":0,"race_medal":0,"score":"57378455654","product_id":100021101,"comment_content":"貌似目前NDK中对于错误的检查还不够完善，比如对于函数的返回值，写了一个函数本身要写返回值，后面忘记写了发现IDE没有提示，并且能编译通过，但是在运行的时候会出现崩溃，而且崩溃的信息非常少，貌似就记得最后一行signal 6 还是 signal -1，当时的我看到这个是非常蒙逼的，大量的回退代码，添加日志，勉强找到，要是早点知道signal ，拿着对应的code对比，可能没那么痛苦","like_count":13},{"had_liked":false,"id":207204,"user_name":"OF","can_delete":false,"product_type":"c1","uid":1329847,"ip_address":"","ucode":"1087485CFAB7A1","user_header":"https://static001.geekbang.org/account/avatar/00/14/4a/b7/a3468e61.jpg","comment_is_top":false,"comment_ctime":1587023771,"is_pvip":false,"discussion_count":1,"race_medal":0,"score":"40241729435","product_id":100021101,"comment_content":"关于sample里FinalizerWatchdogDaemon线程发生TimeoutException的规避之路，看到一篇滴滴的心路历程，分享一下：https:&#47;&#47;www.infoq.cn&#47;article&#47;NxlcJikbFaoTeACHxMQk。<br>时隔两年不知道谁还会回来翻这篇？恭喜你，这条评论对你有益。😄","like_count":10,"discussions":[{"author":{"id":1089963,"avatar":"https://static001.geekbang.org/account/avatar/00/10/a1/ab/6b794781.jpg","nickname":"Jankin","note":"","ucode":"7F3922E645D8E2","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":323350,"discussion_content":"我回来了，sample的例子对Android9.0 无效","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1604921374,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":46849,"user_name":"O_o","can_delete":false,"product_type":"c1","uid":1253029,"ip_address":"","ucode":"D3781909854B7D","user_header":"https://static001.geekbang.org/account/avatar/00/13/1e/a5/c0ab907d.jpg","comment_is_top":false,"comment_ctime":1543990845,"is_pvip":false,"replies":[{"id":"16736","content":"一脸懵逼没有关系，我们可以跟着文中提到的一些文件，去学习到linux的一些基础知识。这些文件记录了一些什么样的内容，对排查问题有什么帮助，怎么在应用获取它们。<br><br>后面的内容会从浅入深，我们学习完整个专栏再回头看应该有不同的感觉","user_name":"作者回复","user_name_real":"张绍文","uid":"1009577","ctime":1544008924,"ip_address":"","comment_id":46849,"utype":1}],"discussion_count":1,"race_medal":0,"score":"40198696509","product_id":100021101,"comment_content":"感觉可以由浅入深的讲，这一脚下去有点深呀，可能很多人3，4年经验，没做过这方面，学完了这一章一脸蒙圈，也没太大帮助呀","like_count":9,"discussions":[{"author":{"id":1009577,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/67/a9/e251ace7.jpg","nickname":"张绍文","note":"","ucode":"94B49E5F80BFDE","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":431569,"discussion_content":"一脸懵逼没有关系，我们可以跟着文中提到的一些文件，去学习到linux的一些基础知识。这些文件记录了一些什么样的内容，对排查问题有什么帮助，怎么在应用获取它们。\n\n后面的内容会从浅入深，我们学习完整个专栏再回头看应该有不同的感觉","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1544008924,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":46312,"user_name":"Kenny","can_delete":false,"product_type":"c1","uid":1234061,"ip_address":"","ucode":"E57D67DCE27967","user_header":"https://static001.geekbang.org/account/avatar/00/12/d4/8d/a3fd8957.jpg","comment_is_top":false,"comment_ctime":1543898231,"is_pvip":false,"replies":[{"id":"16570","content":"Hook的时候，前几个版本一般会把hook失败的机型 rom 堆栈传上来做进一步分析。top的机型也会保证可以兼容","user_name":"作者回复","user_name_real":"张绍文","uid":"1009577","ctime":1543903200,"ip_address":"","comment_id":46312,"utype":1}],"discussion_count":1,"race_medal":0,"score":"27313702007","product_id":100021101,"comment_content":"张老师，看到你解决一些棘手的崩溃，会去翻看源码，然后对比版本的差异，然后寻找hook点去解决，这个要考虑机型适配吧？毕竟国产机型rom差异化严重。","like_count":6,"discussions":[{"author":{"id":1009577,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/67/a9/e251ace7.jpg","nickname":"张绍文","note":"","ucode":"94B49E5F80BFDE","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":431423,"discussion_content":"Hook的时候，前几个版本一般会把hook失败的机型 rom 堆栈传上来做进一步分析。top的机型也会保证可以兼容","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1543903200,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":139247,"user_name":"Geek_f342a0","can_delete":false,"product_type":"c1","uid":1657339,"ip_address":"","ucode":"30DA7380CC3355","user_header":"","comment_is_top":false,"comment_ctime":1570592160,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"18750461344","product_id":100021101,"comment_content":"崩溃主要分为java层crash，c&#47;c++层crash，anr导致的crash<br>1.java层crash：可以通过手机logcat日志分析，也可以继承UncaughtExceptionHandler，并通过Thread.setDefaultUncaughtExceptionHandler来处理系统的异常，基本能收集到所有java层的crash的问题。<br>2.c&#47;c++层的crash：通过logcat日志进行分析，也可以通过breakpad的来收集dump，分析dump文件，如果是内存堆或者栈出问题，可能收集不了任何堆栈，这要通过别的手段进行分析，通过分析代码，或者增加一些内存分配的判断，或者增加日志来解决。<br>3.anr的crash：通过logcat日志分析，anr的日志也可以通过&#47;data&#47;anr&#47;traces.txt进行分析，分析整个的堆栈，同时也要检查代码有没有处理耗时的操作，比如在主线程，或者广播处理或者Service处理是否会超时了。","like_count":5},{"had_liked":false,"id":68280,"user_name":"久九","can_delete":false,"product_type":"c1","uid":1328885,"ip_address":"","ucode":"ED9FE1E66B164B","user_header":"https://static001.geekbang.org/account/avatar/00/14/46/f5/9612c4d3.jpg","comment_is_top":false,"comment_ctime":1550476716,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"18730345900","product_id":100021101,"comment_content":"1.通过Bugly查看崩溃日志，确定问题所在，google或者自行调试解决问题。2.通过sample的练习，梳理了反射和代理相关的知识，学会了通过寻找Hook点来处理Bug的这种思维（以前完全没有这方面的概念，汗颜！！）","like_count":4},{"had_liked":false,"id":51477,"user_name":"山鬼","can_delete":false,"product_type":"c1","uid":1344110,"ip_address":"","ucode":"8A6AA48BB8D510","user_header":"https://static001.geekbang.org/account/avatar/00/14/82/6e/f552d036.jpg","comment_is_top":false,"comment_ctime":1545187634,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"18725056818","product_id":100021101,"comment_content":"感觉大量的问题，在被定位出来以后，解决办法就是去读代码就好了，包括课后习题的例子，读完Daemons这个类的源代码，解决方法就出来了。当然也不止老师的实现这一种方案，还有其他的点来绕过这个机制。个人觉得这个bug的修复重点不在怎么绕过，而是绕过之后到底会不会产生其他影响。","like_count":5},{"had_liked":false,"id":49820,"user_name":"董晓航","can_delete":false,"product_type":"c1","uid":1335115,"ip_address":"","ucode":"577973133E5489","user_header":"https://static001.geekbang.org/account/avatar/00/14/5f/4b/48cd13e5.jpg","comment_is_top":false,"comment_ctime":1544775515,"is_pvip":false,"discussion_count":1,"race_medal":0,"score":"18724644699","product_id":100021101,"comment_content":"能给一下toast动态代理TN的demo吗？大神","like_count":4,"discussions":[{"author":{"id":1383272,"avatar":"https://static001.geekbang.org/account/avatar/00/15/1b/68/24831c21.jpg","nickname":"Hunk...","note":"","ucode":"887898BD408419","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":251006,"discussion_content":"// 反射 Toast 中的字段\n        try {\n            // 获取 mTN 字段对象\n            Field mTNField = Toast.class.getDeclaredField(&#34;mTN&#34;);\n            mTNField.setAccessible(true);\n            Object mTN = mTNField.get(this);\n\n            // 获取 mTN 中的 mHandler 字段对象\n            Field mHandlerField = mTNField.getType().getDeclaredField(&#34;mHandler&#34;);\n            mHandlerField.setAccessible(true);\n            Handler mHandler = (Handler) mHandlerField.get(mTN);\n\n            // 偷梁换柱\n            mHandlerField.set(mTN, new SafeHandler(mHandler));\n\n        } catch (Exception ignored) {}","likes_number":5,"is_delete":false,"is_hidden":false,"ctime":1588057765,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":49973,"user_name":"信仰年轻","can_delete":false,"product_type":"c1","uid":1329011,"ip_address":"","ucode":"B2BD881D25FCDD","user_header":"https://static001.geekbang.org/account/avatar/00/14/47/73/63a3cb41.jpg","comment_is_top":false,"comment_ctime":1544803383,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"14429705271","product_id":100021101,"comment_content":"发现一个好工具  腾讯GT","like_count":3},{"had_liked":false,"id":47670,"user_name":"、、cryAllen","can_delete":false,"product_type":"c1","uid":1017204,"ip_address":"","ucode":"50032F6E2DDB4B","user_header":"https://static001.geekbang.org/account/avatar/00/0f/85/74/e70862a2.jpg","comment_is_top":false,"comment_ctime":1544175099,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"14429076987","product_id":100021101,"comment_content":"由于从事的工作内容涉及到底层Framwork比较多，目前日常工作中也是经常需要分析BUG，那么分析的素材自然就是log文件，整个Android 系统真的是很好旁观者，我们一切的操作行为基本都是有记录的。如果碰到崩溃的问题，我自己基本解决思路则是先在全局log中搜索是否有Die关键字，然后看进程号，进程号是否有重启过，然后去system_app_crash@1451577628472.txt看相关错误，很多都是java.lang.RuntimeException异常居多。","like_count":4},{"had_liked":false,"id":46308,"user_name":"jason","can_delete":false,"product_type":"c1","uid":1333101,"ip_address":"","ucode":"972422CCDA9366","user_header":"https://static001.geekbang.org/account/avatar/00/14/57/6d/07794230.jpg","comment_is_top":false,"comment_ctime":1543896326,"is_pvip":false,"replies":[{"id":"16739","content":"Stop的时候有一定概率导致即使没有超时也会报timeoutexception","user_name":"作者回复","user_name_real":"张绍文","uid":"1009577","ctime":1544009157,"ip_address":"","comment_id":46308,"utype":1}],"discussion_count":1,"race_medal":0,"score":"14428798214","product_id":100021101,"comment_content":"TimeoutException 直接调用stop存在什么安全问题？请大神指教一二。","like_count":2,"discussions":[{"author":{"id":1009577,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/67/a9/e251ace7.jpg","nickname":"张绍文","note":"","ucode":"94B49E5F80BFDE","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":431421,"discussion_content":"Stop的时候有一定概率导致即使没有超时也会报timeoutexception","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1544009157,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":215602,"user_name":"jerry","can_delete":false,"product_type":"c1","uid":1032859,"ip_address":"","ucode":"525F24CD2FBB0F","user_header":"https://static001.geekbang.org/account/avatar/00/0f/c2/9b/75ba46ad.jpg","comment_is_top":false,"comment_ctime":1589029226,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"10178963818","product_id":100021101,"comment_content":"native堆栈分析有没有套路呀","like_count":2},{"had_liked":false,"id":46896,"user_name":"Z","can_delete":false,"product_type":"c1","uid":1283133,"ip_address":"","ucode":"7DD99089406486","user_header":"https://static001.geekbang.org/account/avatar/00/13/94/3d/5f1fa114.jpg","comment_is_top":false,"comment_ctime":1543998455,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"10133933047","product_id":100021101,"comment_content":"学习了，最近也在学习linux 内核，很强大，作为一个一年的菜鸟受益匪浅，推荐大伙可以看看","like_count":2},{"had_liked":false,"id":46372,"user_name":"双子座的马克思","can_delete":false,"product_type":"c1","uid":1150663,"ip_address":"","ucode":"4D43FB644E9870","user_header":"https://static001.geekbang.org/account/avatar/00/11/8e/c7/6d08d502.jpg","comment_is_top":false,"comment_ctime":1543909927,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"10133844519","product_id":100021101,"comment_content":"学习笔记：<br>看门狗 WatchDog 的作用是监控重要服务的运行状态，当重要服务停止时，发生 Timeout 异常崩溃，WatchDog 负责将应用重启。而当关闭 WatchDog（执行stop（）方法）后，当重要服务停止时，也不会发生 Timeout 异常，是一种通过非正常手段防止异常发生的方法。","like_count":2},{"had_liked":false,"id":161196,"user_name":"满大大","can_delete":false,"product_type":"c1","uid":1170022,"ip_address":"","ucode":"06DE739A6CE9EF","user_header":"https://static001.geekbang.org/account/avatar/00/11/da/66/5858322e.jpg","comment_is_top":false,"comment_ctime":1576142396,"is_pvip":true,"discussion_count":0,"race_medal":0,"score":"5871109692","product_id":100021101,"comment_content":" Toast 里面有一个变量叫 mTN，它的类型为 handler 我看的代码是这样的：private static class TN extends ITransientNotification.Stub，TN不是一个handle,只是它有一个成员变量mHandler,应该是通过反射hook它，老师不知道我这样理解对不？","like_count":1},{"had_liked":false,"id":100890,"user_name":"Wilson","can_delete":false,"product_type":"c1","uid":1007140,"ip_address":"","ucode":"3ADBE962C67B8D","user_header":"https://static001.geekbang.org/account/avatar/00/0f/5e/24/040855d3.jpg","comment_is_top":false,"comment_ctime":1559664820,"is_pvip":false,"replies":[{"id":"62039","content":"可以把线程和句柄 dump出来，看看是哪里出了问题","user_name":"作者回复","user_name_real":"张绍文","uid":"1009577","ctime":1576678609,"ip_address":"","comment_id":100890,"utype":1}],"discussion_count":2,"race_medal":0,"score":"5854632116","product_id":100021101,"comment_content":"pthread_create (1040KB stack) failed: Out of memory老师这个有没有好的解决方法？","like_count":1,"discussions":[{"author":{"id":1009577,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/67/a9/e251ace7.jpg","nickname":"张绍文","note":"","ucode":"94B49E5F80BFDE","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":452721,"discussion_content":"可以把线程和句柄 dump出来，看看是哪里出了问题","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1576678609,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1329847,"avatar":"https://static001.geekbang.org/account/avatar/00/14/4a/b7/a3468e61.jpg","nickname":"OF","note":"","ucode":"1087485CFAB7A1","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":233541,"discussion_content":"这个问题一般是当前进程里创建的线程太多了，应该是栈里的OOM，仅供参考。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1586929895,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":76211,"user_name":"Geek_Yasin28","can_delete":false,"product_type":"c1","uid":1446613,"ip_address":"","ucode":"0407120AC199C2","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/jfwxv44zewuyr7WEsOvTowFicSIFBwHJnUQzibhUuYHSIibcAAicUzehWia7y5uUiaEG9A1DgltOKsL6IMwSZIzRCgTQ/132","comment_is_top":false,"comment_ctime":1552550836,"is_pvip":false,"replies":[{"id":"27777","content":"一般情况下直接jni调用也是可以拿到的，除了一些特殊情况","user_name":"作者回复","user_name_real":"张绍文","uid":"1009577","ctime":1552562578,"ip_address":"","comment_id":76211,"utype":1}],"discussion_count":1,"race_medal":0,"score":"5847518132","product_id":100021101,"comment_content":"请问有没有native崩溃后成功获取java堆栈的例子， 是只能用hook libart.so实现吗？<br>这边参考实现了native崩溃获取， 但是在native崩溃时， 信号处理函数去唤醒之前等待的线程，去回调java或者抛出异常给java处理都没有反应。","like_count":1,"discussions":[{"author":{"id":1009577,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/67/a9/e251ace7.jpg","nickname":"张绍文","note":"","ucode":"94B49E5F80BFDE","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":443216,"discussion_content":"一般情况下直接jni调用也是可以拿到的，除了一些特殊情况","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1552562578,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":73983,"user_name":"less","can_delete":false,"product_type":"c1","uid":1331439,"ip_address":"","ucode":"FCD47E9C93D598","user_header":"https://static001.geekbang.org/account/avatar/00/14/50/ef/70bfc099.jpg","comment_is_top":false,"comment_ctime":1552052876,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"5847020172","product_id":100021101,"comment_content":"第三次听了.受益良多.这次研究下simple","like_count":2},{"had_liked":false,"id":71840,"user_name":"大碗馄饨","can_delete":false,"product_type":"c1","uid":1331579,"ip_address":"","ucode":"65F7CEDE726B27","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/2yib09G16Eeqty0ibEeLEQPZvY6FFk1sN1CpAOfNrqF2R5B1ZCGmw14AftD5VyJgnIV63ZyERoY3qSM08VPsaJUw/132","comment_is_top":false,"comment_ctime":1551449230,"is_pvip":false,"replies":[{"id":"26027","content":"的确用的是偏移的方法，但是我们这里是通过fork进程来做的，就算崩溃也不会影响主进程。而且我们的框架会做指令识别，以测试数据来看，大部分都可以成功拿到堆栈。具体失败率的话，我可以要去翻一下报表","user_name":"作者回复","user_name_real":"张绍文","uid":"1009577","ctime":1551458855,"ip_address":"","comment_id":71840,"utype":1}],"discussion_count":1,"race_medal":0,"score":"5846416526","product_id":100021101,"comment_content":"绍文大神，有幸拜读大作，有个问题请教：<br>文中提到用ThreadList::ForEach遍历art线程，首先要拿到ThreadList指针，我查了符号表，GetThreadList并未导出，如何获取呢？如果用thread_list_在Runtime类中的偏移获取，会有兼容性问题，文中所说的黑科技，是否有更好的办法？<br><br>前一阵在研究ANR监控，发现可以通过拦截SIGQUIT信号监听ANR，调用Runtime::DumpForSigQuit获取trace文件的信息，再通过tgkill发送SIGQUIT给Signal Catcher线程。线上观察了一段时间，基本没有兼容性问题，除了Android 7及以下谷歌本身的bug偶尔会造成崩溃: b&#47;36445592 Don&#39;t use pthread_getschedparam since pthread may have exited.<br><br>这个方法在Android 5会有问题，需要手动暂停线程并做锁状态检查，要用到几个未导出符号(其中ThreadList的resumeAll&#47;suspendAll通过ScopedSuspendAll解决了)，请问有什么好办法么？<br><br>盼复","like_count":1,"discussions":[{"author":{"id":1009577,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/67/a9/e251ace7.jpg","nickname":"张绍文","note":"","ucode":"94B49E5F80BFDE","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":441353,"discussion_content":"的确用的是偏移的方法，但是我们这里是通过fork进程来做的，就算崩溃也不会影响主进程。而且我们的框架会做指令识别，以测试数据来看，大部分都可以成功拿到堆栈。具体失败率的话，我可以要去翻一下报表","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1551458855,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":56558,"user_name":"希夷","can_delete":false,"product_type":"c1","uid":1028673,"ip_address":"","ucode":"2E3E86AC7A19EC","user_header":"https://static001.geekbang.org/account/avatar/00/0f/b2/41/d9dcc7ef.jpg","comment_is_top":false,"comment_ctime":1546489521,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"5841456817","product_id":100021101,"comment_content":"跑完例子了,mark一下","like_count":1},{"had_liked":false,"id":53690,"user_name":"ucode","can_delete":false,"product_type":"c1","uid":1305672,"ip_address":"","ucode":"3DD5E0B8BA21F2","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/5gNyWibZIFE8OAr5IIdBiccK3mvHbqs9PjFDzcANPG1zjrnnB8sxiaUF6IAT5icPEyWUYfcibbQ2bPrWdHkNEYflUNw/132","comment_is_top":false,"comment_ctime":1545711738,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"5840679034","product_id":100021101,"comment_content":"反射方法不安全，保证不了厂商不修改Api。某些方法不仅要做版本适配可能还需要做手机厂商适配。","like_count":1},{"had_liked":false,"id":53189,"user_name":"OzoraTsubasa","can_delete":false,"product_type":"c1","uid":1298651,"ip_address":"","ucode":"A29805845F58BA","user_header":"https://static001.geekbang.org/account/avatar/00/13/d0/db/8b8173d0.jpg","comment_is_top":false,"comment_ctime":1545614615,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"5840581911","product_id":100021101,"comment_content":"先出发TimeOut按钮之后，再次出发Kill WatchDog按钮之后会出现卡死，我看点击Kill WatchDog按钮只是执行了thread=null的操作，只是isRuning这个方法作用了，还木有执行到catch中的stop方法，为什么会出现卡死状态并等到finalize方法执行完毕之后才恢复，想不明白，老师能给说一下嘛。","like_count":1},{"had_liked":false,"id":50282,"user_name":"志超","can_delete":false,"product_type":"c1","uid":1036048,"ip_address":"","ucode":"4043753B229784","user_header":"https://static001.geekbang.org/account/avatar/00/0f/cf/10/af87006f.jpg","comment_is_top":false,"comment_ctime":1544942966,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"5839910262","product_id":100021101,"comment_content":"之前遇到 JobService 的一个 bug，现在还没解开。对比一下，自己的调用方式可能有问题。","like_count":1},{"had_liked":false,"id":49797,"user_name":"从前有只🐻","can_delete":false,"product_type":"c1","uid":1110417,"ip_address":"","ucode":"F8C9805E00A746","user_header":"https://static001.geekbang.org/account/avatar/00/10/f1/91/4bbc7f73.jpg","comment_is_top":false,"comment_ctime":1544771281,"is_pvip":false,"discussion_count":1,"race_medal":0,"score":"5839738577","product_id":100021101,"comment_content":"老师，我们有一个很大量的WindowManager$BadTokenException的异常，发生在ViewRootImpl里，但不是toast和dialog引起的，冒似是启动activity 直接崩溃的，这种是否也可以用hook的方式去解决？还是有什么别的方案","like_count":1,"discussions":[{"author":{"id":1920102,"avatar":"https://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTLrbyvyBdlQfKzkUiblaQVKXOqNVibXYp8SMZWLgyeicicoYm7IicvJRxJ7ZHG9czcNaqo1HiclonNRP7OA/132","nickname":"Geek_850e4f","note":"","ucode":"29B044F2D932ED","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":318744,"discussion_content":"lancet 和aspectj","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1603842847,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":48152,"user_name":"qh","can_delete":false,"product_type":"c1","uid":1137959,"ip_address":"","ucode":"0C0A3C32B061CE","user_header":"https://static001.geekbang.org/account/avatar/00/11/5d/27/a8fb15bf.jpg","comment_is_top":false,"comment_ctime":1544370671,"is_pvip":false,"replies":[{"id":"17210","content":"对，问题点就在那里，可能导致即使没有超时也会timeout。但是还是要看看另外一个地方，本地可以构造的","user_name":"作者回复","user_name_real":"张绍文","uid":"1009577","ctime":1544408362,"ip_address":"","comment_id":48152,"utype":1}],"discussion_count":1,"race_medal":0,"score":"5839337967","product_id":100021101,"comment_content":"目前我观察源码，如果执行到这个方法时boolean finalized = waitForFinalization(object);那么就算调用stop方法也会抛出异常，但是在模拟器上验证时，先点击触发TimeOut 然后看到finalize start的日志打印后，再去点击调用stop方法，按理说这个时候应该是已经进入了waitForFinalization了，但是却没有触发TimeOut异常，而且试了很多次。但是这个时候调用stop后会阻塞。还是没有找出线程不安全的点在哪里。所查看的源码是在Android xref上4.4_r1 &#47;libcore&#47;libdvm&#47;src&#47;main&#47;java&#47;java&#47;lang&#47;Daemons.java,有没有什么提示？","like_count":1,"discussions":[{"author":{"id":1009577,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/67/a9/e251ace7.jpg","nickname":"张绍文","note":"","ucode":"94B49E5F80BFDE","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":432054,"discussion_content":"对，问题点就在那里，可能导致即使没有超时也会timeout。但是还是要看看另外一个地方，本地可以构造的","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1544408362,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":48123,"user_name":"我的心情在荡漾","can_delete":false,"product_type":"c1","uid":1328935,"ip_address":"","ucode":"A6066305E8BF1F","user_header":"https://static001.geekbang.org/account/avatar/00/14/47/27/448b5262.jpg","comment_is_top":false,"comment_ctime":1544363330,"is_pvip":false,"replies":[{"id":"17201","content":"后面会给出部分推荐书单","user_name":"作者回复","user_name_real":"张绍文","uid":"1009577","ctime":1544408248,"ip_address":"","comment_id":48123,"utype":1}],"discussion_count":1,"race_medal":0,"score":"5839330626","product_id":100021101,"comment_content":"第一次接触偏底层的是有点蒙蒙的，相信以后适应就会好了，大佬能不能介绍一下，更好的理解底层一些机制需要补哪些知识或者看那些书籍？","like_count":1,"discussions":[{"author":{"id":1009577,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/67/a9/e251ace7.jpg","nickname":"张绍文","note":"","ucode":"94B49E5F80BFDE","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":432036,"discussion_content":"后面会给出部分推荐书单","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1544408248,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":47987,"user_name":"华尔街之狼","can_delete":false,"product_type":"c1","uid":1343016,"ip_address":"","ucode":"0956AFFE1103AC","user_header":"https://static001.geekbang.org/account/avatar/00/14/7e/28/cb5c2e3b.jpg","comment_is_top":false,"comment_ctime":1544280167,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"5839247463","product_id":100021101,"comment_content":"平时都是跟业务层打交道，很少接触底层，好多都没有用过","like_count":1},{"had_liked":false,"id":47137,"user_name":"CathyChen","can_delete":false,"product_type":"c1","uid":1329694,"ip_address":"","ucode":"DCCCA97188B494","user_header":"https://static001.geekbang.org/account/avatar/00/14/4a/1e/2cbc8d78.jpg","comment_is_top":false,"comment_ctime":1544061805,"is_pvip":false,"discussion_count":1,"race_medal":0,"score":"5839029101","product_id":100021101,"comment_content":"java.lang.RuntimeException:createContext failed:EGL_BAD_ALLOC这个崩溃不知道这里有没有朋友遇到过，请指教一下😊出错位置是GLSurfaceView#throwEglException","like_count":1,"discussions":[{"author":{"id":1919666,"avatar":"","nickname":"李绍开","note":"","ucode":"9CD65902A50536","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":213624,"discussion_content":"看看动画是不是不节制","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1585109817,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":46588,"user_name":"东方","can_delete":false,"product_type":"c1","uid":1329945,"ip_address":"","ucode":"50FDAA2D95170C","user_header":"https://static001.geekbang.org/account/avatar/00/14/4b/19/6f037647.jpg","comment_is_top":false,"comment_ctime":1543940948,"is_pvip":false,"replies":[{"id":"16687","content":"为什么一定会泄露？这块要看你具体的实现方式","user_name":"作者回复","user_name_real":"张绍文","uid":"1009577","ctime":1543979399,"ip_address":"","comment_id":46588,"utype":1}],"discussion_count":1,"race_medal":0,"score":"5838908244","product_id":100021101,"comment_content":"张老师，Toast  Hook mTN ，会有view泄露啊。","like_count":1,"discussions":[{"author":{"id":1009577,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/67/a9/e251ace7.jpg","nickname":"张绍文","note":"","ucode":"94B49E5F80BFDE","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":431489,"discussion_content":"为什么一定会泄露？这块要看你具体的实现方式","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1543979399,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":346792,"user_name":"穿靴子的喵先生","can_delete":false,"product_type":"c1","uid":1175208,"ip_address":"","ucode":"D4E0F03F8CDE29","user_header":"https://static001.geekbang.org/account/avatar/00/11/ee/a8/9be86cdc.jpg","comment_is_top":false,"comment_ctime":1653441158,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1653441158","product_id":100021101,"comment_content":"说的很好，可惜不具备实操性~😂","like_count":0},{"had_liked":false,"id":342220,"user_name":"Geek_e3438f","can_delete":false,"product_type":"c1","uid":2763718,"ip_address":"","ucode":"FFBD088CC53333","user_header":"","comment_is_top":false,"comment_ctime":1650108837,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1650108837","product_id":100021101,"comment_content":"张老师，googlePlay崩溃上报的机制是怎么样的？它并像其他第三方sdk需要手动集成，它是通过什么方式收集崩溃上报的？","like_count":0},{"had_liked":false,"id":323001,"user_name":"roie","can_delete":false,"product_type":"c1","uid":1371983,"ip_address":"","ucode":"0CC9598364820A","user_header":"https://static001.geekbang.org/account/avatar/00/14/ef/4f/8b7e1f1e.jpg","comment_is_top":false,"comment_ctime":1637683083,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1637683083","product_id":100021101,"comment_content":"文哥，这块感觉太深了，内容多数都是没有接触的，虽然你在里面有列举出来，但还是不知道如何下手，希望文哥能稍微备注下，那些是需要查资料的，怎么和现在学的串联起来学！","like_count":0},{"had_liked":false,"id":321614,"user_name":"花花young","can_delete":false,"product_type":"c1","uid":1338584,"ip_address":"","ucode":"95AD30303C2B21","user_header":"https://static001.geekbang.org/account/avatar/00/14/6c/d8/68fec932.jpg","comment_is_top":false,"comment_ctime":1636966461,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1636966461","product_id":100021101,"comment_content":"比如有的黑科技对保活进程频率没有做限制，可能会导致系统卡死   这句话什么意思，有知道的吗","like_count":0},{"had_liked":false,"id":319820,"user_name":"顺","can_delete":false,"product_type":"c1","uid":1242973,"ip_address":"","ucode":"20230CA126824A","user_header":"https://static001.geekbang.org/account/avatar/00/12/f7/5d/818ec2a7.jpg","comment_is_top":false,"comment_ctime":1635952847,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1635952847","product_id":100021101,"comment_content":"如何分析system server或系统资源竞争的anr问题？能详细说一下步骤以及关键路径吗","like_count":0},{"had_liked":false,"id":303167,"user_name":"หมีแพนด้า","can_delete":false,"product_type":"c1","uid":2698459,"ip_address":"","ucode":"4AFEDE760E2C3C","user_header":"https://static001.geekbang.org/account/avatar/00/29/2c/db/a677ffb8.jpg","comment_is_top":false,"comment_ctime":1626630091,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1626630091","product_id":100021101,"comment_content":"ndk日志捕获输出的能给个sample出来嘛？这块的崩溃定位还是不是很理解","like_count":0},{"had_liked":false,"id":302437,"user_name":"游侠","can_delete":false,"product_type":"c1","uid":2603450,"ip_address":"","ucode":"03F3A813A9E12F","user_header":"https://static001.geekbang.org/account/avatar/00/27/b9/ba/012ac1ad.jpg","comment_is_top":false,"comment_ctime":1626225193,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1626225193","product_id":100021101,"comment_content":"FinalizerWatchdogDaemon crash，demo中采用得方式是通过反射方式停掉它，通过<br>&#47;**<br> * Crash 捕获<br> *&#47;<br>public class MyUncaughtExceptionHandler implements Thread.UncaughtExceptionHandler {<br>    @Override<br>    public void uncaughtException(Thread t, Throwable e) {<br>        if (t.getName().equals(&quot;FinalizerWatchdogDaemon&quot;) &amp;&amp; e instanceof TimeoutException) {<br>            &#47;&#47;ignore it<br>        } else {<br>            uncaughtException(t, e);<br>        }<br>    }<br>}<br>这种方式是否更好，无侵入性，公开api","like_count":0},{"had_liked":false,"id":293839,"user_name":"諸星团","can_delete":false,"product_type":"c1","uid":1615757,"ip_address":"","ucode":"535209E48C5E13","user_header":"https://static001.geekbang.org/account/avatar/00/18/a7/8d/2f597cb1.jpg","comment_is_top":false,"comment_ctime":1621573938,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1621573938","product_id":100021101,"comment_content":"老师，看文章中提到的&#47;system&#47;etc&#47;event-log-tags获取eventLog，&#47;proc&#47;self&#47;limits获取fd等这些是用在线上监控的场景么？获取这些文件的信息普通app有权限获取到么？如果不是线上监控场景，那这些信息如何获取又怎么分析呢？","like_count":0},{"had_liked":false,"id":282329,"user_name":"行者无疆","can_delete":false,"product_type":"c1","uid":1250428,"ip_address":"","ucode":"9D2A7B76EB8097","user_header":"https://static001.geekbang.org/account/avatar/00/13/14/7c/29e6c34b.jpg","comment_is_top":false,"comment_ctime":1615197903,"is_pvip":false,"discussion_count":1,"race_medal":0,"score":"1615197903","product_id":100021101,"comment_content":"自己的项目使用了breakpad 在native崩溃 没有生成dump文件，日志中也没有崩溃的详细日志 该怎么办呢","like_count":0,"discussions":[{"author":{"id":2690075,"avatar":"","nickname":"马炼","note":"","ucode":"B5521856900612","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":384672,"discussion_content":"旧的breakpad代码有问题，pull一下最新的代码，就解决了","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1626696855,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":248028,"user_name":"周俊佑","can_delete":false,"product_type":"c1","uid":1334939,"ip_address":"","ucode":"5DAD8CCAFEF074","user_header":"https://static001.geekbang.org/account/avatar/00/14/5e/9b/c6aa2240.jpg","comment_is_top":false,"comment_ctime":1599985951,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1599985951","product_id":100021101,"comment_content":"虚拟内存。虚拟内存可以通过 &#47;proc&#47;self&#47;status 得到，通过 &#47;proc&#47;self&#47;maps 文件可以得到具体的分布情况。有时候我们一般不太重视虚拟内存，但是很多类似 OOM、tgkill 等问题都是虚拟内存不足导致的。<br>项目中有发现vmsize过高导致的问题，dump了thread和fd信息没发现问题 这种问题具体需要怎么分析呢。","like_count":0},{"had_liked":false,"id":247967,"user_name":"水调歌头","can_delete":false,"product_type":"c1","uid":2178679,"ip_address":"","ucode":"DDA5F8A400DBB2","user_header":"https://static001.geekbang.org/account/avatar/00/21/3e/77/713cef5e.jpg","comment_is_top":false,"comment_ctime":1599960769,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1599960769","product_id":100021101,"comment_content":"从Android 8 开始 Logcat 中没有出现 TimeoutException 的异常信息","like_count":0},{"had_liked":false,"id":224043,"user_name":"Shelly","can_delete":false,"product_type":"c1","uid":1961134,"ip_address":"","ucode":"AB82CBB85C64C0","user_header":"https://static001.geekbang.org/account/avatar/00/1d/ec/ae/b4a4ddf4.jpg","comment_is_top":false,"comment_ctime":1591262062,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1591262062","product_id":100021101,"comment_content":"请问各位前辈们，stop掉FinalizerWatchdogDaemon线程，一口气解决了所有的TimeoutException，这样的操作在实际的软件开发中真的能用吗？会不会忽略了root cause？","like_count":0},{"had_liked":false,"id":219703,"user_name":"Alick","can_delete":false,"product_type":"c1","uid":1305445,"ip_address":"","ucode":"0C3F4C7CEEFF44","user_header":"https://static001.geekbang.org/account/avatar/00/13/eb/65/5d081555.jpg","comment_is_top":false,"comment_ctime":1590066932,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1590066932","product_id":100021101,"comment_content":"老师 想请教下 您这边在用的hook工具是什么 有什么推荐吗","like_count":0},{"had_liked":false,"id":212436,"user_name":"Hunk...","can_delete":false,"product_type":"c1","uid":1383272,"ip_address":"","ucode":"887898BD408419","user_header":"https://static001.geekbang.org/account/avatar/00/15/1b/68/24831c21.jpg","comment_is_top":false,"comment_ctime":1588123334,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1588123334","product_id":100021101,"comment_content":"mark一下，想快速出发一定要用模拟器或者低端机，触发类是GhostObject，刚开始用小米Mix2等好几分钟还以为不触发呢，哈哈","like_count":0},{"had_liked":false,"id":157406,"user_name":"亮~虚竹","can_delete":false,"product_type":"c1","uid":1330100,"ip_address":"","ucode":"5E1DE3182D681A","user_header":"https://static001.geekbang.org/account/avatar/00/14/4b/b4/e4aac650.jpg","comment_is_top":false,"comment_ctime":1575133736,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1575133736","product_id":100021101,"comment_content":"bad token的异常如何处理呢","like_count":0},{"had_liked":false,"id":143935,"user_name":"勇敢地追","can_delete":false,"product_type":"c1","uid":1497082,"ip_address":"","ucode":"29B94AC2ABC2BB","user_header":"","comment_is_top":false,"comment_ctime":1571809610,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1571809610","product_id":100021101,"comment_content":"张老师,sample里面的方法是stop,然后把thread设为null.这个我们公司也在用.其实还有别的方法,可以加个“try catch”.只不过这个try catch添加方法和java的方法不太一样,就是通过Thread.UncaughtExceptionHandler.具体的解释在这里   https:&#47;&#47;www.jianshu.com&#47;p&#47;50fd6592d423","like_count":0},{"had_liked":false,"id":140182,"user_name":"chuanqicc","can_delete":false,"product_type":"c1","uid":1105473,"ip_address":"","ucode":"C2FDA886BF5E46","user_header":"https://static001.geekbang.org/account/avatar/00/10/de/41/42041a85.jpg","comment_is_top":false,"comment_ctime":1570844832,"is_pvip":false,"replies":[{"id":"62088","content":"需要自己去抓取更加详细的信息","user_name":"作者回复","user_name_real":"张绍文","uid":"1009577","ctime":1576683685,"ip_address":"","comment_id":140182,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1570844832","product_id":100021101,"comment_content":"就一个问题，log中没有有效信息，如何定位线上OOM和栈溢出？","like_count":0,"discussions":[{"author":{"id":1009577,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/67/a9/e251ace7.jpg","nickname":"张绍文","note":"","ucode":"94B49E5F80BFDE","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":470284,"discussion_content":"需要自己去抓取更加详细的信息","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1576683685,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":132864,"user_name":"小文","can_delete":false,"product_type":"c1","uid":1653362,"ip_address":"","ucode":"1497D0FEE8EDA6","user_header":"https://static001.geekbang.org/account/avatar/00/19/3a/72/7a312269.jpg","comment_is_top":false,"comment_ctime":1568254582,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1568254582","product_id":100021101,"comment_content":"看了Daemons的源码后，才能大概跟上老师的思路，通过把thread置空来实现，但是我弄不太清那个超时崩溃的原因。然后找了一下资料，简单了解了触发流程，才看懂了代码（=-=），学习了","like_count":0},{"had_liked":false,"id":132258,"user_name":"薯条","can_delete":false,"product_type":"c1","uid":1334064,"ip_address":"","ucode":"08E591FC62563A","user_header":"https://static001.geekbang.org/account/avatar/00/14/5b/30/83104f0f.jpg","comment_is_top":false,"comment_ctime":1568074809,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1568074809","product_id":100021101,"comment_content":"好吧，Toast 弹出异常，这个还真的遇到过，anr 异常也经常遇到，大多都是在广播的时候出现anr ，解决的方法就是找到那个广播，查看可能出问题的点，进一步尝试解决。 native 崩溃经常发现，在data&#47;tom文件里面保存的有关于native信息的文件，","like_count":0},{"had_liked":false,"id":125588,"user_name":"Silicon_Valley","can_delete":false,"product_type":"c1","uid":1138537,"ip_address":"","ucode":"29AFFD44164866","user_header":"https://static001.geekbang.org/account/avatar/00/11/5f/69/5609580b.jpg","comment_is_top":false,"comment_ctime":1566207782,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1566207782","product_id":100021101,"comment_content":"其实有很多迷惑，感觉自己有很多缺失，😂很多都不是很理解！想给自己扇巴掌","like_count":0},{"had_liked":false,"id":123914,"user_name":"小火柴","can_delete":false,"product_type":"c1","uid":1139880,"ip_address":"","ucode":"BE1B37DF9C90C1","user_header":"https://static001.geekbang.org/account/avatar/00/11/64/a8/1a9988e2.jpg","comment_is_top":false,"comment_ctime":1565781097,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1565781097","product_id":100021101,"comment_content":"这确实是好多人的通病，感觉听的云里雾里，好气自己能力差，自己想做一个优秀的Android APP好难啊！自己14年工作，做了一年应用，15年开始做跨平台的H5的项目，17年做逆向，学XP，18年的10月又开始做应用，感觉很吃力，感觉什么都不会了，请老师指导下，现在很迷茫，","like_count":0},{"had_liked":false,"id":118348,"user_name":"venom","can_delete":false,"product_type":"c1","uid":1617550,"ip_address":"","ucode":"2AEAA8659562A5","user_header":"","comment_is_top":false,"comment_ctime":1564326594,"is_pvip":false,"replies":[{"id":"62062","content":"评论里面有说哈","user_name":"作者回复","user_name_real":"张绍文","uid":"1009577","ctime":1576680679,"ip_address":"","comment_id":118348,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1564326594","product_id":100021101,"comment_content":"有个问题请教下各位：<br>获取native 崩溃时，除了breakpad等工具外，我们在adb logcat 获取的栈信息就很清晰，问题是如何在程序中能获取到logcat时的日志栈信息呢 ？ 是系统中有类似的墓碑文件嘛？还是需要hook呢 ？ ","like_count":0,"discussions":[{"author":{"id":1009577,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/67/a9/e251ace7.jpg","nickname":"张绍文","note":"","ucode":"94B49E5F80BFDE","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":460367,"discussion_content":"评论里面有说哈","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1576680679,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":118344,"user_name":"venom","can_delete":false,"product_type":"c1","uid":1617550,"ip_address":"","ucode":"2AEAA8659562A5","user_header":"","comment_is_top":false,"comment_ctime":1564325858,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1564325858","product_id":100021101,"comment_content":"之前遇到过线程死锁问题导致的崩溃<br>问题原因：代码人多手杂，方法多了很多没有必要的线程锁。建议没有发生资源争夺的方法就不要随意加锁，不然就是个隐患<br>解决思路：通过logcat 拿到的日志逐个分析各线程等待锁和持有锁的关系，a线程、b线程、c线程。。。。 画图弄清关系后，是一个闭环，找到一个合适的点打破闭环然后再进行代码优化即可","like_count":0},{"had_liked":false,"id":115668,"user_name":"EchoSomeTH","can_delete":false,"product_type":"c1","uid":1602634,"ip_address":"","ucode":"E73F13BF09695F","user_header":"https://static001.geekbang.org/account/avatar/00/18/74/4a/2dd9d62a.jpg","comment_is_top":false,"comment_ctime":1563691105,"is_pvip":false,"replies":[{"id":"62056","content":"工作环境和自身努力都有关系，当然工作上能有这种时间和机会是更好的","user_name":"作者回复","user_name_real":"张绍文","uid":"1009577","ctime":1576680283,"ip_address":"","comment_id":115668,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1563691105","product_id":100021101,"comment_content":"您这是有提示看Daemons在6.0前后在interrupt方法上有同步和没有同步直接调用的区别，从而可能会直接调产生同步问题，但是开发过程中，或者解决bug过程中，难道反射解决问题时要把android所有版本的源码看个遍再想一个全版本的兼容解决方案，这样太难了吧，而且一般公司不会给你这么多时间去处理一个bug···","like_count":0,"discussions":[{"author":{"id":1009577,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/67/a9/e251ace7.jpg","nickname":"张绍文","note":"","ucode":"94B49E5F80BFDE","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":459219,"discussion_content":"工作环境和自身努力都有关系，当然工作上能有这种时间和机会是更好的","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1576680283,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":110055,"user_name":"逆流而上","can_delete":false,"product_type":"c1","uid":1331932,"ip_address":"","ucode":"1C0428989C68EC","user_header":"https://static001.geekbang.org/account/avatar/00/14/52/dc/7691a77b.jpg","comment_is_top":false,"comment_ctime":1562161944,"is_pvip":false,"discussion_count":1,"race_medal":0,"score":"1562161944","product_id":100021101,"comment_content":"曾今遇到过老师说的线程数开太多引起oom，但是堆内存充足，但当时解决这个问题的时候没有头绪，但是有一个规律基本上是华为机子上，然后尝试开500个线程去复现，发生的crash和线上的一致。后面分析线程的来源，用线程池管理起来解决问题。但是线程数太多为啥会引起oom呢，阅读源代码，理解是linux底层给的限制。","like_count":0,"discussions":[{"author":{"id":1329847,"avatar":"https://static001.geekbang.org/account/avatar/00/14/4a/b7/a3468e61.jpg","nickname":"OF","note":"","ucode":"1087485CFAB7A1","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":233621,"discussion_content":"源码具体在哪里？我也去学习一下，难道不是jvm虚拟机里栈的限制？","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1586934987,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":107970,"user_name":"东","can_delete":false,"product_type":"c1","uid":1237259,"ip_address":"","ucode":"CAB8CE1C74C37B","user_header":"https://static001.geekbang.org/account/avatar/00/12/e1/0b/c6424841.jpg","comment_is_top":false,"comment_ctime":1561642298,"is_pvip":false,"replies":[{"id":"62046","content":"在崩溃的时候可以拿到内存的详细信息，先定位是哪块内存造成的。<br><br>如果可以稳定复现，方法还是比较多的","user_name":"作者回复","user_name_real":"张绍文","uid":"1009577","ctime":1576679304,"ip_address":"","comment_id":107970,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1561642298","product_id":100021101,"comment_content":"刚遇到phone进程内存溢出异常，只有adb log，内存信息和资源信息没有，感觉很难入手解决，目前能想到的办法就是问测试有没做哪些步骤，沿着这个步骤看能不能复现，用AS监视phone进程的内存情况，如果发现内存一直涨，把内存映照抓下来，还有proc&#47;self&#47;fd，ps -t pid","like_count":0,"discussions":[{"author":{"id":1009577,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/67/a9/e251ace7.jpg","nickname":"张绍文","note":"","ucode":"94B49E5F80BFDE","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":455767,"discussion_content":"在崩溃的时候可以拿到内存的详细信息，先定位是哪块内存造成的。\n\n如果可以稳定复现，方法还是比较多的","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1576679304,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":98986,"user_name":"JJQ","can_delete":false,"product_type":"c1","uid":1328692,"ip_address":"","ucode":"0CFDF89D899F91","user_header":"https://static001.geekbang.org/account/avatar/00/14/46/34/1b2f7657.jpg","comment_is_top":false,"comment_ctime":1559126068,"is_pvip":false,"replies":[{"id":"62037","content":"爱奇艺那个xhook还是挺稳定的，matrix内部的hook方案也替换成xhook了","user_name":"作者回复","user_name_real":"张绍文","uid":"1009577","ctime":1576678411,"ip_address":"","comment_id":98986,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1559126068","product_id":100021101,"comment_content":"请问下老师，hook liblog.so获取logcat是通过plt hook来操作么？可以用爱奇艺的那个xhook用到生产环境上么","like_count":0,"discussions":[{"author":{"id":1009577,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/67/a9/e251ace7.jpg","nickname":"张绍文","note":"","ucode":"94B49E5F80BFDE","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":451921,"discussion_content":"爱奇艺那个xhook还是挺稳定的，matrix内部的hook方案也替换成xhook了","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1576678411,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":95958,"user_name":"瑜","can_delete":false,"product_type":"c1","uid":1331817,"ip_address":"","ucode":"75CC3023EEE55E","user_header":"https://static001.geekbang.org/account/avatar/00/14/52/69/5dbff973.jpg","comment_is_top":false,"comment_ctime":1558275541,"is_pvip":false,"replies":[{"id":"62030","content":"可以的，后面的练习题有一个hook 线程创建的例子","user_name":"作者回复","user_name_real":"张绍文","uid":"1009577","ctime":1576677616,"ip_address":"","comment_id":95958,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1558275541","product_id":100021101,"comment_content":"java.lang.InternalError<br>Thread starting during runtime shutdown<br><br>java.lang.Thread.nativeCreate(Native Method)<br>老师，这种问题可以hook解决吗","like_count":0,"discussions":[{"author":{"id":1009577,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/67/a9/e251ace7.jpg","nickname":"张绍文","note":"","ucode":"94B49E5F80BFDE","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":450660,"discussion_content":"可以的，后面的练习题有一个hook 线程创建的例子","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1576677616,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":90478,"user_name":"greg","can_delete":false,"product_type":"c1","uid":1189197,"ip_address":"","ucode":"BEE952C7ED2C84","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/0o2FEeJiav8lK9Y49JUOBretDypyHic2FL9dSZYnweBPZ5ibm3vgfm3q7kgXmQEOGOLJFgPEcMweVFj5QTrt4Vb4g/132","comment_is_top":false,"comment_ctime":1556532423,"is_pvip":false,"replies":[{"id":"62002","content":"要学习自己去查找资料，&#47;proc&#47;self&#47;limits，&#47;proc&#47;self&#47;fd<br><br>https:&#47;&#47;www.linuxprobe.com&#47;linux-proc-pid.html","user_name":"作者回复","user_name_real":"张绍文","uid":"1009577","ctime":1576675529,"ip_address":"","comment_id":90478,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1556532423","product_id":100021101,"comment_content":"想在app崩溃时，上报当前的fd数量，以及当前进程fd上限。请问这两个参数应该如何获取？","like_count":0,"discussions":[{"author":{"id":1009577,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/67/a9/e251ace7.jpg","nickname":"张绍文","note":"","ucode":"94B49E5F80BFDE","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":448537,"discussion_content":"要学习自己去查找资料，/proc/self/limits，/proc/self/fd\n\nhttps://www.linuxprobe.com/linux-proc-pid.html","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1576675529,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":88898,"user_name":"等者","can_delete":false,"product_type":"c1","uid":1331541,"ip_address":"","ucode":"B3C5EADE83BABD","user_header":"https://static001.geekbang.org/account/avatar/00/14/51/55/514bfe6a.jpg","comment_is_top":false,"comment_ctime":1556023212,"is_pvip":false,"replies":[{"id":"61995","content":"要看具体是什么crash，是Java还是native的，先做一个判断","user_name":"作者回复","user_name_real":"张绍文","uid":"1009577","ctime":1576674656,"ip_address":"","comment_id":88898,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1556023212","product_id":100021101,"comment_content":"我遇到一个某厂家修改rom，导致代码中某个地方(堆栈里没有出现上层位置)调用Message的toString()方法，然后该方法里crash了。我想通过hook的方法去对Message的toString()加try catch，但是由于Message是final的，无法代理，请问大神，有其他hook点吗？","like_count":0,"discussions":[{"author":{"id":1009577,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/67/a9/e251ace7.jpg","nickname":"张绍文","note":"","ucode":"94B49E5F80BFDE","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":447936,"discussion_content":"要看具体是什么crash，是Java还是native的，先做一个判断","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1576674656,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":73766,"user_name":"tobenull","can_delete":false,"product_type":"c1","uid":1449537,"ip_address":"","ucode":"472AB9FFC57D7B","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTIfBdXj1VRkSujQxvEeoeTNFthEXagJDACica7ubabSTmLqCbC3vaLlOmhG8OTY2FjhZia7MPwuQ1uA/132","comment_is_top":false,"comment_ctime":1551972981,"is_pvip":true,"discussion_count":0,"race_medal":0,"score":"1551972981","product_id":100021101,"comment_content":"之前做Android盒子开发，有个型号设备上网络请求总会无端卡20s左右，后来经过抓包(tcpdump+wireshark)、curl&#47;wget模拟请求等方法，对比正常设备和异常设备，发现该异常设备默认走的ipv6、当ipv6请求失败时会尝试3次后才切换ipv4......和设备厂商反馈后由厂商更新rom解决（改为默认走ipv4）<br>自此，对tcpdump等抓包&#47;命令行工具的使用就更加得心应手了，现在开发都会随身准备一台root设备、遇到各种疑难问题都会优先通过该设备来研究","like_count":0},{"had_liked":false,"id":73110,"user_name":"大土豆","can_delete":false,"product_type":"c1","uid":1121636,"ip_address":"","ucode":"67445DC3EC9DB0","user_header":"https://static001.geekbang.org/account/avatar/00/11/1d/64/52a5863b.jpg","comment_is_top":false,"comment_ctime":1551799976,"is_pvip":true,"replies":[{"id":"26615","content":"代理类，同时在代理类内部要hook","user_name":"作者回复","user_name_real":"张绍文","uid":"1009577","ctime":1551844270,"ip_address":"","comment_id":73110,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1551799976","product_id":100021101,"comment_content":"应用层怎么hook Toast呀😂，你们还是用Toast类吗？还是说你们用的都是自己写的代理类，封装了Toast","like_count":0,"discussions":[{"author":{"id":1009577,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/67/a9/e251ace7.jpg","nickname":"张绍文","note":"","ucode":"94B49E5F80BFDE","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":441918,"discussion_content":"代理类，同时在代理类内部要hook","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1551844270,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":72010,"user_name":"功夫熊猫","can_delete":false,"product_type":"c1","uid":1025521,"ip_address":"","ucode":"8C73B118926961","user_header":"https://static001.geekbang.org/account/avatar/00/0f/a5/f1/76d4e6bb.jpg","comment_is_top":false,"comment_ctime":1551498373,"is_pvip":false,"replies":[{"id":"28206","content":"赞","user_name":"作者回复","user_name_real":"张绍文","uid":"1009577","ctime":1552917782,"ip_address":"","comment_id":72010,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1551498373","product_id":100021101,"comment_content":"找到了dumpReferenceTables的出处：<br>在dalvik.system.VMDebug类中，是一个native方法，亦是static方法；在JNI中可以这么调用<br>jclass vm_class = env-&gt;FindClass(&quot;dalvik&#47;system&#47;VMDebug&quot;);<br>jmethodID dump_mid = env-&gt;GetStaticMethodID( vm_class, &quot;dumpReferenceTables&quot;, &quot;()V&quot; );<br>env-&gt;CallStaticVoidMethod( vm_class, dump_mid );","like_count":0,"discussions":[{"author":{"id":1009577,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/67/a9/e251ace7.jpg","nickname":"张绍文","note":"","ucode":"94B49E5F80BFDE","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":441424,"discussion_content":"赞","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1552917782,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":71852,"user_name":"功夫熊猫","can_delete":false,"product_type":"c1","uid":1025521,"ip_address":"","ucode":"8C73B118926961","user_header":"https://static001.geekbang.org/account/avatar/00/0f/a5/f1/76d4e6bb.jpg","comment_is_top":false,"comment_ctime":1551451130,"is_pvip":false,"replies":[{"id":"26028","content":"虚拟机内部的一个方法","user_name":"作者回复","user_name_real":"张绍文","uid":"1009577","ctime":1551459024,"ip_address":"","comment_id":71852,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1551451130","product_id":100021101,"comment_content":"DumpReferenceTables 是什么工具","like_count":0,"discussions":[{"author":{"id":1009577,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/67/a9/e251ace7.jpg","nickname":"张绍文","note":"","ucode":"94B49E5F80BFDE","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":441360,"discussion_content":"虚拟机内部的一个方法","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1551459024,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":68554,"user_name":"克里斯","can_delete":false,"product_type":"c1","uid":1181844,"ip_address":"","ucode":"00B755C10AC1C3","user_header":"https://static001.geekbang.org/account/avatar/00/12/08/94/2c22bd4e.jpg","comment_is_top":false,"comment_ctime":1550543433,"is_pvip":true,"replies":[{"id":"30767","content":"难也是机会，突破了就好了","user_name":"作者回复","user_name_real":"张绍文","uid":"1009577","ctime":1555167447,"ip_address":"","comment_id":68554,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1550543433","product_id":100021101,"comment_content":"忽然感觉安卓好难😂","like_count":0,"discussions":[{"author":{"id":1009577,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/67/a9/e251ace7.jpg","nickname":"张绍文","note":"","ucode":"94B49E5F80BFDE","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":439730,"discussion_content":"难也是机会，突破了就好了","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1555167447,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":68307,"user_name":"三金","can_delete":false,"product_type":"c1","uid":1328714,"ip_address":"","ucode":"481B2A35F0EB98","user_header":"https://static001.geekbang.org/account/avatar/00/14/46/4a/8776aeff.jpg","comment_is_top":false,"comment_ctime":1550481023,"is_pvip":false,"replies":[{"id":"31137","content":"这个看起来也可以通过Hook解决","user_name":"作者回复","user_name_real":"张绍文","uid":"1009577","ctime":1555401976,"ip_address":"","comment_id":68307,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1550481023","product_id":100021101,"comment_content":"遇到一个句柄问题，时间很长了，一直没有找到原因，麻烦绍文大佬帮忙看看：<br>Crash平台上显示的页面路径主要出现在2个页面，Crash平台上显示的Log有以下4种（写不下了）：<br>1、java.lang.RuntimeException: Could not read input channel file descriptors from parcel.<br>\tat android.view.InputChannel.nativeReadFromParcel(Native Method)<br>\tat android.view.InputChannel.readFromParcel(InputChannel.java:148)<br>\tat android.view.IWindowSession$Stub$Proxy.addToDisplay(IWindowSession.java:752)<br>\tat android.view.ViewRootImpl.setView(ViewRootImpl.java:641)<br>\tat android.view.WindowManagerGlobal.addView(WindowManagerGlobal.java:289)<br>\tat android.view.WindowManagerImpl.addView(WindowManagerImpl.java:85)<br>\tat android.widget.Toast$TN.handleShow(Toast.java:431)<br>\tat android.widget.Toast$TN$1.run(Toast.java:335)<br>\tat android.os.Handler.handleCallback(Handler.java:815)<br>\tat android.os.Handler.dispatchMessage(Handler.java:104)<br>\tat android.os.Looper.loop(Looper.java:194)<br>\tat android.app.ActivityThread.main(ActivityThread.java:5643)<br>\tat java.lang.reflect.Method.invoke(Native Method)<br>\tat java.lang.reflect.Method.invoke(Method.java:372)<br>\tat com.android.internal.os.ZygoteInit$MethodAndArgsCaller.run(ZygoteInit.java:960)<br>\tat com.android.internal.os.ZygoteInit.main(ZygoteInit.java:755)<br>2、java.lang.RuntimeException: InputChannel is not initialized.<br>\tat android.view.InputEventReceiver.nativeInit(Native Method)<br>\tat android.view.InputEventReceiver.&lt;init&gt;(InputEventReceiver.java:70)<br>\tat android.view.ViewRootImpl$WindowInputEventReceiver.&lt;init&gt;(ViewRootImpl.java:6605)<br>\tat android.view.ViewRootImpl.setView(ViewRootImpl.java:729)<br>\tat android.view.WindowManagerGlobal.addView(WindowManagerGlobal.java:289)<br>\tat android.view.WindowManagerImpl.addView(WindowManagerImpl.java:85)<br>\tat android.widget.Toast$TN.handleShow(Toast.java:431)<br>\tat android.widget.Toast$TN$1.run(Toast.java:335)<br>\tat android.os.Handler.handleCallback(Handler.java:815)<br>\tat android.os.Handler.dispatchMessage(Handler.java:104)<br>\tat android.os.Looper.loop(Looper.java:194)<br>\tat android.app.ActivityThread.main(ActivityThread.java:5643)","like_count":0,"discussions":[{"author":{"id":1009577,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/67/a9/e251ace7.jpg","nickname":"张绍文","note":"","ucode":"94B49E5F80BFDE","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":439621,"discussion_content":"这个看起来也可以通过Hook解决","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1555401976,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":65973,"user_name":"红色物质长方体固体转移","can_delete":false,"product_type":"c1","uid":1397664,"ip_address":"","ucode":"296EB9021F3140","user_header":"https://static001.geekbang.org/account/avatar/00/15/53/a0/8c26f345.jpg","comment_is_top":false,"comment_ctime":1549808834,"is_pvip":false,"replies":[{"id":"30785","content":"嗯，相对来说sample的做法会更加稳妥","user_name":"作者回复","user_name_real":"张绍文","uid":"1009577","ctime":1555168914,"ip_address":"","comment_id":65973,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1549808834","product_id":100021101,"comment_content":"  经过允许simple 之后发现其实就是通过反射来直接stop 但是会有其他的地方的隐患问题，当然也可以直接通过修改MAX_FINALIZE_NANOS 来进行修复 但是 感觉问题较大 感觉会影响到其他的地方。感觉虽然hook 很强大  但是也不能乱用  出来针对6.0的版本判断之外 还需要进行waitForFinalization 中会阻塞的情况 有时候 没有到10s 也会触发 问题难点在这里 所以我解决的时候就是通过UncaughtException 来捕获这个异常  在源码的 <br>                &#47;&#47; just finished.<br>                    if (finalizedObject != null) {<br>                        finalizerTimedOut(finalizedObject);<br>                        break;<br>                    }<br>这个地方 在执行finalizerTimedOut 的时候 会break 这个看监护守护线程。<br>下次调用没有用，我们可以先调用java.lang.Daemons类中的stop方法，先让他们整个机制停止然后在调用java.lang.Daemons类中的start方法，相当于重启。","like_count":0,"discussions":[{"author":{"id":1009577,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/67/a9/e251ace7.jpg","nickname":"张绍文","note":"","ucode":"94B49E5F80BFDE","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":438663,"discussion_content":"嗯，相对来说sample的做法会更加稳妥","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1555168914,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":63297,"user_name":"Swing","can_delete":false,"product_type":"c1","uid":1330065,"ip_address":"","ucode":"55FCA9ECEFBBEB","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/N0NACGUr8dNAbN6BdiagPHBaB0EnyDsI9zWpwJteqTY38apOEnTOA7JkBAQnzYKJBgxu3Q8YMUILwLAB6camn4w/132","comment_is_top":false,"comment_ctime":1548318909,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1548318909","product_id":100021101,"comment_content":"hook，切面这些高大上的东西，我要学会","like_count":0},{"had_liked":false,"id":62198,"user_name":"关英俊","can_delete":false,"product_type":"c1","uid":1171599,"ip_address":"","ucode":"3A58F47D522898","user_header":"https://static001.geekbang.org/account/avatar/00/11/e0/8f/ef01ab22.jpg","comment_is_top":false,"comment_ctime":1547978024,"is_pvip":false,"replies":[{"id":"22043","content":"通过调用底层接口拿到的","user_name":"作者回复","user_name_real":"张绍文","uid":"1009577","ctime":1548041891,"ip_address":"","comment_id":62198,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1547978024","product_id":100021101,"comment_content":"请问下如何通过DumpReferenceTables 统计JNI的引用表？","like_count":0,"discussions":[{"author":{"id":1009577,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/67/a9/e251ace7.jpg","nickname":"张绍文","note":"","ucode":"94B49E5F80BFDE","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":437133,"discussion_content":"通过调用底层接口拿到的","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1548041891,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":58581,"user_name":"Juinn","can_delete":false,"product_type":"c1","uid":1334226,"ip_address":"","ucode":"257796850A6CD9","user_header":"https://static001.geekbang.org/account/avatar/00/14/5b/d2/34a8c79c.jpg","comment_is_top":false,"comment_ctime":1547122336,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1547122336","product_id":100021101,"comment_content":"shaowen老师，你提到的崩溃时需要的信息的确很全面，后面会不会有讲述如何抓取这些信息的一个完整的sample，甚至是一个框架，允许我们可以定制和修改的","like_count":0},{"had_liked":false,"id":57458,"user_name":"kimmy","can_delete":false,"product_type":"c1","uid":1110885,"ip_address":"","ucode":"04B10ACBCB834D","user_header":"https://static001.geekbang.org/account/avatar/00/10/f3/65/2c3ee9b8.jpg","comment_is_top":false,"comment_ctime":1546796818,"is_pvip":false,"replies":[{"id":"20827","content":"进程启动的时候，就会分zygote32跟zygote64 fork出来","user_name":"作者回复","user_name_real":"张绍文","uid":"1009577","ctime":1546916074,"ip_address":"","comment_id":57458,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1546796818","product_id":100021101,"comment_content":"文兄，关于你讲的虚拟内存那块提到的32位进程和64位进程指的是native吗，我理解要是单纯的java层都是虚拟机解析字节码，根本不分32还是64的吧","like_count":0,"discussions":[{"author":{"id":1009577,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/67/a9/e251ace7.jpg","nickname":"张绍文","note":"","ucode":"94B49E5F80BFDE","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":435586,"discussion_content":"进程启动的时候，就会分zygote32跟zygote64 fork出来","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1546916074,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":53833,"user_name":"二进制","can_delete":false,"product_type":"c1","uid":1330178,"ip_address":"","ucode":"52BA63ECE60A2D","user_header":"https://static001.geekbang.org/account/avatar/00/14/4c/02/e45f43a5.jpg","comment_is_top":false,"comment_ctime":1545738578,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1545738578","product_id":100021101,"comment_content":"解bug的思路和工具，满满的干货，工作中正好需要","like_count":0},{"had_liked":false,"id":51798,"user_name":"KrystalJake","can_delete":false,"product_type":"c1","uid":1151469,"ip_address":"","ucode":"C8F72FD349AD04","user_header":"https://static001.geekbang.org/account/avatar/00/11/91/ed/a0d244bb.jpg","comment_is_top":false,"comment_ctime":1545264031,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1545264031","product_id":100021101,"comment_content":"求教为啥线上正式包crash后，dump出来的线程日志信息是这样<br>[DEBUG] thread 0xac60eae8 dumping ...<br>DEBUG是代表什么呢","like_count":0},{"had_liked":false,"id":51251,"user_name":"倩～","can_delete":false,"product_type":"c1","uid":1331394,"ip_address":"","ucode":"2DAD37AC5DF939","user_header":"https://static001.geekbang.org/account/avatar/00/14/50/c2/ded8a866.jpg","comment_is_top":false,"comment_ctime":1545142576,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1545142576","product_id":100021101,"comment_content":"之前用百度地图的sdk或是其他地方的sdk，就会很容易出现SIGSEVG，以前一直都不知道怎么解决","like_count":0},{"had_liked":false,"id":50877,"user_name":"洛凡辰","can_delete":false,"product_type":"c1","uid":1329399,"ip_address":"","ucode":"4BFA93E536DFA4","user_header":"https://static001.geekbang.org/account/avatar/00/14/48/f7/17b97055.jpg","comment_is_top":false,"comment_ctime":1545059437,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1545059437","product_id":100021101,"comment_content":"最后这个sample太赞了，这个timeout问题困扰了我们很久。就凭这个我这钱就没白花！","like_count":0},{"had_liked":false,"id":49823,"user_name":"iniesta2014","can_delete":false,"product_type":"c1","uid":1128692,"ip_address":"","ucode":"D978A8CF0B40E2","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTKE7KHyLv1Zian5yzyby3ricSClVp0wwia8evbicGPH9icSAVYHhREVO39CtcHc77x05XONNK61JXoNXfg/132","comment_is_top":false,"comment_ctime":1544775782,"is_pvip":false,"replies":[{"id":"17951","content":"文章中所有内容大部分情况都可以拿到，大部分可以直接拿。<br><br>类似logcat和其他线程堆栈会用一些黑科技","user_name":"作者回复","user_name_real":"张绍文","uid":"1009577","ctime":1544777989,"ip_address":"","comment_id":49823,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1544775782","product_id":100021101,"comment_content":"文章里面说的很多文件都需要root权限才能拿到吧，这样的话，很难做到有效监控啊","like_count":0,"discussions":[{"author":{"id":1009577,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/67/a9/e251ace7.jpg","nickname":"张绍文","note":"","ucode":"94B49E5F80BFDE","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":432783,"discussion_content":"文章中所有内容大部分情况都可以拿到，大部分可以直接拿。\n\n类似logcat和其他线程堆栈会用一些黑科技","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1544777989,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":49317,"user_name":"周大军","can_delete":false,"product_type":"c1","uid":1075960,"ip_address":"","ucode":"E9452270B728AB","user_header":"https://static001.geekbang.org/account/avatar/00/10/6a/f8/cae5e419.jpg","comment_is_top":false,"comment_ctime":1544664636,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1544664636","product_id":100021101,"comment_content":"之前担心java反射会影响性能和兼容性，一直没怎么去用，不熟悉这块，特别是hook相关的。我想问hook除了用反射处理外还能有别的方法么？","like_count":0},{"had_liked":false,"id":48891,"user_name":"薯条","can_delete":false,"product_type":"c1","uid":1334064,"ip_address":"","ucode":"08E591FC62563A","user_header":"https://static001.geekbang.org/account/avatar/00/14/5b/30/83104f0f.jpg","comment_is_top":false,"comment_ctime":1544576381,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1544576381","product_id":100021101,"comment_content":"深深地膜拜，仿佛发现了，新大陆，这些东西闻所未闻，听所未听","like_count":0},{"had_liked":false,"id":48520,"user_name":"qh","can_delete":false,"product_type":"c1","uid":1137959,"ip_address":"","ucode":"0C0A3C32B061CE","user_header":"https://static001.geekbang.org/account/avatar/00/11/5d/27/a8fb15bf.jpg","comment_is_top":false,"comment_ctime":1544459851,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1544459851","product_id":100021101,"comment_content":"经过调试，后发现可以复现没有超时也触发TimeOutException的方法是，先点击触发TimeOut按钮，然后隔一段时间，点击stopWatchDog。这样有可能触发异常，代码里的关键点应该是在waitForObject这个方法里，如果FinalizerDaemon这个线程优先唤醒 FinalizerWatchdogDaemon线程那么waitForObject返回不为null，必然后面会触发异常，如果说stopWatchDog线程优先唤醒FinalizerWatchdogDaemon线程那么waitForObject返回为null则会跳出循环终止线程。但是这时候调用stopWatchDog线程会卡死，直到GhostObject的finalize执行完毕。不知道这是为什么。","like_count":0},{"had_liked":false,"id":48404,"user_name":"OnClickListener","can_delete":false,"product_type":"c1","uid":1250465,"ip_address":"","ucode":"35BE7FF3D4A258","user_header":"https://static001.geekbang.org/account/avatar/00/13/14/a1/107910b4.jpg","comment_is_top":false,"comment_ctime":1544436568,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1544436568","product_id":100021101,"comment_content":"感觉很有意思","like_count":0},{"had_liked":false,"id":47580,"user_name":"MrsLEO","can_delete":false,"product_type":"c1","uid":1331358,"ip_address":"","ucode":"6535EAAD1C6A7C","user_header":"https://static001.geekbang.org/account/avatar/00/14/50/9e/f8d9c6cb.jpg","comment_is_top":false,"comment_ctime":1544158543,"is_pvip":false,"replies":[{"id":"16977","content":"我们线上会发现有万分之几的文件损坏率，会通过重新从apk提取的方式来修复","user_name":"作者回复","user_name_real":"张绍文","uid":"1009577","ctime":1544173877,"ip_address":"","comment_id":47580,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1544158543","product_id":100021101,"comment_content":"张工你好，我是上次问题so报UnsatifiedLinkError.could not find libxxx.so.你的回答是有可能是拷贝问题。但是我发现错误信息输出pathClassLoader包含了xxx&#47;lib&#47;armeabi-v7a 这说明当前那台系统的primaryCpuAbi为armeabi-v7a.然而我们apk又存在并且紧存在armeabi-v7a的so。为什么还是报这个找不到so错误呢.因为在我看来这样情况下拷贝肯定成功了吧.还是另有其他原因。还望指点迷津一下。谢谢","like_count":0,"discussions":[{"author":{"id":1009577,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/67/a9/e251ace7.jpg","nickname":"张绍文","note":"","ucode":"94B49E5F80BFDE","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":431815,"discussion_content":"我们线上会发现有万分之几的文件损坏率，会通过重新从apk提取的方式来修复","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1544173877,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":47560,"user_name":"小伟","can_delete":false,"product_type":"c1","uid":1237846,"ip_address":"","ucode":"43235F32B7F9D8","user_header":"https://static001.geekbang.org/account/avatar/00/12/e3/56/5fc6c92c.jpg","comment_is_top":false,"comment_ctime":1544155372,"is_pvip":false,"replies":[{"id":"16976","content":"目前做法是在下一轮自动关闭，不会有性能问题，也可以放到线程中调用。<br><br>唯一的问题是无法发现这种问题，如果全部捕获了就算过滤了对用户来说也无法恢复吧","user_name":"作者回复","user_name_real":"张绍文","uid":"1009577","ctime":1544173241,"ip_address":"","comment_id":47560,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1544155372","product_id":100021101,"comment_content":"TimeoutException这个问题最开始以为只有oppo vivo 手机有，后来发现华为努比亚等一些其他品牌手机也会出现。最开始也准备用老师这种反射的方式去关闭，但总感觉会有性能损耗，尤其是放在应用启动的时候去关闭，后来通过UncaughtExceptionHandler捕获全局异常后过滤掉这个异常来解决的。","like_count":0,"discussions":[{"author":{"id":1009577,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/67/a9/e251ace7.jpg","nickname":"张绍文","note":"","ucode":"94B49E5F80BFDE","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":431810,"discussion_content":"目前做法是在下一轮自动关闭，不会有性能问题，也可以放到线程中调用。\n\n唯一的问题是无法发现这种问题，如果全部捕获了就算过滤了对用户来说也无法恢复吧","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1544173241,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":47359,"user_name":"农历三十一","can_delete":false,"product_type":"c1","uid":1329487,"ip_address":"","ucode":"C0417F57F68154","user_header":"https://static001.geekbang.org/account/avatar/00/14/49/4f/68188971.jpg","comment_is_top":false,"comment_ctime":1544113724,"is_pvip":false,"replies":[{"id":"16975","content":"这块可以在网上看看linux内存与虚拟内存相关的内容","user_name":"作者回复","user_name_real":"张绍文","uid":"1009577","ctime":1544173079,"ip_address":"","comment_id":47359,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1544113724","product_id":100021101,"comment_content":"一般都什么资源会占用虚拟内存呢？","like_count":0,"discussions":[{"author":{"id":1009577,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/67/a9/e251ace7.jpg","nickname":"张绍文","note":"","ucode":"94B49E5F80BFDE","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":431749,"discussion_content":"这块可以在网上看看linux内存与虚拟内存相关的内容","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1544173079,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":47238,"user_name":"煦暖","can_delete":false,"product_type":"c1","uid":1245418,"ip_address":"","ucode":"96D0B236C4148A","user_header":"https://static001.geekbang.org/account/avatar/00/13/00/ea/6ad346c1.jpg","comment_is_top":false,"comment_ctime":1544085833,"is_pvip":false,"replies":[{"id":"16880","content":"后面会有一些跨平台的内容，以及硬件相关的一些内容。","user_name":"作者回复","user_name_real":"张绍文","uid":"1009577","ctime":1544107371,"ip_address":"","comment_id":47238,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1544085833","product_id":100021101,"comment_content":"老师你好，课程的讲解能涉及一些 iOS 相关的内容吗，有个大体的研究方向就好。","like_count":0,"discussions":[{"author":{"id":1009577,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/67/a9/e251ace7.jpg","nickname":"张绍文","note":"","ucode":"94B49E5F80BFDE","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":431709,"discussion_content":"后面会有一些跨平台的内容，以及硬件相关的一些内容。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1544107371,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":47165,"user_name":"少燚不说话","can_delete":false,"product_type":"c1","uid":1126528,"ip_address":"","ucode":"9E792FF2006E2B","user_header":"https://static001.geekbang.org/account/avatar/00/11/30/80/0411b883.jpg","comment_is_top":false,"comment_ctime":1544066065,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1544066065","product_id":100021101,"comment_content":"对于崩溃这个概念有了更深刻的理解。感谢张老师！","like_count":0},{"had_liked":false,"id":47144,"user_name":"月明星稀","can_delete":false,"product_type":"c1","uid":1330044,"ip_address":"","ucode":"BA3BB18639A390","user_header":"https://static001.geekbang.org/account/avatar/00/14/4b/7c/601628c6.jpg","comment_is_top":false,"comment_ctime":1544063094,"is_pvip":false,"replies":[{"id":"16878","content":"有部分评论自己成功了，可以参考一下","user_name":"作者回复","user_name_real":"张绍文","uid":"1009577","ctime":1544107265,"ip_address":"","comment_id":47144,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1544063094","product_id":100021101,"comment_content":"如何编译breakpad？win10平台上需要安装哪些环境或者工具才能进行编译？按照https：&#47;&#47;github.com&#47;google&#47;breakpad上的getting started步骤无法进行下去啊。","like_count":0,"discussions":[{"author":{"id":1009577,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/67/a9/e251ace7.jpg","nickname":"张绍文","note":"","ucode":"94B49E5F80BFDE","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":431678,"discussion_content":"有部分评论自己成功了，可以参考一下","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1544107265,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":46963,"user_name":"ranbo","can_delete":false,"product_type":"c1","uid":1051639,"ip_address":"","ucode":"443B4D07E0164E","user_header":"https://static001.geekbang.org/account/avatar/00/10/0b/f7/8b496419.jpg","comment_is_top":false,"comment_ctime":1544010288,"is_pvip":true,"discussion_count":0,"race_medal":0,"score":"1544010288","product_id":100021101,"comment_content":"小公司上班，先把功能做出来，稳定最重要。目前解决奔溃的方法:全局捕获，发生异常让其重定向到奔溃页面或应用首页，想请教老师这种为了用户使用的处理方式优雅不？当然，有严重的奔溃修改三把刷子。1，查日志分析原因，debug等；2，处理奔溃；3，模拟各种数据测试修改结果，预测还会出现的bug和连贯的bug等。修改过程有些源码级，native层不熟处理速度和优雅度还是不够，学习了老师的处理思想，很不错。<br><br>总结:还得多看源码和native相关。<br>","like_count":0},{"had_liked":false,"id":46853,"user_name":"Rust","can_delete":false,"product_type":"c1","uid":1338740,"ip_address":"","ucode":"93C23C11E2840C","user_header":"https://static001.geekbang.org/account/avatar/00/14/6d/74/4d9f2280.jpg","comment_is_top":false,"comment_ctime":1543991544,"is_pvip":false,"replies":[{"id":"16735","content":"文中会有很多linux文件，我们可以查一下他们用处，以及如何在代码中获取它们。<br><br>Sample主要是教大家如何通过分析源码去解决系统崩溃，以及分析不同解法可能带来的问题。<br><br>后面的内容会由浅入深，学完整个专栏再来看前面的内容会有不同的感觉。","user_name":"作者回复","user_name_real":"张绍文","uid":"1009577","ctime":1544008795,"ip_address":"","comment_id":46853,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1543991544","product_id":100021101,"comment_content":"请问能由浅入深的讲解吗，这样直接搞底层有点蒙圈，sample能给的全面一点，为啥这个sample，不交大家如何解决崩溃或者抓日志呢，感觉这个sample和这节课关系不大啊","like_count":0,"discussions":[{"author":{"id":1009577,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/67/a9/e251ace7.jpg","nickname":"张绍文","note":"","ucode":"94B49E5F80BFDE","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":431572,"discussion_content":"文中会有很多linux文件，我们可以查一下他们用处，以及如何在代码中获取它们。\n\nSample主要是教大家如何通过分析源码去解决系统崩溃，以及分析不同解法可能带来的问题。\n\n后面的内容会由浅入深，学完整个专栏再来看前面的内容会有不同的感觉。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1544008795,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":46813,"user_name":"- -","can_delete":false,"product_type":"c1","uid":1090880,"ip_address":"","ucode":"BACB2763FD2D5D","user_header":"https://static001.geekbang.org/account/avatar/00/10/a5/40/ad00a484.jpg","comment_is_top":false,"comment_ctime":1543985595,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1543985595","product_id":100021101,"comment_content":"其实大部分崩溃都是代码漏洞或者错误使用导致的，在解决崩溃的过程需要不断反推总结代码的编写规范，比如说弹框展示隐藏时页面被回收，这种就可以统一放在工具类去判断；再比如bitmap的分块加载、宽高获取等封装好防止错误的使用方式。很大一部分的异常都可以通过框架或者工具类的方式防范","like_count":0},{"had_liked":false,"id":46809,"user_name":"- -","can_delete":false,"product_type":"c1","uid":1090880,"ip_address":"","ucode":"BACB2763FD2D5D","user_header":"https://static001.geekbang.org/account/avatar/00/10/a5/40/ad00a484.jpg","comment_is_top":false,"comment_ctime":1543985044,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1543985044","product_id":100021101,"comment_content":"文中讲的这些分析日志、栈，都需要上传到服务器，关于这些东西的获取、上传也是需要注意的","like_count":0},{"had_liked":false,"id":46775,"user_name":"牵手约定","can_delete":false,"product_type":"c1","uid":1249461,"ip_address":"","ucode":"01AF328FDDD38C","user_header":"https://static001.geekbang.org/account/avatar/00/13/10/b5/0813608c.jpg","comment_is_top":false,"comment_ctime":1543979970,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1543979970","product_id":100021101,"comment_content":"还是多学，懵了，这些都没咋接触","like_count":0},{"had_liked":false,"id":46326,"user_name":"null","can_delete":false,"product_type":"c1","uid":1334619,"ip_address":"","ucode":"95420BEB63C6AA","user_header":"https://static001.geekbang.org/account/avatar/00/14/5d/5b/9b1dc56d.jpg","comment_is_top":false,"comment_ctime":1543900625,"is_pvip":false,"replies":[{"id":"16738","content":"Stop的时候有一定概率导致即使没有超时，依然会报timeoutexception。<br><br>本地可以模拟出来的","user_name":"作者回复","user_name_real":"张绍文","uid":"1009577","ctime":1544009092,"ip_address":"","comment_id":46326,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1543900625","product_id":100021101,"comment_content":"张老师，我看的是5.0的源码，Daemons的stop方法里也加入了 synchronized (this)，还能出现线程安全问题吗？请帮忙解惑","like_count":0,"discussions":[{"author":{"id":1009577,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/67/a9/e251ace7.jpg","nickname":"张绍文","note":"","ucode":"94B49E5F80BFDE","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":431426,"discussion_content":"Stop的时候有一定概率导致即使没有超时，依然会报timeoutexception。\n\n本地可以模拟出来的","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1544009092,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":46292,"user_name":"许圣明","can_delete":false,"product_type":"c1","uid":1026695,"ip_address":"","ucode":"2549A0CB2F7821","user_header":"https://static001.geekbang.org/account/avatar/00/0f/aa/87/7f44ec43.jpg","comment_is_top":false,"comment_ctime":1543893797,"is_pvip":false,"replies":[{"id":"16571","content":"java可以直接执行logcat命令，native可以仿照logcat的源码，自己和logd交互获得。也可以用一些黑科技，hook logcat","user_name":"作者回复","user_name_real":"张绍文","uid":"1009577","ctime":1543903289,"ip_address":"","comment_id":46292,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1543893797","product_id":100021101,"comment_content":"文中说系统的 event log 记录在 event-log-tags 中。我觉得应该是，event-log-tags 文件只是记录了系统  event log 的格式定义，真实的 log 还需要用 logcat 命令来打印输出吧？","like_count":0,"discussions":[{"author":{"id":1009577,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/67/a9/e251ace7.jpg","nickname":"张绍文","note":"","ucode":"94B49E5F80BFDE","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":431411,"discussion_content":"java可以直接执行logcat命令，native可以仿照logcat的源码，自己和logd交互获得。也可以用一些黑科技，hook logcat","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1543903289,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]}]}