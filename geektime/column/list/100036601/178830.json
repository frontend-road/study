{"id":178830,"title":"26 | 平台产品研发：三个月完成千人规模的产品要怎么做？","content":"<p>你好，我是石雪峰。</p><p>虽然我们之前聊了这么多的平台建设思路，但是，可能很多人都没有机会经历一个平台从构思到开发、再到推广落地的完整过程。</p><p>如果要开发一个千人使用的DevOps产品，需要多长时间呢？你可能会说需要半年甚至是更长的时间，我之前也是这么觉得的。</p><p>但是，2018年，在启动流水线平台建设的时候，老板“大手一挥”，要求在三个月内见到成效，我都快惊呆了。</p><p>因为，我们要真正地从零开始：原型图都没有一张，代码都没有一行，临时组建的一个草台班子还分散在北京、上海两地，团队成员之前都没怎么打过招呼，这能行吗？</p><p>今天，我想给你分享的就是这个真实的故事。我来跟你一起复盘下这次“急行军”的历程，看看我们做对了什么，又做错了什么，有哪些干货是可以拿来就用的，又有哪些“坑”是你一定要努力回避的。</p><p>其实，作为一个非专业的DevOps产品经理，你终将面对这样的挑战，但你要相信，<strong>只要开始去做了，就没有什么是不可能的</strong>。</p><h2>项目启动</h2><p>时间回到一年前，当时我所在的这个“草台班子”是个啥情况呢？团队组成是这样的：两个后台开发在北京，一个半前端开发在上海，还有一个基础设施工程师和一个流水线开发工程师，再加上半个全能打杂的产品经理，也就是我，满打满算一共6个人。</p><!-- [[[read_end]]] --><p>项目从11月中旬开始构思，12月初开启动会，当时，除了我之外，没有任何人清楚我们要做的到底是个什么玩意儿。这该怎么办呢？</p><p>玩过游戏的同学应该都知道打好开局有多重要，所以，为了这个Kickoff会议，我事先做了大量的准备工作，其中就包括0.2版本的产品原型图。与其说是一个原型图，不如说就是一个草稿，简陋得不能再简陋了。</p><p><img src=\"https://static001.geekbang.org/resource/image/ac/fe/ac58f3b2040056ee030008370dc6c3fe.png?wh=1250*630\" alt=\"\"></p><p>项目的Kickoff会议是项目组成员和未来产品的第一次见面，留下一个积极的印象非常重要。所以，从第一刻开始，我就铆足了精神。</p><p>首先，我发出了一封热情洋溢的会议邀请。在会议邀请中，我仔细地陈述了我们为什么要做这件事，为什么是现在，为什么不做不行。</p><p>在正式开会的时候，我再一次明确了项目的重要性和紧急性，并给大家演示了第一版的系统原型图（没错，就是简陋到极致的刚刚的这张原型图）。</p><p>即便这样，三个月的工期也让大家非常焦虑。为了缓解紧张情绪，证明这个项目的可行性，我还做了两件事：</p><ol>\n<li>搭建了一个系统demo，几个简单的页面；</li>\n<li>由于用到了另外一个开源产品的核心技术，于是，我就对这个技术进行了简单演示。</li>\n</ol><p>虽然我自己心里对这个计划也相当“打鼓”，但我还是希望告诉大家，这并不是不可能的任务，努力帮助大家树立信心。</p><p>在项目启动会上，团队达成了两个非常关键的结论：<strong>一个是系统方案选型；另一个是建立协作机制</strong>。</p><p>首先，由于时间紧任务重，我们决定使用更易于协作的前后端分离的开发模式。后来，事实证明，这是一个非常明智的选择。这不仅大幅提升了开发效率，也大大降低了之后向移动端迁移的成本。在开发移动端产品的时候，后端接口大部分都可以直接拿来使用。</p><p>在技术框架方面，由于大家对前后端分离的模式达成了共识，我们就采用<strong>Python+Django+VUE</strong>的方式来做。你可能会问，为啥不用基于Java的Spring系列呢？因为我觉得，对于内部系统来说，这些典型的框架应付起来基本都绰绰有余，关键还是要选你熟悉的、易上手的那个。从这个角度来看，Python显然有着得天独厚的优势。即便之前只是写写脚本，想要上手Python也不是一件困难的事情。</p><p>在项目协作方面，我等会儿会专门提到，由于团队成员分散在北京、上海两地，彼此之间不够熟悉和信任，所以，<strong>建立固定的沟通机制就非常重要</strong>。</p><p>至少，在项目初期，我们每周都要开两次电话会议：</p><ul>\n<li>一次是面向全员的。一方面同步项目的最新进展，另一方面，也给大家一些紧迫感，让大家觉得“其他人都在按照计划执行，自己也不能落后”。</li>\n<li>另外一次是面向跨地域骨干的。这主要还是为了增进联系，并且对一些核心问题进行二次的进展确认。不拉上全员，也是为了避免过多地浪费项目成员的时间。</li>\n</ul><p>最后，项目毕竟还是有一些技术风险的，所以还需要启动预研。我们这个项目的主要风险是在<strong>前端交互</strong>上。</p><p>这是一个从来没人实现过的场景，有大量的用户界面编排操作在里面。所以，我们专门指定了一位同学，让他啥也别想，一门心思地进行技术攻关。</p><p>事实证明，但凡能打硬仗的同事，在后来都是非常靠谱且独当一面的，这与年龄无关，哪怕是应届生，也同样如此。</p><p>讲到这里，我要先给你总结一下在项目启动阶段要重点关注的几件事情：</p><ul>\n<li>明确项目目标，树立团队的信心；</li>\n<li>沟通开发模式和技术架构选型，以快速开发和简单上手为导向；</li>\n<li>建立沟通渠道，保持高频联系；</li>\n<li>识别项目的技术风险，提前开启专项预研。</li>\n</ul><h2>开发策略</h2><p>人类社会活动的每一个环节，都需要越来越多的人为了同一个目标推进工作，软件开发也不例外。那么，我们是怎么做的呢？</p><p>首先，就是<strong>研发环境容器化</strong>。</p><p><strong>对于接触一个全新技术栈的开发来说，本地搭建一套完整可运行的环境总是绕不过去的坎</strong>。即便是对照着文档一步步操作，也总会有遗漏的地方。除此之外，项目依赖的各种中间件，哪怕稍微有一个版本不一致，最后一旦出现问题，就要查很久。</p><p>既然如此，为什么不一上来就采用标准化的环境呢？这就可以发挥容器技术的优势了。主力后台开发同学自己认领了这个任务，先在本地完成环境搭建并调试通过，接着把环境配置容器化。这样一来，新人加入项目后，几分钟就能完成一套可以工作的本地开发环境。即便后续要升级环境组件，比如Django框架版本，也非常简单，只要推送一个镜像上去，再重启本地环境就可以了。\u0010</p><p>其次，就是选择分支策略。虽然DevOps倡导的是主干开发，但是我们还是选择了“三分支”的策略，因为<strong>我们搭建了三套环境</strong>。</p><p>测试环境对应dev分支作为开发主线，所有新功能在特性分支开发，自测通过后，再通过MR到dev分支并部署到测试环境进行验收测试，一般验收测试由需求提出方负责。</p><p>接下来，定期每周两次从dev上master分支，master分支对应了预发布环境，保证跟生产环境的一致性，数据也会定期进行同步。只有在预发布环境最终验收通过后，才具备上线生产环境的条件。通过将master分支合并到release分支，最后完成生产环境部署。这种分支策略的示意图如下：</p><p><img src=\"https://static001.geekbang.org/resource/image/43/25/435d72ddc0b694e4efa84dc8cef3be25.png?wh=1958*914\" alt=\"\"></p><p>为什么要采用三套环境的“三分支”策略呢？</p><p>这里的主要原因就是，团队处于组建初期，磨合不到位，经常会出现前后端配置不一致的情况。更何况，我们这个项目不只有前后端开发，还有核心原子业务开发，以及基础设施维护。任何一方的步调不一致，都会导致出现问题。</p><p>另外，内部平台开发往往有个通病，就是<strong>没有专职测试</strong>。这也能理解，总共才几个人的“草台班子”，哪来的测试资源啊？所以，基本上只能靠研发和产品把关。</p><p>但是，毕竟测试也是个专业的工种，这么一来，总会有各种各样的问题。再加上，产品需求本身就没有那么清晰、灵活多变，所以，<strong>多一套环境，多一套安全</strong>。</p><p>但不可否认的是，这种策略并非是最优解，只不过是适应当时场景下的可行方案。当团队磨合到位，而且也比较成熟之后，就可以简化一条分支和一套环境了。不过，前提是，<strong>只有快速迭代，快速上线，才能发挥两套环境的优势</strong>。</p><blockquote>\n<p>Use what you build to build what you use.（使用你开发的工具来开发你的工具）</p>\n</blockquote><p>这是我们一以贯之的理念。既然是DevOps平台，那么团队也要有DevOps的样子，所以，作为一个全功能团队，研发自上线和研发自运维就发挥到了极致。</p><p>同时，我们并没有使用公司统一的上线流程，而是自己建立了一个标准化的上线流程并固化在工具里面，团队的每一个人都能完成上线动作。</p><p>这样一来，就不会再依赖于某个具体的人员了，这就保持了最大的灵活性。即便赶上大促封网，也不会阻塞正常的开发活动。</p><h2>开发协作流程</h2><p>仅仅是做到上面这几点，还不足以让整个团队高效运转起来，因为<strong>缺少了最重要的研发协作流程</strong>。</p><p>作为项目负责人，我花了很大的精力优化研发协作流程，制定研发协作规范。当这一切正常运转起来后，我发现，这些前期的投入都是非常值得的。</p><p>在工具层面，我们使用了Jira。对于小团队来说，Jira的功能就足够优秀了，可以满足大多数场景的需求。但是Jira的缺点在于，使用和配置门槛稍微有点高。因此，团队里面需要有一个熟悉Jira的成员，才能把这套方法“玩”下去。</p><p>在Jira里面，我们采用了<strong>精益看板加上迭代</strong>的方式，基本上两周一个迭代，保持开发交付的节奏。这种开发工作流刚好适配我们的分支策略和多环境部署。</p><p>需求统一纳入Backlog管理，当迭代开始时，就拖入待开发状态，研发挑选任务启动开发，并进入开发中。当开发完成后，也就意味着功能已经在测试环境部署。这个时候，就可以等待功能验收。只有在验收通过之后，才会发布到预发布环境。并经过二次验收后，最终上线发布给用户。</p><p>开发流程并不复杂，你可以看一下下面这两版流程图。</p><p>图片版：</p><p><img src=\"https://static001.geekbang.org/resource/image/be/98/be2b81f9744fe06876fac21c61a4b798.png?wh=2590*2595\" alt=\"\"></p><p>文字版：</p><p><img src=\"https://static001.geekbang.org/resource/image/ec/8e/ec61ade9f0b2c3b014e27a7ac367298e.png?wh=718*658\" alt=\"\"></p><p>定义好开发工作流之后，接下来，就需要明确原则和规范了。对于一个新组建的团队来说，<strong>规则是消除分歧和误解的最好手段，所以一定要让这些规则足够得清晰易懂</strong>。比如，在我们内部就有一个“3-2-1”原则：</p><p>3：<strong>创建</strong>任务三要素</p><ul>\n<li>有详细的问题说明和描述</li>\n<li>有清晰的验收标准</li>\n<li>有具体的经办人和迭代排期</li>\n</ul><p>2：<strong>处理</strong>任务两要素</p><ul>\n<li>在开发中，代码变更要关联Jira任务号</li>\n<li>在开发完成后，要添加Jira注释，说明改动内容和影响范围</li>\n</ul><p>1：<strong>解决</strong>任务一要素</p><ul>\n<li>问题报告人负责任务验收关闭</li>\n</ul><p>当然，团队规则远不止这几条。你要打造自己团队内部的规则，并且反复地强调规则，帮助大家养成习惯。这样一来，你会发现，<strong>研发效率提升和自组织团队都会慢慢成为现实</strong>。</p><p>除此之外，<strong>你也不要高估人的主动性，期望每个人都能自觉地按照规则执行</strong>。所以，定期和及时的提醒就非常必要。比如，每天增加定时邮件通知，告诉大家有哪些需求需要验收，有哪些可以上线发布，尽量让每个人都明白应该去哪里获取最新的信息。</p><p>另外，每次开周会时，都要强调规则的执行情况，甚至每天的站会也要按需沟通。只有保持短促、高频的沟通，才能产生理想的效果。</p><h2>产品运营策略</h2><p>关于产品运营策略，“酒香不怕巷子深”的理念已经有些过时了。想要一个产品获得成功，<strong>团队不仅要做得好，还要善于运营和宣传，而这又是技术团队的一大软肋</strong>。</p><p>开发团队大多只知道如何实现功能，却不知道应该怎么做产品运营。往往也正因为如此，团队很难获取用户的真实反馈，甚至开发了很多天才的功能，用户都不知道。产品开发变成了“自嗨”，这肯定不符合产品设计的初衷。</p><p>考虑到这些，我们在平台运营的时候，也采取了一些手段。我想提醒你的是，<strong>很多事情其实没有没有多难，关键就看有没有想，有没有坚持做</strong>。</p><p>比如，你可以建立内部用户沟通群，在产品初期尽量选择一些活跃的种子用户来试用。那些特别感兴趣、愿意尝试新事物、不断给你提建议的都是超级用户。这些用户未来都是各个团队中的“星星之火”，<strong>在项目初期，你一定要识别出这些用户</strong>。</p><p>另外，每一次上线都发布一个release notes，并通过邮件和内部沟通群的方式通知全员，一方面可以宣传新功能，另一方面，也是很重要的一方面，<strong>就是保持存在感的刷新</strong>。你要让用户知道这个产品是在高速迭代的过程中的，而且每次都有不一样的新东西，总有一样会吸引到他们，或者让他们主动提出自己的问题。</p><p>在用户群里面，注意要及时响应用户的问题。你可以在团队内部建立OnCall机制，每周团队成员轮值解决一线用户的问题，既可以保证问题的及时收敛，也能让远离用户的开发真真切切地听到用户的声音。这样的话，在需求规划会和迭代回顾会的时候，开发就会更多地主动参与讨论。</p><p>以上这些都是比较常规的手段，在我们的产品运营中，还有两个方法特别有效，我也推荐给你。</p><p>平台运营就跟打广告是一样的，越是在人流最大、关注度最高的地方打广告，效果也就越好。每个公司一般都有类似的首页，比如公司内部的技术首页、技术论坛、日常办公的OA系统等等，这些地方其实都会有宣传的渠道和入口。<strong>你要做的就是找到这个入口，并联系上负责这个渠道的人员</strong>。我们的产品就一度实现了热门站点的霸屏，宣传效果非常明显，用户量直线上升。</p><p><img src=\"https://static001.geekbang.org/resource/image/ac/c6/aca17122846f83e9d8700af0ad3952c6.png?wh=1518*596\" alt=\"\"></p><p>另一个方法有些取巧，但对于技术团队来说，也非常适用，那就是<strong>通过技术分享的渠道来宣传产品</strong>。</p><p>相信每个团队都会有定期的技术分享渠道，或者是技术公众号等，<strong>你可以把平台的核心技术点和设计思想提炼出来，拟定一个分享话题，并在内部最大范围的技术分享渠道中进行分享</strong>。</p><p>很多时候，单纯地宣传一个产品，很多人是“不感冒”的。但是，如果你在讲一些新技术，并结合产品化落地的事情，对技术人员的吸引力就会大很多。所以，<strong>换个思路做运营，也是提升产品知名度的好方法</strong>。我把我之前总结的产品运营渠道和手段汇总成了一幅脑图，也分享给你。</p><p><img src=\"https://static001.geekbang.org/resource/image/67/27/676b53d64ba520cc1c56d429b5d01a27.png?wh=2428*3934\" alt=\"\"></p><h2>团队文化建设</h2><p>最后，我想再跟你简单聊聊团队文化建设的事情。毕竟，无论什么样的工具、流程、目标，最终都是依靠人来完成的。<strong>如果忽略对人的关注，就等同于本末倒置，不是一个成熟的团队管理者应该做的事情</strong>。我给你分享我的两点感受。</p><p><strong>1.让专业的人做专业的事情</strong></p><p>很多时候，千万不要小看专业度这个事情。任何一个组织内部的职能都需要专业能力的支撑，这些专业能力都是量变引发的质变。</p><p>我举个最简单的例子，你还记得我在前面提到的0.2版本的原型草稿吗？实际上，到了0.3版本，引用前端工程师话来说，“原型做得比系统还漂亮”。这是为什么呢？难道是我这个“半吊子”产品经理突然开窍了吗？</p><p>显然不是。其实答案很简单，就是我去找了专业产品经理做外援，让他帮我改了两天的原型图。对于专业的人来说，这些事情再简单不过了。</p><p>找专业的人来做这些事情，不仅可以帮助你快速地跨越鸿沟，也能留下很多现成的经验，供你以后使用，这绝对不是一个人埋头苦干可以做得到的。</p><p>不仅是产品方面，技术领域也是一样的。<strong>我们要勇于承认自己的无知，善于向别人求助，否则到头来，损失的时间和机会都是自己买单，得不偿失</strong>。</p><p><strong>2.抓大放小，适当地忽略细节</strong></p><p>在协作的过程中，团队总会在一些细节上产生冲突。如果任由团队成员在细节上争论不休，久而久之，就会影响团队之间的信任感。这个时候，就需要引导团队将注意力集中在大的方向上，适当地暂缓细节讨论，以保证团队的协作效率。</p><p>比如，一个业务逻辑是放在前端处理，还是放在后端处理，结果并没有太大区别，说白了，就是放在哪儿都行。但是，前端同学会坚持认为，逻辑处理都应该由后端来解决，以降低前端和业务的耦合性，这样说也没有错。可是，后端同学也会有自己的想法，比如针对前端拦截器的处理机制，后端到底要不要配合着返回前端要求的返回码，而不是直接抛出http原始的返回码呢？</p><p>类似的这些问题，没有谁对谁错之分，但是真要是纠结起来，也不是一两句话就能说清楚的。</p><p>这个时候，就需要有人拍板，选择一条更加符合常规的方式推进，并预留出后续的讨论空间。甚至，为了促进多地合作，自己人这边要适当地牺牲一些，以此来换取合作的顺利推进。这样一来，你会发现，有些不可调和的事情，在项目不断成功、人员不断磨合的过程中，也就不是个事情了。</p><h2>总结</h2><p>在这一讲中，关于如何开发产品，可以说，我是把自己在过去几个项目经历中的总结倾囊相授了。</p><p>其实，就像我在讲“<a href=\"https://time.geekbang.org/column/article/151398\">DevOps工程师需要的技能</a>”中提到的那样，软实力（比如沟通协作、同理心、持续改进等）对促进产品快速迭代开发演进有着重大的作用。作为非专业产品经理，我也在慢慢地积累自己的产品心经，有机会再给你好好聊聊。</p><p>你可能还在想，最终千人的目标是否实现了呢？我想说的是，有些时候，真实生活比故事还要精彩。</p><p>就在预订目标的倒数第二天，平台用户只有997个。当时，我跟同事吐槽这个数字，他们说要不要拉几个用户进来，我说：“算了吧，随它去吧。“结果你猜怎样？在当天周五下班的时候，我又去平台上看了一眼，不多不少刚好1000个注册用户。当时我的第一感觉就是，<strong>要相信，当我们把自己的全身心和热情都灌注在一个产品的开发过程中时，美好的事情会自然而然地发生</strong>。</p><h2>思考题</h2><p>你对这一讲的哪部分内容印象最深刻呢？你有什么其他有助于产品快速研发落地的观点吗？</p><p>欢迎在留言区写下你的思考和答案，我们一起讨论，共同学习进步。如果你觉得这篇文章对你有所帮助，也欢迎你把文章分享给你的朋友。</p><p></p>","comments":[{"had_liked":false,"id":162962,"user_name":"心在飞","can_delete":false,"product_type":"c1","uid":1001630,"ip_address":"","ucode":"80551D24593175","user_header":"https://static001.geekbang.org/account/avatar/00/0f/48/9e/99cb0a7a.jpg","comment_is_top":false,"comment_ctime":1576635264,"is_pvip":false,"replies":[{"id":"67653","content":"感谢你毫无保留的总结😄 非常清晰，为你点赞哈，作为一个有心人，祝你新的一年里面事业有成，突飞猛进哈！","user_name":"作者回复","user_name_real":"石雪峰","uid":"1117795","ctime":1579853420,"ip_address":"","comment_id":162962,"utype":1}],"discussion_count":1,"race_medal":0,"score":"27346439040","product_id":100036601,"comment_content":"印象最深：把自己的全部精力和热情投入到一件事情上的时候，结果通常不会太坏。<br>觉得石老师做的比较好的：产品需求、技术风险、开发流程、开发工具、团队建设。<br>产品需求：一开始有个初步的需求，不断迭代、清晰。<br>技术风险：能在项目早期消除该项目用到所有技术的技术风险<br>开发流程：敏捷软件开发，精益看板，明确分支策略、异地团队简间的沟通、合作机制（一周一次会议）<br>开发工具：jira docker Python Django Vue 其他工具未知。。。<br>团队建设：沟通、信任、放权、模棱两可的时候拍板<br>以上是我的理解😊。<br>感谢石老师毫无保留地倾囊相授。","like_count":7,"discussions":[{"author":{"id":1117795,"avatar":"https://static001.geekbang.org/account/avatar/00/11/0e/63/cef8f0f4.jpg","nickname":"石雪峰","note":"","ucode":"2B3EA5B86D9A0A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":478190,"discussion_content":"感谢你毫无保留的总结😄 非常清晰，为你点赞哈，作为一个有心人，祝你新的一年里面事业有成，突飞猛进哈！","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1579853420,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":163235,"user_name":"陈斯佳","can_delete":false,"product_type":"c1","uid":1259323,"ip_address":"","ucode":"C236F874FC767A","user_header":"https://static001.geekbang.org/account/avatar/00/13/37/3b/495e2ce6.jpg","comment_is_top":false,"comment_ctime":1576674035,"is_pvip":false,"replies":[{"id":"67650","content":"有一个特别经典的问题，你如何判断现在工作是否给你提供了足够的挑战和空间，答案就是看你现在的生活是否足够安逸，有挑战的工作是不会让你安逸下来的，要经常提醒自己这一点哈，当然啦，劳逸结合也是必要的，提前祝你新年快乐哈！","user_name":"作者回复","user_name_real":"石雪峰","uid":"1117795","ctime":1579853032,"ip_address":"","comment_id":163235,"utype":1}],"discussion_count":1,"race_medal":0,"score":"23051510515","product_id":100036601,"comment_content":"“事实证明，但凡能打硬仗的同事，在后来都是非常靠谱且独当一面的，这与年龄无关，哪怕是应届生，也同样如此。” 活的久了越来越发现，成长和年龄其实没有必然的联系。有些人虽然很年轻，但是有自己的思考框架和处事原则，积极主动愿意承担责任，事后会复盘，持续在迭代，这时候时间就是Ta的朋友；而有些人行事随性，做事挑肥拣瘦，逃避责任，得过且过，永远也不去反思，吃一堑，只长肉不涨智，这时候时间就是Ta的敌人。<br>","like_count":6,"discussions":[{"author":{"id":1117795,"avatar":"https://static001.geekbang.org/account/avatar/00/11/0e/63/cef8f0f4.jpg","nickname":"石雪峰","note":"","ucode":"2B3EA5B86D9A0A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":478310,"discussion_content":"有一个特别经典的问题，你如何判断现在工作是否给你提供了足够的挑战和空间，答案就是看你现在的生活是否足够安逸，有挑战的工作是不会让你安逸下来的，要经常提醒自己这一点哈，当然啦，劳逸结合也是必要的，提前祝你新年快乐哈！","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1579853032,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":163236,"user_name":"陈斯佳","can_delete":false,"product_type":"c1","uid":1259323,"ip_address":"","ucode":"C236F874FC767A","user_header":"https://static001.geekbang.org/account/avatar/00/13/37/3b/495e2ce6.jpg","comment_is_top":false,"comment_ctime":1576674070,"is_pvip":false,"replies":[{"id":"67649","content":"文档即过时，这话一点不假。。。正因为这样，才出现了自动化文档生成的技术，比如类似swagger这类工具，都是为了保证代码和文档的实时同步的，我认为这也是未来的一个比较好的方向哈。","user_name":"作者回复","user_name_real":"石雪峰","uid":"1117795","ctime":1579852908,"ip_address":"","comment_id":163236,"utype":1}],"discussion_count":1,"race_medal":0,"score":"14461575958","product_id":100036601,"comment_content":"“研发环境容器化”这真是一个很好的思路。真像老师所说的，在做环境部署的时候，文档再怎么详尽，都会被一两个不起眼的小坑绊倒，而且可能要很久才能再爬起来。现在想想敏捷宣言里面提到的“working software over comprehensive documentation”，放在运维文档也是一样，繁琐不变的文档永远都赶不上瞬息万变的环境…","like_count":3,"discussions":[{"author":{"id":1117795,"avatar":"https://static001.geekbang.org/account/avatar/00/11/0e/63/cef8f0f4.jpg","nickname":"石雪峰","note":"","ucode":"2B3EA5B86D9A0A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":478311,"discussion_content":"文档即过时，这话一点不假。。。正因为这样，才出现了自动化文档生成的技术，比如类似swagger这类工具，都是为了保证代码和文档的实时同步的，我认为这也是未来的一个比较好的方向哈。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1579852908,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":163515,"user_name":"johnny","can_delete":false,"product_type":"c1","uid":1210226,"ip_address":"","ucode":"54E78B7BBC6AF0","user_header":"https://static001.geekbang.org/account/avatar/00/12/77/72/8f77ddb0.jpg","comment_is_top":false,"comment_ctime":1576736033,"is_pvip":false,"replies":[{"id":"63836","content":"你好，回答你的问题如下：<br>1. 出现Bug，要看Bug的严重程度，如果一般的问题，那么跟正常开发需求一样，从dev，到master再到release就可以了，但如果非常紧急的Bug，那就反过来，在Release上拉出hotfix分支，然后上线后再反向合并回master，dev<br>2. AutoMerge是全量的合并，而并非挑选部分特性哈，如果想实现基于特性的AutoMerge，这对特性的管理要求很高。具体你可以这样实现，首先每个特性的开发都在特性分支上完成，然后特性的交付是以特性分支向主干合并为标志的，那么如果你希望挑选几个特性，那么就合并提交特性分支即可。但这可没这么简单，首先特性的依赖要处理好，其次，特性的颗粒度要足够小，发布频率足够快，第三，避免有些特性长期不合并导致的多分支差异变大的情况。","user_name":"作者回复","user_name_real":"石雪峰","uid":"1117795","ctime":1577548392,"ip_address":"","comment_id":163515,"utype":1}],"discussion_count":1,"race_medal":0,"score":"10166670625","product_id":100036601,"comment_content":"老师。关于文中提到的三分支策略，我有两个问题，期待老师的回答。<br>1.出现bug，是不是新增加一个bugfix的特性分支进行修复，修复完后把代码合并到dev分支？<br>2.在dev分支AutoMerge到master分支（或者master分支AutoMerge到release分支）时，是将分支的代码全部合并过去，还是挑选一部分特性的代码合并过去，如果是挑选一部分代码，怎么挑选？<br><br>比如：我只想从dev分支中挑选一部分特性合并到master分支；或者只从master分支中挑选一部分特性合并到release分支，该如何挑选出这些特性代码？","like_count":3,"discussions":[{"author":{"id":1117795,"avatar":"https://static001.geekbang.org/account/avatar/00/11/0e/63/cef8f0f4.jpg","nickname":"石雪峰","note":"","ucode":"2B3EA5B86D9A0A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":478426,"discussion_content":"你好，回答你的问题如下：\n1. 出现Bug，要看Bug的严重程度，如果一般的问题，那么跟正常开发需求一样，从dev，到master再到release就可以了，但如果非常紧急的Bug，那就反过来，在Release上拉出hotfix分支，然后上线后再反向合并回master，dev\n2. AutoMerge是全量的合并，而并非挑选部分特性哈，如果想实现基于特性的AutoMerge，这对特性的管理要求很高。具体你可以这样实现，首先每个特性的开发都在特性分支上完成，然后特性的交付是以特性分支向主干合并为标志的，那么如果你希望挑选几个特性，那么就合并提交特性分支即可。但这可没这么简单，首先特性的依赖要处理好，其次，特性的颗粒度要足够小，发布频率足够快，第三，避免有些特性长期不合并导致的多分支差异变大的情况。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1577548392,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":162725,"user_name":"leslie","can_delete":false,"product_type":"c1","uid":1324255,"ip_address":"","ucode":"798E7C1CC98CC2","user_header":"https://static001.geekbang.org/account/avatar/00/14/34/df/64e3d533.jpg","comment_is_top":false,"comment_ctime":1576581496,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"10166516088","product_id":100036601,"comment_content":"     内容很精辟：老师如果长期夹在产品与研发、销售与研发、研发与运维之中，整个的过程会更加的顺利的。电商的数年一直处于此种角色，由于工作中的随和且都做任何事情都绕不开需要数据部门做支持，导致长期在几方之间协调，不知不觉锻炼出了整体的格局观和效率沟通能力。<br>     最近学习产品和项目管理课程时：自己就明显感受到这点。虽然之前没有专门的去学产品、运营，可是之前一直处于他们和研发部门的沟通协调中，让我觉得不少知识都不陌生只是不知道相关理论而已。<br>    谢谢老师今天的分享：期待后续课程的学习。","like_count":2},{"had_liked":false,"id":222608,"user_name":"送普选","can_delete":false,"product_type":"c1","uid":1220775,"ip_address":"","ucode":"AB2C98BB9C3A5D","user_header":"https://static001.geekbang.org/account/avatar/00/12/a0/a7/db7a7c50.jpg","comment_is_top":false,"comment_ctime":1590848793,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"5885816089","product_id":100036601,"comment_content":"老师有哪些踩过的坑可以分享下，导致那些问题，复盘后如何避免？谢谢。","like_count":1},{"had_liked":false,"id":163233,"user_name":"陈斯佳","can_delete":false,"product_type":"c1","uid":1259323,"ip_address":"","ucode":"C236F874FC767A","user_header":"https://static001.geekbang.org/account/avatar/00/13/37/3b/495e2ce6.jpg","comment_is_top":false,"comment_ctime":1576673983,"is_pvip":false,"replies":[{"id":"62864","content":"每个人都值得拥有一次急行军呀，IT人员的热情就在于全情投入，不是吗😝","user_name":"作者回复","user_name_real":"石雪峰","uid":"1117795","ctime":1577145948,"ip_address":"","comment_id":163233,"utype":1}],"discussion_count":1,"race_medal":0,"score":"5871641279","product_id":100036601,"comment_content":"老师这篇文章真是看的让人热血沸腾！","like_count":2,"discussions":[{"author":{"id":1117795,"avatar":"https://static001.geekbang.org/account/avatar/00/11/0e/63/cef8f0f4.jpg","nickname":"石雪峰","note":"","ucode":"2B3EA5B86D9A0A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":478309,"discussion_content":"每个人都值得拥有一次急行军呀，IT人员的热情就在于全情投入，不是吗😝","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1577145948,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":162515,"user_name":"AlphaLiu","can_delete":false,"product_type":"c1","uid":1127786,"ip_address":"","ucode":"B75A4C82E7DC03","user_header":"https://static001.geekbang.org/account/avatar/00/11/35/6a/8ab55564.jpg","comment_is_top":false,"comment_ctime":1576547690,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"5871514986","product_id":100036601,"comment_content":"看完这一篇，更加期待老师的实战篇！","like_count":1},{"had_liked":false,"id":162446,"user_name":"t86","can_delete":false,"product_type":"c1","uid":1261927,"ip_address":"","ucode":"B336666DC5FFFA","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTIo6P1BKTjzM5QagaoM99aFmiaTIzpJ7hMG81Hhx9PwCsNjkrpmDPxVHAbQ2MWIKJEYSf5cES9dA7Q/132","comment_is_top":false,"comment_ctime":1576539438,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"5871506734","product_id":100036601,"comment_content":"👍，期待下一讲石老师的实战历程","like_count":1},{"had_liked":false,"id":272776,"user_name":"Geek_bc63a1","can_delete":false,"product_type":"c1","uid":2333678,"ip_address":"","ucode":"450F120047252E","user_header":"https://thirdwx.qlogo.cn/mmopen/vi_32/iaRiaKz5VweoRNz2NibVZh6N63MMh1s5evKBfaMXZTBwSoZcib10h1Me4SpZjZv95krQxMpvDxTrN3ia9VNG56icnk7w/132","comment_is_top":false,"comment_ctime":1610273199,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1610273199","product_id":100036601,"comment_content":"不会做运营的产品经理不是个好设计师~","like_count":0},{"had_liked":false,"id":240151,"user_name":"Geek_599062","can_delete":false,"product_type":"c1","uid":1137592,"ip_address":"","ucode":"B8C8A6750DB713","user_header":"https://static001.geekbang.org/account/avatar/00/11/5b/b8/7b39de23.jpg","comment_is_top":false,"comment_ctime":1596771311,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1596771311","product_id":100036601,"comment_content":"不错的分享，产品经理的日常","like_count":0},{"had_liked":false,"id":223080,"user_name":"桃子-夏勇杰","can_delete":false,"product_type":"c1","uid":1158436,"ip_address":"","ucode":"5D5F38AABA980F","user_header":"https://static001.geekbang.org/account/avatar/00/11/ad/24/c6b763b4.jpg","comment_is_top":false,"comment_ctime":1590996830,"is_pvip":true,"discussion_count":0,"race_medal":0,"score":"1590996830","product_id":100036601,"comment_content":"其实最感兴趣的是老师没有讲出来的部分，这个平台最初的MVP是什么样子的，解决了用户什么样的核心诉求，后续开发又开发了一些什么功能，都解决了一些什么问题。","like_count":0},{"had_liked":false,"id":173031,"user_name":"linda.zx","can_delete":false,"product_type":"c1","uid":1026440,"ip_address":"","ucode":"257AF7B2038421","user_header":"https://static001.geekbang.org/account/avatar/00/0f/a9/88/8cfb565f.jpg","comment_is_top":false,"comment_ctime":1579413295,"is_pvip":false,"replies":[{"id":"67635","content":"没错，以后不会做运营的产品经理都不是合格的产品经理，因为很多时候产品功能都需要搭配运营功能，比如：关键数据的埋点等等。如果一开始就没有考虑这个因素，那么产品迭代越来越快，你很难知道究竟哪些功能是有价值的，哪些是拍脑袋拍出来的。再加上A&#47;B测试，原型验证和数据分析，线上监控的手段越来越丰富，提供给产品的选项也越来越多。要相信，做得好，也要说得好，这一点在任何地方都是很重要的。","user_name":"作者回复","user_name_real":"石雪峰","uid":"1117795","ctime":1579850362,"ip_address":"","comment_id":173031,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1579413295","product_id":100036601,"comment_content":"这篇对于产品运营策略感受最深，以前做过2个内部使用的系统，满怀信心的上线却无人问津，想找人吐吐槽都没有。那个时候很简单的就认为产品经理只要负责产品优秀，推广运营的事情都是市场部门的活。现实打了个很响的巴掌，嘲笑当时的天真，现在努力不断了解如何给自己的产品做运营，找天使用户，找渠道，找合作者～","like_count":0,"discussions":[{"author":{"id":1117795,"avatar":"https://static001.geekbang.org/account/avatar/00/11/0e/63/cef8f0f4.jpg","nickname":"石雪峰","note":"","ucode":"2B3EA5B86D9A0A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":481934,"discussion_content":"没错，以后不会做运营的产品经理都不是合格的产品经理，因为很多时候产品功能都需要搭配运营功能，比如：关键数据的埋点等等。如果一开始就没有考虑这个因素，那么产品迭代越来越快，你很难知道究竟哪些功能是有价值的，哪些是拍脑袋拍出来的。再加上A/B测试，原型验证和数据分析，线上监控的手段越来越丰富，提供给产品的选项也越来越多。要相信，做得好，也要说得好，这一点在任何地方都是很重要的。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1579850362,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":163237,"user_name":"陈斯佳","can_delete":false,"product_type":"c1","uid":1259323,"ip_address":"","ucode":"C236F874FC767A","user_header":"https://static001.geekbang.org/account/avatar/00/13/37/3b/495e2ce6.jpg","comment_is_top":false,"comment_ctime":1576674098,"is_pvip":false,"replies":[{"id":"67652","content":"这就好比人人都在用苹果电脑，但没几个人是真正会用的一样，但这恰恰是一个好产品应该具备的特征，易于上手，难于精通，空间足够。","user_name":"作者回复","user_name_real":"石雪峰","uid":"1117795","ctime":1579853258,"ip_address":"","comment_id":163237,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1576674098","product_id":100036601,"comment_content":"“关于产品运营策略，‘酒香不怕巷子深’的理念已经有些过时了。想要一个产品获得成功，团队不仅要做得好，还要善于运营和宣传，而这又是技术团队的一大软肋。” 很赞成。对这个观点最有感触的时候是在我学习Linux的时候发现居然有这么那么有用的功能居然没人知道！","like_count":0,"discussions":[{"author":{"id":1117795,"avatar":"https://static001.geekbang.org/account/avatar/00/11/0e/63/cef8f0f4.jpg","nickname":"石雪峰","note":"","ucode":"2B3EA5B86D9A0A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":478312,"discussion_content":"这就好比人人都在用苹果电脑，但没几个人是真正会用的一样，但这恰恰是一个好产品应该具备的特征，易于上手，难于精通，空间足够。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1579853258,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":163003,"user_name":"sugar","can_delete":false,"product_type":"c1","uid":1361699,"ip_address":"","ucode":"E338DAC49A6536","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTLlOgnD0Xia5qqKfmkbckulLzRyedS6K0RiaV7mycY5FtvoJHSFUdcfWPwNwH9oP3hsL5v37OLzXHyQ/132","comment_is_top":false,"comment_ctime":1576639135,"is_pvip":false,"replies":[{"id":"62866","content":"说的没错，一个人的价值不就是他能解决的问题的价值吗😝","user_name":"作者回复","user_name_real":"石雪峰","uid":"1117795","ctime":1577146177,"ip_address":"","comment_id":163003,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1576639135","product_id":100036601,"comment_content":"不仅仅是学习devops的知识，更是一种思路和解决问题的方式方法","like_count":0,"discussions":[{"author":{"id":1117795,"avatar":"https://static001.geekbang.org/account/avatar/00/11/0e/63/cef8f0f4.jpg","nickname":"石雪峰","note":"","ucode":"2B3EA5B86D9A0A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":478210,"discussion_content":"说的没错，一个人的价值不就是他能解决的问题的价值吗😝","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1577146177,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":162591,"user_name":"许童童","can_delete":false,"product_type":"c1","uid":1003005,"ip_address":"","ucode":"4B799C0C6BC678","user_header":"https://static001.geekbang.org/account/avatar/00/0f/4d/fd/0aa0e39f.jpg","comment_is_top":false,"comment_ctime":1576561695,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1576561695","product_id":100036601,"comment_content":"很喜欢这种从无到有做一个产品的感觉，没有什么历史束缚，可以自由发挥自己的思想和主动性。","like_count":0}]}