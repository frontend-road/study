{"id":494558,"title":"01｜低代码平台到底是什么样的？","content":"<p>你好，我是陈旭。</p><p>今天我们正式开始了对低代码的学习。与某种具体技术不同，对于低代码的概念，业界至今没有达成一致意见（我估计以后也不会，这是低代码的职能所决定的）。</p><p>但作为低代码的学习者，甚至是架构者，我们需要对低代码平台到底是什么有一个清晰且深入的了解。这也就是我们第一节课的任务。这节课里，我会通过对低代码平台进行归类带你厘清低代码的概念，并带你分析当前低代码的发展现状，让你在脑海里建立起对低代码的直观印象。</p><p>正如开篇词所说，我们这门课的所有内容都侧重于低代码的架构、策略和技术的实现。所以，对低代码是啥理解得越清楚，相应地，你就越容易理解我所作出的架构和策略选择，以及为啥要采用特定的技术实现选型。反之，在概念理解有误的情况下，后续的内容有可能使你陷入目标与执行相互矛盾的困境，难以自拔。</p><h2>什么是低代码</h2><p>要讲清楚一个模糊的概念，一个有效的手段就是先应该尝试对它，以及相关的概念进行归类，然后比对，从比对中得出关键差异。</p><p>但要对低代码做分类，并不容易。由于低代码概念和内涵未达成一致，业界对它进行归类的方式也多种多样。这里，我以我理解的低代码的几个重要特征作为维度，对低代码进行归类，同时你也能通过这些分析，了解我们这门课要实现的低代码平台到底是啥样的。</p><!-- [[[read_end]]] --><h3>按代码量的维度来分类</h3><p>这个维度下，App的开发模式可以分为三种：纯代码（Pro Code）、低代码（Low Code）、无代码（No Code）。</p><p>这三者有着巨大的差别，我们需要非常准确地将它们分开。纯代码是这个维度下的一个基准概念，它指的是用传统的手工编码的模式开发应用。而低代码和无代码比较容易搞混。</p><p>从中英文字面上说，无代码意味着App的开发过程没有代码参与。但是这样的理解比较粗浅，为了获取更加权威的理解，我尝试从头部分析机构Forrester和Gartner发布的报告中，查找与无代码相关的调查报告，但一无所获，不知道是不是这些头部机构并不认可无代码这个概念。</p><p>低代码模式下的App开发过程需要有代码参与，特别是面对一些复杂的业务逻辑的时候，通过表达式或者直接编码的方式来表达，反而更加清晰。而无代码模式开发App的全过程，没有任何代码的参与，不仅是从开发者角度看是这样的，从无代码内部的实现方式看，也是这样的。</p><p>严格来说，把采用无代码模式生成App的过程称为开发是不恰当的，因为它只是对已有原子业务能力进行二次组合，形成具有特定功能的新业务而已。因此从这个角度来说，<strong>低代码和无代码完全不是一种东西，切不可将这两者混为一谈</strong>。</p><p>但有一个情况非常容易混淆低代码和无代码。当低代码的成熟度到一定高度时，在某些细分场合下也可以实现零代码开发。在这个情况下，从App开发过程的表现看，这二者差异微小，此时最容易将两者混淆。当然，我们也不排除一些低代码解决方案提供商为了夸大其低代码的效果，故意将二者混为一谈，把无代码当作一个噱头来宣传。实际上，低代码模式要将一个场景做到零代码，难度非常大，并且有诸多业务前提。</p><p><strong>在代码量这个维度下，我们专栏所说的低代码是指这3个分类中的“低代码（Low Code）”这一类。</strong></p><h3>按适用范围的维度来分类</h3><p>这个维度下，低代码平台可以分为专用型和通用型两种。</p><p>所谓通用，指的是开发平台不事先假设自身只能应用在特定的场景、业务、行业，而是具有广泛的适用范围。</p><p>具有这样特征的开发平台往往需要有一个通用的底座。这个底座是纯技术性的，它不依赖于特定的业务功能，而只与业界广泛使用的标准协议、技术标准产生耦合。不过，这个时候，我们只有深入平台架构实现的细节，才能判断平台到底是低代码还是无代码，这就导致平台的使用者难以甄别（注意，我这里的目的不是想告诉你如何甄别，而是为了告诉你这门课所说的低代码平台具有的特征）。</p><p>但是，通用是有代价的，越通用就往往意味着在特定业务场景下的效率越低，越通用就意味着默认配置里的个性化信息越少，为形成某个具体场景所需的配置量就越大，从这个具体场景的角度看，效率相应也就越低。</p><p>所以通用型的低代码平台往往伴生着这个特征：有相对完善的有插件（或类似）机制。这一点相对来说比较好识别，相对高通用性的技术底座来说，插件是廉价的，因此通用性低代码平台往往会有数量众多的插件。这些插件可以定制出各式各样具体的业务场景，通过插件的定制化和扩展性来解决效率问题。</p><p><strong>这个维度下，这门课所说的低代码指的是通用型开发平台，它具有一个通用性非常高的底座，和一个相对完善的插件机制。</strong></p><h3>按输出的App的类型来分类</h3><p>其实，在一个具有较高通用适用范围的低代码平台来说，按照输出App类型分类几乎是没有意义的。之所以不得不按输出App类型分类，是因为开发平台的通用性不足，而在有了足够高的通用适用性之后，支持开发各种类型App的问题，就不在于能不能了，而只是时间问题。</p><p>尽管我们这门课所说的低代码指的是“通用型”这一类，但这并不影响我们看看现在业界其他低代码平台都可以输出哪些类型的App，大概有流程驱动型、表单驱动型、模型驱动（ORM）型、BI分析类型这几种，具体你可以看看这张表格（5星为满分）：</p><p><img src=\"https://static001.geekbang.org/resource/image/10/51/1047e37c0e889165117byyyyyyc27e51.jpg?wh=1896x853\" alt=\"图片\"></p><p>这里，我主要给你区分一下表单驱动型和模型驱动型这两个类型，因为它们比较容易混淆。</p><p>所谓模型驱动型App，它的模型指的是数据模型，或是数据关系。而这里所说的关系，指的就是符合三范式的关系型数据库的关系，也就是你数据库中各个数据表之间的关系，比如表1的a字段和表2的a字段是相同的，但与表3中的a字段没有关系。在正确配置了各种数据关系之后（这个过程一般称为数据建模），页面上就可以很容易创建各种CRUD（增删改查）类App了。</p><p>表单类App则是仅以数据为中心，创造各种表单来收集或呈现数据。这里的关键点在于，这类App并不关注数据之间的关系。所以表单类的App非常容易形成数据孤岛，并存在大量冗余数据，以及大量数据不一致性等问题。如果我们将表单类App做得比较完善的话，实际上它就会逐渐转型成模型驱动类App了。在完成数据建模之后，我们就分不清楚它到底是模型驱动还是表单驱动了，差异只是前端是用表单展示，还是表格展示而已。</p><h3>按使用者的类型来分类</h3><p>如果按照使用者的类型进行分类，我们可以将开发平台的使用者分为3类：专业技术人员，业务技术员，相关无专业技能人员。</p><p>这里所说的业务技术员是一种正在兴起的角色，它是指构建供内部和外部业务使用的技术或分析功能的非IT部门员工。他们担任着装备和赋能非IT资源以构建数字化能力的战略角色。</p><blockquote>\n<p><a href=\"https://mp.weixin.qq.com/s/RZtt69T4QxPRq8Zum6bJjw\">根据Gartner的研究</a>：41%的员工可以被称为业务技术人员，不过这一比例在不同行业可能存在很大差异。例如在政府部门等技术密集度较低的行业，这一比例接近25%，但在能源等IT密集型行业，这一比例接近50%。</p>\n</blockquote><p>多数的无代码开发平台将业务技术员作为主要的用户群，为他们提供对已有业务的二次组合为主的基础开发能力，一般具有专业技能的开发人员是不会使用无代码开发平台的，因为专业技能者要面对的问题域已经大大超出了无代码平台的能力范围。</p><p>而低代码开发平台一般会将专业技术人员和业务技术员同时作为他们的客户群，并以专业技术人员为主要用户群，业务技术员为次要用户群。</p><p>随着低代码开发平台的成熟度上升，业务技术员用户群的占比会有所上升。因为成熟度高的低代码平台，不仅有各式各样的可视化工具来降低业务研发的难度和代码量，同时对业务研发生命周期各个环节的覆盖也会越来越完整。从开发到测试，从测试到上线，再到高容错运行时自动化部署/恢复、运行时自动化运维等各个环节的可视化、自动化完成，这为无IT技能的业务技术员独立开发提供了可能性。同时，越发完善的可视化自动化能力不仅会牢牢抓住已有的专业技能用户，还会吸引更多的专业技能用户的加入。</p><p><strong>这个维度下，这门课所说的低代码是以专业技术人员为主要用户群的一类平台</strong>。不过，在写这篇文稿的时候，我负责的低代码平台正在努力将业务技术员纳入到它的用户群中，但是这项工作才刚起步不久，当前尚没有特别成熟的经验可以分享。但这是一个动态专栏，在未来几年还会保持更新，我会在合适时机，及时把我在拓展更多用户群方面的经验分享给你。</p><p><img src=\"https://static001.geekbang.org/resource/image/9e/e9/9eea2218ecf1dfb103b40b3f1270bde9.jpg?wh=3275x2250\" alt=\"\"></p><p><strong>现在我们来总结一下，我们这门课要实现的低代码平台到底是怎么样的。它是一个以专业技术人员为主要用户群的通用型低代码平台，它会有一个通用性非常高的底座，和一个相对完善的插件机制。</strong></p><p>我这里还要再解释一下，在后续的内容中，我可能还会提到低代码工具和低代码平台，对于这两个概念，我所指的内涵是一致的，区别就在于规模和成熟度。<strong>低代码工具</strong>指代规模较小、成熟度较低的低代码实现，而<strong>低代码平台</strong>则指代规模较大、功能较完善、程度较高的低代码实现。</p><p>了解了行业内对低代码的几个分类，以及我们这门课的低代码平台的定义后，我们再来简单看看低代码的历史演进和现状，让你对低代码和低代码行业有更进一步的理解。</p><h2>低代码的发展</h2><p>在低代码的发展上，我们可以从基础设施的演进、时间和地域，以及中台的演进这三个方面一探究竟。</p><p>我们先从<strong>基础设施演进</strong>看低代码的发展，你可以先看看下面这张图：</p><p><img src=\"https://static001.geekbang.org/resource/image/17/c1/17e67f3033aa2039759a8087a1519cc1.jpg?wh=1920x1047\" alt=\"图片\"></p><p>长久以来，软件的基础设施都是纯物理设备，当虚拟技术引进后，IaaS（基础设施即服务）时代就开始了。紧随着虚拟技术继续蓬勃发展，没过多久，软件技术便历经了PaaS（平台即服务）时代、SaaS（软件即服务）时代。关于这几个概念更具体的解释，你可以看下补充材料的内容。</p><p>SaaS类产品高度封装的软件服务为行业提供了巨大便利的同时，人们也渐渐发现这种形式的短板：定制性太弱。因此在SaaS的基础上，又演进出了一种被称为aPaaS的软件服务体系。</p><p>根据Gartner的说法，aPaaS是应用程序平台即服务的缩写，它是一种云服务，可为应用程序服务提供开发和部署环境。aPaaS平台提供的功能包括：迭代构建应用程序、即时提供应用软件、按需扩展应用程序，以及集成应用程序与其他服务。</p><p>很明显，Gartner把这里的 a 作为application理解了。但我个人认为，这里的 a 当做ability来理解更为恰当，借用文言文的使动用法，将它翻译为赋能。因为很明显的，相比其他架构，aPaaS体系多出了开发和部署应用程序的能力，也就是说，aPaaS赋予了原来的软件服务体系开发和部署的能力。</p><p><strong>我们再换个角度，从时间和地域来看低代码的发展。</strong>下面这张来自艾瑞咨询的图片总结了这个过程，图中信息量比较大，你可以点开仔细阅读。</p><p><img src=\"https://static001.geekbang.org/resource/image/7d/c0/7d1eda918a29f846b6890dfcyyc995c0.png?wh=1524x1134\" alt=\"图片\" title=\"数据来艾瑞咨询2021年低代码行业研究报告\"></p><p>我们可以从这组比对数据中明显看到，国内的低代码平台要落后于美国一个时代。现在低代码头部解决方案中已经有类似OutSystem、Microsoft这样的通用型低代码巨无霸，而国内多数提供商还在探索如何有效地为某个垂直行业、细分领域提供低代码服务。<strong>但这对你我这样的低代码人来说，实际上是一个好事，这仍是一片蓝海，大有可为</strong>。</p><p><strong>第三种角度就是从中台演进来看低代码的发展。</strong>这里你可能会觉得很奇怪，为啥低代码又和中台扯到一起了呢？</p><p>这是因为，低代码可以将多个“烟囱系统”归整为一个集大成者，更灵活敏捷地创建中台架构。在传统的企业系统中，每个部门有不同的系统需求，于是会各自采购自己的系统。但这些系统彼此孤立，独立运作，导致企业采购的软件系统冗杂。而低代码平台能让绝大部分部门的业务系统都能在一个平台里搭建，彼此联系，打破信息系统孤岛，同时降本增效，提升内部生产力。</p><p>低代码有助于横向打破传统企业的烟囱系统，将它们串联到一起，这与中台的目标不约而同。此外，低代码对外赋能的职能，也是中台建设目标之一。因此中台的发展过程，有相当一部分线路与低代码是重合的，二者可以起到相互促进，良性共生的关系。所以，如果你所在的企业同时在架构中台和低代码，不妨尝试将它们放到一起来考虑。</p><h2>行业状态速读</h2><p>了解了低代码的发展和演进之后，作为低代码的研究者，我们总得关心下当前低代码的行业现状吧？</p><p>不过，网上这方面的信息实在太多了，多数说的有鼻子有眼，但不知道真假，所以我只看专业调查机构输出的报告。其中我主要关注Forrester和Gartner，以及国内的艾瑞咨询，相关的报告链接我都统一附在了文末的补充材料中。</p><p>在这么多报告里面，我首先要向你推荐的就是Gartner绘制的关于低代码的魔力四象限报告，关键部分就是下面这张图，概括性非常强。</p><p><img src=\"https://static001.geekbang.org/resource/image/f4/69/f40ca85368b3525d7yy7cdfb46177569.png?wh=939x657\" alt=\"图片\"></p><p>作为低代码的实现者，一般看这种报告都是<strong>以竞品调研为目的</strong>的，因此我们一般只研究Leader象限里的提供商就可以了。Leaders这个象限显示的是技术能力较强、对未来的规划很清晰的厂商，其产品被市场广泛认可，对我们有极强的参考价值。</p><p>其次我想向你推荐的是Forrester的 Forrester Wave™ 报告。与分析Garter的魔力四象限相似，我们仍以Leader这一波里的厂家作为我们的调研对象。与魔力四象限的结果比对，你发现了啥？</p><p><img src=\"https://static001.geekbang.org/resource/image/15/9e/157f50580a591fc7c25628fb7cd4b09e.png?wh=858x635\" alt=\"图片\"></p><p>两家机构对低代码的Leaders给出了几乎一样的结论，对吧？在Leaders里，头部机构取得了一致意见。这两份报告为我们低代码平台的竞品调研给出了一个非常明确的指引，所以如果你现在还在头疼不知道如何下手做调研的话，他们就是极佳的研究和参考对象。</p><p>那么国内的厂商是啥样的状态呢？</p><p>我同样有两份报告可以推荐给你：一个来自Forrester的报告《The State Of Low-Code Platforms In China》（下文简称中国报告），另一个来自艾瑞咨询的《艾瑞咨询-2021年低代码行业研究报告》（下文简称艾瑞报告），你可以在这一讲的补充材料中找到原文。</p><p>在《中国报告》中，Forrester第一次将视角聚焦在中国，它认为，低代码目前在国内主要应用于银行、保险、零售、医疗、政府、制造、电信和建筑行业。Forrester认为，国内低代码目前主要集中在如下9个领域，分别有：</p><p><img src=\"https://static001.geekbang.org/resource/image/44/a5/44948a36af0563b636d146b216305ca5.png?wh=573x564\" alt=\"图片\"></p><p>而《艾瑞报告》的信息量就更大了，主要包含了概念界定、应用场景、竞争要素、市场规模、趋势洞察四大块的内容。下图是《艾瑞报告》绘制的低代码厂商图谱，非常概要地整理出了国内外低代码厂商的分类。</p><p><img src=\"https://static001.geekbang.org/resource/image/9e/f5/9e497447fd122fafd126013fc697a9f5.png?wh=1522x1130\" alt=\"图片\"></p><p>大体上，《艾瑞报告》把低代码厂商分成了通用型和垂直型两种，垂直型和我前文所说的专用型是类似的，均指只能应用在某个业务领域的低代码解决方案，无法运用到其他领域。</p><p>无论你是要做竞调，还是打算采购，这个图都可以提供不错的指引。</p><p>大小厂商这么多，也从一个侧面反映了低代码在国内的发展仍处于早期的状态，按照“惯例”，风口褪去后，各个厂商会快速聚集，要么大鱼吃小鱼、要么抱团取暖，形成寡头化的局面，当前还处于“百花齐放”的状态，说明低代码仍处于投资风口，风投时不时来“奶”上一口，所以大家都还能坚持得住。</p><p>不过，这份《艾瑞报告》是2021年3月出的，有点老了。目前我和负责竞调的团队还没找到新版，一旦获得一手信息，在商业合规的前提下，我会在这门课的动态更新部分中第一时间分享给你。</p><h2>小结</h2><p>这一讲从多个维度对低代码做了分类，并简要讨论了各个分类的低代码所具有的特征，这些分类方法和特征的讨论，对帮助你理解和总结网上对低代码的各种讨论，会有莫大的帮助：</p><ul>\n<li>按代码量的维度，App的开发模式可分为纯代码、低代码、无代码，其中低代码主要特征是App开发过程，平台按需开放表达式和编码等编辑入口，无代码则是对已有业务做二次组合；</li>\n<li>按适用范围，低代码平台可以分为专用型和通用型，通用型平台有通用低代码底座，可满足大多数业务开发需要，通用型平台一般提供插件方式来提升其在特定场景下的效率和易用性；</li>\n<li>目前各低代码平台可以输出的App类型汇总大概有：流程驱动型、表单驱动型、模型驱动（ORM）型、BI分析类型，通用型低代码平台不局限输出某种类型的App，而专用型低代码平台则一般专注其中的一种；</li>\n<li>低代码平台的使用者可以分为有专业技术能力者和业务技术员，有的低代码平台同时支持两种用户同时使用，有的则专注于为其一提供服务。</li>\n</ul><p>更具体的你可以看下这张脑图：</p><p><img src=\"https://static001.geekbang.org/resource/image/9e/e9/9eea2218ecf1dfb103b40b3f1270bde9.jpg?wh=3275x2250\" alt=\"\"></p><p>现在的状况是大家把低代码当做一只大框，啥业务开发只要能少写两行代码的，都往这个框里扔，都说是低代码。这造成了不同的人带着不同的业务背景来理解低代码，进而得到差异很大的结论，甚至连啥不能算作低代码都说不清楚。我希望通过不同维度分类的方式，来帮助你对低代码的能力、职能、目标等有一定的认知。</p><p>最后的两个小节，主要是结合了我的经验，对低代码的发展和行业状态做了一些总结。当了一名数据搬运工，把我认为可信度较高、参考价值较高的几份机构调查报告汇总出来，便于你研读和参考。这部分的篇幅不长，但信息量很大，相信对你会有帮助。</p><h2>思考题</h2><p>除了代码量、使用范围、输出应用类型、使用者等维度之外，你认为还可以从其他哪些维度对低代码做分类？可以分为哪些类型？各有啥特点？</p><p>欢迎在留言区分享你的看法。我是陈旭，我们下节课见。</p><h2>补充材料</h2><ul>\n<li>\n<p>关于基础设施演进的几个概念：</p>\n<ul>\n<li><a href=\"https://zh.wikipedia.org/wiki/%E5%9F%BA%E7%A4%8E%E8%A8%AD%E6%96%BD%E5%8D%B3%E6%9C%8D%E5%8B%99\">IaaS</a>：Infrastructure as a Service，是提供消费者处理、储存、网络以及各种基础运算资源，以部署与执行操作系统或应用程序等各种软件。</li>\n<li><a href=\"https://zh.wikipedia.org/wiki/%E5%B9%B3%E5%8F%B0%E5%8D%B3%E6%9C%8D%E5%8A%A1\"> PaaS</a>：Platform as a Service，平台即服务，将软件研发的平台做为一种服务提供给消费者。</li>\n<li><a href=\"https://zh.wikipedia.org/wiki/%E8%BD%AF%E4%BB%B6%E5%8D%B3%E6%9C%8D%E5%8A%A1\">SaaS</a>：Software as a Service 软件即服务，也可称为“按需即用软件”（即“一经要求，即可使用”），它是一种软件交付模式。在这种交付模式中，软件仅需通过网络，不须经过传统的安装步骤即可使用，软件及其相关的数据集中托管于云端服务。用户通常使用精简客户端，一般即经由网页浏览器来访问、访问软件即服务。</li>\n<li>aPaaS：application Platform as a Service 应用程序平台即服务的缩写，它是一种云服务，可为应用程序服务提供开发和部署环境。</li>\n</ul>\n</li>\n<li>\n<p>关于Gartner的魔力四象限：把研究对象分为四类，分别是领导者，有远见者，挑战者，利基企业，通过归类可以快速了解被研究对象所在行业的状态，更多信息可以看<a href=\"https://zhuanlan.zhihu.com/p/77600879\">这个文章</a>。</p>\n</li>\n<li>\n<p>关于Forrester Wave报告：和Gartner的魔力四象限相似，也是对被研究对象分成若干类，更多信息可以看<a href=\"https://zhuanlan.zhihu.com/p/364011857\">这个文章</a>。</p>\n</li>\n<li>\n<p>《The Forrester Wave™: Low-Code Development Platforms For Professional Developers, Q2 2021》原文<a href=\"https://reprints2.forrester.com/#/assets/2/225/RES161668/report\">在这里</a>。</p>\n</li>\n<li>\n<p>《The Forrester Wave™: Low-Code Development Platforms For Professional Developers, Q4 2021》原文<a href=\"https://reprints2.forrester.com/#/assets/2/940/RES176440/report\">在这里</a>。</p>\n</li>\n<li>\n<p>《The State Of Low-Code Platforms In China》原文<a href=\"https://reprints2.forrester.com/#/assets/2/2219/RES176542/report\">在这里</a>。</p>\n</li>\n<li>\n<p>《艾瑞咨询-2021年低代码行业研究报告：化繁为简》原文<a href=\"https://pdf.dfcfw.com/pdf/H3_AP202103221474638909_1.pdf\">在这里</a>。</p>\n</li>\n</ul>","neighbors":{"left":{"article_title":"开篇词｜抛开争论，先来看看真正的低代码","id":494549},"right":{"article_title":"02｜低代码到底是银弹，还是行业毒瘤？","id":495328}},"comments":[{"had_liked":false,"id":338186,"user_name":"wllq_1223","can_delete":false,"product_type":"c1","uid":2023878,"ip_address":"","ucode":"5E561412E1DAE7","user_header":"https://static001.geekbang.org/account/avatar/00/1e/e1/c6/b7df46dc.jpg","comment_is_top":false,"comment_ctime":1647342940,"is_pvip":true,"replies":[{"id":"123627","content":"我们收集到的资料，也给出了类似结论，从它和用友这两家的架构图看，确实是有模有样的","user_name":"作者回复","comment_id":338186,"uid":"2869203","ip_address":"","utype":1,"ctime":1647359487,"user_name_real":"编辑"}],"discussion_count":1,"race_medal":0,"score":"14532244828","product_id":100108401,"comment_content":"金蝶的苍穹低代码平台这两年发展很不错，虽然也有槽点，但是前景看着还不错","like_count":3,"discussions":[{"author":{"id":2869203,"avatar":"https://static001.geekbang.org/account/avatar/00/2b/c7/d3/54544bab.jpg","nickname":"大猫","note":"","ucode":"7E3103A3DF3E92","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":556442,"discussion_content":"我们收集到的资料，也给出了类似结论，从它和用友这两家的架构图看，确实是有模有样的","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1647359487,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":338101,"user_name":"紫日","can_delete":false,"product_type":"c1","uid":1207410,"ip_address":"","ucode":"73A8DEE323AC19","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/DYAIOgq83eqXSb2jAzlMM0JdTjWrNiaq2uR9eeloBYp906POddb9evmuj5f4CUoO6ge8TibibwtZicnl1sRHic9rW7g/132","comment_is_top":false,"comment_ctime":1647302223,"is_pvip":true,"replies":[{"id":"123783","content":"前半部分我同意，后半部分留言的情况可能不存在，现在多数大厂搞低代码更多的是自用或给其垂直用户使用，不会以立标杆为目的的，因为没有价值","user_name":"作者回复","comment_id":338101,"uid":"2869203","ip_address":"","utype":1,"ctime":1647651337,"user_name_real":"编辑"}],"discussion_count":1,"race_medal":1,"score":"10237236815","product_id":100108401,"comment_content":"低代码，通用型是更高一层抽象；专用型是对业务封装，二者没有严格边界，基本都是混用，目的都是为了更快更省实现业务；低代码是开发能力强企业给开发能力弱企业立的标杆，盲目跟进你就可能掉坑。","like_count":2,"discussions":[{"author":{"id":2869203,"avatar":"https://static001.geekbang.org/account/avatar/00/2b/c7/d3/54544bab.jpg","nickname":"大猫","note":"","ucode":"7E3103A3DF3E92","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":557068,"discussion_content":"前半部分我同意，后半部分留言的情况可能不存在，现在多数大厂搞低代码更多的是自用或给其垂直用户使用，不会以立标杆为目的的，因为没有价值","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1647651337,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":338720,"user_name":"趙學躍","can_delete":false,"product_type":"c1","uid":2644103,"ip_address":"","ucode":"DB0FA399EB8385","user_header":"https://static001.geekbang.org/account/avatar/00/28/58/87/7a5ceb07.jpg","comment_is_top":false,"comment_ctime":1647683513,"is_pvip":true,"discussion_count":1,"race_medal":0,"score":"5942650809","product_id":100108401,"comment_content":"艾瑞咨询今年3月份发布了《生态聚合-中国低代码行业生态发展洞察报》，大家可以看下","like_count":1,"discussions":[{"author":{"id":2643700,"avatar":"https://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTK4NS0QJATD9XNBdSGjicTorGx5y8lI3AfKJjFOibwT91ehkII1VbZFGe9fyTHwvu6sLibbT2EXPH7DA/132","nickname":"孤勇者","note":"","ucode":"A85D77553FEF0A","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":566428,"discussion_content":"链接附上 https://report.iresearch.cn/report_pdf.aspx?id=3952","likes_number":5,"is_delete":false,"is_hidden":false,"ctime":1650683354,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":338354,"user_name":"Tree New Bee","can_delete":false,"product_type":"c1","uid":1541289,"ip_address":"","ucode":"62E713249A40C8","user_header":"https://static001.geekbang.org/account/avatar/00/17/84/a9/96cc8260.jpg","comment_is_top":false,"comment_ctime":1647435335,"is_pvip":true,"replies":[{"id":"123679","content":"抱歉这句话说得可能有点让你误解了，我的本意是指表单类的APP不太注意就会形成数据孤岛，但不是说它一定会形成数据孤岛，它也可以做数据关联。正如你说的打通表单之间的数据以后就不会出现孤岛了。做了数据关联以后，就和模型驱动型的APP很像了。","user_name":"作者回复","comment_id":338354,"uid":"2869203","ip_address":"","utype":1,"ctime":1647474885,"user_name_real":"编辑"}],"discussion_count":2,"race_medal":0,"score":"5942402631","product_id":100108401,"comment_content":"以表单类的 App 非常容易形成数据孤岛，这个有点片面了。表单之间可以做数据的调用和推送  对应的业务关系，是可以打通数据直接的流通。","like_count":1,"discussions":[{"author":{"id":2869203,"avatar":"https://static001.geekbang.org/account/avatar/00/2b/c7/d3/54544bab.jpg","nickname":"大猫","note":"","ucode":"7E3103A3DF3E92","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":556681,"discussion_content":"抱歉这句话说得可能有点让你误解了，我的本意是指表单类的APP不太注意就会形成数据孤岛，但不是说它一定会形成数据孤岛，它也可以做数据关联。正如你说的打通表单之间的数据以后就不会出现孤岛了。做了数据关联以后，就和模型驱动型的APP很像了。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1647474885,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":3204907,"avatar":"https://static001.geekbang.org/account/avatar/00/30/e7/2b/c5e5ebc6.jpg","nickname":"树袋熊🐨","note":"","ucode":"3589700A259404","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":591064,"discussion_content":"表单类 App面向的用户是业务技术人员，他们不具备E-R建模的思想，所以我觉得会形成数据孤岛是从其诞生的这个基因就决定了。如果使用E-R建模的思想来创建表单的话，我就觉得应该属于数据模型驱动型了","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1666257352,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":"广东"},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":359630,"user_name":"Geek_18c75d","can_delete":false,"product_type":"c1","uid":2418019,"ip_address":"广东","ucode":"5282E71A8FA1A0","user_header":"https://thirdwx.qlogo.cn/mmopen/vi_32/DYAIOgq83eoBJeMROTEialPIIvxKpiarpEOAibb2Gtiawg73DATBrCSTWvtAfOSw6weIGD01DhSLQdnxdmysL4CX5A/132","comment_is_top":false,"comment_ctime":1665716232,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1665716232","product_id":100108401,"comment_content":"最后分享的《The State Of Low-Code Platforms In China》没法打开了，能麻烦重新分享一下吗？","like_count":0},{"had_liked":false,"id":357346,"user_name":"安菲尔德","can_delete":false,"product_type":"c1","uid":1660533,"ip_address":"北京","ucode":"A7B310463C15F1","user_header":"https://static001.geekbang.org/account/avatar/00/19/56/75/28a29e7c.jpg","comment_is_top":false,"comment_ctime":1663167749,"is_pvip":true,"discussion_count":0,"race_medal":0,"score":"1663167749","product_id":100108401,"comment_content":"老师我想问一下阿里巴巴出开源的低代码如何？","like_count":0},{"had_liked":false,"id":355479,"user_name":"Jaising","can_delete":false,"product_type":"c1","uid":1037630,"ip_address":"安徽","ucode":"F68830B7B90F96","user_header":"https://static001.geekbang.org/account/avatar/00/0f/d5/3e/7f3a9c2b.jpg","comment_is_top":false,"comment_ctime":1661415001,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1661415001","product_id":100108401,"comment_content":"这么看的话，ETL是不是也属于一种低代码，通过sql简化代码开发工作量，支持存储 网络 中间件等对接，提供报表等业务","like_count":0},{"had_liked":false,"id":353334,"user_name":"inrtyx","can_delete":false,"product_type":"c1","uid":1246178,"ip_address":"福建","ucode":"81CD18FF34ABAB","user_header":"https://static001.geekbang.org/account/avatar/00/13/03/e2/5768d26e.jpg","comment_is_top":false,"comment_ctime":1659362527,"is_pvip":true,"discussion_count":0,"race_medal":0,"score":"1659362527","product_id":100108401,"comment_content":"DW算低代码软件嘛？","like_count":0},{"had_liked":false,"id":348417,"user_name":"piboye","can_delete":false,"product_type":"c1","uid":1066752,"ip_address":"","ucode":"7CFD8712857A85","user_header":"https://static001.geekbang.org/account/avatar/00/10/47/00/3202bdf0.jpg","comment_is_top":false,"comment_ctime":1655091725,"is_pvip":true,"discussion_count":0,"race_medal":0,"score":"1655091725","product_id":100108401,"comment_content":"budibase和appsmith哪个更好点？","like_count":0},{"had_liked":false,"id":346429,"user_name":"胡凭智","can_delete":false,"product_type":"c1","uid":2674149,"ip_address":"","ucode":"651791ED99BA7D","user_header":"","comment_is_top":false,"comment_ctime":1653129210,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1653129210","product_id":100108401,"comment_content":"请问老师，现在国内的低代码产品，哪些属于BI分析型的低代码平台呢？","like_count":0},{"had_liked":false,"id":345161,"user_name":"Angel","can_delete":false,"product_type":"c1","uid":1538590,"ip_address":"","ucode":"091E94E613C3DE","user_header":"https://static001.geekbang.org/account/avatar/00/17/7a/1e/81a55070.jpg","comment_is_top":false,"comment_ctime":1652083160,"is_pvip":true,"discussion_count":0,"race_medal":0,"score":"1652083160","product_id":100108401,"comment_content":"这个，，查看这两家权威公司的分析报告，是不是得翻墙。。。","like_count":0},{"had_liked":false,"id":343648,"user_name":"喆里","can_delete":false,"product_type":"c1","uid":1125033,"ip_address":"","ucode":"0B4B38104645CA","user_header":"https://static001.geekbang.org/account/avatar/00/11/2a/a9/83684d4a.jpg","comment_is_top":false,"comment_ctime":1650965968,"is_pvip":true,"discussion_count":0,"race_medal":0,"score":"1650965968","product_id":100108401,"comment_content":"没听明白，低代码平台到底是做什么的？ 有哪些应用场景？业界有没有比较好的优秀实践，可以介绍下？","like_count":0},{"had_liked":false,"id":341074,"user_name":"Lee","can_delete":false,"product_type":"c1","uid":1088887,"ip_address":"","ucode":"4F61BAB64DB6AA","user_header":"https://static001.geekbang.org/account/avatar/00/10/9d/77/56681164.jpg","comment_is_top":false,"comment_ctime":1649331852,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1649331852","product_id":100108401,"comment_content":"作者对于电商领域有做过低代码实践吗？（比如商品详情页，购物车，下单页，支付页...等）。<br>那么，属于适用范围是属于专用型还是通用型呢？虽然是专用型，但电商领域里的页面复杂和多样的，对平台能力要求可能是要通用的。<br>同理，输出类型电商领域也是多种多样的，有表单类（下单页），有模型类（商品详情）<br><br>","like_count":0},{"had_liked":false,"id":339014,"user_name":"exan.JS","can_delete":false,"product_type":"c1","uid":1003822,"ip_address":"","ucode":"5AE7675902B532","user_header":"https://static001.geekbang.org/account/avatar/00/0f/51/2e/e4033871.jpg","comment_is_top":false,"comment_ctime":1647859149,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1647859149","product_id":100108401,"comment_content":"生成的 App 的层级深度应该是一个考量维度，从一个功能的开始到结束一共走过了多少步骤？生成了多少页面？业务逻辑是否被充分地表达等。","like_count":0},{"had_liked":false,"id":339012,"user_name":"exan.JS","can_delete":false,"product_type":"c1","uid":1003822,"ip_address":"","ucode":"5AE7675902B532","user_header":"https://static001.geekbang.org/account/avatar/00/0f/51/2e/e4033871.jpg","comment_is_top":false,"comment_ctime":1647858216,"is_pvip":false,"replies":[{"id":"124583","content":"可以理解为地基，比如那种双子大厦，你在地面上看到的是两栋独立的楼，但它们有共同的地基。地基就是通用功能底座，地面上能被大家看到的大楼就业务开发能力。地基（或底座）的能力，决定了地面的大楼能盖多高，或者低代码平台的业务开发能力有多强","user_name":"作者回复","comment_id":339012,"uid":"2869203","ip_address":"","utype":1,"ctime":1649117894,"user_name_real":"编辑"}],"discussion_count":1,"race_medal":0,"score":"1647858216","product_id":100108401,"comment_content":"什么是 “底座” ？","like_count":0,"discussions":[{"author":{"id":2869203,"avatar":"https://static001.geekbang.org/account/avatar/00/2b/c7/d3/54544bab.jpg","nickname":"大猫","note":"","ucode":"7E3103A3DF3E92","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":559995,"discussion_content":"可以理解为地基，比如那种双子大厦，你在地面上看到的是两栋独立的楼，但它们有共同的地基。地基就是通用功能底座，地面上能被大家看到的大楼就业务开发能力。地基（或底座）的能力，决定了地面的大楼能盖多高，或者低代码平台的业务开发能力有多强","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1649117894,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":338623,"user_name":"一叉树","can_delete":false,"product_type":"c1","uid":1623117,"ip_address":"","ucode":"BFC984403ACD1F","user_header":"https://static001.geekbang.org/account/avatar/00/18/c4/4d/85014aab.jpg","comment_is_top":false,"comment_ctime":1647604623,"is_pvip":true,"replies":[{"id":"124167","content":"我认为，不能说一个业务应不应该属于低代码，而应该说在你的场景中，一个业务要不要或者能不能用低代码来实现。低代码平台能力够强的话，那就可以适用于更多的业务领域，具有更大的想象空间","user_name":"作者回复","comment_id":338623,"uid":"2869203","ip_address":"","utype":1,"ctime":1648344317,"user_name_real":"编辑"}],"discussion_count":1,"race_medal":0,"score":"1647604623","product_id":100108401,"comment_content":"活动平台，应该属于 Low Code 吗？活动平台中，开发人员手写组件代码（例如活动说明展示组件、排行榜组件、关注主播组件），完全无编程能力的运营把组件组装成为活动页面并修改文案发布。这样看，活动平台对开发来说是 Pro Code，对运营来说是 No Code。","like_count":0,"discussions":[{"author":{"id":2869203,"avatar":"https://static001.geekbang.org/account/avatar/00/2b/c7/d3/54544bab.jpg","nickname":"大猫","note":"","ucode":"7E3103A3DF3E92","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":558490,"discussion_content":"我认为，不能说一个业务应不应该属于低代码，而应该说在你的场景中，一个业务要不要或者能不能用低代码来实现。低代码平台能力够强的话，那就可以适用于更多的业务领域，具有更大的想象空间","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1648344317,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":338405,"user_name":"winter","can_delete":false,"product_type":"c1","uid":2040734,"ip_address":"","ucode":"C82F506837FC6A","user_header":"https://static001.geekbang.org/account/avatar/00/1f/23/9e/60bfb7e4.jpg","comment_is_top":false,"comment_ctime":1647487151,"is_pvip":false,"replies":[{"id":"123780","content":"编译型的好处是编译后app可以脱离平台，独自运行，而运行型从字面上理解，应该是提供了app运行时，app只能在低代码构建的运行时里运行。编译型的好处是灵活但实现难度大，而运行型的则是难度小封装度高，坏处是高封装度会减少app运行的选择","user_name":"作者回复","comment_id":338405,"uid":"2869203","ip_address":"","utype":1,"ctime":1647650633,"user_name_real":"编辑"}],"discussion_count":0,"race_medal":0,"score":"1647487151","product_id":100108401,"comment_content":"按实现方式分类还可以分为：编译型  运行时型  混合型。另外，作者能谈谈编译型和运行时有什么优缺点吗？","like_count":0},{"had_liked":false,"id":338289,"user_name":"Lim Guo","can_delete":false,"product_type":"c1","uid":1338328,"ip_address":"","ucode":"06E2394883A2D7","user_header":"https://static001.geekbang.org/account/avatar/00/14/6b/d8/2aed993f.jpg","comment_is_top":false,"comment_ctime":1647407592,"is_pvip":false,"replies":[{"id":"123680","content":"整体来说低代码工具在国内成熟度还是比较低的，特别是通用型的低代码解决方案。但也不排除有的案例做的比较好，特别是一些垂直型的低代码工具，比如我看到的用友金蝶的解决方案就不错。","user_name":"作者回复","comment_id":338289,"uid":"2869203","ip_address":"","utype":1,"ctime":1647475114,"user_name_real":"编辑"}],"discussion_count":1,"race_medal":0,"score":"1647407592","product_id":100108401,"comment_content":"低代码工具并不意味着成熟度低，以表单编辑器为例，可以做到解析器、编辑器、配置文件持久化（如：动态生成更新json）这三个核心通过一个组件完成，并且预留slot和jsx的能力，来确保高通用性和拓展性，成熟度不低了。","like_count":0,"discussions":[{"author":{"id":2869203,"avatar":"https://static001.geekbang.org/account/avatar/00/2b/c7/d3/54544bab.jpg","nickname":"大猫","note":"","ucode":"7E3103A3DF3E92","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":556682,"discussion_content":"整体来说低代码工具在国内成熟度还是比较低的，特别是通用型的低代码解决方案。但也不排除有的案例做的比较好，特别是一些垂直型的低代码工具，比如我看到的用友金蝶的解决方案就不错。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1647475114,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":338212,"user_name":"李增","can_delete":false,"product_type":"c1","uid":1966675,"ip_address":"","ucode":"6A2D755FCB84F2","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/vicCM2yGWiadP0sgKezKqp0SStcDIre2ibl04qxQSdqwl68XcaoiaafdzoXLz5lVjDZ31XJa7w6f8tKgxlTt2nlDLQ/132","comment_is_top":false,"comment_ctime":1647354762,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1647354762","product_id":100108401,"comment_content":"营销类业务（C端）采用低代码实现的话，应该归类为哪一种app中呢？","like_count":0}]}