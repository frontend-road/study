{"id":77636,"title":"28 | 读写分离有哪些坑？","content":"<p>在上一篇文章中，我和你介绍了一主多从的结构以及切换流程。今天我们就继续聊聊一主多从架构的应用场景：读写分离，以及怎么处理主备延迟导致的读写分离问题。</p><p>我们在上一篇文章中提到的一主多从的结构，其实就是读写分离的基本结构了。这里，我再把这张图贴过来，方便你理解。</p><p><img src=\"https://static001.geekbang.org/resource/image/13/aa/1334b9c08b8fd837832fdb2d82e6b0aa.png?wh=1142*637\" alt=\"\"></p><center><span class=\"reference\">图1 读写分离基本结构</span></center><p>读写分离的主要目标就是分摊主库的压力。图1中的结构是客户端（client）主动做负载均衡，这种模式下一般会把数据库的连接信息放在客户端的连接层。也就是说，由客户端来选择后端数据库进行查询。</p><p>还有一种架构是，在MySQL和客户端之间有一个中间代理层proxy，客户端只连接proxy， 由proxy根据请求类型和上下文决定请求的分发路由。</p><p><img src=\"https://static001.geekbang.org/resource/image/1b/45/1b1ea74a48e1a16409e9b4d02172b945.jpg?wh=1142*668\" alt=\"\"></p><center><span class=\"reference\">图2 带proxy的读写分离架构</span></center><p>接下来，我们就看一下客户端直连和带proxy的读写分离架构，各有哪些特点。</p><ol>\n<li>\n<p>客户端直连方案，因为少了一层proxy转发，所以查询性能稍微好一点儿，并且整体架构简单，排查问题更方便。但是这种方案，由于要了解后端部署细节，所以在出现主备切换、库迁移等操作的时候，客户端都会感知到，并且需要调整数据库连接信息。<br>\n你可能会觉得这样客户端也太麻烦了，信息大量冗余，架构很丑。其实也未必，一般采用这样的架构，一定会伴随一个负责管理后端的组件，比如Zookeeper，尽量让业务端只专注于业务逻辑开发。</p>\n</li>\n<li>\n<p>带proxy的架构，对客户端比较友好。客户端不需要关注后端细节，连接维护、后端信息维护等工作，都是由proxy完成的。但这样的话，对后端维护团队的要求会更高。而且，proxy也需要有高可用架构。因此，带proxy架构的整体就相对比较复杂。</p>\n</li>\n</ol><!-- [[[read_end]]] --><p>理解了这两种方案的优劣，具体选择哪个方案就取决于数据库团队提供的能力了。但目前看，趋势是往带proxy的架构方向发展的。</p><p>但是，不论使用哪种架构，你都会碰到我们今天要讨论的问题：由于主从可能存在延迟，客户端执行完一个更新事务后马上发起查询，如果查询选择的是从库的话，就有可能读到刚刚的事务更新之前的状态。</p><p><strong>这种“在从库上会读到系统的一个过期状态”的现象，在这篇文章里，我们暂且称之为“过期读”。</strong></p><p>前面我们说过了几种可能导致主备延迟的原因，以及对应的优化策略，但是主从延迟还是不能100%避免的。</p><p>不论哪种结构，客户端都希望查询从库的数据结果，跟查主库的数据结果是一样的。</p><p>接下来，我们就来讨论怎么处理过期读问题。</p><p>这里，我先把文章中涉及到的处理过期读的方案汇总在这里，以帮助你更好地理解和掌握全文的知识脉络。这些方案包括：</p><ul>\n<li>强制走主库方案；</li>\n<li>sleep方案；</li>\n<li>判断主备无延迟方案；</li>\n<li>配合semi-sync方案；</li>\n<li>等主库位点方案；</li>\n<li>等GTID方案。</li>\n</ul><h1>强制走主库方案</h1><p>强制走主库方案其实就是，将查询请求做分类。通常情况下，我们可以将查询请求分为这么两类：</p><ol>\n<li>\n<p>对于必须要拿到最新结果的请求，强制将其发到主库上。比如，在一个交易平台上，卖家发布商品以后，马上要返回主页面，看商品是否发布成功。那么，这个请求需要拿到最新的结果，就必须走主库。</p>\n</li>\n<li>\n<p>对于可以读到旧数据的请求，才将其发到从库上。在这个交易平台上，买家来逛商铺页面，就算晚几秒看到最新发布的商品，也是可以接受的。那么，这类请求就可以走从库。</p>\n</li>\n</ol><p>你可能会说，这个方案是不是有点畏难和取巧的意思，但其实这个方案是用得最多的。</p><p>当然，这个方案最大的问题在于，有时候你会碰到“所有查询都不能是过期读”的需求，比如一些金融类的业务。这样的话，你就要放弃读写分离，所有读写压力都在主库，等同于放弃了扩展性。</p><p>因此接下来，我们来讨论的话题是：可以支持读写分离的场景下，有哪些解决过期读的方案，并分析各个方案的优缺点。</p><h1>Sleep 方案</h1><p>主库更新后，读从库之前先sleep一下。具体的方案就是，类似于执行一条select sleep(1)命令。</p><p>这个方案的假设是，大多数情况下主备延迟在1秒之内，做一个sleep可以有很大概率拿到最新的数据。</p><p>这个方案给你的第一感觉，很可能是不靠谱儿，应该不会有人用吧？并且，你还可能会说，直接在发起查询时先执行一条sleep语句，用户体验很不友好啊。</p><p>但，这个思路确实可以在一定程度上解决问题。为了看起来更靠谱儿，我们可以换一种方式。</p><p>以卖家发布商品为例，商品发布后，用Ajax（Asynchronous JavaScript + XML，异步JavaScript和XML）直接把客户端输入的内容作为“新的商品”显示在页面上，而不是真正地去数据库做查询。</p><p>这样，卖家就可以通过这个显示，来确认产品已经发布成功了。等到卖家再刷新页面，去查看商品的时候，其实已经过了一段时间，也就达到了sleep的目的，进而也就解决了过期读的问题。</p><p>也就是说，这个sleep方案确实解决了类似场景下的过期读问题。但，从严格意义上来说，这个方案存在的问题就是不精确。这个不精确包含了两层意思：</p><ol>\n<li>\n<p>如果这个查询请求本来0.5秒就可以在从库上拿到正确结果，也会等1秒；</p>\n</li>\n<li>\n<p>如果延迟超过1秒，还是会出现过期读。</p>\n</li>\n</ol><p>看到这里，你是不是有一种“你是不是在逗我”的感觉，这个改进方案虽然可以解决类似Ajax场景下的过期读问题，但还是怎么看都不靠谱儿。别着急，接下来我就和你介绍一些更准确的方案。</p><h1>判断主备无延迟方案</h1><p>要确保备库无延迟，通常有三种做法。</p><p>通过前面的<a href=\"https://time.geekbang.org/column/article/76795\">第25篇</a>文章，我们知道show slave status结果里的seconds_behind_master参数的值，可以用来衡量主备延迟时间的长短。</p><p>所以<strong>第一种确保主备无延迟的方法是，</strong>每次从库执行查询请求前，先判断seconds_behind_master是否已经等于0。如果还不等于0 ，那就必须等到这个参数变为0才能执行查询请求。</p><p>seconds_behind_master的单位是秒，如果你觉得精度不够的话，还可以采用对比位点和GTID的方法来确保主备无延迟，也就是我们接下来要说的第二和第三种方法。</p><p>如图3所示，是一个show slave status结果的部分截图。</p><p><img src=\"https://static001.geekbang.org/resource/image/00/c1/00110923007513e865d7f43a124887c1.png?wh=1331*368\" alt=\"\"></p><center><span class=\"reference\">图3 show slave status结果</span></center><p>现在，我们就通过这个结果，来看看具体如何通过对比位点和GTID来确保主备无延迟。</p><p><strong>第二种方法，</strong>对比位点确保主备无延迟：</p><ul>\n<li>Master_Log_File和Read_Master_Log_Pos，表示的是读到的主库的最新位点；</li>\n<li>Relay_Master_Log_File和Exec_Master_Log_Pos，表示的是备库执行的最新位点。</li>\n</ul><p>如果Master_Log_File和Relay_Master_Log_File、Read_Master_Log_Pos和Exec_Master_Log_Pos这两组值完全相同，就表示接收到的日志已经同步完成。</p><p><strong>第三种方法，</strong>对比GTID集合确保主备无延迟：</p><ul>\n<li>Auto_Position=1 ，表示这对主备关系使用了GTID协议。</li>\n<li>Retrieved_Gtid_Set，是备库收到的所有日志的GTID集合；</li>\n<li>Executed_Gtid_Set，是备库所有已经执行完成的GTID集合。</li>\n</ul><p>如果这两个集合相同，也表示备库接收到的日志都已经同步完成。</p><p>可见，对比位点和对比GTID这两种方法，都要比判断seconds_behind_master是否为0更准确。</p><p>在执行查询请求之前，先判断从库是否同步完成的方法，相比于sleep方案，准确度确实提升了不少，但还是没有达到“精确”的程度。为什么这么说呢？</p><p>我们现在一起来回顾下，一个事务的binlog在主备库之间的状态：</p><ol>\n<li>\n<p>主库执行完成，写入binlog，并反馈给客户端；</p>\n</li>\n<li>\n<p>binlog被从主库发送给备库，备库收到；</p>\n</li>\n<li>\n<p>在备库执行binlog完成。</p>\n</li>\n</ol><p>我们上面判断主备无延迟的逻辑，是“备库收到的日志都执行完成了”。但是，从binlog在主备之间状态的分析中，不难看出还有一部分日志，处于客户端已经收到提交确认，而备库还没收到日志的状态。</p><p>如图4所示就是这样的一个状态。</p><p><img src=\"https://static001.geekbang.org/resource/image/55/9e/557445207b57d6c0f2747509d7d6619e.png?wh=1142*510\" alt=\"\"></p><center><span class=\"reference\">图4 备库还没收到trx3</span></center><p>这时，主库上执行完成了三个事务trx1、trx2和trx3，其中：</p><ol>\n<li>\n<p>trx1和trx2已经传到从库，并且已经执行完成了；</p>\n</li>\n<li>\n<p>trx3在主库执行完成，并且已经回复给客户端，但是还没有传到从库中。</p>\n</li>\n</ol><p>如果这时候你在从库B上执行查询请求，按照我们上面的逻辑，从库认为已经没有同步延迟，但还是查不到trx3的。严格地说，就是出现了过期读。</p><p>那么，这个问题有没有办法解决呢？</p><h1>配合semi-sync</h1><p>要解决这个问题，就要引入半同步复制，也就是semi-sync replication。</p><p>semi-sync做了这样的设计：</p><ol>\n<li>\n<p>事务提交的时候，主库把binlog发给从库；</p>\n</li>\n<li>\n<p>从库收到binlog以后，发回给主库一个ack，表示收到了；</p>\n</li>\n<li>\n<p>主库收到这个ack以后，才能给客户端返回“事务完成”的确认。</p>\n</li>\n</ol><p>也就是说，如果启用了semi-sync，就表示所有给客户端发送过确认的事务，都确保了备库已经收到了这个日志。</p><p>在<a href=\"https://time.geekbang.org/column/article/76795\">第25篇文章</a>的评论区，有同学问到：如果主库掉电的时候，有些binlog还来不及发给从库，会不会导致系统数据丢失？</p><p>答案是，如果使用的是普通的异步复制模式，就可能会丢失，但semi-sync就可以解决这个问题。</p><p>这样，semi-sync配合前面关于位点的判断，就能够确定在从库上执行的查询请求，可以避免过期读。</p><p>但是，semi-sync+位点判断的方案，只对一主一备的场景是成立的。在一主多从场景中，主库只要等到一个从库的ack，就开始给客户端返回确认。这时，在从库上执行查询请求，就有两种情况：</p><ol>\n<li>\n<p>如果查询是落在这个响应了ack的从库上，是能够确保读到最新数据；</p>\n</li>\n<li>\n<p>但如果是查询落到其他从库上，它们可能还没有收到最新的日志，就会产生过期读的问题。</p>\n</li>\n</ol><p>其实，判断同步位点的方案还有另外一个潜在的问题，即：如果在业务更新的高峰期，主库的位点或者GTID集合更新很快，那么上面的两个位点等值判断就会一直不成立，很可能出现从库上迟迟无法响应查询请求的情况。</p><p>实际上，回到我们最初的业务逻辑里，当发起一个查询请求以后，我们要得到准确的结果，其实并不需要等到“主备完全同步”。</p><p>为什么这么说呢？我们来看一下这个时序图。</p><p><img src=\"https://static001.geekbang.org/resource/image/9c/09/9cf54f3e91dc8f7b8947d7d8e384aa09.png?wh=1142*880\" alt=\"\"></p><center><span class=\"reference\">图5 主备持续延迟一个事务</span></center><p>图5所示，就是等待位点方案的一个bad case。图中备库B下的虚线框，分别表示relaylog和binlog中的事务。可以看到，图5中从状态1 到状态4，一直处于延迟一个事务的状态。</p><p>备库B一直到状态4都和主库A存在延迟，如果用上面必须等到无延迟才能查询的方案，select语句直到状态4都不能被执行。</p><p>但是，其实客户端是在发完trx1更新后发起的select语句，我们只需要确保trx1已经执行完成就可以执行select语句了。也就是说，如果在状态3执行查询请求，得到的就是预期结果了。</p><p>到这里，我们小结一下，semi-sync配合判断主备无延迟的方案，存在两个问题：</p><ol>\n<li>\n<p>一主多从的时候，在某些从库执行查询请求会存在过期读的现象；</p>\n</li>\n<li>\n<p>在持续延迟的情况下，可能出现过度等待的问题。</p>\n</li>\n</ol><p>接下来，我要和你介绍的等主库位点方案，就可以解决这两个问题。</p><h1>等主库位点方案</h1><p>要理解等主库位点方案，我需要先和你介绍一条命令：</p><pre><code>select master_pos_wait(file, pos[, timeout]);\n</code></pre><p>这条命令的逻辑如下：</p><ol>\n<li>\n<p>它是在从库执行的；</p>\n</li>\n<li>\n<p>参数file和pos指的是主库上的文件名和位置；</p>\n</li>\n<li>\n<p>timeout可选，设置为正整数N表示这个函数最多等待N秒。</p>\n</li>\n</ol><p>这个命令正常返回的结果是一个正整数M，表示从命令开始执行，到应用完file和pos表示的binlog位置，执行了多少事务。</p><p>当然，除了正常返回一个正整数M外，这条命令还会返回一些其他结果，包括：</p><ol>\n<li>\n<p>如果执行期间，备库同步线程发生异常，则返回NULL；</p>\n</li>\n<li>\n<p>如果等待超过N秒，就返回-1；</p>\n</li>\n<li>\n<p>如果刚开始执行的时候，就发现已经执行过这个位置了，则返回0。</p>\n</li>\n</ol><p>对于图5中先执行trx1，再执行一个查询请求的逻辑，要保证能够查到正确的数据，我们可以使用这个逻辑：</p><ol>\n<li>\n<p>trx1事务更新完成后，马上执行show master status得到当前主库执行到的File和Position；</p>\n</li>\n<li>\n<p>选定一个从库执行查询语句；</p>\n</li>\n<li>\n<p>在从库上执行select master_pos_wait(File, Position, 1)；</p>\n</li>\n<li>\n<p>如果返回值是&gt;=0的正整数，则在这个从库执行查询语句；</p>\n</li>\n<li>\n<p>否则，到主库执行查询语句。</p>\n</li>\n</ol><p>我把上面这个流程画出来。</p><p><img src=\"https://static001.geekbang.org/resource/image/b2/57/b20ae91ea46803df1b63ed683e1de357.png?wh=1142*880\" alt=\"\"></p><center><span class=\"reference\">图6 master_pos_wait方案</span></center><p>这里我们假设，这条select查询最多在从库上等待1秒。那么，如果1秒内master_pos_wait返回一个大于等于0的整数，就确保了从库上执行的这个查询结果一定包含了trx1的数据。</p><p>步骤5到主库执行查询语句，是这类方案常用的退化机制。因为从库的延迟时间不可控，不能无限等待，所以如果等待超时，就应该放弃，然后到主库去查。</p><p>你可能会说，如果所有的从库都延迟超过1秒了，那查询压力不就都跑到主库上了吗？确实是这样。</p><p>但是，按照我们设定不允许过期读的要求，就只有两种选择，一种是超时放弃，一种是转到主库查询。具体怎么选择，就需要业务开发同学做好限流策略了。</p><h1>GTID方案</h1><p>如果你的数据库开启了GTID模式，对应的也有等待GTID的方案。</p><p>MySQL中同样提供了一个类似的命令：</p><pre><code> select wait_for_executed_gtid_set(gtid_set, 1);\n</code></pre><p>这条命令的逻辑是：</p><ol>\n<li>\n<p>等待，直到这个库执行的事务中包含传入的gtid_set，返回0；</p>\n</li>\n<li>\n<p>超时返回1。</p>\n</li>\n</ol><p>在前面等位点的方案中，我们执行完事务后，还要主动去主库执行show master status。而MySQL 5.7.6版本开始，允许在执行完更新类事务后，把这个事务的GTID返回给客户端，这样等GTID的方案就可以减少一次查询。</p><p>这时，等GTID的执行流程就变成了：</p><ol>\n<li>\n<p>trx1事务更新完成后，从返回包直接获取这个事务的GTID，记为gtid1；</p>\n</li>\n<li>\n<p>选定一个从库执行查询语句；</p>\n</li>\n<li>\n<p>在从库上执行 select wait_for_executed_gtid_set(gtid1, 1)；</p>\n</li>\n<li>\n<p>如果返回值是0，则在这个从库执行查询语句；</p>\n</li>\n<li>\n<p>否则，到主库执行查询语句。</p>\n</li>\n</ol><p>跟等主库位点的方案一样，等待超时后是否直接到主库查询，需要业务开发同学来做限流考虑。</p><p>我把这个流程图画出来。</p><p><img src=\"https://static001.geekbang.org/resource/image/d5/39/d521de8017297aff59db2f68170ee739.png?wh=1142*880\" alt=\"\"></p><center><span class=\"reference\">图7 wait_for_executed_gtid_set方案</span></center><p>在上面的第一步中，trx1事务更新完成后，从返回包直接获取这个事务的GTID。问题是，怎么能够让MySQL在执行事务后，返回包中带上GTID呢？</p><p>你只需要将参数session_track_gtids设置为OWN_GTID，然后通过API接口mysql_session_track_get_first从返回包解析出GTID的值即可。</p><p>在专栏的<a href=\"https://time.geekbang.org/column/article/68319\">第一篇文章</a>中，我介绍mysql_reset_connection的时候，评论区有同学留言问这类接口应该怎么使用。</p><p>这里我再回答一下。其实，MySQL并没有提供这类接口的SQL用法，是提供给程序的API(<a href=\"https://dev.mysql.com/doc/refman/5.7/en/c-api-functions.html\">https://dev.mysql.com/doc/refman/5.7/en/c-api-functions.html</a>)。</p><p>比如，为了让客户端在事务提交后，返回的GITD能够在客户端显示出来，我对MySQL客户端代码做了点修改，如下所示：</p><p><img src=\"https://static001.geekbang.org/resource/image/97/63/973bdd8741f830acebe005cbf37a7663.png?wh=990*143\" alt=\"\"></p><center><span class=\"reference\">图8 显示更新事务的GTID--代码</span></center><p>这样，就可以看到语句执行完成，显示出GITD的值。</p><p><img src=\"https://static001.geekbang.org/resource/image/25/fe/253106d31d9d97aaa2846b2015f593fe.png?wh=950*162\" alt=\"\"></p><center><span class=\"reference\">图9 显示更新事务的GTID--效果</span></center><p>当然了，这只是一个例子。你要使用这个方案的时候，还是应该在你的客户端代码中调用mysql_session_track_get_first这个函数。</p><h1>小结</h1><p>在今天这篇文章中，我跟你介绍了一主多从做读写分离时，可能碰到过期读的原因，以及几种应对的方案。</p><p>这几种方案中，有的方案看上去是做了妥协，有的方案看上去不那么靠谱儿，但都是有实际应用场景的，你需要根据业务需求选择。</p><p>即使是最后等待位点和等待GTID这两个方案，虽然看上去比较靠谱儿，但仍然存在需要权衡的情况。如果所有的从库都延迟，那么请求就会全部落到主库上，这时候会不会由于压力突然增大，把主库打挂了呢？</p><p>其实，在实际应用中，这几个方案是可以混合使用的。</p><p>比如，先在客户端对请求做分类，区分哪些请求可以接受过期读，而哪些请求完全不能接受过期读；然后，对于不能接受过期读的语句，再使用等GTID或等位点的方案。</p><p>但话说回来，过期读在本质上是由一写多读导致的。在实际应用中，可能会有别的不需要等待就可以水平扩展的数据库方案，但这往往是用牺牲写性能换来的，也就是需要在读性能和写性能中取权衡。</p><p>最后 ，我给你留下一个问题吧。</p><p>假设你的系统采用了我们文中介绍的最后一个方案，也就是等GTID的方案，现在你要对主库的一张大表做DDL，可能会出现什么情况呢？为了避免这种情况，你会怎么做呢？</p><p>你可以把你的分析和方案设计写在评论区，我会在下一篇文章跟你讨论这个问题。感谢你的收听，也欢迎你把这篇文章分享给更多的朋友一起阅读。</p><h1>上期问题时间</h1><p>上期给你留的问题是，在GTID模式下，如果一个新的从库接上主库，但是需要的binlog已经没了，要怎么做？</p><p>@某、人同学给了很详细的分析，我把他的回答略做修改贴过来。</p><ol>\n<li>\n<p>如果业务允许主从不一致的情况，那么可以在主库上先执行show global variables like ‘gtid_purged’，得到主库已经删除的GTID集合，假设是gtid_purged1；然后先在从库上执行reset master，再执行set global gtid_purged =‘gtid_purged1’；最后执行start slave，就会从主库现存的binlog开始同步。binlog缺失的那一部分，数据在从库上就可能会有丢失，造成主从不一致。</p>\n</li>\n<li>\n<p>如果需要主从数据一致的话，最好还是通过重新搭建从库来做。</p>\n</li>\n<li>\n<p>如果有其他的从库保留有全量的binlog的话，可以把新的从库先接到这个保留了全量binlog的从库，追上日志以后，如果有需要，再接回主库。</p>\n</li>\n<li>\n<p>如果binlog有备份的情况，可以先在从库上应用缺失的binlog，然后再执行start slave。</p>\n</li>\n</ol><p>评论区留言点赞板：</p><blockquote>\n<p>@悟空 同学级联实验，验证了seconds_behind_master的计算逻辑。</p>\n</blockquote><blockquote>\n<p>@_CountingStars 问了一个好问题：MySQL是怎么快速定位binlog里面的某一个GTID位置的？答案是，在binlog文件头部的Previous_gtids可以解决这个问题。</p>\n</blockquote><blockquote>\n<p>@王朋飞 同学问了一个好问题，sql_slave_skip_counter跳过的是一个event，由于MySQL总不能执行一半的事务，所以既然跳过了一个event，就会跳到这个事务的末尾，因此set global sql_slave_skip_counter=1;start slave是可以跳过整个事务的。</p>\n</blockquote>","neighbors":{"left":{"article_title":"27 | 主库出问题了，从库怎么办？","id":77427},"right":{"article_title":"29 | 如何判断一个数据库是不是出问题了？","id":78134}},"comments":[{"had_liked":false,"id":61098,"user_name":"有铭","can_delete":false,"product_type":"c1","uid":1046302,"ip_address":"","ucode":"2C7CB36CA5C04C","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/3XbCueYYVWTiclv8T5tFpwiblOxLphvSZxL4ujMdqVMibZnOiaFK2C5nKRGv407iaAsrI0CDICYVQJtiaITzkjfjbvrQ/132","comment_is_top":false,"comment_ctime":1547619822,"is_pvip":false,"replies":[{"id":"21763","content":"这样我觉得你和我的时间都值了😆<br><br>把你更新了认识的点发到评论区，这样会印象更深哈🤝<br>","user_name":"作者回复","comment_id":61098,"uid":"1264162","ip_address":"","utype":1,"ctime":1547622265,"user_name_real":"林晓斌"}],"discussion_count":8,"race_medal":0,"score":"491173891566","product_id":100020801,"comment_content":"这专栏真的是干货满满，每看一篇我都有“我发现我真的不会使用MySQL”和“我原来把MySQL用错了”的挫败感","like_count":115,"discussions":[{"author":{"id":1264162,"avatar":"https://static001.geekbang.org/account/avatar/00/13/4a/22/2681d602.jpg","nickname":"林晓斌","note":"","ucode":"CDE42D44F26240","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":436742,"discussion_content":"这样我觉得你和我的时间都值了😆\n\n把你更新了认识的点发到评论区，这样会印象更深哈🤝\n","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1547622265,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1015189,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/7d/95/dd73022c.jpg","nickname":"我是曾经那个少年","note":"","ucode":"9F02F7FF147D14","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":352521,"discussion_content":"后端开发，看完之后一脸懵逼，全是挫败感。","likes_number":9,"is_delete":false,"is_hidden":false,"ctime":1614761080,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":5,"child_discussions":[{"author":{"id":1809686,"avatar":"https://static001.geekbang.org/account/avatar/00/1b/9d/16/a2fb8136.jpg","nickname":"季某人","note":"","ucode":"1EEF2A58C3BD79","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1015189,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/7d/95/dd73022c.jpg","nickname":"我是曾经那个少年","note":"","ucode":"9F02F7FF147D14","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":360579,"discussion_content":"俺也一样","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1616480734,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":352521,"ip_address":""},"score":360579,"extra":""},{"author":{"id":2257035,"avatar":"https://static001.geekbang.org/account/avatar/00/22/70/8b/31a1fcfc.jpg","nickname":"钱思惘","note":"","ucode":"343DB49A374825","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1809686,"avatar":"https://static001.geekbang.org/account/avatar/00/1b/9d/16/a2fb8136.jpg","nickname":"季某人","note":"","ucode":"1EEF2A58C3BD79","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":407309,"discussion_content":"俺也一样","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1634976630,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":360579,"ip_address":""},"score":407309,"extra":""},{"author":{"id":2790511,"avatar":"https://static001.geekbang.org/account/avatar/00/2a/94/6f/9697953b.jpg","nickname":"🏀switch","note":"","ucode":"4449F4A87D49D6","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1015189,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/7d/95/dd73022c.jpg","nickname":"我是曾经那个少年","note":"","ucode":"9F02F7FF147D14","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":542484,"discussion_content":"俺也一样","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1640764769,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":352521,"ip_address":""},"score":542484,"extra":""}]},{"author":{"id":1448630,"avatar":"https://static001.geekbang.org/account/avatar/00/16/1a/b6/4777f789.jpg","nickname":"心声","note":"","ucode":"ABFFC9137B0FC8","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":288084,"discussion_content":"哥们，你是DBA 还是后端开发？","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1593649163,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":61020,"user_name":"曾剑","can_delete":false,"product_type":"c1","uid":1304922,"ip_address":"","ucode":"55466F93BE9978","user_header":"https://static001.geekbang.org/account/avatar/00/13/e9/5a/a6f2ec4b.jpg","comment_is_top":false,"comment_ctime":1547604532,"is_pvip":false,"replies":[{"id":"21744","content":"👍 表示这两篇文章你都get到了","user_name":"作者回复","comment_id":61020,"uid":"1264162","ip_address":"","utype":1,"ctime":1547610644,"user_name_real":"林晓斌"}],"discussion_count":4,"race_medal":0,"score":"375209759284","product_id":100020801,"comment_content":"老师写的每一篇文章都能让我获益良多。每一篇都值得看好几遍。<br>今天的问题，大表做DDL的时候可能会出现主从延迟，导致等 GTID 的方案可能会导致这部分流量全打到主库，或者全部超时。<br>如果这部分流量太大的话，我会选择上一篇文章介绍的两种方法：<br>1.在各个从库先SET sql_log_bin = OFF，然后做DDL，所有从库及备主全做完之后，做主从切换，最后在原来的主库用同样的方式做DDL。<br>2.从库上执行DDL；将从库上执行DDL产生的GTID在主库上利用生成一个空事务GTID的方式将这个GTID在主库上生成出来。<br>各个从库做完之后再主从切换，然后再在原来的主库上同样做一次。<br>需要注意的是如果有MM架构的情况下，承担写职责的主库上的slave需要先停掉。","like_count":88,"discussions":[{"author":{"id":1264162,"avatar":"https://static001.geekbang.org/account/avatar/00/13/4a/22/2681d602.jpg","nickname":"林晓斌","note":"","ucode":"CDE42D44F26240","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":436707,"discussion_content":"👍 表示这两篇文章你都get到了","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1547610644,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1310826,"avatar":"https://static001.geekbang.org/account/avatar/00/14/00/6a/da96c764.jpg","nickname":"尹希闯","note":"","ucode":"A35F70179808D8","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":216582,"discussion_content":"1.那主库上丢失的binlog怎么办？从库可能也没有。\n2.如果主库丢失，从库存在对应binlog，你意思是主从交换吗？之前讲的都是在从库上设置主备库交换参数，完成同步。","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1585467400,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1177315,"avatar":"https://static001.geekbang.org/account/avatar/00/11/f6/e3/e4bcd69e.jpg","nickname":"沉淀的梦想","note":"","ucode":"BCB7C26F9D214B","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":570853,"discussion_content":"在备库执行 DDL 理论上不也会造成延迟吗？和 binlog 同步执行的 DDL 有什么区别呢？为什么能解决主库 DDL 主从延迟的问题？ 求解答","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1651942310,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":1,"child_discussions":[{"author":{"id":1599768,"avatar":"https://static001.geekbang.org/account/avatar/00/18/69/18/ca8a5c22.jpg","nickname":"收","note":"","ucode":"EC3338DB7AEF34","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1177315,"avatar":"https://static001.geekbang.org/account/avatar/00/11/f6/e3/e4bcd69e.jpg","nickname":"沉淀的梦想","note":"","ucode":"BCB7C26F9D214B","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":578167,"discussion_content":"好问题，如果从库做先做ddl此时除了该表(如果锁表)其他表还可以承接流量，主从切换后也是一样的道理。\n原延迟时间：从库执行ddl，此时是针对整个实例的延迟\n新版本：除ddl表外没有延迟\n把不可用的时间缩小，实际上就是节省了延迟时间。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1656552652,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":570853,"ip_address":""},"score":578167,"extra":""}]}]},{"had_liked":false,"id":61281,"user_name":"某、人","can_delete":false,"product_type":"c1","uid":1308784,"ip_address":"","ucode":"ADB42AA12A11C1","user_header":"https://static001.geekbang.org/account/avatar/00/13/f8/70/f3a33a14.jpg","comment_is_top":false,"comment_ctime":1547651526,"is_pvip":false,"replies":[{"id":"21798","content":"额，这个最难回答了<br><br>说实话因为我原来团队是团队自己做的proxy（没有开源），所以我对其他proxy用得并不多，实在不敢随便指一个。<br><br>如果我说个比较熟悉的话，可能MariaDB MaxScale还不错","user_name":"作者回复","comment_id":61281,"uid":"1264162","ip_address":"","utype":1,"ctime":1547659104,"user_name_real":"林晓斌"}],"discussion_count":5,"race_medal":0,"score":"169051376070","product_id":100020801,"comment_content":"老师我先请教两个问题(估计大多数同学都有这个疑惑)😄:<br>1.现在的中间件可以说是乱花渐欲迷人眼,请问老师哪一款中间件适合大多数不分库分表,只是做读写分离业务的proxy,能推荐一款嘛?毕竟大多数公司都没有专门做中间件开发的团队<br>2.如果是业务上进行了分库分表,老师能推荐一款分库分表的proxy嘛？我目前了解到的针对分库分表的proxy都或多或少有些问题。不过分布式数据库是一个趋势也是一个难点。","like_count":40,"discussions":[{"author":{"id":1264162,"avatar":"https://static001.geekbang.org/account/avatar/00/13/4a/22/2681d602.jpg","nickname":"林晓斌","note":"","ucode":"CDE42D44F26240","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":436816,"discussion_content":"额，这个最难回答了\n\n说实话因为我原来团队是团队自己做的proxy（没有开源），所以我对其他proxy用得并不多，实在不敢随便指一个。\n\n如果我说个比较熟悉的话，可能MariaDB MaxScale还不错","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1547659104,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1044546,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/f0/42/7728d4f5.jpg","nickname":"艿艿","note":"","ucode":"8F727AB7A7F6B2","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":39162,"discussion_content":"可以考虑使用 sharding sphere 。","likes_number":8,"is_delete":false,"is_hidden":false,"ctime":1571899618,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1259077,"avatar":"https://static001.geekbang.org/account/avatar/00/13/36/45/23cf8dcd.jpg","nickname":"没想好。。。","note":"","ucode":"8377B471928145","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":15361,"discussion_content":"我们公司是用的mycat感觉还挺方便，配置也简单","likes_number":2,"is_delete":false,"is_hidden":false,"ctime":1568817058,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":2104856,"avatar":"https://static001.geekbang.org/account/avatar/00/20/1e/18/9d1f1439.jpg","nickname":"liaomars","note":"","ucode":"4FCA97EE9FB57D","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":566861,"discussion_content":"用云数据库提供完整方案","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1650781406,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1794060,"avatar":"https://static001.geekbang.org/account/avatar/00/1b/60/0c/e1f012cb.jpg","nickname":"frankie","note":"","ucode":"813D1352B68A21","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":257521,"discussion_content":"实现读写分离 我推荐用haproxy,自动负载均衡，一个节点挂调之后，自动去读取没有挂调的节点，挂调的节点恢复后，还能自动去读。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1588582083,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":106586,"user_name":"狼猫","can_delete":false,"product_type":"c1","uid":1080112,"ip_address":"","ucode":"F911CC975F4218","user_header":"https://static001.geekbang.org/account/avatar/00/10/7b/30/1b50450b.jpg","comment_is_top":false,"comment_ctime":1561350055,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"126115401639","product_id":100020801,"comment_content":"全网最好的课程，没有之一，不接受反驳","like_count":30},{"had_liked":false,"id":61254,"user_name":"易翔","can_delete":false,"product_type":"c1","uid":1304541,"ip_address":"","ucode":"8C63DB7379186C","user_header":"https://static001.geekbang.org/account/avatar/00/13/e7/dd/e68f9cf5.jpg","comment_is_top":false,"comment_ctime":1547646830,"is_pvip":false,"discussion_count":2,"race_medal":0,"score":"121806731118","product_id":100020801,"comment_content":"为老师一句你的时间和我的时间都值了。点赞","like_count":28,"discussions":[{"author":{"id":1199343,"avatar":"https://static001.geekbang.org/account/avatar/00/12/4c/ef/c1593763.jpg","nickname":"Nick","note":"","ucode":"8F8BE8CE3B9EE9","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":54847,"discussion_content":"翔哥，你也在啊","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1574319460,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":1,"child_discussions":[{"author":{"id":1304541,"avatar":"https://static001.geekbang.org/account/avatar/00/13/e7/dd/e68f9cf5.jpg","nickname":"易翔","note":"","ucode":"8C63DB7379186C","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1199343,"avatar":"https://static001.geekbang.org/account/avatar/00/12/4c/ef/c1593763.jpg","nickname":"Nick","note":"","ucode":"8F8BE8CE3B9EE9","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":63993,"discussion_content":"是的，感谢互联网让我与钱哥在这里重逢。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1574929284,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":54847,"ip_address":""},"score":63993,"extra":""}]}]},{"had_liked":false,"id":62374,"user_name":"Mr.Strive.Z.H.L","can_delete":false,"product_type":"c1","uid":1030198,"ip_address":"","ucode":"6D97E159E2EECD","user_header":"https://static001.geekbang.org/account/avatar/00/0f/b8/36/542c96bf.jpg","comment_is_top":false,"comment_ctime":1548041128,"is_pvip":false,"replies":[{"id":"23183","content":"你说得对，这种方案下能支持的DDL只有以下几种：<br>  创建&amp;#47;删除索引、新增最后一列、删除最后一列<br><br>其中DBA会认为“合理”的DDL需求就是： “创建&amp;#47;删除索引、新增最后一列”<br><br>新春快乐~","user_name":"作者回复","comment_id":62374,"uid":"1264162","ip_address":"","utype":1,"ctime":1549270464,"user_name_real":"林晓斌"}],"discussion_count":7,"race_medal":0,"score":"100332288936","product_id":100020801,"comment_content":"老师您好：<br>关于主库大表的DDL操作，我看了问题答案，有两种方案。第一种是读写请求转到主库，在主库上做DDL。第二种是从库上做DDL，完成后进行主从切换。<br><br>关于第二种，有一个疑惑：<br>从库上做DDL，读写请求走主库，等到从库完成后，从库必须要同步DDL期间，主库完成的事务后才能进行主从切换。而如果DDL操作是删除一列，那么在同步过程中会出错呀？（比如抛出这一列不存在的错误）。","like_count":23,"discussions":[{"author":{"id":1264162,"avatar":"https://static001.geekbang.org/account/avatar/00/13/4a/22/2681d602.jpg","nickname":"林晓斌","note":"","ucode":"CDE42D44F26240","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":437188,"discussion_content":"你说得对，这种方案下能支持的DDL只有以下几种：\n  创建&amp;amp;#47;删除索引、新增最后一列、删除最后一列\n\n其中DBA会认为“合理”的DDL需求就是： “创建&amp;amp;#47;删除索引、新增最后一列”\n\n新春快乐~","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1549270464,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":1,"child_discussions":[{"author":{"id":1563985,"avatar":"https://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTKdiaUiaCYQe9tibemaNU5ya7RrU3MYcSGEIG7zF27u0ZDnZs5lYxPb7KPrAsj3bibM79QIOnPXAatfIw/132","nickname":"Geek_a8be59","note":"","ucode":"BEC0F57B51DC44","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1264162,"avatar":"https://static001.geekbang.org/account/avatar/00/13/4a/22/2681d602.jpg","nickname":"林晓斌","note":"","ucode":"CDE42D44F26240","race_medal":0,"user_type":2,"is_pvip":false},"discussion":{"id":588518,"discussion_content":"能在从库调价唯一索引么？比如在从库执行ddl期间某个字段是没有重复的，然后ddl的时候添加了重复。等从句ddl完成然后同步落下的数据岂不是会报错，而主库又是正常的","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1663811034,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":437188,"ip_address":"上海"},"score":588518,"extra":""}]},{"author":{"id":1177315,"avatar":"https://static001.geekbang.org/account/avatar/00/11/f6/e3/e4bcd69e.jpg","nickname":"沉淀的梦想","note":"","ucode":"BCB7C26F9D214B","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":570854,"discussion_content":"在备库执行 DDL 理论上不也会造成延迟吗？和 binlog 同步执行的 DDL 有什么区别呢？为什么能解决主库 DDL 主从延迟的问题？ 求解答","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1651942323,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":2278559,"avatar":"https://static001.geekbang.org/account/avatar/00/22/c4/9f/a01e4bd1.jpg","nickname":"海浪","note":"","ucode":"091941B3556B4B","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":327801,"discussion_content":"为什么是最后一列呢","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1605955304,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":1,"child_discussions":[{"author":{"id":1970443,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTIx1V1QAxC4NHaxYZGyuibBN8lcURJWc5nrnO4yic1kxnDemYV2FJGialf47kYX9qtDnZZOfe1SJeLicg/132","nickname":"lleft","note":"","ucode":"D573EB509455AE","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":2278559,"avatar":"https://static001.geekbang.org/account/avatar/00/22/c4/9f/a01e4bd1.jpg","nickname":"海浪","note":"","ucode":"091941B3556B4B","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":376339,"discussion_content":"增加最后一列，原来的SQL操作不受影响","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1622086874,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":327801,"ip_address":""},"score":376339,"extra":""}]},{"author":{"id":1082785,"avatar":"https://static001.geekbang.org/account/avatar/00/10/85/a1/2442332c.jpg","nickname":"郭俊杰","note":"","ucode":"D328E5738A4413","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":2368,"discussion_content":"老师，这种情况下，那么删除一列的ddl，就直接在主库上执行吗？","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1563521546,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":1,"child_discussions":[{"author":{"id":2133834,"avatar":"https://static001.geekbang.org/account/avatar/00/20/8f/4a/a340734f.jpg","nickname":"平凡","note":"","ucode":"5F7D49235A9598","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1082785,"avatar":"https://static001.geekbang.org/account/avatar/00/10/85/a1/2442332c.jpg","nickname":"郭俊杰","note":"","ucode":"D328E5738A4413","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":409744,"discussion_content":"线上环境dba一般不会允许你删除列，即便是多余的","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1635500826,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":2368,"ip_address":""},"score":409744,"extra":""}]}]},{"had_liked":false,"id":61419,"user_name":"猪哥哥","can_delete":false,"product_type":"c1","uid":1311362,"ip_address":"","ucode":"ACBB4556516D34","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTLkhgYnYZBdhdwKnXQibey04cy9N9ria3DadH7iagoKukaWK1FJwjfCoh0He4p7b2icSYVzHH71l8ZXiaQ/132","comment_is_top":false,"comment_ctime":1547694536,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"78857105864","product_id":100020801,"comment_content":"老师, 你真棒, 我公司的生产环境解决过期读使用的就是强制走主库方案, 看了这篇文章, 困惑了很久的问题迎刃而解！很感谢!","like_count":19},{"had_liked":false,"id":120434,"user_name":"钱","can_delete":false,"product_type":"c1","uid":1009652,"ip_address":"","ucode":"2C92A243A463D4","user_header":"https://static001.geekbang.org/account/avatar/00/0f/67/f4/9a1feb59.jpg","comment_is_top":false,"comment_ctime":1564892013,"is_pvip":false,"replies":[{"id":"44202","content":"👍","user_name":"作者回复","comment_id":120434,"uid":"1264162","ip_address":"","utype":1,"ctime":1564922429,"user_name_real":"林晓斌"}],"discussion_count":2,"race_medal":0,"score":"70284368749","product_id":100020801,"comment_content":"1：单机的性能总是有限的，所以，就出现了读写分离<br>2：读写分离带来了更高的性能，也引入了数据不一致的问题<br>3：为了数据一致性，又产生了各种解决方案<br>人少力量小，人多了事就多，如果管理能力好，还是人多好办事。<br>原理是这样，没怎么实操过，感谢老师的分享，让自己的认知边界有移动了一点点。","like_count":16,"discussions":[{"author":{"id":1264162,"avatar":"https://static001.geekbang.org/account/avatar/00/13/4a/22/2681d602.jpg","nickname":"林晓斌","note":"","ucode":"CDE42D44F26240","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":461332,"discussion_content":"👍","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1564922429,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1018972,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/8c/5c/3f164f66.jpg","nickname":"亚林","note":"","ucode":"4A5A6D24314B79","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":568018,"discussion_content":"人少力量小，人多了事就多，如果管理好，还是人多好办事。（牛皮）","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1651046202,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":61520,"user_name":"Max","can_delete":false,"product_type":"c1","uid":1302420,"ip_address":"","ucode":"E3F1CD8FCB66B3","user_header":"https://static001.geekbang.org/account/avatar/00/13/df/94/84296110.jpg","comment_is_top":false,"comment_ctime":1547713055,"is_pvip":false,"replies":[{"id":"21866","content":"前面的分析很好哈<br><br><br>然后一主13从有点多了，否则主库生成binlog太快的话，主库的网卡会被打爆。要这么多的话，得做级联。<br><br>DBA解决不能靠加机器解决的事情^_^ 而且如果通过优化，可以把13变成3，那也是DBA的价值","user_name":"作者回复","comment_id":61520,"uid":"1264162","ip_address":"","utype":1,"ctime":1547717395,"user_name_real":"林晓斌"}],"discussion_count":2,"race_medal":0,"score":"53087320607","product_id":100020801,"comment_content":"我一般是先是在从库上设置 set_log_bin=off，然后执行ddl,语句。<br>然后完成以后，主从做一下切换。然后在主库上在执行一下set_log_bin=off,执行ddl语句。<br>然后在做一下主从切换。<br>个人对pt-online-scheman-change不是很推荐使用，它的原理基本是创建触发器，然后创建和旧表一样结构的数据表，<br>把旧表的数据复制过去。最后删除旧表。以前做个一个测试，如果旧表一直在被select,删除过程会一直会等待。<br>所以个人不是很建议。万一不小心变成从删库到路步，那就得不偿失了。<br><br>老师，有个问题想请教一下，一主多从可以多到什么地步，以前我们CTO解决的方案就是加机器，一主十三从。<br>当时我是反对的，其实个人建议还是从SQL，业务上面去优化。而不是一味的加机器。如果加机器解决的话，还要DBA做什么呢？","like_count":12,"discussions":[{"author":{"id":1264162,"avatar":"https://static001.geekbang.org/account/avatar/00/13/4a/22/2681d602.jpg","nickname":"林晓斌","note":"","ucode":"CDE42D44F26240","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":436896,"discussion_content":"前面的分析很好哈\n\n\n然后一主13从有点多了，否则主库生成binlog太快的话，主库的网卡会被打爆。要这么多的话，得做级联。\n\nDBA解决不能靠加机器解决的事情^_^ 而且如果通过优化，可以把13变成3，那也是DBA的价值","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1547717395,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1177315,"avatar":"https://static001.geekbang.org/account/avatar/00/11/f6/e3/e4bcd69e.jpg","nickname":"沉淀的梦想","note":"","ucode":"BCB7C26F9D214B","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":570855,"discussion_content":"在备库执行 DDL 和 binlog 同步执行的 DDL 有什么区别呢？为什么能解决问题？ 求解答","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1651942588,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":60927,"user_name":"二马","can_delete":false,"product_type":"c1","uid":1006802,"ip_address":"","ucode":"4F1DF8732242A1","user_header":"","comment_is_top":false,"comment_ctime":1547595073,"is_pvip":false,"replies":[{"id":"21727","content":"修改max_connections参数","user_name":"作者回复","comment_id":60927,"uid":"1264162","ip_address":"","utype":1,"ctime":1547605027,"user_name_real":"林晓斌"}],"discussion_count":1,"race_medal":0,"score":"53087202625","product_id":100020801,"comment_content":"最近做性能测试时发现当并发用户达到一定量(比如500)，部分用户连接不上，能否介绍下MySQL连接相关问题，谢谢！","like_count":12,"discussions":[{"author":{"id":1264162,"avatar":"https://static001.geekbang.org/account/avatar/00/13/4a/22/2681d602.jpg","nickname":"林晓斌","note":"","ucode":"CDE42D44F26240","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":436667,"discussion_content":"修改max_connections参数","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1547605027,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":61166,"user_name":"万勇","can_delete":false,"product_type":"c1","uid":1309092,"ip_address":"","ucode":"BC9E0918DF4516","user_header":"https://static001.geekbang.org/account/avatar/00/13/f9/a4/f0b92135.jpg","comment_is_top":false,"comment_ctime":1547630544,"is_pvip":false,"replies":[{"id":"21780","content":"1. 是这样的，我们说的是，如果非紧急情况下，还是尽量用gh-ost，在“紧急”的情况下，才这么做；确实是要绕过proxy的，也就是说，这事儿是要负责运维的同学做；<br>2. pt工具是有这个问题，试一下gh-ost哈；group_replication多写模式国内我还没有听到国内有公司在生产上大规模用的，如果你有使用经验，分享一下哈","user_name":"作者回复","comment_id":61166,"uid":"1264162","ip_address":"","utype":1,"ctime":1547635411,"user_name_real":"林晓斌"}],"discussion_count":2,"race_medal":0,"score":"35907368912","product_id":100020801,"comment_content":"老师，请教下。<br>1.对大表做ddl，是可以采用先在备库上set global log_bin=off，先做完ddl，然后切换主备库。为了保证数据一致性，在切主备的时候，数据库会有个不可用的时间段，对业务会造成影响。现在的架构方式，中间层还有proxy，意味着proxy也需要修改主备配置，做reload。这样做的话，感觉成本太高，在真正的生产环境中，这种方法适用吗？<br>2.目前我们常采用的是对几百万以上的表用pt-online-schema-change，这种方式会产生大量的binlog，业务高峰期不能做，会引起主备延迟。在生产业务中，我觉得等主库节点或者等gtid这种方案挺不错，至少能保证业务，但也会增加主库的压力。<br>3.5.7版本出的group_replication多写模式性能不知道如何？架构变动太大，还不敢上。<br>","like_count":8,"discussions":[{"author":{"id":1264162,"avatar":"https://static001.geekbang.org/account/avatar/00/13/4a/22/2681d602.jpg","nickname":"林晓斌","note":"","ucode":"CDE42D44F26240","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":436770,"discussion_content":"1. 是这样的，我们说的是，如果非紧急情况下，还是尽量用gh-ost，在“紧急”的情况下，才这么做；确实是要绕过proxy的，也就是说，这事儿是要负责运维的同学做；\n2. pt工具是有这个问题，试一下gh-ost哈；group_replication多写模式国内我还没有听到国内有公司在生产上大规模用的，如果你有使用经验，分享一下哈","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1547635411,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":2009461,"avatar":"https://static001.geekbang.org/account/avatar/00/1e/a9/75/dbccd12d.jpg","nickname":"稻草人","note":"","ucode":"6694EE2CD36B8C","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":356393,"discussion_content":"gh-ost工具介绍：https://www.cnblogs.com/zhoujinyi/p/9187502.html\npt-osc死锁分析：https://www.cnblogs.com/code-007/p/7729569.html","likes_number":5,"is_delete":false,"is_hidden":false,"ctime":1615576049,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":253869,"user_name":"天下第七","can_delete":false,"product_type":"c1","uid":1085515,"ip_address":"","ucode":"62560E80452772","user_header":"https://static001.geekbang.org/account/avatar/00/10/90/4b/ba24dc0e.jpg","comment_is_top":false,"comment_ctime":1602924249,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"27372728025","product_id":100020801,"comment_content":"这绝对极客时间最干货的专栏，内容+评论都是高精，原来我不会MySQL，我对MySQL一无所知，惭愧惭愧。","like_count":6},{"had_liked":false,"id":174221,"user_name":"Zhaoyang","can_delete":false,"product_type":"c1","uid":1037190,"ip_address":"","ucode":"131D83AC2566D2","user_header":"https://static001.geekbang.org/account/avatar/00/0f/d3/86/b5d72c87.jpg","comment_is_top":false,"comment_ctime":1580094508,"is_pvip":false,"discussion_count":2,"race_medal":0,"score":"27349898284","product_id":100020801,"comment_content":"最近这几篇文章，真是看的我比较辛苦，因为我平时的业务都是增删改查，而且，有DBA同学呢，所以主从这里我接触的非常少，我顶多也就考虑一下主从不同步的问题。其他问题我都不会想到。也不会知道怎么解决。<br>那我接下来还是先把专栏过一遍把，先留个大概其的印象，目前来说并没有搞懂，因为自己确实没有经历过。","like_count":6,"discussions":[{"author":{"id":1812970,"avatar":"https://static001.geekbang.org/account/avatar/00/1b/a9/ea/5bfce6c5.jpg","nickname":"mgs2002","note":"","ucode":"F5931108BD509B","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":292767,"discussion_content":"我也一样的","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1595324856,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1658592,"avatar":"https://static001.geekbang.org/account/avatar/00/19/4e/e0/25cc5c57.jpg","nickname":"final👿 👿","note":"","ucode":"10F728A2DD3753","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":533178,"discussion_content":"确实，看到后面感觉都 有点模糊","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1637808069,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"user_type\":1}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":84701,"user_name":"啊啊啊哦哦","can_delete":false,"product_type":"c1","uid":1309877,"ip_address":"","ucode":"68C7153ECAAC57","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/RNO4yZyBvic914hewmNNE8iblYDcfv5yGHZ9OnKuCuZXNmGR0F5qV3icKLT2xpMt66GyEpicZVvrmz8A6TIqt92MQg/132","comment_is_top":false,"comment_ctime":1554896110,"is_pvip":false,"replies":[{"id":"30743","content":"设计不出bug的话，应该要😆","user_name":"作者回复","comment_id":84701,"uid":"1264162","ip_address":"","utype":1,"ctime":1555146383,"user_name_real":"林晓斌"}],"discussion_count":2,"race_medal":0,"score":"23029732590","product_id":100020801,"comment_content":"老师。最近公司在阿里云要用 一主多从。 我想问下阿里的。 select *from test for update 会定位到主库吗","like_count":5,"discussions":[{"author":{"id":1264162,"avatar":"https://static001.geekbang.org/account/avatar/00/13/4a/22/2681d602.jpg","nickname":"林晓斌","note":"","ucode":"CDE42D44F26240","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":446424,"discussion_content":"设计不出bug的话，应该要😆","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1555146383,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1009693,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTJLxEbhSEziblPNVkr9XFIAzPCib0TQvBxHYwiaKiaib7ExZ8dmUWyqWoibSedACTHCf52INMib80ic92G6wQ/132","nickname":"刘章","note":"","ucode":"7608C518D49AE4","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":581795,"discussion_content":"这种查询有风险吧，会锁表吧","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1658996053,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":"陕西"},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":61095,"user_name":"Dovelol","can_delete":false,"product_type":"c1","uid":1253384,"ip_address":"","ucode":"9B5DDF7720F307","user_header":"https://static001.geekbang.org/account/avatar/00/13/20/08/bc06bc69.jpg","comment_is_top":false,"comment_ctime":1547619253,"is_pvip":false,"replies":[{"id":"21762","content":"1. 这个等待时间其实就基本上是主备延迟的时间<br>2. 用了proxy这事情就得proxy做了，就不要客户端做了。没有gtid，可以用倒数第二种方法呀：）<br>3. 是的，其实“走主库”这种做法还挺多的。我之前看到有的公司的做法，就是直接拆库了。等于一套“一主多从”拆成多套。","user_name":"作者回复","comment_id":61095,"uid":"1264162","ip_address":"","utype":1,"ctime":1547622136,"user_name_real":"林晓斌"}],"discussion_count":1,"race_medal":0,"score":"23022455733","product_id":100020801,"comment_content":"老师好，有几个问题想请教下，<br>1.如果不想有过期读，用等GTID的方案，那么每次查询都要有等GTID的相关操作，增加的这部分对性能有多少影响；<br>2.我们用的读写分离proxy不支持等GTID，那是不是自己要在客户端实现这部分逻辑，等于读写分离的架构既用了proxy，又在客户端做了相关策略，感觉这方案更适合有能力自研proxy的公司啊；<br>3.感觉目前大多数生产环境还是用的读主库这种方式避免过期读，如果只能用这种方案的话该怎么扩展mysql架构来避免主库压力太大呢。<br>我们是项目上线很久然后加的读写分离，好多service层代码写的不好，可以读从库的sql被写到了事务中，这样会被proxy转到主库上读，所以导致主库负担了好多读的sql，感觉读写分离不仅对mysql这块要掌握，整体的代码结构上也要有所调整吧。","like_count":5,"discussions":[{"author":{"id":1264162,"avatar":"https://static001.geekbang.org/account/avatar/00/13/4a/22/2681d602.jpg","nickname":"林晓斌","note":"","ucode":"CDE42D44F26240","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":436741,"discussion_content":"1. 这个等待时间其实就基本上是主备延迟的时间\n2. 用了proxy这事情就得proxy做了，就不要客户端做了。没有gtid，可以用倒数第二种方法呀：）\n3. 是的，其实“走主库”这种做法还挺多的。我之前看到有的公司的做法，就是直接拆库了。等于一套“一主多从”拆成多套。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1547622136,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":281479,"user_name":"我是曾经那个少年","can_delete":false,"product_type":"c1","uid":1015189,"ip_address":"","ucode":"9F02F7FF147D14","user_header":"https://static001.geekbang.org/account/avatar/00/0f/7d/95/dd73022c.jpg","comment_is_top":false,"comment_ctime":1614761276,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"18794630460","product_id":100020801,"comment_content":"阿里云数据库的方案就是，增加事物注解强制走主库，我感觉这个思路挺好，业务上也比较简单。","like_count":5},{"had_liked":false,"id":122967,"user_name":"Charles | 姜海龙","can_delete":false,"product_type":"c1","uid":1178235,"ip_address":"","ucode":"17BA74D1684184","user_header":"https://static001.geekbang.org/account/avatar/00/11/fa/7b/f89a398b.jpg","comment_is_top":false,"comment_ctime":1565580540,"is_pvip":false,"discussion_count":2,"race_medal":0,"score":"18745449724","product_id":100020801,"comment_content":"这专栏真的是干货满满，每看一篇我都有“我发现我真的不会使用MySQL”和“我原来把MySQL用错了”的挫败感","like_count":4,"discussions":[{"author":{"id":1997293,"avatar":"https://static001.geekbang.org/account/avatar/00/1e/79/ed/4737a49b.jpg","nickname":"雪の雫·雨の音","note":"","ucode":"0693DA3939A321","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":270422,"discussion_content":"越学越发现自己懂得不多","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1590001869,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1044546,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/f0/42/7728d4f5.jpg","nickname":"艿艿","note":"","ucode":"8F727AB7A7F6B2","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":39163,"discussion_content":"同挫败感。。。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1571899644,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":103950,"user_name":"晓杰","can_delete":false,"product_type":"c1","uid":1441546,"ip_address":"","ucode":"1174C88EEBF8A6","user_header":"https://static001.geekbang.org/account/avatar/00/15/ff/0a/12faa44e.jpg","comment_is_top":false,"comment_ctime":1560570831,"is_pvip":false,"replies":[{"id":"37609","content":"在说主备延迟&#47;主从延迟的时候，从库和备库我当成同一个概念了😆","user_name":"作者回复","comment_id":103950,"uid":"1264162","ip_address":"","utype":1,"ctime":1560585460,"user_name_real":"林晓斌"}],"discussion_count":1,"race_medal":0,"score":"18740440015","product_id":100020801,"comment_content":"看了判断主备无延迟这种方案，有个疑惑：<br>读写分离的读应该是读从库的吧，为什么是去判断主备无延迟，而不是判断主从的无延迟<br>","like_count":4,"discussions":[{"author":{"id":1264162,"avatar":"https://static001.geekbang.org/account/avatar/00/13/4a/22/2681d602.jpg","nickname":"林晓斌","note":"","ucode":"CDE42D44F26240","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":454071,"discussion_content":"在说主备延迟/主从延迟的时候，从库和备库我当成同一个概念了😆","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1560585460,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":310771,"user_name":"SZQ","can_delete":false,"product_type":"c1","uid":2372454,"ip_address":"","ucode":"DB138F4A65CF87","user_header":"https://static001.geekbang.org/account/avatar/00/24/33/66/edaee2fc.jpg","comment_is_top":false,"comment_ctime":1630898310,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"14515800198","product_id":100020801,"comment_content":"这一篇看了第三遍，还是看得头晕，等到猴年马月再回来看一下吧","like_count":3},{"had_liked":false,"id":209904,"user_name":"杨","can_delete":false,"product_type":"c1","uid":1971269,"ip_address":"","ucode":"7EFEFE285975C6","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/oltLEqTrmHm2aJP99BK6tHu5h7hp4aj08wR5Wt6H31iadFduDAVvjYKmhQ2nvGbLV3lkVdiat2GRasgWXoJeTibUg/132","comment_is_top":false,"comment_ctime":1587633828,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"14472535716","product_id":100020801,"comment_content":"我主从库以前都不知道怎么实现的哈哈，看了老师的专栏学到了很多<br>如何开启gtid老师看看这个可以吗?<br>gtid_mode=ON<br>enforce_gtid_consistency=ON<br>http:&#47;&#47;blog.itpub.net&#47;31429259&#47;viewspace-2643665&#47;<br>等库位点方案select master_pos_wait(File, Position, 1)我在mysql中执行不了是什么原因呀?<br>客户端代码中调用 mysql_session_track_get_first 这个函数?<br>这个我用java或者go怎么调用?直接java调用函数函数一样调用mysql_session_track_get_first吗","like_count":3},{"had_liked":false,"id":64264,"user_name":"IceGeek17","can_delete":false,"product_type":"c1","uid":1103101,"ip_address":"","ucode":"1B42D7260449B4","user_header":"https://static001.geekbang.org/account/avatar/00/10/d4/fd/43802282.jpg","comment_is_top":false,"comment_ctime":1548728736,"is_pvip":false,"replies":[{"id":"22953","content":"额，这个问题有点大… 你提一个具体问题我们来讨论吧","user_name":"作者回复","user_name_real":"林晓斌","uid":"1264162","ctime":1548940648,"ip_address":"","comment_id":64264,"utype":1}],"discussion_count":1,"race_medal":0,"score":"14433630624","product_id":100020801,"comment_content":"老师，能不能分析下，如果去实现一个做读写分离的proxy，有哪些重要的点要考虑，比如：连接管理、流量分配管理、proxy自己的高可用，等等。<br>因为老师原来的团队自己开发过proxy，肯定有相关的经验，也趟过很多坑，能不能从如何实现一个proxy需要考虑哪些关键点，在架构上做一个分析和梳理","like_count":3,"discussions":[{"author":{"id":1264162,"avatar":"https://static001.geekbang.org/account/avatar/00/13/4a/22/2681d602.jpg","nickname":"林晓斌","note":"","ucode":"CDE42D44F26240","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":437928,"discussion_content":"额，这个问题有点大… 你提一个具体问题我们来讨论吧","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1548940648,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":62346,"user_name":"black_mirror","can_delete":false,"product_type":"c1","uid":1320092,"ip_address":"","ucode":"2549C87298BF12","user_header":"https://thirdwx.qlogo.cn/mmopen/vi_32/Q3auHgzwzM4z9WYWVvWDhMF0SicPE5ad56ME6DibyWGbRoQa0lH4U9icdsjNcv3ssRickcuRMDA01e6vMXnmOVSr9l5LVUefVxicn/132","comment_is_top":false,"comment_ctime":1548035991,"is_pvip":false,"replies":[{"id":"22030","content":"不知道python是不是有方法可以把c代码作为扩展模块😅","user_name":"作者回复","user_name_real":"林晓斌","uid":"1264162","ctime":1548037506,"ip_address":"","comment_id":62346,"utype":1}],"discussion_count":1,"race_medal":0,"score":"14432937879","product_id":100020801,"comment_content":"林老师 您好<br>请问mysql_session_track_get_fitst这个函数查询了官方资料都需要可以修改源码<br>1.在不懂c++情况下，github上下载源码后怎么尝试简单编译使用，如图8代码<br>2. mysql_session_track_get_fitst函数貌似没有python语言api，不会java，想在代码层面模拟整个过程，还有木有解决方法？","like_count":3,"discussions":[{"author":{"id":1264162,"avatar":"https://static001.geekbang.org/account/avatar/00/13/4a/22/2681d602.jpg","nickname":"林晓斌","note":"","ucode":"CDE42D44F26240","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":437176,"discussion_content":"不知道python是不是有方法可以把c代码作为扩展模块😅","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1548037506,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":61393,"user_name":"ThinkingQuest","can_delete":false,"product_type":"c1","uid":1118560,"ip_address":"","ucode":"597D0C00DAEFE4","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/0SDRac7XoordnKYgDLhz5wxAOtE6xqcsSywsywEtKQAR7xicBZQ6ceYftfZjl4Ivq3a5dzvRhYkn2GcUWiaQK7ZQ/132","comment_is_top":false,"comment_ctime":1547689149,"is_pvip":false,"replies":[{"id":"21868","content":"JDBC的connector我也没研究过，不过我认为应该是非interactive模式。<br><br>需要这两个的原因，还是因为有不同的使用模式，给MySQL客户端和一些其他的可视化工具客户端使用。","user_name":"作者回复","user_name_real":"林晓斌","uid":"1264162","ctime":1547717492,"ip_address":"","comment_id":61393,"utype":1}],"discussion_count":1,"race_medal":0,"score":"14432591037","product_id":100020801,"comment_content":"楼上有人提到8小时自动断开连接的问题。 <br>mysql中有wait_timeout和interactive_timeout两个参数。 <br><br>这俩参数挺容易混淆的，往上博客文章说的很多，但是不敢相信他们。<br>官方的解释在这里：<br>https:&#47;&#47;dev.mysql.com&#47;doc&#47;refman&#47;8.0&#47;en&#47;server-system-variables.html#sysvar_interactive_timeout<br>https:&#47;&#47;dev.mysql.com&#47;doc&#47;refman&#47;8.0&#47;en&#47;server-system-variables.html#sysvar_wait_timeout<br><br>只说用这两个参数中的哪个，取决于客户端调用mysql_real_connect()的时候传递的options中是否使用了CLIENT_INTERACTIVE选项。<br><br>但是很多做java开发的同学，想必并不知道JDBC的connector用的是哪一个。 <br>我倾向于认为是interactive_timeout。 mysql client cli大概是wait_timeout吧。<br>其实做一个实验就可以知道结果。 但是不阅读mysql代码，大概不能理解mysql为什么设计这么两个timeout，是出于什么考虑的。","like_count":3,"discussions":[{"author":{"id":1264162,"avatar":"https://static001.geekbang.org/account/avatar/00/13/4a/22/2681d602.jpg","nickname":"林晓斌","note":"","ucode":"CDE42D44F26240","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":436861,"discussion_content":"JDBC的connector我也没研究过，不过我认为应该是非interactive模式。\n\n需要这两个的原因，还是因为有不同的使用模式，给MySQL客户端和一些其他的可视化工具客户端使用。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1547717492,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":253884,"user_name":"moonfox","can_delete":false,"product_type":"c1","uid":1526355,"ip_address":"","ucode":"902BFF40EFA9FA","user_header":"https://static001.geekbang.org/account/avatar/00/17/4a/53/063f9d17.jpg","comment_is_top":false,"comment_ctime":1602932173,"is_pvip":false,"discussion_count":3,"race_medal":0,"score":"10192866765","product_id":100020801,"comment_content":"请问下，文中提到 “如果主库掉电的时候，有些 binlog 还来不及发给从库，会导致系统数据丢失”。这里所说的系统数据丢失是什么意思？从库没收到日志导致的主从不一致？如果是这样，主库恢复后，不可以重新传给从库么？","like_count":2,"discussions":[{"author":{"id":1201009,"avatar":"https://static001.geekbang.org/account/avatar/00/12/53/71/a4e9f20e.jpg","nickname":"言午木杉","note":"","ucode":"300BEDC1B07DF1","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":349606,"discussion_content":"应该是这样一个情景，之前说过在主库中一个事务的完成是：redolog prepare => binlog commit => redolog commit。当断电瞬间执行到 binlog commit时断电，但是此时 redolog prepare 阶段已经写入到 redolog 文件了，而 binlog 因为断电还没有落盘，而当主库重启时候，数据恢复过程中根据 redolog 发现事务已经完成，但是binlog没有，会补全缺失的数据，但是并不会产生binlog了。直观上来看就是，这个事务在主库数据是一致的，但是 binlog 文件缺失了。所以就算主从恢复了，从库请求同步，主库也没有东西发过去，从库自然数据就会丢失。","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1613377627,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":1,"child_discussions":[{"author":{"id":1130590,"avatar":"https://static001.geekbang.org/account/avatar/00/11/40/5e/b8fada94.jpg","nickname":"Ryoma","note":"","ucode":"7F692369239692","race_medal":2,"user_type":1,"is_pvip":true},"reply_author":{"id":1201009,"avatar":"https://static001.geekbang.org/account/avatar/00/12/53/71/a4e9f20e.jpg","nickname":"言午木杉","note":"","ucode":"300BEDC1B07DF1","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":376781,"discussion_content":"binlog 没有 commit，主库重启不会恢复数据的。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1622343182,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":349606,"ip_address":""},"score":376781,"extra":""}]},{"author":{"id":1130590,"avatar":"https://static001.geekbang.org/account/avatar/00/11/40/5e/b8fada94.jpg","nickname":"Ryoma","note":"","ucode":"7F692369239692","race_medal":2,"user_type":1,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":376782,"discussion_content":"如果主库一直掉电呢？只能通过备库恢复数据，而此时有部分数据仅存在主库中，故而会导致数据缺失","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1622343235,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":77058,"user_name":"涛哥哥","can_delete":false,"product_type":"c1","uid":1361159,"ip_address":"","ucode":"329A1384E3AB5E","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/DYAIOgq83eqJobg767PUeqrqQQ4B6YvMatj2SRyOicKZZ4gWTf30dMketiaj58Gc3RFTmckGxAXlL9ERSxGovq9g/132","comment_is_top":false,"comment_ctime":1552821503,"is_pvip":false,"replies":[{"id":"28207","content":"不建议，容易主备不一致","user_name":"作者回复","user_name_real":"林晓斌","uid":"1264162","ctime":1552918759,"ip_address":"","comment_id":77058,"utype":1}],"discussion_count":1,"race_medal":0,"score":"10142756095","product_id":100020801,"comment_content":"老师，想问一下，主库用innodb引擎， 从库用 myisam可以吗？如果主库挂了，不准备用从库顶上来，建议这样用不同引擎吗？谢谢老师  😊😊","like_count":2,"discussions":[{"author":{"id":1264162,"avatar":"https://static001.geekbang.org/account/avatar/00/13/4a/22/2681d602.jpg","nickname":"林晓斌","note":"","ucode":"CDE42D44F26240","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":443566,"discussion_content":"不建议，容易主备不一致","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1552918759,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":306743,"user_name":"Geek_8a8abf","can_delete":false,"product_type":"c1","uid":1546393,"ip_address":"","ucode":"05A27D9DB4EC22","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTL3UicUedUgydknpcnBRh58IZPmeoPnEYzt3KgwPk7XfdwR9LDaicGhIXJibTw2c8sVAUu24zmD1bDew/132","comment_is_top":false,"comment_ctime":1628687990,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"5923655286","product_id":100020801,"comment_content":"从开发的角度考虑，等待主库位点和GTID的方案不知道怎么在业务中使用，对于数据的读和写一般都是不同的线程或进程，A更新了某行数据提交后可以拿到GTID，但是B进程去读数据的时候怎么去拿到A更新后的GTID，从而判断从库已经是最新的数据了","like_count":1},{"had_liked":false,"id":269125,"user_name":"x-ray","can_delete":false,"product_type":"c1","uid":1140175,"ip_address":"","ucode":"8363F0C4D0AC0B","user_header":"https://static001.geekbang.org/account/avatar/00/11/65/cf/326c0eea.jpg","comment_is_top":false,"comment_ctime":1608533566,"is_pvip":false,"discussion_count":2,"race_medal":0,"score":"5903500862","product_id":100020801,"comment_content":"等位点和GTID这两个方案，我有个疑问，这个看起来，似乎只能用在一次更新紧接着一次查询的时候。因为此时他们处于同一个事务中，或者说同一个HTTP请求中。所以这次查询能拿到上次更新的位点和GTID。假如A用户更新，B用户查询，这种情况，B用户的这个查询，怎么拿到A用户那次更新的GTID或者位点呢？","like_count":1,"discussions":[{"author":{"id":2031114,"avatar":"","nickname":"毛毛酱","note":"","ucode":"056E939BD62D44","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":351734,"discussion_content":"我也有同样的疑问，你得到答案了么？","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1614419292,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":1,"child_discussions":[{"author":{"id":1514292,"avatar":"https://static001.geekbang.org/account/avatar/00/17/1b/34/4d8c5694.jpg","nickname":"Movan","note":"","ucode":"D5A2E9E2E7A439","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":2031114,"avatar":"","nickname":"毛毛酱","note":"","ucode":"056E939BD62D44","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":380589,"discussion_content":"+1","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1624593944,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":351734,"ip_address":""},"score":380589,"extra":""}]}]},{"had_liked":false,"id":230333,"user_name":"夜虏","can_delete":false,"product_type":"c1","uid":1136756,"ip_address":"","ucode":"4E02CFF0B2C5F1","user_header":"https://static001.geekbang.org/account/avatar/00/11/58/74/6ca93fbf.jpg","comment_is_top":false,"comment_ctime":1593350088,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"5888317384","product_id":100020801,"comment_content":"有两个问题没有搞明白<br>1. 如何判断查询的发起是在一个更新事物中？<br>2. 如何判断查询的发起是紧跟在一个更新事物之后？","like_count":1},{"had_liked":false,"id":216467,"user_name":"Geek_mango","can_delete":false,"product_type":"c1","uid":1526460,"ip_address":"","ucode":"C9B4FD825065B5","user_header":"https://static001.geekbang.org/account/avatar/00/17/4a/bc/21b36468.jpg","comment_is_top":false,"comment_ctime":1589265861,"is_pvip":false,"discussion_count":1,"race_medal":0,"score":"5884233157","product_id":100020801,"comment_content":"MySQL 5.7新增了rpl_semi_sync_master_wait_slave_count参数，可以用来控制主库接受多少个slave写事务成功反馈，给高可用架构切换提供了灵活性。","like_count":1,"discussions":[{"author":{"id":1062848,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/DYAIOgq83ersGSic8ib7OguJv6CJiaXY0s4n9C7Z51sWxTTljklFpq3ZAIWXoFTPV5oLo0GMTkqW5sYJRRnibNqOJQ/132","nickname":"walle斌","note":"","ucode":"0DB3243004951F","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":296294,"discussion_content":"哈  这个参数也会导致写入的延迟，最后会不会想hdfs一样，至少3个以上的同步写入才可以，只不过是写入块而已。。哈哈 最后技术路子 高度相似","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1596504299,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":177274,"user_name":"zero","can_delete":false,"product_type":"c1","uid":1684113,"ip_address":"","ucode":"27019747CA63FF","user_header":"https://static001.geekbang.org/account/avatar/00/19/b2/91/fbc34225.jpg","comment_is_top":false,"comment_ctime":1581339759,"is_pvip":true,"discussion_count":0,"race_medal":0,"score":"5876307055","product_id":100020801,"comment_content":"看完发现，白用了这么长时间mysql","like_count":1},{"had_liked":false,"id":112236,"user_name":"null","can_delete":false,"product_type":"c1","uid":1024294,"ip_address":"","ucode":"F9039EFED6B55D","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/PiajxSqBRaELZPnUAiajaR5C25EDLWeJURggyiaOP5GGPe2qlwpQcm5e3ybib8OsP4tvddFDLVRSNNGL5I3SFPJHsA/132","comment_is_top":false,"comment_ctime":1562688769,"is_pvip":false,"discussion_count":2,"race_medal":0,"score":"5857656065","product_id":100020801,"comment_content":"老师，您好！<br><br>课后思考题，想到了 27 课的“GTID 和在线 DDL”：<br>1. 在主库执行：stop slave;<br>2. 在备库 DDL，并得到 GTID_OF_DDL;<br>3. 在主库执行：<br>set gtid_next=GTID_OF_DDL;<br>begin; commit;<br>set gtid_next=automatic;<br>start slave;<br><br>然后切换主备，再在另一个实例执行一遍。<br><br>有些疑问：假如 DDL 删除一个字段，先在 备库A 处理 DDL，执行成功后：<br>1. 客户端在 备库A 的查询，和跟在主库的查询，少了该字段，主备数据不一致了，需要剔除 备库A 这段时间不提供服务么？<br><br>2. 备库A DDL 删除字段成功后，在主库 start slave 后，需要主备数据一致后，才能继续切换主备。而在等待 备库A 继续应用主库的 binlog 时，如果有 insert 操作，而备库无该字段，insert 失败了。这又该怎么处理呢？<br><br>谢谢老师！！","like_count":1,"discussions":[{"author":{"id":1043325,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/c9xpiakQ3OC1AlfCeW03lLnnb7mj5v35Hib8YDs66zpnVib2n2qFichFmFp2Ec4QDPR0dKh38MkBBLyD3bE4NiaanZQ/132","nickname":"龙晓","note":"","ucode":"FAF34F1C65D103","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":355576,"discussion_content":"老师说删除只能是最后一个字段，其他字段不支持，可以测试一下","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1615454440,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":1,"child_discussions":[{"author":{"id":1970443,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTIx1V1QAxC4NHaxYZGyuibBN8lcURJWc5nrnO4yic1kxnDemYV2FJGialf47kYX9qtDnZZOfe1SJeLicg/132","nickname":"lleft","note":"","ucode":"D573EB509455AE","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1043325,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/c9xpiakQ3OC1AlfCeW03lLnnb7mj5v35Hib8YDs66zpnVib2n2qFichFmFp2Ec4QDPR0dKh38MkBBLyD3bE4NiaanZQ/132","nickname":"龙晓","note":"","ucode":"FAF34F1C65D103","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":376347,"discussion_content":"是不能删除列的，是添加索引、删除索引、添加最后一个列才可以","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1622088284,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":355576,"ip_address":""},"score":376347,"extra":""}]}]},{"had_liked":false,"id":87221,"user_name":"肖邦的学徒","can_delete":false,"product_type":"c1","uid":1159128,"ip_address":"","ucode":"1DB95CD3E10F33","user_header":"https://static001.geekbang.org/account/avatar/00/11/af/d8/0f85fc8f.jpg","comment_is_top":false,"comment_ctime":1555550571,"is_pvip":false,"replies":[{"id":"31597","content":"show master status ?","user_name":"作者回复","user_name_real":"林晓斌","uid":"1264162","ctime":1555724891,"ip_address":"","comment_id":87221,"utype":1}],"discussion_count":1,"race_medal":0,"score":"5850517867","product_id":100020801,"comment_content":"有个疑问 主库执行更新得到的位点信息读请求怎么拿到呢 ","like_count":1,"discussions":[{"author":{"id":1264162,"avatar":"https://static001.geekbang.org/account/avatar/00/13/4a/22/2681d602.jpg","nickname":"林晓斌","note":"","ucode":"CDE42D44F26240","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":447350,"discussion_content":"show master status ?","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1555724891,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":61792,"user_name":"辣椒","can_delete":false,"product_type":"c1","uid":1330376,"ip_address":"","ucode":"85C62DE976C6A5","user_header":"https://static001.geekbang.org/account/avatar/00/14/4c/c8/bed1e08a.jpg","comment_is_top":false,"comment_ctime":1547801899,"is_pvip":false,"replies":[{"id":"21922","content":"额，这个我还真不知道😅，抱歉哈。","user_name":"作者回复","user_name_real":"林晓斌","uid":"1264162","ctime":1547803232,"ip_address":"","comment_id":61792,"utype":1}],"discussion_count":1,"race_medal":0,"score":"5842769195","product_id":100020801,"comment_content":"老师，mysql_session_track_get_first是c的，有没有java的？","like_count":1,"discussions":[{"author":{"id":1264162,"avatar":"https://static001.geekbang.org/account/avatar/00/13/4a/22/2681d602.jpg","nickname":"林晓斌","note":"","ucode":"CDE42D44F26240","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":436997,"discussion_content":"额，这个我还真不知道😅，抱歉哈。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1547803232,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":61726,"user_name":"信信","can_delete":false,"product_type":"c1","uid":1303865,"ip_address":"","ucode":"8DF0EC045579FD","user_header":"https://static001.geekbang.org/account/avatar/00/13/e5/39/951f89c8.jpg","comment_is_top":false,"comment_ctime":1547782427,"is_pvip":false,"replies":[{"id":"21906","content":"不会哦<br>如果trx3还没传到备库，备库是会认为已经同步完成了","user_name":"作者回复","user_name_real":"林晓斌","uid":"1264162","ctime":1547785448,"ip_address":"","comment_id":61726,"utype":1}],"discussion_count":3,"race_medal":0,"score":"5842749723","product_id":100020801,"comment_content":"老师您好，文中判断主备无延迟方案的第二种和第三种方法，都是对比了主从执行完的日志是否相同。因为不会出现图4下方说的：“从库认为已经没有同步延迟，但还是查不到 trx3 的。”因为如果从库未执行trx3的话，第二，第三种方法都是不通过的。","like_count":1,"discussions":[{"author":{"id":1264162,"avatar":"https://static001.geekbang.org/account/avatar/00/13/4a/22/2681d602.jpg","nickname":"林晓斌","note":"","ucode":"CDE42D44F26240","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":436970,"discussion_content":"不会哦\n如果trx3还没传到备库，备库是会认为已经同步完成了","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1547785448,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1970443,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTIx1V1QAxC4NHaxYZGyuibBN8lcURJWc5nrnO4yic1kxnDemYV2FJGialf47kYX9qtDnZZOfe1SJeLicg/132","nickname":"lleft","note":"","ucode":"D573EB509455AE","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":376349,"discussion_content":"trx3没传给备库，备库并不知道主库上面有trx3，在备库上面的relay log中的事务都应用完了，备库就认为自己没有延迟了。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1622088609,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1652836,"avatar":"https://thirdwx.qlogo.cn/mmopen/vi_32/DYAIOgq83epKJlW7sqts2ZbPuhMbseTAdvHWnrc4ficAeSZyKibkvn6qyxflPrkKKU3mH6XCNmYvDg11tB6y0pxg/132","nickname":"pc","note":"","ucode":"1AD538B9A900B6","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":133571,"discussion_content":"位点和GTID来说，trx3还没传到备库，怎么会是认为同步完成了呢？主备的位点和GTID集合都不同啊？没能理解","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1578972156,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":60975,"user_name":"* 晓 *","can_delete":false,"product_type":"c1","uid":1307301,"ip_address":"","ucode":"AF807F9E3B7FB0","user_header":"https://static001.geekbang.org/account/avatar/00/13/f2/a5/bc63dee1.jpg","comment_is_top":false,"comment_ctime":1547600444,"is_pvip":false,"replies":[{"id":"21732","content":"MGR开始有国内公司在使用了<br><br>InnoDB cluster也可以的，但是一般就是平时一写多读，只在主备切换的时候，短暂允许多写","user_name":"作者回复","user_name_real":"林晓斌","uid":"1264162","ctime":1547605615,"ip_address":"","comment_id":60975,"utype":1}],"discussion_count":1,"race_medal":0,"score":"5842567740","product_id":100020801,"comment_content":"老师好，如果用MGR或InnoDB cluster方案做读写分离的话可以替代文中提到的方案吗？这两个方案建议在生产中大量使用吗？","like_count":1,"discussions":[{"author":{"id":1264162,"avatar":"https://static001.geekbang.org/account/avatar/00/13/4a/22/2681d602.jpg","nickname":"林晓斌","note":"","ucode":"CDE42D44F26240","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":436691,"discussion_content":"MGR开始有国内公司在使用了\n\nInnoDB cluster也可以的，但是一般就是平时一写多读，只在主备切换的时候，短暂允许多写","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1547605615,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":60967,"user_name":"Stalary","can_delete":false,"product_type":"c1","uid":1101749,"ip_address":"","ucode":"F69AFF7C958D31","user_header":"https://static001.geekbang.org/account/avatar/00/10/cf/b5/d1ec6a7d.jpg","comment_is_top":false,"comment_ctime":1547599685,"is_pvip":false,"replies":[{"id":"21731","content":"应该就是我直播时说的这个情况吧。 https:&#47;&#47;time.geekbang.org&#47;column&#47;article&#47;73370<br><br>wait_timeout 这个参数默认是8小时，改个更大的值试试","user_name":"作者回复","user_name_real":"林晓斌","uid":"1264162","ctime":1547605557,"ip_address":"","comment_id":60967,"utype":1}],"discussion_count":3,"race_medal":0,"score":"5842566981","product_id":100020801,"comment_content":"老师，我有一个问题啊，测试服用hakri连接池连接mysql，但是每次超过八小时不使用，数据库连接就会被自动回收了，这个有什么好的解决办法嘛？","like_count":1,"discussions":[{"author":{"id":1264162,"avatar":"https://static001.geekbang.org/account/avatar/00/13/4a/22/2681d602.jpg","nickname":"林晓斌","note":"","ucode":"CDE42D44F26240","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":436686,"discussion_content":"应该就是我直播时说的这个情况吧。 https://time.geekbang.org/column/article/73370\n\nwait_timeout 这个参数默认是8小时，改个更大的值试试","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1547605557,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1134574,"avatar":"https://static001.geekbang.org/account/avatar/00/11/4f/ee/bd08cfab.jpg","nickname":"一魄","note":"","ucode":"71541125D4AA5A","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":406426,"discussion_content":"心跳机制，定时请求一次查询","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1634771605,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1005391,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/57/4f/6fb51ff1.jpg","nickname":"一步","note":"","ucode":"73CEA468CE70C3","race_medal":1,"user_type":1,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":117697,"discussion_content":"每秒钟执行 一次 select 1? ","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1578136339,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":60929,"user_name":"往事随风，顺其自然","can_delete":false,"product_type":"c1","uid":1235692,"ip_address":"","ucode":"F266EC6B143E38","user_header":"https://static001.geekbang.org/account/avatar/00/12/da/ec/779c1a78.jpg","comment_is_top":false,"comment_ctime":1547595557,"is_pvip":false,"replies":[{"id":"21728","content":"就是后来才执行的事务","user_name":"作者回复","user_name_real":"林晓斌","uid":"1264162","ctime":1547605121,"ip_address":"","comment_id":60929,"utype":1}],"discussion_count":1,"race_medal":0,"score":"5842562853","product_id":100020801,"comment_content":"图5中状态3和状态4的tx2和trx3从哪冒出来的，前面状态1和状态2度没有","like_count":1,"discussions":[{"author":{"id":1264162,"avatar":"https://static001.geekbang.org/account/avatar/00/13/4a/22/2681d602.jpg","nickname":"林晓斌","note":"","ucode":"CDE42D44F26240","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":436669,"discussion_content":"就是后来才执行的事务","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1547605121,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":357093,"user_name":"Geek_edc9a8","can_delete":false,"product_type":"c1","uid":1928405,"ip_address":"广东","ucode":"1A46C55275CA4C","user_header":"https://thirdwx.qlogo.cn/mmopen/vi_32/KK6pdxQNCogX2bUfxcxbegeLibLFIicoahXhuq039ceu3fekowfsricMQ8wouXT9bZR9xTlqhyI159aoVxg1q5G5g/132","comment_is_top":false,"comment_ctime":1662951656,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1662951656","product_id":100020801,"comment_content":"请问大神一个问题，数据库做了gtid主从，数据库是A，这时在从库上又创建了一个数据库B对从库里的A库数据进行统计处理，发现经常会A的主从断开，这个有办法解决吗？会是什么原因导致的？","like_count":0},{"had_liked":false,"id":356031,"user_name":"Geek_323a60","can_delete":false,"product_type":"c1","uid":2797976,"ip_address":"四川","ucode":"CDC276EC255411","user_header":"","comment_is_top":false,"comment_ctime":1661928999,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1661928999","product_id":100020801,"comment_content":"在执行 DDL 时，比如增加最后一列。若业务代码中使用的是 select * ，在从数据库中查询出记录后做反序列化时不会因为多了一列属性而导致反序列化失败吗？","like_count":0},{"had_liked":false,"id":355900,"user_name":"Geek_db92b2","can_delete":false,"product_type":"c1","uid":2852033,"ip_address":"北京","ucode":"6B3C9CA2FE2F76","user_header":"https://static001.geekbang.org/account/avatar/00/2b/84/c1/d13e75da.jpg","comment_is_top":false,"comment_ctime":1661842371,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1661842371","product_id":100020801,"comment_content":"纯小白在线学习","like_count":0},{"had_liked":false,"id":355484,"user_name":"白小龙","can_delete":false,"product_type":"c1","uid":1230191,"ip_address":"上海","ucode":"34BFCBA8D98AB8","user_header":"https://static001.geekbang.org/account/avatar/00/12/c5/6f/8ba27eab.jpg","comment_is_top":false,"comment_ctime":1661418802,"is_pvip":false,"discussion_count":0,"race_medal":1,"score":"1661418802","product_id":100020801,"comment_content":"有哪些中间件实现了延迟判断的能力，可否推荐？","like_count":0},{"had_liked":false,"id":345026,"user_name":"沉淀的梦想","can_delete":false,"product_type":"c1","uid":1177315,"ip_address":"","ucode":"BCB7C26F9D214B","user_header":"https://static001.geekbang.org/account/avatar/00/11/f6/e3/e4bcd69e.jpg","comment_is_top":false,"comment_ctime":1651942510,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1651942510","product_id":100020801,"comment_content":"关于大表 DDL，看到评论区有很多大佬说在备库执行 DDL 可以解决该问题。但是我理解在备库执行 DDL 理论上和 binlog 同步执行的 DDL 不是一样的嘛？为什么能解决主库 DDL 主从延迟的问题？ 求知道的大佬解答<br>","like_count":0},{"had_liked":false,"id":340659,"user_name":"‭‭","can_delete":false,"product_type":"c1","uid":1326444,"ip_address":"","ucode":"186811937EE646","user_header":"https://static001.geekbang.org/account/avatar/00/14/3d/6c/935bdc7d.jpg","comment_is_top":false,"comment_ctime":1649001135,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1649001135","product_id":100020801,"comment_content":"朴素思想是主从无延迟，具体细化为确保某事务已经在从库实现","like_count":0},{"had_liked":false,"id":328006,"user_name":"xusenme","can_delete":false,"product_type":"c1","uid":1263618,"ip_address":"","ucode":"5AD07291DF9752","user_header":"","comment_is_top":false,"comment_ctime":1640446894,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1640446894","product_id":100020801,"comment_content":"有没有办法让从节点支持类似raft的readindx机制，可以有效避免业务代码改动","like_count":0},{"had_liked":false,"id":320466,"user_name":"df","can_delete":false,"product_type":"c1","uid":2828469,"ip_address":"","ucode":"AA44DFDDEA393D","user_header":"","comment_is_top":false,"comment_ctime":1636343582,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1636343582","product_id":100020801,"comment_content":"如果不是写后读而是只读事务，是不是就得主从同步才能读了？","like_count":0},{"had_liked":false,"id":318097,"user_name":"beslet","can_delete":false,"product_type":"c1","uid":1334377,"ip_address":"","ucode":"6A95C896558C11","user_header":"https://static001.geekbang.org/account/avatar/00/14/5c/69/1a4fa7d9.jpg","comment_is_top":false,"comment_ctime":1635149849,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1635149849","product_id":100020801,"comment_content":"有个疑惑，线上业务对数据的读写一般都是分布式集群上面不同的线程，而且实际开发一般不只是简单的查询某个id的记录，还有可能查某个范围的数据等复杂的查询。<br>怎么根据查询语句条件分析出关联的是哪个线程的GTID，感觉都是比较难实现的","like_count":0},{"had_liked":false,"id":307050,"user_name":"Tico Wang","can_delete":false,"product_type":"c1","uid":1588958,"ip_address":"","ucode":"CF890147BE07E3","user_header":"https://static001.geekbang.org/account/avatar/00/18/3e/de/9f5b936a.jpg","comment_is_top":false,"comment_ctime":1628840136,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1628840136","product_id":100020801,"comment_content":"MySQL 5.7 C API Developer Guide<br>https:&#47;&#47;dev.mysql.com&#47;doc&#47;c-api&#47;5.7&#47;en&#47;","like_count":0},{"had_liked":false,"id":301569,"user_name":"人间乐园","can_delete":false,"product_type":"c1","uid":1350559,"ip_address":"","ucode":"4A203AB47FCF3C","user_header":"https://static001.geekbang.org/account/avatar/00/14/9b/9f/2cbc2a4f.jpg","comment_is_top":false,"comment_ctime":1625741664,"is_pvip":true,"discussion_count":0,"race_medal":0,"score":"1625741664","product_id":100020801,"comment_content":"gtid方案有点像etcd的readindex😌","like_count":0},{"had_liked":false,"id":289098,"user_name":"罗选东","can_delete":false,"product_type":"c1","uid":2015657,"ip_address":"","ucode":"7E844804319E3B","user_header":"https://static001.geekbang.org/account/avatar/00/1e/c1/a9/ece95406.jpg","comment_is_top":false,"comment_ctime":1618876613,"is_pvip":false,"discussion_count":1,"race_medal":0,"score":"1618876613","product_id":100020801,"comment_content":"有个问题：半同步模式，主库在写Binlog时会将binlog发给从库，从库执行完并且提交了才会返回ack，此时主库收到ack后才继续redolog commit。问题：如果主库收到ack后redolog commit失败了，那么主库会回滚此次操作。但是从库已经写入了主库的Binlog并且执行完毕。是否因此产生了主从数据不一致。","like_count":0,"discussions":[{"author":{"id":1970443,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTIx1V1QAxC4NHaxYZGyuibBN8lcURJWc5nrnO4yic1kxnDemYV2FJGialf47kYX9qtDnZZOfe1SJeLicg/132","nickname":"lleft","note":"","ucode":"D573EB509455AE","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":376351,"discussion_content":"错了，是binlog刷盘之后才会传binglog到从库，从库收到之后就返回ACK，没说要从库执行完事务之后再返回ACK。你说的传输的时间点不对","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1622089000,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":287840,"user_name":"三万棵树","can_delete":false,"product_type":"c1","uid":1270449,"ip_address":"","ucode":"EB361BB4E09AE5","user_header":"https://static001.geekbang.org/account/avatar/00/13/62/b1/3d1fc497.jpg","comment_is_top":false,"comment_ctime":1618191240,"is_pvip":true,"discussion_count":0,"race_medal":0,"score":"1618191240","product_id":100020801,"comment_content":"唉。看完感觉我对mysql一无所知。","like_count":0},{"had_liked":false,"id":287615,"user_name":"贺子","can_delete":false,"product_type":"c1","uid":2076283,"ip_address":"","ucode":"A64DC9D9CF7CCD","user_header":"https://static001.geekbang.org/account/avatar/00/1f/ae/7b/47200692.jpg","comment_is_top":false,"comment_ctime":1618050571,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1618050571","product_id":100020801,"comment_content":"老师好，我觉得您的问题应该加前提，同一个表ddl，并且不是以writeset为并发原则。然后后面又对这个表做dml才会有问题吧？因为如果这个表是冷表，ddl的操作和其他表的dml是可以根据5.7.22后的writeset并行原则是可以并发执行的！就不会产生大问题","like_count":0},{"had_liked":false,"id":285262,"user_name":"Ken","can_delete":false,"product_type":"c1","uid":1988131,"ip_address":"","ucode":"DB59170F4FC74E","user_header":"https://static001.geekbang.org/account/avatar/00/1e/56/23/848ac9f4.jpg","comment_is_top":false,"comment_ctime":1616716236,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1616716236","product_id":100020801,"comment_content":"老师您好。请教一个问题：如果每次查询都使用主库位点函数，并发量大时会不会造成性能问题？我之前遇过并发量的大的库，监控系统轮询SHOW STATUS 都成为了阻塞源，把监控停了就慢慢恢复了。当时时间紧迫没有深究原因，也难复现问题，所以这里特意请教老师高并发查询这类函数是否有问题或隐患？如果有大量可接受延时的场景，我觉得直接上redis 就好了，至少减轻90%以上的读压力，剩下的读压力，完全走主库或从库也可以。如果不接受延时读，直接走主库或同步复制，性能当然会有所下降。","like_count":0},{"had_liked":false,"id":276135,"user_name":"微末凡尘","can_delete":false,"product_type":"c1","uid":1099525,"ip_address":"","ucode":"25EDFD0914D0F4","user_header":"https://static001.geekbang.org/account/avatar/00/10/c7/05/19c5c255.jpg","comment_is_top":false,"comment_ctime":1611806865,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1611806865","product_id":100020801,"comment_content":"以前在做一个需求的时候就遇到过这种情况，由于主从延迟问题，导致过期读，最后采用读主库的方式解决了这个问题，其他的方案感觉过于复杂，可操作性也是那么强，个人感觉，对于访问量不大，直接读主库即可","like_count":0},{"had_liked":false,"id":247318,"user_name":"Magic","can_delete":false,"product_type":"c1","uid":1272047,"ip_address":"","ucode":"FD9CEDAA419EB0","user_header":"https://static001.geekbang.org/account/avatar/00/13/68/ef/6264ca3d.jpg","comment_is_top":false,"comment_ctime":1599658279,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1599658279","product_id":100020801,"comment_content":"长事务导致等gtid超时，最后在回到主库查询。<br>解决方法是将大表ddl放在备库做，做完后再进行主备切换","like_count":0},{"had_liked":false,"id":230961,"user_name":"itsxun","can_delete":false,"product_type":"c1","uid":1599454,"ip_address":"","ucode":"69E6CEA3FCB4F3","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTLOKzDVXse2WibsBGOR27GVYOlv8WRtFBfQe4ekNia2S5986QibD6Wv17gyDpZqmQt3kJcAcbhl3rroQ/132","comment_is_top":false,"comment_ctime":1593532826,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1593532826","product_id":100020801,"comment_content":"对老师佩服得五体投地。","like_count":0},{"had_liked":false,"id":225510,"user_name":"风含叶","can_delete":false,"product_type":"c1","uid":1162800,"ip_address":"","ucode":"7AE8D3963343AB","user_header":"https://static001.geekbang.org/account/avatar/00/11/be/30/1154657e.jpg","comment_is_top":false,"comment_ctime":1591773611,"is_pvip":false,"discussion_count":1,"race_medal":0,"score":"1591773611","product_id":100020801,"comment_content":"如果热点数据，是否可以增加Redis热点数据缓存机制","like_count":0,"discussions":[{"author":{"id":1812970,"avatar":"https://static001.geekbang.org/account/avatar/00/1b/a9/ea/5bfce6c5.jpg","nickname":"mgs2002","note":"","ucode":"F5931108BD509B","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":292766,"discussion_content":"肯定可以的，这篇文章讨论的只是数据库层面的解决方案","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1595324744,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":221593,"user_name":"Geek_a8be59","can_delete":false,"product_type":"c1","uid":1563985,"ip_address":"","ucode":"BEC0F57B51DC44","user_header":"https://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTKdiaUiaCYQe9tibemaNU5ya7RrU3MYcSGEIG7zF27u0ZDnZs5lYxPb7KPrAsj3bibM79QIOnPXAatfIw/132","comment_is_top":false,"comment_ctime":1590545678,"is_pvip":false,"discussion_count":1,"race_medal":0,"score":"1590545678","product_id":100020801,"comment_content":"老师您好，在使用半同步方案的时候会不会出现从库的磁盘满了，导致从库一直返回不了ack，导致一直事务提交超时的情况？ 还有如果超时了，那么不返回ack事务会做回滚操作么？","like_count":0,"discussions":[{"author":{"id":1970443,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTIx1V1QAxC4NHaxYZGyuibBN8lcURJWc5nrnO4yic1kxnDemYV2FJGialf47kYX9qtDnZZOfe1SJeLicg/132","nickname":"lleft","note":"","ucode":"D573EB509455AE","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":376358,"discussion_content":"有超时时间，会自动换成切异步","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1622093941,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":220930,"user_name":"易水寒","can_delete":false,"product_type":"c1","uid":1238961,"ip_address":"","ucode":"F5D8127ED4754E","user_header":"https://static001.geekbang.org/account/avatar/00/12/e7/b1/5c63be67.jpg","comment_is_top":false,"comment_ctime":1590344719,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1590344719","product_id":100020801,"comment_content":"sbm判断主从是否同步也不准的吧，之前从高性能mysql这本书看到从库只有在执行了对应的事件时才能计算出sbm值，如果未执行就是0，0不代表就主从同步了。","like_count":0},{"had_liked":false,"id":214993,"user_name":"Mr_freezing37","can_delete":false,"product_type":"c1","uid":1061402,"ip_address":"","ucode":"BB605A6FEDCEB6","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/y5NFbibdKCFCg0lHKK5ERGOQWXYYK7jhnqm2BxQ6r7tWvXx8uDmibglweejDWU39BTmDSAtBJGj1ibOZK2uIHQyqg/132","comment_is_top":false,"comment_ctime":1588864765,"is_pvip":false,"discussion_count":1,"race_medal":0,"score":"1588864765","product_id":100020801,"comment_content":"老师辛苦了！<br>今年才接触到这个专栏，正在二刷，收获不比第一次小。<br>对看起来很靠谱的GTID方案，还是有种提心吊胆的感觉，基于：<br>1.业务上想读的是”记录”，GTID方案等待的是事务到达，这两者等价吗。<br>2.业务上在主库上的读请求，有MVCC提供一致性读。转移到从库上之后，因为总有一部分事务是不在这个库上的，MVCC有无破坏可能。<br><br>设想了以下场景：<br>时刻T客户端在主库A提交事务成功，拿到GTID，选定从库B。假定主从延时即为0.9秒，查询SQL耗时为0，忽略其他调用耗时；<br>GTID方案中，客户端在从库B上的拿到结果集的时刻即为T+0.9秒。<br>这0.9秒中，如果主库上，再有与此GTID冲突的记录更改。<br><br>这种情况下，此次查询事实上还是“过期读”了吧？<br><br>类似的，这0.9秒中，可能发生其他影响该查询一致性视图的事务，提交在主库A且并未被同步到从库B。","like_count":0,"discussions":[{"author":{"id":1043325,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/c9xpiakQ3OC1AlfCeW03lLnnb7mj5v35Hib8YDs66zpnVib2n2qFichFmFp2Ec4QDPR0dKh38MkBBLyD3bE4NiaanZQ/132","nickname":"龙晓","note":"","ucode":"FAF34F1C65D103","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":355582,"discussion_content":"像你说的这种情况应该是不适合做读写分离的，需要对业务逻辑做详细分析，即时性要求没你描述的这么高才可以读写分离","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1615455268,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":207961,"user_name":"TIAN","can_delete":false,"product_type":"c1","uid":1276795,"ip_address":"","ucode":"CCCF80602C1753","user_header":"https://static001.geekbang.org/account/avatar/00/13/7b/7b/5b39b47b.jpg","comment_is_top":false,"comment_ctime":1587223072,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1587223072","product_id":100020801,"comment_content":"老师您好，看了三期关于主备主从的文章，感觉主从还好，但是主备的方式也使用binlog来同步么？我记得在哪看过一个教程是用keepalive+drbd实现的主备方式，这样数据是不用binlog来同步的么？为什么您的课程中没有提到，目前大多数主备都还是用binlog么？","like_count":0},{"had_liked":false,"id":202057,"user_name":"Kvicii.Y","can_delete":false,"product_type":"c1","uid":1442588,"ip_address":"","ucode":"446BFA633569EA","user_header":"https://static001.geekbang.org/account/avatar/00/16/03/1c/c9fe6738.jpg","comment_is_top":false,"comment_ctime":1585895118,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1585895118","product_id":100020801,"comment_content":"想请教一下，这些mysql给出的API，貌似几乎都是C语言的版本，那如何在JAVA的Client端和Proxy端地呢？","like_count":0},{"had_liked":false,"id":181477,"user_name":"在路上","can_delete":false,"product_type":"c1","uid":1215139,"ip_address":"","ucode":"258880ACE79448","user_header":"https://static001.geekbang.org/account/avatar/00/12/8a/a3/aee7ded7.jpg","comment_is_top":false,"comment_ctime":1582548890,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1582548890","product_id":100020801,"comment_content":"林老师 最近几篇看的不懂，没有实际经历过这些，希望努力能看懂。","like_count":0},{"had_liked":false,"id":176505,"user_name":"Geek_3004e0","can_delete":false,"product_type":"c1","uid":1732823,"ip_address":"","ucode":"441D39BDC39E4A","user_header":"https://static001.geekbang.org/account/avatar/00/1a/70/d7/d1049bae.jpg","comment_is_top":false,"comment_ctime":1581073710,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1581073710","product_id":100020801,"comment_content":"老师想请教个问题，不知道还会不会被回答了。我用MariaDB MaxScale2.2去做MySQL 8.0.16的主从分离测试，安装运行看起来正常，maxscale看着也把用户信息获取到了。但是我用mysql cli连接maxscale时，发现刚连接上会话就会被断开，即用mysql -utest -p -hmaxscale-host -P4006 输入密码后进入到了可以操作数据库的界面，但是后面输入任何语句都提示Authentication with backend failed. Session will be closed。我抓包看了下，发现maxscale发送给server端login request包时，指定了认证方式mysql_native_password（因为maxscale默认使用mysql_native_password认证方式，我创建test用户时就指定了这种认证方式）、用户名和密码；server先回复了一个ack包给maxscale；然后server又发了一个auth switch request包给maxscale，指定了auth method name:mysql_native_password和auth method data。maxscale收到这个报文就向server发送fin包断开连接。<br>不明白为什么使用都是要用mysql_native_password认证方式，server端还会发送auth switch request给maxscale，而maxscale收到这个报文为什么就fin了。希望老师能解答，实在找不出原因了。","like_count":0},{"had_liked":false,"id":170155,"user_name":"a...Z","can_delete":false,"product_type":"c1","uid":1293877,"ip_address":"","ucode":"5A5A44903785FD","user_header":"https://static001.geekbang.org/account/avatar/00/13/be/35/dd79037e.jpg","comment_is_top":false,"comment_ctime":1578539644,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1578539644","product_id":100020801,"comment_content":"最后的gtid 我觉得页可以有这样一个思路，如果子在主库操作成功了，会返回操作的id，去从库查，如果从库返回没有，直接走主库，也会是一样的意思吧","like_count":0},{"had_liked":false,"id":168511,"user_name":"inrtyx","can_delete":false,"product_type":"c1","uid":1246178,"ip_address":"","ucode":"81CD18FF34ABAB","user_header":"https://static001.geekbang.org/account/avatar/00/13/03/e2/5768d26e.jpg","comment_is_top":false,"comment_ctime":1578102239,"is_pvip":true,"discussion_count":0,"race_medal":0,"score":"1578102239","product_id":100020801,"comment_content":"往事如烟","like_count":0},{"had_liked":false,"id":163520,"user_name":"啊浩","can_delete":false,"product_type":"c1","uid":1185712,"ip_address":"","ucode":"BD0354188B7693","user_header":"https://static001.geekbang.org/account/avatar/00/12/17/b0/dda316ee.jpg","comment_is_top":false,"comment_ctime":1576736563,"is_pvip":false,"discussion_count":0,"race_medal":1,"score":"1576736563","product_id":100020801,"comment_content":"以前遇到必须拿到最新结果的业务场景，就只会强制走主库方案这一种方案。这次又学到了N多种哈，判断主备无延迟，等semi-sync，等主库位点，GTID方案，还有不太靠谱的sleep方案~<br>","like_count":0},{"had_liked":false,"id":140656,"user_name":"再续啸傲","can_delete":false,"product_type":"c1","uid":1360184,"ip_address":"","ucode":"912987A17DCA92","user_header":"https://static001.geekbang.org/account/avatar/00/14/c1/38/e45bbb6b.jpg","comment_is_top":false,"comment_ctime":1571022137,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1571022137","product_id":100020801,"comment_content":"像老是说的读写分离的proxy中间件，我们一直用的是mycat，功能挺多，也挺稳定的，可以看看。","like_count":0},{"had_liked":false,"id":137693,"user_name":"家乐","can_delete":false,"product_type":"c1","uid":1301941,"ip_address":"","ucode":"94F8720B59F221","user_header":"https://wx.qlogo.cn/mmopen/vi_32/PiajxSqBRaEJia90ErsTQtNDNeyTWNwWjicERicXj72b4xgbvru2IkUdrLxrgJb5lCrTaiaW2iaX3mOYiaV8vYo3voWlg/132","comment_is_top":false,"comment_ctime":1569824809,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1569824809","product_id":100020801,"comment_content":"斌哥的每篇文章和课后讨论我都会认真看完，对斌哥的学术就不说了。技术好，还能谦虚认真回答每个人的问题的态度就很值得学习尊敬。真心谢谢斌哥。这个专栏真的是我目前花的最值的课题。也极力推荐给我的同事拜读。","like_count":0},{"had_liked":false,"id":133095,"user_name":"-W.LI-","can_delete":false,"product_type":"c1","uid":1210699,"ip_address":"","ucode":"3556786538664F","user_header":"https://static001.geekbang.org/account/avatar/00/12/79/4b/740f91ca.jpg","comment_is_top":false,"comment_ctime":1568358448,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1568358448","product_id":100020801,"comment_content":"老师好!不知道老师还会不会看见，最后两种解决方案，业务成执行查询语句的时候，怎么获取到。主库位点，或者事物id么?。需要中间层记录这些信息吗?服务端只负责写select xx from t where id =5。id=5这条记录主库中的最后一个位点，事务id上哪取?还有就是一些明显过了很久了也取一遍不是更慢了么?","like_count":0},{"had_liked":false,"id":132527,"user_name":"美美","can_delete":false,"product_type":"c1","uid":1148422,"ip_address":"","ucode":"44CC95C45AF345","user_header":"https://static001.geekbang.org/account/avatar/00/11/86/06/72b01bb7.jpg","comment_is_top":false,"comment_ctime":1568162326,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1568162326","product_id":100020801,"comment_content":"Seconds_Behind_Master为0，在特殊场景判断主从是否延迟会有问题<br><br>Seconds_Behind_Master: The number of seconds that the slave SQL thread is behind processing the master binary log<br><br>也就是说，是SQL thread在执行IO thread dump下来的relay log的时间差。这里面就有几个注意问题：<br>1，这个时间依赖两个线程；<br>2，relay log中event记录的时间戳是主库上的时间戳，而SQL thread的时间戳是从库上的，也就是说，如果主库和从库的时间是一致的，那么这个值确实是从库延后主库的一个时间差。但是如果主库和从库的时间不是一致的，那这个就没价值了，该结果可以进行下测试；<br>3，在主库上执行了一个非常大的event，在这个event在主库上没执行完毕的时候，从库会显示为0，而当主库执行完毕传到从库上开始执行的时候，就会是个巨大值。<br><br>","like_count":0},{"had_liked":false,"id":105512,"user_name":"冥王星","can_delete":false,"product_type":"c1","uid":1311603,"ip_address":"","ucode":"CA43C381A69736","user_header":"https://static001.geekbang.org/account/avatar/00/14/03/73/38397da1.jpg","comment_is_top":false,"comment_ctime":1561019198,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1561019198","product_id":100020801,"comment_content":"但是这里有一个问题哈，就是说在GTID方案之中需要使用插入修改数据记录的sql操作的GTID来判断是否应该向从库下，但是在实际的生产环境之中，客户端如何将用户输入的查询操作和插入修改数据操作的GTID记录对应上呢？","like_count":0},{"had_liked":false,"id":103945,"user_name":"晓杰","can_delete":false,"product_type":"c1","uid":1441546,"ip_address":"","ucode":"1174C88EEBF8A6","user_header":"https://static001.geekbang.org/account/avatar/00/15/ff/0a/12faa44e.jpg","comment_is_top":false,"comment_ctime":1560569758,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1560569758","product_id":100020801,"comment_content":"请问老师主备和主从是不是有区别的，我看到这篇文章里面好像有些地方把这两个混淆了","like_count":0},{"had_liked":false,"id":91642,"user_name":"Bang","can_delete":false,"product_type":"c1","uid":1160079,"ip_address":"","ucode":"0CB8A52B177868","user_header":"https://static001.geekbang.org/account/avatar/00/11/b3/8f/4caf7f03.jpg","comment_is_top":false,"comment_ctime":1557065897,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1557065897","product_id":100020801,"comment_content":"请问一下，重库经常会出现Duplicate是什么情况，这一段时间 经常会这样。然后要手动去处理一下，然后过一段时间 又会这样。","like_count":0},{"had_liked":false,"id":91516,"user_name":"Break","can_delete":false,"product_type":"c1","uid":1508922,"ip_address":"","ucode":"6D1CCFC60E11EF","user_header":"https://static001.geekbang.org/account/avatar/00/17/06/3a/68bed1d9.jpg","comment_is_top":false,"comment_ctime":1557047466,"is_pvip":false,"discussion_count":1,"race_medal":0,"score":"1557047466","product_id":100020801,"comment_content":"有一个疑问, 等主库位点方案, 如果从库里查到的master_pos_wait大于0, 那应该是表示从库还没有执行到目标位置,这样数据应该不是最新的, 所以应该要查主库才对呀. 只有返回0, 才表示已经执行到目标位置, 这样从库数据才是最新. 还是说我理解错了😂?","like_count":0,"discussions":[{"author":{"id":1652836,"avatar":"https://thirdwx.qlogo.cn/mmopen/vi_32/DYAIOgq83epKJlW7sqts2ZbPuhMbseTAdvHWnrc4ficAeSZyKibkvn6qyxflPrkKKU3mH6XCNmYvDg11tB6y0pxg/132","nickname":"pc","note":"","ucode":"1AD538B9A900B6","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":133573,"discussion_content":"嗯，你理解错了","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1578972232,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":87506,"user_name":"杨陆伟","can_delete":false,"product_type":"c1","uid":1108457,"ip_address":"","ucode":"3BC968447406EB","user_header":"https://static001.geekbang.org/account/avatar/00/10/e9/e9/1f95e422.jpg","comment_is_top":false,"comment_ctime":1555629521,"is_pvip":true,"discussion_count":0,"race_medal":0,"score":"1555629521","product_id":100020801,"comment_content":"最后两个方案，可以解决过期读的问题，但是如果是Client端模式，让应用在查询前多执行一个命令，感觉应用很难理解和同意，这也是IT圈一个常见的矛盾：应用与平台之间的矛盾；如果是Proxy模式，代理又无感写请求和查询请求的成对关系。不知道老师所在的公司是如何解决这些问题的？谢谢","like_count":0},{"had_liked":false,"id":86969,"user_name":"念你如昔","can_delete":false,"product_type":"c1","uid":1323531,"ip_address":"","ucode":"FCAD88AB57D084","user_header":"https://static001.geekbang.org/account/avatar/00/14/32/0b/981b4e93.jpg","comment_is_top":false,"comment_ctime":1555488945,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1555488945","product_id":100020801,"comment_content":"老师：等主库位点方案：<br>图中的状态四：怎么判定我的select real_query ，读取的为trx1的而不是trx2的呢 ？<br>我执行一个查询所涉及到的行，它是怎么去分析所涉及到的行数据对应的最新值是在哪个事务里的呢","like_count":0},{"had_liked":false,"id":76883,"user_name":"浪迹天涯的蜗牛","can_delete":false,"product_type":"c1","uid":1462230,"ip_address":"","ucode":"ABB3D1C542F777","user_header":"https://static001.geekbang.org/account/avatar/00/16/4f/d6/8371b5c3.jpg","comment_is_top":false,"comment_ctime":1552738226,"is_pvip":false,"discussion_count":1,"race_medal":0,"score":"1552738226","product_id":100020801,"comment_content":"等主库位点方案 感觉实用性不是很强呀，不知道我有没有理解错。因为实际场景感觉不会立即写一条数据，然后我在从库上再查。从从库查询数据的时候，我不可能记录该记录在主库的postion呀。","like_count":0,"discussions":[{"author":{"id":1140175,"avatar":"https://static001.geekbang.org/account/avatar/00/11/65/cf/326c0eea.jpg","nickname":"x-ray","note":"","ucode":"8363F0C4D0AC0B","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":336223,"discussion_content":"对，我也有这个疑问，如果A用户更新，B用户查询，B用户怎么拿到A用户更新的位点或者GTID？","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1608533624,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":61466,"user_name":"宋文杰","can_delete":false,"product_type":"c1","uid":1034773,"ip_address":"","ucode":"2F5425B179F471","user_header":"https://static001.geekbang.org/account/avatar/00/0f/ca/15/e3f9fb4e.jpg","comment_is_top":false,"comment_ctime":1547704042,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1547704042","product_id":100020801,"comment_content":"一步一步 循序渐渐 讲的太棒了 感谢老师","like_count":0},{"had_liked":false,"id":61171,"user_name":"不停","can_delete":false,"product_type":"c1","uid":1055507,"ip_address":"","ucode":"D4A568307D017D","user_header":"https://static001.geekbang.org/account/avatar/00/10/1b/13/b7e5a662.jpg","comment_is_top":false,"comment_ctime":1547631194,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1547631194","product_id":100020801,"comment_content":"高手，你这现在在哪里上班了，有兴趣来我们公司耍耍么？","like_count":0},{"had_liked":false,"id":61052,"user_name":"HuaMax","can_delete":false,"product_type":"c1","uid":1118488,"ip_address":"","ucode":"2E78DE1AF098AF","user_header":"https://static001.geekbang.org/account/avatar/00/11/11/18/8cee35f9.jpg","comment_is_top":false,"comment_ctime":1547608996,"is_pvip":false,"replies":[{"id":"21758","content":"核心是要处理延迟问题，比如怎么操作可以不会产生延迟<br><br>","user_name":"作者回复","user_name_real":"林晓斌","uid":"1264162","ctime":1547621386,"ip_address":"","comment_id":61052,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1547608996","product_id":100020801,"comment_content":"课后题。对大表做ddl是一个大事务，等待从库执行，基本就会超时，最后都返回到主库执行，这样的话不如跳过等待从库这一步，但是像老师文中提到需要做好限流。从另一个角度，对于主库的ddl操作，从业务场景去考虑，一般随后到来的查询不会被这个ddl影响，而是对新的业务变更有影响，这样的话，也可以跳过等待从库这一步，直接让从库执行即可。不知道理解是否正确？","like_count":0,"discussions":[{"author":{"id":1264162,"avatar":"https://static001.geekbang.org/account/avatar/00/13/4a/22/2681d602.jpg","nickname":"林晓斌","note":"","ucode":"CDE42D44F26240","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":436724,"discussion_content":"核心是要处理延迟问题，比如怎么操作可以不会产生延迟\n\n","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1547621386,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":60934,"user_name":"往事随风，顺其自然","can_delete":false,"product_type":"c1","uid":1235692,"ip_address":"","ucode":"F266EC6B143E38","user_header":"https://static001.geekbang.org/account/avatar/00/12/da/ec/779c1a78.jpg","comment_is_top":false,"comment_ctime":1547596419,"is_pvip":false,"replies":[{"id":"21729","content":"就是图8","user_name":"作者回复","user_name_real":"林晓斌","uid":"1264162","ctime":1547605144,"ip_address":"","comment_id":60934,"utype":1}],"discussion_count":2,"race_medal":0,"score":"1547596419","product_id":100020801,"comment_content":"mysql_session_track_get_fitst这个函数怎么用，后面有实例子？","like_count":0,"discussions":[{"author":{"id":1264162,"avatar":"https://static001.geekbang.org/account/avatar/00/13/4a/22/2681d602.jpg","nickname":"林晓斌","note":"","ucode":"CDE42D44F26240","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":436672,"discussion_content":"就是图8","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1547605144,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1065351,"avatar":"https://static001.geekbang.org/account/avatar/00/10/41/87/d26efb2e.jpg","nickname":"SuperSnow","note":"","ucode":"84C89AA8083E6A","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":170760,"discussion_content":"C语言的函数吧。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1581684951,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]}]}