{"id":150346,"title":"49 | 发布、升级与版本管理","content":"<p>你好，我是七牛云许式伟。</p><p>今天我们探讨服务治理的第一个环节：发布与升级。</p><p>在应用开发工程师完成一个版本的迭代后，他们交付的是软件新版本的源代码，这些代码存储在源代码仓库中。</p><p>一次正常的发布过程，大体分为这样几个典型的步骤：</p><ul>\n<li>构建：从源代码仓库检出源代码，编译出对应的目标文件，也就是我们新版本的软件。</li>\n<li>测试：对新版本的软件进行测试，以确认软件的质量符合期望。</li>\n<li>打包：将新版本的软件及其执行所需的相关文件，比如配置文件，一起打包并记录相应的版本号。</li>\n<li>部署：将打包好的新版本更新到线上环境。为了保证线上环境的质量，更新过程往往需要灰度，而不是一步到位直接全面切换到新版本。</li>\n</ul><p>当然，并不是所有的升级都是发布新版本的软件。有时候我们仅仅只是进行配置变更，也就是修改线上的配置参数。配置参数可能存在于软件配套的配置文件中，也可能存在于线上的某个配置数据库。</p><p>整个发布与升级的过程，大体可以用下图来表示。</p><p><img src=\"https://static001.geekbang.org/resource/image/05/2e/05763faab10855d55880de570475e52e.png?wh=1270*384\" alt=\"\"></p><p>从上面我们可以看出，发布是一个具备很强的事务特征的工作，过程很复杂。不仅如此，发布工作的心智负担也很大。所有 SRE 都应该牢牢记住以下这句七字箴言：</p><blockquote>\n<p>变更是故障之源。</p>\n</blockquote><p>我们应该怎么做，才能彻底解决发布与升级的问题？</p><p>让我们从 “工程师思维” 的角度，用系统化、产品化的思维来考虑这样一个复杂事务。</p><!-- [[[read_end]]] --><p>我们第一个要回答的问题是：我们的发布哲学是什么？</p><h2>密闭性与可重复性</h2><p>为保障服务可靠运行需要可靠的发布流程，我们首先要保证的是发布过程的密闭性与可重复性。</p><p>可重复性是我们的核心目标。相同的版本可以反复发布，不应该由此产生什么副作用。只有做到可重复，我们才可以安全地进行升级，或者在发现问题时安全地回滚。</p><p>要做到可重复性，就需要保证密闭性。</p><p>所谓密闭性（Hermetic），简单说就是环境的完整性。</p><p>比如，软件的源代码必须是密闭的，每次通过特定的版本号，检出内容必须是完整的，一致的且可重复的。编译的时候不需要再去任何第三方额外检出外部依赖的源代码。</p><p>再比如，从构建过程来说，同样必须确保一致性和可重复性。让两个工程师在两台不同的机器上基于同一个源代码版本构建同一个产品，构建结果应该是相同的。这意味着它不应该受构建机器上安装的第三方类库或者其他软件工具所影响。构建过程需要指定版本的构建工具，包括编译器，同时使用指定版本的依赖库（第三方类库）。编译过程是自包含的，不依赖于编译环境之外的任何其他服务。</p><h2>从自动化到自服务</h2><p>发布过程一方面是如此复杂，另一方面却又频繁地被执行。所以单单将发布事务做到单次发布的自动化是远远不够的。</p><p>为了应对大规模扩张，每个团队必须能够自给自足。故此，很多公司会成立工程效率团队。工程效率工程师将负责开发工程效率平台，包括发布相关的工具，制定发布的最佳实践。</p><p>这样，产品研发团队可以自己掌控和执行自己的发布流程。</p><p>每一个团队都可以决定多久或者什么时候来发布产品的新版本。发布过程可以自动化到“基本不需要工程效率工程师干预”的程度。很多项目都是利用自动构建工具和部署工具平台来自动构建、自动发布的。发布过程是真正自动化的，工程师仅仅在发生问题时才会进行干预。</p><p>这就是自服务的思想。</p><p>在这种配合模式下，团队之间配合有着清晰的边界。工程效率团队为发布平台的效率负责，产品研发团队为产品负责。用工程师土话来说，这叫 “吃自己的狗粮”。</p><h2>追求速度</h2><p>以什么样的频率来发布新版本比较好？</p><p>我们认为在质量保障，能力满足的前提下，越频繁越好。</p><p>可以从两个角度来看版本发布的频率。</p><p>其一是市场竞争。产品迭代速度可以看作市场竞争力的体现。尤其是面向用户的软件，发布频率往往需要非常频繁。甚至有的团队会采用一种 “测试通过即发布（Push On Green）” 的发布方式，也就是说，发布所有通过测试的版本。</p><p>其二是工程质量。我们认为，频繁的发布可以使得每个版本之间的变更减少。这种方式使得测试、出错的调试和定位工作变得更简单。</p><p>所以，无论是从市场竞争还是工程质量管理的角度，我们都鼓励这样的版本发布哲学：</p><blockquote>\n<p>少量发布、频繁发布。</p>\n</blockquote><p>从数据驱动的角度，我们需要监测各种数据，尤其是我们关注的核心指标。例如，我们需要监测发布速度，也就是从代码修改提交到部署，再到生产环境一共需要多长时间。</p><h2>重视质量，尊重流程</h2><p>在发布流程中，有很多需要进行质量保障的环节。包括：</p><ul>\n<li>代码评审（Code Review），批准源代码改动；</li>\n<li>批准创建新的发布版本，基于源代码仓库的某个版本，以及可能的少量 Bug 修改；</li>\n<li>批准实际去部署某个发布版本；</li>\n<li>批准配置修改。</li>\n</ul><p>要确保在发布过程中，只有指定的人才能执行指定的操作，而不能随随便便跳过必要的环节进行发布。另外，SRE 需要非常了解某个新发布中包含的所有具体改动，以便在发布出现问题时可以更快地进行在线调试。</p><p>这意味着，自动化发布系统需要能够整合并提供每个发布中包含的所有改动的报告，包括但不限于源代码修改的记录、Bug Issue、配置修改等等。</p><h2>配置管理</h2><p>配置管理在发布过程中看起来很小，但是它其实是线上不稳定性的重要来源。</p><p>配置管理随时间在不停地发展。七牛云早期通过代码仓库来管理线上环节的所有配置。这有非常大的好处，所有的配置变更就如同源代码变更一样，可以被跟踪，也可以进行严格的代码评审。</p><p>但随着集群规模的增加，这种方式的弊端也越来越突出。</p><p>最大的问题是，配置变更并不完全来源于版本发布。线上故障也会引发配置变更，比如 A 机器由于某种原因要下线，可能需要把服务迁移到 B 机器，这也会引发配置变更。</p><p>随着机器数量的增加，线上配置变更就会变得相当频繁。</p><p>基于代码仓库做配置变更管理，在应对硬件故障时显得很拙劣。在理想情况下，硬件故障的响应应该是免操作的，不需要 SRE 进行任何操作。</p><p>有两个方式可以解决这个问题。</p><p>方式一是引入配置中心，把有些高频的配置变更支持做到应用逻辑中去。服务治理中有一个子课题叫 “服务发现”，就是基于这样的思想。</p><p>方式二是将配置管理与物理硬件环境彻底进行解耦，这也是数据中心操作系统（DCOS）在做的事情。本质上，你也可以把它理解成是将高频的配置变更支持做到应用逻辑中，只不过这由一个基础平台来实现罢了。</p><h2>结语</h2><p>今天我们探讨服务治理的第一个环节：发布与升级。它包括了以下这些子过程：</p><ul>\n<li>构建；</li>\n<li>测试；</li>\n<li>打包；</li>\n<li>部署；</li>\n<li>配置变更。</li>\n</ul><p>我们并没有探讨具体的发布与升级系统怎么做，虽然业界针对发布的各个环节其实都有蛮多的实作案例。如果你正在评估应该采纳什么样的系统，可以结合我们今天探讨的发布哲学来进行评估。</p><p>发布系统非常复杂，有很大的事务工作量。要做到高效的发布能力，工程师思维是关键性的支撑，我们需要坚持以系统化的思维来彻底解决发布问题。</p><p>如果你对今天的内容有什么思考与解读，欢迎给我留言，我们一起讨论。下一讲我们聊聊 “日志、监控与报警”。</p><p>如果你觉得有所收获，也欢迎把文章分享给你的朋友。感谢你的收听，我们下期再见。</p>","comments":[{"had_liked":false,"id":141014,"user_name":"风清扬","can_delete":false,"product_type":"c1","uid":1244612,"ip_address":"","ucode":"2D8F82FE6877FF","user_header":"https://static001.geekbang.org/account/avatar/00/12/fd/c4/26217aa4.jpg","comment_is_top":false,"comment_ctime":1571102804,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"53110710356","product_id":100025201,"comment_content":"老师，发布升级版本管理后面会有详细讲解吗？光讲解原理，没实际操作，很难有具体的收获。","like_count":13},{"had_liked":false,"id":148478,"user_name":"Geek_88604f","can_delete":false,"product_type":"c1","uid":1501234,"ip_address":"","ucode":"33DD1318E53814","user_header":"","comment_is_top":false,"comment_ctime":1573016022,"is_pvip":false,"replies":[{"id":"57194","content":"我们希望升级才需要配置变更，硬件环境改变不需要配置变更。这样的话，配置中心就需要针对集群的逻辑视图，而不是物理视图。","user_name":"作者回复","user_name_real":"许式伟-七牛云(已满)","uid":"1228022","ctime":1573034693,"ip_address":"","comment_id":148478,"utype":1}],"discussion_count":1,"race_medal":0,"score":"27342819798","product_id":100025201,"comment_content":"        在配置管理中老师提到:‘’将配置管理与物理硬件环境彻底进行解耦，这也是数据中心操作系统（DCOS）在做的事情。本质上，你也把它理解成是将高频的配置变更支持做到应用逻辑中，只不过这由一个基础平台来实现罢了。‘’对于这一点不太理解，配置中心已经将服务的配置管理做的很好了，为啥还会有‘‘将配置管理与物理硬件环境彻底进行解耦’’的需求呢？这么做的优势是什么？","like_count":7,"discussions":[{"author":{"id":1228022,"avatar":"https://static001.geekbang.org/account/avatar/00/12/bc/f6/e61d4b8f.jpg","nickname":"许式伟-七牛云(已满)","note":"","ucode":"1A2F8AA6F6DB54","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":473505,"discussion_content":"我们希望升级才需要配置变更，硬件环境改变不需要配置变更。这样的话，配置中心就需要针对集群的逻辑视图，而不是物理视图。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1573034693,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":140933,"user_name":"tingye","can_delete":false,"product_type":"c1","uid":1391463,"ip_address":"","ucode":"54F7A44066DF5D","user_header":"https://static001.geekbang.org/account/avatar/00/15/3b/67/c188d3bc.jpg","comment_is_top":false,"comment_ctime":1571097342,"is_pvip":false,"replies":[{"id":"54545","content":"是这样，出问题首先第一要务应该先恢复服务，但是有可能的话还应该尽可能保留现场，所以把流量切走是更好的做法。","user_name":"作者回复","user_name_real":"许式伟-七牛云(已满)","uid":"1228022","ctime":1571101871,"ip_address":"","comment_id":140933,"utype":1}],"discussion_count":1,"race_medal":0,"score":"18750966526","product_id":100025201,"comment_content":"“SRE 需要非常了解某个新发布中包含的所有具体改动，以便在发布出现问题时可以更快地进行在线调试”——发布出现问题还是应该先回退版本，恢复服务吧，调试定位问题感觉应该业务开发来做，SRE通常也无能为力，如果是devops就没什么可推脱了","like_count":4,"discussions":[{"author":{"id":1228022,"avatar":"https://static001.geekbang.org/account/avatar/00/12/bc/f6/e61d4b8f.jpg","nickname":"许式伟-七牛云(已满)","note":"","ucode":"1A2F8AA6F6DB54","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":470626,"discussion_content":"是这样，出问题首先第一要务应该先恢复服务，但是有可能的话还应该尽可能保留现场，所以把流量切走是更好的做法。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1571101871,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":140944,"user_name":"Aaron Cheung","can_delete":false,"product_type":"c1","uid":1079816,"ip_address":"","ucode":"03972759C53667","user_header":"https://static001.geekbang.org/account/avatar/00/10/7a/08/4d3e47dd.jpg","comment_is_top":false,"comment_ctime":1571097978,"is_pvip":false,"replies":[{"id":"54772","content":"sre","user_name":"作者回复","user_name_real":"许式伟-七牛云(已满)","uid":"1228022","ctime":1571264728,"ip_address":"","comment_id":140944,"utype":1}],"discussion_count":1,"race_medal":0,"score":"10161032570","product_id":100025201,"comment_content":"七牛云项目发布是sre还是软件开发工程师自己发布呢","like_count":3,"discussions":[{"author":{"id":1228022,"avatar":"https://static001.geekbang.org/account/avatar/00/12/bc/f6/e61d4b8f.jpg","nickname":"许式伟-七牛云(已满)","note":"","ucode":"1A2F8AA6F6DB54","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":470629,"discussion_content":"sre","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1571264728,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":184444,"user_name":"虚竹","can_delete":false,"product_type":"c1","uid":1691109,"ip_address":"","ucode":"8D8C96C793724E","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTJIocn8OMjfSGqyeSJEV3ID2rquLR0S6xo0ibdNYQgzicib6L6VlqWjhgxOqD2iaicX1KhbWXWCsmBTskA/132","comment_is_top":false,"comment_ctime":1583316396,"is_pvip":false,"replies":[{"id":"71366","content":"这块的确至关重要，且不是版本管理能够解决。它独立于版本管理，但是的确会对版本管理有所影响。","user_name":"作者回复","user_name_real":"许式伟-七牛云(已满)","uid":"1228022","ctime":1583369623,"ip_address":"","comment_id":184444,"utype":1}],"discussion_count":3,"race_medal":0,"score":"5878283692","product_id":100025201,"comment_content":"老师好像漏了升级时另一个容易引起问题的地方，数据库表结构的变更，这部分应该也需要管理起来的吧？","like_count":2,"discussions":[{"author":{"id":1228022,"avatar":"https://static001.geekbang.org/account/avatar/00/12/bc/f6/e61d4b8f.jpg","nickname":"许式伟-七牛云(已满)","note":"","ucode":"1A2F8AA6F6DB54","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":486017,"discussion_content":"这块的确至关重要，且不是版本管理能够解决。它独立于版本管理，但是的确会对版本管理有所影响。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1583369623,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1018071,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/88/d7/07f8bc6c.jpg","nickname":"sljoai","note":"","ucode":"FF88C4BA265DE0","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":273984,"discussion_content":"请问这一块目前比较成熟的方案有哪些呢？","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1590511418,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":1,"child_discussions":[{"author":{"id":1048314,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/fe/fa/2a046821.jpg","nickname":"人间四月天","note":"","ucode":"11BE219C23EEBC","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1018071,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/88/d7/07f8bc6c.jpg","nickname":"sljoai","note":"","ucode":"FF88C4BA265DE0","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":562177,"discussion_content":"我们有成熟的工具","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1649778340,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":273984,"ip_address":""},"score":562177,"extra":""}]}]},{"had_liked":false,"id":152644,"user_name":"技术修行者","can_delete":false,"product_type":"c1","uid":1013147,"ip_address":"","ucode":"28CA41A1214D6B","user_header":"https://static001.geekbang.org/account/avatar/00/0f/75/9b/611e74ab.jpg","comment_is_top":false,"comment_ctime":1574055484,"is_pvip":true,"discussion_count":0,"race_medal":5,"score":"5869022780","product_id":100025201,"comment_content":"对配置管理中的数据配置操作系统不太熟悉，希望作者能在后面深入展开讲一下。","like_count":2},{"had_liked":false,"id":142691,"user_name":"Fs","can_delete":false,"product_type":"c1","uid":1083184,"ip_address":"","ucode":"0AD0EFB5544B9A","user_header":"https://static001.geekbang.org/account/avatar/00/10/87/30/4626c8c0.jpg","comment_is_top":false,"comment_ctime":1571459843,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"5866427139","product_id":100025201,"comment_content":"这篇比较简单，事务性介绍","like_count":1},{"had_liked":false,"id":319647,"user_name":"haike","can_delete":false,"product_type":"c1","uid":1062842,"ip_address":"","ucode":"A724610A8D46BC","user_header":"https://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTIpicfAqhYMoN6GBDibUmuoD2U3D0tOQKDN0O2G3WGSYWSWibRqtyyONvtA1G99kD0PqEU2AkWp7C6GA/132","comment_is_top":false,"comment_ctime":1635901465,"is_pvip":false,"replies":[{"id":"115985","content":"日构建对仓库是只读的，要admin肯定不合理","user_name":"作者回复","user_name_real":"许式伟-七牛云(已满)","uid":"1228022","ctime":1636006631,"ip_address":"","comment_id":319647,"utype":1}],"discussion_count":0,"race_medal":0,"score":"1635901465","product_id":100025201,"comment_content":"老师，我们目前想通过jenkins自动化构建完成后，修改软件的版本号。但是需要配置的git 账户需要有admin 权限，这样的方案又有较大的风险，有什么好的方案吗，期待你的回复","like_count":0},{"had_liked":false,"id":294131,"user_name":"张浩","can_delete":false,"product_type":"c1","uid":1001225,"ip_address":"","ucode":"DBEAFFB7660813","user_header":"https://static001.geekbang.org/account/avatar/00/0f/47/09/316b0aa1.jpg","comment_is_top":false,"comment_ctime":1621778098,"is_pvip":true,"discussion_count":0,"race_medal":0,"score":"1621778098","product_id":100025201,"comment_content":"变更是故障之源。 少量发布，频繁发布的哲学，需要在实践中应用。","like_count":0},{"had_liked":false,"id":293288,"user_name":"不温暖啊不纯良","can_delete":false,"product_type":"c1","uid":2079117,"ip_address":"","ucode":"204474A214E00C","user_header":"https://static001.geekbang.org/account/avatar/00/1f/b9/8d/00bded19.jpg","comment_is_top":false,"comment_ctime":1621323560,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1621323560","product_id":100025201,"comment_content":"我们现在的所有部署服务还是用人工的方式来做，第一容易出错，第二部署周期长，因为这样做的效率完全取决于这个人对整个发布流程的熟悉程度和对线上环境的熟悉程度。<br><br>变更是故障之源。<br>关于这条箴言，我的理解是，变更既有代码层面的变更，也有环境层面的变更，环境层面的变更相对更复杂一点，因为这包含整个生产环境运行系统的各个方面，我们所部署的项目，是完全依赖于这个基础环境的，比如 IP变化，防火墙配置变化，文件路径变化，网络变化，编码解码规则变化等，都会直接影响系统的正常运行。而代码层面的变化则相对于简单一些，最糟糕的无非就是因为，修改代码的时候，对其他区域的功能造成了破坏，导致我们的功能无法使用，这个可以通过我们的代码质量管控，以及自动测试集成工具来弥补。<br><br>少量变更，频繁变更。<br>小步快跑原则，少量变更是为了防止变更所带来的大范围破坏性，频繁变更则是为了更快的响应用户需求，让我们的服务更加的及时。<br><br>矛盾。<br>既然变更是故障的根源，那我们所追求的频繁变更，其实就是导致故障的根源，如果我们不变更，那也就没故障，但是我们不得不变更，于是生产环境的故障不得不出现。","like_count":1},{"had_liked":false,"id":281897,"user_name":"憶海拾貝","can_delete":false,"product_type":"c1","uid":1054727,"ip_address":"","ucode":"99E883A8601DED","user_header":"https://static001.geekbang.org/account/avatar/00/10/18/07/9f5f5dd3.jpg","comment_is_top":false,"comment_ctime":1614938253,"is_pvip":false,"replies":[{"id":"102333","content":"是这样，只不过这样没有去做版本管理，只是给版本管理提供了便利。从这一点看go对版本管理的支持思路是有很大变化的。","user_name":"作者回复","user_name_real":"许式伟-七牛云(已满)","uid":"1228022","ctime":1614951132,"ip_address":"","comment_id":281897,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1614938253","product_id":100025201,"comment_content":"从密闭性角度看,使用vendor目录保存Go项目的依赖,并提交到VCS维护,也是好的做法咯?","like_count":0,"discussions":[{"author":{"id":1228022,"avatar":"https://static001.geekbang.org/account/avatar/00/12/bc/f6/e61d4b8f.jpg","nickname":"许式伟-七牛云(已满)","note":"","ucode":"1A2F8AA6F6DB54","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":516546,"discussion_content":"是这样，只不过这样没有去做版本管理，只是给版本管理提供了便利。从这一点看go对版本管理的支持思路是有很大变化的。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1614951132,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":185523,"user_name":"沉睡的木木夕","can_delete":false,"product_type":"c1","uid":1036362,"ip_address":"","ucode":"2C6B23B34C44E7","user_header":"https://static001.geekbang.org/account/avatar/00/0f/d0/4a/7e3d158d.jpg","comment_is_top":false,"comment_ctime":1583598696,"is_pvip":false,"replies":[{"id":"71643","content":"1、配置中心不只是可以做服务发现，服务发现可以用“配置中心”这个机制。<br>2、方案二与方案一本质相同，只是方案一是应用程序会感知，第二种方案应用程序不感知。","user_name":"作者回复","user_name_real":"许式伟-七牛云(已满)","uid":"1228022","ctime":1583630620,"ip_address":"","comment_id":185523,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1583598696","product_id":100025201,"comment_content":"“方式一是引入配置中心，把有些高频的配置变更支持做到应用逻辑中去”<br>这种是说类似于携程的 apollo 的么？把多个系统的配置统一管理，可以做到热更新和热备，但是后面紧接着说“服务发现”，这个说法我感觉不是很正确啊<br>还有方式二的说法“方式二是将配置管理与物理硬件环境彻底进行解耦...本质上，你也把它理解成是将高频的配置变更支持做到应用逻辑中，只不过这由一个基础平台来实现罢了”这个不就是方式一么？","like_count":0,"discussions":[{"author":{"id":1228022,"avatar":"https://static001.geekbang.org/account/avatar/00/12/bc/f6/e61d4b8f.jpg","nickname":"许式伟-七牛云(已满)","note":"","ucode":"1A2F8AA6F6DB54","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":486393,"discussion_content":"1、配置中心不只是可以做服务发现，服务发现可以用“配置中心”这个机制。\n2、方案二与方案一本质相同，只是方案一是应用程序会感知，第二种方案应用程序不感知。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1583630620,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":174310,"user_name":"谢晞鸣","can_delete":false,"product_type":"c1","uid":1352338,"ip_address":"","ucode":"54F5FEDC11B1C9","user_header":"https://static001.geekbang.org/account/avatar/00/14/a2/92/982f8984.jpg","comment_is_top":false,"comment_ctime":1580133679,"is_pvip":false,"replies":[{"id":"67786","content":"是的","user_name":"作者回复","user_name_real":"许式伟-七牛云(已满)","uid":"1228022","ctime":1580193796,"ip_address":"","comment_id":174310,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1580133679","product_id":100025201,"comment_content":"变更是故障之源，变更要做到可监控，可应急，可灰度。这个里面有很大的挑战，每个批次变更完之后，要确保对应的监控是精确的，实时的，有问题能及时发现，最好是自动检测的（系统性的比较简单，业务层的监控比较难），确认没问题后继续。","like_count":0,"discussions":[{"author":{"id":1228022,"avatar":"https://static001.geekbang.org/account/avatar/00/12/bc/f6/e61d4b8f.jpg","nickname":"许式伟-七牛云(已满)","note":"","ucode":"1A2F8AA6F6DB54","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":482364,"discussion_content":"是的","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1580193796,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":154651,"user_name":"Eternal","can_delete":false,"product_type":"c1","uid":1188023,"ip_address":"","ucode":"EA6FE7CC98F740","user_header":"https://static001.geekbang.org/account/avatar/00/12/20/b7/bdb3bcf0.jpg","comment_is_top":false,"comment_ctime":1574499897,"is_pvip":false,"replies":[{"id":"59364","content":"讲的是容器调度","user_name":"作者回复","user_name_real":"许式伟-七牛云(已满)","uid":"1228022","ctime":1574508093,"ip_address":"","comment_id":154651,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1574499897","product_id":100025201,"comment_content":"将配置管理与物理硬件环境彻底进行解耦，这也是数据中心操作系统（DCOS）在做的事情。本质上，你也把它理解成是将高频的配置变更支持做到应用逻辑中，只不过这由一个基础平台来实现罢了。<br><br>讲的是将配置打包到douker镜像中吗？","like_count":0,"discussions":[{"author":{"id":1228022,"avatar":"https://static001.geekbang.org/account/avatar/00/12/bc/f6/e61d4b8f.jpg","nickname":"许式伟-七牛云(已满)","note":"","ucode":"1A2F8AA6F6DB54","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":475535,"discussion_content":"讲的是容器调度","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1574508093,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":142392,"user_name":"诗泽","can_delete":false,"product_type":"c1","uid":1031865,"ip_address":"","ucode":"F28BE01C3FD12F","user_header":"https://static001.geekbang.org/account/avatar/00/0f/be/b9/f2481c2c.jpg","comment_is_top":false,"comment_ctime":1571362625,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1571362625","product_id":100025201,"comment_content":"看了上一节和这一节内容对于“事务性工作”还是不太理解，老师可以详解一下吗？","like_count":0},{"had_liked":false,"id":141401,"user_name":"曹龙","can_delete":false,"product_type":"c1","uid":1089716,"ip_address":"","ucode":"C135EB2F251966","user_header":"https://static001.geekbang.org/account/avatar/00/10/a0/b4/4587b6be.jpg","comment_is_top":false,"comment_ctime":1571147906,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1571147906","product_id":100025201,"comment_content":"收获满满😬","like_count":0}]}