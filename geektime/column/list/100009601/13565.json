{"id":13565,"title":"23 | 知其然知其所以然：聊聊API自动化测试框架的前世今生","content":"<p>你好，我是茹炳晟，今天我和你分享的主题是“知其然知其所以然：聊聊API自动化测试框架的前世今生”。</p>\n<p>在上一篇文章中，我以一个简单的Restful API为例，分别介绍了cURL和Postman的使用方法，相信你已经对API测试有个感性认识了。</p>\n<p>但是，我们不能仅仅停留在感性认识的层面，还需要熟悉并掌握这些测试方法，完成相应的API测试工作。所以，也就有了我今天分享的主题，希望可以通过对API自动化测试框架发展的介绍，让你理解API测试是如何一步一步地发展成今天的样子，以“知其所以然”的方式加深你对API自动化测试的理解。</p>\n<p>接下来，我将会遵循由简入繁的原则，为你介绍API测试框架，以发现问题然后解决问题的思路为主线，展开今天的分享。</p>\n<h2>早期的基于Postman的API测试</h2>\n<p>早期的API测试，往往都是通过类似Postman的工具完成的。但是，由于这类工具都是基于界面操作的，所以有以下两个问题亟待解决：</p>\n<ol>\n<li>\n<p>当需要频繁执行大量的测试用例时，基于界面的API测试就显得有些笨拙；</p>\n</li>\n<li>\n<p>基于界面操作的测试难以与CI/CD流水线集成。</p>\n</li>\n</ol>\n<p>所以，我们迫切需要一套可以基于命令行执行的API测试方案。这样，API测试可以直接通过命令行发起，与CI/CD流水线的整合也就方便得多了。</p><!-- [[[read_end]]] -->\n<h2>基于Postman和Newman的API测试</h2>\n<p>于是就出现了集成Postman和Newman的方案，然后再结合Jenkins就可以很方便地实现API测试与CI/CDl流水线的集成。Newman其实就是一个命令行工具，可以直接执行Postman导出的测试用例。</p>\n<p>用Postman开发调试测试用例，完成后通过Newman执行，这个方案看似很完美。但是在实际工程实践中，测试场景除了简单调用单个API以外，还存在连续调用多个API的情况。</p>\n<p>此时，往往会涉及到多个API调用时的数据传递问题，即下一个API调用的参数可能是上一个API调用返回结果中的某个值。另外，还会经常遇到的情况是，API调用前需要先执行一些特定的操作，比如准备测试数据等。</p>\n<p>因此，对于需要连续调用多个API并且有参数传递的情况，Postman+Newman似乎就不再是理想的测试方案了。</p>\n<h2>基于代码的API测试</h2>\n<p>为了解决这个问题，于是就出现了基于代码的API测试框架。比较典型的是，基于Java的OkHttP和Unirest、基于Python的http.client和Requests、基于NodeJS的Native和Request等。</p>\n<p>小型的互联网企业，往往会根据自己的业务需求，选用这些成熟的API测试框架。</p>\n<p>但是，对于中大型的互联网企业，一般都会自己开发更适合自身业务上下文的API测试框架，比如eBay，我们为了实现代码化的API测试，开发了自己的HttpClient，后期为了使API测试的代码更简洁易懂，就基于Rest-Assured封装了全新的API测试框架。</p>\n<p>这种根据公司业务上下文开发实现的API测试框架，在使用上有很多优点，而且灵活性也很好，主要体现在以下几个方面：</p>\n<ol>\n<li>\n<p>可以灵活支持多个API的顺序调用，方便数据在多个API之间传递，即上一个API调用返回结果中的某个字段值可以作为后续API调用的输入参数；</p>\n</li>\n<li>\n<p>方便在API调用之前或者之后执行额外的任意操作，可以在调用前执行数据准备操作，可以在调用后执行现场清理工作等；</p>\n</li>\n<li>\n<p>可以很方便地支持数据驱动测试，这里的数据驱动测试概念和GUI测试中的数据驱动测试完全相同，也就是可以将测试数据和测试代码分离解耦；</p>\n</li>\n<li>\n<p>由于直接采用了代码实现，所以可以更灵活地处理测试验证的断言（Assert）；</p>\n</li>\n<li>\n<p>原生支持命令行的测试执行方式，可以方便地和CI/CD工具做集成。</p>\n</li>\n</ol>\n<p>这里我给出了一段伪代码示例，用于展示如何用代码实现一个简单的API测试。</p>\n<p><img src=\"https://static001.geekbang.org/resource/image/be/6f/be4e9d0cf1442e89831629f3f5727c6f.png?wh=595*287\" alt=\"\" /></p>\n<center>图1 基于代码的API测试的伪代码示例</center>\n<ul>\n<li>\n<p>代码的第1-12行，创建了CreateUserAPI类，其中包含了endpoint、操作方法PUT、InlineParam和Param的设置，并且构建了对应的request对象；</p>\n</li>\n<li>\n<p>代码的第14-19行，是测试的主体函数。这段函数的逻辑是这样的：</p>\n<ul>\n<li>首先，构建CreateUserAPI的对象；</li>\n<li>然后，用CreateUserAPI对象的buildRequest方法结合输入参数构建request对象；</li>\n<li>接着，通过request对象的request()方法发起了API调用；</li>\n<li>最后，验证response中的状态码是不是200。</li>\n</ul>\n</li>\n</ul>\n<p>在这段伪代码中，有以下几点需要你特别注意：</p>\n<ol>\n<li>\n<p>代码中“CreateUserAPI的父类RestAPI”“_buildRequest()方法”“request()方法”“addInlineParam()方法”等，都是由API测试框架提供的。</p>\n</li>\n<li>\n<p>为了简化代码，这里并没有引入数据驱动的data provider。但在实际项目中，代码第14行的测试输入参数，往往来自于data provider，即由数据驱动的方式提供测试输入数据。</p>\n</li>\n<li>\n<p>由于测试过程完全由代码实现，所以可以很方便的在测试执行前后增加任意的额外步骤。比如，需要在CreateUser前增加数据创建的步骤时，只需要在代码第15行前直接添加就可以了。</p>\n</li>\n<li>\n<p>这里的例子只有一个API调用，当需要多个API顺序调用时，直接扩展testCreateUser方法即可，两个API之间的数据传递可以通过上一个API返回的response.XXXX完成。</p>\n</li>\n</ol>\n<p>通过这段伪代码，我们可以看到，虽然基于代码的API测试灵活性很好，也可以很方便地和CI/CD集成，但是也引入了一些新的问题，比如：</p>\n<ul>\n<li>对于单个API测试的场景，工作量相比Postman要大得多；</li>\n<li>对于单个API测试的场景，无法直接重用Postman里面已经积累的Collection。</li>\n</ul>\n<p>在实际工程中，这两个问题非常重要，而且必须要解决。因为公司管理层肯定无法接受相同工作的工作量直线上升，同时原本已经完成的部分无法继续使用，所以自动化生成API测试代码的技术也就应运而生了。</p>\n<h2>自动生成API测试代码</h2>\n<p>自动生成API测试代码是指，基于Postman的Collection生成基于代码的API测试用例。</p>\n<p>其实，在上一篇文章<a href=\"https://time.geekbang.org/column/article/13421\">《从0到1：API测试怎么做？常用API测试工具简介》</a>最后的部分，我已经提到过Postman工具本身已经支持将Collection转化成测试代码，但如果直接使用这个功能的话，还有两个问题需要解决：</p>\n<ol>\n<li>\n<p>测试中的断言（assert）部分不会生成代码，也就是说测试代码的生成只支持发起request的部分，而不会自动生成测试验证点的代码；</p>\n</li>\n<li>\n<p>很多中大型互联网企业都是使用自己开发的API测试框架，那么测试代码的实现就会和自研API测试框架绑定在一起，显然Postman并不支持这类代码的自动生成。</p>\n</li>\n</ol>\n<p>鉴于以上两点，理想的做法是自己实现一个代码生成工具，这个工具的输入是Postman中Collection的JSON文件，输出是基于自研API框架的测试代码，而且同时会把测试的断言一并转化为代码。</p>\n<p><strong>这个小工具实现起来并不复杂，其本质就是解析Collection JSON文件的各个部分，然后根据自研API框架的代码模板实现变量替换。</strong> 具体来讲，实现过程大致可以分为以下三步：</p>\n<ul>\n<li>首先，根据自研API框架的代码结构建立一个带有变量占位符的模板文件；</li>\n<li>然后，通过JSON解析程序，按照Collection JSON文件的格式定义去提取header、method等信息；</li>\n<li>最后，用提取得到的具体值替换之前模板文件中的变量占位符，这样就得到了可执行的自研框架的API测试用例代码。</li>\n</ul>\n<p>有了这个工具后，我建议你的工作模式（Working Model）可以转换成这样：</p>\n<ul>\n<li>对于Postman中已经累积的Collection，全部由这个工具统一转换成基于代码的API测试用例；</li>\n<li>开发人员继续使用Postman执行基本的测试，并将所有测试用例保存成Collection，后续统一由工具转换成基于代码的API测试用例；</li>\n<li>对于复杂测试场景（比如，顺序调用多个API的测试），可以组装由工具转换得到的API测试用例代码，完成测试工作。</li>\n</ul>\n<p>如图2所示，就是一个组装多个由工具转换得到的API测试用例代码的例子。其中，代码第3行的类“CreateUserAPI”和第10行的类“BindCreditCardAPI”的具体代码就可以通过工具转换得到。</p>\n<p><img src=\"https://static001.geekbang.org/resource/image/8c/e9/8cc97f6e1459aac8aedbb14ab8bec4e9.png?wh=885*245\" alt=\"\" /></p>\n<center>图2  多个API顺序调用的测试用例代码</center>\n<p>至此，基于代码的API测试发展得算是比较成熟了，但在实际应用过程中还有一个痛点一直未被解决，那就是测试验证中的断言，也是我接下来要和你一起讨论的话题。</p>\n<h2>Response结果发生变化时的自动识别</h2>\n<p>在实际的工程项目中，开发了大量的基于代码的API测试用例后，你会发现一个让人很纠结的问题：到底应该验证API返回结果中的哪些字段？</p>\n<p>因为你不可能对返回结果中的每一个字段都写assert，通常情况下，你只会针对关注的几个字段写assert，而那些没写assert的字段也就无法被关注了。</p>\n<p>但对API测试来说，有一个很重要的概念是后向兼容性（backward compatibility）。API的后向兼容性是指，发布的新API版本应该能够兼容老版本的API。</p>\n<p>后向兼容性除了要求API的调用参数不能发生变化外，还要求不能删减或者修改返回的response中的字段。因为这些返回的response会被下游的代码使用，如果字段被删减、改名或者字段值发生了非预期的变化，那么下游的代码就可能因为无法找到原本的字段，或者因为字段值的变化而发生问题，从而破坏API的后向兼容性。</p>\n<p>所以，我们迫切需要找到一个方法，既可以不对所有的response字段都去写assert，又可以监测到response的结构以及没有写assert的字段值的变化。</p>\n<p>在这样的背景下，诞生了“Response结果变化时的自动识别”技术。也就是说，即使我们没有针对每个response字段都去写assert，我们仍然可以识别出哪些response字段发生了变化。</p>\n<p>具体实现的思路是，在API测试框架里引入一个内建数据库，推荐采用非关系型数据库（比如MongoDB），然后用这个数据库记录每次调用的request和response的组合，当下次发送相同request时，API测试框架就会自动和上次的response做差异检测，对于有变化的字段给出告警。</p>\n<p>你可能会说这种做法也有问题，因为有些字段的值每次API调用都是不同的，比如token值、session ID、时间戳等，这样每次的调用就都会有告警。</p>\n<p>但是这个问题很好解决，现在的解决办法是通过规则配置设立一个“白名单列表”，把那些动态值的字段排除在外。</p>\n<h2>总结</h2>\n<p>为了让你可以更好地理解今天的API测试框架，我从其发展历程的角度进行了分析：</p>\n<p>早期的基于Postman的API测试在面临频繁执行大量测试用例，以及与CI/CD流水线整合的问题时，显得心有余而力不足。为此，基于命令行的API测试实践，也就是Postman+Newman，具有很好的灵活性，解决了这两个问题。</p>\n<p>但是，Postman+Newman的测试方案，只能适用于单个API调用的简单测试场景，对于连续调用多个API并涉及到参数传递问题时，这个方案就变得不那么理想和完美了。随后，API测试就过渡到了基于代码的API测试阶段。</p>\n<p>一些小型企业，则往往会选择适合自己业务的成熟API测试框架。中大型的互联网企业，一般都会根据自己的业务上下文，在成熟API测试框架的基础上封装自己的API测试框架，提升测试效率和灵活性。</p>\n<p>但是，不管是采用现成的还是自己去开发API测试框架，都会遇到测试用例开发效率低下，以及无法直接重用Postman中积累的Collection的问题，为此我分享了两个比较好用的方法，也就是：自动生成API测试代码和Response结果变化的自动识别，并给出了这两个方法的实现思路。</p>\n<p>希望我分享的这些内容，可以帮你解决在实际测试项目中遇到的问题。</p>\n<h2>思考题</h2>\n<p>目前，基于代码的API测试框架已经比较成熟了，所以在此基础上又出现了基于配置文件的API测试框架，比如典型的HttpRunner，在此类API测试框架的支持下，测试用例本身往往就是纯粹的配置文件了。你是否有接触过这类API测试框架，对此又有什么看法呢？</p>\n<p>欢迎你给我留言。</p>\n<p></p>\n","comments":[{"had_liked":false,"id":23350,"user_name":"Martin 龚平","can_delete":false,"product_type":"c1","uid":1061104,"ip_address":"","ucode":"C97E2EC226D026","user_header":"https://static001.geekbang.org/account/avatar/00/10/30/f0/a892c936.jpg","comment_is_top":false,"comment_ctime":1536294718,"is_pvip":false,"replies":[{"id":"8630","content":"非常好的实践，其实这个我们也有在做，基于httprunner基本没有代码工作量，全部基于yaml或json的配置，而且就像你说的是通过har直接转换json或者yaml，结合locust还可以直接做性能测试。","user_name":"作者回复","user_name_real":"dhrbc","uid":"1002226","ctime":1536631502,"ip_address":"","comment_id":23350,"utype":1}],"discussion_count":3,"race_medal":0,"score":"323658841918","product_id":100009601,"comment_content":"用postman转python或者java测试脚本还是太慢了，而且需要一定编程技能，感觉已经是上一代了，我现在根据httprunner的yml的脚本规则，加上一些开源的组件，做了一个web页面可以进行代理抓包，测试人员无论从web页面还是app操作只要设置代理过来，就可以看到自己的所有请求，然后选择想自动化的请求，后台自动转成测试脚本，再在管理界面上通过拖拽等性质组装成自动化测试集，并可以执行调试、定时任务等。这样的自动化程度基本对编程技能降到了最低，而且生成测试脚本的成本比上一代低了很多","like_count":76,"discussions":[{"author":{"id":1002226,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/4a/f2/6ea13762.jpg","nickname":"茹炳晟","note":"","ucode":"1361AE1931E2DD","race_medal":0,"user_type":2,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":423527,"discussion_content":"非常好的实践，其实这个我们也有在做，基于httprunner基本没有代码工作量，全部基于yaml或json的配置，而且就像你说的是通过har直接转换json或者yaml，结合locust还可以直接做性能测试。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1536631502,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1964372,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/W0Wohx1jic9qu1BCibae3XH13lb8eWAXJGAU5TOibsCl6nFRibFR7gvibuErf59kC9zOeDfzibsZ5S9j9xyEPKrsaS8w/132","nickname":"来爬山","note":"","ucode":"E8929B2D6B762B","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":549189,"discussion_content":"能说说 如何把现有的httprunner做成web界面吗? 代理用的mitm-proxy吗?","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1643706299,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":2946926,"avatar":"https://static001.geekbang.org/account/avatar/00/2c/f7/6e/49286583.jpg","nickname":"雨路","note":"","ucode":"6F3CEBDCB3C3AC","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":573900,"discussion_content":"能跟您请教下具体的实现方案么，谢谢","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1653723038,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":78685,"user_name":"楚耳","can_delete":false,"product_type":"c1","uid":1068208,"ip_address":"","ucode":"7661633F3297C6","user_header":"https://static001.geekbang.org/account/avatar/00/10/4c/b0/f22017b0.jpg","comment_is_top":false,"comment_ctime":1553218137,"is_pvip":false,"discussion_count":2,"race_medal":0,"score":"74567662169","product_id":100009601,"comment_content":"我觉得老师对api的测试都是基于单个api的测试，我是做P2P这块的，公司的api执行后都会去操作数据库，操作各种表，api调用后，需要验证的是各表的字段是否修改正确，这个才是我们验证的重点，我想如果业务复杂的api基本都是跟数据库关联很大，Response的返回值验证都是次要的了。所以我觉得老师这个api测试的讲解不够深入","like_count":18,"discussions":[{"author":{"id":1798489,"avatar":"https://static001.geekbang.org/account/avatar/00/1b/71/59/642cd27a.jpg","nickname":"小呆呆","note":"","ucode":"6A04486F1FC932","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":212915,"discussion_content":"老师只是提供一种思路 思路挺好的 具体实现要靠自己的 BTW，现在还在p2p公司混的都是英雄","likes_number":2,"is_delete":false,"is_hidden":false,"ctime":1585033119,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":1,"child_discussions":[{"author":{"id":1919972,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTI9R0dQHpzoOub6GIIzpfzicIicBTzib24aYaok7iccRmfNd1eyAe17CBsXNsdUDTlyibbSnIXNd765Bjg/132","nickname":"符志英","note":"","ucode":"BF22140BD2C4EB","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1798489,"avatar":"https://static001.geekbang.org/account/avatar/00/1b/71/59/642cd27a.jpg","nickname":"小呆呆","note":"","ucode":"6A04486F1FC932","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":219803,"discussion_content":"哈哈哈，现在还在p2p的都是英雄，莫名想笑啊","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1585810915,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":212915,"ip_address":""},"score":219803,"extra":""}]}]},{"had_liked":false,"id":81461,"user_name":"yudi5158","can_delete":false,"product_type":"c1","uid":1433363,"ip_address":"","ucode":"9593AFF868463B","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/vVHHYQw1kesqK5euoZ52vibmmhWSXdvBqSwed7FfHUx7ULESOnwaq9iaPWPq0KQZpPaHSj6UcLebfUqXDBfGyPuA/132","comment_is_top":false,"comment_ctime":1553918005,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"44503590965","product_id":100009601,"comment_content":"response结果变化的自动识别，我目前项目使用了大量的json schema验证 效果还不错","like_count":10},{"had_liked":false,"id":51495,"user_name":"不错的葱","can_delete":false,"product_type":"c1","uid":1167852,"ip_address":"","ucode":"982CCA62F95682","user_header":"https://static001.geekbang.org/account/avatar/00/11/d1/ec/8a949eba.jpg","comment_is_top":false,"comment_ctime":1545189712,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"44494862672","product_id":100009601,"comment_content":"老师请教两个问题：<br>1.做api测试时，是否有必要对数据库做验证？比如测试添加接口，添加成功后是否需要逐一验证数据库字段是否正确；再比如，测试获取详情接口，是否需要把接口的返回和数据库中数据做对比验证。<br>2.引入数据驱动后，对于不同的输入，验证的步骤相差很大。比如：可能有的输入直接验证responseCode即可，而有的输入需要验证更多字段。这种情况应该如何处理呢？由于这个问题，我这里没有使用数据驱动，而是不同的数据写了不同的用例。","like_count":10},{"had_liked":false,"id":20985,"user_name":"Cynthia🌸","can_delete":false,"product_type":"c1","uid":1163960,"ip_address":"","ucode":"B3A48089794940","user_header":"https://static001.geekbang.org/account/avatar/00/11/c2/b8/ec758482.jpg","comment_is_top":false,"comment_ctime":1534852930,"is_pvip":false,"replies":[{"id":"7751","content":"哈哈，这的确是个很好的方法，非常值得落地","user_name":"作者回复","user_name_real":"dhrbc","uid":"1002226","ctime":1535329982,"ip_address":"","comment_id":20985,"utype":1}],"discussion_count":2,"race_medal":0,"score":"40189558594","product_id":100009601,"comment_content":"感觉本篇对我最有用的，就是Response结果发生变化时的自动识别这块啊！自己在项目中遇到过类似的问题，虽然采取了一定的措施，但是没有想到作者这个解决方案。准备顺着作者的思路捋一捋，看看把他具体实现一下。","like_count":9,"discussions":[{"author":{"id":1002226,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/4a/f2/6ea13762.jpg","nickname":"茹炳晟","note":"","ucode":"1361AE1931E2DD","race_medal":0,"user_type":2,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":422482,"discussion_content":"哈哈，这的确是个很好的方法，非常值得落地","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1535329982,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1133496,"avatar":"https://static001.geekbang.org/account/avatar/00/11/4b/b8/6d3ed13d.jpg","nickname":"依然范德彪","note":"","ucode":"F17B91BF0AA61A","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":350851,"discussion_content":"落地了嘛？","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1614051409,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":20725,"user_name":"sylan215","can_delete":false,"product_type":"c1","uid":1019029,"ip_address":"","ucode":"5A2CF31BC69F40","user_header":"https://static001.geekbang.org/account/avatar/00/0f/8c/95/4544d905.jpg","comment_is_top":false,"comment_ctime":1534696088,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"31599467160","product_id":100009601,"comment_content":"确实，Postman 作为自测工具或者开发之间的接口对接，还是很方便的，但是涉及批量每日回归执行，或者同一个接口的多参数验证等，稍微有点不方便，这应该也是那么的代码级 API 测试框架出现的原因吧。<br>相对于自动生成 API 测试代码，我更倾向于配置文件的方式，毕竟通过工具把 JSON 转换为自己需要的格式，说到底也是配置文件而已，只是还要增加一个转换的过程。<br>Response 结果发生变化时的自动识别，这个很赞，也给我提供了一些思路，目前我都是只校验不变的部分，这样会有覆盖不全的情况，后面我也会考虑这种自适应的实现。<br><br>以上，欢迎沟通交流，公众号「sylan215」<br><br>","like_count":7},{"had_liked":false,"id":61379,"user_name":"johnny","can_delete":false,"product_type":"c1","uid":1210226,"ip_address":"","ucode":"54E78B7BBC6AF0","user_header":"https://static001.geekbang.org/account/avatar/00/12/77/72/8f77ddb0.jpg","comment_is_top":false,"comment_ctime":1547687825,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"23022524305","product_id":100009601,"comment_content":"老师将的逻辑结构严谨、清晰，能够由简入繁，既有实操，又有解决思路，赞。","like_count":5},{"had_liked":false,"id":85350,"user_name":"口水窝","can_delete":false,"product_type":"c1","uid":1004838,"ip_address":"","ucode":"6028B5AA10D8A1","user_header":"https://static001.geekbang.org/account/avatar/00/0f/55/26/154f9578.jpg","comment_is_top":false,"comment_ctime":1555041282,"is_pvip":false,"replies":[{"id":"31241","content":"值得一试，学习成本是很低的","user_name":"作者回复","user_name_real":"dhrbc","uid":"1002226","ctime":1555472166,"ip_address":"","comment_id":85350,"utype":1}],"discussion_count":1,"race_medal":0,"score":"18734910466","product_id":100009601,"comment_content":"以前有用过locust，但不知道什么原理，就知道能压测，今天查了下可以和httprunner完美组合，先记下来，后面实践。","like_count":4,"discussions":[{"author":{"id":1002226,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/4a/f2/6ea13762.jpg","nickname":"茹炳晟","note":"","ucode":"1361AE1931E2DD","race_medal":0,"user_type":2,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":446640,"discussion_content":"值得一试，学习成本是很低的","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1555472166,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":34927,"user_name":"颜瑞","can_delete":false,"product_type":"c1","uid":1170056,"ip_address":"","ucode":"A837AF2DEF9558","user_header":"https://static001.geekbang.org/account/avatar/00/11/da/88/09ccab4a.jpg","comment_is_top":false,"comment_ctime":1540356986,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"18720226170","product_id":100009601,"comment_content":"在框架的选择上，茹老师也提了一个开放性问题，Rest-Assured和HttpRunner哪个更合适。其实我也一直在犹豫，自己封装接口，对各个产品线上测试人员有编码的能力要求，另外框架的开发还是需要一定工作量的，HttpRunner少了这些编码成本。HttpRunner还没开始用，疑惑点在于数据准备和环境清理能否在这个框架里面实现，考虑到一些数据准备需要插表，是不是从扩展性和兼容性上讲，企业还是自己开发一套API测试框架的好？茹老师有什么建议么？","like_count":4},{"had_liked":false,"id":21590,"user_name":"静静张","can_delete":false,"product_type":"c1","uid":1163452,"ip_address":"","ucode":"B6C754D0F4A142","user_header":"https://static001.geekbang.org/account/avatar/00/11/c0/bc/c49e1eaa.jpg","comment_is_top":false,"comment_ctime":1535182298,"is_pvip":false,"replies":[{"id":"7742","content":"不是一回事，基于配置的api测试，是不需要写任何代码的，测试用例本身就是配置文件，api框架会去解析配置文件并发起调用，典型的框架是httprunner","user_name":"作者回复","user_name_real":"dhrbc","uid":"1002226","ctime":1535329114,"ip_address":"","comment_id":21590,"utype":1}],"discussion_count":1,"race_medal":0,"score":"18715051482","product_id":100009601,"comment_content":"老师你好，基于配置文件的api测试，和将数据外化到文件是一回事吗？","like_count":4,"discussions":[{"author":{"id":1002226,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/4a/f2/6ea13762.jpg","nickname":"茹炳晟","note":"","ucode":"1361AE1931E2DD","race_medal":0,"user_type":2,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":422756,"discussion_content":"不是一回事，基于配置的api测试，是不需要写任何代码的，测试用例本身就是配置文件，api框架会去解析配置文件并发起调用，典型的框架是httprunner","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1535329114,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":20729,"user_name":"向日葵盛開の夏天","can_delete":false,"product_type":"c1","uid":1164581,"ip_address":"","ucode":"9EDAEDCF8AF8CD","user_header":"https://static001.geekbang.org/account/avatar/00/11/c5/25/72b513db.jpg","comment_is_top":false,"comment_ctime":1534716724,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"14419618612","product_id":100009601,"comment_content":"使用过robotframework进行API测试，一个API测试都需要填写较长的表单，用起来感觉很复杂，冗余，在公司内部也不好做推广。目前，我还是比较喜欢用fiddler+jmeter，感觉使用起来还是蛮方便的，jmeter还可以集成到Jenkins下。对于老师说的自己封装API测试框架，很可惜，待的公司都项目较多的有很多的接口，自己封装API测试工程量太大，都没有实施的。","like_count":3},{"had_liked":false,"id":54065,"user_name":"zhangliqun","can_delete":false,"product_type":"c1","uid":1281141,"ip_address":"","ucode":"95F920A079713A","user_header":"https://static001.geekbang.org/account/avatar/00/13/8c/75/cf6bf22d.jpg","comment_is_top":false,"comment_ctime":1545790658,"is_pvip":false,"replies":[{"id":"20859","content":"不同的工具间都有差异，但是本质的东西是一样的","user_name":"作者回复","user_name_real":"dhrbc","uid":"1002226","ctime":1546923879,"ip_address":"","comment_id":54065,"utype":1}],"discussion_count":1,"race_medal":0,"score":"10135725250","product_id":100009601,"comment_content":"老师，接口自动化测试我看过robotframeworker接口自动化框架，老师RF框架和您讲的有差异呢？","like_count":2,"discussions":[{"author":{"id":1002226,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/4a/f2/6ea13762.jpg","nickname":"茹炳晟","note":"","ucode":"1361AE1931E2DD","race_medal":0,"user_type":2,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":434344,"discussion_content":"不同的工具间都有差异，但是本质的东西是一样的","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1546923879,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":24120,"user_name":"楚耳","can_delete":false,"product_type":"c1","uid":1068208,"ip_address":"","ucode":"7661633F3297C6","user_header":"https://static001.geekbang.org/account/avatar/00/10/4c/b0/f22017b0.jpg","comment_is_top":false,"comment_ctime":1536808326,"is_pvip":false,"discussion_count":1,"race_medal":0,"score":"10126742918","product_id":100009601,"comment_content":"老师 能具体讲下在框架中如何实现  可以灵活支持多个 API 的顺序调用，方便数据在多个 API 之间传递<br><br>，即上一个 API 调用返回结果中的某个字段值可以作为后续 API 调用的输入参数 这个需求吗 讲下设计思路","like_count":2,"discussions":[{"author":{"id":1174760,"avatar":"https://static001.geekbang.org/account/avatar/00/11/ec/e8/79293a29.jpg","nickname":"莫问天机","note":"","ucode":"9E7E8D87B99D8F","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":391866,"discussion_content":"我也是有这方面的疑问\n","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1630664277,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":208492,"user_name":"Gavin","can_delete":false,"product_type":"c1","uid":1843155,"ip_address":"","ucode":"297C139733674D","user_header":"https://static001.geekbang.org/account/avatar/00/1c/1f/d3/6a108d88.jpg","comment_is_top":false,"comment_ctime":1587369745,"is_pvip":false,"discussion_count":2,"race_medal":0,"score":"5882337041","product_id":100009601,"comment_content":"现在的测试人员对编码能力有一定要求了，不会代码做起来真的有些吃力。<br>举个很简单的例子，懂Java代码在看Jmeter时使用BeanShell可以直接使用脚本，去获取请求中的参数并传递给下个请求使用，自己写不出来只能通过正则表达式或者JSON提取器，把值取到再在下个请求中引用，效率上感觉就差了一截...","like_count":1,"discussions":[{"author":{"id":1951999,"avatar":"https://static001.geekbang.org/account/avatar/00/1d/c8/ff/bd602ee9.jpg","nickname":"Luke","note":"","ucode":"72202F5FB5A896","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":393534,"discussion_content":"确实是这样，但是即使jmeter提供了这样的机制，我还是觉得不够方便","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1631491837,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1055421,"avatar":"https://static001.geekbang.org/account/avatar/00/10/1a/bd/df7e2da2.jpg","nickname":"DefendTheLand","note":"","ucode":"D6DC89E84BE6A1","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":279876,"discussion_content":"同一","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1591441591,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":192411,"user_name":"Geek_bd7eb1","can_delete":false,"product_type":"c1","uid":1250635,"ip_address":"","ucode":"E7B29EFBB41D64","user_header":"https://static001.geekbang.org/account/avatar/00/13/15/4b/dc4fb21c.jpg","comment_is_top":false,"comment_ctime":1584849179,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"5879816475","product_id":100009601,"comment_content":"数据校验也是接口测试的部分","like_count":1},{"had_liked":false,"id":143175,"user_name":"Gz","can_delete":false,"product_type":"c1","uid":1057466,"ip_address":"","ucode":"78897C7FC7611A","user_header":"https://static001.geekbang.org/account/avatar/00/10/22/ba/7b73c9e1.jpg","comment_is_top":false,"comment_ctime":1571642865,"is_pvip":false,"discussion_count":2,"race_medal":0,"score":"5866610161","product_id":100009601,"comment_content":"自己搞了个 Python的api测试框架 基于yml配置的 随着业务改变框架功能 用起来还是挺好的 只是测试效率 不是特别高 由于自己写的 集成在 Jenkins 上也还好 总之 有轮子用轮子 不符合自己再改造就好","like_count":1,"discussions":[{"author":{"id":1672674,"avatar":"https://static001.geekbang.org/account/avatar/00/19/85/e2/540b91fa.jpg","nickname":"凯耐","note":"","ucode":"DF9C2170509BD0","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":318889,"discussion_content":"个人觉得yaml文件配置数据可读性没有json文件好","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1603874901,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1798489,"avatar":"https://static001.geekbang.org/account/avatar/00/1b/71/59/642cd27a.jpg","nickname":"小呆呆","note":"","ucode":"6A04486F1FC932","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":212914,"discussion_content":"为什么要用yml配置 对中文的支持太弱了","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1585032955,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":342454,"user_name":"woJA1wCgAA2rguK0gcn0mXikQxdX_yxQ","can_delete":false,"product_type":"c1","uid":2971668,"ip_address":"","ucode":"68B7C766ECCDE7","user_header":"","comment_is_top":false,"comment_ctime":1650272826,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1650272826","product_id":100009601,"comment_content":"1.返回格式校验可以用jsonschema来做吧。<br>2.基于yml等配置文件等自动化其实也是换汤不换药的东西，工具等原理都是提供一些关键字做编排，然后生成固定的数据格式，然后去解析这样的固定格式的数据，基于配置只是省略了中间关键字编排的步骤。和所谓的excel数据驱动其实还是类似的。感觉目前没啥太划时代的工具出现","like_count":0},{"had_liked":false,"id":329655,"user_name":"黑山老妖","can_delete":false,"product_type":"c1","uid":1115958,"ip_address":"","ucode":"A1659F99C5BE1E","user_header":"https://static001.geekbang.org/account/avatar/00/11/07/36/d677e741.jpg","comment_is_top":false,"comment_ctime":1641459614,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1641459614","product_id":100009601,"comment_content":"httprunner + locust 做自动测试的框架 。这个以后要试试。","like_count":0},{"had_liked":false,"id":324464,"user_name":"小呀么小二郎","can_delete":false,"product_type":"c1","uid":1326905,"ip_address":"","ucode":"149540DCFDF43E","user_header":"https://static001.geekbang.org/account/avatar/00/14/3f/39/b1558fc9.jpg","comment_is_top":false,"comment_ctime":1638445561,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1638445561","product_id":100009601,"comment_content":"逻辑清晰，简单易懂，就是实操对我来说有点困难。慢慢加油吧~","like_count":0},{"had_liked":false,"id":288613,"user_name":"Leefon Zhou","can_delete":false,"product_type":"c1","uid":2538235,"ip_address":"","ucode":"0650E1D9E7F7A2","user_header":"https://static001.geekbang.org/account/avatar/00/26/ba/fb/a52f97ab.jpg","comment_is_top":false,"comment_ctime":1618562134,"is_pvip":false,"discussion_count":1,"race_medal":0,"score":"1618562134","product_id":100009601,"comment_content":"&quot;Response 结果变化时的自动识别&quot;这个不太理解，我们现在是这样的，每个case有个base值，每次执行这个case获得的response会跟这个base值做比较，有差别的话这个case就失败了。如果base没有修正，案例会一直是失败的。按照茹老师的介绍，response每次与上一次得到的response做比较，还是没有理解这样做的好处，麻烦指点下","like_count":0,"discussions":[{"author":{"id":2736309,"avatar":"","nickname":"Sun, Jianhua","note":"","ucode":"F40D711199E58D","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":552895,"discussion_content":"我的理解是当出现不一致的时候，就需要人为介入，要么是bug，修bug；要么是新的才是期待值，存去新的值，并不是无脑的以上一次为准","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1645628929,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":235125,"user_name":"捷后愚生","can_delete":false,"product_type":"c1","uid":1170483,"ip_address":"","ucode":"A1F935D39C8488","user_header":"https://static001.geekbang.org/account/avatar/00/11/dc/33/a68c6b26.jpg","comment_is_top":false,"comment_ctime":1594899938,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1594899938","product_id":100009601,"comment_content":"学习文章后，收获的新概念：<br>API 的后向兼容性<br>“Response 结果变化时的自动识别”技术。<br><br>response结果变化的自动识别，有json schema自动校验。每次运⾏的时候⾃动保存当前的schema，下次运⾏对⽐上次的schema如果发现变更就报错。","like_count":0},{"had_liked":false,"id":189458,"user_name":"丹","can_delete":false,"product_type":"c1","uid":1167671,"ip_address":"","ucode":"FC5BB2D441467B","user_header":"https://static001.geekbang.org/account/avatar/00/11/d1/37/e087a4ee.jpg","comment_is_top":false,"comment_ctime":1584518414,"is_pvip":false,"discussion_count":2,"race_medal":0,"score":"1584518414","product_id":100009601,"comment_content":"Response 结果发生变化时的自动识别   这个具体是怎么实施的能不能讲讲","like_count":0,"discussions":[{"author":{"id":1672674,"avatar":"https://static001.geekbang.org/account/avatar/00/19/85/e2/540b91fa.jpg","nickname":"凯耐","note":"","ucode":"DF9C2170509BD0","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":318888,"discussion_content":"保存第一个版本的数据到MongoDB（其它方式存储也可以），以后迭代的版本reponse直接和MongoDB保存的数据做比较就好了","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1603874849,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":1,"child_discussions":[{"author":{"id":1951999,"avatar":"https://static001.geekbang.org/account/avatar/00/1d/c8/ff/bd602ee9.jpg","nickname":"Luke","note":"","ucode":"72202F5FB5A896","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1672674,"avatar":"https://static001.geekbang.org/account/avatar/00/19/85/e2/540b91fa.jpg","nickname":"凯耐","note":"","ucode":"DF9C2170509BD0","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":393537,"discussion_content":"我自己实现了一个，使用Python，还是比较好用的，相比于jsonschema更便利，可维护性会好一些","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1631491911,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":318888,"ip_address":""},"score":393537,"extra":""}]}]},{"had_liked":false,"id":105358,"user_name":"辰九","can_delete":false,"product_type":"c1","uid":1187319,"ip_address":"","ucode":"37A551604B3991","user_header":"https://static001.geekbang.org/account/avatar/00/12/1d/f7/15257efb.jpg","comment_is_top":false,"comment_ctime":1560989849,"is_pvip":false,"discussion_count":1,"race_medal":0,"score":"1560989849","product_id":100009601,"comment_content":"locust+httprunner，可以试一试","like_count":0,"discussions":[{"author":{"id":1165084,"avatar":"https://static001.geekbang.org/account/avatar/00/11/c7/1c/e59a699b.jpg","nickname":"海朋森","note":"","ucode":"212BADF1F9E962","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":175866,"discussion_content":"依旧鸡肋","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1581999742,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":85092,"user_name":"口水窝","can_delete":false,"product_type":"c1","uid":1004838,"ip_address":"","ucode":"6028B5AA10D8A1","user_header":"https://static001.geekbang.org/account/avatar/00/0f/55/26/154f9578.jpg","comment_is_top":false,"comment_ctime":1554977335,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1554977335","product_id":100009601,"comment_content":"有了理论支持，后续每个阶段的工具都实践起来！","like_count":0},{"had_liked":false,"id":67231,"user_name":"🐶 🐶","can_delete":false,"product_type":"c1","uid":1088791,"ip_address":"","ucode":"DE17745439D4CE","user_header":"https://static001.geekbang.org/account/avatar/00/10/9d/17/650175f3.jpg","comment_is_top":false,"comment_ctime":1550113705,"is_pvip":true,"discussion_count":1,"race_medal":0,"score":"1550113705","product_id":100009601,"comment_content":"使用httprunner做API自动化测试时，数据准备这块需要额外开发吗？ ","like_count":0,"discussions":[{"author":{"id":1672674,"avatar":"https://static001.geekbang.org/account/avatar/00/19/85/e2/540b91fa.jpg","nickname":"凯耐","note":"","ucode":"DF9C2170509BD0","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":318890,"discussion_content":"读取配置文件的数据就OK了，官网有相关的数据驱动案例参考","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1603874959,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":45565,"user_name":"阿森","can_delete":false,"product_type":"c1","uid":1323777,"ip_address":"","ucode":"02EA3FFCA58404","user_header":"https://static001.geekbang.org/account/avatar/00/14/33/01/f7eb19f1.jpg","comment_is_top":false,"comment_ctime":1543676646,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1543676646","product_id":100009601,"comment_content":"有了api自动化集成测试平台，还要代码生成工具有啥用，restassured其实也是在httpclient上封装的，他不仅能发请求，还能断言","like_count":0},{"had_liked":false,"id":35790,"user_name":"农夫山泉","can_delete":false,"product_type":"c1","uid":1271852,"ip_address":"","ucode":"543C742D2679D5","user_header":"","comment_is_top":false,"comment_ctime":1540801752,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1540801752","product_id":100009601,"comment_content":"问下老师，现在用python3写接口自动化，用哪个框架最好","like_count":0},{"had_liked":false,"id":35502,"user_name":"小老鼠","can_delete":false,"product_type":"c1","uid":1257460,"ip_address":"","ucode":"C663A0C863A515","user_header":"https://static001.geekbang.org/account/avatar/00/13/2f/f4/2dede51a.jpg","comment_is_top":false,"comment_ctime":1540629185,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1540629185","product_id":100009601,"comment_content":"在中小型公司有无必要引入了response 变化工具吗","like_count":0},{"had_liked":false,"id":35095,"user_name":"Robert小七","can_delete":false,"product_type":"c1","uid":1165254,"ip_address":"","ucode":"6BBF4674673AF5","user_header":"https://static001.geekbang.org/account/avatar/00/11/c7/c6/35cc7c7c.jpg","comment_is_top":false,"comment_ctime":1540424809,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1540424809","product_id":100009601,"comment_content":"现在项目都是手工测试，如何将手工测试和接口测试相结合？也就是测试同学既要做手工也要做自动化如何开展！","like_count":0},{"had_liked":false,"id":32962,"user_name":"胖虫子","can_delete":false,"product_type":"c1","uid":1100956,"ip_address":"","ucode":"21FC09D0121B4F","user_header":"https://static001.geekbang.org/account/avatar/00/10/cc/9c/ec71155f.jpg","comment_is_top":false,"comment_ctime":1539738013,"is_pvip":false,"discussion_count":1,"race_medal":0,"score":"1539738013","product_id":100009601,"comment_content":"做过个rf的接口测试，但有时想想觉得接口的测试没啥大意义，现在接口正常不正常都能监控","like_count":0,"discussions":[{"author":{"id":1281141,"avatar":"https://static001.geekbang.org/account/avatar/00/13/8c/75/cf6bf22d.jpg","nickname":"zhangliqun","note":"","ucode":"95F920A079713A","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":7695,"discussion_content":"同感","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1567641026,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":23059,"user_name":"yinyin","can_delete":false,"product_type":"c1","uid":1184090,"ip_address":"","ucode":"153BE86B9E8F7E","user_header":"https://static001.geekbang.org/account/avatar/00/12/11/5a/9d808df4.jpg","comment_is_top":false,"comment_ctime":1536126744,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1536126744","product_id":100009601,"comment_content":"能否根据接口文档定义的各个参数的类型，以及接口之间的潜逃关系，加上测试数据，自动生成测试用例和测试脚本呢?现在我们正在考虑这种方法，还不确定是否可行，特别是在结果断言上，或许也要采取老师说的这种方法。","like_count":0},{"had_liked":false,"id":21916,"user_name":"涅槃Ls","can_delete":false,"product_type":"c1","uid":1163943,"ip_address":"","ucode":"39EDBFB303D668","user_header":"https://static001.geekbang.org/account/avatar/00/11/c2/a7/c4de1048.jpg","comment_is_top":false,"comment_ctime":1535414703,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1535414703","product_id":100009601,"comment_content":"打卡23，努力学习API测试","like_count":0},{"had_liked":false,"id":21063,"user_name":"Yaoqi😀","can_delete":false,"product_type":"c1","uid":1183558,"ip_address":"","ucode":"615A352D612C87","user_header":"https://static001.geekbang.org/account/avatar/00/12/0f/46/0a7bd737.jpg","comment_is_top":false,"comment_ctime":1534900445,"is_pvip":false,"replies":[{"id":"7748","content":"loadrunner主要是做性能测试的，当然也可以用来做api测试，但lr的强项和关注点是性能，后面讲性能测试的时候会详细介绍","user_name":"作者回复","user_name_real":"dhrbc","uid":"1002226","ctime":1535329849,"ip_address":"","comment_id":21063,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1534900445","product_id":100009601,"comment_content":"loadrunner怎么没有提及，也可以做api啊","like_count":0,"discussions":[{"author":{"id":1002226,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/4a/f2/6ea13762.jpg","nickname":"茹炳晟","note":"","ucode":"1361AE1931E2DD","race_medal":0,"user_type":2,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":422518,"discussion_content":"loadrunner主要是做性能测试的，当然也可以用来做api测试，但lr的强项和关注点是性能，后面讲性能测试的时候会详细介绍","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1535329849,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":20772,"user_name":"TJJ","can_delete":false,"product_type":"c1","uid":1108172,"ip_address":"","ucode":"F57E860061CEF0","user_header":"https://static001.geekbang.org/account/avatar/00/10/e8/cc/fa46064e.jpg","comment_is_top":false,"comment_ctime":1534741450,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1534741450","product_id":100009601,"comment_content":"有转换postman用例的开源代码吗？","like_count":0},{"had_liked":false,"id":20730,"user_name":"假装乐","can_delete":false,"product_type":"c1","uid":1093437,"ip_address":"","ucode":"97A7D0A6D93865","user_header":"https://static001.geekbang.org/account/avatar/00/10/af/3d/28b61e6b.jpg","comment_is_top":false,"comment_ctime":1534719294,"is_pvip":false,"discussion_count":1,"race_medal":0,"score":"1534719294","product_id":100009601,"comment_content":"测试脚本用java比较痛苦，语法太麻烦了","like_count":0,"discussions":[{"author":{"id":1086275,"avatar":"https://static001.geekbang.org/account/avatar/00/10/93/43/0e84492d.jpg","nickname":"Maxwell","note":"","ucode":"720A00AD472616","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":554687,"discussion_content":"强类型的语言，需要多学习下，是比python复杂了","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1646550233,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]}]}