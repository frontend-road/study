{"id":104456,"title":"16 | 把大象装进冰箱：HTTP传输大文件的方法","content":"<p>上次我们谈到了HTTP报文里的body，知道了HTTP可以传输很多种类的数据，不仅是文本，也能传输图片、音频和视频。</p><p>早期互联网上传输的基本上都是只有几K大小的文本和小图片，现在的情况则大有不同。网页里包含的信息实在是太多了，随随便便一个主页HTML就有可能上百K，高质量的图片都以M论，更不要说那些电影、电视剧了，几G、几十G都有可能。</p><p>相比之下，100M的光纤固网或者4G移动网络在这些大文件的压力下都变成了“小水管”，无论是上传还是下载，都会把网络传输链路挤的“满满当当”。</p><p>所以，如何在有限的带宽下高效快捷地传输这些大文件就成了一个重要的课题。这就好比是已经打开了冰箱门（建立连接），该怎么把大象（文件）塞进去再关上门（完成传输）呢？</p><p>今天我们就一起看看HTTP协议里有哪些手段能解决这个问题。</p><h2>数据压缩</h2><p>还记得上一讲中说到的“数据类型与编码”吗？如果你还有印象的话，肯定能够想到一个最基本的解决方案，那就是“<strong>数据压缩</strong>”，把大象变成小猪佩奇，再放进冰箱。</p><p>通常浏览器在发送请求时都会带着“<strong>Accept-Encoding</strong>”头字段，里面是浏览器支持的压缩格式列表，例如gzip、deflate、br等，这样服务器就可以从中选择一种压缩算法，放进“<strong>Content-Encoding</strong>”响应头里，再把原数据压缩后发给浏览器。</p><!-- [[[read_end]]] --><p>如果压缩率能有50%，也就是说100K的数据能够压缩成50K的大小，那么就相当于在带宽不变的情况下网速提升了一倍，加速的效果是非常明显的。</p><p>不过这个解决方法也有个缺点，gzip等压缩算法通常只对文本文件有较好的压缩率，而图片、音频视频等多媒体数据本身就已经是高度压缩的，再用gzip处理也不会变小（甚至还有可能会增大一点），所以它就失效了。</p><p>不过数据压缩在处理文本的时候效果还是很好的，所以各大网站的服务器都会使用这个手段作为“保底”。例如，在Nginx里就会使用“gzip on”指令，启用对“text/html”的压缩。</p><h2>分块传输</h2><p>在数据压缩之外，还能有什么办法来解决大文件的问题呢？</p><p>压缩是把大文件整体变小，我们可以反过来思考，如果大文件整体不能变小，那就把它“拆开”，分解成多个小块，把这些小块分批发给浏览器，浏览器收到后再组装复原。</p><p>这样浏览器和服务器都不用在内存里保存文件的全部，每次只收发一小部分，网络也不会被大文件长时间占用，内存、带宽等资源也就节省下来了。</p><p>这种“<strong>化整为零</strong>”的思路在HTTP协议里就是“<strong>chunked</strong>”分块传输编码，在响应报文里用头字段“<strong>Transfer-Encoding: chunked</strong>”来表示，意思是报文里的body部分不是一次性发过来的，而是分成了许多的块（chunk）逐个发送。</p><p>这就好比是用魔法把大象变成“乐高积木”，拆散了逐个装进冰箱，到达目的地后再施法拼起来“满血复活”。</p><p>分块传输也可以用于“流式数据”，例如由数据库动态生成的表单页面，这种情况下body数据的长度是未知的，无法在头字段“<strong>Content-Length</strong>”里给出确切的长度，所以也只能用chunked方式分块发送。</p><p>“Transfer-Encoding: chunked”和“Content-Length”这两个字段是<strong>互斥的</strong>，也就是说响应报文里这两个字段不能同时出现，一个响应报文的传输要么是长度已知，要么是长度未知（chunked），这一点你一定要记住。</p><p>下面我们来看一下分块传输的编码规则，其实也很简单，同样采用了明文的方式，很类似响应头。</p><ol>\n<li>每个分块包含两个部分，长度头和数据块；</li>\n<li>长度头是以CRLF（回车换行，即\\r\\n）结尾的一行明文，用16进制数字表示长度；</li>\n<li>数据块紧跟在长度头后，最后也用CRLF结尾，但数据不包含CRLF；</li>\n<li>最后用一个长度为0的块表示结束，即“0\\r\\n\\r\\n”。</li>\n</ol><p>听起来好像有点难懂，看一下图就好理解了：</p><p><img src=\"https://static001.geekbang.org/resource/image/25/10/25e7b09cf8cb4eaebba42b4598192410.png?wh=3000*1681\" alt=\"\"></p><p>实验环境里的URI“/16-1”简单地模拟了分块传输，可以用Chrome访问这个地址看一下效果：</p><p><img src=\"https://static001.geekbang.org/resource/image/e1/db/e183bf93f4759b74c8ee974acbcaf9db.png?wh=3000*1681\" alt=\"\"></p><p>不过浏览器在收到分块传输的数据后会自动按照规则去掉分块编码，重新组装出内容，所以想要看到服务器发出的原始报文形态就得用Telnet手工发送请求（或者用Wireshark抓包）：</p><pre><code>GET /16-1 HTTP/1.1\nHost: www.chrono.com\n</code></pre><p>因为Telnet只是收到响应报文就完事了，不会解析分块数据，所以可以很清楚地看到响应报文里的chunked数据格式：先是一行16进制长度，然后是数据，然后再是16进制长度和数据，如此重复，最后是0长度分块结束。</p><p><img src=\"https://static001.geekbang.org/resource/image/66/02/66a6d229058c7072ab5b28ef518da302.png?wh=3000*1681\" alt=\"\"></p><h2>范围请求</h2><p>有了分块传输编码，服务器就可以轻松地收发大文件了，但对于上G的超大文件，还有一些问题需要考虑。</p><p>比如，你在看当下正热播的某穿越剧，想跳过片头，直接看正片，或者有段剧情很无聊，想拖动进度条快进几分钟，这实际上是想获取一个大文件其中的片段数据，而分块传输并没有这个能力。</p><p>HTTP协议为了满足这样的需求，提出了“<strong>范围请求</strong>”（range requests）的概念，允许客户端在请求头里使用专用字段来表示只获取文件的一部分，相当于是<strong>客户端的“化整为零”</strong>。</p><p>范围请求不是Web服务器必备的功能，可以实现也可以不实现，所以服务器必须在响应头里使用字段“<strong>Accept-Ranges: bytes</strong>”明确告知客户端：“我是支持范围请求的”。</p><p>如果不支持的话该怎么办呢？服务器可以发送“Accept-Ranges: none”，或者干脆不发送“Accept-Ranges”字段，这样客户端就认为服务器没有实现范围请求功能，只能老老实实地收发整块文件了。</p><p>请求头<strong>Range</strong>是HTTP范围请求的专用字段，格式是“<strong>bytes=x-y</strong>”，其中的x和y是以字节为单位的数据范围。</p><p>要注意x、y表示的是“偏移量”，范围必须从0计数，例如前10个字节表示为“0-9”，第二个10字节表示为“10-19”，而“0-10”实际上是前11个字节。</p><p>Range的格式也很灵活，起点x和终点y可以省略，能够很方便地表示正数或者倒数的范围。假设文件是100个字节，那么：</p><ul>\n<li>“0-”表示从文档起点到文档终点，相当于“0-99”，即整个文件；</li>\n<li>“10-”是从第10个字节开始到文档末尾，相当于“10-99”；</li>\n<li>“-1”是文档的最后一个字节，相当于“99-99”；</li>\n<li>“-10”是从文档末尾倒数10个字节，相当于“90-99”。</li>\n</ul><p>服务器收到Range字段后，需要做四件事。</p><p>第一，它必须检查范围是否合法，比如文件只有100个字节，但请求“200-300”，这就是范围越界了。服务器就会返回状态码<strong>416</strong>，意思是“你的范围请求有误，我无法处理，请再检查一下”。</p><p>第二，如果范围正确，服务器就可以根据Range头计算偏移量，读取文件的片段了，返回状态码“<strong>206 Partial Content</strong>”，和200的意思差不多，但表示body只是原数据的一部分。</p><p>第三，服务器要添加一个响应头字段<strong>Content-Range</strong>，告诉片段的实际偏移量和资源的总大小，格式是“<strong>bytes x-y/length</strong>”，与Range头区别在没有“=”，范围后多了总长度。例如，对于“0-10”的范围请求，值就是“bytes 0-10/100”。</p><p>最后剩下的就是发送数据了，直接把片段用TCP发给客户端，一个范围请求就算是处理完了。</p><p>你可以用实验环境的URI“/16-2”来测试范围请求，它处理的对象是“/mime/a.txt”。不过我们不能用Chrome浏览器，因为它没有编辑HTTP请求头的功能（这点上不如Firefox方便），所以还是要用Telnet。</p><p>例如下面的这个请求使用Range字段获取了文件的前32个字节：</p><pre><code>GET /16-2 HTTP/1.1\nHost: www.chrono.com\nRange: bytes=0-31\n</code></pre><p>返回的数据是（去掉了几个无关字段）：</p><pre><code>HTTP/1.1 206 Partial Content\nContent-Length: 32\nAccept-Ranges: bytes\nContent-Range: bytes 0-31/96\n\n// this is a plain text json doc\n</code></pre><p>有了范围请求之后，HTTP处理大文件就更加轻松了，看视频时可以根据时间点计算出文件的Range，不用下载整个文件，直接精确获取片段所在的数据内容。</p><p>不仅看视频的拖拽进度需要范围请求，常用的下载工具里的多段下载、断点续传也是基于它实现的，要点是：</p><ul>\n<li>先发个HEAD，看服务器是否支持范围请求，同时获取文件的大小；</li>\n<li>开N个线程，每个线程使用Range字段划分出各自负责下载的片段，发请求传输数据；</li>\n<li>下载意外中断也不怕，不必重头再来一遍，只要根据上次的下载记录，用Range请求剩下的那一部分就可以了。</li>\n</ul><h2>多段数据</h2><p>刚才说的范围请求一次只获取一个片段，其实它还支持在Range头里使用多个“x-y”，一次性获取多个片段数据。</p><p>这种情况需要使用一种特殊的MIME类型：“<strong>multipart/byteranges</strong>”，表示报文的body是由多段字节序列组成的，并且还要用一个参数“<strong>boundary=xxx</strong>”给出段之间的分隔标记。</p><p>多段数据的格式与分块传输也比较类似，但它需要用分隔标记boundary来区分不同的片段，可以通过图来对比一下。</p><p><img src=\"https://static001.geekbang.org/resource/image/ff/37/fffa3a65e367c496428f3c0c4dac8a37.png?wh=3000*1681\" alt=\"\"></p><p>每一个分段必须以“- -boundary”开始（前面加两个“-”），之后要用“Content-Type”和“Content-Range”标记这段数据的类型和所在范围，然后就像普通的响应头一样以回车换行结束，再加上分段数据，最后用一个“- -boundary- -”（前后各有两个“-”）表示所有的分段结束。</p><p>例如，我们在实验环境里用Telnet发出有两个范围的请求：</p><pre><code>GET /16-2 HTTP/1.1\nHost: www.chrono.com\nRange: bytes=0-9, 20-29\n</code></pre><p>得到的就会是下面这样：</p><pre><code>HTTP/1.1 206 Partial Content\nContent-Type: multipart/byteranges; boundary=00000000001\nContent-Length: 189\nConnection: keep-alive\nAccept-Ranges: bytes\n\n\n--00000000001\nContent-Type: text/plain\nContent-Range: bytes 0-9/96\n\n// this is\n--00000000001\nContent-Type: text/plain\nContent-Range: bytes 20-29/96\n\next json d\n--00000000001--\n</code></pre><p>报文里的“- -00000000001”就是多段的分隔符，使用它客户端就可以很容易地区分出多段Range 数据。</p><h2>小结</h2><p>今天我们学习了HTTP传输大文件相关的知识，在这里做一下简单小结：</p><ol>\n<li><span class=\"orange\">压缩HTML等文本文件是传输大文件最基本的方法；</span></li>\n<li><span class=\"orange\">分块传输可以流式收发数据，节约内存和带宽，使用响应头字段“Transfer-Encoding: chunked”来表示，分块的格式是16进制长度头+数据块；</span></li>\n<li><span class=\"orange\">范围请求可以只获取部分数据，即“分块请求”，实现视频拖拽或者断点续传，使用请求头字段“Range”和响应头字段“Content-Range”，响应状态码必须是206；</span></li>\n<li><span class=\"orange\">也可以一次请求多个范围，这时候响应报文的数据类型是“multipart/byteranges”，body里的多个部分会用boundary字符串分隔。</span></li>\n</ol><p>要注意这四种方法不是互斥的，而是可以混合起来使用，例如压缩后再分块传输，或者分段后再分块，实验环境的URI“/16-3”就模拟了后一种的情形，你可以自己用Telnet试一下。</p><h2>课下作业</h2><ol>\n<li>分块传输数据的时候，如果数据里含有回车换行（\\r\\n）是否会影响分块的处理呢？</li>\n<li>如果对一个被gzip的文件执行范围请求，比如“Range: bytes=10-19”，那么这个范围是应用于原文件还是压缩后的文件呢？</li>\n</ol><p>欢迎你把自己的学习体会写在留言区，与我和其他同学一起讨论。如果你觉得有所收获，也欢迎把文章分享给你的朋友。</p><p><img src=\"https://static001.geekbang.org/resource/image/ab/71/ab951899844cef3d1e029ba094c2eb71.png?wh=1769*2881\" alt=\"unpreview\"></p><p></p>","comments":[{"had_liked":false,"id":109790,"user_name":"Aaaaaaaaaaayou","can_delete":false,"product_type":"c1","uid":1073601,"ip_address":"","ucode":"67BA315B87587D","user_header":"https://static001.geekbang.org/account/avatar/00/10/61/c1/93031a2a.jpg","comment_is_top":false,"comment_ctime":1562114878,"is_pvip":false,"replies":[{"id":"39770","content":"在http层是看不到tcp的，它不知道下层协议是否会分块，下层是否分块对它来说没有意义，不关心。<br><br>在http里一个报文必须是完整交付，在处理大文件的时候就很不方便，所以就要分块，在http层面方便处理。<br><br>chunked主要是在http的层次来解决问题。","user_name":"作者回复","comment_id":109790,"uid":"1181974","ip_address":"","utype":1,"ctime":1562116353,"user_name_real":"chrono"}],"discussion_count":13,"race_medal":0,"score":"336569563966","product_id":100029001,"comment_content":"老师，有个问题：http交给tcp进行传输的时候本来就会分块，那http分块的意义是什么呢？","like_count":78,"discussions":[{"author":{"id":2040734,"avatar":"https://static001.geekbang.org/account/avatar/00/1f/23/9e/60bfb7e4.jpg","nickname":"winter","note":"","ucode":"C82F506837FC6A","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":330323,"discussion_content":"tcp对于http是不透明的，换句话说，tcp分块也好不分块也好，对于http来说就是：一个大文件等了很久才从tcp那里完整的拿到，当然不如提前在http分成小块，来一点就用一点好。而且tcp分块是为了保证可靠传输，http把大文件给它，它稳定把完整文件交付给对面http，就算分了块也是在tcp那等着全部块到来，和上层的http没有关系，输入越大，时间越久。solid中的单一职责原则带入多思考思考。","likes_number":13,"is_delete":false,"is_hidden":false,"ctime":1606569058,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":2,"child_discussions":[{"author":{"id":2028811,"avatar":"https://static001.geekbang.org/account/avatar/00/1e/f5/0b/73628618.jpg","nickname":"兔嘟嘟","note":"","ucode":"5A9042B4C7670C","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":2040734,"avatar":"https://static001.geekbang.org/account/avatar/00/1f/23/9e/60bfb7e4.jpg","nickname":"winter","note":"","ucode":"C82F506837FC6A","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":384950,"discussion_content":"大部分都同意，提前处理这一点，是否对比tcp分块有差别有待商榷，因为我试了一下传输一个大文件，在http层面的行为和chunked是一样的","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1626831556,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":330323,"ip_address":""},"score":384950,"extra":""},{"author":{"id":2040734,"avatar":"https://static001.geekbang.org/account/avatar/00/1f/23/9e/60bfb7e4.jpg","nickname":"winter","note":"","ucode":"C82F506837FC6A","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":2028811,"avatar":"https://static001.geekbang.org/account/avatar/00/1e/f5/0b/73628618.jpg","nickname":"兔嘟嘟","note":"","ucode":"5A9042B4C7670C","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":387851,"discussion_content":"我说的提前处理不是应用提前使用，而是http提前对先到的一部分进行解码等操作，不用等全部到","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1628473336,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":384950,"ip_address":""},"score":387851,"extra":""}]},{"author":{"id":1072350,"avatar":"https://static001.geekbang.org/account/avatar/00/10/5c/de/16695891.jpg","nickname":"小太阳","note":"","ucode":"84FF032FE78B11","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":57247,"discussion_content":"感觉还是不对啊。用wireshark抓了包，理解chunked传输的过程（评论不能贴图，所以贴了文本）：\n1. HTTP\t270\tGET /16-1 HTTP/1.1 \n—— 第一个数据包，浏览器发起HTTP请求\n2. TCP\t44\t80 → 61783 [ACK] Seq=1 Ack=228 Win=10232 Len=0\n—— 服务器回复确认收到HTTP请求\n3. TCP\t226\t80 → 61783 [PSH, ACK] Seq=1 Ack=228 Win=10232 Len=182 [TCP segment of a reassembled PDU]\n—— 服务器发送第一段，内容是Header + body的第一个chunk：chunked data 1\n4.  TCP\t44\t61783 → 80 [ACK] Seq=228 Ack=183 Win=10233 Len=0\n—— 这段不重要，浏览器回复ACK\n5.  TCP\t64\t80 → 61783 [PSH, ACK] Seq=183 Ack=228 Win=10232 Len=20 [TCP segment of a reassembled PDU]\n—— 服务器发送第二段，内容没有Header，只有body的第二段chunk：chunked data 2\n6. TCP\t44\t61783 → 80 [ACK] Seq=228 Ack=203 Win=10233 Len=0\n—— 这段不重要，浏览器回复ACK\n7. TCP\t64\t80 → 61783 [PSH, ACK] Seq=203 Ack=228 Win=10232 Len=20 [TCP segment of a reassembled PDU]\n—— 服务器发送第三段，内容没有Header，只有body的第三段chunk：chunked data 3\n8. TCP\t44\t61783 → 80 [ACK] Seq=228 Ack=223 Win=10233 Len=0\n—— 这段不重要，浏览器回复ACK\n9. HTTP\t49\tHTTP/1.1 200 OK  (text/plain)\n—— 接着才看到HTTP协议的报文，这是一个完整的报文，包括Header和完整的三个chunk的body\n10. TCP\t44\t61783 → 80 [ACK] Seq=228 Ack=228 Win=10233 Len=0\n—— 这段不重要，浏览器回复ACK\n\n从上面的过程来看，Transfer-Encoding: chunked好像是HTTP告诉TCP层要分段传输一样。在TCP层服务器分段传输、客户端分段接收；在HTTP层，始终还是一个请求一个响应的工作模式，客户端在HTTP层看到的还是只有一次传输。\n\n又试了不用Transfer-Encoding: chunked来传输一次大文件（图片），看到的报文还是这种样子：在TCP层服务器分段传输、客户端分段接收；在HTTP层，始终还是一个请求一个响应的工作模式，客户端在HTTP层看到的还是只有一次传输。\n\n那这个同学的问题还是没有得到解答：http交给tcp进行传输的时候本来就会分块，那http分块的意义是什么呢？","likes_number":4,"is_delete":false,"is_hidden":false,"ctime":1574585459,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":5,"child_discussions":[{"author":{"id":1073601,"avatar":"https://static001.geekbang.org/account/avatar/00/10/61/c1/93031a2a.jpg","nickname":"Aaaaaaaaaaayou","note":"","ucode":"67BA315B87587D","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1072350,"avatar":"https://static001.geekbang.org/account/avatar/00/10/5c/de/16695891.jpg","nickname":"小太阳","note":"","ucode":"84FF032FE78B11","race_medal":0,"user_type":1,"is_pvip":true},"discussion":{"id":292910,"discussion_content":"这个头在http协议的意义可能是告诉客户端接下来还有内容，不要超时处理","likes_number":2,"is_delete":false,"is_hidden":false,"ctime":1595382553,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":57247,"ip_address":""},"score":292910,"extra":""},{"author":{"id":1799719,"avatar":"https://static001.geekbang.org/account/avatar/00/1b/76/27/aa2743e7.jpg","nickname":"小南风","note":"","ucode":"249B070497C815","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1073601,"avatar":"https://static001.geekbang.org/account/avatar/00/10/61/c1/93031a2a.jpg","nickname":"Aaaaaaaaaaayou","note":"","ucode":"67BA315B87587D","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":301358,"discussion_content":"是的，我也是这样认为的","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1598500173,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":292910,"ip_address":""},"score":301358,"extra":""},{"author":{"id":1188710,"avatar":"https://static001.geekbang.org/account/avatar/00/12/23/66/413c0bb5.jpg","nickname":"LDxy","note":"","ucode":"956432CE7B7761","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1073601,"avatar":"https://static001.geekbang.org/account/avatar/00/10/61/c1/93031a2a.jpg","nickname":"Aaaaaaaaaaayou","note":"","ucode":"67BA315B87587D","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":321547,"discussion_content":"这对传输效率来说意义不大吧","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1604589292,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":292910,"ip_address":""},"score":321547,"extra":""}]},{"author":{"id":1151837,"avatar":"https://static001.geekbang.org/account/avatar/00/11/93/5d/91f1d849.jpg","nickname":"darren","note":"","ucode":"4726076845920B","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":365301,"discussion_content":"分块的意义我认为有两个：\n1.当服务器需要长时间处理才能返回数据的时候，提示浏览器不要超时放弃。\n2.当浏览器需要的数据在服务端是一点一点制造出来的，就可以每制造出来一点数据就发送给客户端，持续制造发送，而不必等数据全部准备好后再一次性发送，有点像客户点了一大桌子菜，厨师每上一个菜客人就吃一个菜，而不必等菜上齐了再吃。","likes_number":3,"is_delete":false,"is_hidden":false,"ctime":1617766161,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1181974,"avatar":"https://static001.geekbang.org/account/avatar/00/12/09/16/1161017c.jpg","nickname":"罗剑锋","note":"","ucode":"95678C988F24AB","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":456572,"discussion_content":"在http层是看不到tcp的，它不知道下层协议是否会分块，下层是否分块对它来说没有意义，不关心。\n\n在http里一个报文必须是完整交付，在处理大文件的时候就很不方便，所以就要分块，在http层面方便处理。\n\nchunked主要是在http的层次来解决问题。","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1562116353,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1308098,"avatar":"https://static001.geekbang.org/account/avatar/00/13/f5/c2/4e551270.jpg","nickname":"姚凯伦","note":"","ucode":"B0FC353D06E041","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":361929,"discussion_content":"我理解的是，top 分块没办法做到分块下载和断点续传","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1616807216,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":1,"child_discussions":[{"author":{"id":2028811,"avatar":"https://static001.geekbang.org/account/avatar/00/1e/f5/0b/73628618.jpg","nickname":"兔嘟嘟","note":"","ucode":"5A9042B4C7670C","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1308098,"avatar":"https://static001.geekbang.org/account/avatar/00/13/f5/c2/4e551270.jpg","nickname":"姚凯伦","note":"","ucode":"B0FC353D06E041","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":384959,"discussion_content":"端点续传是范围请求的功劳","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1626833029,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":361929,"ip_address":""},"score":384959,"extra":""}]}]},{"had_liked":false,"id":109881,"user_name":"chengzise","can_delete":false,"product_type":"c1","uid":1006070,"ip_address":"","ucode":"1C27D216359894","user_header":"https://static001.geekbang.org/account/avatar/00/0f/59/f6/ed66d1c1.jpg","comment_is_top":false,"comment_ctime":1562124413,"is_pvip":false,"replies":[{"id":"39792","content":"1正确。<br><br>2需要分情况，看原文件是什么形式。如果原来的文件是gzip的，那就正确。如果原文件是文本，而是在传输过程中被压缩，那么就应用于压缩前的数据。<br><br>总之，range是针对原文件的。","user_name":"作者回复","comment_id":109881,"uid":"1181974","ip_address":"","utype":1,"ctime":1562127247,"user_name_real":"chrono"}],"discussion_count":2,"race_medal":0,"score":"276440031357","product_id":100029001,"comment_content":"1. 分块传输中数据里含有回车换行（\\r\\n）不影响分块处理，因为分块前有数据长度说明<br>2. 范围是应用于压缩后的文件","like_count":64,"discussions":[{"author":{"id":1181974,"avatar":"https://static001.geekbang.org/account/avatar/00/12/09/16/1161017c.jpg","nickname":"罗剑锋","note":"","ucode":"95678C988F24AB","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":456622,"discussion_content":"1正确。\n\n2需要分情况，看原文件是什么形式。如果原来的文件是gzip的，那就正确。如果原文件是文本，而是在传输过程中被压缩，那么就应用于压缩前的数据。\n\n总之，range是针对原文件的。","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1562127247,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1153707,"avatar":"https://static001.geekbang.org/account/avatar/00/11/9a/ab/fd201314.jpg","nickname":"小耿","note":"","ucode":"1C8B66C738D33B","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":566823,"discussion_content":"对于问题1，如果回车换行前恰好有一个十六进制数字，应该会影响吧？","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1650769593,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":110091,"user_name":"赵健","can_delete":false,"product_type":"c1","uid":1260246,"ip_address":"","ucode":"553E417EE92EFB","user_header":"https://static001.geekbang.org/account/avatar/00/13/3a/d6/485590bd.jpg","comment_is_top":false,"comment_ctime":1562169679,"is_pvip":false,"replies":[{"id":"39916","content":"举个例子，从GitHub上下载源码包，GitHub要实时压缩实时发送，而不是一下子压缩好再发送，这样body的长度一开始就是未知的。<br><br>所以就要用分块编码，压缩一部分，就发一部分，这部分的长度是已知的，但总长度只有压缩完才能知道。<br><br>chunked编码用在“流式”收发数据的时候，通常数据是即时生成的，也就是动态数据。","user_name":"作者回复","comment_id":110091,"uid":"1181974","ip_address":"","utype":1,"ctime":1562203154,"user_name_real":"chrono"}],"discussion_count":4,"race_medal":0,"score":"233490403663","product_id":100029001,"comment_content":"“Transfer-Encoding: chunked”和“Content-Length”这两个字段是互斥的，也就是说响应报文里这两个字段不能同时出现，一个响应报文的传输要么是长度已知，要么是长度未知（chunked），这一点你一定要记住。老师请问下，为啥分块意味着长度未知，后面不是提到块里面有个长度头嘛？而且单个块应该是一次http传输的内容，既然块里有长度头，那这次传输的内容长度也就能算出来，这次http的Content-Length 也就知道啊！是我理解错了吗","like_count":54,"discussions":[{"author":{"id":1181974,"avatar":"https://static001.geekbang.org/account/avatar/00/12/09/16/1161017c.jpg","nickname":"罗剑锋","note":"","ucode":"95678C988F24AB","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":456719,"discussion_content":"举个例子，从GitHub上下载源码包，GitHub要实时压缩实时发送，而不是一下子压缩好再发送，这样body的长度一开始就是未知的。\n\n所以就要用分块编码，压缩一部分，就发一部分，这部分的长度是已知的，但总长度只有压缩完才能知道。\n\nchunked编码用在“流式”收发数据的时候，通常数据是即时生成的，也就是动态数据。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1562203154,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":1,"child_discussions":[{"author":{"id":1073947,"avatar":"https://static001.geekbang.org/account/avatar/00/10/63/1b/83ac7733.jpg","nickname":"忧天小鸡","note":"","ucode":"A1412BDC108FD6","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1181974,"avatar":"https://static001.geekbang.org/account/avatar/00/12/09/16/1161017c.jpg","nickname":"罗剑锋","note":"","ucode":"95678C988F24AB","race_medal":0,"user_type":2,"is_pvip":false},"discussion":{"id":540582,"discussion_content":"gayhub居然是流传输啊，我还以为zip早就压缩好了，高端，学到了","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1640088600,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":456719,"ip_address":""},"score":540582,"extra":""}]},{"author":{"id":1673843,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/DYAIOgq83erXRaa98A3zjLDkOibUJV1254aQ4EYFTbSLJuEvD0nXicMNA8pLoxOfHf5kPTbGLXNicg8CPFH3Tn0mA/132","nickname":"Geek_115bc8","note":"","ucode":"71FBC9F02AFE1B","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":569040,"discussion_content":"老哥，那分块传输，他是只发送一次http请求吗。还是说每一块发送一次。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1651298139,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":1,"child_discussions":[{"author":{"id":1843828,"avatar":"","nickname":"Geek凹","note":"","ucode":"E9EF800812EAA1","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":1673843,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/DYAIOgq83erXRaa98A3zjLDkOibUJV1254aQ4EYFTbSLJuEvD0nXicMNA8pLoxOfHf5kPTbGLXNicg8CPFH3Tn0mA/132","nickname":"Geek_115bc8","note":"","ucode":"71FBC9F02AFE1B","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":575682,"discussion_content":"应该是一次http请求，多次响应，块通过TCP从服务器逐个返回客户端，最后发一个http respose ","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1655023828,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":569040,"ip_address":""},"score":575682,"extra":""}]}]},{"had_liked":false,"id":118660,"user_name":"秋水共长天一色🌄","can_delete":false,"product_type":"c1","uid":1558942,"ip_address":"","ucode":"60ED887C419C3D","user_header":"https://static001.geekbang.org/account/avatar/00/17/c9/9e/ce7c8522.jpg","comment_is_top":false,"comment_ctime":1564408196,"is_pvip":false,"replies":[{"id":"43522","content":"<br>1.网络视频不一定用的就是http协议，也可能是其他的专用协议，所以不能简单地判断就是分块传输。如果是http协议，对于大文件通常都是range请求，也不一定用chunk分块。<br><br>2.是的，这是由http的请求-应答工作模式决定的。不管是不是chunk，只要响应没有结束，这个来回就不会完成。<br><br>3.也可能用的是其他协议。<br><br>4.应该是range的分段，不是chunk，chunk只是在传输过程中分块，最后到客户端会是一个完整的文件。<br><br>5.视频文件的分段计算比较复杂，课程里面只是作为简单的示例，实际情况不一定就是这么简单。<br><br>6.分段的range和分块的chunk是两个完全无关的概念，不要弄混了。chunk是传输时分成小块逐个发送，range是取大文件中间的一部分。<br><br>7.不客气，后面的https、http&#47;2也继续努力吧。","user_name":"作者回复","comment_id":118660,"uid":"1181974","ip_address":"","utype":1,"ctime":1564448812,"user_name_real":"chrono"}],"discussion_count":2,"race_medal":0,"score":"199132903812","product_id":100029001,"comment_content":"老师，我有些问题需要问问您。<br>1.比如我在视频网上看电影，我们经常能看到进度条里面有一条灰色的缓存进度，我是否能理解成这个进度就是分块传输的一个进度显示吗？<br>2.刚刚我有看到评论说过一个问题就是分块传输的时候是由一个请求和一个响应完成的，如果我们在抓一个需要10分钟才能完成分块传输的请求时，我是不是就会看到这个请求在这10分钟内都是一个正在响应的状态吗？<br>3.为什么我们在对一些视频网站看视频抓包的时候却无法捕抓到这个请求呢？<br>4.如果我们在看完视频后在浏览器缓存里发现一些片段式的视频文件，能否就说明这个是用分块传输呢？<br>5.如果我们在看视频拖动进度条到10分30秒，到最后视频会从10分20秒开始播放，能否说明10分30秒的这个分块的头是在10分20秒呢？<br>6.请问多段数据能理解成一次性获取分块传输里多个连续的分块的数据的意思吗？<br>还有就是非常感谢老师把这些知识点讲的那么细，我近期多个面试里都有被问到相关的知识，多亏老师的讲解我才能顺利应付，谢谢老师！！！","like_count":46,"discussions":[{"author":{"id":1181974,"avatar":"https://static001.geekbang.org/account/avatar/00/12/09/16/1161017c.jpg","nickname":"罗剑锋","note":"","ucode":"95678C988F24AB","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":460512,"discussion_content":"\n1.网络视频不一定用的就是http协议，也可能是其他的专用协议，所以不能简单地判断就是分块传输。如果是http协议，对于大文件通常都是range请求，也不一定用chunk分块。\n\n2.是的，这是由http的请求-应答工作模式决定的。不管是不是chunk，只要响应没有结束，这个来回就不会完成。\n\n3.也可能用的是其他协议。\n\n4.应该是range的分段，不是chunk，chunk只是在传输过程中分块，最后到客户端会是一个完整的文件。\n\n5.视频文件的分段计算比较复杂，课程里面只是作为简单的示例，实际情况不一定就是这么简单。\n\n6.分段的range和分块的chunk是两个完全无关的概念，不要弄混了。chunk是传输时分成小块逐个发送，range是取大文件中间的一部分。\n\n7.不客气，后面的https、http/2也继续努力吧。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1564448812,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":2406841,"avatar":"https://static001.geekbang.org/account/avatar/00/24/b9/b9/9e4d7aa4.jpg","nickname":"乘风破浪","note":"","ucode":"937AF15F3FEBDC","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":348766,"discussion_content":"bilibili的视频用到了range, 过滤用xhr","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1612704816,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":115528,"user_name":"小桶","can_delete":false,"product_type":"c1","uid":1184185,"ip_address":"","ucode":"7967FF96CDE753","user_header":"https://static001.geekbang.org/account/avatar/00/12/11/b9/abb7bfe3.jpg","comment_is_top":false,"comment_ctime":1563612844,"is_pvip":false,"replies":[{"id":"42331","content":"http传输永远是一个请求一个响应的工作模式，只是响应是chunked分块，body数据不是一次性发过来的，而是分批分块发送，但仍然是在一个报文里。<br><br>客户端发送请求后等待响应，服务器组织数据，分块发送，最后一个分块是结束标志。客户端依次接收分块，收到结束标志后就把数据拼成完整的报文。","user_name":"作者回复","comment_id":115528,"uid":"1181974","ip_address":"","utype":1,"ctime":1563758123,"user_name_real":"chrono"}],"discussion_count":11,"race_medal":0,"score":"160477402796","product_id":100029001,"comment_content":"分块传输，客户端只需要发一次请求，还是发多次请求呢？使用分块传输时，客户端与服务器是怎样工作的呢","like_count":37,"discussions":[{"author":{"id":1181974,"avatar":"https://static001.geekbang.org/account/avatar/00/12/09/16/1161017c.jpg","nickname":"罗剑锋","note":"","ucode":"95678C988F24AB","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":459145,"discussion_content":"http传输永远是一个请求一个响应的工作模式，只是响应是chunked分块，body数据不是一次性发过来的，而是分批分块发送，但仍然是在一个报文里。\n\n客户端发送请求后等待响应，服务器组织数据，分块发送，最后一个分块是结束标志。客户端依次接收分块，收到结束标志后就把数据拼成完整的报文。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1563758123,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":1,"child_discussions":[{"author":{"id":1052859,"avatar":"https://static001.geekbang.org/account/avatar/00/10/10/bb/f1061601.jpg","nickname":"Demon.Lee","note":"","ucode":"7F0E5493A8E345","race_medal":1,"user_type":1,"is_pvip":false},"reply_author":{"id":1181974,"avatar":"https://static001.geekbang.org/account/avatar/00/12/09/16/1161017c.jpg","nickname":"罗剑锋","note":"","ucode":"95678C988F24AB","race_medal":0,"user_type":2,"is_pvip":false},"discussion":{"id":592130,"discussion_content":"我理解在一个 tcp 连接中分多次发送 body 数据，接收端最后根据报文的结束标志重新再拼装起来。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1667137757,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":459145,"ip_address":"安徽"},"score":592130,"extra":""}]},{"author":{"id":1779471,"avatar":"","nickname":"辛有慧","note":"","ucode":"ACC5AD054EB5E5","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":250126,"discussion_content":"请问老师，客户端上传大文件时也会自动chunk吗？","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1587993412,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":2346917,"avatar":"https://static001.geekbang.org/account/avatar/00/23/cf/a5/5224b297.jpg","nickname":"cafe babe","note":"","ucode":"6205DF67AD86F8","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":582447,"discussion_content":"感觉说得不清楚","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1659433540,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":"重庆"},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":2608728,"avatar":"https://static001.geekbang.org/account/avatar/00/27/ce/58/71ed845f.jpg","nickname":"Dexter","note":"","ucode":"909CABC4AC4AC9","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":558388,"discussion_content":"仍然在一个包里面？所有chunk?  也就说都会在一个http响应包里面？","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1648272766,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1061748,"avatar":"https://static001.geekbang.org/account/avatar/00/10/33/74/d9d143fa.jpg","nickname":"silentyears","note":"","ucode":"6E137BFEB874CA","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":353285,"discussion_content":"请问这里的“而是分批分块发送，但仍然是在一个报文里”是什么意思？\n难道后面的分块在传输时不需要http报文头吗？\nhttp协议每个报文收发不都得要报文头吗？\n同学","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1615115248,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":2,"child_discussions":[{"author":{"id":1215892,"avatar":"https://static001.geekbang.org/account/avatar/00/12/8d/94/150dfe78.jpg","nickname":"GGL","note":"","ucode":"AED10B8248D1E7","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1061748,"avatar":"https://static001.geekbang.org/account/avatar/00/10/33/74/d9d143fa.jpg","nickname":"silentyears","note":"","ucode":"6E137BFEB874CA","race_medal":0,"user_type":1,"is_pvip":true},"discussion":{"id":374121,"discussion_content":"HTTP 请求并不是说在客户端收到响应之后就结束了的，有时候还需要等待服务端将数据不断的传输过来。分块传输是一次 HTTP 请求过程，不是多次 HTTP 请求，所以不存在说每个分块都需要报文头。举个例子，请求服务器上面的一张图片，客户端发起请求，服务端开始响应请求。响应请求的时候 body 没有数据。过了一会，body 的数据开始不断增多，直到图片发送完毕，这时候一个完整的 HTTP 请求就结束了。也就是说收到响应之后，并不代表着请求就结束了，服务端还在向客户端传输数据，并且客户端也知道（Transfer-Encoding: chunked）。","likes_number":3,"is_delete":false,"is_hidden":false,"ctime":1621007003,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":353285,"ip_address":""},"score":374121,"extra":""},{"author":{"id":2346917,"avatar":"https://static001.geekbang.org/account/avatar/00/23/cf/a5/5224b297.jpg","nickname":"cafe babe","note":"","ucode":"6205DF67AD86F8","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":1215892,"avatar":"https://static001.geekbang.org/account/avatar/00/12/8d/94/150dfe78.jpg","nickname":"GGL","note":"","ucode":"AED10B8248D1E7","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":586897,"discussion_content":"仍然在一个报文里是什么意思","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1662599398,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":374121,"ip_address":"重庆"},"score":586897,"extra":""}]},{"author":{"id":1200020,"avatar":"https://static001.geekbang.org/account/avatar/00/12/4f/94/05044c31.jpg","nickname":"踢车牛","note":"","ucode":"D6D793EF5314A0","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":73807,"discussion_content":"老师，那么这些分块是如何拼接的呢，我看到在每个分块中也没有标识为标志是第几个 chunk ?","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1575597868,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":2,"child_discussions":[{"author":{"id":2754329,"avatar":"https://thirdwx.qlogo.cn/mmopen/vi_32/2CJkUHdXG5jsFicQq5gsPibaXoJetib5cCqVKF87oJLeu3KWDTGQXVhs6wVfOETb0iarvrtGdlDeByvUSGgIVYgdsA/132","nickname":"Geek_1d4afc","note":"","ucode":"DD39F3073C4928","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1200020,"avatar":"https://static001.geekbang.org/account/avatar/00/12/4f/94/05044c31.jpg","nickname":"踢车牛","note":"","ucode":"D6D793EF5314A0","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":394204,"discussion_content":"通过Content-Range来标识chunk","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1631783555,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":73807,"ip_address":""},"score":394204,"extra":""},{"author":{"id":2697683,"avatar":"https://static001.geekbang.org/account/avatar/00/29/29/d3/b193a463.jpg","nickname":"明明如月","note":"","ucode":"937488EEAA522E","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1200020,"avatar":"https://static001.geekbang.org/account/avatar/00/12/4f/94/05044c31.jpg","nickname":"踢车牛","note":"","ucode":"D6D793EF5314A0","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":413529,"discussion_content":"tcp顺序收发\n","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1636508953,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":73807,"ip_address":""},"score":413529,"extra":""}]}]},{"had_liked":false,"id":110154,"user_name":"一步","can_delete":false,"product_type":"c1","uid":1005391,"ip_address":"","ucode":"73CEA468CE70C3","user_header":"https://static001.geekbang.org/account/avatar/00/0f/57/4f/6fb51ff1.jpg","comment_is_top":false,"comment_ctime":1562202502,"is_pvip":true,"replies":[{"id":"39924","content":"说的很好。","user_name":"作者回复","comment_id":110154,"uid":"1181974","ip_address":"","utype":1,"ctime":1562203628,"user_name_real":"chrono"}],"discussion_count":1,"race_medal":1,"score":"78871613830","product_id":100029001,"comment_content":"对于问题2,range是针对原文的还是压缩后的，可以想象一下看视频的时候，我们拖拽进度条请求的range范围是针对原视频长度的，如果针对压缩后的，那么我们实际拖拽的范围和响应的数据范围就不一致了","like_count":18,"discussions":[{"author":{"id":1181974,"avatar":"https://static001.geekbang.org/account/avatar/00/12/09/16/1161017c.jpg","nickname":"罗剑锋","note":"","ucode":"95678C988F24AB","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":456748,"discussion_content":"说的很好。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1562203628,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":109816,"user_name":"-W.LI-","can_delete":false,"product_type":"c1","uid":1210699,"ip_address":"","ucode":"3556786538664F","user_header":"https://static001.geekbang.org/account/avatar/00/12/79/4b/740f91ca.jpg","comment_is_top":false,"comment_ctime":1562116791,"is_pvip":false,"replies":[{"id":"39795","content":"1，是的，通过多线程并发下载，提高下载速度。<br><br>2，范围可以不连续，例子里就是这样。<br><br>3，客户端上传的时候也可以用chunked、gzip，但不能用range。<br><br>注意这些字段的类型，只要是实体字段，那就在请求响应里都可以用。 ","user_name":"作者回复","comment_id":109816,"uid":"1181974","ip_address":"","utype":1,"ctime":1562127490,"user_name_real":"chrono"}],"discussion_count":1,"race_medal":0,"score":"61691658935","product_id":100029001,"comment_content":"老师好!在带宽固定的情况下，范围请求没发提高下载速度。如果服务器对客户端每个累链接限速的情况下，可通过多线程并发下载，提高下载速度是么?还有几个问题<br>分块传输:顺序传一次一小块<br>范围请求:支持跳跃式传输，还可以并发获取不同的range最后合并。<br>多段数据:一次请求多个范围，范围可以不连续是么?如果必须联系的话和请求一个大范围没差别了。<br>这几个拒的例子都是服务端这么返回的。<br>客户端上传的时候怎么使用呢?老师后面会讲么。<br>只读到了这么点，希望老师补充下每个的作用，和解决的问题，谢谢老师。","like_count":14,"discussions":[{"author":{"id":1181974,"avatar":"https://static001.geekbang.org/account/avatar/00/12/09/16/1161017c.jpg","nickname":"罗剑锋","note":"","ucode":"95678C988F24AB","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":456587,"discussion_content":"1，是的，通过多线程并发下载，提高下载速度。\n\n2，范围可以不连续，例子里就是这样。\n\n3，客户端上传的时候也可以用chunked、gzip，但不能用range。\n\n注意这些字段的类型，只要是实体字段，那就在请求响应里都可以用。 ","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1562127490,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":287073,"user_name":"darren","can_delete":false,"product_type":"c1","uid":1151837,"ip_address":"","ucode":"4726076845920B","user_header":"https://static001.geekbang.org/account/avatar/00/11/93/5d/91f1d849.jpg","comment_is_top":false,"comment_ctime":1617765457,"is_pvip":false,"replies":[{"id":"104241","content":"总结的非常好，很清晰。<br><br>chunk数据实际上是一个很大的请求，只有一个header，只是逐个地发出去，而不是一次性发。<br><br>可以在实验环境里抓包看看。","user_name":"作者回复","comment_id":287073,"uid":"1181974","ip_address":"","utype":1,"ctime":1617768203,"user_name_real":"罗剑锋"}],"discussion_count":1,"race_medal":0,"score":"57452340305","product_id":100029001,"comment_content":"不分块：http把客户端需要的东西整个交给tcp，由tcp切块后发送给客户端，客户端接受后在tcp层组装完整发给浏览器使用。<br>分块：http把客户端需要的东西切分成1、2、3到n块，然后将1块发给tcp，tcp将块1再次切分后发给客户端，客户端接受后在tcp组装成块1发给http层。然后服务器与客户端用同样的方式发送块2、块3到块n。客户端的http在接收完所有块后组装成一个完整的响应。整个过程使用同一个tcp连接，块1到块n如上是挨个发送的。如果是http2，则基于多路复用技术块1到块n可以同时发送。所以分块抓包http只能抓到一个包，如果抓tcp的包，分不分块，都会抓到很多包。<br>分段：分段就是对某个资源的一部分进行请求（类似于把一个大文件切分成很多小文件，类似压缩中的分卷功能，然后客户端只对这些小文件中的一部分进行请求）<br>分段是对需要哪些资源进行一种说明，分块是一种传输机制，完全不同的两个东西，只是名字比较像。<br>请老师指教理解不正确的地方，另外想问一下老师分块的时候每个块都会复制一次响应头吗，还是只有块1带有请求头。","like_count":13,"discussions":[{"author":{"id":1181974,"avatar":"https://static001.geekbang.org/account/avatar/00/12/09/16/1161017c.jpg","nickname":"罗剑锋","note":"","ucode":"95678C988F24AB","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":518183,"discussion_content":"总结的非常好，很清晰。\n\nchunk数据实际上是一个很大的请求，只有一个header，只是逐个地发出去，而不是一次性发。\n\n可以在实验环境里抓包看看。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1617768203,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":204905,"user_name":"一只鱼","can_delete":false,"product_type":"c1","uid":1272756,"ip_address":"","ucode":"44C6751552953B","user_header":"https://static001.geekbang.org/account/avatar/00/13/6b/b4/47c548fd.jpg","comment_is_top":false,"comment_ctime":1586489333,"is_pvip":true,"replies":[{"id":"76578","content":"说的对。<br><br>第二个问题，如果按标准http协议的做法就是只缓存一个范围，但这样的效果不会很好，因为缓存的这部分被重复利用的机会很小。<br><br>更好的方法是cdn返回给客户端的同时，把整个文件都从源站取下来，之后就可以自己计算范围给客户端，不用再从源站取了。","user_name":"作者回复","comment_id":204905,"uid":"1181974","ip_address":"","utype":1,"ctime":1586493773,"user_name_real":"chrono"}],"discussion_count":1,"race_medal":0,"score":"44536162293","product_id":100029001,"comment_content":"针对课下作业2：<br>情况一：如果服务器上只有 gzip 之后的文件，没有原文件，那范围请求针对的就是 gizp 之后的文件；<br>情况二：如果服务器上有原文件(未压缩)，只是在传输过程中被 gizp , 那范围请求针对的就是未压缩的原文件。<br>这里拓展一下，假如在服务器和客户端之间有一个 cdn , 那么 cdn 缓存的是文件的某个范围吗？cdn 会根据请求头判断缓存里面有没有这个范围的结果，如果有就直接返回，并没有再根据bytes进行计算?","like_count":10,"discussions":[{"author":{"id":1181974,"avatar":"https://static001.geekbang.org/account/avatar/00/12/09/16/1161017c.jpg","nickname":"罗剑锋","note":"","ucode":"95678C988F24AB","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":491323,"discussion_content":"说的对。\n\n第二个问题，如果按标准http协议的做法就是只缓存一个范围，但这样的效果不会很好，因为缓存的这部分被重复利用的机会很小。\n\n更好的方法是cdn返回给客户端的同时，把整个文件都从源站取下来，之后就可以自己计算范围给客户端，不用再从源站取了。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1586493773,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":158672,"user_name":"lesserror","can_delete":false,"product_type":"c1","uid":1351076,"ip_address":"","ucode":"25A54D1165FCF6","user_header":"https://static001.geekbang.org/account/avatar/00/14/9d/a4/e481ae48.jpg","comment_is_top":false,"comment_ctime":1575430640,"is_pvip":false,"replies":[{"id":"60731","content":"流式数据就是stream，虽然还是用一个个的chunk发过来的，但从更高层次上看，它像是从源头持续不断地、慢慢地“流”过来的，而不是一次性、一整块发过来的。<br><br>可以对比一下tcp和udp，tcp是流式数据，而udp是一个个的数据包。","user_name":"作者回复","comment_id":158672,"uid":"1181974","ip_address":"","utype":1,"ctime":1575439716,"user_name_real":"chrono"}],"discussion_count":1,"race_medal":0,"score":"27345234416","product_id":100029001,"comment_content":"老师，请问一下：“分块传输也可以用于“流式数据””。该怎么理解这个“流式数据”这句话呢？","like_count":6,"discussions":[{"author":{"id":1181974,"avatar":"https://static001.geekbang.org/account/avatar/00/12/09/16/1161017c.jpg","nickname":"罗剑锋","note":"","ucode":"95678C988F24AB","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":476800,"discussion_content":"流式数据就是stream，虽然还是用一个个的chunk发过来的，但从更高层次上看，它像是从源头持续不断地、慢慢地“流”过来的，而不是一次性、一整块发过来的。\n\n可以对比一下tcp和udp，tcp是流式数据，而udp是一个个的数据包。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1575439716,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":125241,"user_name":"ly","can_delete":false,"product_type":"c1","uid":1221628,"ip_address":"","ucode":"5E2B85252DABF3","user_header":"https://static001.geekbang.org/account/avatar/00/12/a3/fc/379387a4.jpg","comment_is_top":false,"comment_ctime":1566129611,"is_pvip":false,"replies":[{"id":"46607","content":"<br>1.请参考一下讲长连接的那一讲，现在的http请求应该都是使用的长连接，不会每次都重新建立连接，否则效率太低。<br><br>2.流式数据就是分块发送，像tcp那样一块一块地发过来，而不是像普通http那样一次完整地全发过来。<br><br>3.多段数据可以是mulitpart，每段数据是有可能不同的，比如发出一个请求，服务器返回了一个txt和json，所以要这么做。当然这种情况比较少见，但协议就必须要考虑到这种情况。","user_name":"作者回复","comment_id":125241,"uid":"1181974","ip_address":"","utype":1,"ctime":1566365585,"user_name_real":"chrono"}],"discussion_count":2,"race_medal":0,"score":"27335933387","product_id":100029001,"comment_content":"有几个小疑问：<br>分块传输：<br>对于一个500Mb的数据，客户端应该是发送N次http请求，每次http请求只传输其中一部分，每次都是采用了分块传输的body格式，那么每次都会重新建立TCP连接吗（三次握手）？<br><br>另外文章提到分块传输中的“流式数据”，这个流式数据怎么理解呢？<br><br>对于多段数据:<br>服务端在响应body里面的每一段都会指定Content-Type和Content-Range，总感觉其中的Content-Type字段是多余的，难道body里面的不同分段，Content-Type可能不一样？<br>","like_count":6,"discussions":[{"author":{"id":1181974,"avatar":"https://static001.geekbang.org/account/avatar/00/12/09/16/1161017c.jpg","nickname":"罗剑锋","note":"","ucode":"95678C988F24AB","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":463492,"discussion_content":"\n1.请参考一下讲长连接的那一讲，现在的http请求应该都是使用的长连接，不会每次都重新建立连接，否则效率太低。\n\n2.流式数据就是分块发送，像tcp那样一块一块地发过来，而不是像普通http那样一次完整地全发过来。\n\n3.多段数据可以是mulitpart，每段数据是有可能不同的，比如发出一个请求，服务器返回了一个txt和json，所以要这么做。当然这种情况比较少见，但协议就必须要考虑到这种情况。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1566365585,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1030070,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/b7/b6/17103195.jpg","nickname":"Elliot","note":"","ucode":"CC58A6FD2F338C","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":167623,"discussion_content":"可以对比一下tcp和udp，tcp是流式数据，而udp是一个个的数据包 . 然后是流式数据就是分块发送，像tcp那样一块一块地发过来，而不是像普通http那样一次完整地全发过来。有点晕😄","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1581514011,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":113006,"user_name":"wheat7","can_delete":false,"product_type":"c1","uid":1152689,"ip_address":"","ucode":"734DDC697FA8A3","user_header":"https://static001.geekbang.org/account/avatar/00/11/96/b1/141bf83e.jpg","comment_is_top":false,"comment_ctime":1562865953,"is_pvip":false,"replies":[{"id":"41102","content":"说的很有道理。<br><br>不过两者还是有区别的，chunked主要用于流式数据，一开始不能知道准确的大小。","user_name":"作者回复","comment_id":113006,"uid":"1181974","ip_address":"","utype":1,"ctime":1562885301,"user_name_real":"chrono"}],"discussion_count":6,"race_medal":0,"score":"27332669729","product_id":100029001,"comment_content":"chunk的核心问题并不是所谓把大象装进冰箱，是为了解决应用层在没有content-length的时候知道数据在哪里结束，chunk和普通传输方式都是在一个http报文里传输的，只是在body里相当于又加了一层协议或者是编码，数据无论如何是在一头大象里，在一个http报文中传输，大的数据传输使用chunk和不使用传输方式并没有什么区别。 ","like_count":6,"discussions":[{"author":{"id":1181974,"avatar":"https://static001.geekbang.org/account/avatar/00/12/09/16/1161017c.jpg","nickname":"罗剑锋","note":"","ucode":"95678C988F24AB","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":458009,"discussion_content":"说的很有道理。\n\n不过两者还是有区别的，chunked主要用于流式数据，一开始不能知道准确的大小。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1562885301,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1215892,"avatar":"https://static001.geekbang.org/account/avatar/00/12/8d/94/150dfe78.jpg","nickname":"GGL","note":"","ucode":"AED10B8248D1E7","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":374126,"discussion_content":"我觉得应该是这样比喻比较恰当：冰箱足够大能容纳下一头大象，但冰箱的门非常小，没法把大象直接扔进去，所以只能是将大象分成一个一个的小块（残忍...）放到冰箱中，核心问题是“口”（内存）比较小。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1621007349,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":2,"child_discussions":[{"author":{"id":2598894,"avatar":"https://static001.geekbang.org/account/avatar/00/27/a7/ee/cbb92643.jpg","nickname":"Geek_1b7f39","note":"","ucode":"F4B9B0F281A66E","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1215892,"avatar":"https://static001.geekbang.org/account/avatar/00/12/8d/94/150dfe78.jpg","nickname":"GGL","note":"","ucode":"AED10B8248D1E7","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":413631,"discussion_content":"核心问题应该是不知道大象有多大","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1636531471,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":374126,"ip_address":""},"score":413631,"extra":""},{"author":{"id":2913864,"avatar":"https://thirdwx.qlogo.cn/mmopen/vi_32/MYShyjtRtib2GIQiaK4hV3ZP9pQ1qiaS74DA4K4YHY4SIiaFDfsCKgiaMWwm9zFsSn3bt5pawp5Kdn5MWgiaw5909nug/132","nickname":"Geek_aa1c31","note":"","ucode":"1AC14C053638AF","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":2598894,"avatar":"https://static001.geekbang.org/account/avatar/00/27/a7/ee/cbb92643.jpg","nickname":"Geek_1b7f39","note":"","ucode":"F4B9B0F281A66E","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":579795,"discussion_content":"与内存比较小也有关系。 如果内存足够大可以一次发送，自然就是知道大象有多大的。所以我猜测这之间的关系是，因为内存不够大，所以要分块传输，但是分块传输意味着不能马上知道“总”的大象有多大。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1657694811,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":413631,"ip_address":""},"score":579795,"extra":""}]},{"author":{"id":1594820,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTKrzZT06vXeP6IfR9iasoiaaDeYiaUmmN6pgwvNUpLhrauiasU9acvNcdSuicrhicMmBhvEufcjPTS7ZXRA/132","nickname":"Geek_3894f9","note":"","ucode":"FD04B8163FC5A8","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":44396,"discussion_content":"因此，如果服务端明确知道本次发送的body部分的长度，虽然很大（如10G），但没有必要采用chunk方式，切分成小块（如20K）进行传输，如果这样做了，客户端还是收完最后一个chunk再拼装。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1572946497,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":1,"child_discussions":[{"author":{"id":2913864,"avatar":"https://thirdwx.qlogo.cn/mmopen/vi_32/MYShyjtRtib2GIQiaK4hV3ZP9pQ1qiaS74DA4K4YHY4SIiaFDfsCKgiaMWwm9zFsSn3bt5pawp5Kdn5MWgiaw5909nug/132","nickname":"Geek_aa1c31","note":"","ucode":"1AC14C053638AF","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":1594820,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTKrzZT06vXeP6IfR9iasoiaaDeYiaUmmN6pgwvNUpLhrauiasU9acvNcdSuicrhicMmBhvEufcjPTS7ZXRA/132","nickname":"Geek_3894f9","note":"","ucode":"FD04B8163FC5A8","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":579798,"discussion_content":"应该还需要考虑内存吧。 即使知道有10G的内存，可以不用chunk来发送，但这意味着要一次性占用10G内存。而用chunk一块一块传输就是可以减少内存的使用量。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1657695036,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":44396,"ip_address":""},"score":579798,"extra":""}]}]},{"had_liked":false,"id":109917,"user_name":"Gopher","can_delete":false,"product_type":"c1","uid":1200589,"ip_address":"","ucode":"CF98ACFB8BFD6F","user_header":"https://static001.geekbang.org/account/avatar/00/12/51/cd/d6fe851f.jpg","comment_is_top":false,"comment_ctime":1562133511,"is_pvip":false,"replies":[{"id":"39826","content":"承蒙夸奖，不胜感激。","user_name":"作者回复","comment_id":109917,"uid":"1181974","ip_address":"","utype":1,"ctime":1562142206,"user_name_real":"chrono"}],"discussion_count":1,"race_medal":0,"score":"23036969991","product_id":100029001,"comment_content":"这个专栏质量很棒，老师很负责，知识讲解很通透，很容易就get、解惑了。<br><br>哈哈哈，特此留言就是想说，老师，你认真做事的样子真帅(*•̀ᴗ•́*)و ̑̑","like_count":5,"discussions":[{"author":{"id":1181974,"avatar":"https://static001.geekbang.org/account/avatar/00/12/09/16/1161017c.jpg","nickname":"罗剑锋","note":"","ucode":"95678C988F24AB","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":456639,"discussion_content":"承蒙夸奖，不胜感激。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1562142206,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":124461,"user_name":"四月长安","can_delete":false,"product_type":"c1","uid":1484420,"ip_address":"","ucode":"63F905B16C9F24","user_header":"https://static001.geekbang.org/account/avatar/00/16/a6/84/92cb4db4.jpg","comment_is_top":false,"comment_ctime":1565888433,"is_pvip":false,"replies":[{"id":"45715","content":"http层面的分块与tcp的分块是互不相关的，http的分块可以很大也可以很小，这些数据到了tcp由tcp去自行组织，是合并在一个块里还是跨越多个块都没有关系，我们不需要为此操心。<br><br>其实tcp层再往下的mac层，一个包最多1500字节，但tcp也不需要考虑这个，只要下层能够保证上层正确传输就好。","user_name":"作者回复","comment_id":124461,"uid":"1181974","ip_address":"","utype":1,"ctime":1565916953,"user_name_real":"chrono"}],"discussion_count":1,"race_medal":0,"score":"18745757617","product_id":100029001,"comment_content":"http数据包封装好交给下层tcp协议的时候，应该是作为tcp数据部分所要传输的内容吧，ip协议数据报最大传输65535字节的数据，这65535的数据减去tcp的首部，应该就是tcp所能容纳的负载极限了吧，所以如果是这样的话http数据的分块应该粒度更小才是吧，或许一个tcp负载里边就有好多http分块？请老师指正，感谢🙏","like_count":4,"discussions":[{"author":{"id":1181974,"avatar":"https://static001.geekbang.org/account/avatar/00/12/09/16/1161017c.jpg","nickname":"罗剑锋","note":"","ucode":"95678C988F24AB","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":463187,"discussion_content":"http层面的分块与tcp的分块是互不相关的，http的分块可以很大也可以很小，这些数据到了tcp由tcp去自行组织，是合并在一个块里还是跨越多个块都没有关系，我们不需要为此操心。\n\n其实tcp层再往下的mac层，一个包最多1500字节，但tcp也不需要考虑这个，只要下层能够保证上层正确传输就好。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1565916953,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":110612,"user_name":"响雨","can_delete":false,"product_type":"c1","uid":1581705,"ip_address":"","ucode":"C5FB3A3BC68F92","user_header":"https://static001.geekbang.org/account/avatar/00/18/22/89/73397ccb.jpg","comment_is_top":false,"comment_ctime":1562302449,"is_pvip":false,"replies":[{"id":"40216","content":"就是按照格式分成一些片段，逐块发送，浏览器收到后去掉分隔符，再拼成原来的样子。<br>","user_name":"作者回复","comment_id":110612,"uid":"1181974","ip_address":"","utype":1,"ctime":1562318934,"user_name_real":"chrono"}],"discussion_count":1,"race_medal":0,"score":"14447204337","product_id":100029001,"comment_content":"响应报文返回的数据太大，所以采用了chunk分块传输的话，那响应报文在传输完成前是什么样子，响应行和头过来了，响应体还在流式传递，那响应体内的数据该怎么展示?","like_count":3,"discussions":[{"author":{"id":1181974,"avatar":"https://static001.geekbang.org/account/avatar/00/12/09/16/1161017c.jpg","nickname":"罗剑锋","note":"","ucode":"95678C988F24AB","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":456966,"discussion_content":"就是按照格式分成一些片段，逐块发送，浏览器收到后去掉分隔符，再拼成原来的样子。\n","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1562318934,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":109898,"user_name":"djfhchdh","can_delete":false,"product_type":"c1","uid":1484184,"ip_address":"","ucode":"E71D75328CE398","user_header":"https://static001.geekbang.org/account/avatar/00/16/a5/98/a65ff31a.jpg","comment_is_top":false,"comment_ctime":1562126645,"is_pvip":false,"replies":[{"id":"39797","content":"1不对，因为chunked格式里已经有长度了。<br><br>2正确。<br><br>看来有不少同学对第二个问题比较迷惑，我再说具体一点。<br><br>比如说，有一个1M的纯文本，range请求其中的500K，然后服务器编码为gzip（Content-Encoding: gzip），压缩成200k，浏览器收到后解压缩，就得到了这部分的500k数据。","user_name":"作者回复","comment_id":109898,"uid":"1181974","ip_address":"","utype":1,"ctime":1562128515,"user_name_real":"chrono"}],"discussion_count":1,"race_medal":0,"score":"14447028533","product_id":100029001,"comment_content":"1、因为分块数据是明文传输，如果数据里有\\r\\n，是会影响分块处理的<br>2、个人感觉应该是应用于原文件","like_count":3,"discussions":[{"author":{"id":1181974,"avatar":"https://static001.geekbang.org/account/avatar/00/12/09/16/1161017c.jpg","nickname":"罗剑锋","note":"","ucode":"95678C988F24AB","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":456628,"discussion_content":"1不对，因为chunked格式里已经有长度了。\n\n2正确。\n\n看来有不少同学对第二个问题比较迷惑，我再说具体一点。\n\n比如说，有一个1M的纯文本，range请求其中的500K，然后服务器编码为gzip（Content-Encoding: gzip），压缩成200k，浏览器收到后解压缩，就得到了这部分的500k数据。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1562128515,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":268174,"user_name":"不二","can_delete":false,"product_type":"c1","uid":1253124,"ip_address":"","ucode":"B018B32EDB44E5","user_header":"https://static001.geekbang.org/account/avatar/00/13/1f/04/1cddf65b.jpg","comment_is_top":false,"comment_ctime":1608090164,"is_pvip":false,"replies":[{"id":"97386","content":"上传就要用chunked功能，流式发送数据，服务器流式接收数据。<br><br>range功能只能是下载用，不能上传。","user_name":"作者回复","comment_id":268174,"uid":"1181974","ip_address":"","utype":1,"ctime":1608102944,"user_name_real":"罗剑锋"}],"discussion_count":3,"race_medal":0,"score":"10198024756","product_id":100029001,"comment_content":"老师，问一个问题，这篇文章主要讲的是服务器端如何分块传输给客户端数据，或者客户端如何获取部分服务器端的数据， 那web客户端可以分批上传一个大文件的功能吗？类似于云盘中的上传功能","like_count":2,"discussions":[{"author":{"id":1181974,"avatar":"https://static001.geekbang.org/account/avatar/00/12/09/16/1161017c.jpg","nickname":"罗剑锋","note":"","ucode":"95678C988F24AB","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":511867,"discussion_content":"上传就要用chunked功能，流式发送数据，服务器流式接收数据。\n\nrange功能只能是下载用，不能上传。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1608102944,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1006424,"avatar":"","nickname":"门窗小二","note":"","ucode":"0BF3780C247F22","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":581595,"discussion_content":"云盘是自身在客户端sdk内拆分大文件分块并发上传，然后服务器接受完所有块之后合并文件保存！","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1658880637,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":2608728,"avatar":"https://static001.geekbang.org/account/avatar/00/27/ce/58/71ed845f.jpg","nickname":"Dexter","note":"","ucode":"909CABC4AC4AC9","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":558389,"discussion_content":"range功能只能用作下载，不能用作上传","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1648273598,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":244969,"user_name":"Javatar","can_delete":false,"product_type":"c1","uid":2032840,"ip_address":"","ucode":"E216645CDF632C","user_header":"https://static001.geekbang.org/account/avatar/00/1f/04/c8/3c7af100.jpg","comment_is_top":false,"comment_ctime":1598768183,"is_pvip":false,"replies":[{"id":"90109","content":"是的，chunked只是传送大文件的一种方式，不是一定要用，而且大文件的定义也因网站而不同。<br><br>看一下文件头，里面有content-length头，那么这个很明显就是给出了确定长度，就不用chunked了。<br><br>chunked的应用场合主要是流式传送，内容的长度不确定，给不出content-length。","user_name":"作者回复","comment_id":244969,"uid":"1181974","ip_address":"","utype":1,"ctime":1598774221,"user_name_real":"罗剑锋"}],"discussion_count":2,"race_medal":0,"score":"10188702775","product_id":100029001,"comment_content":"老师你好，看完本节内容后，找了一个网络上的pdf，用telnet发了下请求，结果在响应报文中并没有看到chunked头，pdf也是大文件，但是并没有分块传输，该怎么理解？还是说大文件也可以不用分段传输？<br><br>Trying 202.38.64.11...<br>Connected to staff.ustc.edu.cn.<br>Escape character is &#39;^]&#39;.<br><br><br>GET &#47;~bhua&#47;Kurose_Labs_v7.0&#47;Wireshark_HTTP_v7.0.pdf HTTP&#47;1.1<br>Host: staff.ustc.edu.cn<br><br>HTTP&#47;1.1 200 OK<br>Date: Sun, 30 Aug 2020 05:54:44 GMT<br>Server: Apache&#47;2.0.52 (Red Hat)<br>Last-Modified: Thu, 19 Sep 2019 09:00:14 GMT<br>ETag: &quot;40d8086-2392cc-2e81a380&quot;<br>Accept-Ranges: bytes<br>Content-Length: 2331340<br>Connection: close<br>Content-Type: application&#47;pdf<br><br>%PDF-1.3<br>%?????????<br>4 0 obj<br>&lt;&lt; &#47;Length 5 0 R &#47;Filter &#47;FlateDecode &gt;&gt;<br>stream<br>....省略body","like_count":2,"discussions":[{"author":{"id":2913864,"avatar":"https://thirdwx.qlogo.cn/mmopen/vi_32/MYShyjtRtib2GIQiaK4hV3ZP9pQ1qiaS74DA4K4YHY4SIiaFDfsCKgiaMWwm9zFsSn3bt5pawp5Kdn5MWgiaw5909nug/132","nickname":"Geek_aa1c31","note":"","ucode":"1AC14C053638AF","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":579800,"discussion_content":"也就是说内容长度不确定一定是要用chunked的，但是对于内容长度确定的大文件来说，chunked是可选的， 可以一次性响应， 也可以分块响应。\n","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1657695538,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1181974,"avatar":"https://static001.geekbang.org/account/avatar/00/12/09/16/1161017c.jpg","nickname":"罗剑锋","note":"","ucode":"95678C988F24AB","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":504753,"discussion_content":"是的，chunked只是传送大文件的一种方式，不是一定要用，而且大文件的定义也因网站而不同。\n\n看一下文件头，里面有content-length头，那么这个很明显就是给出了确定长度，就不用chunked了。\n\nchunked的应用场合主要是流式传送，内容的长度不确定，给不出content-length。","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1598774221,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":228782,"user_name":"snake","can_delete":false,"product_type":"c1","uid":1217535,"ip_address":"","ucode":"A74B3D02B017FB","user_header":"https://static001.geekbang.org/account/avatar/00/12/93/ff/87d8de89.jpg","comment_is_top":false,"comment_ctime":1592808880,"is_pvip":false,"replies":[{"id":"84358","content":"<br>1.可以的，先压缩再分块。<br><br>2.分块的好处是每次只处理一小部分数据，比如一次只从磁盘读取10k，而不用把1G的文件都读进内存，发的时候也可以慢慢发，所以就节省了内存、带宽。<br><br>3.对方收到数据肯定是先在内存里，之后可以用各种策略，比如达到一定的大小（比如1M）就落盘存。","user_name":"作者回复","comment_id":228782,"uid":"1181974","ip_address":"","utype":1,"ctime":1592811282,"user_name_real":"罗剑锋"}],"discussion_count":1,"race_medal":0,"score":"10182743472","product_id":100029001,"comment_content":"1、使用chunk分段后还能压缩吗？或者说chunk分段分的是压缩后还是压缩前的文件呢？2、使用了chunk，为什么内存、带宽会节省呢？总的数据大小不变吧？内存的话，分段后，前面的数据到达浏览器客户端后，是存在内存还是磁盘呢？如何节省内存呢?","like_count":2,"discussions":[{"author":{"id":1181974,"avatar":"https://static001.geekbang.org/account/avatar/00/12/09/16/1161017c.jpg","nickname":"罗剑锋","note":"","ucode":"95678C988F24AB","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":499191,"discussion_content":"\n1.可以的，先压缩再分块。\n\n2.分块的好处是每次只处理一小部分数据，比如一次只从磁盘读取10k，而不用把1G的文件都读进内存，发的时候也可以慢慢发，所以就节省了内存、带宽。\n\n3.对方收到数据肯定是先在内存里，之后可以用各种策略，比如达到一定的大小（比如1M）就落盘存。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1592811282,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":198515,"user_name":"钱","can_delete":false,"product_type":"c1","uid":1009652,"ip_address":"","ucode":"2C92A243A463D4","user_header":"https://static001.geekbang.org/account/avatar/00/0f/67/f4/9a1feb59.jpg","comment_is_top":false,"comment_ctime":1585454598,"is_pvip":false,"replies":[{"id":"74804","content":"<br>如果传输超大文件，用http就不太合适了，虽然也可以，但就会麻烦一些。可以考虑用其他方式，比如mq。","user_name":"作者回复","comment_id":198515,"uid":"1181974","ip_address":"","utype":1,"ctime":1585531382,"user_name_real":"chrono"}],"discussion_count":1,"race_medal":0,"score":"10175389190","product_id":100029001,"comment_content":"压缩和分而治之的思路是解决各种大问题的通用思路，思路容易理解，大东西放入小容器，要么把大东西变小也就是压缩，实在变小不了就弄多个容器把大东西分块放入多个容器之中，如果仅是传输之用那就一次传一点，有点类似愚公移山的动作。<br>比较关心大东西怎么拆？传输到对应的地方每一小块又怎么组合起来？比如：内存只有1G要传输10G的大文件，具体怎么拆分呢？是按照大小吗？比如：拆成20个0.5G的文件，如果这样传输到的内容也是需要保持一定的顺序的吧？否则组装也是一个问题，我能想到的最简单的方式就是表上号放置的时候按照序号一个个码放，不过我觉得应该不会这么简单，希望老师能分享一下，这块的具体实现逻辑。<br>目前在做的一个项目就涉及大文件上传、下载、解析的事情，量变引起质变感觉文件的体积大到一定程度，就不是一个简单的文件上传、下载、解析的事情了，需要各种考虑怎么提高性能减短处理时间的问题，还要考虑中间网络断了或者解析数据时遇到不OK的数据怎么处理的问题。","like_count":2,"discussions":[{"author":{"id":1181974,"avatar":"https://static001.geekbang.org/account/avatar/00/12/09/16/1161017c.jpg","nickname":"罗剑锋","note":"","ucode":"95678C988F24AB","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":489717,"discussion_content":"\n如果传输超大文件，用http就不太合适了，虽然也可以，但就会麻烦一些。可以考虑用其他方式，比如mq。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1585531382,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":115685,"user_name":"彧豪","can_delete":false,"product_type":"c1","uid":1161233,"ip_address":"","ucode":"8979F477E0BC5B","user_header":"https://static001.geekbang.org/account/avatar/00/11/b8/11/26838646.jpg","comment_is_top":false,"comment_ctime":1563698043,"is_pvip":false,"replies":[{"id":"42322","content":"1，计算范围从0开始计数，用的是C语言惯例。<br><br>2，浏览器的技术不是很清楚，抱歉了。","user_name":"作者回复","user_name_real":"chrono","uid":"1181974","ctime":1563757236,"ip_address":"","comment_id":115685,"utype":1}],"discussion_count":3,"race_medal":0,"score":"10153632635","product_id":100029001,"comment_content":"老师我有几个疑问：<br>1. 比如总共是1314的数据, 响应头会这么写`Content-Range: bytes 0-1313&#47;1314`, 为何会少1?<br>2. 浏览器如何开N个线程下载数据?多个ajax请求?","like_count":2,"discussions":[{"author":{"id":1181974,"avatar":"https://static001.geekbang.org/account/avatar/00/12/09/16/1161017c.jpg","nickname":"罗剑锋","note":"","ucode":"95678C988F24AB","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":459229,"discussion_content":"1，计算范围从0开始计数，用的是C语言惯例。\n\n2，浏览器的技术不是很清楚，抱歉了。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1563757236,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":2913864,"avatar":"https://thirdwx.qlogo.cn/mmopen/vi_32/MYShyjtRtib2GIQiaK4hV3ZP9pQ1qiaS74DA4K4YHY4SIiaFDfsCKgiaMWwm9zFsSn3bt5pawp5Kdn5MWgiaw5909nug/132","nickname":"Geek_aa1c31","note":"","ucode":"1AC14C053638AF","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":579801,"discussion_content":"第二个问题， 浏览器环境中的web worker 可以手动开启多个线程","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1657695757,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1779471,"avatar":"","nickname":"辛有慧","note":"","ucode":"ACC5AD054EB5E5","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":250147,"discussion_content":"多线程下载一般是下载工具的能力，浏览器默认的下载应该是单线程的","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1587994551,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":110105,"user_name":"苦行僧","can_delete":false,"product_type":"c1","uid":1055334,"ip_address":"","ucode":"726024A9A9CF44","user_header":"https://static001.geekbang.org/account/avatar/00/10/1a/66/2d9db9ed.jpg","comment_is_top":false,"comment_ctime":1562196063,"is_pvip":false,"replies":[{"id":"39918","content":"这个需要实际测试，http的优势是灵活，相关的工具多，传输效率上都是依赖于底层的tcp，应该差不多。","user_name":"作者回复","user_name_real":"chrono","uid":"1181974","ctime":1562203359,"ip_address":"","comment_id":110105,"utype":1}],"discussion_count":1,"race_medal":0,"score":"10152130655","product_id":100029001,"comment_content":"老师 我们的业务就是视频处理 经常涉及的就是视频下载本地处理 使用的是ftp协议 如果使用http会更快？","like_count":2,"discussions":[{"author":{"id":1181974,"avatar":"https://static001.geekbang.org/account/avatar/00/12/09/16/1161017c.jpg","nickname":"罗剑锋","note":"","ucode":"95678C988F24AB","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":456725,"discussion_content":"这个需要实际测试，http的优势是灵活，相关的工具多，传输效率上都是依赖于底层的tcp，应该差不多。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1562203359,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":109878,"user_name":"白了少年头","can_delete":false,"product_type":"c1","uid":1053084,"ip_address":"","ucode":"A65E00E05B23BA","user_header":"https://static001.geekbang.org/account/avatar/00/10/11/9c/4fd6ebe0.jpg","comment_is_top":false,"comment_ctime":1562124217,"is_pvip":false,"replies":[{"id":"39793","content":"1不对，前面已经有同学回答了，因为分块包含了长度，所以回车换行不影响。<br><br>2需要分情况，看原文件是什么形式。如果原来的文件是gzip的，那就正确。如果原文件是文本，而是在传输过程中被压缩，那么就应用于压缩前的数据。<br><br>总之，range是针对原文件的。","user_name":"作者回复","user_name_real":"chrono","uid":"1181974","ctime":1562127307,"ip_address":"","comment_id":109878,"utype":1}],"discussion_count":2,"race_medal":0,"score":"10152058809","product_id":100029001,"comment_content":"1.数据里有回车换行，会影响分块的处理<br>2.范围应用于压缩后文件<br>不知道对不对，辛苦老师解答一下，谢谢！","like_count":2,"discussions":[{"author":{"id":1181974,"avatar":"https://static001.geekbang.org/account/avatar/00/12/09/16/1161017c.jpg","nickname":"罗剑锋","note":"","ucode":"95678C988F24AB","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":456620,"discussion_content":"1不对，前面已经有同学回答了，因为分块包含了长度，所以回车换行不影响。\n\n2需要分情况，看原文件是什么形式。如果原来的文件是gzip的，那就正确。如果原文件是文本，而是在传输过程中被压缩，那么就应用于压缩前的数据。\n\n总之，range是针对原文件的。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1562127307,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":3014444,"avatar":"https://thirdwx.qlogo.cn/mmopen/vi_32/Q3auHgzwzM74658w9PQeTM4TcM14BzfpJnVLrsciaS26ibRwRbCE09ydI6UlZhFrJh7iaVLp2xxhBppVDKLyRRg9Q/132","nickname":"Geek_21a73c","note":"","ucode":"104A4AD89DA6BC","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":574424,"discussion_content":"分块包含了长度是什么意思呢","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1654055257,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":109838,"user_name":"一粟","can_delete":false,"product_type":"c1","uid":1058773,"ip_address":"","ucode":"2EE966F3C36B5F","user_header":"https://static001.geekbang.org/account/avatar/00/10/27/d5/0fd21753.jpg","comment_is_top":false,"comment_ctime":1562119041,"is_pvip":false,"replies":[{"id":"39791","content":"只要是用http传输，就会用range，但他们也有可能用自己的协议而不是http，比如rmtp。","user_name":"作者回复","user_name_real":"chrono","uid":"1181974","ctime":1562127038,"ip_address":"","comment_id":109838,"utype":1}],"discussion_count":1,"race_medal":0,"score":"10152053633","product_id":100029001,"comment_content":"迅雷下载或者在线视频播放器是不是在使用分块或者任意请求功能?","like_count":2,"discussions":[{"author":{"id":1181974,"avatar":"https://static001.geekbang.org/account/avatar/00/12/09/16/1161017c.jpg","nickname":"罗剑锋","note":"","ucode":"95678C988F24AB","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":456597,"discussion_content":"只要是用http传输，就会用range，但他们也有可能用自己的协议而不是http，比如rmtp。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1562127038,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":306159,"user_name":"墨中白","can_delete":false,"product_type":"c1","uid":2144757,"ip_address":"","ucode":"356791A632F311","user_header":"https://static001.geekbang.org/account/avatar/00/20/b9/f5/cfeb1094.jpg","comment_is_top":false,"comment_ctime":1628412029,"is_pvip":false,"replies":[{"id":"110837","content":"实验的域名只能在内部用，没有在公网注册。","user_name":"作者回复","user_name_real":"罗剑锋","uid":"1181974","ctime":1628477468,"ip_address":"","comment_id":306159,"utype":1}],"discussion_count":2,"race_medal":0,"score":"5923379325","product_id":100029001,"comment_content":"https:&#47;&#47;www.chrono.com&#47;域名是被回收重新分配了吗？","like_count":1,"discussions":[{"author":{"id":1181974,"avatar":"https://static001.geekbang.org/account/avatar/00/12/09/16/1161017c.jpg","nickname":"罗剑锋","note":"","ucode":"95678C988F24AB","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":524652,"discussion_content":"实验的域名只能在内部用，没有在公网注册。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1628477468,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":2549897,"avatar":"https://thirdwx.qlogo.cn/mmopen/vi_32/GeJFj6vZ5V5Piatibibiajiaxn9tf1beWHSrIPZzyn5t3Czm1lPUYWNkFIoh4Ol8gK07zH0k6LY94hcgZ2wosUGOKsg/132","nickname":"一亩三分地","note":"","ucode":"B0522ABBFFE2FE","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":583474,"discussion_content":"你可能没从头看，有个步骤是修改本地 hosts 文件的，\n添加一行记录\n127.0.0.1  www.chrono.com\n就可以了，当然只限于内网了","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1660133861,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":"广东"},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":303499,"user_name":"兔嘟嘟","can_delete":false,"product_type":"c1","uid":2028811,"ip_address":"","ucode":"5A9042B4C7670C","user_header":"https://static001.geekbang.org/account/avatar/00/1e/f5/0b/73628618.jpg","comment_is_top":false,"comment_ctime":1626835097,"is_pvip":false,"replies":[{"id":"109859","content":"http分块主要的应用场合是流式数据，也就是不能一次完整地生成body，所以要逐块发送。","user_name":"作者回复","user_name_real":"罗剑锋","uid":"1181974","ctime":1626850085,"ip_address":"","comment_id":303499,"utype":1}],"discussion_count":1,"race_medal":0,"score":"5921802393","product_id":100029001,"comment_content":"我觉得HTTP分块和TCP分块的核心区别还是：”HTTP分块是在应用层层面的工作，它不关心TCP的分块”，因为HTTP没有认定TCP作为底层协议，所以不去考虑底层协议是否也做了分块。至于性能上的区别，我做了测试没有体现出来，不管大文件分不分段，在HTTP层面都是多个continuation包","like_count":1,"discussions":[{"author":{"id":1181974,"avatar":"https://static001.geekbang.org/account/avatar/00/12/09/16/1161017c.jpg","nickname":"罗剑锋","note":"","ucode":"95678C988F24AB","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":523710,"discussion_content":"http分块主要的应用场合是流式数据，也就是不能一次完整地生成body，所以要逐块发送。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1626850085,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":279121,"user_name":"天方夜","can_delete":false,"product_type":"c1","uid":1034749,"ip_address":"","ucode":"5D17D55B0CE10C","user_header":"https://static001.geekbang.org/account/avatar/00/0f/c9/fd/5ac43929.jpg","comment_is_top":false,"comment_ctime":1613629152,"is_pvip":false,"replies":[{"id":"101428","content":"这里用的是rfc的术语，可以参考：https:&#47;&#47;tools.ietf.org&#47;html&#47;rfc7233#section-2.1","user_name":"作者回复","user_name_real":"罗剑锋","uid":"1181974","ctime":1613633931,"ip_address":"","comment_id":279121,"utype":1}],"discussion_count":1,"race_medal":0,"score":"5908596448","product_id":100029001,"comment_content":"本篇有个小问题。偏移量指的是相对于第一个元素，偏移多少个单位。bytes=x-y 里面的 x 和 y 是从 0 开始的索引值（index），而不是偏移量。0-9 表示索引 0 到 9 的数据。关于偏移量，最典型的例子是 SQL 里面的 offset 与 limit，offset 10 limit 5 表示相对第一个元素偏移 10 个单位然后获取 5 个元素。不过也有一种理解是 index 就是指偏移量，但我觉得这样理解容易产生混乱。TUS 是一个支持续传的上传协议，它用的就是 offset，我觉得比 range 更清晰。","like_count":1,"discussions":[{"author":{"id":1181974,"avatar":"https://static001.geekbang.org/account/avatar/00/12/09/16/1161017c.jpg","nickname":"罗剑锋","note":"","ucode":"95678C988F24AB","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":515629,"discussion_content":"这里用的是rfc的术语，可以参考：https://tools.ietf.org/html/rfc7233#section-2.1","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1613633931,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":272838,"user_name":"牛","can_delete":false,"product_type":"c1","uid":2382521,"ip_address":"","ucode":"12C46025BBA2D3","user_header":"","comment_is_top":false,"comment_ctime":1610328123,"is_pvip":false,"replies":[{"id":"98902","content":"看不到你的wireshark抓包，不知道具体是什么样的。但我觉得是不是因为http运行在tcp上，所以wireshark就先显示成了tcp，试试可否展开包数据，里面应该就是http协议。","user_name":"作者回复","user_name_real":"罗剑锋","uid":"1181974","ctime":1610333744,"ip_address":"","comment_id":272838,"utype":1}],"discussion_count":1,"race_medal":0,"score":"5905295419","product_id":100029001,"comment_content":"请问一下，使用telnet发送的如下包<br><br>GET &#47;16-2 HTTP&#47;1.1<br>Host: www.chrono.com<br>Range: bytes=0-9, 20-29<br><br>在用wireshark捕获的数据包中，第一个数据包发送了HTTP请求头，但是为什么在包列表中被归为了TCP请求？","like_count":1,"discussions":[{"author":{"id":1181974,"avatar":"https://static001.geekbang.org/account/avatar/00/12/09/16/1161017c.jpg","nickname":"罗剑锋","note":"","ucode":"95678C988F24AB","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":513405,"discussion_content":"看不到你的wireshark抓包，不知道具体是什么样的。但我觉得是不是因为http运行在tcp上，所以wireshark就先显示成了tcp，试试可否展开包数据，里面应该就是http协议。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1610333744,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":197865,"user_name":"明月","can_delete":false,"product_type":"c1","uid":1476588,"ip_address":"","ucode":"D3C649B954A519","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTJayib1ZcRfOaoLsdsWZokiaO5tLAdC4uNAicQJRIVXrz9fIchib7QwXibnRrsJaoh5TUlia7faUf36g8Bw/132","comment_is_top":false,"comment_ctime":1585401405,"is_pvip":false,"replies":[{"id":"74816","content":"我刚才试了一下，是可以的，可参考一下09的操作步骤。<br><br>HTTP&#47;1.1 206 Partial Content<br>Server: openresty&#47;1.15.8.1<br>Date: Mon, 30 Mar 2020 01:33:44 GMT<br>Content-Type: multipart&#47;byteranges; boundary=00000000001<br>Content-Length: 189<br>Last-Modified: Mon, 15 Apr 2019 07:17:39 GMT<br>Connection: keep-alive<br>Accept-Ranges: bytes<br>ETag: &quot;5cb43013-60&quot;","user_name":"作者回复","user_name_real":"chrono","uid":"1181974","ctime":1585532076,"ip_address":"","comment_id":197865,"utype":1}],"discussion_count":1,"race_medal":0,"score":"5880368701","product_id":100029001,"comment_content":"我的telnet 16-2不是206啊 全部200ok返回了 ","like_count":1,"discussions":[{"author":{"id":1181974,"avatar":"https://static001.geekbang.org/account/avatar/00/12/09/16/1161017c.jpg","nickname":"罗剑锋","note":"","ucode":"95678C988F24AB","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":489608,"discussion_content":"我刚才试了一下，是可以的，可参考一下09的操作步骤。\n\nHTTP/1.1 206 Partial Content\nServer: openresty/1.15.8.1\nDate: Mon, 30 Mar 2020 01:33:44 GMT\nContent-Type: multipart/byteranges; boundary=00000000001\nContent-Length: 189\nLast-Modified: Mon, 15 Apr 2019 07:17:39 GMT\nConnection: keep-alive\nAccept-Ranges: bytes\nETag: &amp;quot;5cb43013-60&amp;quot;","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1585532076,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":196720,"user_name":"Celine","can_delete":false,"product_type":"c1","uid":1926366,"ip_address":"","ucode":"63D5F2E8FB2130","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/DYAIOgq83erwIgbTd3oy4GzkdCUBmz8lHGIIWBwoSIfibgQzwDlQuvTrLlqwTh7p99NBJIsu98ziaYoroQCSENwA/132","comment_is_top":false,"comment_ctime":1585306449,"is_pvip":false,"replies":[{"id":"74821","content":"这个就不是http协议的问题了，而是浏览器自己的实现问题。<br><br>我个人觉得应该是逐块解析，节约时间，不过我没研究过浏览器，可能说的不对，见谅。","user_name":"作者回复","user_name_real":"chrono","uid":"1181974","ctime":1585532393,"ip_address":"","comment_id":196720,"utype":1}],"discussion_count":3,"race_medal":0,"score":"5880273745","product_id":100029001,"comment_content":"老师你好，问个问题，分块传输的时候，如果是一个大的html，分块传输，浏览器是等所有的都传完，再解析，还是传一部分解析一部分，如果等所有的都传完再解析，为什么会比不分块要快呢？","like_count":1,"discussions":[{"author":{"id":1181974,"avatar":"https://static001.geekbang.org/account/avatar/00/12/09/16/1161017c.jpg","nickname":"罗剑锋","note":"","ucode":"95678C988F24AB","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":489366,"discussion_content":"这个就不是http协议的问题了，而是浏览器自己的实现问题。\n\n我个人觉得应该是逐块解析，节约时间，不过我没研究过浏览器，可能说的不对，见谅。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1585532393,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1060892,"avatar":"https://static001.geekbang.org/account/avatar/00/10/30/1c/e160955d.jpg","nickname":"sky","note":"","ucode":"B29CA98AC45F88","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":396568,"discussion_content":"李兵老师的专栏里有，收到一部分就开始解析","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1632453210,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":1,"child_discussions":[{"author":{"id":1299095,"avatar":"https://static001.geekbang.org/account/avatar/00/13/d2/97/5f4cd8da.jpg","nickname":"虎虎生威的程坚强","note":"","ucode":"321C89298D3682","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1060892,"avatar":"https://static001.geekbang.org/account/avatar/00/10/30/1c/e160955d.jpg","nickname":"sky","note":"","ucode":"B29CA98AC45F88","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":403494,"discussion_content":"不是完整的能解析出来么？","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1634090396,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":396568,"ip_address":""},"score":403494,"extra":""}]}]},{"had_liked":false,"id":179918,"user_name":"Redhan","can_delete":false,"product_type":"c1","uid":1317133,"ip_address":"","ucode":"5AB18CDBF241AA","user_header":"https://static001.geekbang.org/account/avatar/00/14/19/0d/6d881bcc.jpg","comment_is_top":false,"comment_ctime":1582121582,"is_pvip":false,"replies":[{"id":"69878","content":"<br>1.大文件通常会分成小块多次传输，但如何分块、分多少协议不会管，需要通信两端自己定。<br><br>2.http协议只规定如何传输，但传输动作的发起不是协议来规定的，需要由客户端或者服务器来发起。一旦发起，那么传输过程就按http协议来了。","user_name":"作者回复","user_name_real":"chrono","uid":"1181974","ctime":1582165724,"ip_address":"","comment_id":179918,"utype":1}],"discussion_count":2,"race_medal":0,"score":"5877088878","product_id":100029001,"comment_content":"老师您好，问一个问题：<br>http的特点是一去一回，如果传输大文件，就需要多次的一去一回，那多次的一去一回是http控制的吗？","like_count":1,"discussions":[{"author":{"id":1181974,"avatar":"https://static001.geekbang.org/account/avatar/00/12/09/16/1161017c.jpg","nickname":"罗剑锋","note":"","ucode":"95678C988F24AB","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":484449,"discussion_content":"\n1.大文件通常会分成小块多次传输，但如何分块、分多少协议不会管，需要通信两端自己定。\n\n2.http协议只规定如何传输，但传输动作的发起不是协议来规定的，需要由客户端或者服务器来发起。一旦发起，那么传输过程就按http协议来了。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1582165724,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1061748,"avatar":"https://static001.geekbang.org/account/avatar/00/10/33/74/d9d143fa.jpg","nickname":"silentyears","note":"","ucode":"6E137BFEB874CA","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":353290,"discussion_content":"chunk传输大文件是一去多回吧","likes_number":2,"is_delete":false,"is_hidden":false,"ctime":1615116054,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":112377,"user_name":"业余草","can_delete":false,"product_type":"c1","uid":1126538,"ip_address":"","ucode":"99BDC1E629049D","user_header":"https://static001.geekbang.org/account/avatar/00/11/30/8a/b5ca7286.jpg","comment_is_top":false,"comment_ctime":1562725120,"is_pvip":false,"replies":[{"id":"40881","content":"服务器掌控数据，有很多办法可以限流限速，不是简单的客户端就能控制的。","user_name":"作者回复","user_name_real":"chrono","uid":"1181974","ctime":1562732457,"ip_address":"","comment_id":112377,"utype":1}],"discussion_count":2,"race_medal":0,"score":"5857692416","product_id":100029001,"comment_content":"数据的分段传输。把断点续传与断点下载搞懂，你就可以破解百度网盘的非会员限速功能了！","like_count":1,"discussions":[{"author":{"id":1181974,"avatar":"https://static001.geekbang.org/account/avatar/00/12/09/16/1161017c.jpg","nickname":"罗剑锋","note":"","ucode":"95678C988F24AB","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":457706,"discussion_content":"服务器掌控数据，有很多办法可以限流限速，不是简单的客户端就能控制的。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1562732457,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1466447,"avatar":"https://static001.geekbang.org/account/avatar/00/16/60/4f/db0e62b3.jpg","nickname":"Daiver","note":"","ucode":"9B1A03AFBC79BC","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":142058,"discussion_content":"分布式多线程下载","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1579446546,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":109853,"user_name":"虢國技醬","can_delete":false,"product_type":"c1","uid":1056807,"ip_address":"","ucode":"5A192262AA037E","user_header":"https://static001.geekbang.org/account/avatar/00/10/20/27/a6932fbe.jpg","comment_is_top":false,"comment_ctime":1562121294,"is_pvip":false,"replies":[{"id":"39790","content":"thanks。","user_name":"作者回复","user_name_real":"chrono","uid":"1181974","ctime":1562126960,"ip_address":"","comment_id":109853,"utype":1}],"discussion_count":1,"race_medal":0,"score":"5857088590","product_id":100029001,"comment_content":"讲的真好，简单清晰，赞","like_count":1,"discussions":[{"author":{"id":1181974,"avatar":"https://static001.geekbang.org/account/avatar/00/12/09/16/1161017c.jpg","nickname":"罗剑锋","note":"","ucode":"95678C988F24AB","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":456606,"discussion_content":"thanks。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1562126960,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":109740,"user_name":"啦啦啦","can_delete":false,"product_type":"c1","uid":1131687,"ip_address":"","ucode":"6B12EC90A62525","user_header":"https://static001.geekbang.org/account/avatar/00/11/44/a7/171c1e86.jpg","comment_is_top":false,"comment_ctime":1562084690,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"5857051986","product_id":100029001,"comment_content":"打卡打卡收获颇多","like_count":1},{"had_liked":false,"id":360828,"user_name":"曾泽浩","can_delete":false,"product_type":"c1","uid":1104601,"ip_address":"上海","ucode":"A7E5CF9E1571A2","user_header":"https://static001.geekbang.org/account/avatar/00/10/da/d9/f051962f.jpg","comment_is_top":false,"comment_ctime":1666885240,"is_pvip":false,"replies":[{"id":"131276","content":"服务器端很简单，知道了偏移量，手里有数据，自己算就可以了。","user_name":"作者回复","user_name_real":"编辑","uid":"1181974","ctime":1666929271,"ip_address":"上海","comment_id":360828,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1666885240","product_id":100029001,"comment_content":"服务器端怎么处理分块下载","like_count":0,"discussions":[{"author":{"id":1181974,"avatar":"https://static001.geekbang.org/account/avatar/00/12/09/16/1161017c.jpg","nickname":"罗剑锋","note":"","ucode":"95678C988F24AB","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":591914,"discussion_content":"服务器端很简单，知道了偏移量，手里有数据，自己算就可以了。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1666929272,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"上海"},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":360144,"user_name":"怪兽","can_delete":false,"product_type":"c1","uid":1324007,"ip_address":"上海","ucode":"3342C55CB83B08","user_header":"https://static001.geekbang.org/account/avatar/00/14/33/e7/145be2f9.jpg","comment_is_top":false,"comment_ctime":1666231343,"is_pvip":false,"replies":[{"id":"130998","content":"也许是排版的问题，实际做一下测试看看吧。","user_name":"作者回复","user_name_real":"编辑","uid":"1181974","ctime":1666232773,"ip_address":"上海","comment_id":360144,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1666231343","product_id":100029001,"comment_content":"老师，有个疑问，在&quot;多段数据&quot;小节的示例报文中，Accept-Ranges: bytes 和 --00000000001 之间为什么有2个空行？不应该是一个空行吗？","like_count":0,"discussions":[{"author":{"id":1181974,"avatar":"https://static001.geekbang.org/account/avatar/00/12/09/16/1161017c.jpg","nickname":"罗剑锋","note":"","ucode":"95678C988F24AB","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":591027,"discussion_content":"也许是排版的问题，实际做一下测试看看吧。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1666232773,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"上海"},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":350753,"user_name":"小山🐲","can_delete":false,"product_type":"c1","uid":1331892,"ip_address":"","ucode":"3ACF5EC9E0031C","user_header":"https://static001.geekbang.org/account/avatar/00/14/52/b4/c5e72e67.jpg","comment_is_top":false,"comment_ctime":1657164462,"is_pvip":true,"replies":[{"id":"127616","content":"这个就是应用程序自己来处理了，http只管分块。","user_name":"作者回复","user_name_real":"编辑","uid":"1181974","ctime":1657180633,"ip_address":"","comment_id":350753,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1657164462","product_id":100029001,"comment_content":"老师，分块传输，如果其中一块传输失败怎么处理呢？会有单独重发吗？","like_count":0,"discussions":[{"author":{"id":1181974,"avatar":"https://static001.geekbang.org/account/avatar/00/12/09/16/1161017c.jpg","nickname":"罗剑锋","note":"","ucode":"95678C988F24AB","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":579119,"discussion_content":"这个就是应用程序自己来处理了，http只管分块。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1657180633,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":347853,"user_name":"clemask","can_delete":false,"product_type":"c1","uid":1027141,"ip_address":"","ucode":"62315A976F84D5","user_header":"https://static001.geekbang.org/account/avatar/00/0f/ac/45/31fc5bfd.jpg","comment_is_top":false,"comment_ctime":1654514370,"is_pvip":true,"replies":[{"id":"126835","content":"在http&#47;1.1里是不能并发上传的，只能串行。<br><br>1&#47;2两种情况速度上没区别，但整个大文件传输会占用很多内存。","user_name":"作者回复","user_name_real":"编辑","uid":"1181974","ctime":1654682361,"ip_address":"","comment_id":347853,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1654514370","product_id":100029001,"comment_content":"在一个TCP连接中，①大文件分片后，对多个文件片进行并发上传（在一个TCP连接中多个http是排队处理的），与②对一个大文件上传，①②速度上有区别吗？","like_count":0,"discussions":[{"author":{"id":1181974,"avatar":"https://static001.geekbang.org/account/avatar/00/12/09/16/1161017c.jpg","nickname":"罗剑锋","note":"","ucode":"95678C988F24AB","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":575244,"discussion_content":"在http/1.1里是不能并发上传的，只能串行。\n\n1/2两种情况速度上没区别，但整个大文件传输会占用很多内存。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1654682361,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":347462,"user_name":"Geek_21a73c","can_delete":false,"product_type":"c1","uid":3014444,"ip_address":"","ucode":"104A4AD89DA6BC","user_header":"https://thirdwx.qlogo.cn/mmopen/vi_32/Q3auHgzwzM74658w9PQeTM4TcM14BzfpJnVLrsciaS26ibRwRbCE09ydI6UlZhFrJh7iaVLp2xxhBppVDKLyRRg9Q/132","comment_is_top":false,"comment_ctime":1654055725,"is_pvip":false,"replies":[{"id":"126692","content":"可以把课程里的步骤照着走一遍，是不是漏了哪步。","user_name":"作者回复","user_name_real":"编辑","uid":"1181974","ctime":1654086283,"ip_address":"","comment_id":347462,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1654055725","product_id":100029001,"comment_content":"cmd+Telnet 访问www.chrono.com时，没有看到分块数据和响应报文里的 chunked 数据格式,是因为我没打开openresty？","like_count":0,"discussions":[{"author":{"id":1181974,"avatar":"https://static001.geekbang.org/account/avatar/00/12/09/16/1161017c.jpg","nickname":"罗剑锋","note":"","ucode":"95678C988F24AB","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":574498,"discussion_content":"可以把课程里的步骤照着走一遍，是不是漏了哪步。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1654086283,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":344138,"user_name":"Geek_115bc8","can_delete":false,"product_type":"c1","uid":1673843,"ip_address":"","ucode":"71FBC9F02AFE1B","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/DYAIOgq83erXRaa98A3zjLDkOibUJV1254aQ4EYFTbSLJuEvD0nXicMNA8pLoxOfHf5kPTbGLXNicg8CPFH3Tn0mA/132","comment_is_top":false,"comment_ctime":1651292868,"is_pvip":false,"replies":[{"id":"125709","content":"分块传输的是一个完整的文件，比如说1G，分成1m，要传1000次，而范围传输只会传其中的一部分，比如就50m。","user_name":"作者回复","user_name_real":"编辑","uid":"1181974","ctime":1651539877,"ip_address":"","comment_id":344138,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1651292868","product_id":100029001,"comment_content":"想跳过片头，直接看正片，或者有段剧情很无聊，想拖动进度条快进几分钟，这实际上是想获取一个大文件其中的片段数据，而分块传输并没有这个能力。<br><br>这个为什么分块传输没有能力呢？他不是也将数据传输过来，然后拼接展示吗。快进也可以有数据的啊","like_count":0,"discussions":[{"author":{"id":1181974,"avatar":"https://static001.geekbang.org/account/avatar/00/12/09/16/1161017c.jpg","nickname":"罗剑锋","note":"","ucode":"95678C988F24AB","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":569716,"discussion_content":"分块传输的是一个完整的文件，比如说1G，分成1m，要传1000次，而范围传输只会传其中的一部分，比如就50m。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1651539877,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":342003,"user_name":"Geek8686","can_delete":false,"product_type":"c1","uid":2844974,"ip_address":"","ucode":"BC7F88C53FBBAC","user_header":"","comment_is_top":false,"comment_ctime":1649947235,"is_pvip":false,"replies":[{"id":"125015","content":"thanks.","user_name":"作者回复","user_name_real":"编辑","uid":"1181974","ctime":1650010150,"ip_address":"","comment_id":342003,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1649947235","product_id":100029001,"comment_content":"网上一搜http大文件传输，各种博客文章都是相同的内容，没想到在这里见到原创了","like_count":0,"discussions":[{"author":{"id":1181974,"avatar":"https://static001.geekbang.org/account/avatar/00/12/09/16/1161017c.jpg","nickname":"罗剑锋","note":"","ucode":"95678C988F24AB","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":563490,"discussion_content":"thanks.","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1650010150,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":323814,"user_name":"浮石沉木","can_delete":false,"product_type":"c1","uid":2223167,"ip_address":"","ucode":"D585768321B84A","user_header":"https://thirdwx.qlogo.cn/mmopen/vi_32/mQddXC7nRiaKHTwdficicTB3bH0q5ic5UoSab51Omic7eyLBz0SNcvbLpQnNib7zP1yJFm7xxx4ia81iahfibRVnbTwHmhw/132","comment_is_top":false,"comment_ctime":1638172730,"is_pvip":true,"replies":[{"id":"117529","content":"1. 图片类不适合用普通压缩算法，可以考虑图片优化程序，比如pagespeed。<br><br>2.http协议的容错率比较高，浏览器、服务器都会尽量去处理内容，一般如果没有Accept-Encoding，服务器不会主动压缩。<br>但如果收到的数据就说明是压缩的，浏览器当然也可以解压缩，这个也不是什么难事。","user_name":"作者回复","user_name_real":"编辑","uid":"1181974","ctime":1638177707,"ip_address":"","comment_id":323814,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1638172730","product_id":100029001,"comment_content":"老师有个问题请教一下：<br>1.对于数据量比较大的png图片用什么压缩算法比较合适？<br>2.必须要请求头添加Accept-Encoding吗，如果我请求头不带有Accept-Encoding,直接在响应头中添加Content-Encoding，浏览器拿到返回的数据会自动解压吗","like_count":0,"discussions":[{"author":{"id":1181974,"avatar":"https://static001.geekbang.org/account/avatar/00/12/09/16/1161017c.jpg","nickname":"罗剑锋","note":"","ucode":"95678C988F24AB","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":534386,"discussion_content":"1. 图片类不适合用普通压缩算法，可以考虑图片优化程序，比如pagespeed。\n\n2.http协议的容错率比较高，浏览器、服务器都会尽量去处理内容，一般如果没有Accept-Encoding，服务器不会主动压缩。\n但如果收到的数据就说明是压缩的，浏览器当然也可以解压缩，这个也不是什么难事。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1638177707,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":321459,"user_name":"路漫漫","can_delete":false,"product_type":"c1","uid":1273044,"ip_address":"","ucode":"F70F1DC612DE9D","user_header":"https://static001.geekbang.org/account/avatar/00/13/6c/d4/85ef1463.jpg","comment_is_top":false,"comment_ctime":1636884679,"is_pvip":false,"replies":[{"id":"116758","content":"比如说，可以用多段数据格式，在一次响应里发送多个文件。","user_name":"作者回复","user_name_real":"罗剑锋","uid":"1181974","ctime":1636935160,"ip_address":"","comment_id":321459,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1636884679","product_id":100029001,"comment_content":"老师，多段数据的请求方式是应用在什么业务场景下呢","like_count":0,"discussions":[{"author":{"id":1181974,"avatar":"https://static001.geekbang.org/account/avatar/00/12/09/16/1161017c.jpg","nickname":"罗剑锋","note":"","ucode":"95678C988F24AB","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":530293,"discussion_content":"比如说，可以用多段数据格式，在一次响应里发送多个文件。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1636935160,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":311293,"user_name":"肖小勇","can_delete":false,"product_type":"c1","uid":2693559,"ip_address":"","ucode":"2C3147C6190424","user_header":"https://thirdwx.qlogo.cn/mmopen/vi_32/KPhkPWv5GJzGOMfpr7zUuiaib7NC1sa03v5uEO0xgUCNiaKP5CORCicOGpgQ4CP42xE8kzx0ax70iaZW9ibOwvrDiaqhQ/132","comment_is_top":false,"comment_ctime":1631157489,"is_pvip":false,"replies":[{"id":"112854","content":"有的，可以看一下目录：www&#47;lua。","user_name":"作者回复","user_name_real":"罗剑锋","uid":"1181974","ctime":1631239965,"ip_address":"","comment_id":311293,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1631157489","product_id":100029001,"comment_content":"实验环境里的 URI“&#47;16-1”，这个试验环境在哪，http_study里没有哦","like_count":0,"discussions":[{"author":{"id":1181974,"avatar":"https://static001.geekbang.org/account/avatar/00/12/09/16/1161017c.jpg","nickname":"罗剑锋","note":"","ucode":"95678C988F24AB","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":526551,"discussion_content":"有的，可以看一下目录：www/lua。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1631239965,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":303746,"user_name":"Geek_d1b4e1","can_delete":false,"product_type":"c1","uid":1515679,"ip_address":"","ucode":"349C689216672D","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/ZRuGPK9Rmo5icH649EpibcT5XL5zm15H62A0MWsuC3yNWNcke6j5gxF4Q5b6J7GQbOiczMAovceoQObttyP8HEfzQ/132","comment_is_top":false,"comment_ctime":1626959714,"is_pvip":true,"replies":[{"id":"109943","content":"<br>1.tcp自己有缓冲区，不会一下子就发完的，大数据量的发送就受限于tcp，而不是http了。<br><br>2.当然，客户端需要自己去掉分隔标记组装起来。","user_name":"作者回复","user_name_real":"罗剑锋","uid":"1181974","ctime":1627000921,"ip_address":"","comment_id":303746,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1626959714","product_id":100029001,"comment_content":"1. 如果一个大文件没有压缩，也没有分块传输会有什么后果，会占满内存还是表现出其他现象？<br>2. 分块后的文件到达客户端后是不是也是在内存中完成组装的呢？","like_count":0,"discussions":[{"author":{"id":1181974,"avatar":"https://static001.geekbang.org/account/avatar/00/12/09/16/1161017c.jpg","nickname":"罗剑锋","note":"","ucode":"95678C988F24AB","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":523808,"discussion_content":"\n1.tcp自己有缓冲区，不会一下子就发完的，大数据量的发送就受限于tcp，而不是http了。\n\n2.当然，客户端需要自己去掉分隔标记组装起来。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1627000921,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":303086,"user_name":"吃货的自我修养","can_delete":false,"product_type":"c1","uid":2124390,"ip_address":"","ucode":"A62DDD09847877","user_header":"","comment_is_top":false,"comment_ctime":1626582177,"is_pvip":false,"replies":[{"id":"109673","content":"great","user_name":"作者回复","user_name_real":"罗剑锋","uid":"1181974","ctime":1626593402,"ip_address":"","comment_id":303086,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1626582177","product_id":100029001,"comment_content":"用Chrome或者微软Microsoft Edge浏览器，可以安装ModHeader插件来测试请求头，不过像range这类头字段，用来学习测试过之后记得把插件关掉，不然别的网页会因为加了这个头字段而显示异常，最后讲的使用范围请求去获取多段数据，也可以用postman来进行测试，相对于telnet更方便，效果也是一样的","like_count":0,"discussions":[{"author":{"id":1181974,"avatar":"https://static001.geekbang.org/account/avatar/00/12/09/16/1161017c.jpg","nickname":"罗剑锋","note":"","ucode":"95678C988F24AB","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":523548,"discussion_content":"great","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1626593402,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":300037,"user_name":"Geek_1a0e29","can_delete":false,"product_type":"c1","uid":1478573,"ip_address":"","ucode":"DFFDEA3A9A23D5","user_header":"https://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTKBS8Xf2qLLpEe6eXkkTr7PPK0WeyHZe7NzP8S8pUGyyfO5SkSSx9E5S4qdtcINAmdfdSXUKWusvA/132","comment_is_top":false,"comment_ctime":1624960089,"is_pvip":false,"replies":[{"id":"108809","content":"web sever发展了这么多年，range作为一个基本且常用的功能，应该是都支持了。<br><br>常用的web server就这么几家，选起来容易，替换也不难。","user_name":"作者回复","user_name_real":"罗剑锋","uid":"1181974","ctime":1625014235,"ip_address":"","comment_id":300037,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1624960089","product_id":100029001,"comment_content":"老师是不是所有的web服务器都支持范围请求？我把视频放置到IIS和nginx都可以直接使用video标签进行视频分段播放，我F12看到请求和您说的是一致的。","like_count":0,"discussions":[{"author":{"id":1181974,"avatar":"https://static001.geekbang.org/account/avatar/00/12/09/16/1161017c.jpg","nickname":"罗剑锋","note":"","ucode":"95678C988F24AB","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":522621,"discussion_content":"web sever发展了这么多年，range作为一个基本且常用的功能，应该是都支持了。\n\n常用的web server就这么几家，选起来容易，替换也不难。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1625014235,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":297453,"user_name":"Amark","can_delete":false,"product_type":"c1","uid":1121326,"ip_address":"","ucode":"E5F48633654002","user_header":"https://static001.geekbang.org/account/avatar/00/11/1c/2e/93812642.jpg","comment_is_top":false,"comment_ctime":1623560976,"is_pvip":false,"replies":[{"id":"108024","content":"当然可以，两者不冲突。","user_name":"作者回复","user_name_real":"罗剑锋","uid":"1181974","ctime":1623635959,"ip_address":"","comment_id":297453,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1623560976","product_id":100029001,"comment_content":"可以同时使用分块跟范围请求吗","like_count":0,"discussions":[{"author":{"id":1181974,"avatar":"https://static001.geekbang.org/account/avatar/00/12/09/16/1161017c.jpg","nickname":"罗剑锋","note":"","ucode":"95678C988F24AB","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":521828,"discussion_content":"当然可以，两者不冲突。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1623635959,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":293297,"user_name":"darren","can_delete":false,"product_type":"c1","uid":1151837,"ip_address":"","ucode":"4726076845920B","user_header":"https://static001.geekbang.org/account/avatar/00/11/93/5d/91f1d849.jpg","comment_is_top":false,"comment_ctime":1621326417,"is_pvip":false,"replies":[{"id":"106249","content":"对Java编程不熟，处理chunked数据其实就是处理字符串，因为chunked格式很清晰，用正则应该是最容易的办法了吧。<br><br>","user_name":"作者回复","user_name_real":"罗剑锋","uid":"1181974","ctime":1621394393,"ip_address":"","comment_id":293297,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1621326417","product_id":100029001,"comment_content":"老师，请教个问题：<br>最近在使用java中nio非阻塞形式进行http请求，响应报文因为采用的chunked方式，所以转换成字符串后在响应主体中多了很多chunked长度信息。我要怎么高效的把这些长度信息去除得到正确的响应主体？HttpUrlConnection内部不知道是怎么处理这个问题的？","like_count":0,"discussions":[{"author":{"id":1181974,"avatar":"https://static001.geekbang.org/account/avatar/00/12/09/16/1161017c.jpg","nickname":"罗剑锋","note":"","ucode":"95678C988F24AB","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":520147,"discussion_content":"对Java编程不熟，处理chunked数据其实就是处理字符串，因为chunked格式很清晰，用正则应该是最容易的办法了吧。\n\n","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1621394393,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":289964,"user_name":"Geek_Maggie","can_delete":false,"product_type":"c1","uid":1609708,"ip_address":"","ucode":"3B74088B2C7B93","user_header":"https://static001.geekbang.org/account/avatar/00/18/8f/ec/c30b45d4.jpg","comment_is_top":false,"comment_ctime":1619279970,"is_pvip":false,"replies":[{"id":"105140","content":"因为这个域名实际上并不存在，所以需要改hosts文件，这样才能解析到本机。<br><br>当然也可以直接用127.0.0.1或者localhost，不用域名也可以。","user_name":"作者回复","user_name_real":"罗剑锋","uid":"1181974","ctime":1619312152,"ip_address":"","comment_id":289964,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1619279970","product_id":100029001,"comment_content":"老师 我访问你的URL地址：www.chrono.com&#47;16-1 没有内容，是否因为您对电脑设置了hosts，而且还在16-1文件夹下放了地址？","like_count":0,"discussions":[{"author":{"id":1181974,"avatar":"https://static001.geekbang.org/account/avatar/00/12/09/16/1161017c.jpg","nickname":"罗剑锋","note":"","ucode":"95678C988F24AB","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":519070,"discussion_content":"因为这个域名实际上并不存在，所以需要改hosts文件，这样才能解析到本机。\n\n当然也可以直接用127.0.0.1或者localhost，不用域名也可以。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1619312152,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":283944,"user_name":"Ken","can_delete":false,"product_type":"c1","uid":1988131,"ip_address":"","ucode":"DB59170F4FC74E","user_header":"https://static001.geekbang.org/account/avatar/00/1e/56/23/848ac9f4.jpg","comment_is_top":false,"comment_ctime":1615990604,"is_pvip":false,"replies":[{"id":"103027","content":"说的很对，http协议在这点上确实没有给出解决办法。<br><br>好在http很灵活，应用可以自己定义完整性校验措施，所以用http传输也是可以的。","user_name":"作者回复","user_name_real":"罗剑锋","uid":"1181974","ctime":1616030362,"ip_address":"","comment_id":283944,"utype":1}],"discussion_count":2,"race_medal":0,"score":"1615990604","product_id":100029001,"comment_content":"感觉只使用偏移量来拼接块太简单了吧？没有校验功能吗？如果传输的数据很大，出错机率会增加，万一有块出错问题，岂不是合并会出现问题或数据不完整？","like_count":0,"discussions":[{"author":{"id":1181974,"avatar":"https://static001.geekbang.org/account/avatar/00/12/09/16/1161017c.jpg","nickname":"罗剑锋","note":"","ucode":"95678C988F24AB","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":517188,"discussion_content":"说的很对，http协议在这点上确实没有给出解决办法。\n\n好在http很灵活，应用可以自己定义完整性校验措施，所以用http传输也是可以的。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1616030362,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1988131,"avatar":"https://static001.geekbang.org/account/avatar/00/1e/56/23/848ac9f4.jpg","nickname":"Ken","note":"","ucode":"DB59170F4FC74E","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":358913,"discussion_content":"谢谢老师。明白了。还得自己去实现数据校验和完整性。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1616074759,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":283081,"user_name":"刘杰","can_delete":false,"product_type":"c1","uid":2460800,"ip_address":"","ucode":"5B3A55700D6063","user_header":"https://static001.geekbang.org/account/avatar/00/25/8c/80/7310baac.jpg","comment_is_top":false,"comment_ctime":1615540507,"is_pvip":false,"replies":[{"id":"102717","content":"nice.","user_name":"作者回复","user_name_real":"罗剑锋","uid":"1181974","ctime":1615554510,"ip_address":"","comment_id":283081,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1615540507","product_id":100029001,"comment_content":"1、不会有影响<br>2、压缩前的文件","like_count":0,"discussions":[{"author":{"id":1181974,"avatar":"https://static001.geekbang.org/account/avatar/00/12/09/16/1161017c.jpg","nickname":"罗剑锋","note":"","ucode":"95678C988F24AB","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":516929,"discussion_content":"nice.","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1615554510,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":282895,"user_name":"Geek_065895","can_delete":false,"product_type":"c1","uid":2136069,"ip_address":"","ucode":"2E6FCCC78E5767","user_header":"https://thirdwx.qlogo.cn/mmopen/vi_32/rxz5aKicRkvqWmt6c6c7eayHvh577uibBTVQzcJKwSTqI9FaxZSRlx7NRVw4atWpqER8ncA5jErQb3wb4cPzZxlA/132","comment_is_top":false,"comment_ctime":1615454178,"is_pvip":false,"replies":[{"id":"102681","content":"range与content-type没有直接关系，当然可以有了，表示body的类型。","user_name":"作者回复","user_name_real":"罗剑锋","uid":"1181974","ctime":1615505881,"ip_address":"","comment_id":282895,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1615454178","product_id":100029001,"comment_content":"range请求，http应答报文有content-type字段吗？","like_count":0,"discussions":[{"author":{"id":1181974,"avatar":"https://static001.geekbang.org/account/avatar/00/12/09/16/1161017c.jpg","nickname":"罗剑锋","note":"","ucode":"95678C988F24AB","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":516871,"discussion_content":"range与content-type没有直接关系，当然可以有了，表示body的类型。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1615505881,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":234044,"user_name":"某知名患者","can_delete":false,"product_type":"c1","uid":1852186,"ip_address":"","ucode":"E87EF5059DAB0F","user_header":"https://static001.geekbang.org/account/avatar/00/1c/43/1a/53bd8833.jpg","comment_is_top":false,"comment_ctime":1594562230,"is_pvip":true,"replies":[{"id":"86373","content":"看样子好像访问的不是本机127.0.0.1吧，是不是先检查一下hosts，保证正确访问了实验环境。","user_name":"作者回复","user_name_real":"罗剑锋","uid":"1181974","ctime":1594601632,"ip_address":"","comment_id":234044,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1594562230","product_id":100029001,"comment_content":"telnet&gt;  open www.chrono.com 80<br>Trying 91.195.241.136...<br>Connected to www.chrono.com.<br>Escape character is &#39;^]&#39;.<br>GET &#47;16-2 HTTP&#47;1.1<br>Host: www.chrono.com<br>Range: bytes=0-9, 20-29<br><br>HTTP&#47;1.1 200 OK<br>date: Sun, 12 Jul 2020 12:41:41 GMT<br>content-type: text&#47;html; charset=UTF-8<br>transfer-encoding: chunked<br>vary: Accept-Encoding<br>expires: Mon, 26 Jul 1997 05:00:00 GMT<br>cache-control: no-store, no-cache, must-revalidate, post-check=0, pre-check=0<br>pragma: no-cache 请问一下我的怎么返回都是200？我用的是mac","like_count":0,"discussions":[{"author":{"id":1181974,"avatar":"https://static001.geekbang.org/account/avatar/00/12/09/16/1161017c.jpg","nickname":"罗剑锋","note":"","ucode":"95678C988F24AB","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":501252,"discussion_content":"看样子好像访问的不是本机127.0.0.1吧，是不是先检查一下hosts，保证正确访问了实验环境。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1594601632,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":226335,"user_name":"潇潇雨歇","can_delete":false,"product_type":"c1","uid":1251429,"ip_address":"","ucode":"4BD52BF0F0A084","user_header":"https://static001.geekbang.org/account/avatar/00/13/18/65/35361f02.jpg","comment_is_top":false,"comment_ctime":1592039859,"is_pvip":false,"replies":[{"id":"83369","content":"great。","user_name":"作者回复","user_name_real":"罗剑锋","uid":"1181974","ctime":1592091649,"ip_address":"","comment_id":226335,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1592039859","product_id":100029001,"comment_content":"1、不会，<br>2、针对原文件，也就是传输前的初始文件，比如原文件是gzip格式的，那么就是gzip格式文件；如果不是压缩文件而是在传输过程中压缩，那么还是那个没有压缩的文件","like_count":0,"discussions":[{"author":{"id":1181974,"avatar":"https://static001.geekbang.org/account/avatar/00/12/09/16/1161017c.jpg","nickname":"罗剑锋","note":"","ucode":"95678C988F24AB","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":498199,"discussion_content":"great。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1592091649,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":226260,"user_name":"Maske","can_delete":false,"product_type":"c1","uid":1696847,"ip_address":"","ucode":"A19BB41A47E852","user_header":"https://static001.geekbang.org/account/avatar/00/19/e4/4f/df6d810d.jpg","comment_is_top":false,"comment_ctime":1592018504,"is_pvip":true,"replies":[{"id":"83340","content":"<br>1.不对，可以参考其他的回答<br><br>2.如果磁盘上的是gzip，那么就应用于gzip，如果磁盘上的未压缩，是在传输中压缩，那么就应用于原文件。<br>总之range是用在原文件上。","user_name":"作者回复","user_name_real":"罗剑锋","uid":"1181974","ctime":1592039595,"ip_address":"","comment_id":226260,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1592018504","product_id":100029001,"comment_content":"1.如果数据中包含CRLF，当前分块会被当做已结束，CRLF之后会被当做下一个分块来处理，造成客户端拼凑数据出错，当然这不影响数据的正常传输，只是客户端接收到数据不会是想要的了。<br>2.应用于原文件。我理解的数据压缩是限于传输层面的，服务器将数据压缩好之后再然后给客户端，客户端将接收到的数据解压缩后才会读取。","like_count":0,"discussions":[{"author":{"id":1181974,"avatar":"https://static001.geekbang.org/account/avatar/00/12/09/16/1161017c.jpg","nickname":"罗剑锋","note":"","ucode":"95678C988F24AB","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":498169,"discussion_content":"\n1.不对，可以参考其他的回答\n\n2.如果磁盘上的是gzip，那么就应用于gzip，如果磁盘上的未压缩，是在传输中压缩，那么就应用于原文件。\n总之range是用在原文件上。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1592039595,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":222557,"user_name":"欢乐的小马驹","can_delete":false,"product_type":"c1","uid":1078951,"ip_address":"","ucode":"B594106688CEE7","user_header":"https://static001.geekbang.org/account/avatar/00/10/76/a7/374e86a7.jpg","comment_is_top":false,"comment_ctime":1590833656,"is_pvip":false,"replies":[{"id":"82057","content":"可以看一下16-3.lua的源码，它是直接拼了两个字符串发给客户端的，我怀疑是不是访问的uri错了。","user_name":"作者回复","user_name_real":"罗剑锋","uid":"1181974","ctime":1590839971,"ip_address":"","comment_id":222557,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1590833656","product_id":100029001,"comment_content":"老师，我使用16-3去做实验。就没有发现Range、Content-Range等字段。但是会把文件直接给下载下俩。我就有点困惑，是怎么回事呢？","like_count":0,"discussions":[{"author":{"id":1181974,"avatar":"https://static001.geekbang.org/account/avatar/00/12/09/16/1161017c.jpg","nickname":"罗剑锋","note":"","ucode":"95678C988F24AB","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":496842,"discussion_content":"可以看一下16-3.lua的源码，它是直接拼了两个字符串发给客户端的，我怀疑是不是访问的uri错了。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1590839971,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":216532,"user_name":"yuh","can_delete":false,"product_type":"c1","uid":1159699,"ip_address":"","ucode":"81DA37A47B1757","user_header":"https://static001.geekbang.org/account/avatar/00/11/b2/13/2f1dbd11.jpg","comment_is_top":false,"comment_ctime":1589277883,"is_pvip":false,"replies":[{"id":"80172","content":"Content-length字段非常重要，没有这个字段，接收方怎么知道后面要发多少body数据呢。<br><br>这是在任何协议里都必须有的一个字段，标记包数据的长度。<br><br>只不过http比较宽松，允许没有，这就对接收方造成了很大的麻烦，要想一些办法去判断包结束。","user_name":"作者回复","user_name_real":"chrono","uid":"1181974","ctime":1589331920,"ip_address":"","comment_id":216532,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1589277883","product_id":100029001,"comment_content":"老师，不是很明白Content-length的应用场景，<br>请问除了在使用range请求部分数据的情况下用于计算下一次请求那部分数据，还有别的使用场景么？<br><br>好像这个字段可以客户端的request请求头发送给服务器断，并且根据keep-alive的开启与否，会有不一样的数据返回。","like_count":0,"discussions":[{"author":{"id":1181974,"avatar":"https://static001.geekbang.org/account/avatar/00/12/09/16/1161017c.jpg","nickname":"罗剑锋","note":"","ucode":"95678C988F24AB","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":494852,"discussion_content":"Content-length字段非常重要，没有这个字段，接收方怎么知道后面要发多少body数据呢。\n\n这是在任何协议里都必须有的一个字段，标记包数据的长度。\n\n只不过http比较宽松，允许没有，这就对接收方造成了很大的麻烦，要想一些办法去判断包结束。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1589331920,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":215209,"user_name":"cc","can_delete":false,"product_type":"c1","uid":1697629,"ip_address":"","ucode":"114C613276C6AC","user_header":"https://static001.geekbang.org/account/avatar/00/19/e7/5d/deeb2580.jpg","comment_is_top":false,"comment_ctime":1588929601,"is_pvip":false,"replies":[{"id":"79705","content":"两者没有直接的关系。<br><br>chunk是大数据分批次，比如上传文件，很大，就要用chunk流式传输。<br><br>range是取数据中的一小段，像是切片，比如下载视频，先下前1分钟，然后跳到中间10分钟。","user_name":"作者回复","user_name_real":"chrono","uid":"1181974","ctime":1588985983,"ip_address":"","comment_id":215209,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1588929601","product_id":100029001,"comment_content":"老师，chunk和range是怎么区分的呢，他两有关系吗，感觉有点混淆了，能不能举两个场景呢？","like_count":0,"discussions":[{"author":{"id":1181974,"avatar":"https://static001.geekbang.org/account/avatar/00/12/09/16/1161017c.jpg","nickname":"罗剑锋","note":"","ucode":"95678C988F24AB","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":494355,"discussion_content":"两者没有直接的关系。\n\nchunk是大数据分批次，比如上传文件，很大，就要用chunk流式传输。\n\nrange是取数据中的一小段，像是切片，比如下载视频，先下前1分钟，然后跳到中间10分钟。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1588985983,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":211668,"user_name":"辛有慧","can_delete":false,"product_type":"c1","uid":1779471,"ip_address":"","ucode":"ACC5AD054EB5E5","user_header":"","comment_is_top":false,"comment_ctime":1587993676,"is_pvip":false,"replies":[{"id":"78711","content":"是的，先range再zip。","user_name":"作者回复","user_name_real":"chrono","uid":"1181974","ctime":1588038396,"ip_address":"","comment_id":211668,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1587993676","product_id":100029001,"comment_content":"range的一段内容在传输的时候是否也是压缩的？比如说请求range 100字节，压缩网络传输40字节，收到40字节解压又得到100字节","like_count":0,"discussions":[{"author":{"id":1181974,"avatar":"https://static001.geekbang.org/account/avatar/00/12/09/16/1161017c.jpg","nickname":"罗剑锋","note":"","ucode":"95678C988F24AB","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":493329,"discussion_content":"是的，先range再zip。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1588038396,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":211121,"user_name":"Teresa","can_delete":false,"product_type":"c1","uid":1698219,"ip_address":"","ucode":"6106B84BDC30AF","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/PiajxSqBRaEKkDB6420zwODZTJL6icKKTpyFKuVF9GRjj1V5ziaibADbrpDMmicF8Ad5fmBjycibEg3yhpwlVOLzzxRQ/132","comment_is_top":false,"comment_ctime":1587897862,"is_pvip":false,"replies":[{"id":"78538","content":"<br>1.理解的对，这个分块是由http协议来完成的，也可以说是你调用的http发送底层函数，不需要应用去关心。<br><br>2.应用拿数据的时候底层函数会自动去掉分块标记，拼成一个完整的报文，应用也不用关心。<br><br>3.你也可以调用底层函数逐块获取数据。<br><br>4.关键在于你工作在哪个层次，如果是http上的应用，就不关心这些细节，如果是http协议的实现，就要看协议是怎么规定的，然后处理这些细节。","user_name":"作者回复","user_name_real":"chrono","uid":"1181974","ctime":1587948768,"ip_address":"","comment_id":211121,"utype":1}],"discussion_count":2,"race_medal":0,"score":"1587897862","product_id":100029001,"comment_content":"前面的章节好理解，到了这节就开始有点晕了，也许可能是没怎么做过这方面的业务。想确认一个问题，就是不管是分段和分块传输，一块一块分开传输的实现是http内部去做的吧？都是在一个连接里。所以它是如何实现一块一块的传输，在我们实际使用或写应用的时候，是不用我们去关心和实现的吧？那在我们接收数据的时候，是最后一下子拿一整个数据？还是有一些接口可以提供我们在http边请求后边数据的同时我们随时拿到前面已请求的数据呢？","like_count":0,"discussions":[{"author":{"id":1181974,"avatar":"https://static001.geekbang.org/account/avatar/00/12/09/16/1161017c.jpg","nickname":"罗剑锋","note":"","ucode":"95678C988F24AB","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":493203,"discussion_content":"\n1.理解的对，这个分块是由http协议来完成的，也可以说是你调用的http发送底层函数，不需要应用去关心。\n\n2.应用拿数据的时候底层函数会自动去掉分块标记，拼成一个完整的报文，应用也不用关心。\n\n3.你也可以调用底层函数逐块获取数据。\n\n4.关键在于你工作在哪个层次，如果是http上的应用，就不关心这些细节，如果是http协议的实现，就要看协议是怎么规定的，然后处理这些细节。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1587948768,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1698219,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/PiajxSqBRaEKkDB6420zwODZTJL6icKKTpyFKuVF9GRjj1V5ziaibADbrpDMmicF8Ad5fmBjycibEg3yhpwlVOLzzxRQ/132","nickname":"Teresa","note":"","ucode":"6106B84BDC30AF","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":249644,"discussion_content":"谢谢老师。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1587950453,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":205025,"user_name":"张三","can_delete":false,"product_type":"c1","uid":1004092,"ip_address":"","ucode":"1155528FAE1546","user_header":"https://static001.geekbang.org/account/avatar/00/0f/52/3c/d6fcb93a.jpg","comment_is_top":false,"comment_ctime":1586510316,"is_pvip":false,"replies":[{"id":"76702","content":"不知道你这个环境的具体网络结构，不好说。<br><br>Connection：keep-alive是保存服务器和客户端的长连接，但如果服务器真停止服务了它也不会连上，所以应该再去找其他的原因。","user_name":"作者回复","user_name_real":"chrono","uid":"1181974","ctime":1586585633,"ip_address":"","comment_id":205025,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1586510316","product_id":100029001,"comment_content":"老师，最近在看您的这个专栏，很喜欢，今天突然用到了一些知识，我们在环境上测试负载均衡的时候故意关掉一台机，用GSS link通过postman访问另一台机就不行了，可是别的同事如果第一次访问是可以的。猜想了很多可能，比如postman缓存，负载均衡那里的缓存机制等等。后来发现postman在发送请求时自动加了Connection：keep-alive这个header，去掉之后就可以把请求切换到另一台机了。不知道我的这个猜想和结果对不对","like_count":0,"discussions":[{"author":{"id":1181974,"avatar":"https://static001.geekbang.org/account/avatar/00/12/09/16/1161017c.jpg","nickname":"罗剑锋","note":"","ucode":"95678C988F24AB","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":491357,"discussion_content":"不知道你这个环境的具体网络结构，不好说。\n\nConnection：keep-alive是保存服务器和客户端的长连接，但如果服务器真停止服务了它也不会连上，所以应该再去找其他的原因。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1586585633,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":204887,"user_name":"一只鱼","can_delete":false,"product_type":"c1","uid":1272756,"ip_address":"","ucode":"44C6751552953B","user_header":"https://static001.geekbang.org/account/avatar/00/13/6b/b4/47c548fd.jpg","comment_is_top":false,"comment_ctime":1586486657,"is_pvip":true,"replies":[{"id":"76555","content":"当然是可以的。","user_name":"作者回复","user_name_real":"chrono","uid":"1181974","ctime":1586487657,"ip_address":"","comment_id":204887,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1586486657","product_id":100029001,"comment_content":"问题：范围请求是针对原文件(这里就假如是一个超大文本，毕竟 gzip 对文本效果更好)的，那么当服务器根据范围从原文件中拿到某个片段后，能不能把这部分文件 gzip 之后传递给客户端呢？","like_count":0,"discussions":[{"author":{"id":1181974,"avatar":"https://static001.geekbang.org/account/avatar/00/12/09/16/1161017c.jpg","nickname":"罗剑锋","note":"","ucode":"95678C988F24AB","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":491317,"discussion_content":"当然是可以的。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1586487657,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":199956,"user_name":"Change","can_delete":false,"product_type":"c1","uid":1161260,"ip_address":"","ucode":"FB60D2378C9F02","user_header":"https://static001.geekbang.org/account/avatar/00/11/b8/2c/0f7baf3a.jpg","comment_is_top":false,"comment_ctime":1585521704,"is_pvip":false,"replies":[{"id":"74828","content":"总结的挺好的。<br><br>其实多块传输这个的确相当麻烦，我这好久没用都有些忘了，还得再看一遍自己写的文字，笑。","user_name":"作者回复","user_name_real":"chrono","uid":"1181974","ctime":1585532685,"ip_address":"","comment_id":199956,"utype":1}],"discussion_count":2,"race_medal":2,"score":"1585521704","product_id":100029001,"comment_content":"总结：<br>通过以看视频为例理解分块传输与范围请求的区别：<br> 1.分块传输在视频中只能一块一块连续的看不能实现快进快退，<br> 2.数据长度：单块数据长度由服务器决定，范围请求单段数据长度由客户端决定（正常情况下）<br> 3.请求次数：分块传输请求-响应一次，范围请求为多次。<br>范围请求与多段数据的区别：<br> 1.范围请求每次只能设置一段范围，多段可设置多段范围<br>多段数据的应用场景有哪些，暂时没想到。<br>以上为总结内容，望老师指正。<br><br><br>","like_count":0,"discussions":[{"author":{"id":1181974,"avatar":"https://static001.geekbang.org/account/avatar/00/12/09/16/1161017c.jpg","nickname":"罗剑锋","note":"","ucode":"95678C988F24AB","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":489904,"discussion_content":"总结的挺好的。\n\n其实多块传输这个的确相当麻烦，我这好久没用都有些忘了，还得再看一遍自己写的文字，笑。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1585532685,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1779471,"avatar":"","nickname":"辛有慧","note":"","ucode":"ACC5AD054EB5E5","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":250213,"discussion_content":"范围请求，请求的范围过大的时候，是不是又采用了多段传输呢？","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1587996881,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":199372,"user_name":"Change","can_delete":false,"product_type":"c1","uid":1161260,"ip_address":"","ucode":"FB60D2378C9F02","user_header":"https://static001.geekbang.org/account/avatar/00/11/b8/2c/0f7baf3a.jpg","comment_is_top":false,"comment_ctime":1585487944,"is_pvip":false,"replies":[{"id":"74827","content":"我这里是从0计数，所以第10个，实际上是第11个，表述上有点省略，对造成的误解表示歉意。","user_name":"作者回复","user_name_real":"chrono","uid":"1181974","ctime":1585532589,"ip_address":"","comment_id":199372,"utype":1}],"discussion_count":1,"race_medal":2,"score":"1585487944","product_id":100029001,"comment_content":"“10-”是从第 10 个字节开始到文档末尾，相当于“10-99”；<br>老师这句不太明白，如果是从第10个字节开始，那么范围不应该是”9-99”;如果按照”10-99”的范围表示不应该是从第11个字节开始么？","like_count":0,"discussions":[{"author":{"id":1181974,"avatar":"https://static001.geekbang.org/account/avatar/00/12/09/16/1161017c.jpg","nickname":"罗剑锋","note":"","ucode":"95678C988F24AB","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":489825,"discussion_content":"我这里是从0计数，所以第10个，实际上是第11个，表述上有点省略，对造成的误解表示歉意。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1585532589,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":185513,"user_name":"爱看书的蜗牛","can_delete":false,"product_type":"c1","uid":1115276,"ip_address":"","ucode":"02A280A16F162D","user_header":"https://static001.geekbang.org/account/avatar/00/11/04/8c/ce36a2d0.jpg","comment_is_top":false,"comment_ctime":1583596794,"is_pvip":false,"replies":[{"id":"71809","content":"<br>1.按照标准规定，有了chunked就不应该有content length，应该忽略这个字段，只用chunked方式来接收数据。<br><br>2.按照chunked编码方式，收到结束标志就表明body传完了。","user_name":"作者回复","user_name_real":"chrono","uid":"1181974","ctime":1583718138,"ip_address":"","comment_id":185513,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1583596794","product_id":100029001,"comment_content":"老师，我最近遇到了客户请求头既有chunked 又有Content-Length的情况，请问Content-Length值是服务端研发自己计算好压缩前的大小放进去吗？这种实现方式是否不常用？一般情况下chunked如何计算字节数呢？","like_count":0,"discussions":[{"author":{"id":1181974,"avatar":"https://static001.geekbang.org/account/avatar/00/12/09/16/1161017c.jpg","nickname":"罗剑锋","note":"","ucode":"95678C988F24AB","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":486389,"discussion_content":"\n1.按照标准规定，有了chunked就不应该有content length，应该忽略这个字段，只用chunked方式来接收数据。\n\n2.按照chunked编码方式，收到结束标志就表明body传完了。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1583718138,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":177920,"user_name":"saber","can_delete":false,"product_type":"c1","uid":1000259,"ip_address":"","ucode":"C7E060792B0499","user_header":"https://static001.geekbang.org/account/avatar/00/0f/43/43/9d823d8e.jpg","comment_is_top":false,"comment_ctime":1581528660,"is_pvip":false,"replies":[{"id":"69047","content":"失败就只能重新发请求了，在http里没有什么失败恢复的办法，就只能这样。<br><br>可以把分块设的小一些，这样失败的重传成本也不高，勉强算是个补救措施。","user_name":"作者回复","user_name_real":"chrono","uid":"1181974","ctime":1581558732,"ip_address":"","comment_id":177920,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1581528660","product_id":100029001,"comment_content":"老师，比如快进的时候，客服端需要一次发多个请求，为了缓存数据，要是其中一个分块的请求失败了怎么办呢","like_count":0,"discussions":[{"author":{"id":1181974,"avatar":"https://static001.geekbang.org/account/avatar/00/12/09/16/1161017c.jpg","nickname":"罗剑锋","note":"","ucode":"95678C988F24AB","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":483595,"discussion_content":"失败就只能重新发请求了，在http里没有什么失败恢复的办法，就只能这样。\n\n可以把分块设的小一些，这样失败的重传成本也不高，勉强算是个补救措施。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1581558732,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":168638,"user_name":"Wr","can_delete":false,"product_type":"c1","uid":1713790,"ip_address":"","ucode":"738B316AA2AD66","user_header":"https://static001.geekbang.org/account/avatar/00/1a/26/7e/823c083e.jpg","comment_is_top":false,"comment_ctime":1578129015,"is_pvip":false,"replies":[{"id":"65553","content":"<br>1.对。<br><br>2.range作用于“原始文件”，如果原始文件是压缩的就请求压缩的部分，如果原始文件没有被压缩，那就是原始部分，传输中的压缩不影响。<br>你理解的很对。","user_name":"作者回复","user_name_real":"chrono","uid":"1181974","ctime":1578273497,"ip_address":"","comment_id":168638,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1578129015","product_id":100029001,"comment_content":"1. 不影响，前面有length说明data大小<br>2.如果这个原文是gzip文件，那就是压缩文件后，我理解为，如果你请求视频播出的range为5-10min，这个5-10min应该是指原文件没有被压缩的时候，不管你传输的过程中是否对它做压缩处理，不知道对不对，如果有误请老师指正","like_count":0,"discussions":[{"author":{"id":1181974,"avatar":"https://static001.geekbang.org/account/avatar/00/12/09/16/1161017c.jpg","nickname":"罗剑锋","note":"","ucode":"95678C988F24AB","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":480277,"discussion_content":"\n1.对。\n\n2.range作用于“原始文件”，如果原始文件是压缩的就请求压缩的部分，如果原始文件没有被压缩，那就是原始部分，传输中的压缩不影响。\n你理解的很对。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1578273497,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":146490,"user_name":"itschenxiang","can_delete":false,"product_type":"c1","uid":1519547,"ip_address":"","ucode":"7D90194AC52435","user_header":"https://static001.geekbang.org/account/avatar/00/17/2f/bb/4236d712.jpg","comment_is_top":false,"comment_ctime":1572537685,"is_pvip":false,"replies":[{"id":"56585","content":"标准规范里没有限制，但不宜太大，过大就失去了分块的意义。","user_name":"作者回复","user_name_real":"chrono","uid":"1181974","ctime":1572570620,"ip_address":"","comment_id":146490,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1572537685","product_id":100029001,"comment_content":"chunk 分块长度有大小限制吗？有的话最大是多少","like_count":0,"discussions":[{"author":{"id":1181974,"avatar":"https://static001.geekbang.org/account/avatar/00/12/09/16/1161017c.jpg","nickname":"罗剑锋","note":"","ucode":"95678C988F24AB","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":472882,"discussion_content":"标准规范里没有限制，但不宜太大，过大就失去了分块的意义。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1572570620,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":144953,"user_name":"hz","can_delete":false,"product_type":"c1","uid":1020522,"ip_address":"","ucode":"6F37E6990D9812","user_header":"https://static001.geekbang.org/account/avatar/00/0f/92/6a/3e6a0eb7.jpg","comment_is_top":false,"comment_ctime":1572138377,"is_pvip":false,"replies":[{"id":"55948","content":"http协议当然是在http层次做的了，看不到下层的tcp。<br><br>虽然是chunked，但这仍然是一个响应，只是body部分被分成了多个部分。<br><br>注意，我们必须要很好地理解网络协议栈，虽然在下层tcp&#47;ip可能也会分成多个块，但在它们之上是看不到的，http看到的是它自己的分块，而不是tcp的分块。","user_name":"作者回复","user_name_real":"chrono","uid":"1181974","ctime":1572224533,"ip_address":"","comment_id":144953,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1572138377","product_id":100029001,"comment_content":"http传输永远是一个请求一个响应的工作模式.<br>老师，分块传输是每一个块相当于HTTP的“一个请求一个响应吗”<br>客户端收到分块数据然后拼接成一个完整的HTTP报文，这是在HTTP层做的，还是在TCP层做的呢。","like_count":0,"discussions":[{"author":{"id":1181974,"avatar":"https://static001.geekbang.org/account/avatar/00/12/09/16/1161017c.jpg","nickname":"罗剑锋","note":"","ucode":"95678C988F24AB","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":472185,"discussion_content":"http协议当然是在http层次做的了，看不到下层的tcp。\n\n虽然是chunked，但这仍然是一个响应，只是body部分被分成了多个部分。\n\n注意，我们必须要很好地理解网络协议栈，虽然在下层tcp/ip可能也会分成多个块，但在它们之上是看不到的，http看到的是它自己的分块，而不是tcp的分块。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1572224533,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":130794,"user_name":"四月的紫色花","can_delete":false,"product_type":"c1","uid":1564190,"ip_address":"","ucode":"67863848E5D766","user_header":"https://static001.geekbang.org/account/avatar/00/17/de/1e/ca04d2c5.jpg","comment_is_top":false,"comment_ctime":1567553904,"is_pvip":false,"replies":[{"id":"48976","content":"<br>1.对<br><br>2.对。","user_name":"作者回复","user_name_real":"chrono","uid":"1181974","ctime":1567563191,"ip_address":"","comment_id":130794,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1567553904","product_id":100029001,"comment_content":"1.分块传输数据的时候，如果数据里含有回车换行（\\r\\n）是否会影响分块的处理呢？<br>回车换行应该是不影响分块的处理<br>2.如果对一个被 gzip 的文件执行范围请求，比如“Range: bytes=10-19”，那么这个范围是应用于原文件还是压缩后的文件呢？<br>针对原文件的range<br>","like_count":0,"discussions":[{"author":{"id":1181974,"avatar":"https://static001.geekbang.org/account/avatar/00/12/09/16/1161017c.jpg","nickname":"罗剑锋","note":"","ucode":"95678C988F24AB","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":466132,"discussion_content":"\n1.对\n\n2.对。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1567563191,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":126887,"user_name":"siloen","can_delete":false,"product_type":"c1","uid":1058734,"ip_address":"","ucode":"526A861A4552FF","user_header":"https://static001.geekbang.org/account/avatar/00/10/27/ae/d17c0de8.jpg","comment_is_top":false,"comment_ctime":1566517686,"is_pvip":false,"replies":[{"id":"46947","content":"multipart是一个请求获取多个数据段，而多线程range是多个请求，这就是根本的区别。","user_name":"作者回复","user_name_real":"chrono","uid":"1181974","ctime":1566524360,"ip_address":"","comment_id":126887,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1566517686","product_id":100029001,"comment_content":"最后一种multipart的方式和多线程range的方式两者区别和应用场景差异有哪些","like_count":0,"discussions":[{"author":{"id":1181974,"avatar":"https://static001.geekbang.org/account/avatar/00/12/09/16/1161017c.jpg","nickname":"罗剑锋","note":"","ucode":"95678C988F24AB","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":464226,"discussion_content":"multipart是一个请求获取多个数据段，而多线程range是多个请求，这就是根本的区别。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1566524360,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":126494,"user_name":"👻 小二","can_delete":false,"product_type":"c1","uid":1625463,"ip_address":"","ucode":"9EEA8553163270","user_header":"https://static001.geekbang.org/account/avatar/00/18/cd/77/b2ab5d44.jpg","comment_is_top":false,"comment_ctime":1566395054,"is_pvip":false,"replies":[{"id":"46803","content":"<br>1.http的格式很灵活，如果Content-Length是0，报文里也可以有body，但因为头里指定长度为0，所以服务器就会忽略body，也不能算是错误报文。<br><br>2.如果不显式设置Content-Length，有的框架会自动填写这个字段，或者就变成了chunked格式。<br>","user_name":"作者回复","user_name_real":"chrono","uid":"1181974","ctime":1566431125,"ip_address":"","comment_id":126494,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1566395054","product_id":100029001,"comment_content":"Content-Length 如果为0， 是不是一定表示没有BODY， 如果没有 Transfer-Encoding: chunked也没有Content-Length， 是不是非法的？<br><br>记得以前发起http请求时， 没设置过Content-Length, 都好好的， 是框架都有自动帮你设置， 还是有别的规则？","like_count":0,"discussions":[{"author":{"id":1181974,"avatar":"https://static001.geekbang.org/account/avatar/00/12/09/16/1161017c.jpg","nickname":"罗剑锋","note":"","ucode":"95678C988F24AB","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":464014,"discussion_content":"\n1.http的格式很灵活，如果Content-Length是0，报文里也可以有body，但因为头里指定长度为0，所以服务器就会忽略body，也不能算是错误报文。\n\n2.如果不显式设置Content-Length，有的框架会自动填写这个字段，或者就变成了chunked格式。\n","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1566431125,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":124549,"user_name":"超威丶","can_delete":false,"product_type":"c1","uid":1180753,"ip_address":"","ucode":"1A18DE885D3C44","user_header":"https://static001.geekbang.org/account/avatar/00/12/04/51/da465a93.jpg","comment_is_top":false,"comment_ctime":1565919560,"is_pvip":false,"replies":[{"id":"45735","content":"是的，要用range头获取大文件的部分，就不用重头下载了。","user_name":"作者回复","user_name_real":"chrono","uid":"1181974","ctime":1565919995,"ip_address":"","comment_id":124549,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1565919560","product_id":100029001,"comment_content":"请问断点续传也是基于range这种形式不","like_count":0,"discussions":[{"author":{"id":1181974,"avatar":"https://static001.geekbang.org/account/avatar/00/12/09/16/1161017c.jpg","nickname":"罗剑锋","note":"","ucode":"95678C988F24AB","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":463219,"discussion_content":"是的，要用range头获取大文件的部分，就不用重头下载了。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1565919995,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":122835,"user_name":"吴向兵","can_delete":false,"product_type":"c1","uid":1350398,"ip_address":"","ucode":"918DFE98556A05","user_header":"https://static001.geekbang.org/account/avatar/00/14/9a/fe/c451a509.jpg","comment_is_top":false,"comment_ctime":1565539281,"is_pvip":false,"replies":[{"id":"45062","content":"<br>1.客户端也可以使用chunk方式传输body数据，在课程里为了简化叙述只说了服务器传数据。<br><br>2.客户端用chunk和服务器端的做法是一样的，同样用头字段chunked，然后body用分隔符分块发送。","user_name":"作者回复","user_name_real":"chrono","uid":"1181974","ctime":1565571257,"ip_address":"","comment_id":122835,"utype":1}],"discussion_count":1,"race_medal":1,"score":"1565539281","product_id":100029001,"comment_content":"老师，您好，有几个问题:<br>1、请问分块传输是否适用于客户端上传大文件？<br>2、如果客户端不是浏览器，实现分块传输需要做什么？","like_count":0,"discussions":[{"author":{"id":1181974,"avatar":"https://static001.geekbang.org/account/avatar/00/12/09/16/1161017c.jpg","nickname":"罗剑锋","note":"","ucode":"95678C988F24AB","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":462424,"discussion_content":"\n1.客户端也可以使用chunk方式传输body数据，在课程里为了简化叙述只说了服务器传数据。\n\n2.客户端用chunk和服务器端的做法是一样的，同样用头字段chunked，然后body用分隔符分块发送。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1565571257,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":122648,"user_name":"Cue","can_delete":false,"product_type":"c1","uid":1516991,"ip_address":"","ucode":"A5CB460B54FDB0","user_header":"https://static001.geekbang.org/account/avatar/00/17/25/bf/1e9c853f.jpg","comment_is_top":false,"comment_ctime":1565451197,"is_pvip":false,"replies":[{"id":"45070","content":"分段下载数据，一次可以批量下载，不用发多个请求。","user_name":"作者回复","user_name_real":"chrono","uid":"1181974","ctime":1565571449,"ip_address":"","comment_id":122648,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1565451197","product_id":100029001,"comment_content":"老师，最后一种情况的多段数据的使用场景都有哪些呢","like_count":0,"discussions":[{"author":{"id":1181974,"avatar":"https://static001.geekbang.org/account/avatar/00/12/09/16/1161017c.jpg","nickname":"罗剑锋","note":"","ucode":"95678C988F24AB","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":462342,"discussion_content":"分段下载数据，一次可以批量下载，不用发多个请求。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1565571449,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":116428,"user_name":"moooofly","can_delete":false,"product_type":"c1","uid":1008348,"ip_address":"","ucode":"4A20795C281B6F","user_header":"https://static001.geekbang.org/account/avatar/00/0f/62/dc/8876c73b.jpg","comment_is_top":false,"comment_ctime":1563849329,"is_pvip":false,"replies":[{"id":"42584","content":"很好的意见，这个我在写的时候是有点忽视了。<br><br>不过在文章里“分块”指的基本上是chunk，而“分段”指的是range，因为chunk本身的意思就是“块”。","user_name":"作者回复","user_name_real":"chrono","uid":"1181974","ctime":1563852461,"ip_address":"","comment_id":116428,"utype":1}],"discussion_count":2,"race_medal":0,"score":"1563849329","product_id":100029001,"comment_content":"提一个小意见：在本文中多次出现“分段”和“分块”两个术语，但似乎行文上并不统一，容易引起读者的混乱；按照文章中的逻辑，你这边是把chunked定义为“分段”，将范围请求定义为“分块”。这里明确一下比较好","like_count":0,"discussions":[{"author":{"id":1181974,"avatar":"https://static001.geekbang.org/account/avatar/00/12/09/16/1161017c.jpg","nickname":"罗剑锋","note":"","ucode":"95678C988F24AB","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":459536,"discussion_content":"很好的意见，这个我在写的时候是有点忽视了。\n\n不过在文章里“分块”指的基本上是chunk，而“分段”指的是range，因为chunk本身的意思就是“块”。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1563852461,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1008348,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/62/dc/8876c73b.jpg","nickname":"moooofly","note":"","ucode":"4A20795C281B6F","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":2686,"discussion_content":"你说的对，我说反了；分块”指的是chunk，“分段”指的是range；👍","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1563859656,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":113924,"user_name":"senekis","can_delete":false,"product_type":"c1","uid":1446025,"ip_address":"","ucode":"CD88681F0278FD","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/DYAIOgq83erTlRJ6skf7iawAeqNfIT1PPgjD7swUdRIRkX1iczjj97GNrxnsnn3QuOhkVbCLgFYAm7sMZficNTSbA/132","comment_is_top":false,"comment_ctime":1563186827,"is_pvip":true,"replies":[{"id":"41597","content":"no thanks。","user_name":"作者回复","user_name_real":"chrono","uid":"1181974","ctime":1563239438,"ip_address":"","comment_id":113924,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1563186827","product_id":100029001,"comment_content":"又学到新知识了，谢谢老师","like_count":0,"discussions":[{"author":{"id":1181974,"avatar":"https://static001.geekbang.org/account/avatar/00/12/09/16/1161017c.jpg","nickname":"罗剑锋","note":"","ucode":"95678C988F24AB","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":458439,"discussion_content":"no thanks。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1563239438,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":112447,"user_name":"前端西瓜哥","can_delete":false,"product_type":"c1","uid":1248576,"ip_address":"","ucode":"150130C34CD1C1","user_header":"https://static001.geekbang.org/account/avatar/00/13/0d/40/f70e5653.jpg","comment_is_top":false,"comment_ctime":1562736382,"is_pvip":false,"replies":[{"id":"40936","content":"1，由发送方负责，比如先发个chunked长度，再发一段数据。浏览器收到后就去掉chunked分隔符，还原成完整数据。<br><br>2.header后面只有一个空行，这是http的规定。后面再多一个空行是服务器发送的body内容，没有严格要求，实际还是看multipart的格式。","user_name":"作者回复","user_name_real":"chrono","uid":"1181974","ctime":1562754732,"ip_address":"","comment_id":112447,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1562736382","product_id":100029001,"comment_content":"老师，我有几个点不是很懂，希望老师能解答一下：<br><br>1. 分块传输，虽然在 body 中叙述了如何对数据进行拆分。但我想大概了解下这个拆分操作到底由谁进行，具体是怎么操作的？<br><br>2. 多个范围请求，header 和 body 之间是两个空行（即两个CRLF）？是因为第一个分隔符的前面还是要多给一个空行吗？那那个图貌似要改一下比较好，最前面应该加多一个 CRLF。","like_count":0,"discussions":[{"author":{"id":1181974,"avatar":"https://static001.geekbang.org/account/avatar/00/12/09/16/1161017c.jpg","nickname":"罗剑锋","note":"","ucode":"95678C988F24AB","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":457736,"discussion_content":"1，由发送方负责，比如先发个chunked长度，再发一段数据。浏览器收到后就去掉chunked分隔符，还原成完整数据。\n\n2.header后面只有一个空行，这是http的规定。后面再多一个空行是服务器发送的body内容，没有严格要求，实际还是看multipart的格式。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1562754732,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":111860,"user_name":"devin.ou","can_delete":false,"product_type":"c1","uid":1064942,"ip_address":"","ucode":"C9AE50AFC2C194","user_header":"https://static001.geekbang.org/account/avatar/00/10/3f/ee/5ed997a6.jpg","comment_is_top":false,"comment_ctime":1562632612,"is_pvip":false,"replies":[{"id":"40769","content":"可参考之前的课程，运行Telnet，然后进入编辑界面，粘贴示例的http请求，按回车发送就可以了。","user_name":"作者回复","user_name_real":"chrono","uid":"1181974","ctime":1562677654,"ip_address":"","comment_id":111860,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1562632612","product_id":100029001,"comment_content":"用 Telnet 手工发送请求（或者用 Wireshark 抓包）：这个地方截图好像不全，不方便理解，请明示","like_count":0,"discussions":[{"author":{"id":1181974,"avatar":"https://static001.geekbang.org/account/avatar/00/12/09/16/1161017c.jpg","nickname":"罗剑锋","note":"","ucode":"95678C988F24AB","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":457474,"discussion_content":"可参考之前的课程，运行Telnet，然后进入编辑界面，粘贴示例的http请求，按回车发送就可以了。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1562677654,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":111673,"user_name":"瑞","can_delete":false,"product_type":"c1","uid":1334600,"ip_address":"","ucode":"1C5945FD2D05C4","user_header":"https://static001.geekbang.org/account/avatar/00/14/5d/48/03abbbd1.jpg","comment_is_top":false,"comment_ctime":1562580932,"is_pvip":false,"replies":[{"id":"40771","content":"可能是实验环境没有配置好吧，看看是否启动了OpenResty，参考第7讲，把以前的例子跑一下，看是否能走通。","user_name":"作者回复","user_name_real":"chrono","uid":"1181974","ctime":1562677793,"ip_address":"","comment_id":111673,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1562580932","product_id":100029001,"comment_content":"访问不了的现象就是直接跳到一个什么百度未知界面去了","like_count":0,"discussions":[{"author":{"id":1181974,"avatar":"https://static001.geekbang.org/account/avatar/00/12/09/16/1161017c.jpg","nickname":"罗剑锋","note":"","ucode":"95678C988F24AB","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":457410,"discussion_content":"可能是实验环境没有配置好吧，看看是否启动了OpenResty，参考第7讲，把以前的例子跑一下，看是否能走通。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1562677793,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":111219,"user_name":"极客时间","can_delete":false,"product_type":"c1","uid":1015564,"ip_address":"","ucode":"AF7565BB5EF164","user_header":"https://static001.geekbang.org/account/avatar/00/0f/7f/0c/392ce255.jpg","comment_is_top":false,"comment_ctime":1562513200,"is_pvip":false,"replies":[{"id":"40542","content":"xhr和node.js不太熟悉，不能完全解答你的问题。<br><br>就我的理解来看，这都属于xhr和node的内部工作原理问题，它们可能是会把数据切分成小块，然后逐个处理，所以就会触发多次事件。<br><br>wireshark肯定是能够抓到包的，可以试试看它的传输过程。","user_name":"作者回复","user_name_real":"chrono","uid":"1181974","ctime":1562549705,"ip_address":"","comment_id":111219,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1562513200","product_id":100029001,"comment_content":"老师,我有一个疑问，当我用浏览器发起ajax请求上传文件的时候，会触发XMLHttpRequest实例对象的upload的processs事件，一般我会这样操作,xhr.upload.onprocess = function(event){ &#47;&#47;根据event做一些效果  }。<br><br>这里的process事件跟根据文件的大小触发多次，这是不是浏览器对我上传的文件做了切割了呢？<br>如果是做了切割的话，每次都是分别用tcp来传输的呢？可不可以用抓包工具抓到每次切割的小块数据上传的过程呢？还是虽然触发了process事件，但是前端浏览器还是将数据一次性读取到内存，然后整体发送给服务器呢？ <br><br>还有一个问题，我在用nodejs的http模块搭建web服务器，接收前端传递的文件信息，用的是request的data事件来接收数据，一般在代码中是这样写的，<br>var server = http.createServer();<br>server.on(&#39;request&#39;,(req,res)=&gt;{<br>      let databuffer = [];<br>      req.on(&quot;data&quot;,(chunk)=&gt;{databuffer.push(chunk)});<br>      req.on(&#39;end&#39;,()=&gt;{var result = Buffer.concat(databuffer)}) <br>})<br>观察以上代码，前端传递的数据如果数据量大的话，data事件会触发多次，这里的data事件，和前端的process事件有没有内在的联系呢？ 感觉应该有某种联系，但是不是很确定，这里该如何理解呢？<br>","like_count":0,"discussions":[{"author":{"id":1181974,"avatar":"https://static001.geekbang.org/account/avatar/00/12/09/16/1161017c.jpg","nickname":"罗剑锋","note":"","ucode":"95678C988F24AB","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":457288,"discussion_content":"xhr和node.js不太熟悉，不能完全解答你的问题。\n\n就我的理解来看，这都属于xhr和node的内部工作原理问题，它们可能是会把数据切分成小块，然后逐个处理，所以就会触发多次事件。\n\nwireshark肯定是能够抓到包的，可以试试看它的传输过程。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1562549705,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":111204,"user_name":"瑞","can_delete":false,"product_type":"c1","uid":1334600,"ip_address":"","ucode":"1C5945FD2D05C4","user_header":"https://static001.geekbang.org/account/avatar/00/14/5d/48/03abbbd1.jpg","comment_is_top":false,"comment_ctime":1562510020,"is_pvip":false,"replies":[{"id":"40536","content":"具体是什么现象？说一下才好解决。","user_name":"作者回复","user_name_real":"chrono","uid":"1181974","ctime":1562549119,"ip_address":"","comment_id":111204,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1562510020","product_id":100029001,"comment_content":"请问下怎么我这边访问不了www.chrono.com&#47;16-1呢","like_count":0,"discussions":[{"author":{"id":1181974,"avatar":"https://static001.geekbang.org/account/avatar/00/12/09/16/1161017c.jpg","nickname":"罗剑锋","note":"","ucode":"95678C988F24AB","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":457283,"discussion_content":"具体是什么现象？说一下才好解决。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1562549119,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":110781,"user_name":"nb Ack","can_delete":false,"product_type":"c1","uid":1137171,"ip_address":"","ucode":"2C1B99C85C8CCD","user_header":"https://static001.geekbang.org/account/avatar/00/11/5a/13/3160996d.jpg","comment_is_top":false,"comment_ctime":1562332183,"is_pvip":false,"replies":[{"id":"40532","content":"一个http请求必定是在一个tcp连接里收发的。<br><br>虽然是分块，但也是用一个tcp。","user_name":"作者回复","user_name_real":"chrono","uid":"1181974","ctime":1562548954,"ip_address":"","comment_id":110781,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1562332183","product_id":100029001,"comment_content":"老师好，有个问题。分块后的数据在用 tcp 发回的时候，是一个 块 一个 tcp 传输吗? 使用wireshark 抓包看起来不像是 3 个 chunk 用了 3 个 tcp 响应","like_count":0,"discussions":[{"author":{"id":1181974,"avatar":"https://static001.geekbang.org/account/avatar/00/12/09/16/1161017c.jpg","nickname":"罗剑锋","note":"","ucode":"95678C988F24AB","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":457050,"discussion_content":"一个http请求必定是在一个tcp连接里收发的。\n\n虽然是分块，但也是用一个tcp。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1562548954,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":109909,"user_name":"-W.LI-","can_delete":false,"product_type":"c1","uid":1210699,"ip_address":"","ucode":"3556786538664F","user_header":"https://static001.geekbang.org/account/avatar/00/12/79/4b/740f91ca.jpg","comment_is_top":false,"comment_ctime":1562130772,"is_pvip":false,"replies":[{"id":"39830","content":"rfc里有的，专栏文章里也有提及，其实多看看http抓包就能熟悉，不需要刻意去记。<br><br>“Transfer-Encoding: chunked,gzip”这样的多种组合理论上是可行的，但一般用的比较少。","user_name":"作者回复","user_name_real":"chrono","uid":"1181974","ctime":1562142568,"ip_address":"","comment_id":109909,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1562130772","product_id":100029001,"comment_content":"老师好!区分是请求字段,响应字段还是通用字段是查阅文档，文档上会有标注是么?。然后同一个header 后面可以同时设置多个值用分割符风格就会一起生效。<br>比如说Transfer-Encoding: chunked,gzip这个样子是么?有哪些字段支持组合啊?还是都支持","like_count":0,"discussions":[{"author":{"id":1181974,"avatar":"https://static001.geekbang.org/account/avatar/00/12/09/16/1161017c.jpg","nickname":"罗剑锋","note":"","ucode":"95678C988F24AB","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":456635,"discussion_content":"rfc里有的，专栏文章里也有提及，其实多看看http抓包就能熟悉，不需要刻意去记。\n\n“Transfer-Encoding: chunked,gzip”这样的多种组合理论上是可行的，但一般用的比较少。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1562142568,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":109849,"user_name":"威~~微冷。。。","can_delete":false,"product_type":"c1","uid":1241648,"ip_address":"","ucode":"4F338B722AA252","user_header":"https://static001.geekbang.org/account/avatar/00/12/f2/30/76cbc52f.jpg","comment_is_top":false,"comment_ctime":1562120752,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1562120752","product_id":100029001,"comment_content":"楼上的兄弟们多不用上班写bug的么？一个个的速度好快","like_count":0},{"had_liked":false,"id":109826,"user_name":"-W.LI-","can_delete":false,"product_type":"c1","uid":1210699,"ip_address":"","ucode":"3556786538664F","user_header":"https://static001.geekbang.org/account/avatar/00/12/79/4b/740f91ca.jpg","comment_is_top":false,"comment_ctime":1562117657,"is_pvip":false,"replies":[{"id":"39794","content":"看字段的值，没有chunked，那就不是分块，只是压缩。","user_name":"作者回复","user_name_real":"chrono","uid":"1181974","ctime":1562127345,"ip_address":"","comment_id":109826,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1562117657","product_id":100029001,"comment_content":"老师好!Transfer-Encoding: chunked表示分段传输，改成Transfer-Encoding: gzip以后会自动解压，分段传输的语意还在么","like_count":0,"discussions":[{"author":{"id":1181974,"avatar":"https://static001.geekbang.org/account/avatar/00/12/09/16/1161017c.jpg","nickname":"罗剑锋","note":"","ucode":"95678C988F24AB","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":456591,"discussion_content":"看字段的值，没有chunked，那就不是分块，只是压缩。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1562127345,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]}]}