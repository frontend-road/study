{"id":543867,"title":"03｜硬件语言筑基（一）：从硬件语言开启手写CPU之旅","content":"<p>你好，我是LMOS。</p><p>我们都知道，自己国家的芯片行业被美国“吊打”这件事了吧？尤其是像高端CPU这样的芯片。看到相关的报道，真有一种恨铁不成钢的感觉。你是否也有过想亲自动手设计一个CPU的冲动呢？</p><p>万丈高楼从地起，欲盖高楼先打地基，芯片是万世之基，这是所有软件基础的开始，这个模块我会带你一起设计一个迷你RISC-V处理器（为了简单起见，我选择了最火热的RISCV芯片）。哪怕未来你不从事芯片设计工作，了解芯片的工作机制，也对写出优秀的应用软件非常重要。</p><p>这个处理器大致是什么样子呢？我们将使用Verilog硬件描述语言，基于RV32I指令集，设计一个32位五级流水线的处理器核。该处理器核包括指令提取单元、指令译码单元、整型执行单元、访问存储器和写回结果等单元模块，支持运行大多数RV32I的基础指令。最后，我们还会编写一些简单汇编代码，放在设计出来的处理器上运行。</p><p>我会通过两节课的篇幅，带你快速入门Verilog，为后续设计迷你CPU做好准备。这节课我们先来学习硬件描述语言基础，芯片内部的数字电路设计正是由硬件语言完成的。</p><h2>一个芯片的内部电路是怎么样的？</h2><p>作为开发，你日常最常用的编程语言是什么？也许是C语言、Java、Go、PHP……这些高级编译语言吧。而硬件设计领域里，也有专门的硬件描述语言。为什么会出现专门的硬件描述语言呢？这还要先从芯片的内部结构说起。</p><!-- [[[read_end]]] --><p>一般情况下，你所接触到的处理器芯片，已经不是传统意义上的CPU了，比如在业界很有名的国产手机芯片华为麒麟990芯片。我把麒麟990的功能模块图贴在了后面，对照图片会更直观。这样一款芯片，包含了CPU核、高速缓存、NPU、GPU、DDR、PMU等模块。</p><p><img src=\"https://static001.geekbang.org/resource/image/eb/8e/eb8c273e7020fb22cf6e337aae7da28e.png?wh=742x495\" alt=\"图片\"></p><p>而在芯片设计时，根据不同模块的功能特点，通常把它们分为数字电路模块和模拟电路模块。</p><p>模拟电路还是像早期的半导体电路那样，处理的是连续变化的模拟信号，所以只能用传统的电路设计方法。而数字电路处理的是已经量化的数字信号，往往用来实现特定的逻辑功能，更容易被抽象化，所以就产生了专门用于设计数字电路的硬件描述语言。</p><p>硬件描述语言从发明到现在，已经有20多年历史。硬件描述语言可以让你更直观地去理解数字电路的逻辑关系，从而更方便地去设计数字电路。</p><p>现在业界的 IEEE标准主要有VHDL和Verilog HDL 这两种硬件描述语言。在高层次数字系统设计领域，大部分公司都采用 Verilog HDL完成设计，我们后面的实现也会用到Verilog。</p><p>千里之行，始于足下。在Verilog学习之前，我们需要先完成思路转换，也就是帮你解决这个问题：写软件代码和写硬件代码的最大区别是什么？搞明白了这个问题，你才能更好地领会Verilog语言的设计思想。</p><p>Verilog代码和C语言、Java等这些计算机编程语言有本质的不同，<strong>在可综合（这里的“可综合”和代码“编译”的意思差不多）的Verilog代码里，基本所有写出来的东西都对应着实际的电路</strong>。</p><p>所以，我们用Verilog的时候，必须理解每条语句实质上对应着什么电路，并且要从<strong>电路的角度</strong>来思考它为何要这样设计。而高级编程语言通常只要功能实现就行。</p><p>我再举几个例子来说明：声明变量的时候，如果指定是一个reg，那么这个变量就有寄存数值的功能，可以综合出来一个实际的寄存器；如果指定是一段wire，那么它就只能传递数据，只是表示一条线。在Verilog里写一个判断语句，可能就对应了一个MUX（数据选择器），写一个for可能就是把一段电路重复好几遍。</p><p>最能体现电路设计思想的就是always块了，它可以指定某一个信号在某个值或某个跳变的时候，执行块里的代码。通过使用Verilog语言，我们就能完成芯片的数字电路设计工作了。没错，芯片前端设计工程师写Verilog代码的目的，就是<strong>把一份电路用代码的形式表示出来，然后由计算机把代码转换为所对应的逻辑电路</strong>。</p><h2>芯片如何设计？</h2><p>说到这里你可能还有疑惑，听起来芯片设计也没那么复杂啊？其实这事儿说起来简单，但实践起来却相当复杂。接下来，我就说说，一个工业级的芯片在设计阶段大致会怎么规划。</p><p>在开始一个大的芯片设计时，往往需要先从整个芯片系统做好规划，在写具体的Verilog代码之前，把系统划分成几个大的基本的功能模块。之后，每个功能模块再按一定的规则，划分出下一个层次的基本单元。</p><p>这和Verilog语言的module模块化设计思想是一致的，上一层模块对下一层子模块进行例化，就像其他编程语言的函数调用一样。根据包含的子功能模块一直例化下去，最终就能形成hierarchy结构。</p><p>这种自顶向下的设计方法，可以用后面的树状结构图来表示：</p><p><img src=\"https://static001.geekbang.org/resource/image/3c/3b/3c36d7832261f4cc35d4c142c17ddd3b.jpg?wh=1920x1026\" alt=\"图片\"></p><p>从上图我们也可以看出，Verilog都是基于模块进行编写的，一个模块实现一个基本功能，大部分的Verilog逻辑语句都放在模块内部。</p><h2>从一段代码入门Verilog</h2><p>说完语言思路和硬件的模块化设计，接下来，我带你学习一下Verilog的基本模块和逻辑语句是怎么写的。</p><p>很多Verilog初学者刚开始都是从一些基础知识慢慢去看，比如基本语法、数据类型、赋值语句、条件语句……总想着把Verilog的全部基础知识看完了，再开始动手写代码。</p><p>但是你有没有想过，这些详细的基础知识，一两天自然是看不完的。而当你坚持了一段时间把它看完，以为可以上手写代码的时候，又会发现前面的基本语句全都忘了。这样的学习方法并不可取，效果也不好，所以我换个方法带你入门。我们先不去罗列各种详细的基础知识，而是从学习一段代码开始。</p><p>我会以一个4位十进制计数器模块为例，让你对Verilog模块代码有更直观的认识，然后根据这段代码模块，给你讲讲Verilog语言基础。这里先把完整代码列出来，后面再详细拆解。</p><pre><code class=\"language-verilog\">module counter(\n&nbsp; //端口定义\n&nbsp; input&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;reset_n,&nbsp; //复位端，低有效\n&nbsp; input&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;clk,&nbsp; &nbsp;\t&nbsp; //输入时钟\n&nbsp; output [3:0]&nbsp; \t&nbsp; &nbsp; &nbsp; &nbsp; cnt,&nbsp; &nbsp; &nbsp; //计数输出\n&nbsp; output&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; cout\t&nbsp; &nbsp;//溢出位\n);&nbsp;&nbsp;\n&nbsp;&nbsp;\nreg [3:0]&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;cnt_r ;&nbsp; &nbsp; &nbsp; //计数器寄存器\n&nbsp;&nbsp;\nalways@(posedge clk or negedge reset_n) begin\n&nbsp; if(!reset_n) begin&nbsp; &nbsp; &nbsp; &nbsp; \t\t&nbsp; \t\t//复位时，计时归0\n&nbsp; &nbsp; &nbsp; cnt_r&nbsp; &nbsp; &nbsp; &nbsp; &lt;= 4'b0000 ;\n&nbsp; &nbsp; end\n&nbsp; &nbsp; else if (cnt_r==4'd9) begin&nbsp; &nbsp; &nbsp; //计时10个cycle时，计时归0\n&nbsp; &nbsp; &nbsp; cnt_r&nbsp; &nbsp; &nbsp; &nbsp; &lt;=4'b0000;\n&nbsp; &nbsp; end\n&nbsp; else begin&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;&nbsp;\n&nbsp; &nbsp; &nbsp; cnt_r&nbsp; &nbsp; &nbsp; &nbsp; &lt;= cnt_r + 1'b1 ; //计时加1\n&nbsp; end\nend\n&nbsp;&nbsp;\n&nbsp; assign&nbsp; cout = (cnt_r==4'd9) ;&nbsp; &nbsp; &nbsp; &nbsp;//输出周期位\n&nbsp; assign&nbsp; cnt&nbsp; = cnt_r ;&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;//输出实时计时器\n&nbsp;&nbsp;\nendmodule\n</code></pre><p>看了这段代码，也许你云里雾里，或者之前没接触过硬件语言，心里有点打鼓。不过别担心，入门硬件语言并不难，我们按照代码顺序依次来看。</p><h3>模块结构</h3><p>首先，让我们看一看这段代码的第一行和最后一行。没错，一个模块的定义是以关键字module开始，以endmodule结束。module关键字后面跟的counter就是这个模块的名称。</p><p>看着有没有熟悉的感觉？你可能觉得，这个看着跟其他编程语言的函数定义也没多大区别吧？别急着下结论，再仔细看看接口部分，发现没有？这就和函数传入的参数很不一样了。</p><blockquote>\n<p>module counter(<br>\n//接口部分<br>\n&nbsp; input&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; \treset_n,&nbsp;&nbsp;<br>\n&nbsp; input&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; \tclk,&nbsp; &nbsp;<br>\n&nbsp; output [3:0]&nbsp; &nbsp; &nbsp; &nbsp;\tcnt,&nbsp;&nbsp;<br>\n&nbsp; output&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; cout<br>\n);&nbsp;&nbsp;<br>\n……\t\t\t//逻辑功能部分<br>\nendmodule</p>\n</blockquote><p>Verilog模块的接口必须要指定它是输入信号还是输出信号。</p><p>输入信号用关键字input来声明，比如上面第4行代码的 input clk；输出信号用关键字output来声明，比如代码第5行的output [3:0]&nbsp; cnt；还有一种既可以输入，又可以输出的特殊端口信号，这种双向信号，我们用关键字inout来声明。</p><h3>数据类型</h3><p>前面我提到过，在可综合的Verilog代码里，基本所有写出来的东西都会对应实际的某个电路。而Verilog代码中定义的数据类型就能充分体现这一点。</p><blockquote>\n<p>parameter \tSIZE&nbsp; =&nbsp; 2’b01;<br>\nreg \t\t[3:0]&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;cnt_r;&nbsp; &nbsp;&nbsp;<br>\nwire\t[1:0]\t\tcout_w;</p>\n</blockquote><p>比如上面代码的第9行，表示定义了位宽为4 bit 的寄存器reg类型信号，信号名称为cnt_r。</p><p>寄存器reg类型表示抽象数据存储单元，它对应的就是一种寄存器电路。reg默认初始值为X（不确定值），换句话说就是，reg电路在上电之后，输出高电平还是低电平是不确定的，一般是在系统复位信号有效时，给它赋一个确定值。比如例子中的cnt_r，在复位信号reset_n等于低电平时，就会给cnt_r赋“0”值。</p><p>reg类型只能在always和inital语句中被赋值，如果描述语句是时序逻辑，即always语句中带有时钟信号，寄存器变量对应为触发器电路。比如上述定义的cnt_r，就是在带clk时钟信号的always块中被赋值，所以它对应的是触发器电路；如果描述语句是组合逻辑，即always语句不带有时钟信号，寄存器变量对应为锁存器电路。</p><p>我们常说的电子电路，也叫电子线路，所以电路中的互连线是必不可少的。Verilog代码用线网wire类型表示结构实体（例如各种逻辑门）之间的物理连线。wire类型不能存储数值，它的值是由驱动它的元件所决定的。驱动线网类型变量的有逻辑门、连续赋值语句、assign等。如果没有驱动元件连接到线网上，线网就默认为高阻态“Z”。</p><p>为了提高代码的可读性和可维护性，Verilog还定义了一种参数类型，通过parameter来声明一个标识符，用来代表一个常量参数，我们称之为<strong>符号常量</strong>，即标识符形式的常量。这个常量，实际上就是电路中一串由高低电平排列组成的一个固定数值。</p><h3>数值表达</h3><p>说到数值，我们再了解一下Verilog中的数值表达。还是以前面的4位十进制计数器代码为例，我们定位到第13行代码：</p><blockquote>\n<p>cnt_r&nbsp; &nbsp; &nbsp; &nbsp; &lt;= 4’b0000;</p>\n</blockquote><p>这行代码的意思是，给寄存器cnt_r赋以4’b0000的值。</p><p>这个值怎么来的呢？其中的逻辑“0”低电平，对应电路接地（GND）。同样的，逻辑“1”则表示高电平，对应电路接电源VCC。除此之外，还有特殊的“X”和“Z”值。逻辑“X”表示电平未知，输入端存在多种输入情况，可能是高电平，也可能是低电平；逻辑“Z”表示高阻态，外部没有激励信号，是一个悬空状态。</p><p>当然，为了代码的简洁明了，Verilog可以用不同的格式，表示同样的数值。比如要表示4位宽的数值“10”，二进制写法为4’b1010，十进制写法为4’d10，十六进制写法为4’ha。这里我需要特殊说明一下，数据在实际存储时还是用二进制，位宽表示储存时二进制占用宽度。</p><h3>运算符</h3><p>接下来我们看看Verilog的运算符，对于运算符，Verilog和大部分的编程语言的表示方法是一样的。</p><p>比如算术运算符&nbsp; + -&nbsp; *&nbsp; /&nbsp; % ，关系运算符 &gt;&nbsp; &nbsp;&lt;&nbsp; &nbsp;&lt;=&nbsp; &nbsp;&gt;=&nbsp; ==&nbsp; !=，逻辑运算符 &amp;&amp;&nbsp; ||&nbsp; ！（与或非），还有条件运算符&nbsp; ？ ，也就是C语言中的三目运算符。例如a?b:c，表示a为真时输出b，反之为c。</p><p>但在硬件语言里，位运算符可能和一些高级编程语言不一样。其中包括 ~&nbsp; &amp;&nbsp; |&nbsp; ^（按位取反、按位与，按位或，以及异或）；还有移位运算符，左移&nbsp; &lt;&lt;&nbsp;和右移&gt;&gt; ，在生成实际电路时，左移会增加位宽，右移位宽保存不变。</p><h3>条件、分支、循环语句</h3><p>还有就是条件语句if和分支语句case，由于它们的写法和其它高级编程语言几乎一样，基本上你掌握了某个语言都能理解。</p><p>这里我们重点来对比不同之处，也就是用Verilog实现条件、分支语句有什么不同。用if设计的语句所对应电路是有优先级的，也就是多级串联的MUX电路。而case语句对应的电路是没有优先级的，是一个多输入的MUX电路。设计时，只要我们合理使用这两个语句，就可以优化电路时序或者节省硬件电路资源。</p><p>此外，还有循环语句，一共有 4 种类型，分别是 while，for，repeat和 forever 循环。注意，循环语句只能在 always 块或 initial 块中使用。</p><h3>过程结构</h3><p>下面我们来说说过程结构，最能体现数字电路中时序逻辑的就是always语句了。always 语句块从 0 时刻开始执行其中的行为语句；每当满足设定的always块触发条件时，便再次执行语句块中的语句，如此循环反复。</p><p>因为always 语句块的这个特点，芯片设计师通常把always块的触发条件，设置为时钟信号的上升沿或者下降沿。这样，每次接收到一个时钟信号，always块内的逻辑电路都会执行一次。</p><p>前面代码例子第11行的always语句，就是典型的时序电路设计方法，有没有感觉到很巧妙？</p><blockquote>\n<p>always@(posedge clk or negedge rstn)&nbsp; begin<br>\n……&nbsp; &nbsp;\t\t\t\t //逻辑语句<br>\nend</p>\n</blockquote><p>还有一种过程结构就是initial 语句。它从 0 时刻开始执行，且内部逻辑语句只按顺序执行一次，多个 initial 块之间是相互独立的。理论上，initial 语句是不可以综合成实际电路的，多用于初始化、信号检测等，也就是在编写验证代码时使用。</p><p>到这里，在我看来比较重要的Verilog基础知识就讲完了，这门语言的知识脉络我也为你搭起了骨架。当然了，Verilog相关知识远远不止这些。如果你对深入学习它很感兴趣，推荐你翻阅《Verilog HDL高级数字设计》等相关资料拓展学习。</p><h2>总结回顾</h2><p>今天是芯片模块的第一节课，我们先了解了芯片的内部电路结构。一个芯片的内部电路往往分为数字电路模块和模拟电路模块。对于数字电路模块，可以使用Verilog硬件描述语句进行设计。</p><p>尽管Verilog这样的硬件语言你可能不大熟悉，但只要抓住本质，再结合代码例子建立知识脉络，学起来就能事半功倍。</p><p>要想熟悉硬件语言，我们最关键的就是做好思路转换。硬件语言跟高级编程语言本质的不同就是，使用Verilog的时候，必须理解每条语句实质上对应的什么电路，并且要从<strong>电路的角度</strong>来思考它为何要这样设计，而高级编程语言通常只要实现功能就行。</p><p>我再带你回顾一下，Verilog语言和高级编程语言具体有哪些不同：</p><p>1.<strong>模块结构</strong>：Verilog的模块结构和其他语言的函数定义不一样，它既可以有多个输入信号，也可以输出多个结果。而且，模块上的接口信号，必须要指定是输入信号和输出信号。<br>\n2.<strong>数据类型</strong>：跟我们在高级编程语言见到的变量类型相比，Verilog定义的数据类型也有很大不同。reg类型对应的是寄存器电路，wire类型对应的是电路上的互连线，标识符对应的是一串固定的高低电平信号。<br>\n3.<strong>数据表达</strong>：Verilog代码中的数据，本质上就是高低电平信号。“0”代表低电平，“1”代表高电平，不能确定高低电平的就用“X”来表示。<br>\n4.<strong>运算符</strong>：Verilog中的大部分运算符和其他语言是一样的，但是要注意位操作运算符，它们对应的是每一位电平按指定逻辑跳变，还有移位操作，一定要注意移位信号的数据位宽。<br>\n5.<strong>条件、分支、循环语句</strong>：Verilog中的条件if语句是有优先级的，而case语句则没有优先级，合理利用它们可以优化电路时序或节省硬件电路资源。循环语句则是把相同的电路重复好几遍。<br>\n6.<strong>过程结构</strong>：这是实现时序电路的关键。我们可以利用alway块语句设定一个时钟沿，用来触发相应逻辑电路的执行。这样，我们就可以依据时钟周期来分析电路中各个信号的逻辑跳变。而initial语句常在验证代码中使用，它可以从仿真的0时刻开始设置相关信号的值，并将这些值传输到待验证模块的端口上。<br>\n<img src=\"https://static001.geekbang.org/resource/image/13/bf/13ec949bd7c269421b2cae33381c49bf.jpg?wh=1920x1397\" alt=\"图片\"></p><p>下节课，我会带你设计一个简单的电路模块，既能帮你复习今天学到的知识，还能通过实践体会一下代码是怎样生成电路的，敬请期待。</p><h2>思考题</h2><p>为什么很多特定算法，用Verilog设计并且硬件化之后，要比用软件实现的运算速度快很多？</p><p>欢迎你在留言区跟我交流互动，也推荐你把这节课分享给更多朋友。</p>","neighbors":{"left":{"article_title":"先睹为快：迷你CPU项目效果演示","id":576720},"right":{"article_title":"04｜硬件语言筑基（二）: 代码是怎么生成具体电路的？","id":543888}},"comments":[{"had_liked":false,"id":353803,"user_name":"青玉白露","can_delete":false,"product_type":"c1","uid":2619436,"ip_address":"湖北","ucode":"96FE2D4D2B94A0","user_header":"https://static001.geekbang.org/account/avatar/00/27/f8/2c/92969c48.jpg","comment_is_top":true,"comment_ctime":1659795531,"is_pvip":false,"replies":[{"id":128662,"content":"6666 感谢分享","user_name":"作者回复","user_name_real":"编辑","uid":1345199,"ctime":1659922279,"ip_address":"湖北","comment_id":353803,"utype":1}],"discussion_count":1,"race_medal":0,"score":2,"product_id":100117801,"comment_content":"感觉大家很吃力，做了一个关于Verilog的初学者笔记，里面包含在线学习网站https:&#47;&#47;zhuanlan.zhihu.com&#47;p&#47;550710744","like_count":17,"discussions":[{"author":{"id":1345199,"avatar":"https://static001.geekbang.org/account/avatar/00/14/86/af/99219321.jpg","nickname":"LMOS","note":"","ucode":"B037712C8B8B3C","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":583086,"discussion_content":"6666 感谢分享","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1659922279,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"湖北","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":353469,"user_name":"肖水平","can_delete":false,"product_type":"c1","uid":2312202,"ip_address":"湖北","ucode":"BA5B49AEDF84C7","user_header":"https://thirdwx.qlogo.cn/mmopen/vi_32/Q3auHgzwzM7mF1Zdh16zKFDsIjV6movCe1vArG6icbr9Bd537NDg7dA6y24LhdC3ypvzqJBW18oGcDeC2yTwDsw/132","comment_is_top":false,"comment_ctime":1659488547,"is_pvip":false,"replies":[{"id":128689,"content":"是的 你学到了","user_name":"作者回复","user_name_real":"编辑","uid":1345199,"ctime":1659924587,"ip_address":"湖北","comment_id":353469,"utype":1}],"discussion_count":1,"race_medal":0,"score":2,"product_id":100117801,"comment_content":"思考题：\n根本原因就是专用芯片运算速度比GPU快，GPU运算速度比CPU快，而软件实现的算法是运行在CPU上的。\n具体原因如下：\n1、指令数多：软件实现的算法最终要编译成CPU可执行的机器指令，中间还会有很多控制指令；\n2、CPU指令执行步骤多：CPU执行一条指令需要经过取指、译码、执行、访存、写回步骤；\n3、多位运算需要拆分：比如128位的运算在32&#47;64位CPU上执行编译后会拆分成多条指令；\n4、将算法硬件化后可以直接执行运算，不需要通过指令来控制，多位运算也可以实现多位运算模块来直接运算；\n总之软件实现的算法在CPU消耗的时钟数要多很多，而CPU也只擅长控制，不擅长运算。","like_count":14,"discussions":[{"author":{"id":1345199,"avatar":"https://static001.geekbang.org/account/avatar/00/14/86/af/99219321.jpg","nickname":"LMOS","note":"","ucode":"B037712C8B8B3C","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":583116,"discussion_content":"是的 你学到了","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1659924587,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"湖北","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":353637,"user_name":"爱酱大胜利","can_delete":false,"product_type":"c1","uid":3078711,"ip_address":"湖北","ucode":"A356740ABACC32","user_header":"https://static001.geekbang.org/account/avatar/00/2e/fa/37/3b151ca3.jpg","comment_is_top":false,"comment_ctime":1659624639,"is_pvip":false,"replies":[{"id":128670,"content":"66666","user_name":"作者回复","user_name_real":"编辑","uid":1345199,"ctime":1659922598,"ip_address":"湖北","comment_id":353637,"utype":1}],"discussion_count":1,"race_medal":0,"score":2,"product_id":100117801,"comment_content":"思考题：\n1.设计的目的 CPU属于“通用性”设计 一个CPU能运行这个算法也能运行那个算法 改改代码就可以 代价就是翻译过程因为通用性所带来的迁就 而硬件化的算法属于“专用性”设计 也就是说它只能做着一件事所以怎么设计方便怎么来 反正以后不用为了实现其他算法再改电路了 这也是软硬件实现的区别之一\n2.运行效率 还是由于上一条的设计理念 导致软件的运行依赖于CPU实现的特定指令集 原本算法中一个硬件周期的动作可能被转化为多条指令 而每条指令可能会依赖多个运行周期 即使运行会得到优化 也远远比不上一个周期来的快 而且CPU为了通用性很可能不会将这种特殊性动作添加到一个不常用CISC里","like_count":8,"discussions":[{"author":{"id":1345199,"avatar":"https://static001.geekbang.org/account/avatar/00/14/86/af/99219321.jpg","nickname":"LMOS","note":"","ucode":"B037712C8B8B3C","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":583095,"discussion_content":"66666","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1659922598,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"湖北","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":353249,"user_name":"peter","can_delete":false,"product_type":"c1","uid":1058183,"ip_address":"湖北","ucode":"261C3FC001DE2D","user_header":"https://static001.geekbang.org/account/avatar/00/10/25/87/f3a69d1b.jpg","comment_is_top":false,"comment_ctime":1659316311,"is_pvip":false,"replies":[{"id":128499,"content":"Q1：对\nQ2：是笔误\nQ3Q4：是的 只会更多 ","user_name":"作者回复","user_name_real":"编辑","uid":1345199,"ctime":1659433519,"ip_address":"湖北","comment_id":353249,"utype":1}],"discussion_count":3,"race_medal":0,"score":2,"product_id":100117801,"comment_content":"请教老师几个问题：\nQ1：代码转化后的逻辑电路，只是电子版的“设计电路”，并不是实际的电路，对吗？\n文中有这样一句：“把一份电路用代码的形式表示出来，然后由计算机把代码转换为所对应的逻辑电路。”，此处，“转换后的逻辑电路”并不是实际的电路，应该只是“设计电路”。\nQ2：“cnt_r &lt;=4&#39;b000;”？ 此处应该是四个0吧，为什么写成三个0？笔误吗？\nQ3：芯片中的模拟电路是用什么设计的？\nQ4：芯片前端设计的代码，就是用verilog写的代码，对于一个芯片来说，一般规模多大？比如十万行代码？","like_count":8,"discussions":[{"author":{"id":1345199,"avatar":"https://static001.geekbang.org/account/avatar/00/14/86/af/99219321.jpg","nickname":"LMOS","note":"","ucode":"B037712C8B8B3C","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":582446,"discussion_content":"Q1：对\nQ2：是笔误\nQ3Q4：是的 只会更多 ","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1659433519,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"湖北","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":3135351,"avatar":"https://static001.geekbang.org/account/avatar/00/2f/d7/77/0bbdc9af.jpg","nickname":"VMNode","note":"","ucode":"4A095F69DBAFD0","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":598484,"discussion_content":"4&#39;b000 跟 4&#39;b00 效果应该是一样的","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1672861680,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":"广东","group_id":0},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1501385,"avatar":"https://static001.geekbang.org/account/avatar/00/16/e8/c9/59bcd490.jpg","nickname":"听水的湖","note":"","ucode":"B1759F90165D81","race_medal":0,"user_type":8,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":582452,"discussion_content":"问题2 已经修改了，感谢反馈。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1659434352,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":"北京","group_id":0},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":353265,"user_name":"哈哈","can_delete":false,"product_type":"c1","uid":1208655,"ip_address":"湖北","ucode":"8D43010FA3DC2C","user_header":"https://static001.geekbang.org/account/avatar/00/12/71/4f/bce0d5bc.jpg","comment_is_top":false,"comment_ctime":1659322974,"is_pvip":false,"replies":[{"id":128496,"content":"是的","user_name":"作者回复","user_name_real":"编辑","uid":1345199,"ctime":1659433303,"ip_address":"湖北","comment_id":353265,"utype":1}],"discussion_count":1,"race_medal":0,"score":2,"product_id":100117801,"comment_content":"思考题我认为，软件实现要在通用的硬件上执行就势必要执行一些逻辑上的模拟或者转换。而专用的硬件则没有这些转换过程，并且可以针对性的优化执行路径，所以要快许多。","like_count":5,"discussions":[{"author":{"id":1345199,"avatar":"https://static001.geekbang.org/account/avatar/00/14/86/af/99219321.jpg","nickname":"LMOS","note":"","ucode":"B037712C8B8B3C","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":582442,"discussion_content":"是的","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1659433303,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"湖北","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":353323,"user_name":"LockedX","can_delete":false,"product_type":"c1","uid":1683139,"ip_address":"湖北","ucode":"19B82B910FC67F","user_header":"https://static001.geekbang.org/account/avatar/00/19/ae/c3/d930693b.jpg","comment_is_top":false,"comment_ctime":1659351141,"is_pvip":false,"replies":[{"id":128486,"content":"是0到3 4个bit  0到1 2个bit","user_name":"作者回复","user_name_real":"编辑","uid":1345199,"ctime":1659432987,"ip_address":"湖北","comment_id":353323,"utype":1}],"discussion_count":2,"race_medal":0,"score":2,"product_id":100117801,"comment_content":"老师，有个问题一直没有想明白\nreg \t[3:0]         cnt_r;    \nwire\t[1:0]\t\tcout_w;\nreg和wire的声明，冒号前面是数字代表位宽，冒号后面的0含义是什么？","like_count":3,"discussions":[{"author":{"id":1345199,"avatar":"https://static001.geekbang.org/account/avatar/00/14/86/af/99219321.jpg","nickname":"LMOS","note":"","ucode":"B037712C8B8B3C","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":582432,"discussion_content":"是0到3 4个bit  0到1 2个bit","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1659432987,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"湖北","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":2619436,"avatar":"https://static001.geekbang.org/account/avatar/00/27/f8/2c/92969c48.jpg","nickname":"青玉白露","note":"","ucode":"96FE2D4D2B94A0","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":582625,"discussion_content":"补充一下，计算机的位数一般是从0开始计算，因此Verilog中都是使用这中[n-1,0]的方式来表示位宽n","likes_number":3,"is_delete":false,"is_hidden":false,"ctime":1659538570,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":"四川","group_id":0},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":353257,"user_name":"青蓝","can_delete":false,"product_type":"c1","uid":2585443,"ip_address":"湖北","ucode":"E77659E54CE424","user_header":"https://static001.geekbang.org/account/avatar/00/27/73/63/791d0f5e.jpg","comment_is_top":false,"comment_ctime":1659319813,"is_pvip":false,"replies":[{"id":128498,"content":"有","user_name":"作者回复","user_name_real":"编辑","uid":1345199,"ctime":1659433349,"ip_address":"湖北","comment_id":353257,"utype":1}],"discussion_count":1,"race_medal":0,"score":2,"product_id":100117801,"comment_content":"FPGA编程和今天讲得编程有什么区别吗？","like_count":2,"discussions":[{"author":{"id":1345199,"avatar":"https://static001.geekbang.org/account/avatar/00/14/86/af/99219321.jpg","nickname":"LMOS","note":"","ucode":"B037712C8B8B3C","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":582444,"discussion_content":"有","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1659433349,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"湖北","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":353782,"user_name":"可爱因子1/n","can_delete":false,"product_type":"c1","uid":2797352,"ip_address":"湖北","ucode":"52A4759408AD20","user_header":"https://static001.geekbang.org/account/avatar/00/2a/af/28/9ffc55a2.jpg","comment_is_top":false,"comment_ctime":1659777360,"is_pvip":false,"replies":[{"id":128663,"content":"你说呢","user_name":"作者回复","user_name_real":"编辑","uid":1345199,"ctime":1659922301,"ip_address":"湖北","comment_id":353782,"utype":1}],"discussion_count":1,"race_medal":0,"score":2,"product_id":100117801,"comment_content":"针对我自己的理解，打个比喻：在性能和单位时间以及油门相同的情况下，我开着一辆车的发动机的转速和一个直接裸的发动机的转速比较，裸的发动机的转速按常理来说应该会更快一点，不知道我的比喻是否准确？","like_count":1,"discussions":[{"author":{"id":1345199,"avatar":"https://static001.geekbang.org/account/avatar/00/14/86/af/99219321.jpg","nickname":"LMOS","note":"","ucode":"B037712C8B8B3C","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":583087,"discussion_content":"你说呢","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1659922301,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"湖北","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":353351,"user_name":"111","can_delete":false,"product_type":"c1","uid":1176717,"ip_address":"湖北","ucode":"152C19E8BF1C44","user_header":"https://static001.geekbang.org/account/avatar/00/11/f4/8d/4ea7aeef.jpg","comment_is_top":false,"comment_ctime":1659399057,"is_pvip":false,"replies":[{"id":128483,"content":"对的\n","user_name":"作者回复","user_name_real":"编辑","uid":1345199,"ctime":1659432117,"ip_address":"湖北","comment_id":353351,"utype":1}],"discussion_count":1,"race_medal":0,"score":2,"product_id":100117801,"comment_content":"关于思考题：\n我的理解是 Verilog更多面向的是硬件，通过它设计完成之后，可以直接参照其代码流程组合相关硬件，在针对特定算法的设计后，组合出来的就是该算法最“合身”的底层电路模型。\n\n而对于一些软件语言的实现，更多的是业务层面的实现，业务实现之后还要面临“翻译”，翻译成计算机能够执行的指令集，这一步就已经开始出现了效率损耗，同时因为“翻译”动作，也就可能出现为了实现某一功能，底层指令可能要绕一些“弯路”才能实现，毕竟不能像Verilog那样，做到“完美贴切”的电路设计","like_count":1,"discussions":[{"author":{"id":1345199,"avatar":"https://static001.geekbang.org/account/avatar/00/14/86/af/99219321.jpg","nickname":"LMOS","note":"","ucode":"B037712C8B8B3C","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":582427,"discussion_content":"对的\n","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1659432117,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"湖北","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":353326,"user_name":"nmg","can_delete":false,"product_type":"c1","uid":1663910,"ip_address":"湖北","ucode":"11D0C183CC9B5F","user_header":"","comment_is_top":false,"comment_ctime":1659356090,"is_pvip":false,"replies":[{"id":128488,"content":"是的 ","user_name":"作者回复","user_name_real":"编辑","uid":1345199,"ctime":1659433015,"ip_address":"湖北","comment_id":353326,"utype":1}],"discussion_count":1,"race_medal":0,"score":2,"product_id":100117801,"comment_content":"是因为用硬件实现是算法最优化电路设计，而软件实现可能是芯片现有资源的组合，不是最优电路，所以会慢吗？","like_count":1,"discussions":[{"author":{"id":1345199,"avatar":"https://static001.geekbang.org/account/avatar/00/14/86/af/99219321.jpg","nickname":"LMOS","note":"","ucode":"B037712C8B8B3C","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":582434,"discussion_content":"是的 ","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1659433015,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"湖北","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":353295,"user_name":"Geek_785f19","can_delete":false,"product_type":"c1","uid":2038757,"ip_address":"湖北","ucode":"8F5BCBD227ABF1","user_header":"https://thirdwx.qlogo.cn/mmopen/vi_32/kddcgrkQHsuwH72o54jljmTnibicYfZFPnoTkphqCUCHv2U8h7UuHtKRBlZdcWQeUSNfUbbNhMfYLiccsHq27d7Tg/132","comment_is_top":false,"comment_ctime":1659336356,"is_pvip":false,"replies":[{"id":128491,"content":"不要什么前置 知识","user_name":"作者回复","user_name_real":"编辑","uid":1345199,"ctime":1659433090,"ip_address":"湖北","comment_id":353295,"utype":1}],"discussion_count":2,"race_medal":0,"score":3,"product_id":100117801,"comment_content":"请教老师：\n平时做的是业务系统，对底层不熟悉，有兴趣多了解底层知识，学习本课程需要什么前置知识吗","like_count":1,"discussions":[{"author":{"id":1345199,"avatar":"https://static001.geekbang.org/account/avatar/00/14/86/af/99219321.jpg","nickname":"LMOS","note":"","ucode":"B037712C8B8B3C","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":582437,"discussion_content":"不要什么前置 知识","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1659433090,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"湖北","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":2619436,"avatar":"https://static001.geekbang.org/account/avatar/00/27/f8/2c/92969c48.jpg","nickname":"青玉白露","note":"","ucode":"96FE2D4D2B94A0","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":582324,"discussion_content":"老师推荐了一本书，hdl高级编程，可以作为拓展阅读","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1659367511,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":"四川","group_id":0},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":353259,"user_name":"苏流郁宓","can_delete":false,"product_type":"c1","uid":2729645,"ip_address":"湖北","ucode":"AD07BD9CE03047","user_header":"https://static001.geekbang.org/account/avatar/00/29/a6/ad/e65aec4c.jpg","comment_is_top":false,"comment_ctime":1659320694,"is_pvip":false,"replies":[{"id":128497,"content":"是的 正确的","user_name":"作者回复","user_name_real":"编辑","uid":1345199,"ctime":1659433340,"ip_address":"湖北","comment_id":353259,"utype":1}],"discussion_count":1,"race_medal":0,"score":3,"product_id":100117801,"comment_content":"用 Verilog 设计并且硬件化之后，要比用软件实现的运算速度快很多？\n俺觉得软件需要译码，消耗时间。还有软件功能化设计，需要用到硬件的不同模块，光是沟通自然也消耗时间的。更不用说分支预测失败，重来也消耗时间的\n但硬件有个难度，就是越复杂的东西，用软件高级语言开发更容易，比如高级语言开发浏览器比光靠汇编等低级语言开发难度容易得多！\n软件与硬件取平衡，开发看那个性价比高，更贴近实用的啊","like_count":1,"discussions":[{"author":{"id":1345199,"avatar":"https://static001.geekbang.org/account/avatar/00/14/86/af/99219321.jpg","nickname":"LMOS","note":"","ucode":"B037712C8B8B3C","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":582443,"discussion_content":"是的 正确的","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1659433340,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"湖北","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":370134,"user_name":"IgoZhang","can_delete":false,"product_type":"c1","uid":3017286,"ip_address":"广东","ucode":"9956EA089E21E0","user_header":"https://static001.geekbang.org/account/avatar/00/2e/0a/46/cde22711.jpg","comment_is_top":false,"comment_ctime":1678420148,"is_pvip":false,"replies":[{"id":138732,"content":"继续往后看，就能解决你的疑惑。","user_name":"编辑回复","user_name_real":"编辑","uid":1501385,"ctime":1694484491,"ip_address":"北京","comment_id":370134,"utype":2}],"discussion_count":1,"race_medal":0,"score":3,"product_id":100117801,"comment_content":"老师，我发现一个重要问题没讲，导致没法连贯：\nVerilog  是啥，我的意思是它干啥用，它的输出是啥？\n\n他是一个硬件描述语言，但是的干啥用呢？  是否可以举例说明什么时候使用Verilog写了啥，然后写出来的结果用于做啥？    我还以为是汇编呢？  有点理解不好","like_count":0,"discussions":[{"author":{"id":1501385,"avatar":"https://static001.geekbang.org/account/avatar/00/16/e8/c9/59bcd490.jpg","nickname":"听水的湖","note":"","ucode":"B1759F90165D81","race_medal":0,"user_type":8,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":627726,"discussion_content":"继续往后看，就能解决你的疑惑。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1694484491,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"北京","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":8}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":358983,"user_name":"南总无敌","can_delete":false,"product_type":"c1","uid":3163583,"ip_address":"湖北","ucode":"A9684B3235943A","user_header":"https://static001.geekbang.org/account/avatar/00/30/45/bf/1f36539b.jpg","comment_is_top":false,"comment_ctime":1665118292,"is_pvip":false,"replies":[{"id":131075,"content":"是","user_name":"作者回复","user_name_real":"编辑","uid":1345199,"ctime":1666422081,"ip_address":"湖北","comment_id":358983,"utype":1}],"discussion_count":1,"race_medal":0,"score":3,"product_id":100117801,"comment_content":"思考题：为什么很多特定算法，用 Verilog 设计并且硬件化之后，要比用软件实现的运算速度快很多？\n答：因为用verilog设计硬件化之后，算法能够用更少的指令和SIMD（单指令多数据）的方式执行，例如NPU执行卷积运算时候只要配置好卷积参数就能一条指令执行，并且数据能够实现部分复用。但CPU需要拆解成为多条指令，每条指令都必须完整走完5个执行步骤，这样花费的cycles数就会成倍上涨","like_count":0,"discussions":[{"author":{"id":1345199,"avatar":"https://static001.geekbang.org/account/avatar/00/14/86/af/99219321.jpg","nickname":"LMOS","note":"","ucode":"B037712C8B8B3C","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":591273,"discussion_content":"是","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1666422081,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"湖北","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":357710,"user_name":"xhh","can_delete":false,"product_type":"c1","uid":3180800,"ip_address":"湖北","ucode":"B28E89E65B2E04","user_header":"https://static001.geekbang.org/account/avatar/00/30/89/00/0b3e720b.jpg","comment_is_top":false,"comment_ctime":1663576739,"is_pvip":false,"replies":[{"id":130346,"content":"对是 vscode","user_name":"作者回复","user_name_real":"编辑","uid":1345199,"ctime":1664012103,"ip_address":"湖北","comment_id":357710,"utype":1}],"discussion_count":1,"race_medal":0,"score":3,"product_id":100117801,"comment_content":"请问老师在Linux中的Verilog编辑器是VSCode吗还是什么","like_count":0,"discussions":[{"author":{"id":1345199,"avatar":"https://static001.geekbang.org/account/avatar/00/14/86/af/99219321.jpg","nickname":"LMOS","note":"","ucode":"B037712C8B8B3C","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":588712,"discussion_content":"对是 vscode","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1664012103,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"湖北","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":356142,"user_name":"BiuBiuBiu～","can_delete":false,"product_type":"c1","uid":2749921,"ip_address":"湖北","ucode":"0337A5916BE6F1","user_header":"https://static001.geekbang.org/account/avatar/00/29/f5/e1/5ea38f5b.jpg","comment_is_top":false,"comment_ctime":1662004938,"is_pvip":false,"replies":[{"id":129734,"content":"可以加入群聊","user_name":"作者回复","user_name_real":"编辑","uid":1345199,"ctime":1662255937,"ip_address":"湖北","comment_id":356142,"utype":1}],"discussion_count":1,"race_medal":0,"score":3,"product_id":100117801,"comment_content":"题外问题：能不能帮忙简略聊一下芯片复位和解复位这个点","like_count":0,"discussions":[{"author":{"id":1345199,"avatar":"https://static001.geekbang.org/account/avatar/00/14/86/af/99219321.jpg","nickname":"LMOS","note":"","ucode":"B037712C8B8B3C","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":586479,"discussion_content":"可以加入群聊","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1662255937,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"湖北","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":354769,"user_name":"Frank611","can_delete":false,"product_type":"c1","uid":1618280,"ip_address":"湖北","ucode":"D2B8D066CD23EA","user_header":"https://static001.geekbang.org/account/avatar/00/18/b1/68/35e0729f.jpg","comment_is_top":false,"comment_ctime":1660783183,"is_pvip":true,"replies":[{"id":129175,"content":"先往后看","user_name":"作者回复","user_name_real":"编辑","uid":1345199,"ctime":1661051775,"ip_address":"湖北","comment_id":354769,"utype":1}],"discussion_count":1,"race_medal":0,"score":3,"product_id":100117801,"comment_content":"cnt clk这些名字是固定的吗？还是跟变量一样，可以任意定义，但是又没有定义这些信号的类型","like_count":0,"discussions":[{"author":{"id":1345199,"avatar":"https://static001.geekbang.org/account/avatar/00/14/86/af/99219321.jpg","nickname":"LMOS","note":"","ucode":"B037712C8B8B3C","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":584692,"discussion_content":"先往后看","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1661051775,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"湖北","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":354122,"user_name":"小杰","can_delete":false,"product_type":"c1","uid":2853200,"ip_address":"湖北","ucode":"BBDF8E9F348F65","user_header":"https://static001.geekbang.org/account/avatar/00/2b/89/50/aee9fdab.jpg","comment_is_top":false,"comment_ctime":1660109921,"is_pvip":true,"replies":[{"id":128896,"content":"是的","user_name":"作者回复","user_name_real":"编辑","uid":1345199,"ctime":1660318741,"ip_address":"湖北","comment_id":354122,"utype":1}],"discussion_count":1,"race_medal":0,"score":3,"product_id":100117801,"comment_content":"自己的理解。特定的算法，应该是依赖特定的实现，高级语言虽然能在数学上，看着像是一步一步在执行，实际最后的执行经过了编译器，这里其实已经不是一条语句对应cpu一条指令，然后不同cpu的执行可能也会有区别。专门的语言配合专门的cpu，来运行专门的算法，效率肯定是要高于上面使用，高级语言加商业化的通用cpu","like_count":0,"discussions":[{"author":{"id":1345199,"avatar":"https://static001.geekbang.org/account/avatar/00/14/86/af/99219321.jpg","nickname":"LMOS","note":"","ucode":"B037712C8B8B3C","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":583733,"discussion_content":"是的","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1660318741,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"湖北","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":353687,"user_name":"天择","can_delete":false,"product_type":"c1","uid":2166878,"ip_address":"湖北","ucode":"ED2B08DB2F2B38","user_header":"https://static001.geekbang.org/account/avatar/00/21/10/5e/42f4faf7.jpg","comment_is_top":false,"comment_ctime":1659683389,"is_pvip":true,"replies":[{"id":128665,"content":"嗯嗯","user_name":"作者回复","user_name_real":"编辑","uid":1345199,"ctime":1659922338,"ip_address":"湖北","comment_id":353687,"utype":1}],"discussion_count":1,"race_medal":0,"score":3,"product_id":100117801,"comment_content":"对于一些特殊的算法，可以在硬件电路级别进行优化，充分利用不同电路的特点，而软件算法即使被编译器优化过，也被限制在写死的硬件电路上了。","like_count":0,"discussions":[{"author":{"id":1345199,"avatar":"https://static001.geekbang.org/account/avatar/00/14/86/af/99219321.jpg","nickname":"LMOS","note":"","ucode":"B037712C8B8B3C","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":583090,"discussion_content":"嗯嗯","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1659922338,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"湖北","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":353561,"user_name":"skyline","can_delete":false,"product_type":"c1","uid":3077871,"ip_address":"湖北","ucode":"C4D9A2A2FA99AC","user_header":"https://static001.geekbang.org/account/avatar/00/2e/f6/ef/9d19893f.jpg","comment_is_top":false,"comment_ctime":1659565563,"is_pvip":false,"replies":[{"id":128674,"content":"嗯","user_name":"作者回复","user_name_real":"编辑","uid":1345199,"ctime":1659922740,"ip_address":"湖北","comment_id":353561,"utype":1}],"discussion_count":1,"race_medal":0,"score":3,"product_id":100117801,"comment_content":"“它从 0 时刻开始执行，且内部逻辑语句只按顺序执行一次，多个 initial 块之间是相互独立的“\n问：如果内部是非阻塞赋值的话，岂不是内部也可以并行执行么？","like_count":0,"discussions":[{"author":{"id":1345199,"avatar":"https://static001.geekbang.org/account/avatar/00/14/86/af/99219321.jpg","nickname":"LMOS","note":"","ucode":"B037712C8B8B3C","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":583099,"discussion_content":"嗯","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1659922740,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"湖北","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":353377,"user_name":"青蓝","can_delete":false,"product_type":"c1","uid":2585443,"ip_address":"湖北","ucode":"E77659E54CE424","user_header":"https://static001.geekbang.org/account/avatar/00/27/73/63/791d0f5e.jpg","comment_is_top":false,"comment_ctime":1659408234,"is_pvip":false,"replies":[{"id":128691,"content":"是的 ","user_name":"作者回复","user_name_real":"编辑","uid":1345199,"ctime":1659924634,"ip_address":"湖北","comment_id":353377,"utype":1}],"discussion_count":1,"race_medal":0,"score":4,"product_id":100117801,"comment_content":"特定的算法需要大量特定的处理器的能力，通过硬件设计可以增加大量的算法所需的能力单元，如GPU就是CPU砍掉大量功能留下大量运算单元，所以GPU特别适合做图形渲染、深度学习模型运算","like_count":0,"discussions":[{"author":{"id":1345199,"avatar":"https://static001.geekbang.org/account/avatar/00/14/86/af/99219321.jpg","nickname":"LMOS","note":"","ucode":"B037712C8B8B3C","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":583118,"discussion_content":"是的 ","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1659924634,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"湖北","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":353373,"user_name":"墨橦的猪","can_delete":false,"product_type":"c1","uid":2401674,"ip_address":"湖北","ucode":"6DC81F6110EF90","user_header":"https://static001.geekbang.org/account/avatar/00/24/a5/8a/27602e90.jpg","comment_is_top":false,"comment_ctime":1659407478,"is_pvip":false,"replies":[{"id":128697,"content":"是的 ","user_name":"作者回复","user_name_real":"编辑","uid":1345199,"ctime":1659924748,"ip_address":"湖北","comment_id":353373,"utype":1}],"discussion_count":1,"race_medal":0,"score":4,"product_id":100117801,"comment_content":"硬件设计是特定电路实现更符合项目，并且是真正的并行结构，软件是在特定的处理器下进行项目实现，顺序结构。效率远低于直接硬件设计实现。","like_count":0,"discussions":[{"author":{"id":1345199,"avatar":"https://static001.geekbang.org/account/avatar/00/14/86/af/99219321.jpg","nickname":"LMOS","note":"","ucode":"B037712C8B8B3C","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":583124,"discussion_content":"是的 ","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1659924749,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"湖北","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":353372,"user_name":"Leo","can_delete":false,"product_type":"c1","uid":3067968,"ip_address":"湖北","ucode":"CD149598297734","user_header":"https://static001.geekbang.org/account/avatar/00/2e/d0/40/5de7e64d.jpg","comment_is_top":false,"comment_ctime":1659407458,"is_pvip":false,"replies":[{"id":128695,"content":"这是原因之一","user_name":"作者回复","user_name_real":"编辑","uid":1345199,"ctime":1659924725,"ip_address":"湖北","comment_id":353372,"utype":1}],"discussion_count":1,"race_medal":0,"score":4,"product_id":100117801,"comment_content":"软件执行，数据流和指令流需要在内存——cache——cpu之间流动，需要执行取指，译码，执行，回写等过程，并且还会出现cache miss的情况，增加时间开销。将算法定点化之后不涉及到以上的过程，所以效率大大提升！！","like_count":0,"discussions":[{"author":{"id":1345199,"avatar":"https://static001.geekbang.org/account/avatar/00/14/86/af/99219321.jpg","nickname":"LMOS","note":"","ucode":"B037712C8B8B3C","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":583122,"discussion_content":"这是原因之一","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1659924725,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"湖北","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":353371,"user_name":"Bryan","can_delete":false,"product_type":"c1","uid":1037208,"ip_address":"湖北","ucode":"BA9D6A278609F3","user_header":"https://static001.geekbang.org/account/avatar/00/0f/d3/98/60d13550.jpg","comment_is_top":false,"comment_ctime":1659407413,"is_pvip":true,"replies":[{"id":128694,"content":"这是一种原因","user_name":"作者回复","user_name_real":"编辑","uid":1345199,"ctime":1659924704,"ip_address":"湖北","comment_id":353371,"utype":1}],"discussion_count":1,"race_medal":0,"score":4,"product_id":100117801,"comment_content":"思考题：盲猜因为软件需要经过操作系统管理的内存，会涉及到虚拟内存寻址等，而硬件则可以省掉这些开销","like_count":0,"discussions":[{"author":{"id":1345199,"avatar":"https://static001.geekbang.org/account/avatar/00/14/86/af/99219321.jpg","nickname":"LMOS","note":"","ucode":"B037712C8B8B3C","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":583121,"discussion_content":"这是一种原因","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1659924704,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"湖北","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":353370,"user_name":"wudishi","can_delete":false,"product_type":"c1","uid":1356956,"ip_address":"湖北","ucode":"E60E5DBA5C44E2","user_header":"https://static001.geekbang.org/account/avatar/00/14/b4/9c/e034537f.jpg","comment_is_top":false,"comment_ctime":1659407148,"is_pvip":true,"replies":[{"id":128692,"content":"嗯嗯 对的 ","user_name":"作者回复","user_name_real":"编辑","uid":1345199,"ctime":1659924676,"ip_address":"湖北","comment_id":353370,"utype":1}],"discussion_count":1,"race_medal":0,"score":4,"product_id":100117801,"comment_content":"目测因为硬件化之后可以利用到电路是天生并行的特性，而不像cpu需要一条条指令往下执行","like_count":0,"discussions":[{"author":{"id":1345199,"avatar":"https://static001.geekbang.org/account/avatar/00/14/86/af/99219321.jpg","nickname":"LMOS","note":"","ucode":"B037712C8B8B3C","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":583119,"discussion_content":"嗯嗯 对的 ","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1659924676,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"湖北","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":353338,"user_name":"暂命名","can_delete":false,"product_type":"c1","uid":1409798,"ip_address":"湖北","ucode":"F9BBD1F9FA7EE5","user_header":"https://static001.geekbang.org/account/avatar/00/15/83/06/9d88395e.jpg","comment_is_top":false,"comment_ctime":1659365524,"is_pvip":false,"replies":[{"id":128485,"content":"嗯嗯 正确","user_name":"作者回复","user_name_real":"编辑","uid":1345199,"ctime":1659432163,"ip_address":"湖北","comment_id":353338,"utype":1}],"discussion_count":1,"race_medal":0,"score":4,"product_id":100117801,"comment_content":"软件运行在硬件之上，硬件上直接运行跟通过软件转换之后再给硬件运行两者的效率是不一样的。","like_count":0,"discussions":[{"author":{"id":1345199,"avatar":"https://static001.geekbang.org/account/avatar/00/14/86/af/99219321.jpg","nickname":"LMOS","note":"","ucode":"B037712C8B8B3C","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":582429,"discussion_content":"嗯嗯 正确","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1659432163,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"湖北","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":353337,"user_name":"一本书","can_delete":false,"product_type":"c1","uid":2767251,"ip_address":"湖北","ucode":"4C07047F052BB4","user_header":"https://static001.geekbang.org/account/avatar/00/2a/39/93/f0247cf8.jpg","comment_is_top":false,"comment_ctime":1659364771,"is_pvip":true,"replies":[{"id":128484,"content":"对","user_name":"作者回复","user_name_real":"编辑","uid":1345199,"ctime":1659432150,"ip_address":"湖北","comment_id":353337,"utype":1}],"discussion_count":1,"race_medal":0,"score":4,"product_id":100117801,"comment_content":"思考题，我觉得硬件的优化要比软件的优化快的多的原因是，软件是用CPU来读取的，如果CPU性能很差，你程序写的再好，也发挥不了太大的作用，就像华为的麒麟芯片一样，一样的软件，但是在不同的CPU上运行的效率是不一样的，好的自然就快一点。不知道对不对","like_count":0,"discussions":[{"author":{"id":1345199,"avatar":"https://static001.geekbang.org/account/avatar/00/14/86/af/99219321.jpg","nickname":"LMOS","note":"","ucode":"B037712C8B8B3C","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":582428,"discussion_content":"对","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1659432150,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"湖北","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":375374,"user_name":"xavier","can_delete":false,"product_type":"c1","uid":1243128,"ip_address":"四川","ucode":"2F7918EA37ED9F","user_header":"https://static001.geekbang.org/account/avatar/00/12/f7/f8/3c0a6854.jpg","comment_is_top":false,"comment_ctime":1685410356,"is_pvip":false,"replies":null,"discussion_count":0,"race_medal":0,"score":4,"product_id":100117801,"comment_content":"我觉得初学者首先要认识到的一点是：硬件语言代码是并行执行的，这有别于软件代码的顺序执行。","like_count":0},{"had_liked":false,"id":353482,"user_name":"肖水平","can_delete":false,"product_type":"c1","uid":2312202,"ip_address":"上海","ucode":"BA5B49AEDF84C7","user_header":"https://thirdwx.qlogo.cn/mmopen/vi_32/Q3auHgzwzM7mF1Zdh16zKFDsIjV6movCe1vArG6icbr9Bd537NDg7dA6y24LhdC3ypvzqJBW18oGcDeC2yTwDsw/132","comment_is_top":false,"comment_ctime":1659495375,"is_pvip":false,"replies":null,"discussion_count":0,"race_medal":0,"score":4,"product_id":100117801,"comment_content":"&#47;&#47;可配置位宽和计数周期数的计数器\nmodule counter #(\n        parameter               WIDTH = 4,  &#47;&#47;计数器位宽\n        parameter               COUNT = 10  &#47;&#47;计数多少次输出周期位\n    )\n    (\n        input                   clk,        &#47;&#47;输入时钟\n        input                   rstn,       &#47;&#47;复位端，低有效\n        output    [WIDTH-1:0]   cnt,        &#47;&#47;计数输出\n        output                  cout        &#47;&#47;输出周期位\n    );\n\n    reg [WIDTH-1:0]             cnt_r;      &#47;&#47;计数器寄存器\n\n    always @ (posedge clk or negedge rstn) begin\n        if (!rstn) begin                    &#47;&#47;复位时，计时归0\n            cnt_r        &lt;= 4&#39;d0;\n        end\n        else if (cnt_r == (COUNT - 1)) begin &#47;&#47;计时10个cycle时，计时归0\n            cnt_r        &lt;= 4&#39;d0;\n        end\n        else begin\n            cnt_r        &lt;= cnt_r + 4&#39;d1;   &#47;&#47;计时加1\n        end\n    end\n\n    assign  cout = (cnt_r == (COUNT - 1));  &#47;&#47;输出周期位\n    assign  cnt  = cnt_r;                   &#47;&#47;输出实时计时器\n\nendmodule\n","like_count":0},{"had_liked":false,"id":353368,"user_name":"砥砺奋进","can_delete":false,"product_type":"c1","uid":1608643,"ip_address":"广东","ucode":"2F12FD10F749AD","user_header":"https://static001.geekbang.org/account/avatar/00/18/8b/c3/bf036d99.jpg","comment_is_top":false,"comment_ctime":1659406750,"is_pvip":false,"replies":null,"discussion_count":0,"race_medal":0,"score":4,"product_id":100117801,"comment_content":"思考题是 类似于 FGPA和ASIC的区别吗 ASIC可以根据算法的逻辑采用最少的电路完成","like_count":0}]}