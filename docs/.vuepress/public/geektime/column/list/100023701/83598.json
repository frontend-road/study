{"id":83598,"title":"03 | 瀑布模型：像工厂流水线一样把软件开发分层化","content":"<p>你好，我是宝玉，我今天分享的主题是：瀑布模型，像工厂流水线一样把软件开发分层化。</p><p>可以这么说：<strong>瀑布模型算是现代软件工程的起源，软件工程的发展，很大部分都是构建于瀑布模型的基础之上的。</strong>我们后面所学的软件工程的很多内容，都是源自瀑布模型的衍生，或者其中某个阶段的细分。</p><p>我在上大学期间，还并不懂软件工程瀑布模型这些知识。当时我自学了点编程知识，然后开始在外面接点做网站的小活，开发模式非常简单，接到活直接写代码，有问题就改。这样下来居然也做了不少小网站，但是大一点的网站项目就搞不定了，甚至手头的小网站项目，找个同学帮忙都不知道大家该怎么分工。</p><p>所以当时我也很好奇，大的软件系统是如何开发出来的？那么多人一起开发一个软件，系统是如何分工协作的？</p><p>后来到大三的时候，开始系统学习软件工程课程，我才开始了解到一些理论知识，包括我做小网站的这种开发模式，都有一个专业术语，叫边写边改（Code And Fix）模型。</p><p>这不是我的发明。在1960年初，软件开发刚开始起步，这时的软件开发是混沌无序的，那时候编程语言还是汇编语言为主，开发模式就是边写边改模型。如果程序员水平高，功能简单，还是可行的。</p><p>后来软件开发需求越来越多，功能越来越复杂，从事软件开发的人员水平也参差不齐，这种落后的软件生产方式已经无法满足迅速增长的计算机软件需求，从而导致软件开发与维护过程中出现一系列严重问题，这个现象也被称之为“软件危机”。</p><!-- [[[read_end]]] --><p>像这种边写边改的开发模式，为什么说不能满足复杂软件项目的需要呢？主要是有几方面的原因：</p><ul>\n<li>整个开发过程不可控，想基于这种开发模式做项目计划太难；</li>\n<li>项目的人数多了后，无法有效分工协作；</li>\n<li>项目开始的时候对需求几乎没有进行有效分析，对需求的理解容易出现偏差，后期导致很多返工；</li>\n<li>项目编码完成后，没有有效测试，运行时Bug非常多。</li>\n</ul><h2>瀑布模型的诞生</h2><p>为了解决软件危机中的这些问题，在1970年，Winston Royce博士借鉴了其他工程领域的思想，比如建筑工程，提出了瀑布开发模型，指出软件开发应有完整之周期，并将软件开发过程分成了若干阶段。像瀑布一样，从上往下，完成一个阶段继续下一个阶段。</p><p><img src=\"https://static001.geekbang.org/resource/image/04/0f/043ec1b87258d3b414b4fa2c5572f20f.jpg?wh=2284*1663\" alt=\"\"><br>\n瀑布模型把整个项目过程分成了六个主要阶段：</p><p>一、问题的定义及规划<br>\n这个阶段是需求方和开发方共同确定软件开发目标，同时还要做可行性研究，以确定项目可行。这个阶段会产生需求文档和可行性研究报告。</p><p>二、需求分析<br>\n对需求方提出的所有需求，进行详细的分析。这个阶段一般需要和客户反复确认，以保证能充分理解客户需求。最终会形成需求分析文档。</p><p>三、软件设计<br>\n根据需求分析的结果，对整个软件系统进行抽象和设计，如系统框架设计，数据库设计等等。最后会形成架构设计文档。</p><p>四、程序编码<br>\n将架构设计和界面设计的结果转换成计算机能运行的程序代码。</p><p>五、软件测试<br>\n在编码完成后，对可运行的结果对照需求分析文档进行严密的测试。如果测试发现问题，需要修复。最终测试完成后，形成测试报告。</p><p>六、运行维护<br>\n软件开发完成，正式运行投入使用。后续需要继续维护，修复错误和增加功能。交付时需要提供使用说明文档。</p><p>瀑布模型在提出后，因为其简单可行，切实有效，马上就在很多软件项目中应用起来，一直到2000年前后，都是最主流的软件开发模型，即使到现在，你也能在很多软件项目中看到它的影子。</p><p><strong>也是从那时开始，有了“软件生命周期”(Software Life Cycle,SLC)的概念。 </strong></p><blockquote>\n<p>软件生命周期是软件的产生直到报废或停止使用的生命周期。而像瀑布模型这样，通过把整个软件生命周期划分为若干阶段来管理软件开发过程的方法，叫软件生命周期模型。</p>\n</blockquote><p>虽然现在瀑布模型已经不是最主流的开发模式，那为什么我们现在还要学习瀑布模型呢？</p><p><strong>因为不管什么软件项目，不管采用什么开发模式，有四种活动是必不可少的，那就是需求、设计、编码和测试。而这四项活动，都是起源自瀑布模型，也是瀑布模型中核心的部分。</strong></p><p>学好瀑布模型，才可以帮助你更好的理解这些内容。</p><h2>如何用瀑布模型开发项目？</h2><p>如果单纯看这些阶段的概念介绍，还是有点难以直观地理解整个软件开发过程，在这里拿我经历过的一个网站开发项目作为案例，来看一下如何使用瀑布模型来开发一个软件项目。</p><ul>\n<li><strong>问题的定义及规划的阶段</strong></li>\n</ul><p>大概在2009年的时候，Web2.0还正火，公司老板打算做一个游戏领域的社交网站。</p><p>问题很明确，就是要做一个社交网站，并且用户能按照游戏来交友。至于可行性分析嘛，按照当时Web2.0的热度，这个似乎是可行的。那么就立项了。</p><p>然后老板问项目经理，这么样一个网站，你大概得多久做出来？项目经理一看，这么复杂一个网站，怎么也得半年才能做出来一个版本，于是说半年。老板说半年太久了，给你三个月吧，项目经理心中叫苦，最后讨价还价，决定四个月上线。</p><p>于是，项目经理按照四个月开始倒推项目计划：</p><blockquote>\n<p>需求分析——2周；<br>\n软件设计——4周；<br>\n程序编码——6周；<br>\n软件测试——4周。</p>\n</blockquote><ul>\n<li><strong>需求分析的阶段</strong></li>\n</ul><p>在项目立项后，产品经理首先和老板充分的沟通，了解老板的想法是什么，要做一个什么样的网站。在了解老板的想法后，产品经理对市场上同类的社交网站进行了调研，然后用原型工具设计了网站的原型。原型虽然很简陋，但是从原型可以看出来，项目要做成什么样子，便于确认需求。</p><p>原型拿给老板看后，老板再根据自己的想法提一些反馈，这样反复沟通确认，在原型设计确认清楚后，产品经理开始撰写产品设计文档，将原型设计落实到文档，将整个网站划分成不同的功能模块，例如用户注册、登录、添加好友等，确定每个功能模块需要哪些功能。</p><p>这个阶段产品经理是最忙的，那这时候其他人在干嘛呢？其他人都还挺轻松的，架构师研究网上流行的社交网站都采用什么架构，程序员、测试看看技术文档。</p><p>虽然最终确定了产品设计文档，但是因为中间反复确认的时间过长，原定2周能完成的需求分析，最后拖到了3周。项目经理一看，最终上线时间点没办法延后，那就只好压缩编码时间了，不行加加班！</p><p>项目计划变成了：</p><blockquote>\n<p>需求分析——3周；<br>\n软件设计——4周；<br>\n程序编码——5周；<br>\n软件测试——4周；</p>\n</blockquote><ul>\n<li><strong>软件设计</strong></li>\n</ul><p>产品经理的产品设计文档确定后，架构师开始做架构设计，UI设计师开始设计UI，测试经理开始针对产品设计文档写测试用例，产品经理还要进一步设计交互。</p><p>由于前期原型设计工作做的好，所以UI设计还是很顺利的，主风格定下来以后，各个界面就是细节的确认了。</p><p>因为产品设计文档写的详细，输入输出很清楚，测试用例也进展顺利。</p><p>至于架构设计这边，架构师很有经验，先把整体架构确定，写了个技术方案文档，和大家一起开会讨论，几次后确认了整体技术方案。按照功能模块一拆分，把其中一个功能模块做了一个样板，然后把各个子模块分给开发人员，大家一起协助做详细设计，然后再分别确认。</p><p>大家都如火如荼地忙起来了。如果一切顺利的话，软件设计4周应该能完成，可以进入编码阶段了。但是软件设计进行到第3周的时候，老板的想法发生了一些变化。</p><p>因为市场上已经有了游戏社交的网站，而且运营结果不算太好，而网页游戏正流行，如果我们的平台能接入网页游戏，这会是个不错的机会。</p><p>于是需求变更了，我们要能和其他网页游戏的用户系统对接，这个需求最开始是没有提出来，也没有考虑的。</p><p>项目经理考虑再三，决定还是接受这个需求变更，但是希望能多一些时间，老板没同意，认为时间点很重要，哪怕砍一点功能，牺牲一点质量也要如期上线。但就算这时候砍功能，设计工作还是少不了多少。</p><p>于是产品经理重新修改相应原型，再确认，再重新修改产品设计文档。变更完后，UI设计的相关页面重新修改设计、测试人员修改测试用例，最苦的是架构师，当初没有考虑到要和其他用户系统对接，现在用户系统的设计都要重新考虑了。</p><p>于是为了赶进度，项目组开始加班，即使如此，软件设计阶段也推迟到了第5周才勉强完成。</p><p>项目计划又变了：</p><blockquote>\n<p>需求分析——3周；<br>\n软件设计——5周；<br>\n程序编码——5周；<br>\n软件测试——3周。</p>\n</blockquote><ul>\n<li><strong>程序编码</strong></li>\n</ul><p>终于进入编码阶段了，为了保证进度，加班还在继续，哪怕前期做了大量的设计，真到编码的时候还是有好多没有考虑到的，同时各个模块之间还存在相互依赖，有时候虽然自己功能开发完成，还需要等待其他人的功能完成才能调试，所以5周时间很快就过去了，而程序还不能完整地跑起来。</p><p>其实中间还有个小插曲，老板觉得还要加上支付的功能，但是项目经理觉得这个阶段改需求已经不可能了，以辞职为威胁总算顶回去了，打算放在下个版本加上。</p><p>终于到第6周的时候，有了一个勉强可以测试的版本。</p><p>项目计划现在变成了：</p><blockquote>\n<p>需求分析——3周<br>\n软件设计——5周<br>\n程序编码——6周<br>\n软件测试——2周</p>\n</blockquote><ul>\n<li><strong>软件测试</strong></li>\n</ul><p>留给测试的时间只有两周了，但是前期实在bug太多，两周测试时间过去，软件质量还是很糟糕，完全无法正常使用，于是项目不得不延期，一直延期了4周后，才算具备上线条件。</p><p>所以最终的项目计划差不多是：</p><blockquote>\n<p>需求分析——3周<br>\n软件设计——5周<br>\n程序编码——6周<br>\n软件测试——6周<br>\n和原定计划已经延迟了4周。</p>\n</blockquote><ul>\n<li><strong>运行维护</strong></li>\n</ul><p>网站上线后，好在前期并没有多少用户，但是线上Bug还是不少，需要继续修复线上发现的Bug。</p><h2>瀑布模型的优缺点</h2><p>以上案例是我参与过的、用瀑布模型开发的软件项目的一个缩影，你会发现瀑布模型其实跟我们传统的建筑建造方式非常类似。我们拿盖房子的过程来看看瀑布模型。</p><ul>\n<li>客户想要盖一栋房子（<strong>初步的想法</strong>）。</li>\n<li>客户一开始可能没想清楚想要什么样子的房子。（<strong>客户对需求还不清楚</strong>）</li>\n<li>施工方开始找客户确认：用途是什么，要个几层的房子，什么建筑风格，希望什么时间完工，预算多少。（<strong>问题定义</strong>）</li>\n<li>施工方根据客户提的需求，对比工期和预算，评估是不是值得做。（<strong>可行性研究</strong>）</li>\n<li>施工方评估后觉得可行，于是和客户签订合同，约定价钱和工期。（<strong>立项，制定项目计划</strong>）</li>\n<li>施工方开始跟客户沟通确认需求，例如每层户型如何，将来的装修风格等。（<strong>需求分析</strong>）</li>\n<li>确认完需求后，施工方开始出建筑施工图，还画了漂亮的建筑效果图。（<strong>系统设计和UI设计</strong>）</li>\n<li>施工方按照设计图开始施工。（<strong>程序编码</strong>）</li>\n<li>这期间如果客户去参观施工情况，客户只能看到毛胚，只有最后施工完成才能看到最终样子。（<strong>在中间客户看不到结果，只有最后能看到结果</strong>）</li>\n<li>原定二层是两个卧室，在房子施工过程中，突然客户说两个卧室不够，要改成三个卧室。这意味着施工方要对施工图重新设计，很多已经建好的房间要拆掉重建。（<strong>瀑布模型是很难响应需求变更的，而且越到后期代价越大</strong>）</li>\n<li>工程质量检查人员对施工结果进行质量检测，如果不满足质量要求，需要修改。（<strong>测试</strong>）</li>\n<li>最后验收通过后，客户入住。（<strong>上线</strong>）</li>\n</ul><p>所以你看，用瀑布模型开发软件，就像建筑工程里，盖房子一样简单和自然。每个阶段都有侧重的事情，就像需求阶段专注于搞清楚需求，编码阶段专注于实现。</p><p>最重要的是，这种编码前先设计、编码后测试、整个过程重视文档的方式，开发出来的产品，质量相对是有保障的。</p><p>但用瀑布模式开发，也存在一些问题。</p><p><strong>最大的问题就是不能及时响应需求变更，越到后期变更代价越大。</strong>另外，通常要到最后阶段才能看到结果是什么样子。</p><p>我以前参与过的用瀑布模型方式开发的项目中，在开发和测试阶段加班是常态，原因就在于需求分析和系统设计可能会有延误，从而延迟了编码阶段的开始时间，压缩了编码实现的时间。</p><p>而在编码阶段，通常会发现很多设计时没有考虑清楚的问题，或者遇到需求变更，导致编码阶段即使加班加点也会大大延期，最后留给测试阶段的时间就不够多了。</p><p>鉴于瀑布模型存在的这些问题，后来又有很多人提出了其他的软件生命周期模型，比如快速原型开发模型、增量模型、迭代模型，以期保留瀑布模型的这些优点，克服瀑布模型中存在的问题。我们将会在后面的章节中，详细介绍瀑布模型衍生出的其他开发模型。</p><p><img src=\"https://static001.geekbang.org/resource/image/88/5c/881b21fa452df38da1604f5a6b55d65c.jpg?wh=939*968\" alt=\"\"></p><h2>总结</h2><p>从瀑布模型提出至今，将近50年过去了，虽然现在大家一提起瀑布模型，似乎已经成了落后的代名词，但在当时是有划时代意义的。如果类比一下，我觉得瀑布模型的价值相当于工业界第一次提出流水线作业。</p><blockquote>\n<p>1769年，英国人乔赛亚·韦奇伍德开办埃特鲁利亚陶瓷工厂。以前制作陶瓷只有“制陶工”一个工种，一个人从挖泥、制胚到最后烧制，要求很高。但是乔赛亚把原本的制陶流程从开始到结束分成了若干阶段，每个阶段可以由不同的人完成，从单一的制陶工分成了挖泥工、运泥工、拌土工、制坯工等，这样就大大提高了生产效率，也降低对工人的要求。</p>\n</blockquote><p>同理，瀑布模型的出现，也解决了软件项目开发中的几个重要问题。</p><ul>\n<li><strong>让软件开发过程有序可控。</strong>瀑布模型的每个阶段都有明确的任务，每个阶段都有明确的交付产物，都有相应的里程碑。这些让整个过程更可控，而且能及早发现问题。</li>\n<li><strong>让分工协作变成可能。</strong>瀑布模型的六个阶段，也让软件开发产生相应的基础分工：项目经理、产品经理、架构师、软件工程师、测试工程师、运维工程师。</li>\n<li><strong>质量有保障。</strong>瀑布模型每个阶段都需要交付相应的文档，而文档的撰写和评审，可以帮助在动手之前把问题沟通清楚，想清楚。瀑布模型在编码结束后，会有严密的测试，只有测试验收通过后，才能上线发布。这些措施都让软件的质量更有保障。</li>\n</ul><h2>课后思考</h2><p>通过今天的学习，你可以对照一下，你工作中的软件项目开发是不是采用的瀑布模型？和瀑布模型有哪些不同？你认为瀑布模型有哪些好或不好的地方？欢迎你在留言区留言，和我分享讨论。</p><p>感谢阅读，如果你觉得这篇文章对你有一些启发，也欢迎把它分享给你的朋友。</p>","neighbors":{"left":{"article_title":"02 | 工程思维：把每件事都当作一个项目来推进","id":83277},"right":{"article_title":"04 | 瀑布模型之外，还有哪些开发模型？","id":84054}},"comments":[{"had_liked":false,"id":71487,"user_name":"纯洁的憎恶","can_delete":false,"product_type":"c1","uid":1130512,"ip_address":"","ucode":"5E9757DE6F45DF","user_header":"https://static001.geekbang.org/account/avatar/00/11/40/10/b6bf3c3c.jpg","comment_is_top":false,"comment_ctime":1551355731,"is_pvip":true,"replies":[{"id":"25583","content":"很感动，写了这么长的留言。这是个很生动的案例。像这样的环境，虽然说根源不是瀑布模型造成的，但是瀑布模型确实加剧了问题。<br><br>对于这种开发模式，邹老师在《构建之法》中有精彩的论述：“老板驱动的流程：笔者在和中国一些企业的软件开发者交流的时候，听闻不少人提到开发流程事实上是由行政领导主导，或者由公司的老板驱动，我们姑且把它命名为老板驱动的流程。” 领导“有极大权力， 极小责任”的驱动方式。 ​<br><br>这种项目可以考虑调整为快速迭代的模式（下一篇会提到，核心就是控制每次的需求），尽早上线核心功能，上了慢慢改，下个迭代改。就像老话说的：“生米先煮成熟饭”。<br><br>还有PM应该要能顶得住压力，在一个迭代中应该不改或者少改，才能继续推进。<br><br>另外，也能理解这种项目不是靠个人就能改变太多的，适当的时候提一些建议，改变能改变的，接受不能改变的。<br><br>最后，有具体问题也欢迎继续留言讨论，很乐意提供建议：）","user_name":"作者回复","user_name_real":"宝玉","uid":"1064938","ctime":1551363253,"ip_address":"","comment_id":71487,"utype":1}],"discussion_count":5,"race_medal":0,"score":"289314164563","product_id":100023701,"comment_content":"我对瀑布模型感触颇多啊！首先瀑布模型把复杂的软件生产过程，按照时间线索，切分为若干较为独立和专业的部分，条理清晰。在每个阶段内只需要集中精力与阶段任务即可，不用胡子眉毛一把抓。每个节点有交付件，过程可控、权责清楚明白。破布模型特别符合我所在的大型央企的性格。但是我经手好几个项目，也被瀑布模型折腾的死去活来。比如我现在正在处理的项目。<br><br>首先，从可行性分析、立项、批预算、采购建设单位就花了一年多的时间。可行性分析做了1个月，立项流程走了不到1个月，批预算的时候，主管业务的领导变卦了，要求重新做可行性分析，于是我们又花了1个月。二次立项的时候，主管信息的大领导突然决定要把区块链和人工智能等热门技术加进去，于是又要求重新立项。但是我们要做的事情实在和区块链八竿子打不着，死去活来的找了个理由扯上关系了，来来回回又花了2个月，这就半年了。再次走到批预算的环节，主管领导发现原来的预算干不了这么多事情，又不同意增补预算，于是继续扯皮。经过多番协调，总算解决了，这时候叶子已经黄了。<br><br>我们立刻开展需求调研，但各个需求部门和最终用户都借口工作太忙不搭理我们，我们只好自己憋需求，简直是闭门造车。等需求憋出来了，大领导把需求部门都叫来议一议，结果被集体口诛笔伐。大领导怒了，强令需求部门专门抽时间参与需求调研，各部门也是不情不愿啊，效果可想而知。需求总算审查通过了，就在我们准备采购实施单位的时候，国资委一直红头文件下来，公司的采购流程发生重大调整，项目被硬生生搁置下来。眼看年根了。。。<br><br>第一年就这么过去了。等来年采购流程也屡的差不多了，预算又出问题了。去年批的预算只能去年用，不允许跨年。只好等到年中调整预算，又小半年过去了。采购流程走完，实施单位也很够意思，不等合同签订就投入工作。我们用极短的时间完成了软件设计，并且开始如火如荼的开发工作，此时又到了金秋。就在这时，新的纪检书记上任了，他对我们的系统设计很不满意，要求相关部门限期整改，于是需求大调整，可是这会儿编码已经进行了1&#47;3啦。。。之后就是上线日期一推再推，从10月初推到10月底，再推到11月、12月，眼看又要跨年了。我们和实施单位连续半年997，总算看到上线的曙光，这时候公司一把手退休了。。。<br><br>新领导上任后对整个流程极不满意，否定了纪检书记的指示，于是我们又开始第2伦大调整。现在已经是项目的第三年了，我们依旧没能上线。整个团队都要累趴下了，全公司一点成果也没看见。","like_count":67,"discussions":[{"author":{"id":1064938,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/gem4tlXhUUSQwNklGwJFJ09lP4yfYwTlbNgH9vw01AJiar7z9cQeehBVgLNoZhOG9l96q12EfxpFh4SBXibmSQWw/132","nickname":"宝玉","note":"","ucode":"824342714F3310","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":441177,"discussion_content":"很感动，写了这么长的留言。这是个很生动的案例。像这样的环境，虽然说根源不是瀑布模型造成的，但是瀑布模型确实加剧了问题。\n\n对于这种开发模式，邹老师在《构建之法》中有精彩的论述：“老板驱动的流程：笔者在和中国一些企业的软件开发者交流的时候，听闻不少人提到开发流程事实上是由行政领导主导，或者由公司的老板驱动，我们姑且把它命名为老板驱动的流程。” 领导“有极大权力， 极小责任”的驱动方式。 ​\n\n这种项目可以考虑调整为快速迭代的模式（下一篇会提到，核心就是控制每次的需求），尽早上线核心功能，上了慢慢改，下个迭代改。就像老话说的：“生米先煮成熟饭”。\n\n还有PM应该要能顶得住压力，在一个迭代中应该不改或者少改，才能继续推进。\n\n另外，也能理解这种项目不是靠个人就能改变太多的，适当的时候提一些建议，改变能改变的，接受不能改变的。\n\n最后，有具体问题也欢迎继续留言讨论，很乐意提供建议：）","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1551363253,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1000007,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/42/47/1b83120d.jpg","nickname":"锟斤拷","note":"","ucode":"0F21566056D704","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":347432,"discussion_content":"同情你啊兄弟，时间就这么浪费了","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1612231223,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1922378,"avatar":"https://static001.geekbang.org/account/avatar/00/1d/55/4a/8a841200.jpg","nickname":"ACK","note":"","ucode":"C5D09B18DEF151","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":341139,"discussion_content":"实属无奈啊","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1610327469,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1953668,"avatar":"https://static001.geekbang.org/account/avatar/00/1d/cf/84/84ba9b17.jpg","nickname":"Daniel 谢少泽","note":"","ucode":"257767AFF31743","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":276668,"discussion_content":"三年时间，都够一位应届生成长起来了。来互联网行业吧。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1590926794,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1581719,"avatar":"https://static001.geekbang.org/account/avatar/00/18/22/97/7a1c4031.jpg","nickname":"Raymond吕","note":"","ucode":"401C7BD43095FC","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":188005,"discussion_content":"生动的案例，太有代入感了！","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1582787501,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":71213,"user_name":"西西弗与卡夫卡","can_delete":false,"product_type":"c1","uid":1001710,"ip_address":"","ucode":"B4C27B8335B76A","user_header":"https://static001.geekbang.org/account/avatar/00/0f/48/ee/872ad07e.jpg","comment_is_top":false,"comment_ctime":1551284562,"is_pvip":true,"replies":[{"id":"25495","content":"你这个比喻很有意思的👍，下一篇关于衍生模型的很多例子完全适应你这个比喻。<br><br>敏捷开发的Scrum可能还是有点不一样，每个Sprint并不完全按照这个周期，但是在一个Sprint的某个用户故事的开发，其实也适用于这个环。<br><br>所以你说的关于这几个阶段的功夫，确实都得练好！","user_name":"作者回复","user_name_real":"宝玉","uid":"1064938","ctime":1551294856,"ip_address":"","comment_id":71213,"utype":1}],"discussion_count":1,"race_medal":0,"score":"61680826706","product_id":100023701,"comment_content":"瀑布模型分解和识别出了软件开发过程中的几种主要活动，以及每种活动所关注的价值点，并从时间尺度上划分了对应的阶段。这几个阶段形成了一个环。现代的其他软件工程方法，举个不太恰当的比喻，就像是滚动更快的轮子。不管什么样的轮子，这几个阶段的功夫，我们都得练好","like_count":14,"discussions":[{"author":{"id":1064938,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/gem4tlXhUUSQwNklGwJFJ09lP4yfYwTlbNgH9vw01AJiar7z9cQeehBVgLNoZhOG9l96q12EfxpFh4SBXibmSQWw/132","nickname":"宝玉","note":"","ucode":"824342714F3310","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":441047,"discussion_content":"你这个比喻很有意思的👍，下一篇关于衍生模型的很多例子完全适应你这个比喻。\n\n敏捷开发的Scrum可能还是有点不一样，每个Sprint并不完全按照这个周期，但是在一个Sprint的某个用户故事的开发，其实也适用于这个环。\n\n所以你说的关于这几个阶段的功夫，确实都得练好！","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1551294856,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":71460,"user_name":"一路向北","can_delete":false,"product_type":"c1","uid":1017835,"ip_address":"","ucode":"DB0FF1C153C485","user_header":"https://static001.geekbang.org/account/avatar/00/0f/87/eb/20492a37.jpg","comment_is_top":false,"comment_ctime":1551345929,"is_pvip":false,"replies":[{"id":"25580","content":"&gt; “如果产品的需求变化不大，产品设计者的前瞻性和设计能力比较强，设计的框架的伸缩性强，是不是瀑布式的开发会优于敏捷开发呢？”<br><br>如果满足你说的前提，再加上没什么进度压力的话，瀑布模型像计划性、质量、过程控制都是很好的，是不是比敏捷开发好这个我不好随便下结论，因为敏捷开发理想情况下一样可以质量高。问题是绝大部分时候真的不是理想情况。<br><br>&gt; 对于较大的项目，如果能做到合理的项目分割，划分，那么在分项目中再实行瀑布式开发，是不是效率也会挺高？<br><br>是的，你说的这种大的拆小的是下一篇会讲的迭代模型，基于瀑布模型，但是更小，也更高效。在再下一篇我还会对比迭代模型和敏捷开发，希望能帮助你更好的理解其中的差别。<br><br>很多人不愿意尝试其他瀑布模型之外开发模式，可能是因为已经对瀑布模型太熟悉了，多看看多学习一下其他模型好的地方，再尝试实践也是很好的。","user_name":"作者回复","user_name_real":"宝玉","uid":"1064938","ctime":1551361198,"ip_address":"","comment_id":71460,"utype":1}],"discussion_count":1,"race_medal":0,"score":"40206051593","product_id":100023701,"comment_content":"目前我们的开发模式还是以瀑布型的为主。之前也引进过敏捷开发模式，但是因为团队不大，每个人的分工比较清楚，甚至经常是每个人负责一个项目，所以也就没有按照敏捷的那一套流程走。<br>我的理解是，如果产品的需求变化不大，产品设计者的前瞻性和设计能力比较强，设计的框架的伸缩性强，是不是瀑布式的开发会优于敏捷开发呢？也就是说，产品经理的需求分析能力，抽象能力很重要，而实际的实现人员相对要求会低一些？<br>对于较大的项目，如果能做到合理的项目分割，划分，那么在分项目中再实行瀑布式开发，是不是效率也会挺高？<br><br>","like_count":9,"discussions":[{"author":{"id":1064938,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/gem4tlXhUUSQwNklGwJFJ09lP4yfYwTlbNgH9vw01AJiar7z9cQeehBVgLNoZhOG9l96q12EfxpFh4SBXibmSQWw/132","nickname":"宝玉","note":"","ucode":"824342714F3310","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":441163,"discussion_content":"&amp;gt; “如果产品的需求变化不大，产品设计者的前瞻性和设计能力比较强，设计的框架的伸缩性强，是不是瀑布式的开发会优于敏捷开发呢？”\n\n如果满足你说的前提，再加上没什么进度压力的话，瀑布模型像计划性、质量、过程控制都是很好的，是不是比敏捷开发好这个我不好随便下结论，因为敏捷开发理想情况下一样可以质量高。问题是绝大部分时候真的不是理想情况。\n\n&amp;gt; 对于较大的项目，如果能做到合理的项目分割，划分，那么在分项目中再实行瀑布式开发，是不是效率也会挺高？\n\n是的，你说的这种大的拆小的是下一篇会讲的迭代模型，基于瀑布模型，但是更小，也更高效。在再下一篇我还会对比迭代模型和敏捷开发，希望能帮助你更好的理解其中的差别。\n\n很多人不愿意尝试其他瀑布模型之外开发模式，可能是因为已经对瀑布模型太熟悉了，多看看多学习一下其他模型好的地方，再尝试实践也是很好的。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1551361198,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":71722,"user_name":"王二宝","can_delete":false,"product_type":"c1","uid":1042241,"ip_address":"","ucode":"E147D6E597EF5B","user_header":"https://static001.geekbang.org/account/avatar/00/0f/e7/41/2ea1f5dc.jpg","comment_is_top":false,"comment_ctime":1551420483,"is_pvip":false,"replies":[{"id":"26009","content":"你这个总结的特别好👍<br><br>我以前不是科班的时候，就是怎么都想不明白大项目怎么开展，后来改专业到软件工程后，就觉得这是很自然而然的事情了。<br><br>而且虽然我们大学只讲了瀑布模型，但是后来再看迭代模型，马上就明白怎么回事了。当然也有科班也有问题，例如我刚开始对敏捷就有点不屑一顾，觉得瀑布模型就很好呀：）","user_name":"作者回复","user_name_real":"宝玉","uid":"1064938","ctime":1551451238,"ip_address":"","comment_id":71722,"utype":1}],"discussion_count":3,"race_medal":0,"score":"35911158851","product_id":100023701,"comment_content":"我是非科班出身的程序员，工作第三年，真的觉得《软件工程》是门必须要掌握的学科。我们公司是几人小团队，很多流程都是自己摸索的，我今天才知道，原来我们平时的工作流程就是瀑布模型啊。让我想到了吴军的专栏中说，很多野路子探索了很久才恍然大悟，并以此骄傲的东西，对于有理论基础的人来说，这就是很平常的理论啊，甚至是觉得这东西，是与生俱来的。","like_count":8,"discussions":[{"author":{"id":1064938,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/gem4tlXhUUSQwNklGwJFJ09lP4yfYwTlbNgH9vw01AJiar7z9cQeehBVgLNoZhOG9l96q12EfxpFh4SBXibmSQWw/132","nickname":"宝玉","note":"","ucode":"824342714F3310","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":441297,"discussion_content":"你这个总结的特别好👍\n\n我以前不是科班的时候，就是怎么都想不明白大项目怎么开展，后来改专业到软件工程后，就觉得这是很自然而然的事情了。\n\n而且虽然我们大学只讲了瀑布模型，但是后来再看迭代模型，马上就明白怎么回事了。当然也有科班也有问题，例如我刚开始对敏捷就有点不屑一顾，觉得瀑布模型就很好呀：）","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1551451238,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1121078,"avatar":"https://static001.geekbang.org/account/avatar/00/11/1b/36/0998732e.jpg","nickname":"chmod","note":"","ucode":"F148C85A7C9FCC","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":570149,"discussion_content":"你所谓的顿悟,只是别人的基本功。还是要站在大师的肩膀上学习，刚开始学不会没关系，慢慢学，长期看有益无害。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1651676687,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1747065,"avatar":"https://static001.geekbang.org/account/avatar/00/1a/a8/79/863d0c30.jpg","nickname":"zyb","note":"","ucode":"28107BBD12FD42","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":287881,"discussion_content":"我最近做了一个项目，整体加班加点，中午就简单吃点饭干了一个月，瘦了十几斤。到最后做出来的项目自己心里也没底，我发誓再也不这样了。我之前是边写边干模型，现在试着用瀑布模型。我这需求变更没那么大所以还是很合适的。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1593577216,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":71312,"user_name":"Felix","can_delete":false,"product_type":"c1","uid":1043717,"ip_address":"","ucode":"DD605AA7D79886","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/DYAIOgq83epYwhroC3gic3JJSUZqMFxL0x7iasNUyjUaB2Gp3f0Eiapegc10p5S6pp4dYibEb07VA1IYWldLK4LJdg/132","comment_is_top":false,"comment_ctime":1551318702,"is_pvip":false,"replies":[{"id":"25536","content":"通常两种方案：<br>1. 砍需求，以保证可以按时完成<br>2. 快速迭代，可以及时响应变更<br><br>","user_name":"作者回复","user_name_real":"宝玉","uid":"1064938","ctime":1551326491,"ip_address":"","comment_id":71312,"utype":1}],"discussion_count":1,"race_medal":0,"score":"35911057070","product_id":100023701,"comment_content":"实际工作中我举一个例子，倒逼项目往往就自然而然地使用了瀑布模型，而中间一些领导的&quot;创意&quot;或竞品的对齐导致需求变更，最惨的是瀑布的下游——开发和测试 的疯狂加班，请问宝玉老师对于倒逼项目有没有自己的处理方式和建议","like_count":8,"discussions":[{"author":{"id":1064938,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/gem4tlXhUUSQwNklGwJFJ09lP4yfYwTlbNgH9vw01AJiar7z9cQeehBVgLNoZhOG9l96q12EfxpFh4SBXibmSQWw/132","nickname":"宝玉","note":"","ucode":"824342714F3310","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":441104,"discussion_content":"通常两种方案：\n1. 砍需求，以保证可以按时完成\n2. 快速迭代，可以及时响应变更\n\n","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1551326491,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":71909,"user_name":"Charles","can_delete":false,"product_type":"c1","uid":1001410,"ip_address":"","ucode":"32646D78CC0389","user_header":"https://static001.geekbang.org/account/avatar/00/0f/47/c2/e9fa4cf6.jpg","comment_is_top":false,"comment_ctime":1551484031,"is_pvip":false,"replies":[{"id":"26043","content":"《10 | 项目计划：代码未动，计划先行》会讲时间估算。<br><br>通常时间估算并不需要特别精确，初步的需求分析就可以大致估算出每个阶段需要的时间。大致时间确定后，就可以设置里程碑。里程碑定了后再确定细的计划。<br><br>虽然我觉得甩锅不是什么好事，但是如果你真要甩锅，最简单有效就是设置流程去划分责任：）<br><br>上线后有问题其实很正常的，重要的是要有合理的机制：<br>1. 及时发现问题，监控报警、用户投诉反馈等<br>2. 马上解决问题，对线上版本有专门的代码分支，可以随时打补丁修复，测试上线<br>3. 避免后续再犯同样的错误。要分析原因，看什么导致问题，然后改进流程。<br><br>希望以上回答能解答你的问题，如果还有不清楚的欢迎继续留言。","user_name":"作者回复","user_name_real":"宝玉","uid":"1064938","ctime":1551489247,"ip_address":"","comment_id":71909,"utype":1}],"discussion_count":1,"race_medal":0,"score":"31616255103","product_id":100023701,"comment_content":"我们现在用的也基本是瀑布模型+小版本瀑布迭代，碰到需求变更也尽量放到下个版本拥抱，你文章的案例和留言中的案例看完，感触颇深似曾相识，精彩😄<br><br>几个点请教下老师：<br><br>1. 文中案例时间预估是老板给的，还有一种是老板或客户给个简单的需求和案例让预估时间，那么在瀑布模型下是否先要经历完需求分析以及架构设计阶段才能预估出时间了？能否给个预估时间好的实践？谢谢🙏<br><br>2. 瀑布模型非常考验人的能力，会造成互相扯皮推卸责任，上线以后有什么问题，还会互相推锅背，这种情况下管理者有啥好的方式去解决？老师有什么经验分享吗？谢谢🙏<br><br>","like_count":7,"discussions":[{"author":{"id":1064938,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/gem4tlXhUUSQwNklGwJFJ09lP4yfYwTlbNgH9vw01AJiar7z9cQeehBVgLNoZhOG9l96q12EfxpFh4SBXibmSQWw/132","nickname":"宝玉","note":"","ucode":"824342714F3310","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":441386,"discussion_content":"《10 | 项目计划：代码未动，计划先行》会讲时间估算。\n\n通常时间估算并不需要特别精确，初步的需求分析就可以大致估算出每个阶段需要的时间。大致时间确定后，就可以设置里程碑。里程碑定了后再确定细的计划。\n\n虽然我觉得甩锅不是什么好事，但是如果你真要甩锅，最简单有效就是设置流程去划分责任：）\n\n上线后有问题其实很正常的，重要的是要有合理的机制：\n1. 及时发现问题，监控报警、用户投诉反馈等\n2. 马上解决问题，对线上版本有专门的代码分支，可以随时打补丁修复，测试上线\n3. 避免后续再犯同样的错误。要分析原因，看什么导致问题，然后改进流程。\n\n希望以上回答能解答你的问题，如果还有不清楚的欢迎继续留言。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1551489247,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":72894,"user_name":"卡皮","can_delete":false,"product_type":"c1","uid":1175570,"ip_address":"","ucode":"20A8D19DD91AE7","user_header":"https://static001.geekbang.org/account/avatar/00/11/f0/12/89b7c95a.jpg","comment_is_top":false,"comment_ctime":1551751532,"is_pvip":false,"replies":[{"id":"26422","content":"谢谢夸奖。<br><br>其实这就像上课，课后的答疑。毕竟一篇文章不可能面面俱到，难免有没讲到和没讲清楚的地方，通过留言和回复，可以把这些问题补充说明清楚。","user_name":"作者回复","user_name_real":"宝玉","uid":"1064938","ctime":1551759483,"ip_address":"","comment_id":72894,"utype":1}],"discussion_count":1,"race_medal":0,"score":"27321555308","product_id":100023701,"comment_content":"定了很多课程，宝玉老师是每条留言都回复的，赞一个！","like_count":6,"discussions":[{"author":{"id":1064938,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/gem4tlXhUUSQwNklGwJFJ09lP4yfYwTlbNgH9vw01AJiar7z9cQeehBVgLNoZhOG9l96q12EfxpFh4SBXibmSQWw/132","nickname":"宝玉","note":"","ucode":"824342714F3310","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":441813,"discussion_content":"谢谢夸奖。\n\n其实这就像上课，课后的答疑。毕竟一篇文章不可能面面俱到，难免有没讲到和没讲清楚的地方，通过留言和回复，可以把这些问题补充说明清楚。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1551759483,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":71548,"user_name":"纯洁的憎恶","can_delete":false,"product_type":"c1","uid":1130512,"ip_address":"","ucode":"5E9757DE6F45DF","user_header":"https://static001.geekbang.org/account/avatar/00/11/40/10/b6bf3c3c.jpg","comment_is_top":false,"comment_ctime":1551366975,"is_pvip":true,"replies":[{"id":"25667","content":"感觉大家项目经历都很丰富，一些内容触动了大家留言的想法💡<br><br>很喜欢看大家的留言，可以了解大家想要什么有什么问题，也可以了解到很多有意思的项目，根据留言还可以调整后面的内容呢。<br><br>谢谢","user_name":"作者回复","user_name_real":"宝玉","uid":"1064938","ctime":1551369285,"ip_address":"","comment_id":71548,"utype":1}],"discussion_count":1,"race_medal":0,"score":"27321170751","product_id":100023701,"comment_content":"老师的留言区真是异彩纷呈啊😁","like_count":6,"discussions":[{"author":{"id":1064938,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/gem4tlXhUUSQwNklGwJFJ09lP4yfYwTlbNgH9vw01AJiar7z9cQeehBVgLNoZhOG9l96q12EfxpFh4SBXibmSQWw/132","nickname":"宝玉","note":"","ucode":"824342714F3310","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":441195,"discussion_content":"感觉大家项目经历都很丰富，一些内容触动了大家留言的想法💡\n\n很喜欢看大家的留言，可以了解大家想要什么有什么问题，也可以了解到很多有意思的项目，根据留言还可以调整后面的内容呢。\n\n谢谢","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1551369285,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":73428,"user_name":"beyondzhao","can_delete":false,"product_type":"c1","uid":1003123,"ip_address":"","ucode":"439C944D5B1192","user_header":"https://static001.geekbang.org/account/avatar/00/0f/4e/73/abb7bfe3.jpg","comment_is_top":false,"comment_ctime":1551882630,"is_pvip":false,"replies":[{"id":"26771","content":"具体还是看什么应用，App还是Web还是其他，Web的话Axure应该是不错的选择。<br><br>如果是App我最近看到一个高保真的原型设计工具 framer 非常厉害：<br>https:&#47;&#47;www.framer.com&#47;","user_name":"作者回复","user_name_real":"宝玉","uid":"1064938","ctime":1551897496,"ip_address":"","comment_id":73428,"utype":1}],"discussion_count":1,"race_medal":0,"score":"23026719110","product_id":100023701,"comment_content":"能不能问一下老师，现在行业使用较多的原型工具有哪些？是Axure吗？","like_count":5,"discussions":[{"author":{"id":1064938,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/gem4tlXhUUSQwNklGwJFJ09lP4yfYwTlbNgH9vw01AJiar7z9cQeehBVgLNoZhOG9l96q12EfxpFh4SBXibmSQWw/132","nickname":"宝玉","note":"","ucode":"824342714F3310","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":442081,"discussion_content":"具体还是看什么应用，App还是Web还是其他，Web的话Axure应该是不错的选择。\n\n如果是App我最近看到一个高保真的原型设计工具 framer 非常厉害：\nhttps://www.framer.com/","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1551897496,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":71764,"user_name":"tongmin_tsai","can_delete":false,"product_type":"c1","uid":1045090,"ip_address":"","ucode":"D9423E770D5846","user_header":"https://static001.geekbang.org/account/avatar/00/0f/f2/62/f873cd8f.jpg","comment_is_top":false,"comment_ctime":1551428235,"is_pvip":false,"replies":[{"id":"25999","content":"文档这部分，没有什么统一的模板。我的观点是，文档最关键的地方在于达到其目的，格式是其次的。<br>文档的目的我觉得主要是两点：<br>1. 写文档的过程中帮助你梳理清楚逻辑<br>2. 写出来的文档是要用来沟通的，让其他人通过文档明白你的思路<br><br>所以建议不用太在意格式，重点放在内容上就好了。","user_name":"作者回复","user_name_real":"宝玉","uid":"1064938","ctime":1551449938,"ip_address":"","comment_id":71764,"utype":1}],"discussion_count":1,"race_medal":0,"score":"23026264715","product_id":100023701,"comment_content":"老师，我经历不同的公司，因为在较传统的行业，基本都采用瀑布模型，但是不同的公司，在瀑布模型的流程上大体差不多，就是每个流程，像您里面说到的 问题的定义及规划 -》需求分析-》软件设计-》程序编码-》软件测试-》运行维护等阶段，输出产出不同的成果，大体就是不同的公司，每个阶段产出不一致，特别是问题的定义及规划 -》需求分析-》软件设计这些阶段，比如基本都是产出相应的文档，有些还产出如原型图，流程图或者一些UML相关的状态机图等等，不知道有没有业内比较好的实践模板可以提供参考的，有没有较为通用，符合中小型公司，或者对应中大型公司的模板，如果这些规范的较好，就不会造成有时文档五花八门的现象","like_count":5,"discussions":[{"author":{"id":1064938,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/gem4tlXhUUSQwNklGwJFJ09lP4yfYwTlbNgH9vw01AJiar7z9cQeehBVgLNoZhOG9l96q12EfxpFh4SBXibmSQWw/132","nickname":"宝玉","note":"","ucode":"824342714F3310","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":441320,"discussion_content":"文档这部分，没有什么统一的模板。我的观点是，文档最关键的地方在于达到其目的，格式是其次的。\n文档的目的我觉得主要是两点：\n1. 写文档的过程中帮助你梳理清楚逻辑\n2. 写出来的文档是要用来沟通的，让其他人通过文档明白你的思路\n\n所以建议不用太在意格式，重点放在内容上就好了。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1551449938,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":71233,"user_name":"javaadu","can_delete":false,"product_type":"c1","uid":1000519,"ip_address":"","ucode":"8C0B140F1C8992","user_header":"https://static001.geekbang.org/account/avatar/00/0f/44/47/3ddb94d0.jpg","comment_is_top":false,"comment_ctime":1551301981,"is_pvip":true,"replies":[{"id":"25498","content":"04就会讲迭代模型，是最容易从瀑布模型演进过去的，可以很有效的应对需求不清楚的情况。其实你这种情况最好是05敏捷开发，但是实施难度要大一些，不够了解的话还不如迭代模型。<br><br>具体到实施上来说呢，就是你考虑把大瀑布拆成小瀑布，固定迭代的周期（例如2-4周），每个迭代都发布一个可以运行的版本（非常重要），本质上还是瀑布，但是这种模式，可以让你先选择优先级高的需求，当前迭代如果没搞清楚需求也没关系，下个迭代改进完善。<br><br>可行性分析和需求分析在后面章节会涉及。","user_name":"作者回复","user_name_real":"宝玉","uid":"1064938","ctime":1551311885,"ip_address":"","comment_id":71233,"utype":1}],"discussion_count":1,"race_medal":0,"score":"23026138461","product_id":100023701,"comment_content":"我们是包在敏捷开发下的瀑布模型，实际实施的时候还有点边写边改模型的成分。<br><br>瀑布模型之于软件开发，就像流水线作业之于小作坊，有了这套理论指导下的软件小作坊终于有机会稍微正规一点。<br><br>瀑布模型最大的问题就是难易快速响应需求的变化。<br><br>我最近对需求不明确有点感想：软件开发中的需求不明确加上变动多，对于技术人员来讲真的非常懊恼，因为意味着工作的反复和不可控，但是从需求方的角度来看如果一件事情已经想得很清楚，那说明有其他人做过了类似的事情，那我们在做的时候已经晚人一步了。<br><br>我觉得需求变更并不是说完全不可接受，但是要有个度，而且要考虑成本，加（改）需求带来的工作量增加不能一直让技术团队加班来承担，否则团队的挫败感会积累。<br><br>特别想听老师专门讲讲如何应对这些情况，如何有效得做可行性分析和需求管理。<br><br>祝近安。<br>阿杜","like_count":5,"discussions":[{"author":{"id":1064938,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/gem4tlXhUUSQwNklGwJFJ09lP4yfYwTlbNgH9vw01AJiar7z9cQeehBVgLNoZhOG9l96q12EfxpFh4SBXibmSQWw/132","nickname":"宝玉","note":"","ucode":"824342714F3310","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":441060,"discussion_content":"04就会讲迭代模型，是最容易从瀑布模型演进过去的，可以很有效的应对需求不清楚的情况。其实你这种情况最好是05敏捷开发，但是实施难度要大一些，不够了解的话还不如迭代模型。\n\n具体到实施上来说呢，就是你考虑把大瀑布拆成小瀑布，固定迭代的周期（例如2-4周），每个迭代都发布一个可以运行的版本（非常重要），本质上还是瀑布，但是这种模式，可以让你先选择优先级高的需求，当前迭代如果没搞清楚需求也没关系，下个迭代改进完善。\n\n可行性分析和需求分析在后面章节会涉及。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1551311885,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":71217,"user_name":"Tomcat","can_delete":false,"product_type":"c1","uid":1346364,"ip_address":"","ucode":"B270CEED693256","user_header":"https://static001.geekbang.org/account/avatar/00/14/8b/3c/0462eca7.jpg","comment_is_top":false,"comment_ctime":1551285304,"is_pvip":false,"replies":[{"id":"25496","content":"👍<br>是的，瀑布模型虽然问题比较多一点，但是意义重大。后续的模型都是为了解决瀑布模型而努力的。","user_name":"作者回复","user_name_real":"宝玉","uid":"1064938","ctime":1551294915,"ip_address":"","comment_id":71217,"utype":1}],"discussion_count":1,"race_medal":0,"score":"23026121784","product_id":100023701,"comment_content":"瀑布模型原来才是最经典的软件开发模型！这一点大大出乎我的意料。也就是说，后续那些敏捷开发等模型都是在解决瀑布模型的缺点而努力的！","like_count":5,"discussions":[{"author":{"id":1064938,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/gem4tlXhUUSQwNklGwJFJ09lP4yfYwTlbNgH9vw01AJiar7z9cQeehBVgLNoZhOG9l96q12EfxpFh4SBXibmSQWw/132","nickname":"宝玉","note":"","ucode":"824342714F3310","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":441050,"discussion_content":"👍\n是的，瀑布模型虽然问题比较多一点，但是意义重大。后续的模型都是为了解决瀑布模型而努力的。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1551294915,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":73453,"user_name":"中年男子","can_delete":false,"product_type":"c1","uid":1039204,"ip_address":"","ucode":"027C86B3370150","user_header":"https://static001.geekbang.org/account/avatar/00/0f/db/64/06d54a80.jpg","comment_is_top":false,"comment_ctime":1551886819,"is_pvip":true,"replies":[{"id":"26791","content":"是的，其实我这也算是抛砖引玉，提出一个观点，然后引发更多讨论，有时候甚至讨论的观点更精彩！👍<br><br>那你可以尝试快速迭代试试，如果周期能短一点，也许对于需求的响应能迅速一点，能改善一点。","user_name":"作者回复","user_name_real":"宝玉","uid":"1064938","ctime":1551924213,"ip_address":"","comment_id":73453,"utype":1}],"discussion_count":1,"race_medal":0,"score":"18731756003","product_id":100023701,"comment_content":"花了一个小时把这一篇的正文及评论看完，真是精彩，受益匪浅，评论区的案例和宝玉老师的回复看一遍都不过瘾。<br><br>我现在公司最大的问题就是使用瀑布模型，需求还频繁改动，程序员苦不堪言。老板驱动极大权利极小责任简直是说到心坎里了…","like_count":4,"discussions":[{"author":{"id":1064938,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/gem4tlXhUUSQwNklGwJFJ09lP4yfYwTlbNgH9vw01AJiar7z9cQeehBVgLNoZhOG9l96q12EfxpFh4SBXibmSQWw/132","nickname":"宝玉","note":"","ucode":"824342714F3310","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":442095,"discussion_content":"是的，其实我这也算是抛砖引玉，提出一个观点，然后引发更多讨论，有时候甚至讨论的观点更精彩！👍\n\n那你可以尝试快速迭代试试，如果周期能短一点，也许对于需求的响应能迅速一点，能改善一点。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1551924213,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":71718,"user_name":"草裡菌","can_delete":false,"product_type":"c1","uid":1241514,"ip_address":"","ucode":"E11C630ABA4370","user_header":"https://static001.geekbang.org/account/avatar/00/12/f1/aa/c29def94.jpg","comment_is_top":false,"comment_ctime":1551420243,"is_pvip":false,"replies":[{"id":"25987","content":"大功能确实会超过一个迭代周期，这种情况下，还是应该坚持按时发布更新，先把完成的小功能和bug修复发布，没完成的放在后面的迭代中继续完成。不然就又回去大瀑布了。","user_name":"作者回复","user_name_real":"宝玉","uid":"1064938","ctime":1551448675,"ip_address":"","comment_id":71718,"utype":1}],"discussion_count":1,"race_medal":0,"score":"18731289427","product_id":100023701,"comment_content":"几年前用瀑布模型开发过一些手机APP项目，可能是APP比较量轻，除了第一版耗时4个月左右，之后就进入快速迭代（迭代周期在一个月内）。产品部会在当前版本的开发和测试的环节进入新版本迭代进程，等到测试完毕，差不多设计也快递交结果给开发了，工种间的空闲间隔并不长，工作量还是蛮饱和的。不过进入大功能迭代还是会“卡壳”，而且无论何时，开发和测试总在加班，哈哈哈。期待后续的专栏。","like_count":4,"discussions":[{"author":{"id":1064938,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/gem4tlXhUUSQwNklGwJFJ09lP4yfYwTlbNgH9vw01AJiar7z9cQeehBVgLNoZhOG9l96q12EfxpFh4SBXibmSQWw/132","nickname":"宝玉","note":"","ucode":"824342714F3310","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":441295,"discussion_content":"大功能确实会超过一个迭代周期，这种情况下，还是应该坚持按时发布更新，先把完成的小功能和bug修复发布，没完成的放在后面的迭代中继续完成。不然就又回去大瀑布了。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1551448675,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":77552,"user_name":"Geek_2472fb","can_delete":false,"product_type":"c1","uid":1014981,"ip_address":"","ucode":"E109C794E2E174","user_header":"https://static001.geekbang.org/account/avatar/00/0f/7c/c5/e3702506.jpg","comment_is_top":false,"comment_ctime":1552962419,"is_pvip":false,"replies":[{"id":"28330","content":"《构建之法》中说：软件=程序+软件工程，不无道理","user_name":"作者回复","user_name_real":"宝玉","uid":"1064938","ctime":1552968807,"ip_address":"","comment_id":77552,"utype":1}],"discussion_count":1,"race_medal":0,"score":"14437864307","product_id":100023701,"comment_content":"有了软件工程，软件开发才更像一个产业","like_count":3,"discussions":[{"author":{"id":1064938,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/gem4tlXhUUSQwNklGwJFJ09lP4yfYwTlbNgH9vw01AJiar7z9cQeehBVgLNoZhOG9l96q12EfxpFh4SBXibmSQWw/132","nickname":"宝玉","note":"","ucode":"824342714F3310","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":443775,"discussion_content":"《构建之法》中说：软件=程序+软件工程，不无道理","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1552968807,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":73424,"user_name":"beyondzhao","can_delete":false,"product_type":"c1","uid":1003123,"ip_address":"","ucode":"439C944D5B1192","user_header":"https://static001.geekbang.org/account/avatar/00/0f/4e/73/abb7bfe3.jpg","comment_is_top":false,"comment_ctime":1551882328,"is_pvip":false,"replies":[{"id":"26772","content":"认同的，做之前先要想清楚。我昨天正好写了一个微博：<br><br>&gt; 我在带新人的时候，一般都会要求他们在实现一个稍微大一点的项目的时候，先做一个简单的设计，想清楚分哪些模块，模块之间关系是什么，要提供哪些对外的接口等。对设计文档格式没有要求，但写完要给我Review，我会提一些建议，其实就是帮他们想清楚。<br><br>&gt; 这么做主要目的让他们在写文档的过程中，把问题考虑清楚，不要上手就写代码，结果写一半才发现当初有很多问题没考虑到的，要大概甚至重写。<br><br>https:&#47;&#47;www.weibo.com&#47;1727858283&#47;HjAaacaMl?from=page_1005051727858283_profile&amp;wvr=6&amp;mod=weibotime&amp;type=comment","user_name":"作者回复","user_name_real":"宝玉","uid":"1064938","ctime":1551897697,"ip_address":"","comment_id":73424,"utype":1}],"discussion_count":1,"race_medal":0,"score":"10141816920","product_id":100023701,"comment_content":"非科班出身的我现在在学校有项目都是拿来就写代码，觉得需求分析是形式主义，结果往往写到一半感觉思路混乱。看来系统学习软件工程的知识还是很有必要的，尤其是关键的需求分析阶段，是帮助你理清思路的必要步骤。","like_count":2,"discussions":[{"author":{"id":1064938,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/gem4tlXhUUSQwNklGwJFJ09lP4yfYwTlbNgH9vw01AJiar7z9cQeehBVgLNoZhOG9l96q12EfxpFh4SBXibmSQWw/132","nickname":"宝玉","note":"","ucode":"824342714F3310","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":442078,"discussion_content":"认同的，做之前先要想清楚。我昨天正好写了一个微博：\n\n&amp;gt; 我在带新人的时候，一般都会要求他们在实现一个稍微大一点的项目的时候，先做一个简单的设计，想清楚分哪些模块，模块之间关系是什么，要提供哪些对外的接口等。对设计文档格式没有要求，但写完要给我Review，我会提一些建议，其实就是帮他们想清楚。\n\n&amp;gt; 这么做主要目的让他们在写文档的过程中，把问题考虑清楚，不要上手就写代码，结果写一半才发现当初有很多问题没考虑到的，要大概甚至重写。\n\nhttps://www.weibo.com/1727858283/HjAaacaMl?from=page_1005051727858283_profile&amp;amp;wvr=6&amp;amp;mod=weibotime&amp;amp;type=comment","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1551897697,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":72155,"user_name":"alva_xu","can_delete":false,"product_type":"c1","uid":1003946,"ip_address":"","ucode":"1D5B592B3A780F","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTLPxmcBiaXpTjuyicHJJwVECstJPyHJj8ZMOEdjz5N3rQzTkR4vTF3bpNXLm4MftPNFPI6ibsVRN5FbA/132","comment_is_top":false,"comment_ctime":1551530003,"is_pvip":false,"replies":[{"id":"26150","content":"还是看项目类型吧，因为架构一定是构建在需求之上的，如果需求不明确，很难设计出来合适的架构，所以难免会改，反倒不如先设计合适的架构，后面慢慢修改，一定阶段后重构。","user_name":"作者回复","user_name_real":"宝玉","uid":"1064938","ctime":1551534760,"ip_address":"","comment_id":72155,"utype":1}],"discussion_count":1,"race_medal":0,"score":"10141464595","product_id":100023701,"comment_content":"另外，老师提到瀑布里夹敏捷，我觉得这是大型项目常用的方法。比如对于大型系统的架构设计和落地，我觉得采用瀑布方法比较好，架构就如地基，如果需求不明，设计上经常要修改，自然会影响项目质量和进度。我觉得还是以造房子为例，越是地基和框架，越要少改，尽量一次成型。","like_count":2,"discussions":[{"author":{"id":1064938,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/gem4tlXhUUSQwNklGwJFJ09lP4yfYwTlbNgH9vw01AJiar7z9cQeehBVgLNoZhOG9l96q12EfxpFh4SBXibmSQWw/132","nickname":"宝玉","note":"","ucode":"824342714F3310","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":441485,"discussion_content":"还是看项目类型吧，因为架构一定是构建在需求之上的，如果需求不明确，很难设计出来合适的架构，所以难免会改，反倒不如先设计合适的架构，后面慢慢修改，一定阶段后重构。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1551534760,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":72149,"user_name":"alva_xu","can_delete":false,"product_type":"c1","uid":1003946,"ip_address":"","ucode":"1D5B592B3A780F","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTLPxmcBiaXpTjuyicHJJwVECstJPyHJj8ZMOEdjz5N3rQzTkR4vTF3bpNXLm4MftPNFPI6ibsVRN5FbA/132","comment_is_top":false,"comment_ctime":1551529622,"is_pvip":false,"replies":[{"id":"26149","content":"你说的第二个方案应该还是可行的，因为甲方关心的是产品质量和价钱，如果你的方案价钱差不多，质量可以更好，他们应该会支持的。<br><br>当然这个很多时候不是一个人就能解决的了的。及时是瀑布模型，也可以借鉴一些其他模型好的实践来优化，例如在开发阶段采用迭代模型或者敏捷开发，采用持续集成提升效率。","user_name":"作者回复","user_name_real":"宝玉","uid":"1064938","ctime":1551534665,"ip_address":"","comment_id":72149,"utype":1}],"discussion_count":1,"race_medal":0,"score":"10141464214","product_id":100023701,"comment_content":"在我们企业，由于软件开发以外包为主，由于合同的原因，往往在项目外包前就已经基于需求做出了工作量的预算，以便有明确的合同价格，所以，难以推行敏捷或者迭代的工作方法，往往采用瀑布模式进行开发。但同时，又存在“老板驱动的流程” 也就是  领导“有极大权力， 极小责任”，需求变更随时随地，用户验收又不好好进行，导致项目质量和工期都难以把握。我觉得比较好的解决方法，有两个，1，是建立自开发团队，2是和外包团队签长期合作合同。这样就可以用敏捷迭代的方法来面对需求变更了。当然，这里也会带来工作量核算等等问题。","like_count":2,"discussions":[{"author":{"id":1064938,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/gem4tlXhUUSQwNklGwJFJ09lP4yfYwTlbNgH9vw01AJiar7z9cQeehBVgLNoZhOG9l96q12EfxpFh4SBXibmSQWw/132","nickname":"宝玉","note":"","ucode":"824342714F3310","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":441484,"discussion_content":"你说的第二个方案应该还是可行的，因为甲方关心的是产品质量和价钱，如果你的方案价钱差不多，质量可以更好，他们应该会支持的。\n\n当然这个很多时候不是一个人就能解决的了的。及时是瀑布模型，也可以借鉴一些其他模型好的实践来优化，例如在开发阶段采用迭代模型或者敏捷开发，采用持续集成提升效率。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1551534665,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":71733,"user_name":"Linuxer","can_delete":false,"product_type":"c1","uid":1153978,"ip_address":"","ucode":"272D9D8089C3D6","user_header":"https://static001.geekbang.org/account/avatar/00/11/9b/ba/333b59e5.jpg","comment_is_top":false,"comment_ctime":1551422996,"is_pvip":false,"replies":[{"id":"26002","content":"即使只有一个人，建议也要做简单的需求分析和设计，做完后，形成简单的文档，找人评审一下，提一些意见。<br><br>因为你写文档的过程，给别人讲的过程，其实是在帮助你思考，帮助你梳理清楚逻辑，避免在实现的时候发现好多问题没想清楚。<br><br>还有一个思路就是快一点迭代，每一个迭代解决优先级最高的问题，然后下一个迭代中改进上一个迭代的问题。<br><br>项目中犯错误其实很正常的，重要的时候要总结，看看通过什么方式能改进，避免犯类似的错误。","user_name":"作者回复","user_name_real":"宝玉","uid":"1064938","ctime":1551450461,"ip_address":"","comment_id":71733,"utype":1}],"discussion_count":1,"race_medal":0,"score":"10141357588","product_id":100023701,"comment_content":"老师您好，小公司有很多项目就是一两个人，没有那么多角色，怎么做到按这种流程去开发项目呢?比如常常在代码编写过程中发现很多问题都没考虑全面又感觉在交流需求的时候根本就没想到，要怎么在之后的项目中不再犯这种问题呢？","like_count":2,"discussions":[{"author":{"id":1064938,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/gem4tlXhUUSQwNklGwJFJ09lP4yfYwTlbNgH9vw01AJiar7z9cQeehBVgLNoZhOG9l96q12EfxpFh4SBXibmSQWw/132","nickname":"宝玉","note":"","ucode":"824342714F3310","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":441303,"discussion_content":"即使只有一个人，建议也要做简单的需求分析和设计，做完后，形成简单的文档，找人评审一下，提一些意见。\n\n因为你写文档的过程，给别人讲的过程，其实是在帮助你思考，帮助你梳理清楚逻辑，避免在实现的时候发现好多问题没想清楚。\n\n还有一个思路就是快一点迭代，每一个迭代解决优先级最高的问题，然后下一个迭代中改进上一个迭代的问题。\n\n项目中犯错误其实很正常的，重要的时候要总结，看看通过什么方式能改进，避免犯类似的错误。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1551450461,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":71644,"user_name":"修远","can_delete":false,"product_type":"c1","uid":1438452,"ip_address":"","ucode":"F4DFC99AAB8DA7","user_header":"https://static001.geekbang.org/account/avatar/00/15/f2/f4/d829e72e.jpg","comment_is_top":false,"comment_ctime":1551406491,"is_pvip":false,"replies":[{"id":"25748","content":"是呀，要不怎么在学习软件工程之前就先说工程思维呢：）<br><br>需求变更当然容易导致延期，只是不知道毕业论文是不是也可以迭代方式写呢？","user_name":"作者回复","user_name_real":"宝玉","uid":"1064938","ctime":1551410939,"ip_address":"","comment_id":71644,"utype":1}],"discussion_count":1,"race_medal":0,"score":"10141341083","product_id":100023701,"comment_content":"一般来说，如果按照一切都是工程的概念呢，瀑布模型在现实生活中遇到还是比较多的，毕业论文开题之后不能随意改动，否则大概率造成延期，哈哈哈。","like_count":2,"discussions":[{"author":{"id":1064938,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/gem4tlXhUUSQwNklGwJFJ09lP4yfYwTlbNgH9vw01AJiar7z9cQeehBVgLNoZhOG9l96q12EfxpFh4SBXibmSQWw/132","nickname":"宝玉","note":"","ucode":"824342714F3310","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":441252,"discussion_content":"是呀，要不怎么在学习软件工程之前就先说工程思维呢：）\n\n需求变更当然容易导致延期，只是不知道毕业论文是不是也可以迭代方式写呢？","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1551410939,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":71574,"user_name":"beiler","can_delete":false,"product_type":"c1","uid":1192989,"ip_address":"","ucode":"0A62FE86617486","user_header":"https://static001.geekbang.org/account/avatar/00/12/34/1d/169cd800.jpg","comment_is_top":false,"comment_ctime":1551372762,"is_pvip":false,"replies":[{"id":"25709","content":"如果你在1.1发现bug，需要甄别一下紧急程度，紧急的话，就1.1分支修复，然后hotfix，不紧急的，就1.2修复好了。<br><br>分支合并有两种策略：1. 不合并，如果有bug fix，各个分支同步修改；2. 分支合并回主分支，例如1.1上线时创建分支，1.2开始在主分支开发，开发时发现1.1的bug，只更新1.1分支，再定期把1.1的分支合并回主分支。<br><br>敏捷开发中，通常建议只做刚刚好的设计，不必要考虑太多后续的需求变更，定期再重构（例如你可以重新设计表，然后把旧数据导入）。<br><br>极客时间有个《从0开始学架构》的专栏（也出书了）不错，你可以看看。","user_name":"作者回复","user_name_real":"宝玉","uid":"1064938","ctime":1551399107,"ip_address":"","comment_id":71574,"utype":1}],"discussion_count":1,"race_medal":0,"score":"10141307354","product_id":100023701,"comment_content":"我觉得可以把需求细分，版本进行快速的迭代，比如列清1.1版本的需求，1.2版本的需求，每个月发布一个版本，这种快速迭代。但是这样就又有问题了，如果1.1版本我发现有bug，1.3版本都开发完了，那我bug怎么merge进去呢？可能每个版本的代码都出现了改动，这样合并会出现冲突。第二个问题，架构师如何把数据库设计的更合理能满足后续不断变更的需求呢？请老师指点下，有没有什么好的文章或书也可以推荐下","like_count":2,"discussions":[{"author":{"id":1064938,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/gem4tlXhUUSQwNklGwJFJ09lP4yfYwTlbNgH9vw01AJiar7z9cQeehBVgLNoZhOG9l96q12EfxpFh4SBXibmSQWw/132","nickname":"宝玉","note":"","ucode":"824342714F3310","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":441214,"discussion_content":"如果你在1.1发现bug，需要甄别一下紧急程度，紧急的话，就1.1分支修复，然后hotfix，不紧急的，就1.2修复好了。\n\n分支合并有两种策略：1. 不合并，如果有bug fix，各个分支同步修改；2. 分支合并回主分支，例如1.1上线时创建分支，1.2开始在主分支开发，开发时发现1.1的bug，只更新1.1分支，再定期把1.1的分支合并回主分支。\n\n敏捷开发中，通常建议只做刚刚好的设计，不必要考虑太多后续的需求变更，定期再重构（例如你可以重新设计表，然后把旧数据导入）。\n\n极客时间有个《从0开始学架构》的专栏（也出书了）不错，你可以看看。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1551399107,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":71306,"user_name":"登高","can_delete":false,"product_type":"c1","uid":1068600,"ip_address":"","ucode":"CD40046238BA18","user_header":"https://static001.geekbang.org/account/avatar/00/10/4e/38/3faa8377.jpg","comment_is_top":false,"comment_ctime":1551317829,"is_pvip":true,"replies":[{"id":"25535","content":"严格来说，这一篇只讲了瀑布模型的开发方式，其实还有其他开发模式。当然，了解了瀑布模型的开发方式，再看其他的就容易多了。","user_name":"作者回复","user_name_real":"宝玉","uid":"1064938","ctime":1551326192,"ip_address":"","comment_id":71306,"utype":1}],"discussion_count":1,"race_medal":0,"score":"10141252421","product_id":100023701,"comment_content":"一个项目的开发整体原来是这样的，解惑了","like_count":2,"discussions":[{"author":{"id":1064938,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/gem4tlXhUUSQwNklGwJFJ09lP4yfYwTlbNgH9vw01AJiar7z9cQeehBVgLNoZhOG9l96q12EfxpFh4SBXibmSQWw/132","nickname":"宝玉","note":"","ucode":"824342714F3310","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":441101,"discussion_content":"严格来说，这一篇只讲了瀑布模型的开发方式，其实还有其他开发模式。当然，了解了瀑布模型的开发方式，再看其他的就容易多了。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1551326192,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":71285,"user_name":"clever_P","can_delete":false,"product_type":"c1","uid":1013858,"ip_address":"","ucode":"39AA52990C1AC0","user_header":"https://static001.geekbang.org/account/avatar/00/0f/78/62/354b1873.jpg","comment_is_top":false,"comment_ctime":1551316094,"is_pvip":false,"replies":[{"id":"25510","content":"你说的是一个方向，但是要预测其实是很难的，结果很可能是过度设计，设计了很多可能的最终完全用不上的架构，反倒不如快速迭代快速响应来得实际。","user_name":"作者回复","user_name_real":"宝玉","uid":"1064938","ctime":1551317895,"ip_address":"","comment_id":71285,"utype":1}],"discussion_count":1,"race_medal":0,"score":"10141250686","product_id":100023701,"comment_content":"瀑布模型难以快速响应需求变化，那有没有可能通过对业务领域的深入研究，对业务的发展和变化做出一些前瞻性预测，在软件设计的时候将这些预测考虑进去，以此来减小后期需求变化对整个项目的影响呢？","like_count":2,"discussions":[{"author":{"id":1064938,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/gem4tlXhUUSQwNklGwJFJ09lP4yfYwTlbNgH9vw01AJiar7z9cQeehBVgLNoZhOG9l96q12EfxpFh4SBXibmSQWw/132","nickname":"宝玉","note":"","ucode":"824342714F3310","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":441089,"discussion_content":"你说的是一个方向，但是要预测其实是很难的，结果很可能是过度设计，设计了很多可能的最终完全用不上的架构，反倒不如快速迭代快速响应来得实际。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1551317895,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":71272,"user_name":"王昊","can_delete":false,"product_type":"c1","uid":1218388,"ip_address":"","ucode":"A3E6D9EB03ED21","user_header":"https://static001.geekbang.org/account/avatar/00/12/97/54/54dccfa7.jpg","comment_is_top":false,"comment_ctime":1551315227,"is_pvip":false,"replies":[{"id":"25508","content":"嗯，很多瀑布模型实践的一个缩影：）","user_name":"作者回复","user_name_real":"宝玉","uid":"1064938","ctime":1551317588,"ip_address":"","comment_id":71272,"utype":1}],"discussion_count":1,"race_medal":0,"score":"10141249819","product_id":100023701,"comment_content":"这个案例太生动了，酣畅淋漓","like_count":2,"discussions":[{"author":{"id":1064938,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/gem4tlXhUUSQwNklGwJFJ09lP4yfYwTlbNgH9vw01AJiar7z9cQeehBVgLNoZhOG9l96q12EfxpFh4SBXibmSQWw/132","nickname":"宝玉","note":"","ucode":"824342714F3310","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":441082,"discussion_content":"嗯，很多瀑布模型实践的一个缩影：）","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1551317588,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":338464,"user_name":"call陈","can_delete":false,"product_type":"c1","uid":1496841,"ip_address":"","ucode":"E2A5074A77C608","user_header":"","comment_is_top":false,"comment_ctime":1647509345,"is_pvip":true,"discussion_count":0,"race_medal":0,"score":"5942476641","product_id":100023701,"comment_content":"作为一个测试同学，对于瀑布模型的模式深有感触，<br>1.前期研发和测试同学的参与感很低，没有提前参与，需求需要调研的技术方案往往都很赶，导致考虑的不全面，提测和上线后出现较多问题.（目前我们采用了一些比较有效的手段比如需求预热，让研发同学们能够更早的了解到需求，从而有充足的时间去思考和讨论技术方案）<br>2.在正式进入研发周期后的产品需求更改，没有思考全面当下更改需求所花费的成本.需要做好评估<br>3.尤其是在产品验收期间的需求更改，最让人头大，所有东西都需要重来，前面的内容都白费了.影响项目的进度.<br>4.测试在最后的一个阶段，压力也往往是最大的，我们自己针对这个现状也做了优化，比如研发自测、桌面验收等流程来提升提测的质量.<br>5.质量的保障不仅仅是由测试来做，参与项目的所有人应该有这个意识，为质量负责.","like_count":1},{"had_liked":false,"id":125052,"user_name":"小老鼠","can_delete":false,"product_type":"c1","uid":1257460,"ip_address":"","ucode":"C663A0C863A515","user_header":"https://static001.geekbang.org/account/avatar/00/13/2f/f4/2dede51a.jpg","comment_is_top":false,"comment_ctime":1566052388,"is_pvip":false,"replies":[{"id":"46002","content":"1. 我也不认同每个Sprint是一个小瀑布，如果用瀑布模型去套在一个Sprint里面，那么最终实施的敏捷容易变形，会在每个Sprint开始时闲后期忙，而Sprint的开发周期应该自始至终开发速度是比较稳定的<br><br>2. 瀑布模型的问题确实存在前后期工作量不均衡的情况，而敏捷开发相对来说在一个Sprint的比较稳定。这里面有两点需要注意：<br>- 每个Sprint的周期是恒定的，到时间后必须发布，哪怕砍掉需求<br>- Sprint内是没有瀑布的，测试、需求、开发都是同步进行的，比如说你上一个Sprint完成的功能可能在新的Sprint还要继续测试，在这个Sprint就要准备好下个Sprint的需求。<br><br>具体你可以参照Chrome的发布（https:&#47;&#47;chromium.googlesource.com&#47;chromium&#47;src&#47;+&#47;master&#47;docs&#47;process&#47;release_cycle.md），Chrome每6周发布一个版本，但并不是说每次是一个6周的小瀑布，而是说多个版本之间是有重叠的，每个版本从开始到最终发布其实有10周，但版本之间前后都有重叠！<br><br>3. 至于全栈，我不认为一个人可以做所有的事情，分工还是必要的，全栈更多的是不要给自己贴标签，把自己局限在所在岗位职责之内，只关心那一亩三分地的事情，而是促使大家更紧密的协作。","user_name":"作者回复","user_name_real":"宝玉","uid":"1064938","ctime":1566167668,"ip_address":"","comment_id":125052,"utype":1}],"discussion_count":1,"race_medal":0,"score":"5861019684","product_id":100023701,"comment_content":"1、我认为在scrum中每个sprint可理解为一个小瀑布，但好些作scrun的人反对这个定义，您如何理解？2、瀑布还有一个致命弱点：等待。开始测试无事可干，后期需求分析人员无事可干。企业老板不愿用瀑布的最大原因。所以要全栈，一个人从头干到尾。你如何理解？","like_count":1,"discussions":[{"author":{"id":1064938,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/gem4tlXhUUSQwNklGwJFJ09lP4yfYwTlbNgH9vw01AJiar7z9cQeehBVgLNoZhOG9l96q12EfxpFh4SBXibmSQWw/132","nickname":"宝玉","note":"","ucode":"824342714F3310","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":463416,"discussion_content":"1. 我也不认同每个Sprint是一个小瀑布，如果用瀑布模型去套在一个Sprint里面，那么最终实施的敏捷容易变形，会在每个Sprint开始时闲后期忙，而Sprint的开发周期应该自始至终开发速度是比较稳定的\n\n2. 瀑布模型的问题确实存在前后期工作量不均衡的情况，而敏捷开发相对来说在一个Sprint的比较稳定。这里面有两点需要注意：\n- 每个Sprint的周期是恒定的，到时间后必须发布，哪怕砍掉需求\n- Sprint内是没有瀑布的，测试、需求、开发都是同步进行的，比如说你上一个Sprint完成的功能可能在新的Sprint还要继续测试，在这个Sprint就要准备好下个Sprint的需求。\n\n具体你可以参照Chrome的发布（https://chromium.googlesource.com/chromium/src/+/master/docs/process/release_cycle.md），Chrome每6周发布一个版本，但并不是说每次是一个6周的小瀑布，而是说多个版本之间是有重叠的，每个版本从开始到最终发布其实有10周，但版本之间前后都有重叠！\n\n3. 至于全栈，我不认为一个人可以做所有的事情，分工还是必要的，全栈更多的是不要给自己贴标签，把自己局限在所在岗位职责之内，只关心那一亩三分地的事情，而是促使大家更紧密的协作。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1566167668,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":84829,"user_name":"嘎嘎","can_delete":false,"product_type":"c1","uid":1356047,"ip_address":"","ucode":"039447D8E1353A","user_header":"https://static001.geekbang.org/account/avatar/00/14/b1/0f/e81a93ed.jpg","comment_is_top":false,"comment_ctime":1554913838,"is_pvip":false,"replies":[{"id":"30490","content":"感谢分享👍<br><br>不知道你们开发的自测和部署有没有集成CI&#47;CD，如果没有可以考虑集成，可以极大提升自动测试和部署效率。","user_name":"作者回复","user_name_real":"宝玉","uid":"1064938","ctime":1554945471,"ip_address":"","comment_id":84829,"utype":1}],"discussion_count":1,"race_medal":0,"score":"5849881134","product_id":100023701,"comment_content":"我是做服务端开发的，大致说一下在公司做项目的过程吧。<br>一般一个业务迭代周期为一个月，会经历预评审、正式评审、迭代排期、开发、链路联调、测试和发布这几个阶段。<br>预评审：产品经理们把本迭代预计要做的需求按优先级整理出来，研发一起分析需求文档，明确要做的内容、做不了的内容、开发及测试人员、项目依赖方<br>正式评审：预评审后产品经理会调整需求文档，与研发再次确认开发内容；研发确定解决方案；与依赖方明确开发内容；<br>迭代排期：按照优先级，结合依赖方排期，确定开发、测试等环节的时间节点；超出迭代排期的需求砍掉；<br>开发：前后端开始具体实施方案；同时测试同学接入，准备测试用例；<br>链路联调：自测，然后前后端、依赖方的联调，保证项目主流程顺畅；最后提测；<br>测试：进行业务、性能测试；最后UI、产品验收，确认能够上线；<br>发布：业务功能灰度上线；<br>之后就是项目复盘跟修BUG了。。","like_count":1,"discussions":[{"author":{"id":1064938,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/gem4tlXhUUSQwNklGwJFJ09lP4yfYwTlbNgH9vw01AJiar7z9cQeehBVgLNoZhOG9l96q12EfxpFh4SBXibmSQWw/132","nickname":"宝玉","note":"","ucode":"824342714F3310","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":446462,"discussion_content":"感谢分享👍\n\n不知道你们开发的自测和部署有没有集成CI/CD，如果没有可以考虑集成，可以极大提升自动测试和部署效率。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1554945471,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":79196,"user_name":"E","can_delete":false,"product_type":"c1","uid":1193143,"ip_address":"","ucode":"B1B0759EDA4AF9","user_header":"https://static001.geekbang.org/account/avatar/00/12/34/b7/60281658.jpg","comment_is_top":false,"comment_ctime":1553398423,"is_pvip":false,"replies":[{"id":"28895","content":"请参考《09 | 可行性研究： 一个从一开始就注定失败的跨平台项目》","user_name":"作者回复","user_name_real":"宝玉","uid":"1064938","ctime":1553407768,"ip_address":"","comment_id":79196,"utype":1}],"discussion_count":1,"race_medal":0,"score":"5848365719","product_id":100023701,"comment_content":"请问老师，可行性分析要怎么做？","like_count":1,"discussions":[{"author":{"id":1064938,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/gem4tlXhUUSQwNklGwJFJ09lP4yfYwTlbNgH9vw01AJiar7z9cQeehBVgLNoZhOG9l96q12EfxpFh4SBXibmSQWw/132","nickname":"宝玉","note":"","ucode":"824342714F3310","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":444390,"discussion_content":"请参考《09 | 可行性研究： 一个从一开始就注定失败的跨平台项目》","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1553407768,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":73176,"user_name":"果然如此","can_delete":false,"product_type":"c1","uid":1210003,"ip_address":"","ucode":"C7543BD0A67505","user_header":"https://static001.geekbang.org/account/avatar/00/12/76/93/c78a132a.jpg","comment_is_top":false,"comment_ctime":1551835318,"is_pvip":false,"replies":[{"id":"26597","content":"👍这个观点我认同，很多时候产品经理不专业导致的返工造成极大的浪费，也是很多项目加班的一个主要原因。<br><br>程序员转产品经理很多不错的，因为既懂产品又懂程序！当然最厉害的应该是张小龙了，当年就是特别牛的程序员：）","user_name":"作者回复","user_name_real":"宝玉","uid":"1064938","ctime":1551836337,"ip_address":"","comment_id":73176,"utype":1}],"discussion_count":1,"race_medal":0,"score":"5846802614","product_id":100023701,"comment_content":"文中的软件开发案例和我们正在做的项目过程太像了，前期产品设计的不周全，后期开发发现问题，重新设计产品，不停返工，不是小看产品经理，但确实很多产品设计流程的逻辑经不起推敲，我总觉得产品经理应该懂一点编程逻辑，提高严谨的思维，所以我也想转产品经理了","like_count":1,"discussions":[{"author":{"id":1064938,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/gem4tlXhUUSQwNklGwJFJ09lP4yfYwTlbNgH9vw01AJiar7z9cQeehBVgLNoZhOG9l96q12EfxpFh4SBXibmSQWw/132","nickname":"宝玉","note":"","ucode":"824342714F3310","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":441952,"discussion_content":"👍这个观点我认同，很多时候产品经理不专业导致的返工造成极大的浪费，也是很多项目加班的一个主要原因。\n\n程序员转产品经理很多不错的，因为既懂产品又懂程序！当然最厉害的应该是张小龙了，当年就是特别牛的程序员：）","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1551836337,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":73163,"user_name":"D","can_delete":false,"product_type":"c1","uid":1152061,"ip_address":"","ucode":"BD1B5C234F2407","user_header":"https://static001.geekbang.org/account/avatar/00/11/94/3d/8eb51db6.jpg","comment_is_top":false,"comment_ctime":1551834168,"is_pvip":false,"replies":[{"id":"26595","content":"你这个面向对象和面向过程的比喻挺形象的👍<br><br>可以继续看下一篇，里面的增量模型和迭代模型就是你说的这种思路：）","user_name":"作者回复","user_name_real":"宝玉","uid":"1064938","ctime":1551836231,"ip_address":"","comment_id":73163,"utype":1}],"discussion_count":1,"race_medal":0,"score":"5846801464","product_id":100023701,"comment_content":"瀑布模型是其他模型的基础。就像不管面向对象再抽象，里面的封装还是面向过程。<br><br>如果将一个大任务拆分成足够小的小任务，小任务在各个方面都是简单可控的，再利用瀑布模型完成小任务。","like_count":1,"discussions":[{"author":{"id":1064938,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/gem4tlXhUUSQwNklGwJFJ09lP4yfYwTlbNgH9vw01AJiar7z9cQeehBVgLNoZhOG9l96q12EfxpFh4SBXibmSQWw/132","nickname":"宝玉","note":"","ucode":"824342714F3310","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":441941,"discussion_content":"你这个面向对象和面向过程的比喻挺形象的👍\n\n可以继续看下一篇，里面的增量模型和迭代模型就是你说的这种思路：）","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1551836231,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":72903,"user_name":"舒偌一","can_delete":false,"product_type":"c1","uid":1053833,"ip_address":"","ucode":"C1F87ED4E84FD9","user_header":"https://static001.geekbang.org/account/avatar/00/10/14/89/229bb890.jpg","comment_is_top":false,"comment_ctime":1551753108,"is_pvip":false,"replies":[{"id":"26424","content":"👍赞<br><br>瀑布模型还需要注意需求要明确，后期不能变动过大，不然代价会很大。<br><br>大多数情况是提需求的人确认需求、验收需求的，对需求负责还真不一定。有给不靠谱的客户做过项目，发现有的客户只管提需求，不对需求负责，说不定到时候还怪你没搞清楚：）","user_name":"作者回复","user_name_real":"宝玉","uid":"1064938","ctime":1551760294,"ip_address":"","comment_id":72903,"utype":1}],"discussion_count":1,"race_medal":0,"score":"5846720404","product_id":100023701,"comment_content":"瀑布模型适合客户不能像敏捷那种快速反馈的项目，在进度、成本、质量的要求下，按步骤有计划执行。提需求的人要确认需求、验收需求，对需求负责。","like_count":1,"discussions":[{"author":{"id":1064938,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/gem4tlXhUUSQwNklGwJFJ09lP4yfYwTlbNgH9vw01AJiar7z9cQeehBVgLNoZhOG9l96q12EfxpFh4SBXibmSQWw/132","nickname":"宝玉","note":"","ucode":"824342714F3310","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":441817,"discussion_content":"👍赞\n\n瀑布模型还需要注意需求要明确，后期不能变动过大，不然代价会很大。\n\n大多数情况是提需求的人确认需求、验收需求的，对需求负责还真不一定。有给不靠谱的客户做过项目，发现有的客户只管提需求，不对需求负责，说不定到时候还怪你没搞清楚：）","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1551760294,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":71918,"user_name":"小先生","can_delete":false,"product_type":"c1","uid":1055214,"ip_address":"","ucode":"E5F2052E0323C0","user_header":"https://static001.geekbang.org/account/avatar/00/10/19/ee/e395a35e.jpg","comment_is_top":false,"comment_ctime":1551486273,"is_pvip":false,"replies":[{"id":"26053","content":"赞👍<br><br>是的，对瀑布模型的理解很正确，建议可以再学习一下后面几篇，了解一下其他的模型，可以帮助你在项目中更好的应用这些模型，提升效率。","user_name":"作者回复","user_name_real":"宝玉","uid":"1064938","ctime":1551490300,"ip_address":"","comment_id":71918,"utype":1}],"discussion_count":1,"race_medal":0,"score":"5846453569","product_id":100023701,"comment_content":"瀑布模型的缺点是难以对需求变更做出及时响应。<br>优点是引入了分工，有序。","like_count":1,"discussions":[{"author":{"id":1064938,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/gem4tlXhUUSQwNklGwJFJ09lP4yfYwTlbNgH9vw01AJiar7z9cQeehBVgLNoZhOG9l96q12EfxpFh4SBXibmSQWw/132","nickname":"宝玉","note":"","ucode":"824342714F3310","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":441393,"discussion_content":"赞👍\n\n是的，对瀑布模型的理解很正确，建议可以再学习一下后面几篇，了解一下其他的模型，可以帮助你在项目中更好的应用这些模型，提升效率。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1551490300,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":71702,"user_name":"布衣骇客","can_delete":false,"product_type":"c1","uid":1256280,"ip_address":"","ucode":"5226B0F67090D1","user_header":"https://static001.geekbang.org/account/avatar/00/13/2b/58/11c05ccb.jpg","comment_is_top":false,"comment_ctime":1551418165,"is_pvip":false,"replies":[{"id":"25990","content":"是的，瀑布模型和敏捷开发各有优劣，还是得看项目情况，团队情况，灵活选择，合理应用，甚至于相结合或者借鉴好的实践。","user_name":"作者回复","user_name_real":"宝玉","uid":"1064938","ctime":1551449188,"ip_address":"","comment_id":71702,"utype":1}],"discussion_count":1,"race_medal":0,"score":"5846385461","product_id":100023701,"comment_content":"之前用瀑布模型，现在项目是敏捷开发，各有优劣，都是为完成项目，只不过实践方式有差别，需求变更基本是常态，和项目大小有很大关系，处理方式也不同","like_count":1,"discussions":[{"author":{"id":1064938,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/gem4tlXhUUSQwNklGwJFJ09lP4yfYwTlbNgH9vw01AJiar7z9cQeehBVgLNoZhOG9l96q12EfxpFh4SBXibmSQWw/132","nickname":"宝玉","note":"","ucode":"824342714F3310","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":441283,"discussion_content":"是的，瀑布模型和敏捷开发各有优劣，还是得看项目情况，团队情况，灵活选择，合理应用，甚至于相结合或者借鉴好的实践。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1551449188,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":71634,"user_name":"起而行","can_delete":false,"product_type":"c1","uid":1131399,"ip_address":"","ucode":"4F116B0B740776","user_header":"https://static001.geekbang.org/account/avatar/00/11/43/87/7604d7a4.jpg","comment_is_top":false,"comment_ctime":1551404346,"is_pvip":true,"replies":[{"id":"25747","content":"👍大二的时候能做到那样已经很不错了。如果现在再去做肯定能做的更好。<br><br>存在的问题能意识到就可以去针对性改进或者提高。另外架构改动不是坏事情，没有万能的架构，到一定时候肯定都是要重构的。","user_name":"作者回复","user_name_real":"宝玉","uid":"1064938","ctime":1551410843,"ip_address":"","comment_id":71634,"utype":1}],"discussion_count":1,"race_medal":0,"score":"5846371642","product_id":100023701,"comment_content":"我在大二期间做的项目，为金融公司开发软件，利用的差不多是增量模型。实验室的老师是产品经理，经验丰富的学长是架构师，四个同学负责前端，每两个人合作开发不同的模块，比如用户模块，搜索模块……问题是没有测试，程序运行成功，演示效果满意基本上就是测试了。<br><br>存在的问题:代码不规范，git工具使用生疏以及架构出现过较大改动。","like_count":1,"discussions":[{"author":{"id":1064938,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/gem4tlXhUUSQwNklGwJFJ09lP4yfYwTlbNgH9vw01AJiar7z9cQeehBVgLNoZhOG9l96q12EfxpFh4SBXibmSQWw/132","nickname":"宝玉","note":"","ucode":"824342714F3310","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":441245,"discussion_content":"👍大二的时候能做到那样已经很不错了。如果现在再去做肯定能做的更好。\n\n存在的问题能意识到就可以去针对性改进或者提高。另外架构改动不是坏事情，没有万能的架构，到一定时候肯定都是要重构的。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1551410843,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":71617,"user_name":"aide","can_delete":false,"product_type":"c1","uid":1402712,"ip_address":"","ucode":"31EEB655A3E411","user_header":"","comment_is_top":false,"comment_ctime":1551401583,"is_pvip":false,"replies":[{"id":"25728","content":"是的，很多留言很精彩的👍","user_name":"作者回复","user_name_real":"宝玉","uid":"1064938","ctime":1551403079,"ip_address":"","comment_id":71617,"utype":1}],"discussion_count":1,"race_medal":0,"score":"5846368879","product_id":100023701,"comment_content":"感觉上课不能只看老师发的文章啊，看完文章之后还应该再认真看看留言，一些有工作经验学员就会对老师的文章很有感触，然后把自己的经验和总结当做实例来相结合老师的文章，能够更快更好的吸收知识。","like_count":1,"discussions":[{"author":{"id":1064938,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/gem4tlXhUUSQwNklGwJFJ09lP4yfYwTlbNgH9vw01AJiar7z9cQeehBVgLNoZhOG9l96q12EfxpFh4SBXibmSQWw/132","nickname":"宝玉","note":"","ucode":"824342714F3310","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":441235,"discussion_content":"是的，很多留言很精彩的👍","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1551403079,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":71518,"user_name":"Aaron","can_delete":false,"product_type":"c1","uid":1025106,"ip_address":"","ucode":"309E66A973CDCB","user_header":"https://static001.geekbang.org/account/avatar/00/0f/a4/52/abb7bfe3.jpg","comment_is_top":false,"comment_ctime":1551361903,"is_pvip":false,"replies":[{"id":"25584","content":"下一篇就是介绍瀑布模型的衍生模型啦","user_name":"作者回复","user_name_real":"宝玉","uid":"1064938","ctime":1551363280,"ip_address":"","comment_id":71518,"utype":1}],"discussion_count":1,"race_medal":0,"score":"5846329199","product_id":100023701,"comment_content":"现在还是用瀑布模型，期待尽快看到老师的文章","like_count":1,"discussions":[{"author":{"id":1064938,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/gem4tlXhUUSQwNklGwJFJ09lP4yfYwTlbNgH9vw01AJiar7z9cQeehBVgLNoZhOG9l96q12EfxpFh4SBXibmSQWw/132","nickname":"宝玉","note":"","ucode":"824342714F3310","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":441183,"discussion_content":"下一篇就是介绍瀑布模型的衍生模型啦","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1551363280,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":71329,"user_name":"bearlu","can_delete":false,"product_type":"c1","uid":1030862,"ip_address":"","ucode":"14F260C8B24E27","user_header":"https://static001.geekbang.org/account/avatar/00/0f/ba/ce/fd45714f.jpg","comment_is_top":false,"comment_ctime":1551321163,"is_pvip":true,"replies":[{"id":"25537","content":"你说的太对了！<br><br>举个例子来说，敏捷开发肯定又新又好，但是如果成员没一个懂敏捷开发，强行照葫芦画瓢，可能结果还不如用瀑布模型。","user_name":"作者回复","user_name_real":"宝玉","uid":"1064938","ctime":1551326588,"ip_address":"","comment_id":71329,"utype":1}],"discussion_count":1,"race_medal":0,"score":"5846288459","product_id":100023701,"comment_content":"老师，是不是每种模型，有其应用场景，不能只追求最新，要适用才行？","like_count":1,"discussions":[{"author":{"id":1064938,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/gem4tlXhUUSQwNklGwJFJ09lP4yfYwTlbNgH9vw01AJiar7z9cQeehBVgLNoZhOG9l96q12EfxpFh4SBXibmSQWw/132","nickname":"宝玉","note":"","ucode":"824342714F3310","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":441110,"discussion_content":"你说的太对了！\n\n举个例子来说，敏捷开发肯定又新又好，但是如果成员没一个懂敏捷开发，强行照葫芦画瓢，可能结果还不如用瀑布模型。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1551326588,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":71282,"user_name":"zhxilin℃+","can_delete":false,"product_type":"c1","uid":1063659,"ip_address":"","ucode":"1BBDAF534CDD65","user_header":"https://static001.geekbang.org/account/avatar/00/10/3a/eb/b83988e9.jpg","comment_is_top":false,"comment_ctime":1551315985,"is_pvip":false,"replies":[{"id":"25509","content":"其实游戏行业的游戏开发完全就是软件的开发一样的，软件工程一样使用，我也有过一段时间游戏项目开发经历。<br><br>你说的挺对的，对于这种变更频繁的、节奏快的，用增量或者迭代要好很多！另外也可以试试敏捷开发。","user_name":"作者回复","user_name_real":"宝玉","uid":"1064938","ctime":1551317789,"ip_address":"","comment_id":71282,"utype":1}],"discussion_count":1,"race_medal":0,"score":"5846283281","product_id":100023701,"comment_content":"对于游戏开发来说，制作人和策划需求变更往往非常频繁，而游戏的生命周期相较其他软件还是略短，上线时间节点非常敏感，完全采纳瀑布模型是不合适的，每个阶段的变动都会对后续阶段的开发产生很大影响。采用类似增量和迭代模型可能稍微健康一些，同时也对技术人员实现开放式模块化的能力要求很高。老师同学们对这个行业的过程模型有什么理解？","like_count":1,"discussions":[{"author":{"id":1064938,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/gem4tlXhUUSQwNklGwJFJ09lP4yfYwTlbNgH9vw01AJiar7z9cQeehBVgLNoZhOG9l96q12EfxpFh4SBXibmSQWw/132","nickname":"宝玉","note":"","ucode":"824342714F3310","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":441088,"discussion_content":"其实游戏行业的游戏开发完全就是软件的开发一样的，软件工程一样使用，我也有过一段时间游戏项目开发经历。\n\n你说的挺对的，对于这种变更频繁的、节奏快的，用增量或者迭代要好很多！另外也可以试试敏捷开发。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1551317789,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":357076,"user_name":"Nio","can_delete":false,"product_type":"c1","uid":1529642,"ip_address":"广东","ucode":"A1B8D3C01FB937","user_header":"https://static001.geekbang.org/account/avatar/00/17/57/2a/c6c95f37.jpg","comment_is_top":false,"comment_ctime":1662915856,"is_pvip":true,"discussion_count":0,"race_medal":1,"score":"1662915856","product_id":100023701,"comment_content":"需求，设计，开发，测试 必不可少","like_count":0},{"had_liked":false,"id":354316,"user_name":"Akili","can_delete":false,"product_type":"c1","uid":1388437,"ip_address":"云南","ucode":"286D58069F7D86","user_header":"https://static001.geekbang.org/account/avatar/00/15/2f/95/db8dedde.jpg","comment_is_top":false,"comment_ctime":1660279501,"is_pvip":true,"discussion_count":1,"race_medal":0,"score":"1660279501","product_id":100023701,"comment_content":"老师请教一个温问题，一个软件工程项目中项目经理和产品经理是同时存在的吗？还是同一个人来担任两个角色？恳请老师指导。","like_count":0,"discussions":[{"author":{"id":2432987,"avatar":"https://static001.geekbang.org/account/avatar/00/25/1f/db/b62b0c36.jpg","nickname":"CoderYe","note":"","ucode":"61BADA76344270","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":590375,"discussion_content":"要看实际的情况：\n以 问题定义——确认需求——架构设计——开发编码——功能测试——软件维护 为例：\n大厂： 一般每个人都是一个螺丝钉，甚至具体工作能拆分的比上面的还细\n中厂： 一般要看中厂的具体情况， 小项目可能就是开发者包揽所有工作，大项目会分开（公司也怕大项目做砸，所以会专门的人做专门的事）。\n小厂： 一般情况是：你 = 产品经理+架构师+开发工程师+测试工程师+运维工程师+项目经理\n\n个人经验：有误之处，敬请指正。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1665715269,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":"北京"},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":349377,"user_name":"功夫熊猫","can_delete":false,"product_type":"c1","uid":2732243,"ip_address":"","ucode":"D124F4FA4E816F","user_header":"https://static001.geekbang.org/account/avatar/00/29/b0/d3/200e82ff.jpg","comment_is_top":false,"comment_ctime":1655915681,"is_pvip":true,"discussion_count":0,"race_medal":0,"score":"1655915681","product_id":100023701,"comment_content":"哈哈，去年在学校完成一个校创的时候，就是瀑布模型。问题就是老师中途提需求变更的时候就很难受。幸好前面在设计接口考虑了很多，但还是熬了几晚的夜才搞好。","like_count":0},{"had_liked":false,"id":348900,"user_name":"if...else...","can_delete":false,"product_type":"c1","uid":2550743,"ip_address":"","ucode":"D0565908C99695","user_header":"https://static001.geekbang.org/account/avatar/00/26/eb/d7/90391376.jpg","comment_is_top":false,"comment_ctime":1655523764,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1655523764","product_id":100023701,"comment_content":"因为不管什么软件项目，不管采用什么开发模式，有四种活动是必不可少的，那就是需求、设计、编码和测试。而这四项活动，都是起源自瀑布模型，也是瀑布模型中核心的部分。--记下来","like_count":0},{"had_liked":false,"id":344623,"user_name":"谦逊的禾苗","can_delete":false,"product_type":"c1","uid":1670804,"ip_address":"","ucode":"C460BEFE9D6EE5","user_header":"https://thirdwx.qlogo.cn/mmopen/vi_32/egApicxPAjbmdviavYc8Tc5HelLicQTicW9KgwRl9U2mCEibLTA3rCZ6PVlxRFZTddY7ZGC2DmRe8DJ8EKCZ6mLhkzg/132","comment_is_top":false,"comment_ctime":1651675591,"is_pvip":true,"discussion_count":0,"race_medal":0,"score":"1651675591","product_id":100023701,"comment_content":"我也有个问题，一般采用瀑布模型的都属于是会把主体工作外包出去，但又是外包出去又想多次迭代怎么办呢？主要涉及合同和合作模式问题","like_count":0},{"had_liked":false,"id":328120,"user_name":"williamcai","can_delete":false,"product_type":"c1","uid":1158294,"ip_address":"","ucode":"B158F52C2D39BC","user_header":"https://static001.geekbang.org/account/avatar/00/11/ac/96/46b13896.jpg","comment_is_top":false,"comment_ctime":1640563544,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1640563544","product_id":100023701,"comment_content":"我们做的是传统项目，基本使用的是瀑布模型开发，主要是简单可控","like_count":0},{"had_liked":false,"id":295231,"user_name":"rfv7855659@gmail.com","can_delete":false,"product_type":"c1","uid":1635169,"ip_address":"","ucode":"4867EB8D18F488","user_header":"https://static001.geekbang.org/account/avatar/00/18/f3/61/002d5086.jpg","comment_is_top":false,"comment_ctime":1622308105,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1622308105","product_id":100023701,"comment_content":"瀑布模式看起來就是我司目前的開發模式、文章所提到的優缺點幾乎都有遇到過。 <br>但沒有遇過因為前期進度受阻而壓縮到工程開發時程，我們的做法是等項目確定且架構設計好，要實作時才會給工程、測試人員自行評估時程。 <br>不過我猜想這與公司文化比較有關係、老闆看項目時程感覺是將需求分析與開發實作時程分開來看。  <br>雖然能避免工程人員為了趕項目而加班，甚至使質量變差，但犧牲的可能是前面進度受阻而導致整體項目的時期會變長。 ","like_count":0},{"had_liked":false,"id":237297,"user_name":"blueguitar","can_delete":false,"product_type":"c1","uid":1031879,"ip_address":"","ucode":"A4794AADD763D6","user_header":"https://static001.geekbang.org/account/avatar/00/0f/be/c7/1d756c52.jpg","comment_is_top":false,"comment_ctime":1595772036,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1595772036","product_id":100023701,"comment_content":"    现在的项目规模比较大，用的还是传统瀑布式开发。已进行到开发阶段，最担心的问题就是交给客户后能否满足业务需求？<br>     其实各个阶段都和客户做过review,但是毕竟纸上谈兵，还是心里没底。UI问题不大，主要是业务逻辑这块。<br>     请问老师，到了上线之前的用户测试，出现大量问题如何应对，毕竟越到后面风险越大。你说是需求变更客户不一定买账！","like_count":0},{"had_liked":false,"id":203478,"user_name":"Long","can_delete":false,"product_type":"c1","uid":1580358,"ip_address":"","ucode":"D85B99FD0C4B76","user_header":"https://wx.qlogo.cn/mmopen/vi_32/ZMALpD4bKCVdsx8ymCC5Oo0oxibxIFGQzT6fP2B8MEgLGLktQRX4ictobkbcNBDTQibjoQNKBmWCKomNibWqHZ5kpg/132","comment_is_top":false,"comment_ctime":1586219320,"is_pvip":false,"replies":[{"id":"76394","content":"一个人维护系统，看起来很枯燥，可以做的事情也不少：<br><br>首先是自动化。日常工作中其实很多手动的工作，比如说手动部署、手动测试、手动编译等等，这些事情如果能借助工具（比如CI&#47;CD）或脚本自动化，可以极大提升效率，这样可以把时间省下来做更重要的事。<br><br>然后是补全自动化测试。一般系统的自动化测试都不一定很完整，可以完善起来。有了自动化测试后，再修改代码就不用担心一不小心就踩雷把系统弄挂了。尤其是在修复Bug后，要同步把自动化测试补上避免类似问题再出现。<br><br>再有就是重构代码。重构代码可以提升系统性能改进代码质量，也可以让维护工作不那么枯燥无聊。重构代码的一个前提就是自动化测试覆盖良好，否则大概率一改就出问题，这就是为什么要先补测试。重构的时候，可以一个小模块一个小模块的重构，尽量不要一次大改动，不仅耗费周期长，另外出问题的概率也高。<br><br>还有像新项目要通过复制现有系统改代码这样的方式，其实并不利于代码的重用，如果在老系统中发现问题，那么所有复制出去的系统都要更改！所以更好的做法是把公共的模块抽取出来，各个项目专注于业务逻辑实现，共享公共模块。<br>","user_name":"作者回复","user_name_real":"宝玉","uid":"1064938","ctime":1586395751,"ip_address":"","comment_id":203478,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1586219320","product_id":100023701,"comment_content":"公司就我一个人,平时维护着现有的系统,有新的项目时,一般都是复制现有系统,然后改代码.....从需求分析到最后交付,顺序并没有那么明确.","like_count":0,"discussions":[{"author":{"id":1064938,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/gem4tlXhUUSQwNklGwJFJ09lP4yfYwTlbNgH9vw01AJiar7z9cQeehBVgLNoZhOG9l96q12EfxpFh4SBXibmSQWw/132","nickname":"宝玉","note":"","ucode":"824342714F3310","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":490874,"discussion_content":"一个人维护系统，看起来很枯燥，可以做的事情也不少：\n\n首先是自动化。日常工作中其实很多手动的工作，比如说手动部署、手动测试、手动编译等等，这些事情如果能借助工具（比如CI/CD）或脚本自动化，可以极大提升效率，这样可以把时间省下来做更重要的事。\n\n然后是补全自动化测试。一般系统的自动化测试都不一定很完整，可以完善起来。有了自动化测试后，再修改代码就不用担心一不小心就踩雷把系统弄挂了。尤其是在修复Bug后，要同步把自动化测试补上避免类似问题再出现。\n\n再有就是重构代码。重构代码可以提升系统性能改进代码质量，也可以让维护工作不那么枯燥无聊。重构代码的一个前提就是自动化测试覆盖良好，否则大概率一改就出问题，这就是为什么要先补测试。重构的时候，可以一个小模块一个小模块的重构，尽量不要一次大改动，不仅耗费周期长，另外出问题的概率也高。\n\n还有像新项目要通过复制现有系统改代码这样的方式，其实并不利于代码的重用，如果在老系统中发现问题，那么所有复制出去的系统都要更改！所以更好的做法是把公共的模块抽取出来，各个项目专注于业务逻辑实现，共享公共模块。\n","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1586395751,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":196848,"user_name":"贵州小欧哥","can_delete":false,"product_type":"c1","uid":1935103,"ip_address":"","ucode":"A30E2BC983B75D","user_header":"https://static001.geekbang.org/account/avatar/00/1d/86/ff/18ab3c4f.jpg","comment_is_top":false,"comment_ctime":1585317785,"is_pvip":false,"replies":[{"id":"75591","content":"这些概念理解起来并不复杂，难得还是在实际项目中灵活运用这些知识。","user_name":"作者回复","user_name_real":"宝玉","uid":"1064938","ctime":1585982380,"ip_address":"","comment_id":196848,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1585317785","product_id":100023701,"comment_content":"经老师这么一说，感觉也不是很难哦。瀑布模型应该是所有软件开发的鼻祖呢","like_count":0,"discussions":[{"author":{"id":1064938,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/gem4tlXhUUSQwNklGwJFJ09lP4yfYwTlbNgH9vw01AJiar7z9cQeehBVgLNoZhOG9l96q12EfxpFh4SBXibmSQWw/132","nickname":"宝玉","note":"","ucode":"824342714F3310","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":489405,"discussion_content":"这些概念理解起来并不复杂，难得还是在实际项目中灵活运用这些知识。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1585982380,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":195691,"user_name":"戴斌","can_delete":false,"product_type":"c1","uid":1119385,"ip_address":"","ucode":"7DC53BEA432217","user_header":"https://static001.geekbang.org/account/avatar/00/11/14/99/5b1ed92b.jpg","comment_is_top":false,"comment_ctime":1585212203,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1585212203","product_id":100023701,"comment_content":"内容精彩，留言也不要错过，都能学到很多知识","like_count":0},{"had_liked":false,"id":185401,"user_name":"少盐","can_delete":false,"product_type":"c1","uid":1305743,"ip_address":"","ucode":"BCC7E264B75702","user_header":"https://static001.geekbang.org/account/avatar/00/13/ec/8f/8299495a.jpg","comment_is_top":false,"comment_ctime":1583574600,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1583574600","product_id":100023701,"comment_content":"瀑布模型，需求，设计，编码，测试","like_count":0},{"had_liked":false,"id":170179,"user_name":"巫山老妖","can_delete":false,"product_type":"c1","uid":1056037,"ip_address":"","ucode":"B35E2CF1B3B04E","user_header":"https://static001.geekbang.org/account/avatar/00/10/1d/25/c4cc1e9f.jpg","comment_is_top":false,"comment_ctime":1578544512,"is_pvip":true,"discussion_count":0,"race_medal":1,"score":"1578544512","product_id":100023701,"comment_content":"有了混乱不堪的软件开发经历，前人才总结出了瀑布模型来让软件开发变得有序，但随着软件的复杂性越来越高，互联网产品的快速迭代特性，瀑布模型的弊端也很明显，所以后面才会有敏捷概念提出来适应复杂多变的情况。只有经历过痛苦我们才会去思考什么样的开发模式才是适合我们当前时代，我觉得软件工程不会是一成不变的，它会随着历史的进程不挺往前推进。","like_count":0},{"had_liked":false,"id":105554,"user_name":"打工皇帝","can_delete":false,"product_type":"c1","uid":1583425,"ip_address":"","ucode":"90F470297B1463","user_header":"","comment_is_top":false,"comment_ctime":1561029171,"is_pvip":false,"replies":[{"id":"38207","content":"理解的🤝<br>后面有关于需求变更如何应对的内容，可以参考。","user_name":"作者回复","user_name_real":"宝玉","uid":"1064938","ctime":1561036500,"ip_address":"","comment_id":105554,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1561029171","product_id":100023701,"comment_content":"心塞，我是一个UI设计师，经常因为需求改动，原型变了，UI又要改。。一群人被需求的变更 弄得死去活来","like_count":0,"discussions":[{"author":{"id":1064938,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/gem4tlXhUUSQwNklGwJFJ09lP4yfYwTlbNgH9vw01AJiar7z9cQeehBVgLNoZhOG9l96q12EfxpFh4SBXibmSQWw/132","nickname":"宝玉","note":"","ucode":"824342714F3310","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":454725,"discussion_content":"理解的🤝\n后面有关于需求变更如何应对的内容，可以参考。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1561036500,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":75527,"user_name":"chl1860","can_delete":false,"product_type":"c1","uid":1141007,"ip_address":"","ucode":"26569ADB3246AC","user_header":"","comment_is_top":false,"comment_ctime":1552408983,"is_pvip":false,"replies":[{"id":"27561","content":"严谨来说，也不是瀑布模型要求低一些，而是说瀑布模型分工更细一些，比如敏捷开发里开发人员还得承担一部分测试工作，自己写测试代码呢。","user_name":"作者回复","user_name_real":"宝玉","uid":"1064938","ctime":1552429825,"ip_address":"","comment_id":75527,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1552408983","product_id":100023701,"comment_content":"瀑布流的缺点是需求变更响应周期太长 优点是团队成员分工明确 每个人看好自己的一亩三分地就好 所以对成员技能要求也相较敏捷低一些","like_count":0,"discussions":[{"author":{"id":1064938,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/gem4tlXhUUSQwNklGwJFJ09lP4yfYwTlbNgH9vw01AJiar7z9cQeehBVgLNoZhOG9l96q12EfxpFh4SBXibmSQWw/132","nickname":"宝玉","note":"","ucode":"824342714F3310","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":442927,"discussion_content":"严谨来说，也不是瀑布模型要求低一些，而是说瀑布模型分工更细一些，比如敏捷开发里开发人员还得承担一部分测试工作，自己写测试代码呢。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1552429825,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":75018,"user_name":"阿飞云中漫步","can_delete":false,"product_type":"c1","uid":1095199,"ip_address":"","ucode":"B158B404D330F2","user_header":"https://static001.geekbang.org/account/avatar/00/10/b6/1f/740ac1b2.jpg","comment_is_top":false,"comment_ctime":1552351225,"is_pvip":false,"replies":[{"id":"27351","content":"👍<br><br>软件工程确实是很有价值的课程，学了后相信能对你的工作有很多帮助。","user_name":"作者回复","user_name_real":"宝玉","uid":"1064938","ctime":1552353073,"ip_address":"","comment_id":75018,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1552351225","product_id":100023701,"comment_content":"老师的课程讲的太好了，非科班，之前没有学过软件工程，这次学习真的是受益匪浅！<br>最近工作比较忙，后面一定抽时间好好整理，在参考构建之法，然后也输出自己的学习笔记，学习心得！眼过千遍不如手过一遍。","like_count":0,"discussions":[{"author":{"id":1064938,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/gem4tlXhUUSQwNklGwJFJ09lP4yfYwTlbNgH9vw01AJiar7z9cQeehBVgLNoZhOG9l96q12EfxpFh4SBXibmSQWw/132","nickname":"宝玉","note":"","ucode":"824342714F3310","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":442778,"discussion_content":"👍\n\n软件工程确实是很有价值的课程，学了后相信能对你的工作有很多帮助。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1552353073,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":74543,"user_name":"Sophie1797","can_delete":false,"product_type":"c1","uid":1270117,"ip_address":"","ucode":"35B52501EEA55F","user_header":"https://static001.geekbang.org/account/avatar/00/13/61/65/b26ff1bb.jpg","comment_is_top":false,"comment_ctime":1552232053,"is_pvip":false,"replies":[{"id":"27209","content":"让我想起一句话：艺术源于生活😂","user_name":"作者回复","user_name_real":"宝玉","uid":"1064938","ctime":1552245220,"ip_address":"","comment_id":74543,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1552232053","product_id":100023701,"comment_content":"例子真的太真实了哈哈","like_count":0,"discussions":[{"author":{"id":1064938,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/gem4tlXhUUSQwNklGwJFJ09lP4yfYwTlbNgH9vw01AJiar7z9cQeehBVgLNoZhOG9l96q12EfxpFh4SBXibmSQWw/132","nickname":"宝玉","note":"","ucode":"824342714F3310","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":442593,"discussion_content":"让我想起一句话：艺术源于生活😂","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1552245220,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":72471,"user_name":"Li~大双","can_delete":false,"product_type":"c1","uid":1131819,"ip_address":"","ucode":"D057AD98F78D60","user_header":"https://static001.geekbang.org/account/avatar/00/11/45/2b/a97ce23e.jpg","comment_is_top":false,"comment_ctime":1551652347,"is_pvip":false,"replies":[{"id":"26249","content":"👍<br>工作了后再看这些知识，应该会有不一样的感悟！","user_name":"作者回复","user_name_real":"宝玉","uid":"1064938","ctime":1551660120,"ip_address":"","comment_id":72471,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1551652347","product_id":100023701,"comment_content":"回顾下大学学的知识，温故知新啊，老师讲的很好","like_count":0,"discussions":[{"author":{"id":1064938,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/gem4tlXhUUSQwNklGwJFJ09lP4yfYwTlbNgH9vw01AJiar7z9cQeehBVgLNoZhOG9l96q12EfxpFh4SBXibmSQWw/132","nickname":"宝玉","note":"","ucode":"824342714F3310","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":441605,"discussion_content":"👍\n工作了后再看这些知识，应该会有不一样的感悟！","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1551660120,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":72316,"user_name":"池强泽","can_delete":false,"product_type":"c1","uid":1231762,"ip_address":"","ucode":"1E5A4D70FE9C96","user_header":"https://static001.geekbang.org/account/avatar/00/12/cb/92/3dbeb6ab.jpg","comment_is_top":false,"comment_ctime":1551584677,"is_pvip":false,"replies":[{"id":"26197","content":"是的，也欢迎分享你的经验：）","user_name":"作者回复","user_name_real":"宝玉","uid":"1064938","ctime":1551586698,"ip_address":"","comment_id":72316,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1551584677","product_id":100023701,"comment_content":"大家的评论都很好，有各个环境下不同的经验","like_count":0,"discussions":[{"author":{"id":1064938,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/gem4tlXhUUSQwNklGwJFJ09lP4yfYwTlbNgH9vw01AJiar7z9cQeehBVgLNoZhOG9l96q12EfxpFh4SBXibmSQWw/132","nickname":"宝玉","note":"","ucode":"824342714F3310","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":441539,"discussion_content":"是的，也欢迎分享你的经验：）","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1551586698,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":72167,"user_name":"风再起时","can_delete":false,"product_type":"c1","uid":1438993,"ip_address":"","ucode":"047855F78D3206","user_header":"https://static001.geekbang.org/account/avatar/00/15/f5/11/ab9642ab.jpg","comment_is_top":false,"comment_ctime":1551530795,"is_pvip":false,"replies":[{"id":"26143","content":"在很多传统行业，其实瀑布模型应用的很好的。<br><br>就是软件行业，需求变更这些事确实是常态。","user_name":"作者回复","user_name_real":"宝玉","uid":"1064938","ctime":1551533546,"ip_address":"","comment_id":72167,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1551530795","product_id":100023701,"comment_content":"需求比较确定的情形用瀑布模型还是很适合的。比如通信行业的软件开发，需实现的功能基本上是由国际标准组织定义好了的，像移动通信领域的3GPP系列标准等，开发时只要保证每一个阶段的质量，工作做充分，做出来的结果都是不错的，开发过程也比较可控，不太可能出现老师所举的那个例子的情况","like_count":0,"discussions":[{"author":{"id":1064938,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/gem4tlXhUUSQwNklGwJFJ09lP4yfYwTlbNgH9vw01AJiar7z9cQeehBVgLNoZhOG9l96q12EfxpFh4SBXibmSQWw/132","nickname":"宝玉","note":"","ucode":"824342714F3310","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":441488,"discussion_content":"在很多传统行业，其实瀑布模型应用的很好的。\n\n就是软件行业，需求变更这些事确实是常态。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1551533546,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":71693,"user_name":"williamcai","can_delete":false,"product_type":"c1","uid":1158294,"ip_address":"","ucode":"B158F52C2D39BC","user_header":"https://static001.geekbang.org/account/avatar/00/11/ac/96/46b13896.jpg","comment_is_top":false,"comment_ctime":1551415018,"is_pvip":false,"replies":[{"id":"25988","content":"瀑布模型最主要的步骤就是需求分析、设计、编码和测试了，你这也算走完瀑布了：）","user_name":"作者回复","user_name_real":"宝玉","uid":"1064938","ctime":1551448948,"ip_address":"","comment_id":71693,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1551415018","product_id":100023701,"comment_content":"用到了，但是在小作坊式的作法下，分工有点模糊，需求评审，设计评审，然后就编码测试上线","like_count":0,"discussions":[{"author":{"id":1064938,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/gem4tlXhUUSQwNklGwJFJ09lP4yfYwTlbNgH9vw01AJiar7z9cQeehBVgLNoZhOG9l96q12EfxpFh4SBXibmSQWw/132","nickname":"宝玉","note":"","ucode":"824342714F3310","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":441279,"discussion_content":"瀑布模型最主要的步骤就是需求分析、设计、编码和测试了，你这也算走完瀑布了：）","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1551448948,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":71331,"user_name":"拉欧","can_delete":false,"product_type":"c1","uid":1206605,"ip_address":"","ucode":"40996A8093A95F","user_header":"https://static001.geekbang.org/account/avatar/00/12/69/4d/81c44f45.jpg","comment_is_top":false,"comment_ctime":1551321615,"is_pvip":false,"replies":[{"id":"25538","content":"是的，没经历过也没关系，可以先学习一下，以后再经历了自然就明白了。","user_name":"作者回复","user_name_real":"宝玉","uid":"1064938","ctime":1551326622,"ip_address":"","comment_id":71331,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1551321615","product_id":100023701,"comment_content":"瀑布模式的优势和不足，只有经历过工业级的项目开发才有深刻感触","like_count":0,"discussions":[{"author":{"id":1064938,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/gem4tlXhUUSQwNklGwJFJ09lP4yfYwTlbNgH9vw01AJiar7z9cQeehBVgLNoZhOG9l96q12EfxpFh4SBXibmSQWw/132","nickname":"宝玉","note":"","ucode":"824342714F3310","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":441112,"discussion_content":"是的，没经历过也没关系，可以先学习一下，以后再经历了自然就明白了。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1551326622,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]}]}