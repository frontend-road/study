{"id":429941,"title":"06｜构建模式：Go是怎么解决包依赖管理问题的？","content":"<p>你好，我是Tony Bai。</p><p>通过前面的讲解，我们已经初步了解了Go程序的结构，以及Go项目的典型布局了。那么，接下来，<strong>我们是时候来系统学习一下Go应用的构建了</strong>，它们都是我们继续Go语言学习的前提。</p><p>所以在这一节课，我们就来了解Go构建模式演化的前世今生。理解了这个发展史后，我们会重点来探讨现在被广泛采用的构建模式，Go Module的基本概念和应用构建方式。&nbsp;接着，知道了怎么做后，我们会再深一层，继续分析Go Module的工作原理。这样层层深入地分析完后，你就能彻底、透彻地掌握Go Module构建模式了。</p><p>好了，我们直接开始吧。我们先来了解一下Go构建模式的演化过程，弄清楚Go核心开发团队为什么要引入Go module构建模式。</p><h2>Go构建模式是怎么演化的？</h2><p>Go程序由Go包组合而成的，<strong>Go程序的构建过程就是确定包版本、编译包以及将编译后得到的目标文件链接在一起的过程</strong>。</p><p>Go语言的构建模式历经了三个迭代和演化过程，分别是最初期的GOPATH、1.5版本的Vendor机制，以及现在的Go Module。这里我们就先来介绍一下前面这两个。</p><p><strong>首先我们来看GOPATH。</strong></p><p>Go语言在首次开源时，就内置了一种名为 <strong>GOPATH</strong> 的构建模式。在这种构建模式下，Go编译器可以在本地GOPATH环境变量配置的路径下，搜寻Go程序依赖的第三方包。如果存在，就使用这个本地包进行编译；如果不存在，就会报编译错误。</p><!-- [[[read_end]]] --><p>我这里给出了一段在GOPATH构建模式下编写的代码，你先来感受一下：</p><pre><code class=\"language-plain\">package main\n\nimport \"github.com/sirupsen/logrus\"\n\nfunc main() {\n    logrus.Println(\"hello, gopath mode\")\n}\n</code></pre><p>你可以看到，这段代码依赖了第三方包logrus（logrus是Go社区使用最为广泛的第三方log包）。</p><p>接下来，这个构建过程演示了Go编译器（这里使用Go 1.10.8）在GOPATH环境变量所配置的目录下（这里为/Users/tonybai/Go），无法找到程序依赖的logrus包而报错的情况：</p><pre><code class=\"language-plain\">$go build main.go\nmain.go:3:8: cannot find package \"github.com/sirupsen/logrus\" in any of:\n\t/Users/tonybai/.bin/go1.10.8/src/github.com/sirupsen/logrus (from $GOROOT)\n\t/Users/tonybai/Go/src/github.com/sirupsen/logrus (from $GOPATH)\n</code></pre><p><strong>那么Go编译器在GOPATH构建模式下，究竟怎么在GOPATH配置的路径下搜寻第三方依赖包呢？</strong></p><p>为了给你说清楚搜寻规则，我们先假定Go程序导入了github.com/user/repo这个包，我们也同时假定当前GOPATH环境变量配置的值为：</p><pre><code class=\"language-plain\">export GOPATH=/usr/local/goprojects:/home/tonybai/go\n</code></pre><p>那么在GOPATH构建模式下，Go编译器在编译Go程序时，就会在下面两个路径下搜索第三方依赖包是否存在：</p><pre><code class=\"language-plain\">/usr/local/goprojects/src/github.com/user/repo\n/home/tonybai/go/src/github.com/user/repo\n</code></pre><p>这里注意一下，如果你没有显式设置GOPATH环境变量，Go会将GOPATH设置为默认值，不同操作系统下默认值的路径不同，在macOS或Linux上，它的默认值是$HOME/go。</p><p>那么，当遇到像上面例子一样，没有在本地找到程序的第三方依赖包的情况，我们该如何解决这个问题呢？</p><p><strong>这个时候就要让go get登场了</strong>！</p><p>我们可以通过go get命令将本地缺失的第三方依赖包下载到本地，比如：</p><pre><code class=\"language-plain\">$go get github.com/sirupsen/logrus\n</code></pre><p>这里的go get命令，不仅能将logrus包下载到GOPATH环境变量配置的目录下，它还会检查logrus的依赖包在本地是否存在，如果不存在，go get也会一并将它们下载到本地。</p><p>不过，go get下载的包只是那个时刻各个依赖包的最新主线版本，这样会给后续Go程序的构建带来一些问题。比如，依赖包持续演进，可能会导致不同开发者在不同时间获取和编译同一个Go包时，得到不同的结果，也就是不能保证可重现的构建（Reproduceable Build）。又比如，如果依赖包引入了不兼容代码，程序将无法通过编译。</p><p>最后还有一点，如果依赖包因引入新代码而无法正常通过编译，并且该依赖包的作者又没用及时修复这个问题，这种错误也会传导到你的程序，导致你的程序无法通过编译。</p><p>也就是说，<strong>在GOPATH构建模式下，Go编译器实质上并没有关注Go项目所依赖的第三方包的版本。</strong>但Go开发者希望自己的Go项目所依赖的第三方包版本能受到自己的控制，而不是随意变化。于是Go核心开发团队引入了Vendor机制试图解决上面的问题。</p><p><strong>现在我们就来看看vendor机制是怎么解决这个问题的。</strong></p><p>Go在1.5版本中引入 <strong>vendor机制</strong>。vendor机制本质上就是在Go项目的某个特定目录下，将项目的所有依赖包缓存起来，这个特定目录名就是vendor。</p><p>Go编译器会优先感知和使用vendor目录下缓存的第三方包版本，而不是GOPATH环境变量所配置的路径下的第三方包版本。这样，无论第三方依赖包自己如何变化，无论GOPATH环境变量所配置的路径下的第三方包是否存在、版本是什么，都不会影响到Go程序的构建。</p><p>如果你将vendor目录和项目源码一样提交到代码仓库，那么其他开发者下载你的项目后，就可以实现可重现的构建。因此，如果使用vendor机制管理第三方依赖包，最佳实践就是将vendor一并提交到代码仓库中。</p><p>下面这个目录结构就是为上面的代码示例添加vendor目录后的结果：</p><pre><code class=\"language-plain\">.\n├── main.go\n└── vendor/\n    ├── github.com/\n    │&nbsp;&nbsp; └── sirupsen/\n    │&nbsp;&nbsp;     └── logrus/\n    └── golang.org/\n        └── x/\n            └── sys/\n                └── unix/\n</code></pre><p>在添加完vendor后，我们重新编译main.go，这个时候Go编译器就会在vendor目录下搜索程序依赖的logrus包以及后者依赖的golang.org/x/sys/unix包了。</p><p>这里你还要注意一点，要想开启vendor机制，你的Go项目必须位于GOPATH环境变量配置的某个路径的src目录下面。如果不满足这一路径要求，那么Go编译器是不会理会Go项目目录下的vendor目录的。</p><p>不过vendor机制虽然一定程度解决了Go程序可重现构建的问题，但对开发者来说，它的体验却不那么好。一方面，Go项目必须放在GOPATH环境变量配置的路径下，庞大的vendor目录需要提交到代码仓库，不仅占用代码仓库空间，减慢仓库下载和更新的速度，而且还会干扰代码评审，对实施代码统计等开发者效能工具也有比较大影响。</p><p>另外，你还需要手工管理vendor下面的Go依赖包，包括项目依赖包的分析、版本的记录、依赖包获取和存放，等等，<strong>最让开发者头疼的就是这一点。</strong></p><p>为了解决这个问题，Go核心团队与社区<strong>将Go构建的重点转移到如何解决包依赖管理上</strong>。Go社区先后开发了诸如gb、glide、dep等工具，来帮助Go开发者对vendor下的第三方包进行自动依赖分析和管理，但这些工具也都有自身的问题。</p><p>就在Go社区为包依赖管理焦虑并抱怨没有官方工具的时候，Go核心团队基于社区实践的经验和教训，推出了Go官方的解决方案：<strong>Go Module</strong>。</p><h2>创建你的第一个Go Module</h2><p>从Go 1.11版本开始，除了GOPATH构建模式外，Go又增加了一种Go Module构建模式。</p><p>在<a href=\"https://time.geekbang.org/column/article/428267\">04讲</a>中，我们曾基于Go Module构建模式编写过一个“hello, world”程序，当时是为了讲解Go程序结构，这里我再带你回顾一下Go Module的基础概念。</p><p>一个Go Module是一个Go包的集合。module是有版本的，所以module下的包也就有了版本属性。这个module与这些包会组成一个独立的版本单元，它们一起打版本、发布和分发。</p><p>在Go Module模式下，通常一个代码仓库对应一个Go Module。一个Go Module的顶层目录下会放置一个go.mod文件，每个go.mod文件会定义唯一一个module，也就是说Go Module与go.mod是一一对应的。</p><p>go.mod文件所在的顶层目录也被称为module的根目录，module根目录以及它子目录下的所有Go包均归属于这个Go Module，这个module也被称为main module。</p><p>你可能也意识到了，Go Module的原理和使用方法其实有点复杂，但“千里之行始于足下”，下面我们先从如何创建一个Go Module说起。我们先来将上面的例子改造成为一个基于Go Module构建模式的Go项目。</p><h3><strong>创建一个Go Module</strong></h3><p>将基于当前项目创建一个Go Module，通常有如下几个步骤：</p><p>第一步，通过go mod init创建go.mod文件，将当前项目变为一个Go Module；</p><p>第二步，通过go mod tidy命令自动更新当前module的依赖信息；</p><p>第三步，执行go build，执行新module的构建。</p><p>我们一步一步来详细看一下。</p><p>我们先建立一个新项目module-mode用来演示Go Module的创建，注意我们可以在任意路径下创建这个项目，不必非要在GOPATH环境变量的配置路径下。</p><p>这个项目的main.go修改自上面的例子，修改后的main.go的代码是这样的，我们依旧依赖外部包logrus：</p><pre><code class=\"language-plain\">package main\n\nimport \"github.com/sirupsen/logrus\"\n\nfunc main() {\n\tlogrus.Println(\"hello, go module mode\")\n}\n</code></pre><p>你可以看到，这个项目目录下只有main.go一个源文件，现在我们就来为这个项目添加Go Module支持。我们通过go mod init命令为这个项目创建一个Go Module（这里我们使用的是Go版本为1.16.5，Go 1.16版本默认采用Go Module构建模式）：</p><pre><code class=\"language-plain\">$go mod init github.com/bigwhite/module-mode\ngo: creating new go.mod: module github.com/bigwhite/module-mode\ngo: to add module requirements and sums:\n\tgo mod tidy\n</code></pre><p>现在，go mod init在当前项目目录下创建了一个go.mod文件，这个go.mod文件将当前项目变为了一个Go Module，项目根目录变成了module根目录。go.mod的内容是这样的：</p><pre><code class=\"language-plain\">module github.com/bigwhite/module-mode\n\ngo 1.16\n</code></pre><p>这个go.mod文件现在处于初始状态，它的第一行内容用于声明module路径（module path），最后一行是一个Go版本指示符，用于表示这个module是在某个特定的Go版本的module语义的基础上编写的。</p><p>go mod init命令还输出了两行日志，提示我们可以使用go mod tidy命令，添加module依赖以及校验和。go mod tidy命令会扫描Go源码，并自动找出项目依赖的外部Go Module以及版本，下载这些依赖并更新本地的go.mod文件。我们按照这个提示执行一下go mod tidy命令：</p><pre><code class=\"language-plain\">$go mod tidy\ngo: finding module for package github.com/sirupsen/logrus\ngo: downloading github.com/sirupsen/logrus v1.8.1\ngo: found github.com/sirupsen/logrus in github.com/sirupsen/logrus v1.8.1\ngo: downloading golang.org/x/sys v0.0.0-20191026070338-33540a1f6037\ngo: downloading github.com/stretchr/testify v1.2.2\n</code></pre><p>我们看到，对于一个处于初始状态的module而言，go mod tidy分析了当前main module的所有源文件，找出了当前main module的所有第三方依赖，确定第三方依赖的版本，还下载了当前main module的直接依赖包（比如logrus），以及相关间接依赖包（直接依赖包的依赖，比如上面的golang.org/x/sys等）。</p><p>Go Module还支持通过Go Module代理服务加速第三方依赖的下载。在<a href=\"https://time.geekbang.org/column/article/427489\">03讲</a>我们讲解Go环境安装时，就提到过GOPROXY环境变量，这个环境变量的默认值为“<strong>https: // proxy.golang.org,direct</strong>”，不过我们可以配置更适合于中国大陆地区的Go Module代理服务。</p><p>由go mod tidy下载的依赖module会被放置在本地的module缓存路径下，默认值为$GOPATH[0]/pkg/mod，Go 1.15及以后版本可以通过GOMODCACHE环境变量，自定义本地module的缓存路径。</p><p>执行go mod tidy后，我们示例go.mod的内容更新如下：</p><pre><code class=\"language-plain\">module github.com/bigwhite/module-mode\n\ngo 1.16\n\nrequire github.com/sirupsen/logrus v1.8.1\n</code></pre><p>你可以看到，当前module的直接依赖logrus，还有它的版本信息都被写到了go.mod文件的require段中。</p><p>而且，执行完go mod tidy后，当前项目除了go.mod文件外，还多了一个新文件go.sum，内容是这样的：</p><pre><code class=\"language-plain\">github.com/davecgh/go-spew v1.1.1 h1:vj9j/u1bqnvCEfJOwUhtlOARqs3+rkHYY13jYWTU97c=\ngithub.com/davecgh/go-spew v1.1.1/go.mod h1:J7Y8YcW2NihsgmVo/mv3lAwl/skON4iLHjSsI+c5H38=\ngithub.com/pmezard/go-difflib v1.0.0 h1:4DBwDE0NGyQoBHbLQYPwSUPoCMWR5BEzIk/f1lZbAQM=\ngithub.com/pmezard/go-difflib v1.0.0/go.mod h1:iKH77koFhYxTK1pcRnkKkqfTogsbg7gZNVY4sRDYZ/4=\ngithub.com/sirupsen/logrus v1.8.1 h1:dJKuHgqk1NNQlqoA6BTlM1Wf9DOH3NBjQyu0h9+AZZE=\ngithub.com/sirupsen/logrus v1.8.1/go.mod h1:yWOB1SBYBC5VeMP7gHvWumXLIWorT60ONWic61uBYv0=\ngithub.com/stretchr/testify v1.2.2 h1:bSDNvY7ZPG5RlJ8otE/7V6gMiyenm9RtJ7IUVIAoJ1w=\ngithub.com/stretchr/testify v1.2.2/go.mod h1:a8OnRcib4nhh0OaRAV+Yts87kKdq0PP7pXfy6kDkUVs=\ngolang.org/x/sys v0.0.0-20191026070338-33540a1f6037 h1:YyJpGZS1sBuBCzLAR1VEpK193GlqGZbnPFnPV/5Rsb4=\ngolang.org/x/sys v0.0.0-20191026070338-33540a1f6037/go.mod h1:h1NjWce9XRLGQEsW7wpKNCjG9DtNlClVuFLEZdDNbEs=\n</code></pre><p>这同样是由go mod相关命令维护的一个文件，它存放了特定版本module内容的哈希值。</p><p>这是Go Module的一个安全措施。当将来这里的某个module的特定版本被再次下载的时候，go命令会使用go.sum文件中对应的哈希值，和新下载的内容的哈希值进行比对，只有哈希值比对一致才是合法的，这样可以确保你的项目所依赖的module内容，不会被恶意或意外篡改。因此，我推荐你把go.mod和go.sum两个文件与源码，一并提交到代码版本控制服务器上。</p><p>现在，go mod init和go mod tidy已经为我们当前Go Module的构建铺平了道路，接下来，<strong>我们只需在当前module的根路径下，执行go build就可以完成module的构建了</strong>！</p><p>go build命令会读取go.mod中的依赖及版本信息，并在本地module缓存路径下找到对应版本的依赖module，执行编译和链接。如果顺利的话，我们会在当前目录下看到一个新生成的可执行文件module-mode，执行这个文件我们就能得到正确结果了。</p><p>整个过程的执行步骤是这样的：</p><pre><code class=\"language-plain\">$go build\n$$ls\ngo.mod\t\tgo.sum\t\tmain.go\t\tmodule-mode*\n$./module-mode \nINFO[0000] hello, go module mode\n</code></pre><p>好了，到这里，我们已经完成了一个有着多个第三方依赖的项目的构建了。但关于Go Module的操作还远不止这些。随着Go项目的演进，我们会在代码中导入新的第三方包，删除一些旧的依赖包，更新一些依赖包的版本等。关于这些内容，我会在下一节课再给你详细讲解。</p><p>那么，在看到我们的Go Module机制会自动分析项目的依赖包，并选出最适合的版本后，不知道你会不会有这样的疑惑：<strong>项目所依赖的包有很多版本，Go Module是如何选出最适合的那个版本的呢？</strong>要想回答这个问题，我们就需要深入到Go Module构建模式的工作原理中去。</p><h2>深入Go Module构建模式</h2><p>Go语言设计者在设计Go Module构建模式，来解决“包依赖管理”的问题时，进行了几项创新，这其中就包括<strong>语义导入版本(Semantic Import Versioning)</strong>，以及和其他主流语言不同的<strong>最小版本选择(Minimal Version Selection)</strong>等机制。只要你深入理解了这些机制，你就能真正掌握Go Module构建模式。</p><p><strong>首先我们看一下Go Module的语义导入版本机制。</strong></p><p>在上面的例子中，我们看到go.mod的require段中依赖的版本号，都符合 <strong>vX.Y.Z</strong> 的格式。在Go Module构建模式下，一个符合Go Module要求的版本号，由前缀v和一个满足<a href=\"https://semver.org\">语义版本</a>规范的版本号组成。</p><p>你可以看看下面这张图，语义版本号分成3部分：主版本号（major）、次版本号（minor）和补丁版本号（patch）。例如上面的logrus module的版本号是v1.8.1，这就表示它的主版本号为1，次版本号为8，补丁版本号为1。</p><p><img src=\"https://static001.geekbang.org/resource/image/46/a2/468323b3294cce2ea7f4c1da3699c5a2.png?wh=1242x670\" alt=\"\"></p><p>Go命令和go.mod文件都使用上面这种符合语义版本规范的版本号，作为描述Go Module版本的标准形式。借助于语义版本规范，Go命令可以确定同一module的两个版本发布的先后次序，而且可以确定它们是否兼容。</p><p>按照语义版本规范，主版本号不同的两个版本是相互不兼容的。而且，在主版本号相同的情况下，次版本号大都是向后兼容次版本号小的版本。补丁版本号也不影响兼容性。</p><p>而且，Go Module规定：<strong>如果同一个包的新旧版本是兼容的，那么它们的包导入路径应该是相同的</strong>。怎么理解呢？我们来举个简单示例。我们就以logrus为例，它有很多发布版本，我们从中选出两个版本v1.7.0和v1.8.1.。按照上面的语义版本规则，这两个版本的主版本号相同，新版本v1.8.1是兼容老版本v1.7.0的。那么，我们就可以知道，如果一个项目依赖logrus，无论它使用的是v1.7.0版本还是v1.8.1版本，它都可以使用下面的包导入语句导入logrus包：</p><pre><code class=\"language-plain\">import \"github.com/sirupsen/logrus\"\n</code></pre><p>那么问题又来了，假如在未来的某一天，logrus的作者发布了logrus v2.0.0版本。那么根据语义版本规则，该版本的主版本号为2，已经与v1.7.0、v1.8.1的主版本号不同了，那么v2.0.0与v1.7.0、v1.8.1就是不兼容的包版本。然后我们再按照Go Module的规定，如果一个项目依赖logrus v2.0.0版本，那么它的包导入路径就不能再与上面的导入方式相同了。那我们应该使用什么方式导入logrus v2.0.0版本呢？</p><p>Go Module创新性地给出了一个方法：将包主版本号引入到包导入路径中，我们可以像下面这样导入logrus v2.0.0版本依赖包：</p><pre><code class=\"language-plain\">import \"github.com/sirupsen/logrus/v2\"\n</code></pre><p>这就是Go的“语义导入版本”机制，也就是说通过在包导入路径中引入主版本号的方式，来区别同一个包的不兼容版本，这样一来我们甚至可以同时依赖一个包的两个不兼容版本：</p><pre><code class=\"language-plain\">import (\n    \"github.com/sirupsen/logrus\"\n    logv2 \"github.com/sirupsen/logrus/v2\"\n)\n</code></pre><p>不过到这里，你可能会问，v0.y.z版本应该使用哪种导入路径呢？</p><p>按照语义版本规范的说法，v0.y.z这样的版本号是用于项目初始开发阶段的版本号。在这个阶段任何事情都有可能发生，其API也不应该被认为是稳定的。Go Module将这样的版本(v0)与主版本号v1做同等对待，也就是采用不带主版本号的包导入路径，这样一定程度降低了Go开发人员使用这样版本号包时的心智负担。</p><p>Go语义导入版本机制是Go Module机制的基础规则，同样它也是Go Module其他规则的基础。</p><p><strong>接下来，我们再来看一下Go Module的最小版本选择原则。</strong></p><p>在前面的例子中，Go命令都是在项目初始状态分析项目的依赖，并且项目中两个依赖包之间没有共同的依赖，这样的包依赖关系解决起来还是比较容易的。但依赖关系一旦复杂起来，比如像下图中展示的这样，Go又是如何确定使用依赖包C的哪个版本的呢？<br>\n<img src=\"https://static001.geekbang.org/resource/image/49/1b/49eb7aa0458d8ec6131d9e5661155f1b.jpeg?wh=1920x1080\" alt=\"\"><br>\n在这张图中，myproject有两个直接依赖A和B，A和B有一个共同的依赖包C，但A依赖C的v1.1.0版本，而B依赖的是C的v1.3.0版本，并且此时C包的最新发布版为C v1.7.0。这个时候，Go命令是如何为myproject选出间接依赖包C的版本呢？选出的究竟是v1.7.0、v1.1.0还是v1.3.0呢？你可以暂停一两分钟思考一下。</p><p>其实，当前存在的主流编程语言，以及Go Module出现之前的很多Go包依赖管理工具都会<strong>选择依赖项的“最新最大(Latest Greatest)版本”</strong>，对应到图中的例子，这个版本就是v1.7.0。</p><p>当然了，理想状态下，如果语义版本控制被正确应用，并且这种“社会契约”也得到了很好的遵守，那么这种选择算法是有道理的，而且也可以正常工作。在这样的情况下，依赖项的“最新最大版本”应该是最稳定和安全的版本，并且应该有向后兼容性。至少在相同的主版本(Major Verion)依赖树中是这样的。</p><p>但我们这个问题的答案并不是这样的。Go设计者另辟蹊径，在诸多兼容性版本间，他们不光要考虑最新最大的稳定与安全，还要尊重各个module的述求：A明明说只要求C v1.1.0，B明明说只要求C v1.3.0。<strong>所以Go会在该项目依赖项的所有版本中，选出符合项目整体要求的“最小版本”。</strong></p><p>这个例子中，C v1.3.0是符合项目整体要求的版本集合中的版本最小的那个，于是Go命令选择了C v1.3.0，而不是最新最大的C v1.7.0。并且，Go团队认为“最小版本选择”为Go程序实现持久的和可重现的构建提供了最佳的方案。</p><p>了解了语义导入版本与最小版本选择两种机制后，你就可以说你已经掌握了Go Module的精髓。</p><p>但很多Go开发人员的起点，并非是默认开启Go Module构建模式的Go 1.16版本，多数Go开发人使用的环境中都存在着多套Go版本，有用于体验最新功能特性的Go版本，也有某些遗留项目所使用的老版本Go编译器。</p><p>它们工作时采用的构建模式是不一样的，并且即便是引入Go Module的Go 1.11版本，它的Go Module机制，和后续进化后的Go版本的Go Module构建机制在表现行为上也有所不同。因此Go开发人员可能需要经常在各个Go版本间切换。而明确具体版本下Go Module的实际表现行为对Go开发人员是十分必要的。</p><h2>Go各版本构建模式机制和切换</h2><p>我们前面说了，在Go 1.11版本中，Go开发团队引入Go Modules构建模式。这个时候，GOPATH构建模式与Go Modules构建模式各自独立工作，我们可以通过设置环境变量GO111MODULE的值在两种构建模式间切换。</p><p>然后，随着Go语言的逐步演进，从Go 1.11到Go 1.16版本，不同的Go版本在GO111MODULE为不同值的情况下，开启的构建模式几经变化，直到Go 1.16版本，Go Module构建模式成为了默认模式。</p><p>所以，要分析Go各版本的具体构建模式的机制和切换，我们只需要找到这几个代表性的版本就好了。</p><p>我这里将Go 1.13版本之前、Go 1.13版本以及Go 1.16版本，在GO111MODULE为不同值的情况下的行为做了一下对比，这样我们可以更好地理解不同版本下、不同构建模式下的行为特性，下面我们就来用表格形式做一下比对：</p><p><img src=\"https://static001.geekbang.org/resource/image/45/d3/45bdecc5fa873e06893d6658e447a8d3.jpeg?wh=1920x1080\" alt=\"图片\"></p><p>了解了这些，你就能在工作中游刃有余的在各个Go版本间切换了，不用再担心切换后模式变化，导致构建失败了。</p><h3>小结</h3><p>好了，今天的课讲到这里就结束了，现在我们一起来回顾一下吧。</p><p>在这一讲中，我们初步了解了Go语言构建模式的演化历史。</p><p>Go语言最初发布时内置的构建模式为GOPATH构建模式。在这种构建模式下，所有构建都离不开GOPATH环境变量。在这个模式下，Go编译器并没有关注依赖包的版本，开发者也无法控制第三方依赖的版本，导致开发者无法实现可重现的构建。</p><p>那么，为了支持可重现构建，Go 1.5版本引入了vendor机制，开发者可以在项目目录下缓存项目的所有依赖，实现可重现构建。但vendor机制依旧不够完善，开发者还需要手工管理vendor下的依赖包，这就给开发者带来了不小的心智负担。</p><p>后来，Go 1.11版本中，Go核心团队推出了新一代构建模式：Go Module以及一系列创新机制，包括语义导入版本机制、最小版本选择机制等。语义导入版本机制是Go Moudle其他机制的基础，它是通过在包导入路径中引入主版本号的方式，来区别同一个包的不兼容版本。而且，Go命令使用<strong>最小版本选择</strong>机制进行包依赖版本选择，这和当前主流编程语言，以及Go社区之前的包依赖管理工具使用的算法都有点不同。</p><p>此外，Go命令还可以通过GO111MODULE环境变量进行Go构建模式的切换。但你要注意，从Go 1.11到Go 1.16，不同的Go版本在GO111MODULE为不同值的情况下，开启的构建模式以及具体表现行为也几经变化，这里你重点看一下前面总结的表格。</p><p>现在，Go核心团队已经考虑在后续版本中彻底移除GOPATH构建模式，Go Module构建模式将成为Go语言唯一的标准构建模式。所以，<strong>学完这一课之后，我建议你从现在开始就彻底抛弃GOPATH构建模式，全面使用Go Module构建模式</strong>。</p><h3>思考题</h3><p>今天我们的思考题是：如何将基于GOPATH构建模式的现有项目迁移为使用Go Module构建模式？欢迎在留言区和我分享你的答案。</p><p>感谢你和我一起学习，也欢迎你把这节课分享给更多对Go构建模式感兴趣的朋友。我是Tony Bai，我们下节课见。</p>","comments":[{"had_liked":false,"id":318099,"user_name":"张诚","can_delete":false,"product_type":"c1","uid":1145556,"ip_address":"","ucode":"8D7709E70476C0","user_header":"https://static001.geekbang.org/account/avatar/00/11/7a/d4/aa028773.jpg","comment_is_top":false,"comment_ctime":1635150270,"is_pvip":false,"replies":[{"id":115382,"content":"过奖了:)","user_name":"作者回复","user_name_real":"Tony Bai","uid":1026224,"ctime":1635215786,"ip_address":"","comment_id":318099,"utype":1}],"discussion_count":7,"race_medal":0,"score":2,"product_id":100093501,"comment_content":"目前网上讲包管理讲得最清晰最全面的内容了。","like_count":81},{"had_liked":false,"id":321409,"user_name":"若水清菡","can_delete":false,"product_type":"c1","uid":1099296,"ip_address":"","ucode":"175C014E3B985D","user_header":"https://static001.geekbang.org/account/avatar/00/10/c6/20/124ae6d4.jpg","comment_is_top":false,"comment_ctime":1636859110,"is_pvip":false,"replies":[{"id":116713,"content":"嗯嗯，这次的思路是先让大家上手。但作为入门课，后续必然也会对Go语法进行讲解与深入理解的。","user_name":"作者回复","user_name_real":"Tony Bai","uid":1026224,"ctime":1636897019,"ip_address":"","comment_id":321409,"utype":1}],"discussion_count":2,"race_medal":0,"score":2,"product_id":100093501,"comment_content":"之前看过两个老师讲go，上来基本上都适合先语法规则后实践的路线，每次go build都一脸懵逼，看下来还是不了解go的编译过程~~~~tony bai老师讲的非常好，遇到一位合适自己的老师，希望跟着学完这门课程，非常感谢老师~","like_count":21,"discussions":[{"author":{"id":1480941,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/ia5Tiav3icxKhgPY3cticZSDSib1crqqlfRxlckDWOtdAWePXR3hkANUsfIgO2RZgnEumsRAwDesy6UjtQthibeGIOTQ/132","nickname":"大名府卢员外","note":"","ucode":"A2EBEF5ADCD0F9","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":415051,"discussion_content":"复议。go module今天算是通了。","likes_number":4,"is_delete":false,"is_hidden":false,"ctime":1636971634,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1365738,"avatar":"https://static001.geekbang.org/account/avatar/00/14/d6/ea/56d4712f.jpg","nickname":"William张先森","note":"","ucode":"F31EEA625E2E14","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":556181,"discussion_content":"梳理清楚了，网上直接搜来的内容有不同版本，很容易把人搞混","likes_number":3,"is_delete":false,"is_hidden":false,"ctime":1647241390,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":2166073,"avatar":"https://thirdwx.qlogo.cn/mmopen/vi_32/k3YD3y3BzGDSdrwRJyJY4BXsNJibfM4uzOdDVKIAlFApR2FZCLg2ibrZtJ4vuahA3LHLW9GKzH5CMGqCDhWjhZqg/132","nickname":"戒酒的李白","note":"","ucode":"744E1A22761647","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":584836,"discussion_content":"go陆续学习了一段时间，也看过很多的资料，这篇绝对是讲的最清楚的，没有之一。感谢都是的精心准备和前期的付出。","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1661152563,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":"上海","group_id":0},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":2779136,"avatar":"https://static001.geekbang.org/account/avatar/00/2a/68/00/f2d8e3fd.jpg","nickname":"Geek_9a9eeb586","note":"","ucode":"31D5D4E0B2995D","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":560043,"discussion_content":"赞同","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1649142719,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1261108,"avatar":"https://static001.geekbang.org/account/avatar/00/13/3e/34/dd0a3c61.jpg","nickname":"爱吃彩虹糖的猫~","note":"","ucode":"9EC7A8FD4B7DB1","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":549193,"discussion_content":"相当清楚明白","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1643717169,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1501818,"avatar":"https://static001.geekbang.org/account/avatar/00/16/ea/7a/d857723d.jpg","nickname":"Vfeelit","note":"","ucode":"F3FF2B069F347F","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":544828,"discussion_content":"同感。","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1641726105,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1026224,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/a8/b0/6f87ab08.jpg","nickname":"Tony Bai","note":"","ucode":"B6B08985F6FA89","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":529103,"discussion_content":"过奖了:)","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1635215786,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":318185,"user_name":"lesserror","can_delete":false,"product_type":"c1","uid":1351076,"ip_address":"","ucode":"25A54D1165FCF6","user_header":"https://static001.geekbang.org/account/avatar/00/14/9d/a4/e481ae48.jpg","comment_is_top":false,"comment_ctime":1635176756,"is_pvip":false,"replies":[{"id":115432,"content":"你的提问就是对专栏最好的支持，手工点赞！\n\n下面回答你的问题：\n\n1. 从gopath模式下，go build命令的输出来看，是这样的。\n2. go.sum机制对于大多数开发人员都是透明的，属于高级话题。因此，在我的这个以入门和基础为重的专栏中并未深入展开。后&gt;续我可能会在自己的博客或公号上谈谈go.sum机制，到时候，你可以去看看。\n3. 相较于选择最新最大版本，选择最小版本出于几个考虑吧：\n\n1）对开发者而言，更易于理解和预测，就像课程中例子那样，我们根据依赖图可以很容易确定程序构建最终使用的依赖版本。\n2) 对go核心团队来说，更容易实现，据说实现最小选择的代码也就几十行。\n3) 更重要的是最小版本选择更容易实现可重现构建。试想一下，如果选择的是最大最新版本，那么针对同一份代码，其依赖包的最新最大版本在不同时刻可能是不同的，那么在不同时刻的构建，产生的最终文件就是不同的。\n                                              \n当然这一切的前提都是基于语义版本规范，对于不符合规范的module，相当于没有遵守契约，这套规则也就失效。这对任何语言来\n说都是一样的。\n                                                                       \n                                                                       \n4. 不属于。04讲说的那种情况是指在一个项目仓库中的不同目录下放置了多个go.mod，即一个项目中有多个module。\n     \n\n","user_name":"作者回复","user_name_real":"Tony Bai","uid":1026224,"ctime":1635241175,"ip_address":"","comment_id":318185,"utype":1}],"discussion_count":3,"race_medal":0,"score":2,"product_id":100093501,"comment_content":"感谢 Tony Bai 老师的分享，每篇文章我都认真拜读了。\n\n本着持续精进的目的，每篇文章我都会提出一些自己的疑问，麻烦老师抽空解答一下。\n\n1. 在$GOPATH模式下，寻找第三方包依赖的顺序是不是：先找 $GOROOT 然后找  $GOPATH。\n\n2. go.sum文件的工作原理后面能否详细讲讲吗？ 感觉这里的讲解还是简单带过了。\n\n3. 文中说：“Go 团队认为“最小版本选择”为 Go 程序实现持久的和可重现的构建提供了最佳的方案。” 这句话能展开讲讲吗？ 感觉没明白其中的意思。\n\n4. 第4讲说到：“Go 支持在一个项目 &#47; 仓库中存在多个 module，但这种管理方式可能要比一定比例的代码重复引入更多的复杂性。”  如果项目中引入了第三方 module，比如这篇文章中也引入了第三方 module，这种情况属于 :  &quot;在一个项目 &#47; 仓库中存在多个 module&quot; 的情况吗？","like_count":18,"discussions":[{"author":{"id":1026224,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/a8/b0/6f87ab08.jpg","nickname":"Tony Bai","note":"","ucode":"B6B08985F6FA89","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":529131,"discussion_content":"你的提问就是对专栏最好的支持，手工点赞！\n\n下面回答你的问题：\n\n1. 从gopath模式下，go build命令的输出来看，是这样的。\n2. go.sum机制对于大多数开发人员都是透明的，属于高级话题。因此，在我的这个以入门和基础为重的专栏中并未深入展开。后&amp;gt;续我可能会在自己的博客或公号上谈谈go.sum机制，到时候，你可以去看看。\n3. 相较于选择最新最大版本，选择最小版本出于几个考虑吧：\n\n1）对开发者而言，更易于理解和预测，就像课程中例子那样，我们根据依赖图可以很容易确定程序构建最终使用的依赖版本。\n2) 对go核心团队来说，更容易实现，据说实现最小选择的代码也就几十行。\n3) 更重要的是最小版本选择更容易实现可重现构建。试想一下，如果选择的是最大最新版本，那么针对同一份代码，其依赖包的最新最大版本在不同时刻可能是不同的，那么在不同时刻的构建，产生的最终文件就是不同的。\n                                              \n当然这一切的前提都是基于语义版本规范，对于不符合规范的module，相当于没有遵守契约，这套规则也就失效。这对任何语言来\n说都是一样的。\n                                                                       \n                                                                       \n4. 不属于。04讲说的那种情况是指在一个项目仓库中的不同目录下放置了多个go.mod，即一个项目中有多个module。\n     \n\n","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1635241175,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1592279,"avatar":"https://static001.geekbang.org/account/avatar/00/18/4b/d7/f46c6dfd.jpg","nickname":"William Ning","note":"","ucode":"4DB8D05E69E5F3","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":571671,"discussion_content":"老师的回答，除了说很清晰，恐怕就是剩下clearly～","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1652341249,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1351076,"avatar":"https://static001.geekbang.org/account/avatar/00/14/9d/a4/e481ae48.jpg","nickname":"lesserror","note":"","ucode":"25A54D1165FCF6","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":408511,"discussion_content":"谢谢老师的精彩回答。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1635258706,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":337940,"user_name":"flexiver","can_delete":false,"product_type":"c1","uid":2889691,"ip_address":"","ucode":"5D83DFA90826E1","user_header":"","comment_is_top":false,"comment_ctime":1647168559,"is_pvip":false,"replies":[{"id":123635,"content":"好问题！不必要非得是github.com，也不必要非得是github.com&#47;module name这样的。你可以使用module demo1这样的path。不过module path有三个作用，根据需要作出path的选择：\n\n1. 定位代码仓库位置。如果你的代码是开源到一些公共代码托管站点，或者在组织内部的代码仓库时，path中要带上仓库的地址，比如github.com&#47;repo&#47;module，这样依赖你的module的其他代码可以找到你的module代码。\n2. 如果你的module不在repo的根路径下，那么在module path中还要包含子目录路径。以github.com&#47;etcd-io&#47;etcd这个仓库为例。这个仓库下管理着多个go module。以其子目录raft下面的module为例，这个module的path为：module go.etcd.io&#47;etcd&#47;raft&#47;v3。其中的raft就是子路径。\n\n3. major版本号。如果major&gt;=2，需要在module path中加上major号后缀。就像上面的module go.etcd.io&#47;etcd&#47;raft&#47;v3。\n\n","user_name":"作者回复","user_name_real":"编辑","uid":1026224,"ctime":1647398122,"ip_address":"","comment_id":337940,"utype":1}],"discussion_count":5,"race_medal":0,"score":2,"product_id":100093501,"comment_content":"老师，您好。想要请问解答两个问题： 1、请问在构建module时， go mod init -module path, 这个module path 是固定要写成github.com&#47;module name这样一个结构吗？ ","like_count":13,"discussions":[{"author":{"id":1026224,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/a8/b0/6f87ab08.jpg","nickname":"Tony Bai","note":"","ucode":"B6B08985F6FA89","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":529131,"discussion_content":"你的提问就是对专栏最好的支持，手工点赞！\n\n下面回答你的问题：\n\n1. 从gopath模式下，go build命令的输出来看，是这样的。\n2. go.sum机制对于大多数开发人员都是透明的，属于高级话题。因此，在我的这个以入门和基础为重的专栏中并未深入展开。后&amp;gt;续我可能会在自己的博客或公号上谈谈go.sum机制，到时候，你可以去看看。\n3. 相较于选择最新最大版本，选择最小版本出于几个考虑吧：\n\n1）对开发者而言，更易于理解和预测，就像课程中例子那样，我们根据依赖图可以很容易确定程序构建最终使用的依赖版本。\n2) 对go核心团队来说，更容易实现，据说实现最小选择的代码也就几十行。\n3) 更重要的是最小版本选择更容易实现可重现构建。试想一下，如果选择的是最大最新版本，那么针对同一份代码，其依赖包的最新最大版本在不同时刻可能是不同的，那么在不同时刻的构建，产生的最终文件就是不同的。\n                                              \n当然这一切的前提都是基于语义版本规范，对于不符合规范的module，相当于没有遵守契约，这套规则也就失效。这对任何语言来\n说都是一样的。\n                                                                       \n                                                                       \n4. 不属于。04讲说的那种情况是指在一个项目仓库中的不同目录下放置了多个go.mod，即一个项目中有多个module。\n     \n\n","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1635241175,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1592279,"avatar":"https://static001.geekbang.org/account/avatar/00/18/4b/d7/f46c6dfd.jpg","nickname":"William Ning","note":"","ucode":"4DB8D05E69E5F3","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":571671,"discussion_content":"老师的回答，除了说很清晰，恐怕就是剩下clearly～","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1652341249,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1351076,"avatar":"https://static001.geekbang.org/account/avatar/00/14/9d/a4/e481ae48.jpg","nickname":"lesserror","note":"","ucode":"25A54D1165FCF6","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":408511,"discussion_content":"谢谢老师的精彩回答。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1635258706,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":318172,"user_name":"丶能","can_delete":false,"product_type":"c1","uid":1730385,"ip_address":"","ucode":"73F181A8ADEBB0","user_header":"https://static001.geekbang.org/account/avatar/00/1a/67/51/ee740f03.jpg","comment_is_top":false,"comment_ctime":1635170517,"is_pvip":false,"replies":[{"id":115428,"content":"按照课程中的例子，A 要求 &gt;=C v1.1.0，B 要求 C &gt;=v1.3.0，那么选择同时满足A与B要求的最小版本，就是v1.3.0。如果选择v1.1.0则不满足A要求。","user_name":"作者回复","user_name_real":"Tony Bai","uid":1026224,"ctime":1635237899,"ip_address":"","comment_id":318172,"utype":1}],"discussion_count":11,"race_medal":0,"score":2,"product_id":100093501,"comment_content":"提问！\n“选择符合项目整体要求的最小版本”是可能选择，依赖最小版本与最新版本中任意版本，还是项目引入版本中的可选范围内的最小版本呢？","like_count":12,"discussions":[{"author":{"id":1026224,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/a8/b0/6f87ab08.jpg","nickname":"Tony Bai","note":"","ucode":"B6B08985F6FA89","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":556478,"discussion_content":"好问题！不必要非得是github.com，也不必要非得是github.com/module name这样的。你可以使用module demo1这样的path。不过module path有三个作用，根据需要作出path的选择：\n\n1. 定位代码仓库位置。如果你的代码是开源到一些公共代码托管站点，或者在组织内部的代码仓库时，path中要带上仓库的地址，比如github.com/repo/module，这样依赖你的module的其他代码可以找到你的module代码。\n2. 如果你的module不在repo的根路径下，那么在module path中还要包含子目录路径。以github.com/etcd-io/etcd这个仓库为例。这个仓库下管理着多个go module。以其子目录raft下面的module为例，这个module的path为：module go.etcd.io/etcd/raft/v3。其中的raft就是子路径。\n\n3. major版本号。如果major&gt;=2，需要在module path中加上major号后缀。就像上面的module go.etcd.io/etcd/raft/v3。\n\n","likes_number":4,"is_delete":false,"is_hidden":false,"ctime":1647398123,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1041151,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/e2/ff/34cc77d1.jpg","nickname":"Geek_y2zmhj","note":"","ucode":"BEC445820AD09E","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":641435,"discussion_content":"mark","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1712645048,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":"广东","group_id":0},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1175507,"avatar":"https://static001.geekbang.org/account/avatar/00/11/ef/d3/241d0b84.jpg","nickname":"upup","note":"","ucode":"25DB114677EF58","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":573536,"discussion_content":"Mark\n","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1653479698,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1592279,"avatar":"https://static001.geekbang.org/account/avatar/00/18/4b/d7/f46c6dfd.jpg","nickname":"William Ning","note":"","ucode":"4DB8D05E69E5F3","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":571672,"discussion_content":"老师同学好，另外一个问题，项目后期可以随意修改module path吗？\n基于hellomodule项目，做了实践，是可以的。\n原因猜想应该是module处于顶层，对于项目本身，修改并没有实质影响。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1652341738,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":2889691,"avatar":"","nickname":"flexiver","note":"","ucode":"5D83DFA90826E1","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":557056,"discussion_content":"老师针对第二点的解答，我想确认一点是，当module 并不在repo的根目录下，而是在repo的某一个子目录下，这种module-path 一定是包含这个子目录的，不然go get不到这个module对吧，module path加子目录是为了解决这个问题吧","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1647627406,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":339380,"user_name":"太匆匆","can_delete":false,"product_type":"c1","uid":1628299,"ip_address":"","ucode":"2F3F273CB65F5D","user_header":"https://static001.geekbang.org/account/avatar/00/18/d8/8b/d81769bf.jpg","comment_is_top":false,"comment_ctime":1648048889,"is_pvip":false,"replies":[{"id":124104,"content":"好问题！可以通过go get xxx@v1.7.0显式更新go.mod中的依赖版本。或通过go mod edit命令或直接编辑go.mod进行。","user_name":"作者回复","user_name_real":"编辑","uid":1026224,"ctime":1648168307,"ip_address":"","comment_id":339380,"utype":1}],"discussion_count":2,"race_medal":0,"score":2,"product_id":100093501,"comment_content":"默认是是最小版本原则，能否修改默认呢？比如举例当中的v1.1.0、v1.3.0、v1.7.0默认会选v1.3.0，开发者能否将其改成v1.7.0呢？","like_count":11,"discussions":[{"author":{"id":1026224,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/a8/b0/6f87ab08.jpg","nickname":"Tony Bai","note":"","ucode":"B6B08985F6FA89","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":529127,"discussion_content":"按照课程中的例子，A 要求 &amp;gt;=C v1.1.0，B 要求 C &amp;gt;=v1.3.0，那么选择同时满足A与B要求的最小版本，就是v1.3.0。如果选择v1.1.0则不满足A要求。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1635237899,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":5,"child_discussions":[{"author":{"id":2847330,"avatar":"https://thirdwx.qlogo.cn/mmopen/vi_32/DYAIOgq83ep7c7UKsjRiclaAqD9vMHSUXayzrvRhvic3Lm6ibX82L3DibJnCCtDmB3OfxbuVjetpT6Qa8IuwqZCWlw/132","nickname":"Geek_2337af","note":"","ucode":"54B135EB7E70F1","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1026224,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/a8/b0/6f87ab08.jpg","nickname":"Tony Bai","note":"","ucode":"B6B08985F6FA89","race_medal":0,"user_type":2,"is_pvip":false},"discussion":{"id":535651,"discussion_content":"好了，如果A要求C v1.3.0\nB要求C v2.0.0此时c的最新版本是v2.2.2，那么选择的是v2.0.0吗，还是要两个版本都需要导入？","likes_number":2,"is_delete":false,"is_hidden":false,"ctime":1638503389,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":529127,"ip_address":"","group_id":0},"score":535651,"extra":""},{"author":{"id":1148687,"avatar":"https://static001.geekbang.org/account/avatar/00/11/87/0f/9876789d.jpg","nickname":"唐超伟","note":"","ucode":"F0B7384674A0E3","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1026224,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/a8/b0/6f87ab08.jpg","nickname":"Tony Bai","note":"","ucode":"B6B08985F6FA89","race_medal":0,"user_type":2,"is_pvip":false},"discussion":{"id":559957,"discussion_content":"这里老师是不是口误了，如果选择v1.1.0就不满足B的要求？","likes_number":2,"is_delete":false,"is_hidden":false,"ctime":1649080631,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":529127,"ip_address":"","group_id":0},"score":559957,"extra":""},{"author":{"id":1175507,"avatar":"https://static001.geekbang.org/account/avatar/00/11/ef/d3/241d0b84.jpg","nickname":"upup","note":"","ucode":"25DB114677EF58","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1148687,"avatar":"https://static001.geekbang.org/account/avatar/00/11/87/0f/9876789d.jpg","nickname":"唐超伟","note":"","ucode":"F0B7384674A0E3","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":573533,"discussion_content":"向后兼容：版本号大的兼容版本号小的","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1653478649,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":559957,"ip_address":"","group_id":0},"score":573533,"extra":""}]},{"author":{"id":1026224,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/a8/b0/6f87ab08.jpg","nickname":"Tony Bai","note":"","ucode":"B6B08985F6FA89","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":409921,"discussion_content":"最小版本选择的前提是：语义版本兼容性原则。","likes_number":3,"is_delete":false,"is_hidden":false,"ctime":1635550499,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1175507,"avatar":"https://static001.geekbang.org/account/avatar/00/11/ef/d3/241d0b84.jpg","nickname":"upup","note":"","ucode":"25DB114677EF58","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":573534,"discussion_content":"1：满足要求；2：版本号最小；","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1653478676,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1730385,"avatar":"https://static001.geekbang.org/account/avatar/00/1a/67/51/ee740f03.jpg","nickname":"丶能","note":"","ucode":"73F181A8ADEBB0","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":408382,"discussion_content":"如果1.3中移除了1.1中的部分函数，在1.6中又加了回来，此时最新为1.7。go会选择那个呢。\n\n谢谢解答😁","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1635238635,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"","child_discussion_number":2,"child_discussions":[{"author":{"id":2822959,"avatar":"https://static001.geekbang.org/account/avatar/00/2b/13/2f/24420ab6.jpg","nickname":"jacky","note":"","ucode":"6404300921C8D1","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1730385,"avatar":"https://static001.geekbang.org/account/avatar/00/1a/67/51/ee740f03.jpg","nickname":"丶能","note":"","ucode":"73F181A8ADEBB0","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":409142,"discussion_content":"1.3移除了部分函数，那1.3根本就不兼容1.1，版本号得2打头了吧。","likes_number":5,"is_delete":false,"is_hidden":false,"ctime":1635384461,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":408382,"ip_address":"","group_id":0},"score":409142,"extra":""},{"author":{"id":2055809,"avatar":"https://static001.geekbang.org/account/avatar/00/1f/5e/81/82709d6e.jpg","nickname":"码小呆","note":"","ucode":"44532D6ABF9340","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":2822959,"avatar":"https://static001.geekbang.org/account/avatar/00/2b/13/2f/24420ab6.jpg","nickname":"jacky","note":"","ucode":"6404300921C8D1","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":619565,"discussion_content":"那这里就是很坑的点了","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1685275088,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":409142,"ip_address":"广东","group_id":0},"score":619565,"extra":""}]}]},{"had_liked":false,"id":327942,"user_name":"独钓寒江","can_delete":false,"product_type":"c1","uid":2812836,"ip_address":"","ucode":"53C15891B7E800","user_header":"https://static001.geekbang.org/account/avatar/00/2a/eb/a4/b247e9b7.jpg","comment_is_top":false,"comment_ctime":1640410223,"is_pvip":false,"replies":[{"id":120358,"content":"你这个问题很&quot;与时俱进&quot;啊:)。首先对于已经依赖logrus的版本的go项目，go build不会自动更新logrus到其最新版本，也就不会受到故意漏洞的侵害。假设你的项目在go mod init时获取到的是最新漏洞版本或通过go get logrus@latest获取到其漏洞版本，那么可以看一下07讲，将版本降级或升级到漏洞修复后的版本，操作步骤专栏里都有的。","user_name":"作者回复","user_name_real":"作者","uid":1026224,"ctime":1641896950,"ip_address":"","comment_id":327942,"utype":1}],"discussion_count":3,"race_medal":0,"score":2,"product_id":100093501,"comment_content":"老师你好，最近 log4j 和 logback 都被发现了安全漏洞，很多Java程序都受到影响，修复起来工作量也不小。如果类似情况出现在Go方面，例如 logrus 出了安全漏洞，我们需要修改依赖版本, 我们可以怎么应对呢？可以简单说说吗？","like_count":7,"discussions":[{"author":{"id":1035064,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/cb/38/4c9cfdf4.jpg","nickname":"谢小路","note":"","ucode":"C9FE2EB10DC105","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":566706,"discussion_content":"假设库作者先修复了。项目中直接go get 对应的库的版本，更新项目的版本库就可以了。如果库作者没修复，你先修复，你可以把库 clone 下来，提交到自己的仓库，转而导入库引入你修复的那个库。","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1650731367,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1026224,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/a8/b0/6f87ab08.jpg","nickname":"Tony Bai","note":"","ucode":"B6B08985F6FA89","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":545297,"discussion_content":"你这个问题很\"与时俱进\"啊:)。首先对于已经依赖logrus的版本的go项目，go build不会自动更新logrus到其最新版本，也就不会受到故意漏洞的侵害。假设你的项目在go mod init时获取到的是最新漏洞版本或通过go get logrus@latest获取到其漏洞版本，那么可以看一下07讲，将版本降级或升级到漏洞修复后的版本，操作步骤专栏里都有的。","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1641896950,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":1,"child_discussions":[{"author":{"id":2812836,"avatar":"https://static001.geekbang.org/account/avatar/00/2a/eb/a4/b247e9b7.jpg","nickname":"独钓寒江","note":"","ucode":"53C15891B7E800","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1026224,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/a8/b0/6f87ab08.jpg","nickname":"Tony Bai","note":"","ucode":"B6B08985F6FA89","race_medal":0,"user_type":2,"is_pvip":false},"discussion":{"id":545393,"discussion_content":"谢谢老师解答，是的，在第7讲找到了答案","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1641948896,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":545297,"ip_address":"","group_id":0},"score":545393,"extra":""}]}]},{"had_liked":false,"id":344121,"user_name":"ゝ骑着小车去兜风。","can_delete":false,"product_type":"c1","uid":2600957,"ip_address":"","ucode":"35F9E5360DF42C","user_header":"https://static001.geekbang.org/account/avatar/00/27/af/fd/a1708649.jpg","comment_is_top":false,"comment_ctime":1651283919,"is_pvip":false,"replies":[{"id":125696,"content":"👍","user_name":"作者回复","user_name_real":"编辑","uid":1026224,"ctime":1651490804,"ip_address":"","comment_id":344121,"utype":1}],"discussion_count":4,"race_medal":0,"score":2,"product_id":100093501,"comment_content":"之前做过一个go的项目，用的iris框架，然而拉下来的包始终没有我需要的那个方法，纠结了好久都没办法解决。 现在终于知道是iris框架更新了，导致主板本号不同，需要的那个方法也变成另一个方法了。","like_count":6,"discussions":[{"author":{"id":1026224,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/a8/b0/6f87ab08.jpg","nickname":"Tony Bai","note":"","ucode":"B6B08985F6FA89","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":569584,"discussion_content":"👍","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1651490804,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1071909,"avatar":"https://static001.geekbang.org/account/avatar/00/10/5b/25/d78cc1fe.jpg","nickname":"都市夜归人","note":"","ucode":"DFF59BE3D80B42","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":619936,"discussion_content":"用iris开发的web应用稳定性如何啊？","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1685620748,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":"北京","group_id":0},"score":2,"extra":"","child_discussion_number":1,"child_discussions":[{"author":{"id":2600957,"avatar":"https://static001.geekbang.org/account/avatar/00/27/af/fd/a1708649.jpg","nickname":"ゝ骑着小车去兜风。","note":"","ucode":"35F9E5360DF42C","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1071909,"avatar":"https://static001.geekbang.org/account/avatar/00/10/5b/25/d78cc1fe.jpg","nickname":"都市夜归人","note":"","ucode":"DFF59BE3D80B42","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":620469,"discussion_content":"我个人感觉还是gin比较好","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1686198177,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":619936,"ip_address":"陕西","group_id":0},"score":620469,"extra":""}]},{"author":{"id":3198641,"avatar":"https://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTIFEQibKmCdPwFMncjfPFficY97fdnZWFxFbu8uze8REXB5S6gMtxRsESWibBmEFibBsaaj0ZkKmWPtEA/132","nickname":"义务教育漏网之鱼","note":"","ucode":"DE23BC762FD57B","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":614694,"discussion_content":"那不对啊。如果是主版本号变了，你代码里的 import 也要改成 xxxx/v2 之类的吧。如果你代码没改的话，也会自动更新到主版本最大的那个依赖么？","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1681871058,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":"湖北","group_id":0},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":361142,"user_name":"李亮","can_delete":false,"product_type":"c1","uid":1079702,"ip_address":"北京","ucode":"E26284C3BF7DF1","user_header":"https://static001.geekbang.org/account/avatar/00/10/79/96/fb0d8a65.jpg","comment_is_top":false,"comment_ctime":1667271965,"is_pvip":false,"replies":[{"id":131381,"content":"👍","user_name":"作者回复","user_name_real":"编辑","uid":1026224,"ctime":1667377579,"ip_address":"北京","comment_id":361142,"utype":1}],"discussion_count":2,"race_medal":0,"score":2,"product_id":100093501,"comment_content":"关于依赖管理的文档在这里：https:&#47;&#47;go.dev&#47;doc&#47;modules&#47;managing-dependencies","like_count":5,"discussions":[{"author":{"id":1026224,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/a8/b0/6f87ab08.jpg","nickname":"Tony Bai","note":"","ucode":"B6B08985F6FA89","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":569584,"discussion_content":"👍","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1651490804,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1071909,"avatar":"https://static001.geekbang.org/account/avatar/00/10/5b/25/d78cc1fe.jpg","nickname":"都市夜归人","note":"","ucode":"DFF59BE3D80B42","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":619936,"discussion_content":"用iris开发的web应用稳定性如何啊？","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1685620748,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":"北京","group_id":0},"score":2,"extra":"","child_discussion_number":1,"child_discussions":[{"author":{"id":2600957,"avatar":"https://static001.geekbang.org/account/avatar/00/27/af/fd/a1708649.jpg","nickname":"ゝ骑着小车去兜风。","note":"","ucode":"35F9E5360DF42C","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1071909,"avatar":"https://static001.geekbang.org/account/avatar/00/10/5b/25/d78cc1fe.jpg","nickname":"都市夜归人","note":"","ucode":"DFF59BE3D80B42","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":620469,"discussion_content":"我个人感觉还是gin比较好","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1686198177,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":619936,"ip_address":"陕西","group_id":0},"score":620469,"extra":""}]},{"author":{"id":3198641,"avatar":"https://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTIFEQibKmCdPwFMncjfPFficY97fdnZWFxFbu8uze8REXB5S6gMtxRsESWibBmEFibBsaaj0ZkKmWPtEA/132","nickname":"义务教育漏网之鱼","note":"","ucode":"DE23BC762FD57B","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":614694,"discussion_content":"那不对啊。如果是主版本号变了，你代码里的 import 也要改成 xxxx/v2 之类的吧。如果你代码没改的话，也会自动更新到主版本最大的那个依赖么？","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1681871058,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":"湖北","group_id":0},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":345322,"user_name":"每天晒白牙","can_delete":false,"product_type":"c1","uid":1004698,"ip_address":"","ucode":"A1B102CD933DEA","user_header":"https://static001.geekbang.org/account/avatar/00/0f/54/9a/76c0af70.jpg","comment_is_top":false,"comment_ctime":1652193243,"is_pvip":false,"replies":[{"id":126070,"content":"所谓默认为on是指，如果GO111MODULE没有显式设置，那么默认为on。你这里环境变量GO111MODULE为空，那么go编译器默认GO111module为on。","user_name":"作者回复","user_name_real":"编辑","uid":1026224,"ctime":1652235051,"ip_address":"","comment_id":345322,"utype":1}],"discussion_count":2,"race_medal":0,"score":2,"product_id":100093501,"comment_content":"老师，请教个问题，我是go1.16.4版本，按照老师在文中所说，GO111MODULE 应该为on呀，而我的确实空\n(base) ➜  ~ go env\nGO111MODULE=&quot;&quot;\nGOARCH=&quot;amd64&quot;\n....\nGOVERSION=&quot;go1.16.4&quot;","like_count":4,"discussions":[{"author":{"id":1026224,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/a8/b0/6f87ab08.jpg","nickname":"Tony Bai","note":"","ucode":"B6B08985F6FA89","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":571462,"discussion_content":"所谓默认为on是指，如果GO111MODULE没有显式设置，那么默认为on。你这里环境变量GO111MODULE为空，那么go编译器默认GO111module为on。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1652235052,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":1,"child_discussions":[{"author":{"id":1004698,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/54/9a/76c0af70.jpg","nickname":"每天晒白牙","note":"","ucode":"A1B102CD933DEA","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1026224,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/a8/b0/6f87ab08.jpg","nickname":"Tony Bai","note":"","ucode":"B6B08985F6FA89","race_medal":0,"user_type":2,"is_pvip":false},"discussion":{"id":571465,"discussion_content":"明白了，谢谢老师及时的解惑，昨天跟着老师的专栏学了几篇，感觉写的很棒，对我这种go零基础的很有用，刚好工作中有用go的机会","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1652235553,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":571462,"ip_address":"","group_id":0},"score":571465,"extra":""}]}]},{"had_liked":false,"id":318099,"user_name":"张诚","can_delete":false,"product_type":"c1","uid":1145556,"ip_address":"","ucode":"8D7709E70476C0","user_header":"https://static001.geekbang.org/account/avatar/00/11/7a/d4/aa028773.jpg","comment_is_top":false,"comment_ctime":1635150270,"is_pvip":false,"replies":[{"id":115382,"content":"过奖了:)","user_name":"作者回复","user_name_real":"Tony Bai","uid":1026224,"ctime":1635215786,"ip_address":"","comment_id":318099,"utype":1}],"discussion_count":7,"race_medal":0,"score":2,"product_id":100093501,"comment_content":"目前网上讲包管理讲得最清晰最全面的内容了。","like_count":81,"discussions":[{"author":{"id":1480941,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/ia5Tiav3icxKhgPY3cticZSDSib1crqqlfRxlckDWOtdAWePXR3hkANUsfIgO2RZgnEumsRAwDesy6UjtQthibeGIOTQ/132","nickname":"大名府卢员外","note":"","ucode":"A2EBEF5ADCD0F9","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":415051,"discussion_content":"复议。go module今天算是通了。","likes_number":4,"is_delete":false,"is_hidden":false,"ctime":1636971634,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1365738,"avatar":"https://static001.geekbang.org/account/avatar/00/14/d6/ea/56d4712f.jpg","nickname":"William张先森","note":"","ucode":"F31EEA625E2E14","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":556181,"discussion_content":"梳理清楚了，网上直接搜来的内容有不同版本，很容易把人搞混","likes_number":3,"is_delete":false,"is_hidden":false,"ctime":1647241390,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":2166073,"avatar":"https://thirdwx.qlogo.cn/mmopen/vi_32/k3YD3y3BzGDSdrwRJyJY4BXsNJibfM4uzOdDVKIAlFApR2FZCLg2ibrZtJ4vuahA3LHLW9GKzH5CMGqCDhWjhZqg/132","nickname":"戒酒的李白","note":"","ucode":"744E1A22761647","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":584836,"discussion_content":"go陆续学习了一段时间，也看过很多的资料，这篇绝对是讲的最清楚的，没有之一。感谢都是的精心准备和前期的付出。","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1661152563,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":"上海","group_id":0},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":2779136,"avatar":"https://static001.geekbang.org/account/avatar/00/2a/68/00/f2d8e3fd.jpg","nickname":"Geek_9a9eeb586","note":"","ucode":"31D5D4E0B2995D","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":560043,"discussion_content":"赞同","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1649142719,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1261108,"avatar":"https://static001.geekbang.org/account/avatar/00/13/3e/34/dd0a3c61.jpg","nickname":"爱吃彩虹糖的猫~","note":"","ucode":"9EC7A8FD4B7DB1","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":549193,"discussion_content":"相当清楚明白","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1643717169,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1501818,"avatar":"https://static001.geekbang.org/account/avatar/00/16/ea/7a/d857723d.jpg","nickname":"Vfeelit","note":"","ucode":"F3FF2B069F347F","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":544828,"discussion_content":"同感。","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1641726105,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1026224,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/a8/b0/6f87ab08.jpg","nickname":"Tony Bai","note":"","ucode":"B6B08985F6FA89","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":529103,"discussion_content":"过奖了:)","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1635215786,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":321409,"user_name":"若水清菡","can_delete":false,"product_type":"c1","uid":1099296,"ip_address":"","ucode":"175C014E3B985D","user_header":"https://static001.geekbang.org/account/avatar/00/10/c6/20/124ae6d4.jpg","comment_is_top":false,"comment_ctime":1636859110,"is_pvip":false,"replies":[{"id":116713,"content":"嗯嗯，这次的思路是先让大家上手。但作为入门课，后续必然也会对Go语法进行讲解与深入理解的。","user_name":"作者回复","user_name_real":"Tony Bai","uid":1026224,"ctime":1636897019,"ip_address":"","comment_id":321409,"utype":1}],"discussion_count":2,"race_medal":0,"score":2,"product_id":100093501,"comment_content":"之前看过两个老师讲go，上来基本上都适合先语法规则后实践的路线，每次go build都一脸懵逼，看下来还是不了解go的编译过程~~~~tony bai老师讲的非常好，遇到一位合适自己的老师，希望跟着学完这门课程，非常感谢老师~","like_count":21,"discussions":[{"author":{"id":1026224,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/a8/b0/6f87ab08.jpg","nickname":"Tony Bai","note":"","ucode":"B6B08985F6FA89","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":530288,"discussion_content":"嗯嗯，这次的思路是先让大家上手。但作为入门课，后续必然也会对Go语法进行讲解与深入理解的。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1636897019,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1226968,"avatar":"https://static001.geekbang.org/account/avatar/00/12/b8/d8/f81b5604.jpg","nickname":"hcyycb","note":"","ucode":"77FF6CA41F9E66","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":533901,"discussion_content":"是的。老师的教学方法，确实对小白入门的非常友好，我之前只有一点点python的基础，看着老师的课程，都能接受。而且，这种先将go的整体特性讲解清楚的思路，非常适合。其实对于每一门编程语言的语法，它并不重要，基本都是声明方式的不同而已，自己个人看教程一两天就能记住。但是，老师这个课程入门阶段的知识，没有些内功积累是总结不出来的。","likes_number":2,"is_delete":false,"is_hidden":false,"ctime":1638016457,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":318185,"user_name":"lesserror","can_delete":false,"product_type":"c1","uid":1351076,"ip_address":"","ucode":"25A54D1165FCF6","user_header":"https://static001.geekbang.org/account/avatar/00/14/9d/a4/e481ae48.jpg","comment_is_top":false,"comment_ctime":1635176756,"is_pvip":false,"replies":[{"id":115432,"content":"你的提问就是对专栏最好的支持，手工点赞！\n\n下面回答你的问题：\n\n1. 从gopath模式下，go build命令的输出来看，是这样的。\n2. go.sum机制对于大多数开发人员都是透明的，属于高级话题。因此，在我的这个以入门和基础为重的专栏中并未深入展开。后&gt;续我可能会在自己的博客或公号上谈谈go.sum机制，到时候，你可以去看看。\n3. 相较于选择最新最大版本，选择最小版本出于几个考虑吧：\n\n1）对开发者而言，更易于理解和预测，就像课程中例子那样，我们根据依赖图可以很容易确定程序构建最终使用的依赖版本。\n2) 对go核心团队来说，更容易实现，据说实现最小选择的代码也就几十行。\n3) 更重要的是最小版本选择更容易实现可重现构建。试想一下，如果选择的是最大最新版本，那么针对同一份代码，其依赖包的最新最大版本在不同时刻可能是不同的，那么在不同时刻的构建，产生的最终文件就是不同的。\n                                              \n当然这一切的前提都是基于语义版本规范，对于不符合规范的module，相当于没有遵守契约，这套规则也就失效。这对任何语言来\n说都是一样的。\n                                                                       \n                                                                       \n4. 不属于。04讲说的那种情况是指在一个项目仓库中的不同目录下放置了多个go.mod，即一个项目中有多个module。\n     \n\n","user_name":"作者回复","user_name_real":"Tony Bai","uid":1026224,"ctime":1635241175,"ip_address":"","comment_id":318185,"utype":1}],"discussion_count":3,"race_medal":0,"score":2,"product_id":100093501,"comment_content":"感谢 Tony Bai 老师的分享，每篇文章我都认真拜读了。\n\n本着持续精进的目的，每篇文章我都会提出一些自己的疑问，麻烦老师抽空解答一下。\n\n1. 在$GOPATH模式下，寻找第三方包依赖的顺序是不是：先找 $GOROOT 然后找  $GOPATH。\n\n2. go.sum文件的工作原理后面能否详细讲讲吗？ 感觉这里的讲解还是简单带过了。\n\n3. 文中说：“Go 团队认为“最小版本选择”为 Go 程序实现持久的和可重现的构建提供了最佳的方案。” 这句话能展开讲讲吗？ 感觉没明白其中的意思。\n\n4. 第4讲说到：“Go 支持在一个项目 &#47; 仓库中存在多个 module，但这种管理方式可能要比一定比例的代码重复引入更多的复杂性。”  如果项目中引入了第三方 module，比如这篇文章中也引入了第三方 module，这种情况属于 :  &quot;在一个项目 &#47; 仓库中存在多个 module&quot; 的情况吗？","like_count":18,"discussions":[{"author":{"id":1026224,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/a8/b0/6f87ab08.jpg","nickname":"Tony Bai","note":"","ucode":"B6B08985F6FA89","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":530288,"discussion_content":"嗯嗯，这次的思路是先让大家上手。但作为入门课，后续必然也会对Go语法进行讲解与深入理解的。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1636897019,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1226968,"avatar":"https://static001.geekbang.org/account/avatar/00/12/b8/d8/f81b5604.jpg","nickname":"hcyycb","note":"","ucode":"77FF6CA41F9E66","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":533901,"discussion_content":"是的。老师的教学方法，确实对小白入门的非常友好，我之前只有一点点python的基础，看着老师的课程，都能接受。而且，这种先将go的整体特性讲解清楚的思路，非常适合。其实对于每一门编程语言的语法，它并不重要，基本都是声明方式的不同而已，自己个人看教程一两天就能记住。但是，老师这个课程入门阶段的知识，没有些内功积累是总结不出来的。","likes_number":2,"is_delete":false,"is_hidden":false,"ctime":1638016457,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":337940,"user_name":"flexiver","can_delete":false,"product_type":"c1","uid":2889691,"ip_address":"","ucode":"5D83DFA90826E1","user_header":"","comment_is_top":false,"comment_ctime":1647168559,"is_pvip":false,"replies":[{"id":123635,"content":"好问题！不必要非得是github.com，也不必要非得是github.com&#47;module name这样的。你可以使用module demo1这样的path。不过module path有三个作用，根据需要作出path的选择：\n\n1. 定位代码仓库位置。如果你的代码是开源到一些公共代码托管站点，或者在组织内部的代码仓库时，path中要带上仓库的地址，比如github.com&#47;repo&#47;module，这样依赖你的module的其他代码可以找到你的module代码。\n2. 如果你的module不在repo的根路径下，那么在module path中还要包含子目录路径。以github.com&#47;etcd-io&#47;etcd这个仓库为例。这个仓库下管理着多个go module。以其子目录raft下面的module为例，这个module的path为：module go.etcd.io&#47;etcd&#47;raft&#47;v3。其中的raft就是子路径。\n\n3. major版本号。如果major&gt;=2，需要在module path中加上major号后缀。就像上面的module go.etcd.io&#47;etcd&#47;raft&#47;v3。\n\n","user_name":"作者回复","user_name_real":"编辑","uid":1026224,"ctime":1647398122,"ip_address":"","comment_id":337940,"utype":1}],"discussion_count":5,"race_medal":0,"score":2,"product_id":100093501,"comment_content":"老师，您好。想要请问解答两个问题： 1、请问在构建module时， go mod init -module path, 这个module path 是固定要写成github.com&#47;module name这样一个结构吗？ ","like_count":13,"discussions":[{"author":{"id":1026224,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/a8/b0/6f87ab08.jpg","nickname":"Tony Bai","note":"","ucode":"B6B08985F6FA89","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":556478,"discussion_content":"好问题！不必要非得是github.com，也不必要非得是github.com/module name这样的。你可以使用module demo1这样的path。不过module path有三个作用，根据需要作出path的选择：\n\n1. 定位代码仓库位置。如果你的代码是开源到一些公共代码托管站点，或者在组织内部的代码仓库时，path中要带上仓库的地址，比如github.com/repo/module，这样依赖你的module的其他代码可以找到你的module代码。\n2. 如果你的module不在repo的根路径下，那么在module path中还要包含子目录路径。以github.com/etcd-io/etcd这个仓库为例。这个仓库下管理着多个go module。以其子目录raft下面的module为例，这个module的path为：module go.etcd.io/etcd/raft/v3。其中的raft就是子路径。\n\n3. major版本号。如果major&gt;=2，需要在module path中加上major号后缀。就像上面的module go.etcd.io/etcd/raft/v3。\n\n","likes_number":4,"is_delete":false,"is_hidden":false,"ctime":1647398123,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1041151,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/e2/ff/34cc77d1.jpg","nickname":"Geek_y2zmhj","note":"","ucode":"BEC445820AD09E","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":641435,"discussion_content":"mark","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1712645048,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":"广东","group_id":0},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1175507,"avatar":"https://static001.geekbang.org/account/avatar/00/11/ef/d3/241d0b84.jpg","nickname":"upup","note":"","ucode":"25DB114677EF58","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":573536,"discussion_content":"Mark\n","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1653479698,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1592279,"avatar":"https://static001.geekbang.org/account/avatar/00/18/4b/d7/f46c6dfd.jpg","nickname":"William Ning","note":"","ucode":"4DB8D05E69E5F3","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":571672,"discussion_content":"老师同学好，另外一个问题，项目后期可以随意修改module path吗？\n基于hellomodule项目，做了实践，是可以的。\n原因猜想应该是module处于顶层，对于项目本身，修改并没有实质影响。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1652341738,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":2889691,"avatar":"","nickname":"flexiver","note":"","ucode":"5D83DFA90826E1","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":557056,"discussion_content":"老师针对第二点的解答，我想确认一点是，当module 并不在repo的根目录下，而是在repo的某一个子目录下，这种module-path 一定是包含这个子目录的，不然go get不到这个module对吧，module path加子目录是为了解决这个问题吧","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1647627406,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":318172,"user_name":"丶能","can_delete":false,"product_type":"c1","uid":1730385,"ip_address":"","ucode":"73F181A8ADEBB0","user_header":"https://static001.geekbang.org/account/avatar/00/1a/67/51/ee740f03.jpg","comment_is_top":false,"comment_ctime":1635170517,"is_pvip":false,"replies":[{"id":115428,"content":"按照课程中的例子，A 要求 &gt;=C v1.1.0，B 要求 C &gt;=v1.3.0，那么选择同时满足A与B要求的最小版本，就是v1.3.0。如果选择v1.1.0则不满足A要求。","user_name":"作者回复","user_name_real":"Tony Bai","uid":1026224,"ctime":1635237899,"ip_address":"","comment_id":318172,"utype":1}],"discussion_count":11,"race_medal":0,"score":2,"product_id":100093501,"comment_content":"提问！\n“选择符合项目整体要求的最小版本”是可能选择，依赖最小版本与最新版本中任意版本，还是项目引入版本中的可选范围内的最小版本呢？","like_count":12,"discussions":[{"author":{"id":1026224,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/a8/b0/6f87ab08.jpg","nickname":"Tony Bai","note":"","ucode":"B6B08985F6FA89","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":529127,"discussion_content":"按照课程中的例子，A 要求 &amp;gt;=C v1.1.0，B 要求 C &amp;gt;=v1.3.0，那么选择同时满足A与B要求的最小版本，就是v1.3.0。如果选择v1.1.0则不满足A要求。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1635237899,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":5,"child_discussions":[{"author":{"id":2847330,"avatar":"https://thirdwx.qlogo.cn/mmopen/vi_32/DYAIOgq83ep7c7UKsjRiclaAqD9vMHSUXayzrvRhvic3Lm6ibX82L3DibJnCCtDmB3OfxbuVjetpT6Qa8IuwqZCWlw/132","nickname":"Geek_2337af","note":"","ucode":"54B135EB7E70F1","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1026224,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/a8/b0/6f87ab08.jpg","nickname":"Tony Bai","note":"","ucode":"B6B08985F6FA89","race_medal":0,"user_type":2,"is_pvip":false},"discussion":{"id":535651,"discussion_content":"好了，如果A要求C v1.3.0\nB要求C v2.0.0此时c的最新版本是v2.2.2，那么选择的是v2.0.0吗，还是要两个版本都需要导入？","likes_number":2,"is_delete":false,"is_hidden":false,"ctime":1638503389,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":529127,"ip_address":"","group_id":0},"score":535651,"extra":""},{"author":{"id":1148687,"avatar":"https://static001.geekbang.org/account/avatar/00/11/87/0f/9876789d.jpg","nickname":"唐超伟","note":"","ucode":"F0B7384674A0E3","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1026224,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/a8/b0/6f87ab08.jpg","nickname":"Tony Bai","note":"","ucode":"B6B08985F6FA89","race_medal":0,"user_type":2,"is_pvip":false},"discussion":{"id":559957,"discussion_content":"这里老师是不是口误了，如果选择v1.1.0就不满足B的要求？","likes_number":2,"is_delete":false,"is_hidden":false,"ctime":1649080631,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":529127,"ip_address":"","group_id":0},"score":559957,"extra":""},{"author":{"id":1175507,"avatar":"https://static001.geekbang.org/account/avatar/00/11/ef/d3/241d0b84.jpg","nickname":"upup","note":"","ucode":"25DB114677EF58","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1148687,"avatar":"https://static001.geekbang.org/account/avatar/00/11/87/0f/9876789d.jpg","nickname":"唐超伟","note":"","ucode":"F0B7384674A0E3","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":573533,"discussion_content":"向后兼容：版本号大的兼容版本号小的","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1653478649,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":559957,"ip_address":"","group_id":0},"score":573533,"extra":""}]},{"author":{"id":1026224,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/a8/b0/6f87ab08.jpg","nickname":"Tony Bai","note":"","ucode":"B6B08985F6FA89","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":409921,"discussion_content":"最小版本选择的前提是：语义版本兼容性原则。","likes_number":3,"is_delete":false,"is_hidden":false,"ctime":1635550499,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1175507,"avatar":"https://static001.geekbang.org/account/avatar/00/11/ef/d3/241d0b84.jpg","nickname":"upup","note":"","ucode":"25DB114677EF58","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":573534,"discussion_content":"1：满足要求；2：版本号最小；","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1653478676,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1730385,"avatar":"https://static001.geekbang.org/account/avatar/00/1a/67/51/ee740f03.jpg","nickname":"丶能","note":"","ucode":"73F181A8ADEBB0","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":408382,"discussion_content":"如果1.3中移除了1.1中的部分函数，在1.6中又加了回来，此时最新为1.7。go会选择那个呢。\n\n谢谢解答😁","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1635238635,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"","child_discussion_number":2,"child_discussions":[{"author":{"id":2822959,"avatar":"https://static001.geekbang.org/account/avatar/00/2b/13/2f/24420ab6.jpg","nickname":"jacky","note":"","ucode":"6404300921C8D1","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1730385,"avatar":"https://static001.geekbang.org/account/avatar/00/1a/67/51/ee740f03.jpg","nickname":"丶能","note":"","ucode":"73F181A8ADEBB0","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":409142,"discussion_content":"1.3移除了部分函数，那1.3根本就不兼容1.1，版本号得2打头了吧。","likes_number":5,"is_delete":false,"is_hidden":false,"ctime":1635384461,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":408382,"ip_address":"","group_id":0},"score":409142,"extra":""},{"author":{"id":2055809,"avatar":"https://static001.geekbang.org/account/avatar/00/1f/5e/81/82709d6e.jpg","nickname":"码小呆","note":"","ucode":"44532D6ABF9340","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":2822959,"avatar":"https://static001.geekbang.org/account/avatar/00/2b/13/2f/24420ab6.jpg","nickname":"jacky","note":"","ucode":"6404300921C8D1","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":619565,"discussion_content":"那这里就是很坑的点了","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1685275088,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":409142,"ip_address":"广东","group_id":0},"score":619565,"extra":""}]}]},{"had_liked":false,"id":339380,"user_name":"太匆匆","can_delete":false,"product_type":"c1","uid":1628299,"ip_address":"","ucode":"2F3F273CB65F5D","user_header":"https://static001.geekbang.org/account/avatar/00/18/d8/8b/d81769bf.jpg","comment_is_top":false,"comment_ctime":1648048889,"is_pvip":false,"replies":[{"id":124104,"content":"好问题！可以通过go get xxx@v1.7.0显式更新go.mod中的依赖版本。或通过go mod edit命令或直接编辑go.mod进行。","user_name":"作者回复","user_name_real":"编辑","uid":1026224,"ctime":1648168307,"ip_address":"","comment_id":339380,"utype":1}],"discussion_count":2,"race_medal":0,"score":2,"product_id":100093501,"comment_content":"默认是是最小版本原则，能否修改默认呢？比如举例当中的v1.1.0、v1.3.0、v1.7.0默认会选v1.3.0，开发者能否将其改成v1.7.0呢？","like_count":11,"discussions":[{"author":{"id":1026224,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/a8/b0/6f87ab08.jpg","nickname":"Tony Bai","note":"","ucode":"B6B08985F6FA89","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":558232,"discussion_content":"好问题！可以通过go get xxx@v1.7.0显式更新go.mod中的依赖版本。或通过go mod edit命令或直接编辑go.mod进行。","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1648168307,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1447410,"avatar":"https://static001.geekbang.org/account/avatar/00/16/15/f2/549c7551.jpg","nickname":"阿呆","note":"","ucode":"7BB84C1F43E335","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":586337,"discussion_content":"这样改了，sum 的hash 值不会有问题吗","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1662110599,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":"上海","group_id":0},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":327942,"user_name":"独钓寒江","can_delete":false,"product_type":"c1","uid":2812836,"ip_address":"","ucode":"53C15891B7E800","user_header":"https://static001.geekbang.org/account/avatar/00/2a/eb/a4/b247e9b7.jpg","comment_is_top":false,"comment_ctime":1640410223,"is_pvip":false,"replies":[{"id":120358,"content":"你这个问题很&quot;与时俱进&quot;啊:)。首先对于已经依赖logrus的版本的go项目，go build不会自动更新logrus到其最新版本，也就不会受到故意漏洞的侵害。假设你的项目在go mod init时获取到的是最新漏洞版本或通过go get logrus@latest获取到其漏洞版本，那么可以看一下07讲，将版本降级或升级到漏洞修复后的版本，操作步骤专栏里都有的。","user_name":"作者回复","user_name_real":"作者","uid":1026224,"ctime":1641896950,"ip_address":"","comment_id":327942,"utype":1}],"discussion_count":3,"race_medal":0,"score":2,"product_id":100093501,"comment_content":"老师你好，最近 log4j 和 logback 都被发现了安全漏洞，很多Java程序都受到影响，修复起来工作量也不小。如果类似情况出现在Go方面，例如 logrus 出了安全漏洞，我们需要修改依赖版本, 我们可以怎么应对呢？可以简单说说吗？","like_count":7,"discussions":[{"author":{"id":1026224,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/a8/b0/6f87ab08.jpg","nickname":"Tony Bai","note":"","ucode":"B6B08985F6FA89","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":558232,"discussion_content":"好问题！可以通过go get xxx@v1.7.0显式更新go.mod中的依赖版本。或通过go mod edit命令或直接编辑go.mod进行。","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1648168307,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1447410,"avatar":"https://static001.geekbang.org/account/avatar/00/16/15/f2/549c7551.jpg","nickname":"阿呆","note":"","ucode":"7BB84C1F43E335","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":586337,"discussion_content":"这样改了，sum 的hash 值不会有问题吗","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1662110599,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":"上海","group_id":0},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":344121,"user_name":"ゝ骑着小车去兜风。","can_delete":false,"product_type":"c1","uid":2600957,"ip_address":"","ucode":"35F9E5360DF42C","user_header":"https://static001.geekbang.org/account/avatar/00/27/af/fd/a1708649.jpg","comment_is_top":false,"comment_ctime":1651283919,"is_pvip":false,"replies":[{"id":125696,"content":"👍","user_name":"作者回复","user_name_real":"编辑","uid":1026224,"ctime":1651490804,"ip_address":"","comment_id":344121,"utype":1}],"discussion_count":4,"race_medal":0,"score":2,"product_id":100093501,"comment_content":"之前做过一个go的项目，用的iris框架，然而拉下来的包始终没有我需要的那个方法，纠结了好久都没办法解决。 现在终于知道是iris框架更新了，导致主板本号不同，需要的那个方法也变成另一个方法了。","like_count":6,"discussions":[{"author":{"id":1035064,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/cb/38/4c9cfdf4.jpg","nickname":"谢小路","note":"","ucode":"C9FE2EB10DC105","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":566706,"discussion_content":"假设库作者先修复了。项目中直接go get 对应的库的版本，更新项目的版本库就可以了。如果库作者没修复，你先修复，你可以把库 clone 下来，提交到自己的仓库，转而导入库引入你修复的那个库。","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1650731367,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1026224,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/a8/b0/6f87ab08.jpg","nickname":"Tony Bai","note":"","ucode":"B6B08985F6FA89","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":545297,"discussion_content":"你这个问题很\"与时俱进\"啊:)。首先对于已经依赖logrus的版本的go项目，go build不会自动更新logrus到其最新版本，也就不会受到故意漏洞的侵害。假设你的项目在go mod init时获取到的是最新漏洞版本或通过go get logrus@latest获取到其漏洞版本，那么可以看一下07讲，将版本降级或升级到漏洞修复后的版本，操作步骤专栏里都有的。","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1641896950,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":1,"child_discussions":[{"author":{"id":2812836,"avatar":"https://static001.geekbang.org/account/avatar/00/2a/eb/a4/b247e9b7.jpg","nickname":"独钓寒江","note":"","ucode":"53C15891B7E800","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1026224,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/a8/b0/6f87ab08.jpg","nickname":"Tony Bai","note":"","ucode":"B6B08985F6FA89","race_medal":0,"user_type":2,"is_pvip":false},"discussion":{"id":545393,"discussion_content":"谢谢老师解答，是的，在第7讲找到了答案","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1641948896,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":545297,"ip_address":"","group_id":0},"score":545393,"extra":""}]}]},{"had_liked":false,"id":361142,"user_name":"李亮","can_delete":false,"product_type":"c1","uid":1079702,"ip_address":"北京","ucode":"E26284C3BF7DF1","user_header":"https://static001.geekbang.org/account/avatar/00/10/79/96/fb0d8a65.jpg","comment_is_top":false,"comment_ctime":1667271965,"is_pvip":false,"replies":[{"id":131381,"content":"👍","user_name":"作者回复","user_name_real":"编辑","uid":1026224,"ctime":1667377579,"ip_address":"北京","comment_id":361142,"utype":1}],"discussion_count":2,"race_medal":0,"score":2,"product_id":100093501,"comment_content":"关于依赖管理的文档在这里：https:&#47;&#47;go.dev&#47;doc&#47;modules&#47;managing-dependencies","like_count":5,"discussions":[{"author":{"id":1026224,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/a8/b0/6f87ab08.jpg","nickname":"Tony Bai","note":"","ucode":"B6B08985F6FA89","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":592387,"discussion_content":"👍","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1667377579,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"北京","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1819176,"avatar":"https://static001.geekbang.org/account/avatar/00/1b/c2/28/32fdc447.jpg","nickname":"newchaos","note":"","ucode":"EBC1909694A0F4","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":653202,"discussion_content":"mark","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1730426424,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":"北京","group_id":0},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":345322,"user_name":"每天晒白牙","can_delete":false,"product_type":"c1","uid":1004698,"ip_address":"","ucode":"A1B102CD933DEA","user_header":"https://static001.geekbang.org/account/avatar/00/0f/54/9a/76c0af70.jpg","comment_is_top":false,"comment_ctime":1652193243,"is_pvip":false,"replies":[{"id":126070,"content":"所谓默认为on是指，如果GO111MODULE没有显式设置，那么默认为on。你这里环境变量GO111MODULE为空，那么go编译器默认GO111module为on。","user_name":"作者回复","user_name_real":"编辑","uid":1026224,"ctime":1652235051,"ip_address":"","comment_id":345322,"utype":1}],"discussion_count":2,"race_medal":0,"score":2,"product_id":100093501,"comment_content":"老师，请教个问题，我是go1.16.4版本，按照老师在文中所说，GO111MODULE 应该为on呀，而我的确实空\n(base) ➜  ~ go env\nGO111MODULE=&quot;&quot;\nGOARCH=&quot;amd64&quot;\n....\nGOVERSION=&quot;go1.16.4&quot;","like_count":4,"discussions":[{"author":{"id":1026224,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/a8/b0/6f87ab08.jpg","nickname":"Tony Bai","note":"","ucode":"B6B08985F6FA89","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":592387,"discussion_content":"👍","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1667377579,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"北京","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1819176,"avatar":"https://static001.geekbang.org/account/avatar/00/1b/c2/28/32fdc447.jpg","nickname":"newchaos","note":"","ucode":"EBC1909694A0F4","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":653202,"discussion_content":"mark","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1730426424,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":"北京","group_id":0},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":342443,"user_name":"李进","can_delete":false,"product_type":"c1","uid":1180709,"ip_address":"","ucode":"B7F4F7807BC0C8","user_header":"https://static001.geekbang.org/account/avatar/00/12/04/25/a384ee7a.jpg","comment_is_top":false,"comment_ctime":1650265948,"is_pvip":false,"replies":[{"id":125099,"content":"👍","user_name":"作者回复","user_name_real":"编辑","uid":1026224,"ctime":1650291125,"ip_address":"","comment_id":342443,"utype":1}],"discussion_count":1,"race_medal":0,"score":3,"product_id":100093501,"comment_content":"作为go的入门者，一直觉得没有理解理解GO的包的依赖管理和mod机制，读了老师的几篇文章，终于理解了。","like_count":4},{"had_liked":false,"id":336980,"user_name":"rocshen","can_delete":false,"product_type":"c1","uid":2919212,"ip_address":"","ucode":"474074F64FEAF6","user_header":"","comment_is_top":false,"comment_ctime":1646529302,"is_pvip":false,"replies":[{"id":123242,"content":"感谢支持。","user_name":"作者回复","user_name_real":"编辑","uid":1026224,"ctime":1646723654,"ip_address":"","comment_id":336980,"utype":1}],"discussion_count":1,"race_medal":0,"score":3,"product_id":100093501,"comment_content":"目前看过课程结构设计最合理的教程  给老师点赞","like_count":4,"discussions":[{"author":{"id":1026224,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/a8/b0/6f87ab08.jpg","nickname":"Tony Bai","note":"","ucode":"B6B08985F6FA89","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":564629,"discussion_content":"👍","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1650291125,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":321513,"user_name":"功夫熊猫","can_delete":false,"product_type":"c1","uid":2732243,"ip_address":"","ucode":"D124F4FA4E816F","user_header":"https://static001.geekbang.org/account/avatar/00/29/b0/d3/200e82ff.jpg","comment_is_top":false,"comment_ctime":1636912457,"is_pvip":false,"replies":[{"id":116798,"content":"这个go 1.18应该可以彻底解决。通过go.work。可以看看这个特性的前瞻：https:&#47;&#47;mp.weixin.qq.com&#47;s&#47;AGAz8dti8IwfVntOvBTUTg","user_name":"作者回复","user_name_real":"Tony Bai","uid":1026224,"ctime":1636969852,"ip_address":"","comment_id":321513,"utype":1}],"discussion_count":2,"race_medal":0,"score":3,"product_id":100093501,"comment_content":"其实这几天我难受的是自定义的包导入的问题。","like_count":4,"discussions":[{"author":{"id":1026224,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/a8/b0/6f87ab08.jpg","nickname":"Tony Bai","note":"","ucode":"B6B08985F6FA89","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":530308,"discussion_content":"这个go 1.18应该可以彻底解决。通过go.work。可以看看这个特性的前瞻：https://mp.weixin.qq.com/s/AGAz8dti8IwfVntOvBTUTg","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1636969852,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1819176,"avatar":"https://static001.geekbang.org/account/avatar/00/1b/c2/28/32fdc447.jpg","nickname":"newchaos","note":"","ucode":"EBC1909694A0F4","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":653203,"discussion_content":"mark","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1730426458,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":"北京","group_id":0},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":320125,"user_name":"林","can_delete":false,"product_type":"c1","uid":1079783,"ip_address":"","ucode":"BFB14F03283C70","user_header":"https://wx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTKY0SBAOch2S7wadCRFKTT5fBtXCvsa46svoTj2MWoQ9YRrujZuq4wEHjS9dCEzPcrWHNSYgUkNVw/0","comment_is_top":false,"comment_ctime":1636090914,"is_pvip":false,"replies":[{"id":116254,"content":"哈哈，过奖了","user_name":"作者回复","user_name_real":"Tony Bai","uid":1026224,"ctime":1636422947,"ip_address":"","comment_id":320125,"utype":1}],"discussion_count":1,"race_medal":0,"score":3,"product_id":100093501,"comment_content":"这位老师的文章犹如编程爽文，看的过瘾","like_count":4,"discussions":[{"author":{"id":1026224,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/a8/b0/6f87ab08.jpg","nickname":"Tony Bai","note":"","ucode":"B6B08985F6FA89","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":529884,"discussion_content":"哈哈，过奖了","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1636422947,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":318312,"user_name":"liaomars","can_delete":false,"product_type":"c1","uid":2104856,"ip_address":"","ucode":"4FCA97EE9FB57D","user_header":"https://static001.geekbang.org/account/avatar/00/20/1e/18/9d1f1439.jpg","comment_is_top":false,"comment_ctime":1635238554,"is_pvip":false,"replies":[{"id":115590,"content":"提示：go mod init后面要加上module path哦。","user_name":"作者回复","user_name_real":"Tony Bai","uid":1026224,"ctime":1635456080,"ip_address":"","comment_id":318312,"utype":1}],"discussion_count":3,"race_medal":0,"score":3,"product_id":100093501,"comment_content":"把GOPATH构建下的项目目录复制一份出来，在这个目录下面开启 GO MODULES，执行：go mod init &amp;&amp; go mod tidy","like_count":4,"discussions":[{"author":{"id":1026224,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/a8/b0/6f87ab08.jpg","nickname":"Tony Bai","note":"","ucode":"B6B08985F6FA89","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":529884,"discussion_content":"哈哈，过奖了","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1636422947,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":345356,"user_name":"OneGoose","can_delete":false,"product_type":"c1","uid":1004478,"ip_address":"","ucode":"6ED33D18E87DD5","user_header":"https://static001.geekbang.org/account/avatar/00/0f/53/be/b9ef4728.jpg","comment_is_top":false,"comment_ctime":1652230066,"is_pvip":false,"replies":[{"id":126098,"content":"注意：go module默认是“最小版本选择”。这个与npm不同哦。","user_name":"作者回复","user_name_real":"编辑","uid":1026224,"ctime":1652353765,"ip_address":"","comment_id":345356,"utype":1}],"discussion_count":1,"race_medal":0,"score":3,"product_id":100093501,"comment_content":"感觉 go module的运行机制和 js 的包管理器 npm 有点类似。 ","like_count":3,"discussions":[{"author":{"id":1026224,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/a8/b0/6f87ab08.jpg","nickname":"Tony Bai","note":"","ucode":"B6B08985F6FA89","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":529180,"discussion_content":"提示：go mod init后面要加上module path哦。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1635456080,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":1,"child_discussions":[{"author":{"id":2812380,"avatar":"https://static001.geekbang.org/account/avatar/00/2a/e9/dc/cc05ebc7.jpg","nickname":"小明","note":"","ucode":"F10955FF010368","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1026224,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/a8/b0/6f87ab08.jpg","nickname":"Tony Bai","note":"","ucode":"B6B08985F6FA89","race_medal":0,"user_type":2,"is_pvip":false},"discussion":{"id":541245,"discussion_content":"我都是写go mod init tonybai ，至少目前这个课程里面的都是这样的，这不算 module path吧，我感觉更像是定义了一个项目的相对路径，后面每一个import都可以根据这个相对路径去定位","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1640311580,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":529180,"ip_address":"","group_id":0},"score":541245,"extra":""}]},{"author":{"id":2057354,"avatar":"https://static001.geekbang.org/account/avatar/00/1f/64/8a/bc8cb43c.jpg","nickname":"路边的猪","note":"","ucode":"92F7C082E44FC4","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":601929,"discussion_content":"举个例子，如果一开始基于gopath的项目如果依赖的某包的v1.2.1版本，这个依赖的包 会存在gopath配置的目录下。改造成go module后 理论上期望 我的go.mod文件里会出现 v1.2.1 这个版本的依赖吧，那go mod init &amp; go mod tidy 是去扫描gopath目录了嘛？他怎么会知道我依赖的1.2.1 而不是1.2.2 或者其他呢","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1675503416,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":"辽宁","group_id":0},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":344199,"user_name":"刘丹","can_delete":false,"product_type":"c1","uid":1081922,"ip_address":"","ucode":"66594D1C957E15","user_header":"https://static001.geekbang.org/account/avatar/00/10/82/42/8b04d489.jpg","comment_is_top":false,"comment_ctime":1651368537,"is_pvip":false,"replies":[{"id":125706,"content":"像你的问题中的情景，go module会根据MVS原则选择C v1.3.0。但go module依赖管理的前提是：语义版本(semver)。而你问题中说：v1.1.0和v1.3.0不兼容，这本身就违反了go module的前提。那么即便go选择了v1.3.0也会导致编译失败。这时就需要手工介入了。","user_name":"作者回复","user_name_real":"编辑","uid":1026224,"ctime":1651498870,"ip_address":"","comment_id":344199,"utype":1}],"discussion_count":2,"race_medal":0,"score":3,"product_id":100093501,"comment_content":"请问老师：如果 myproject 有两个直接依赖 A 和 B，A 和 B 有一个共同的依赖包 C；但 A 依赖 C 的 v1.1.0 版本，不兼容 C 的 V1.3.0 版本；而 B 依赖的是 C 的 v1.3.0 版本，不兼容 C 的 v1.1.0 版本；并且此时 C 包的最新发布版为 C v1.7.0。这种情况下要怎样处理呢？","like_count":3,"discussions":[{"author":{"id":2166073,"avatar":"https://thirdwx.qlogo.cn/mmopen/vi_32/k3YD3y3BzGDSdrwRJyJY4BXsNJibfM4uzOdDVKIAlFApR2FZCLg2ibrZtJ4vuahA3LHLW9GKzH5CMGqCDhWjhZqg/132","nickname":"戒酒的李白","note":"","ucode":"744E1A22761647","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":584840,"discussion_content":"主版本号一样，次版本号不同， 是要向前兼容的。不满足这个原则，那就需要人工处理了。","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1661153415,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":"上海","group_id":0},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1026224,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/a8/b0/6f87ab08.jpg","nickname":"Tony Bai","note":"","ucode":"B6B08985F6FA89","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":569621,"discussion_content":"像你的问题中的情景，go module会根据MVS原则选择C v1.3.0。但go module依赖管理的前提是：语义版本(semver)。而你问题中说：v1.1.0和v1.3.0不兼容，这本身就违反了go module的前提。那么即便go选择了v1.3.0也会导致编译失败。这时就需要手工介入了。","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1651498871,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":333456,"user_name":"彭亚伦","can_delete":false,"product_type":"c1","uid":2425378,"ip_address":"","ucode":"77A32C73A23F72","user_header":"https://static001.geekbang.org/account/avatar/00/25/02/22/19585900.jpg","comment_is_top":false,"comment_ctime":1644372294,"is_pvip":false,"replies":[{"id":121863,"content":"有时间我也去试一下rust，看看cargo的包管理究竟有多棒😁","user_name":"作者回复","user_name_real":"编辑","uid":1026224,"ctime":1644388498,"ip_address":"","comment_id":333456,"utype":1}],"discussion_count":1,"race_medal":0,"score":3,"product_id":100093501,"comment_content":"单从依赖包管理上, go的体验确实目前还是远远比不上rust, 不过也是肉眼可见的进步","like_count":3,"discussions":[{"author":{"id":1026224,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/a8/b0/6f87ab08.jpg","nickname":"Tony Bai","note":"","ucode":"B6B08985F6FA89","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":550105,"discussion_content":"有时间我也去试一下rust，看看cargo的包管理究竟有多棒😁","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1644388498,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":322008,"user_name":"哈哈哈哈哈","can_delete":false,"product_type":"c1","uid":2828322,"ip_address":"","ucode":"0350A8A8A3DD74","user_header":"https://static001.geekbang.org/account/avatar/00/2b/28/22/ebc770dc.jpg","comment_is_top":false,"comment_ctime":1637135592,"is_pvip":false,"replies":[{"id":117142,"content":"专栏例子中使用github.com&amp;#47;user&amp;#47;repo这个样式作为module path是因为多数实用级module多是要上传到github上的。用这种示例便于后续与真实\n生产接驳。但对于本地开发使用的简单示例程序而言，module path可以任意选用，比如：\n\n&amp;#47;&amp;#47; go.mod\nmodule demo1\n\nGo 1.17\n\n\n也是ok的。","user_name":"作者回复","user_name_real":"编辑","uid":1026224,"ctime":1637558248,"ip_address":"","comment_id":322008,"utype":1}],"discussion_count":3,"race_medal":0,"score":3,"product_id":100093501,"comment_content":"通过 go mod init 命令为这个项目创建一个 Go Module.\n$go mod init github.com&#47;bigwhite&#47;module-mode中 “github.com&#47;bigwhite&#47;module-mode“ ，为什么要加这个？这个什么意思？指代什么？","like_count":3,"discussions":[{"author":{"id":1026224,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/a8/b0/6f87ab08.jpg","nickname":"Tony Bai","note":"","ucode":"B6B08985F6FA89","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":532216,"discussion_content":"专栏例子中使用github.com&amp;#47;user&amp;#47;repo这个样式作为module path是因为多数实用级module多是要上传到github上的。用这种示例便于后续与真实\n生产接驳。但对于本地开发使用的简单示例程序而言，module path可以任意选用，比如：\n\n&amp;#47;&amp;#47; go.mod\nmodule demo1\n\nGo 1.17\n\n\n也是ok的。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1637558248,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":1,"child_discussions":[{"author":{"id":2954451,"avatar":"https://static001.geekbang.org/account/avatar/00/2d/14/d3/8422c6a6.jpg","nickname":"o0恋静0o","note":"","ucode":"CF740FCC2A1854","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1026224,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/a8/b0/6f87ab08.jpg","nickname":"Tony Bai","note":"","ucode":"B6B08985F6FA89","race_medal":0,"user_type":2,"is_pvip":false},"discussion":{"id":577134,"discussion_content":"我之前也有这样的疑惑，总算解开了，感谢老师\n","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1655948287,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":532216,"ip_address":"","group_id":0},"score":577134,"extra":""}]},{"author":{"id":2713546,"avatar":"","nickname":"Geek_2c6fcd","note":"","ucode":"7A3AF7815351F8","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":582651,"discussion_content":"是会根据module path定位到github地址吗?","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1659578799,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":"江苏","group_id":0},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":318082,"user_name":"Harold","can_delete":false,"product_type":"c1","uid":1161249,"ip_address":"","ucode":"E6EC6E0201D48C","user_header":"https://static001.geekbang.org/account/avatar/00/11/b8/21/41823347.jpg","comment_is_top":false,"comment_ctime":1635144388,"is_pvip":false,"replies":[{"id":115383,"content":"语义版本是独立的。但go module的“语义导入版本”机制的确与众不同。","user_name":"作者回复","user_name_real":"Tony Bai","uid":1026224,"ctime":1635215842,"ip_address":"","comment_id":318082,"utype":1}],"discussion_count":1,"race_medal":0,"score":3,"product_id":100093501,"comment_content":"语义版本不能算go mod创新吧","like_count":3,"discussions":[{"author":{"id":1026224,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/a8/b0/6f87ab08.jpg","nickname":"Tony Bai","note":"","ucode":"B6B08985F6FA89","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":532216,"discussion_content":"专栏例子中使用github.com&amp;#47;user&amp;#47;repo这个样式作为module path是因为多数实用级module多是要上传到github上的。用这种示例便于后续与真实\n生产接驳。但对于本地开发使用的简单示例程序而言，module path可以任意选用，比如：\n\n&amp;#47;&amp;#47; go.mod\nmodule demo1\n\nGo 1.17\n\n\n也是ok的。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1637558248,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":1,"child_discussions":[{"author":{"id":2954451,"avatar":"https://static001.geekbang.org/account/avatar/00/2d/14/d3/8422c6a6.jpg","nickname":"o0恋静0o","note":"","ucode":"CF740FCC2A1854","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1026224,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/a8/b0/6f87ab08.jpg","nickname":"Tony Bai","note":"","ucode":"B6B08985F6FA89","race_medal":0,"user_type":2,"is_pvip":false},"discussion":{"id":577134,"discussion_content":"我之前也有这样的疑惑，总算解开了，感谢老师\n","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1655948287,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":532216,"ip_address":"","group_id":0},"score":577134,"extra":""}]},{"author":{"id":2713546,"avatar":"","nickname":"Geek_2c6fcd","note":"","ucode":"7A3AF7815351F8","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":582651,"discussion_content":"是会根据module path定位到github地址吗?","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1659578799,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":"江苏","group_id":0},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":342443,"user_name":"李进","can_delete":false,"product_type":"c1","uid":1180709,"ip_address":"","ucode":"B7F4F7807BC0C8","user_header":"https://static001.geekbang.org/account/avatar/00/12/04/25/a384ee7a.jpg","comment_is_top":false,"comment_ctime":1650265948,"is_pvip":false,"replies":[{"id":125099,"content":"👍","user_name":"作者回复","user_name_real":"编辑","uid":1026224,"ctime":1650291125,"ip_address":"","comment_id":342443,"utype":1}],"discussion_count":1,"race_medal":0,"score":3,"product_id":100093501,"comment_content":"作为go的入门者，一直觉得没有理解理解GO的包的依赖管理和mod机制，读了老师的几篇文章，终于理解了。","like_count":4,"discussions":[{"author":{"id":1026224,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/a8/b0/6f87ab08.jpg","nickname":"Tony Bai","note":"","ucode":"B6B08985F6FA89","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":564629,"discussion_content":"👍","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1650291125,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":336980,"user_name":"rocshen","can_delete":false,"product_type":"c1","uid":2919212,"ip_address":"","ucode":"474074F64FEAF6","user_header":"","comment_is_top":false,"comment_ctime":1646529302,"is_pvip":false,"replies":[{"id":123242,"content":"感谢支持。","user_name":"作者回复","user_name_real":"编辑","uid":1026224,"ctime":1646723654,"ip_address":"","comment_id":336980,"utype":1}],"discussion_count":1,"race_medal":0,"score":3,"product_id":100093501,"comment_content":"目前看过课程结构设计最合理的教程  给老师点赞","like_count":4,"discussions":[{"author":{"id":1026224,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/a8/b0/6f87ab08.jpg","nickname":"Tony Bai","note":"","ucode":"B6B08985F6FA89","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":555024,"discussion_content":"感谢支持。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1646723654,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":321513,"user_name":"功夫熊猫","can_delete":false,"product_type":"c1","uid":2732243,"ip_address":"","ucode":"D124F4FA4E816F","user_header":"https://static001.geekbang.org/account/avatar/00/29/b0/d3/200e82ff.jpg","comment_is_top":false,"comment_ctime":1636912457,"is_pvip":false,"replies":[{"id":116798,"content":"这个go 1.18应该可以彻底解决。通过go.work。可以看看这个特性的前瞻：https:&#47;&#47;mp.weixin.qq.com&#47;s&#47;AGAz8dti8IwfVntOvBTUTg","user_name":"作者回复","user_name_real":"Tony Bai","uid":1026224,"ctime":1636969852,"ip_address":"","comment_id":321513,"utype":1}],"discussion_count":2,"race_medal":0,"score":3,"product_id":100093501,"comment_content":"其实这几天我难受的是自定义的包导入的问题。","like_count":4,"discussions":[{"author":{"id":1026224,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/a8/b0/6f87ab08.jpg","nickname":"Tony Bai","note":"","ucode":"B6B08985F6FA89","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":555024,"discussion_content":"感谢支持。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1646723654,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":320125,"user_name":"林","can_delete":false,"product_type":"c1","uid":1079783,"ip_address":"","ucode":"BFB14F03283C70","user_header":"https://wx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTKY0SBAOch2S7wadCRFKTT5fBtXCvsa46svoTj2MWoQ9YRrujZuq4wEHjS9dCEzPcrWHNSYgUkNVw/0","comment_is_top":false,"comment_ctime":1636090914,"is_pvip":false,"replies":[{"id":116254,"content":"哈哈，过奖了","user_name":"作者回复","user_name_real":"Tony Bai","uid":1026224,"ctime":1636422947,"ip_address":"","comment_id":320125,"utype":1}],"discussion_count":1,"race_medal":0,"score":3,"product_id":100093501,"comment_content":"这位老师的文章犹如编程爽文，看的过瘾","like_count":4,"discussions":[{"author":{"id":1026224,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/a8/b0/6f87ab08.jpg","nickname":"Tony Bai","note":"","ucode":"B6B08985F6FA89","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":530308,"discussion_content":"这个go 1.18应该可以彻底解决。通过go.work。可以看看这个特性的前瞻：https://mp.weixin.qq.com/s/AGAz8dti8IwfVntOvBTUTg","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1636969852,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1819176,"avatar":"https://static001.geekbang.org/account/avatar/00/1b/c2/28/32fdc447.jpg","nickname":"newchaos","note":"","ucode":"EBC1909694A0F4","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":653203,"discussion_content":"mark","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1730426458,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":"北京","group_id":0},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":318312,"user_name":"liaomars","can_delete":false,"product_type":"c1","uid":2104856,"ip_address":"","ucode":"4FCA97EE9FB57D","user_header":"https://static001.geekbang.org/account/avatar/00/20/1e/18/9d1f1439.jpg","comment_is_top":false,"comment_ctime":1635238554,"is_pvip":false,"replies":[{"id":115590,"content":"提示：go mod init后面要加上module path哦。","user_name":"作者回复","user_name_real":"Tony Bai","uid":1026224,"ctime":1635456080,"ip_address":"","comment_id":318312,"utype":1}],"discussion_count":3,"race_medal":0,"score":3,"product_id":100093501,"comment_content":"把GOPATH构建下的项目目录复制一份出来，在这个目录下面开启 GO MODULES，执行：go mod init &amp;&amp; go mod tidy","like_count":4,"discussions":[{"author":{"id":1026224,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/a8/b0/6f87ab08.jpg","nickname":"Tony Bai","note":"","ucode":"B6B08985F6FA89","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":529180,"discussion_content":"提示：go mod init后面要加上module path哦。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1635456080,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":1,"child_discussions":[{"author":{"id":2812380,"avatar":"https://static001.geekbang.org/account/avatar/00/2a/e9/dc/cc05ebc7.jpg","nickname":"小明","note":"","ucode":"F10955FF010368","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1026224,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/a8/b0/6f87ab08.jpg","nickname":"Tony Bai","note":"","ucode":"B6B08985F6FA89","race_medal":0,"user_type":2,"is_pvip":false},"discussion":{"id":541245,"discussion_content":"我都是写go mod init tonybai ，至少目前这个课程里面的都是这样的，这不算 module path吧，我感觉更像是定义了一个项目的相对路径，后面每一个import都可以根据这个相对路径去定位","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1640311580,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":529180,"ip_address":"","group_id":0},"score":541245,"extra":""}]},{"author":{"id":2057354,"avatar":"https://static001.geekbang.org/account/avatar/00/1f/64/8a/bc8cb43c.jpg","nickname":"路边的猪","note":"","ucode":"92F7C082E44FC4","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":601929,"discussion_content":"举个例子，如果一开始基于gopath的项目如果依赖的某包的v1.2.1版本，这个依赖的包 会存在gopath配置的目录下。改造成go module后 理论上期望 我的go.mod文件里会出现 v1.2.1 这个版本的依赖吧，那go mod init &amp; go mod tidy 是去扫描gopath目录了嘛？他怎么会知道我依赖的1.2.1 而不是1.2.2 或者其他呢","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1675503416,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":"辽宁","group_id":0},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":345356,"user_name":"OneGoose","can_delete":false,"product_type":"c1","uid":1004478,"ip_address":"","ucode":"6ED33D18E87DD5","user_header":"https://static001.geekbang.org/account/avatar/00/0f/53/be/b9ef4728.jpg","comment_is_top":false,"comment_ctime":1652230066,"is_pvip":false,"replies":[{"id":126098,"content":"注意：go module默认是“最小版本选择”。这个与npm不同哦。","user_name":"作者回复","user_name_real":"编辑","uid":1026224,"ctime":1652353765,"ip_address":"","comment_id":345356,"utype":1}],"discussion_count":1,"race_medal":0,"score":3,"product_id":100093501,"comment_content":"感觉 go module的运行机制和 js 的包管理器 npm 有点类似。 ","like_count":3,"discussions":[{"author":{"id":1026224,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/a8/b0/6f87ab08.jpg","nickname":"Tony Bai","note":"","ucode":"B6B08985F6FA89","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":571699,"discussion_content":"注意：go module默认是“最小版本选择”。这个与npm不同哦。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1652353765,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":344199,"user_name":"刘丹","can_delete":false,"product_type":"c1","uid":1081922,"ip_address":"","ucode":"66594D1C957E15","user_header":"https://static001.geekbang.org/account/avatar/00/10/82/42/8b04d489.jpg","comment_is_top":false,"comment_ctime":1651368537,"is_pvip":false,"replies":[{"id":125706,"content":"像你的问题中的情景，go module会根据MVS原则选择C v1.3.0。但go module依赖管理的前提是：语义版本(semver)。而你问题中说：v1.1.0和v1.3.0不兼容，这本身就违反了go module的前提。那么即便go选择了v1.3.0也会导致编译失败。这时就需要手工介入了。","user_name":"作者回复","user_name_real":"编辑","uid":1026224,"ctime":1651498870,"ip_address":"","comment_id":344199,"utype":1}],"discussion_count":2,"race_medal":0,"score":3,"product_id":100093501,"comment_content":"请问老师：如果 myproject 有两个直接依赖 A 和 B，A 和 B 有一个共同的依赖包 C；但 A 依赖 C 的 v1.1.0 版本，不兼容 C 的 V1.3.0 版本；而 B 依赖的是 C 的 v1.3.0 版本，不兼容 C 的 v1.1.0 版本；并且此时 C 包的最新发布版为 C v1.7.0。这种情况下要怎样处理呢？","like_count":3,"discussions":[{"author":{"id":1026224,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/a8/b0/6f87ab08.jpg","nickname":"Tony Bai","note":"","ucode":"B6B08985F6FA89","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":571699,"discussion_content":"注意：go module默认是“最小版本选择”。这个与npm不同哦。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1652353765,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":333456,"user_name":"彭亚伦","can_delete":false,"product_type":"c1","uid":2425378,"ip_address":"","ucode":"77A32C73A23F72","user_header":"https://static001.geekbang.org/account/avatar/00/25/02/22/19585900.jpg","comment_is_top":false,"comment_ctime":1644372294,"is_pvip":false,"replies":[{"id":121863,"content":"有时间我也去试一下rust，看看cargo的包管理究竟有多棒😁","user_name":"作者回复","user_name_real":"编辑","uid":1026224,"ctime":1644388498,"ip_address":"","comment_id":333456,"utype":1}],"discussion_count":1,"race_medal":0,"score":3,"product_id":100093501,"comment_content":"单从依赖包管理上, go的体验确实目前还是远远比不上rust, 不过也是肉眼可见的进步","like_count":3,"discussions":[{"author":{"id":2166073,"avatar":"https://thirdwx.qlogo.cn/mmopen/vi_32/k3YD3y3BzGDSdrwRJyJY4BXsNJibfM4uzOdDVKIAlFApR2FZCLg2ibrZtJ4vuahA3LHLW9GKzH5CMGqCDhWjhZqg/132","nickname":"戒酒的李白","note":"","ucode":"744E1A22761647","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":584840,"discussion_content":"主版本号一样，次版本号不同， 是要向前兼容的。不满足这个原则，那就需要人工处理了。","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1661153415,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":"上海","group_id":0},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1026224,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/a8/b0/6f87ab08.jpg","nickname":"Tony Bai","note":"","ucode":"B6B08985F6FA89","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":569621,"discussion_content":"像你的问题中的情景，go module会根据MVS原则选择C v1.3.0。但go module依赖管理的前提是：语义版本(semver)。而你问题中说：v1.1.0和v1.3.0不兼容，这本身就违反了go module的前提。那么即便go选择了v1.3.0也会导致编译失败。这时就需要手工介入了。","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1651498871,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":322008,"user_name":"哈哈哈哈哈","can_delete":false,"product_type":"c1","uid":2828322,"ip_address":"","ucode":"0350A8A8A3DD74","user_header":"https://static001.geekbang.org/account/avatar/00/2b/28/22/ebc770dc.jpg","comment_is_top":false,"comment_ctime":1637135592,"is_pvip":false,"replies":[{"id":117142,"content":"专栏例子中使用github.com&amp;#47;user&amp;#47;repo这个样式作为module path是因为多数实用级module多是要上传到github上的。用这种示例便于后续与真实\n生产接驳。但对于本地开发使用的简单示例程序而言，module path可以任意选用，比如：\n\n&amp;#47;&amp;#47; go.mod\nmodule demo1\n\nGo 1.17\n\n\n也是ok的。","user_name":"作者回复","user_name_real":"编辑","uid":1026224,"ctime":1637558248,"ip_address":"","comment_id":322008,"utype":1}],"discussion_count":3,"race_medal":0,"score":3,"product_id":100093501,"comment_content":"通过 go mod init 命令为这个项目创建一个 Go Module.\n$go mod init github.com&#47;bigwhite&#47;module-mode中 “github.com&#47;bigwhite&#47;module-mode“ ，为什么要加这个？这个什么意思？指代什么？","like_count":3,"discussions":[{"author":{"id":1026224,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/a8/b0/6f87ab08.jpg","nickname":"Tony Bai","note":"","ucode":"B6B08985F6FA89","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":550105,"discussion_content":"有时间我也去试一下rust，看看cargo的包管理究竟有多棒😁","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1644388498,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":318082,"user_name":"Harold","can_delete":false,"product_type":"c1","uid":1161249,"ip_address":"","ucode":"E6EC6E0201D48C","user_header":"https://static001.geekbang.org/account/avatar/00/11/b8/21/41823347.jpg","comment_is_top":false,"comment_ctime":1635144388,"is_pvip":false,"replies":[{"id":115383,"content":"语义版本是独立的。但go module的“语义导入版本”机制的确与众不同。","user_name":"作者回复","user_name_real":"Tony Bai","uid":1026224,"ctime":1635215842,"ip_address":"","comment_id":318082,"utype":1}],"discussion_count":1,"race_medal":0,"score":3,"product_id":100093501,"comment_content":"语义版本不能算go mod创新吧","like_count":3,"discussions":[{"author":{"id":1026224,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/a8/b0/6f87ab08.jpg","nickname":"Tony Bai","note":"","ucode":"B6B08985F6FA89","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":529096,"discussion_content":"语义版本是独立的。但go module的“语义导入版本”机制的确与众不同。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1635215842,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":361144,"user_name":"李亮","can_delete":false,"product_type":"c1","uid":1079702,"ip_address":"北京","ucode":"E26284C3BF7DF1","user_header":"https://static001.geekbang.org/account/avatar/00/10/79/96/fb0d8a65.jpg","comment_is_top":false,"comment_ctime":1667272685,"is_pvip":false,"replies":[{"id":131383,"content":"👍","user_name":"作者回复","user_name_real":"编辑","uid":1026224,"ctime":1667377630,"ip_address":"北京","comment_id":361144,"utype":1}],"discussion_count":1,"race_medal":0,"score":4,"product_id":100093501,"comment_content":"关于module的名字，Go不允许使用test以及example作为前缀。","like_count":2},{"had_liked":false,"id":357579,"user_name":"CLMOOK🐾","can_delete":false,"product_type":"c1","uid":1321526,"ip_address":"北京","ucode":"F6C75A32A59A34","user_header":"https://static001.geekbang.org/account/avatar/00/14/2a/36/c5d1a120.jpg","comment_is_top":false,"comment_ctime":1663413583,"is_pvip":false,"replies":[{"id":130228,"content":"1. 第七讲中有操作说明:)\n2. 不可以同时在一个程序中既依赖v1.1，有依赖v1.3。但是如果major版本不同，则可以，比如既依赖v1.3，又依赖v2.1。","user_name":"作者回复","user_name_real":"编辑","uid":1026224,"ctime":1663639401,"ip_address":"北京","comment_id":357579,"utype":1}],"discussion_count":1,"race_medal":0,"score":4,"product_id":100093501,"comment_content":"老师好，关于选择最小版本依赖原则，\n1.如例子所示，选择的c是v1.3,如果我们想用v1.4版，应该如何操作？（即如何修改一个间接依赖的版本？）\n2.go能否一起下载c的v1.1和v1.3，然后在程序中分别给对应的a和b所调用？（即能否在程序中加载两份c的不用版本？）\n谢谢","like_count":2,"discussions":[{"author":{"id":1026224,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/a8/b0/6f87ab08.jpg","nickname":"Tony Bai","note":"","ucode":"B6B08985F6FA89","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":592389,"discussion_content":"👍","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1667377630,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"北京","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":352222,"user_name":"T------T","can_delete":false,"product_type":"c1","uid":2270365,"ip_address":"","ucode":"AC68D88893FAD7","user_header":"https://static001.geekbang.org/account/avatar/00/22/a4/9d/95900f70.jpg","comment_is_top":false,"comment_ctime":1658462155,"is_pvip":false,"replies":[{"id":128137,"content":"如果你的项目中没有其他包对fasthttp包有直接依赖或间接依赖，\n\n在上面这个前提下：\n\n那么go mod tidy会拉取fasthttp最新发布的版本(一般为tag)。\n\n如果你手动限定fasthttp版本，那么就会拉取你限定的版本。","user_name":"作者回复","user_name_real":"编辑","uid":1026224,"ctime":1658468996,"ip_address":"","comment_id":352222,"utype":1}],"discussion_count":2,"race_medal":0,"score":4,"product_id":100093501,"comment_content":"\n\n老师，你好。我有个疑问。\n使用go mod tidy时，会自动拉取模块。举个例子，比如我依赖了github.com&#47;valyala&#47;fasthttp\n\n它是自动的去拉取了网址为https:&#47;&#47;github.com&#47;valyala&#47;fasthttp的git项目的master分支吗？\n如果我限定了版本为V2.1.1(随便写的版本号),是拉取分支为V2.1.1的项目吗？","like_count":2,"discussions":[{"author":{"id":1026224,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/a8/b0/6f87ab08.jpg","nickname":"Tony Bai","note":"","ucode":"B6B08985F6FA89","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":588263,"discussion_content":"1. 第七讲中有操作说明:)\n2. 不可以同时在一个程序中既依赖v1.1，有依赖v1.3。但是如果major版本不同，则可以，比如既依赖v1.3，又依赖v2.1。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1663639402,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"北京","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":349959,"user_name":"奔奔","can_delete":false,"product_type":"c1","uid":2072437,"ip_address":"","ucode":"7D24C84887A87C","user_header":"https://static001.geekbang.org/account/avatar/00/1f/9f/75/ae31f18e.jpg","comment_is_top":false,"comment_ctime":1656471656,"is_pvip":false,"replies":[{"id":127369,"content":"https:&#47;&#47;proxy.golang.cn 这个是什么代理？要不你设置一个goproxy.io或goproxy.cn试试。","user_name":"作者回复","user_name_real":"编辑","uid":1026224,"ctime":1656541619,"ip_address":"","comment_id":349959,"utype":1}],"discussion_count":1,"race_medal":0,"score":4,"product_id":100093501,"comment_content":"go version go1.18.3 windows&#47;amd64\ngo build 会出现 go build\nhelloworld.go:4:2: no required module provides package github.com&#47;google&#47;uuid; to add it:\n然后使用go mod tidy 会出现 go: finding module for package github.com&#47;google&#47;uuid\nhelloworld imports\ngithub.com&#47;google&#47;uuid:modulegithub.com&#47;google&#47;uuid:Get &quot;https:&#47;&#47;proxy.golang.cn&#47;github.com&#47;google&#47;uuid&#47;@v&#47;list&quot;: x509: certificate signed by unknown authority，老师有没有获取ca证书的途径。","like_count":2,"discussions":[{"author":{"id":1026224,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/a8/b0/6f87ab08.jpg","nickname":"Tony Bai","note":"","ucode":"B6B08985F6FA89","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":581036,"discussion_content":"如果你的项目中没有其他包对fasthttp包有直接依赖或间接依赖，\n\n在上面这个前提下：\n\n那么go mod tidy会拉取fasthttp最新发布的版本(一般为tag)。\n\n如果你手动限定fasthttp版本，那么就会拉取你限定的版本。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1658468996,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":1,"child_discussions":[{"author":{"id":3794407,"avatar":"","nickname":"Geek_3d0fe8","note":"","ucode":"E75EACDA00E7A6","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1026224,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/a8/b0/6f87ab08.jpg","nickname":"Tony Bai","note":"","ucode":"B6B08985F6FA89","race_medal":0,"user_type":2,"is_pvip":false},"discussion":{"id":638411,"discussion_content":"它怎么知道最新的tag是哪个","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1709557145,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":581036,"ip_address":"广东","group_id":0},"score":638411,"extra":""}]}]},{"had_liked":false,"id":331665,"user_name":"HBQ","can_delete":false,"product_type":"c1","uid":1026475,"ip_address":"","ucode":"00C96A731D8A0F","user_header":"https://static001.geekbang.org/account/avatar/00/0f/a9/ab/abb7bfe3.jpg","comment_is_top":false,"comment_ctime":1642693011,"is_pvip":false,"replies":[{"id":121601,"content":"go module采用的语义版本导入机制，v1.0.0和v2.0.0的major号不同，是两个完全不同的版本，是可以共同被某个包同时导入的，语法如下；\n\nimport (\n    &quot;c&quot;\n    &quot;c&#47;v2&quot;\n)\n\n","user_name":"作者回复","user_name_real":"编辑","uid":1026224,"ctime":1643537191,"ip_address":"","comment_id":331665,"utype":1}],"discussion_count":1,"race_medal":0,"score":4,"product_id":100093501,"comment_content":"myproject 中同时依赖 C 的 v1.0.0、 v2.0.0 这个时候怎么仲裁。最终 C 会两个版本同时引入？","like_count":2,"discussions":[{"author":{"id":1026224,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/a8/b0/6f87ab08.jpg","nickname":"Tony Bai","note":"","ucode":"B6B08985F6FA89","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":578135,"discussion_content":"https://proxy.golang.cn 这个是什么代理？要不你设置一个goproxy.io或goproxy.cn试试。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1656541619,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":318036,"user_name":"郑童文","can_delete":false,"product_type":"c1","uid":1030733,"ip_address":"","ucode":"3D193715CB8549","user_header":"https://static001.geekbang.org/account/avatar/00/0f/ba/4d/7ba09ff0.jpg","comment_is_top":false,"comment_ctime":1635128429,"is_pvip":false,"replies":[{"id":115384,"content":"严格来说，go.mod中 module后面的路径就是module的“名字”。但go官方一般不提module “名字”这个概念。module是一个go包集合，更多是一个命名空间的概念。go module唯一的标识就是module path。所以不存在你说的不一致情况。","user_name":"作者回复","user_name_real":"Tony Bai","uid":1026224,"ctime":1635216234,"ip_address":"","comment_id":318036,"utype":1}],"discussion_count":1,"race_medal":0,"score":4,"product_id":100093501,"comment_content":"请问老师go.mod中module path的最后一段,必须和module 的名称一样吗？ 如果两者不同会出现什么情况？ 谢谢！","like_count":2,"discussions":[{"author":{"id":1026224,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/a8/b0/6f87ab08.jpg","nickname":"Tony Bai","note":"","ucode":"B6B08985F6FA89","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":549059,"discussion_content":"go module采用的语义版本导入机制，v1.0.0和v2.0.0的major号不同，是两个完全不同的版本，是可以共同被某个包同时导入的，语法如下；\n\nimport (\n    &#34;c&#34;\n    &#34;c/v2&#34;\n)\n\n","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1643537191,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":374577,"user_name":"111","can_delete":false,"product_type":"c1","uid":2046189,"ip_address":"陕西","ucode":"7ACA555BDC139B","user_header":"","comment_is_top":false,"comment_ctime":1684201702,"is_pvip":false,"replies":[{"id":136733,"content":"👍","user_name":"作者回复","user_name_real":"编辑","uid":1026224,"ctime":1684275314,"ip_address":"江苏","comment_id":374577,"utype":1}],"discussion_count":1,"race_medal":0,"score":4,"product_id":100093501,"comment_content":"# 进入项目路径\ngo mod init 项目的module名称\ngo mod tidy","like_count":1,"discussions":[{"author":{"id":1026224,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/a8/b0/6f87ab08.jpg","nickname":"Tony Bai","note":"","ucode":"B6B08985F6FA89","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":529074,"discussion_content":"严格来说，go.mod中 module后面的路径就是module的“名字”。但go官方一般不提module “名字”这个概念。module是一个go包集合，更多是一个命名空间的概念。go module唯一的标识就是module path。所以不存在你说的不一致情况。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1635216234,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":372326,"user_name":"idslilang","can_delete":false,"product_type":"c1","uid":2464701,"ip_address":"广东","ucode":"06B80C9C805082","user_header":"https://static001.geekbang.org/account/avatar/00/25/9b/bd/c3f26353.jpg","comment_is_top":false,"comment_ctime":1681001589,"is_pvip":false,"replies":[{"id":135933,"content":"如果是兼容版本，即非major号变更，那么升级版本即可。如果依赖的最新版本的major号已经变更，那么就需要修改import路径，加上新major号，这样也不会与以前的版本冲突。","user_name":"作者回复","user_name_real":"编辑","uid":1026224,"ctime":1681123922,"ip_address":"北京","comment_id":372326,"utype":1}],"discussion_count":1,"race_medal":0,"score":4,"product_id":100093501,"comment_content":"请教老师，有点疑惑的是，go module 如果选择最小包版本导入，那如果项目中用了高版本的一些方法或者特性，那怎么处理呢？要升级最小版本的项目，达到高版本号的版本？","like_count":1,"discussions":[{"author":{"id":1026224,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/a8/b0/6f87ab08.jpg","nickname":"Tony Bai","note":"","ucode":"B6B08985F6FA89","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":618472,"discussion_content":"👍","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1684275314,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"江苏","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":370362,"user_name":"Geek_0d5d37","can_delete":false,"product_type":"c1","uid":3522132,"ip_address":"四川","ucode":"1BB4AEF1328C64","user_header":"","comment_is_top":false,"comment_ctime":1678758346,"is_pvip":false,"replies":[{"id":135116,"content":"这个目前不在第一课范畴。go源码是开源的，可以去下载一份，自己阅读一下，整理出逻辑后，也可以给大家分享一下😁\n\ngo module拉取仓库代码通常是经由GOPROXY。GOPROXY拉取协议这块也能帮你了解拉取过程：https:&#47;&#47;go.dev&#47;ref&#47;mod#goproxy-protocol","user_name":"作者回复","user_name_real":"编辑","uid":1026224,"ctime":1678855580,"ip_address":"北京","comment_id":370362,"utype":1}],"discussion_count":2,"race_medal":0,"score":4,"product_id":100093501,"comment_content":"白老师，您好。能讲讲go module拉取仓库代码的go源码执行的核心逻辑吗？ 比如执行go mod tidy 命令后，到下载代码到本地。   cmd&#47;go&#47;internal&#47;modcmd&#47;mod.go 。 我想知道解析go.mod文件到执行下载的逻辑 ","like_count":1,"discussions":[{"author":{"id":1026224,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/a8/b0/6f87ab08.jpg","nickname":"Tony Bai","note":"","ucode":"B6B08985F6FA89","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":609169,"discussion_content":"这个目前不在第一课范畴。go源码是开源的，可以去下载一份，自己阅读一下，整理出逻辑后，也可以给大家分享一下😁\n\ngo module拉取仓库代码通常是经由GOPROXY。GOPROXY拉取协议这块也能帮你了解拉取过程：https://go.dev/ref/mod#goproxy-protocol","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1678855580,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"北京","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":3522132,"avatar":"","nickname":"Geek_0d5d37","note":"","ucode":"1BB4AEF1328C64","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":609224,"discussion_content":"谢谢老师","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1678880405,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":"四川","group_id":0},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":366703,"user_name":"℡人见人爱浩然君゜","can_delete":false,"product_type":"c1","uid":1592298,"ip_address":"北京","ucode":"D042A622533C72","user_header":"https://static001.geekbang.org/account/avatar/00/18/4b/ea/a9e7bc50.jpg","comment_is_top":false,"comment_ctime":1674094233,"is_pvip":false,"replies":[{"id":133607,"content":"🤝","user_name":"作者回复","user_name_real":"编辑","uid":1026224,"ctime":1674123219,"ip_address":"北京","comment_id":366703,"utype":1}],"discussion_count":1,"race_medal":0,"score":4,"product_id":100093501,"comment_content":"之前一直对go.sum和go.mod一知半解，只知道怎么创建mod，但不明白为什么是这种玩法，看了这篇文档后有种拨云见日的感觉。","like_count":1,"discussions":[{"author":{"id":1026224,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/a8/b0/6f87ab08.jpg","nickname":"Tony Bai","note":"","ucode":"B6B08985F6FA89","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":600229,"discussion_content":"🤝","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1674123219,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"北京","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":361144,"user_name":"李亮","can_delete":false,"product_type":"c1","uid":1079702,"ip_address":"北京","ucode":"E26284C3BF7DF1","user_header":"https://static001.geekbang.org/account/avatar/00/10/79/96/fb0d8a65.jpg","comment_is_top":false,"comment_ctime":1667272685,"is_pvip":false,"replies":[{"id":131383,"content":"👍","user_name":"作者回复","user_name_real":"编辑","uid":1026224,"ctime":1667377630,"ip_address":"北京","comment_id":361144,"utype":1}],"discussion_count":1,"race_medal":0,"score":4,"product_id":100093501,"comment_content":"关于module的名字，Go不允许使用test以及example作为前缀。","like_count":2,"discussions":[{"author":{"id":1026224,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/a8/b0/6f87ab08.jpg","nickname":"Tony Bai","note":"","ucode":"B6B08985F6FA89","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":592389,"discussion_content":"👍","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1667377630,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"北京","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":357579,"user_name":"CLMOOK🐾","can_delete":false,"product_type":"c1","uid":1321526,"ip_address":"北京","ucode":"F6C75A32A59A34","user_header":"https://static001.geekbang.org/account/avatar/00/14/2a/36/c5d1a120.jpg","comment_is_top":false,"comment_ctime":1663413583,"is_pvip":false,"replies":[{"id":130228,"content":"1. 第七讲中有操作说明:)\n2. 不可以同时在一个程序中既依赖v1.1，有依赖v1.3。但是如果major版本不同，则可以，比如既依赖v1.3，又依赖v2.1。","user_name":"作者回复","user_name_real":"编辑","uid":1026224,"ctime":1663639401,"ip_address":"北京","comment_id":357579,"utype":1}],"discussion_count":1,"race_medal":0,"score":4,"product_id":100093501,"comment_content":"老师好，关于选择最小版本依赖原则，\n1.如例子所示，选择的c是v1.3,如果我们想用v1.4版，应该如何操作？（即如何修改一个间接依赖的版本？）\n2.go能否一起下载c的v1.1和v1.3，然后在程序中分别给对应的a和b所调用？（即能否在程序中加载两份c的不用版本？）\n谢谢","like_count":2,"discussions":[{"author":{"id":1026224,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/a8/b0/6f87ab08.jpg","nickname":"Tony Bai","note":"","ucode":"B6B08985F6FA89","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":588263,"discussion_content":"1. 第七讲中有操作说明:)\n2. 不可以同时在一个程序中既依赖v1.1，有依赖v1.3。但是如果major版本不同，则可以，比如既依赖v1.3，又依赖v2.1。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1663639402,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"北京","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":352222,"user_name":"T------T","can_delete":false,"product_type":"c1","uid":2270365,"ip_address":"","ucode":"AC68D88893FAD7","user_header":"https://static001.geekbang.org/account/avatar/00/22/a4/9d/95900f70.jpg","comment_is_top":false,"comment_ctime":1658462155,"is_pvip":false,"replies":[{"id":128137,"content":"如果你的项目中没有其他包对fasthttp包有直接依赖或间接依赖，\n\n在上面这个前提下：\n\n那么go mod tidy会拉取fasthttp最新发布的版本(一般为tag)。\n\n如果你手动限定fasthttp版本，那么就会拉取你限定的版本。","user_name":"作者回复","user_name_real":"编辑","uid":1026224,"ctime":1658468996,"ip_address":"","comment_id":352222,"utype":1}],"discussion_count":2,"race_medal":0,"score":4,"product_id":100093501,"comment_content":"\n\n老师，你好。我有个疑问。\n使用go mod tidy时，会自动拉取模块。举个例子，比如我依赖了github.com&#47;valyala&#47;fasthttp\n\n它是自动的去拉取了网址为https:&#47;&#47;github.com&#47;valyala&#47;fasthttp的git项目的master分支吗？\n如果我限定了版本为V2.1.1(随便写的版本号),是拉取分支为V2.1.1的项目吗？","like_count":2,"discussions":[{"author":{"id":1026224,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/a8/b0/6f87ab08.jpg","nickname":"Tony Bai","note":"","ucode":"B6B08985F6FA89","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":581036,"discussion_content":"如果你的项目中没有其他包对fasthttp包有直接依赖或间接依赖，\n\n在上面这个前提下：\n\n那么go mod tidy会拉取fasthttp最新发布的版本(一般为tag)。\n\n如果你手动限定fasthttp版本，那么就会拉取你限定的版本。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1658468996,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":1,"child_discussions":[{"author":{"id":3794407,"avatar":"","nickname":"Geek_3d0fe8","note":"","ucode":"E75EACDA00E7A6","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1026224,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/a8/b0/6f87ab08.jpg","nickname":"Tony Bai","note":"","ucode":"B6B08985F6FA89","race_medal":0,"user_type":2,"is_pvip":false},"discussion":{"id":638411,"discussion_content":"它怎么知道最新的tag是哪个","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1709557145,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":581036,"ip_address":"广东","group_id":0},"score":638411,"extra":""}]}]},{"had_liked":false,"id":349959,"user_name":"奔奔","can_delete":false,"product_type":"c1","uid":2072437,"ip_address":"","ucode":"7D24C84887A87C","user_header":"https://static001.geekbang.org/account/avatar/00/1f/9f/75/ae31f18e.jpg","comment_is_top":false,"comment_ctime":1656471656,"is_pvip":false,"replies":[{"id":127369,"content":"https:&#47;&#47;proxy.golang.cn 这个是什么代理？要不你设置一个goproxy.io或goproxy.cn试试。","user_name":"作者回复","user_name_real":"编辑","uid":1026224,"ctime":1656541619,"ip_address":"","comment_id":349959,"utype":1}],"discussion_count":1,"race_medal":0,"score":4,"product_id":100093501,"comment_content":"go version go1.18.3 windows&#47;amd64\ngo build 会出现 go build\nhelloworld.go:4:2: no required module provides package github.com&#47;google&#47;uuid; to add it:\n然后使用go mod tidy 会出现 go: finding module for package github.com&#47;google&#47;uuid\nhelloworld imports\ngithub.com&#47;google&#47;uuid:modulegithub.com&#47;google&#47;uuid:Get &quot;https:&#47;&#47;proxy.golang.cn&#47;github.com&#47;google&#47;uuid&#47;@v&#47;list&quot;: x509: certificate signed by unknown authority，老师有没有获取ca证书的途径。","like_count":2,"discussions":[{"author":{"id":1026224,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/a8/b0/6f87ab08.jpg","nickname":"Tony Bai","note":"","ucode":"B6B08985F6FA89","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":578135,"discussion_content":"https://proxy.golang.cn 这个是什么代理？要不你设置一个goproxy.io或goproxy.cn试试。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1656541619,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":331665,"user_name":"HBQ","can_delete":false,"product_type":"c1","uid":1026475,"ip_address":"","ucode":"00C96A731D8A0F","user_header":"https://static001.geekbang.org/account/avatar/00/0f/a9/ab/abb7bfe3.jpg","comment_is_top":false,"comment_ctime":1642693011,"is_pvip":false,"replies":[{"id":121601,"content":"go module采用的语义版本导入机制，v1.0.0和v2.0.0的major号不同，是两个完全不同的版本，是可以共同被某个包同时导入的，语法如下；\n\nimport (\n    &quot;c&quot;\n    &quot;c&#47;v2&quot;\n)\n\n","user_name":"作者回复","user_name_real":"编辑","uid":1026224,"ctime":1643537191,"ip_address":"","comment_id":331665,"utype":1}],"discussion_count":1,"race_medal":0,"score":4,"product_id":100093501,"comment_content":"myproject 中同时依赖 C 的 v1.0.0、 v2.0.0 这个时候怎么仲裁。最终 C 会两个版本同时引入？","like_count":2,"discussions":[{"author":{"id":1026224,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/a8/b0/6f87ab08.jpg","nickname":"Tony Bai","note":"","ucode":"B6B08985F6FA89","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":549059,"discussion_content":"go module采用的语义版本导入机制，v1.0.0和v2.0.0的major号不同，是两个完全不同的版本，是可以共同被某个包同时导入的，语法如下；\n\nimport (\n    &#34;c&#34;\n    &#34;c/v2&#34;\n)\n\n","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1643537191,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":318036,"user_name":"郑童文","can_delete":false,"product_type":"c1","uid":1030733,"ip_address":"","ucode":"3D193715CB8549","user_header":"https://static001.geekbang.org/account/avatar/00/0f/ba/4d/7ba09ff0.jpg","comment_is_top":false,"comment_ctime":1635128429,"is_pvip":false,"replies":[{"id":115384,"content":"严格来说，go.mod中 module后面的路径就是module的“名字”。但go官方一般不提module “名字”这个概念。module是一个go包集合，更多是一个命名空间的概念。go module唯一的标识就是module path。所以不存在你说的不一致情况。","user_name":"作者回复","user_name_real":"Tony Bai","uid":1026224,"ctime":1635216234,"ip_address":"","comment_id":318036,"utype":1}],"discussion_count":1,"race_medal":0,"score":4,"product_id":100093501,"comment_content":"请问老师go.mod中module path的最后一段,必须和module 的名称一样吗？ 如果两者不同会出现什么情况？ 谢谢！","like_count":2,"discussions":[{"author":{"id":1026224,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/a8/b0/6f87ab08.jpg","nickname":"Tony Bai","note":"","ucode":"B6B08985F6FA89","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":529074,"discussion_content":"严格来说，go.mod中 module后面的路径就是module的“名字”。但go官方一般不提module “名字”这个概念。module是一个go包集合，更多是一个命名空间的概念。go module唯一的标识就是module path。所以不存在你说的不一致情况。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1635216234,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":374577,"user_name":"111","can_delete":false,"product_type":"c1","uid":2046189,"ip_address":"陕西","ucode":"7ACA555BDC139B","user_header":"","comment_is_top":false,"comment_ctime":1684201702,"is_pvip":false,"replies":[{"id":136733,"content":"👍","user_name":"作者回复","user_name_real":"编辑","uid":1026224,"ctime":1684275314,"ip_address":"江苏","comment_id":374577,"utype":1}],"discussion_count":1,"race_medal":0,"score":4,"product_id":100093501,"comment_content":"# 进入项目路径\ngo mod init 项目的module名称\ngo mod tidy","like_count":1,"discussions":[{"author":{"id":1026224,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/a8/b0/6f87ab08.jpg","nickname":"Tony Bai","note":"","ucode":"B6B08985F6FA89","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":618472,"discussion_content":"👍","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1684275314,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"江苏","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":372326,"user_name":"idslilang","can_delete":false,"product_type":"c1","uid":2464701,"ip_address":"广东","ucode":"06B80C9C805082","user_header":"https://static001.geekbang.org/account/avatar/00/25/9b/bd/c3f26353.jpg","comment_is_top":false,"comment_ctime":1681001589,"is_pvip":false,"replies":[{"id":135933,"content":"如果是兼容版本，即非major号变更，那么升级版本即可。如果依赖的最新版本的major号已经变更，那么就需要修改import路径，加上新major号，这样也不会与以前的版本冲突。","user_name":"作者回复","user_name_real":"编辑","uid":1026224,"ctime":1681123922,"ip_address":"北京","comment_id":372326,"utype":1}],"discussion_count":1,"race_medal":0,"score":4,"product_id":100093501,"comment_content":"请教老师，有点疑惑的是，go module 如果选择最小包版本导入，那如果项目中用了高版本的一些方法或者特性，那怎么处理呢？要升级最小版本的项目，达到高版本号的版本？","like_count":1,"discussions":[{"author":{"id":1026224,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/a8/b0/6f87ab08.jpg","nickname":"Tony Bai","note":"","ucode":"B6B08985F6FA89","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":613088,"discussion_content":"如果是兼容版本，即非major号变更，那么升级版本即可。如果依赖的最新版本的major号已经变更，那么就需要修改import路径，加上新major号，这样也不会与以前的版本冲突。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1681123922,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"北京","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":370362,"user_name":"Geek_0d5d37","can_delete":false,"product_type":"c1","uid":3522132,"ip_address":"四川","ucode":"1BB4AEF1328C64","user_header":"","comment_is_top":false,"comment_ctime":1678758346,"is_pvip":false,"replies":[{"id":135116,"content":"这个目前不在第一课范畴。go源码是开源的，可以去下载一份，自己阅读一下，整理出逻辑后，也可以给大家分享一下😁\n\ngo module拉取仓库代码通常是经由GOPROXY。GOPROXY拉取协议这块也能帮你了解拉取过程：https:&#47;&#47;go.dev&#47;ref&#47;mod#goproxy-protocol","user_name":"作者回复","user_name_real":"编辑","uid":1026224,"ctime":1678855580,"ip_address":"北京","comment_id":370362,"utype":1}],"discussion_count":2,"race_medal":0,"score":4,"product_id":100093501,"comment_content":"白老师，您好。能讲讲go module拉取仓库代码的go源码执行的核心逻辑吗？ 比如执行go mod tidy 命令后，到下载代码到本地。   cmd&#47;go&#47;internal&#47;modcmd&#47;mod.go 。 我想知道解析go.mod文件到执行下载的逻辑 ","like_count":1,"discussions":[{"author":{"id":1026224,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/a8/b0/6f87ab08.jpg","nickname":"Tony Bai","note":"","ucode":"B6B08985F6FA89","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":613088,"discussion_content":"如果是兼容版本，即非major号变更，那么升级版本即可。如果依赖的最新版本的major号已经变更，那么就需要修改import路径，加上新major号，这样也不会与以前的版本冲突。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1681123922,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"北京","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":366703,"user_name":"℡人见人爱浩然君゜","can_delete":false,"product_type":"c1","uid":1592298,"ip_address":"北京","ucode":"D042A622533C72","user_header":"https://static001.geekbang.org/account/avatar/00/18/4b/ea/a9e7bc50.jpg","comment_is_top":false,"comment_ctime":1674094233,"is_pvip":false,"replies":[{"id":133607,"content":"🤝","user_name":"作者回复","user_name_real":"编辑","uid":1026224,"ctime":1674123219,"ip_address":"北京","comment_id":366703,"utype":1}],"discussion_count":1,"race_medal":0,"score":4,"product_id":100093501,"comment_content":"之前一直对go.sum和go.mod一知半解，只知道怎么创建mod，但不明白为什么是这种玩法，看了这篇文档后有种拨云见日的感觉。","like_count":1,"discussions":[{"author":{"id":1026224,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/a8/b0/6f87ab08.jpg","nickname":"Tony Bai","note":"","ucode":"B6B08985F6FA89","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":609169,"discussion_content":"这个目前不在第一课范畴。go源码是开源的，可以去下载一份，自己阅读一下，整理出逻辑后，也可以给大家分享一下😁\n\ngo module拉取仓库代码通常是经由GOPROXY。GOPROXY拉取协议这块也能帮你了解拉取过程：https://go.dev/ref/mod#goproxy-protocol","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1678855580,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"北京","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":3522132,"avatar":"","nickname":"Geek_0d5d37","note":"","ucode":"1BB4AEF1328C64","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":609224,"discussion_content":"谢谢老师","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1678880405,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":"四川","group_id":0},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":365184,"user_name":"Verson","can_delete":false,"product_type":"c1","uid":2691923,"ip_address":"北京","ucode":"3FC3F497CBA92A","user_header":"https://static001.geekbang.org/account/avatar/00/29/13/53/01c6273c.jpg","comment_is_top":false,"comment_ctime":1672217564,"is_pvip":false,"replies":[{"id":133035,"content":"✅👍","user_name":"作者回复","user_name_real":"编辑","uid":1026224,"ctime":1672281714,"ip_address":"北京","comment_id":365184,"utype":1}],"discussion_count":1,"race_medal":0,"score":5,"product_id":100093501,"comment_content":"看到这一章节，终于对前文反复提到的可重现构建有了深刻理解，可重现构建简单理解即针对相同代码在不同时机的构建都表现出一致性","like_count":1},{"had_liked":false,"id":365182,"user_name":"Verson","can_delete":false,"product_type":"c1","uid":2691923,"ip_address":"北京","ucode":"3FC3F497CBA92A","user_header":"https://static001.geekbang.org/account/avatar/00/29/13/53/01c6273c.jpg","comment_is_top":false,"comment_ctime":1672217465,"is_pvip":false,"replies":[{"id":133034,"content":"👍 go  1.16版本及以后GO111MODULE 会自动为on，无需显式设置了。","user_name":"作者回复","user_name_real":"编辑","uid":1026224,"ctime":1672281694,"ip_address":"北京","comment_id":365182,"utype":1}],"discussion_count":1,"race_medal":0,"score":5,"product_id":100093501,"comment_content":"GOPATH模式切换成Go Module模式，总结成如下步骤：\n\n1.修改 GO111MODULE 变量，设置为 on\n2.使用 go mod init 初始化项目\n3.使用 go mod tidy 下载项目依赖的第三方包","like_count":1,"discussions":[{"author":{"id":1026224,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/a8/b0/6f87ab08.jpg","nickname":"Tony Bai","note":"","ucode":"B6B08985F6FA89","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":597850,"discussion_content":"✅👍","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1672281714,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"北京","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":362308,"user_name":"Sunrise","can_delete":false,"product_type":"c1","uid":2820643,"ip_address":"辽宁","ucode":"791BC042992385","user_header":"https://static001.geekbang.org/account/avatar/00/2b/0a/23/c26f4e50.jpg","comment_is_top":false,"comment_ctime":1668408715,"is_pvip":false,"replies":[{"id":131817,"content":"不需要区别啊，直接用不带版本号的import path即可。","user_name":"作者回复","user_name_real":"编辑","uid":1026224,"ctime":1668521909,"ip_address":"辽宁","comment_id":362308,"utype":1}],"discussion_count":1,"race_medal":0,"score":5,"product_id":100093501,"comment_content":"讲的很透彻，有一点不太理解“Go Module 将这样的版本 (v0) 与主版本号 v1 做同等对待，也就是采用不带主版本号的包导入路径，这样一定程度降低了 Go 开发人员使用这样版本号包时的心智负担。”，v0，v1同等对待，那么如何区分呢？","like_count":1,"discussions":[{"author":{"id":1026224,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/a8/b0/6f87ab08.jpg","nickname":"Tony Bai","note":"","ucode":"B6B08985F6FA89","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":593781,"discussion_content":"不需要区别啊，直接用不带版本号的import path即可。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1668521909,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"辽宁","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":360507,"user_name":"sugar","can_delete":false,"product_type":"c1","uid":2184057,"ip_address":"北京","ucode":"491906283FC13B","user_header":"https://static001.geekbang.org/account/avatar/00/21/53/79/327ef30e.jpg","comment_is_top":false,"comment_ctime":1666604893,"is_pvip":false,"replies":[{"id":131254,"content":"👍","user_name":"作者回复","user_name_real":"编辑","uid":1026224,"ctime":1666833963,"ip_address":"北京","comment_id":360507,"utype":1}],"discussion_count":1,"race_medal":0,"score":5,"product_id":100093501,"comment_content":"开启go module模式，先设置 go env -w GO111MODULE=on;\ngo init  mod  &lt;项目名&gt;  # 这里的项目不一定是 github.com&#47; 之类，我是随便取得也行\ngo mod tidy\n把生成得 go.mod、go.sum 文件提交代码仓库","like_count":1,"discussions":[{"author":{"id":1026224,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/a8/b0/6f87ab08.jpg","nickname":"Tony Bai","note":"","ucode":"B6B08985F6FA89","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":591802,"discussion_content":"👍","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1666833963,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"北京","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":360502,"user_name":"sugar","can_delete":false,"product_type":"c1","uid":2184057,"ip_address":"北京","ucode":"491906283FC13B","user_header":"https://static001.geekbang.org/account/avatar/00/21/53/79/327ef30e.jpg","comment_is_top":false,"comment_ctime":1666604537,"is_pvip":false,"replies":[{"id":131252,"content":"👍","user_name":"作者回复","user_name_real":"编辑","uid":1026224,"ctime":1666833783,"ip_address":"北京","comment_id":360502,"utype":1}],"discussion_count":1,"race_medal":0,"score":5,"product_id":100093501,"comment_content":"讲的很好，之前被 GOPATH搞晕了","like_count":1,"discussions":[{"author":{"id":1026224,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/a8/b0/6f87ab08.jpg","nickname":"Tony Bai","note":"","ucode":"B6B08985F6FA89","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":591802,"discussion_content":"👍","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1666833963,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"北京","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":358381,"user_name":"防腐基","can_delete":false,"product_type":"c1","uid":2696605,"ip_address":"北京","ucode":"0FF3BF30631995","user_header":"https://static001.geekbang.org/account/avatar/00/29/25/9d/d612cbf8.jpg","comment_is_top":false,"comment_ctime":1664261696,"is_pvip":false,"replies":[{"id":130432,"content":"不建议越过。go module依赖管理是go语言的一个重点，也是一个难点。突破后，后面很多代码构建相关问题都可以自行解决。","user_name":"作者回复","user_name_real":"编辑","uid":1026224,"ctime":1664346154,"ip_address":"北京","comment_id":358381,"utype":1}],"discussion_count":1,"race_medal":0,"score":5,"product_id":100093501,"comment_content":"可以越过这一章么，知道go module就行了。","like_count":1,"discussions":[{"author":{"id":1026224,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/a8/b0/6f87ab08.jpg","nickname":"Tony Bai","note":"","ucode":"B6B08985F6FA89","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":591800,"discussion_content":"👍","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1666833784,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"北京","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":355175,"user_name":"戒酒的李白","can_delete":false,"product_type":"c1","uid":2166073,"ip_address":"北京","ucode":"744E1A22761647","user_header":"https://thirdwx.qlogo.cn/mmopen/vi_32/k3YD3y3BzGDSdrwRJyJY4BXsNJibfM4uzOdDVKIAlFApR2FZCLg2ibrZtJ4vuahA3LHLW9GKzH5CMGqCDhWjhZqg/132","comment_is_top":false,"comment_ctime":1661153693,"is_pvip":false,"replies":[{"id":129243,"content":"👍","user_name":"作者回复","user_name_real":"编辑","uid":1026224,"ctime":1661216663,"ip_address":"北京","comment_id":355175,"utype":1}],"discussion_count":1,"race_medal":0,"score":5,"product_id":100093501,"comment_content":"文章和所有评论都是一字不漏的看完了，收获满满","like_count":1,"discussions":[{"author":{"id":1026224,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/a8/b0/6f87ab08.jpg","nickname":"Tony Bai","note":"","ucode":"B6B08985F6FA89","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":589021,"discussion_content":"不建议越过。go module依赖管理是go语言的一个重点，也是一个难点。突破后，后面很多代码构建相关问题都可以自行解决。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1664346154,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"北京","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":354049,"user_name":"恶魔果实","can_delete":false,"product_type":"c1","uid":1962297,"ip_address":"北京","ucode":"691CD833C984AC","user_header":"https://static001.geekbang.org/account/avatar/00/1d/f1/39/b0960780.jpg","comment_is_top":false,"comment_ctime":1660042042,"is_pvip":false,"replies":[{"id":128802,"content":"请继续看07讲:)","user_name":"作者回复","user_name_real":"编辑","uid":1026224,"ctime":1660119118,"ip_address":"北京","comment_id":354049,"utype":1}],"discussion_count":1,"race_medal":0,"score":5,"product_id":100093501,"comment_content":"那么用 go mod 管理项目，如果：\n1.我想引人一个新包，该执行哪些命令呢？\n2.如果我想升级一个包的版本，该执行哪些命令呢？","like_count":1,"discussions":[{"author":{"id":1026224,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/a8/b0/6f87ab08.jpg","nickname":"Tony Bai","note":"","ucode":"B6B08985F6FA89","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":584901,"discussion_content":"👍","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1661216663,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"北京","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":352221,"user_name":"T------T","can_delete":false,"product_type":"c1","uid":2270365,"ip_address":"","ucode":"AC68D88893FAD7","user_header":"https://static001.geekbang.org/account/avatar/00/22/a4/9d/95900f70.jpg","comment_is_top":false,"comment_ctime":1658461826,"is_pvip":false,"replies":[{"id":128138,"content":"会。","user_name":"作者回复","user_name_real":"编辑","uid":1026224,"ctime":1658469002,"ip_address":"","comment_id":352221,"utype":1}],"discussion_count":1,"race_medal":0,"score":5,"product_id":100093501,"comment_content":"老师，你好。调用 go mod tidy时会自动下载依赖的模块。","like_count":1,"discussions":[{"author":{"id":1026224,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/a8/b0/6f87ab08.jpg","nickname":"Tony Bai","note":"","ucode":"B6B08985F6FA89","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":583436,"discussion_content":"请继续看07讲:)","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1660119118,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"北京","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":350782,"user_name":"每天晒白牙","can_delete":false,"product_type":"c1","uid":1004698,"ip_address":"","ucode":"A1B102CD933DEA","user_header":"https://static001.geekbang.org/account/avatar/00/0f/54/9a/76c0af70.jpg","comment_is_top":false,"comment_ctime":1657187669,"is_pvip":false,"replies":[{"id":127669,"content":"应该还是系统环境变量中有这个设置，go命令检测到才给的warning，\n\n你可以直接在系统环境变量中设置GOPROXY。环境变量生效后再试go mod tidy。","user_name":"作者回复","user_name_real":"编辑","uid":1026224,"ctime":1657405748,"ip_address":"","comment_id":350782,"utype":1}],"discussion_count":2,"race_medal":0,"score":5,"product_id":100093501,"comment_content":"老师请教一个环境变量的问题\n环境：mac台式机\n执行下面的命令\ngo env -w GOPROXY=&quot;公司提供的一个带token的链接,direct&quot;\n提示如下\nwarning: go env -w GOPROXY=... does not override conflicting OS environment variable\n\n意思是不能覆盖掉系统的环境变量，但我查看了我的环境变量 ~&#47;.bash_profile、~&#47;.zshrc、~&#47;.zprofile\n都没有GOPROXY这个环境变量，请问老师这是啥情况呢？\n\n通过执行 go env ，可以看到这个环境变量，也确实是我之前设置的，但我想把它覆盖掉\n\n我怎么才能把这个环境变量给覆盖掉呢，因为不覆盖，在执行 go mod tidy，就拉取不到一些依赖，报我没有权限","like_count":1,"discussions":[{"author":{"id":1026224,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/a8/b0/6f87ab08.jpg","nickname":"Tony Bai","note":"","ucode":"B6B08985F6FA89","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":581037,"discussion_content":"会。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1658469002,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":365184,"user_name":"Verson","can_delete":false,"product_type":"c1","uid":2691923,"ip_address":"北京","ucode":"3FC3F497CBA92A","user_header":"https://static001.geekbang.org/account/avatar/00/29/13/53/01c6273c.jpg","comment_is_top":false,"comment_ctime":1672217564,"is_pvip":false,"replies":[{"id":133035,"content":"✅👍","user_name":"作者回复","user_name_real":"编辑","uid":1026224,"ctime":1672281714,"ip_address":"北京","comment_id":365184,"utype":1}],"discussion_count":1,"race_medal":0,"score":5,"product_id":100093501,"comment_content":"看到这一章节，终于对前文反复提到的可重现构建有了深刻理解，可重现构建简单理解即针对相同代码在不同时机的构建都表现出一致性","like_count":1,"discussions":[{"author":{"id":1026224,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/a8/b0/6f87ab08.jpg","nickname":"Tony Bai","note":"","ucode":"B6B08985F6FA89","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":597850,"discussion_content":"✅👍","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1672281714,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"北京","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":365182,"user_name":"Verson","can_delete":false,"product_type":"c1","uid":2691923,"ip_address":"北京","ucode":"3FC3F497CBA92A","user_header":"https://static001.geekbang.org/account/avatar/00/29/13/53/01c6273c.jpg","comment_is_top":false,"comment_ctime":1672217465,"is_pvip":false,"replies":[{"id":133034,"content":"👍 go  1.16版本及以后GO111MODULE 会自动为on，无需显式设置了。","user_name":"作者回复","user_name_real":"编辑","uid":1026224,"ctime":1672281694,"ip_address":"北京","comment_id":365182,"utype":1}],"discussion_count":1,"race_medal":0,"score":5,"product_id":100093501,"comment_content":"GOPATH模式切换成Go Module模式，总结成如下步骤：\n\n1.修改 GO111MODULE 变量，设置为 on\n2.使用 go mod init 初始化项目\n3.使用 go mod tidy 下载项目依赖的第三方包","like_count":1,"discussions":[{"author":{"id":1026224,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/a8/b0/6f87ab08.jpg","nickname":"Tony Bai","note":"","ucode":"B6B08985F6FA89","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":597849,"discussion_content":"👍 go  1.16版本及以后GO111MODULE 会自动为on，无需显式设置了。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1672281694,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"北京","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":362308,"user_name":"Sunrise","can_delete":false,"product_type":"c1","uid":2820643,"ip_address":"辽宁","ucode":"791BC042992385","user_header":"https://static001.geekbang.org/account/avatar/00/2b/0a/23/c26f4e50.jpg","comment_is_top":false,"comment_ctime":1668408715,"is_pvip":false,"replies":[{"id":131817,"content":"不需要区别啊，直接用不带版本号的import path即可。","user_name":"作者回复","user_name_real":"编辑","uid":1026224,"ctime":1668521909,"ip_address":"辽宁","comment_id":362308,"utype":1}],"discussion_count":1,"race_medal":0,"score":5,"product_id":100093501,"comment_content":"讲的很透彻，有一点不太理解“Go Module 将这样的版本 (v0) 与主版本号 v1 做同等对待，也就是采用不带主版本号的包导入路径，这样一定程度降低了 Go 开发人员使用这样版本号包时的心智负担。”，v0，v1同等对待，那么如何区分呢？","like_count":1,"discussions":[{"author":{"id":1026224,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/a8/b0/6f87ab08.jpg","nickname":"Tony Bai","note":"","ucode":"B6B08985F6FA89","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":597849,"discussion_content":"👍 go  1.16版本及以后GO111MODULE 会自动为on，无需显式设置了。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1672281694,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"北京","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":360507,"user_name":"sugar","can_delete":false,"product_type":"c1","uid":2184057,"ip_address":"北京","ucode":"491906283FC13B","user_header":"https://static001.geekbang.org/account/avatar/00/21/53/79/327ef30e.jpg","comment_is_top":false,"comment_ctime":1666604893,"is_pvip":false,"replies":[{"id":131254,"content":"👍","user_name":"作者回复","user_name_real":"编辑","uid":1026224,"ctime":1666833963,"ip_address":"北京","comment_id":360507,"utype":1}],"discussion_count":1,"race_medal":0,"score":5,"product_id":100093501,"comment_content":"开启go module模式，先设置 go env -w GO111MODULE=on;\ngo init  mod  &lt;项目名&gt;  # 这里的项目不一定是 github.com&#47; 之类，我是随便取得也行\ngo mod tidy\n把生成得 go.mod、go.sum 文件提交代码仓库","like_count":1,"discussions":[{"author":{"id":1026224,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/a8/b0/6f87ab08.jpg","nickname":"Tony Bai","note":"","ucode":"B6B08985F6FA89","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":593781,"discussion_content":"不需要区别啊，直接用不带版本号的import path即可。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1668521909,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"辽宁","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":360502,"user_name":"sugar","can_delete":false,"product_type":"c1","uid":2184057,"ip_address":"北京","ucode":"491906283FC13B","user_header":"https://static001.geekbang.org/account/avatar/00/21/53/79/327ef30e.jpg","comment_is_top":false,"comment_ctime":1666604537,"is_pvip":false,"replies":[{"id":131252,"content":"👍","user_name":"作者回复","user_name_real":"编辑","uid":1026224,"ctime":1666833783,"ip_address":"北京","comment_id":360502,"utype":1}],"discussion_count":1,"race_medal":0,"score":5,"product_id":100093501,"comment_content":"讲的很好，之前被 GOPATH搞晕了","like_count":1,"discussions":[{"author":{"id":1026224,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/a8/b0/6f87ab08.jpg","nickname":"Tony Bai","note":"","ucode":"B6B08985F6FA89","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":591800,"discussion_content":"👍","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1666833784,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"北京","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":358381,"user_name":"防腐基","can_delete":false,"product_type":"c1","uid":2696605,"ip_address":"北京","ucode":"0FF3BF30631995","user_header":"https://static001.geekbang.org/account/avatar/00/29/25/9d/d612cbf8.jpg","comment_is_top":false,"comment_ctime":1664261696,"is_pvip":false,"replies":[{"id":130432,"content":"不建议越过。go module依赖管理是go语言的一个重点，也是一个难点。突破后，后面很多代码构建相关问题都可以自行解决。","user_name":"作者回复","user_name_real":"编辑","uid":1026224,"ctime":1664346154,"ip_address":"北京","comment_id":358381,"utype":1}],"discussion_count":1,"race_medal":0,"score":5,"product_id":100093501,"comment_content":"可以越过这一章么，知道go module就行了。","like_count":1,"discussions":[{"author":{"id":1026224,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/a8/b0/6f87ab08.jpg","nickname":"Tony Bai","note":"","ucode":"B6B08985F6FA89","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":589021,"discussion_content":"不建议越过。go module依赖管理是go语言的一个重点，也是一个难点。突破后，后面很多代码构建相关问题都可以自行解决。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1664346154,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"北京","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":355175,"user_name":"戒酒的李白","can_delete":false,"product_type":"c1","uid":2166073,"ip_address":"北京","ucode":"744E1A22761647","user_header":"https://thirdwx.qlogo.cn/mmopen/vi_32/k3YD3y3BzGDSdrwRJyJY4BXsNJibfM4uzOdDVKIAlFApR2FZCLg2ibrZtJ4vuahA3LHLW9GKzH5CMGqCDhWjhZqg/132","comment_is_top":false,"comment_ctime":1661153693,"is_pvip":false,"replies":[{"id":129243,"content":"👍","user_name":"作者回复","user_name_real":"编辑","uid":1026224,"ctime":1661216663,"ip_address":"北京","comment_id":355175,"utype":1}],"discussion_count":1,"race_medal":0,"score":5,"product_id":100093501,"comment_content":"文章和所有评论都是一字不漏的看完了，收获满满","like_count":1,"discussions":[{"author":{"id":1026224,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/a8/b0/6f87ab08.jpg","nickname":"Tony Bai","note":"","ucode":"B6B08985F6FA89","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":584901,"discussion_content":"👍","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1661216663,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"北京","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":354049,"user_name":"恶魔果实","can_delete":false,"product_type":"c1","uid":1962297,"ip_address":"北京","ucode":"691CD833C984AC","user_header":"https://static001.geekbang.org/account/avatar/00/1d/f1/39/b0960780.jpg","comment_is_top":false,"comment_ctime":1660042042,"is_pvip":false,"replies":[{"id":128802,"content":"请继续看07讲:)","user_name":"作者回复","user_name_real":"编辑","uid":1026224,"ctime":1660119118,"ip_address":"北京","comment_id":354049,"utype":1}],"discussion_count":1,"race_medal":0,"score":5,"product_id":100093501,"comment_content":"那么用 go mod 管理项目，如果：\n1.我想引人一个新包，该执行哪些命令呢？\n2.如果我想升级一个包的版本，该执行哪些命令呢？","like_count":1,"discussions":[{"author":{"id":1026224,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/a8/b0/6f87ab08.jpg","nickname":"Tony Bai","note":"","ucode":"B6B08985F6FA89","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":583436,"discussion_content":"请继续看07讲:)","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1660119118,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"北京","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":352221,"user_name":"T------T","can_delete":false,"product_type":"c1","uid":2270365,"ip_address":"","ucode":"AC68D88893FAD7","user_header":"https://static001.geekbang.org/account/avatar/00/22/a4/9d/95900f70.jpg","comment_is_top":false,"comment_ctime":1658461826,"is_pvip":false,"replies":[{"id":128138,"content":"会。","user_name":"作者回复","user_name_real":"编辑","uid":1026224,"ctime":1658469002,"ip_address":"","comment_id":352221,"utype":1}],"discussion_count":1,"race_medal":0,"score":5,"product_id":100093501,"comment_content":"老师，你好。调用 go mod tidy时会自动下载依赖的模块。","like_count":1,"discussions":[{"author":{"id":1026224,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/a8/b0/6f87ab08.jpg","nickname":"Tony Bai","note":"","ucode":"B6B08985F6FA89","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":581037,"discussion_content":"会。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1658469002,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":350782,"user_name":"每天晒白牙","can_delete":false,"product_type":"c1","uid":1004698,"ip_address":"","ucode":"A1B102CD933DEA","user_header":"https://static001.geekbang.org/account/avatar/00/0f/54/9a/76c0af70.jpg","comment_is_top":false,"comment_ctime":1657187669,"is_pvip":false,"replies":[{"id":127669,"content":"应该还是系统环境变量中有这个设置，go命令检测到才给的warning，\n\n你可以直接在系统环境变量中设置GOPROXY。环境变量生效后再试go mod tidy。","user_name":"作者回复","user_name_real":"编辑","uid":1026224,"ctime":1657405748,"ip_address":"","comment_id":350782,"utype":1}],"discussion_count":2,"race_medal":0,"score":5,"product_id":100093501,"comment_content":"老师请教一个环境变量的问题\n环境：mac台式机\n执行下面的命令\ngo env -w GOPROXY=&quot;公司提供的一个带token的链接,direct&quot;\n提示如下\nwarning: go env -w GOPROXY=... does not override conflicting OS environment variable\n\n意思是不能覆盖掉系统的环境变量，但我查看了我的环境变量 ~&#47;.bash_profile、~&#47;.zshrc、~&#47;.zprofile\n都没有GOPROXY这个环境变量，请问老师这是啥情况呢？\n\n通过执行 go env ，可以看到这个环境变量，也确实是我之前设置的，但我想把它覆盖掉\n\n我怎么才能把这个环境变量给覆盖掉呢，因为不覆盖，在执行 go mod tidy，就拉取不到一些依赖，报我没有权限","like_count":1,"discussions":[{"author":{"id":1026224,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/a8/b0/6f87ab08.jpg","nickname":"Tony Bai","note":"","ucode":"B6B08985F6FA89","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":579373,"discussion_content":"应该还是系统环境变量中有这个设置，go命令检测到才给的warning，\n\n你可以直接在系统环境变量中设置GOPROXY。环境变量生效后再试go mod tidy。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1657405748,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1004698,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/54/9a/76c0af70.jpg","nickname":"每天晒白牙","note":"","ucode":"A1B102CD933DEA","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":579142,"discussion_content":"通过 unset GOPROXY 解决了","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1657192647,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":350105,"user_name":"菠萝吹雪—Code","can_delete":false,"product_type":"c1","uid":1650378,"ip_address":"","ucode":"A5B2FC661EE17D","user_header":"https://static001.geekbang.org/account/avatar/00/19/2e/ca/469f7266.jpg","comment_is_top":false,"comment_ctime":1656575038,"is_pvip":false,"replies":[{"id":127390,"content":"👍","user_name":"作者回复","user_name_real":"编辑","uid":1026224,"ctime":1656597478,"ip_address":"","comment_id":350105,"utype":1}],"discussion_count":1,"race_medal":0,"score":6,"product_id":100093501,"comment_content":"以前在这个地方就卡住了，这下就通畅了","like_count":1},{"had_liked":false,"id":348766,"user_name":"葛云龙","can_delete":false,"product_type":"c1","uid":2961265,"ip_address":"","ucode":"A52EE523F92A31","user_header":"","comment_is_top":false,"comment_ctime":1655374640,"is_pvip":false,"replies":[{"id":127030,"content":"没遇到过你这种问题。你的GOPROXY环境变量配置的是什么？go版本是？","user_name":"作者回复","user_name_real":"编辑","uid":1026224,"ctime":1655704242,"ip_address":"","comment_id":348766,"utype":1}],"discussion_count":1,"race_medal":0,"score":6,"product_id":100093501,"comment_content":"提问：使用golang工具，执行go mod tidy  会出现 github.com&#47;google&#47;uuid: module github.com&#47;google&#47;uuid: Get &quot;https:&#47;&#47;github.com&#47;github.com&#47;google&#47;uuid&#47;@v&#47;list&quot;:    \n为什么get地址会有两个github.com&#47;\n获取数据就会失败，用go get 命令是可以下载下来uuid的，希望可以得到如何解决这个问题的方法步骤","like_count":1,"discussions":[{"author":{"id":1026224,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/a8/b0/6f87ab08.jpg","nickname":"Tony Bai","note":"","ucode":"B6B08985F6FA89","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":578238,"discussion_content":"👍","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1656597478,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":346696,"user_name":"Geek_244c46","can_delete":false,"product_type":"c1","uid":2034469,"ip_address":"","ucode":"419D97DA9F1F9B","user_header":"","comment_is_top":false,"comment_ctime":1653364178,"is_pvip":false,"replies":[{"id":126447,"content":"你用的go版本是go 1.18? 如果是，看看https:&#47;&#47;stackoverflow.com&#47;questions&#47;71507321&#47;go-1-18-build-error-on-mac-unix-syscall-darwin-1-13-go253-golinkname-mus  \n这个和你问题类似。\n\n试试\ngo get golang.org&#47;x&#47;sys@latest\n\n将x&#47;sys升到最新版。","user_name":"作者回复","user_name_real":"编辑","uid":1026224,"ctime":1653381331,"ip_address":"","comment_id":346696,"utype":1}],"discussion_count":1,"race_medal":0,"score":6,"product_id":100093501,"comment_content":"我这边输入go build指令后，报错了，这是什么原因呢，go.mod中的内容都是一致的\n# golang.org&#47;x&#47;sys&#47;unix\n..&#47;..&#47;go&#47;pkg&#47;mod&#47;golang.org&#47;x&#47;sys@v0.0.0-20191026070338-33540a1f6037&#47;unix&#47;syscall_darwin.1_13.go:25:3: &#47;&#47;go:linkname must refer to declared function or variable\n..&#47;..&#47;go&#47;pkg&#47;mod&#47;golang.org&#47;x&#47;sys@v0.0.0-20191026070338-33540a1f6037&#47;unix&#47;zsyscall_darwin_amd64.1_13.go:27:3: &#47;&#47;go:linkname must refer to declared function or variable\n..&#47;..&#47;go&#47;pkg&#47;mod&#47;golang.org&#47;x&#47;sys@v0.0.0-20191026070338-33540a1f6037&#47;unix&#47;zsyscall_darwin_amd64.1_13.go:40:3: &#47;&#47;go:linkname must refer to declared function or variable\n..&#47;..&#47;go&#47;pkg&#47;mod&#47;golang.org&#47;x&#47;sys@v0.0.0-20191026070338-33540a1f6037&#47;unix&#47;zsyscall_darwin_amd64.go:28:3: &#47;&#47;go:linkname must refer to declared function or variable\n..&#47;..&#47;go&#47;pkg&#47;mod&#47;golang.org&#47;x&#47;sys@v0.0.0-20191026070338-33540a1f6037&#47;unix&#47;zsyscall_darwin_amd64.go:43:3: &#47;&#47;go:linkname must refer to declared function or variable\n..&#47;..&#47;go&#47;pkg&#47;mod&#47;golang.org&#47;x&#47;sys@v0.0.0-20191026070338-33540a1f6037&#47;unix&#47;zsyscall_darwin_amd64.go:59:3: &#47;&#47;go:linkname must refer to declared function or variable\n..&#47;..&#47;go&#47;pkg&#47;mod&#47;golang.org&#47;x&#47;sys@v0.0.0-20191026070338-33540a1f6037&#47;unix&#47;zsyscall_darwin_amd64.go:75:3: &#47;&#47;go:linkname must refer to declared function or variable\n..&#47;..&#47;go&#47;pkg&#47;mod&#47;golang.org&#47;x&#47;sys@v0.0.0-20191026070338-33540a1f6037&#47;unix&#47;zsyscall_darwin_amd64.go:90:3: &#47;&#47;go:linkname must refer to declared function or variable\n..&#47;..&#47;go&#47;pkg&#47;mod&#47;golang.org&#47;x&#47;sys@v0.0.0-20191026070338-33540a1f6037&#47;unix&#47;zsyscall_darwin_amd64.go:105:3: &#47;&#47;go:linkname must refer to declared function or variable\n..&#47;..&#47;go&#47;pkg&#47;mod&#47;golang.org&#47;x&#47;sys@v0.0.0-20191026070338-33540a1f6037&#47;unix&#47;zsyscall_darwin_amd64.go:121:3: &#47;&#47;go:linkname must refer to declared function or variable\n..&#47;..&#47;go&#47;pkg&#47;mod&#47;golang.org&#47;x&#47;sys@v0.0.0-20191026070338-33540a1f6037&#47;unix&#47;zsyscall_darwin_amd64.go:121:3: too many errors\n","like_count":1,"discussions":[{"author":{"id":1026224,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/a8/b0/6f87ab08.jpg","nickname":"Tony Bai","note":"","ucode":"B6B08985F6FA89","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":576616,"discussion_content":"没遇到过你这种问题。你的GOPROXY环境变量配置的是什么？go版本是？","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1655704242,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":340648,"user_name":"瓜牛","can_delete":false,"product_type":"c1","uid":2273620,"ip_address":"","ucode":"5EB7D2F4400A70","user_header":"https://static001.geekbang.org/account/avatar/00/22/b1/54/6d663b95.jpg","comment_is_top":false,"comment_ctime":1648992956,"is_pvip":false,"replies":[{"id":124591,"content":"go mod会缓存logrus的不同版本。这样不同项目依赖logrus包的不同版本不会产生冲突。","user_name":"作者回复","user_name_real":"编辑","uid":1026224,"ctime":1649120621,"ip_address":"","comment_id":340648,"utype":1}],"discussion_count":2,"race_medal":0,"score":6,"product_id":100093501,"comment_content":"go mod tidy会把第三方包缓存到本地，那不同项目依赖同一个第三方包logrus的不同版本，是如何缓存的呢？","like_count":1,"discussions":[{"author":{"id":1026224,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/a8/b0/6f87ab08.jpg","nickname":"Tony Bai","note":"","ucode":"B6B08985F6FA89","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":573374,"discussion_content":"你用的go版本是go 1.18? 如果是，看看https://stackoverflow.com/questions/71507321/go-1-18-build-error-on-mac-unix-syscall-darwin-1-13-go253-golinkname-mus  \n这个和你问题类似。\n\n试试\ngo get golang.org/x/sys@latest\n\n将x/sys升到最新版。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1653381331,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":335905,"user_name":"pyhhou","can_delete":false,"product_type":"c1","uid":1256496,"ip_address":"","ucode":"31EF8D50CF91A5","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/ibZVAmmdAibBeVpUjzwId8ibgRzNk7fkuR5pgVicB5mFSjjmt2eNadlykVLKCyGA0GxGffbhqLsHnhDRgyzxcKUhjg/132","comment_is_top":false,"comment_ctime":1645764740,"is_pvip":false,"replies":[{"id":122779,"content":"为什么要把第三方包放入项目根目录的指定文件夹中呢？没这个必要啊。你想把它们提交到项目代码仓库中？","user_name":"作者回复","user_name_real":"编辑","uid":1026224,"ctime":1645837943,"ip_address":"","comment_id":335905,"utype":1}],"discussion_count":2,"race_medal":0,"score":6,"product_id":100093501,"comment_content":"老师，还是之前的一个问题有点不理解，还望指教\n\n如果想要实现前面说的项目结构，在使用 `go mod tidy` 构建依赖时，想把第三方包存放在项目根目录下的指定文件夹中，比如 pkgN&#47; 或者 internal&#47;。那么我们是不是得需要改变 GOMODCACHE （&gt;= 1.15）或者 GOPATH。或者说有其他的工具进行辅助？","like_count":1,"discussions":[{"author":{"id":1026224,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/a8/b0/6f87ab08.jpg","nickname":"Tony Bai","note":"","ucode":"B6B08985F6FA89","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":560005,"discussion_content":"go mod会缓存logrus的不同版本。这样不同项目依赖logrus包的不同版本不会产生冲突。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1649120621,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1035064,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/cb/38/4c9cfdf4.jpg","nickname":"谢小路","note":"","ucode":"C9FE2EB10DC105","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":566701,"discussion_content":"可以看看 $GOPATH/pkg/mod 目录。","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1650730845,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":332136,"user_name":"运维夜谈","can_delete":false,"product_type":"c1","uid":1054300,"ip_address":"","ucode":"E2E93375FF5A07","user_header":"https://static001.geekbang.org/account/avatar/00/10/16/5c/d0476f9f.jpg","comment_is_top":false,"comment_ctime":1643036786,"is_pvip":true,"replies":[{"id":121615,"content":"显式通过go get 降级版本","user_name":"作者回复","user_name_real":"编辑","uid":1026224,"ctime":1643542651,"ip_address":"","comment_id":332136,"utype":1}],"discussion_count":2,"race_medal":0,"score":6,"product_id":100093501,"comment_content":"老师，请教一个问题，就是Go的语义导入版本机制，只能用来限定Go导入的依赖包的主版本，但对于同一个主版本的不同版本，比如1.17.0和1.18.0，我们直接import &quot;github.com&#47;sirupsen&#47;logrus&quot;，Go其实会去下载最新版本的logrus，那如果我们想要导入1.17.0版本怎么办？","like_count":1,"discussions":[{"author":{"id":1026224,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/a8/b0/6f87ab08.jpg","nickname":"Tony Bai","note":"","ucode":"B6B08985F6FA89","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":553302,"discussion_content":"为什么要把第三方包放入项目根目录的指定文件夹中呢？没这个必要啊。你想把它们提交到项目代码仓库中？","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1645837943,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1256496,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/ibZVAmmdAibBeVpUjzwId8ibgRzNk7fkuR5pgVicB5mFSjjmt2eNadlykVLKCyGA0GxGffbhqLsHnhDRgyzxcKUhjg/132","nickname":"pyhhou","note":"","ucode":"31EF8D50CF91A5","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":553506,"discussion_content":"了解了，原来之前我们说的 pkgN/ 以及 internal/ 是指的是当前项目的源代码，并非需要下载的第三方依赖","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1645938689,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":322060,"user_name":"kkxue","can_delete":false,"product_type":"c1","uid":1159904,"ip_address":"","ucode":"0DCB861D5543D6","user_header":"https://static001.geekbang.org/account/avatar/00/11/b2/e0/bf56878a.jpg","comment_is_top":false,"comment_ctime":1637150774,"is_pvip":false,"replies":[{"id":117143,"content":"欢迎捧场:)","user_name":"作者回复","user_name_real":"编辑","uid":1026224,"ctime":1637558258,"ip_address":"","comment_id":322060,"utype":1}],"discussion_count":1,"race_medal":5,"score":6,"product_id":100093501,"comment_content":"买这个课程的目的达到了，入门篇太赞了","like_count":1,"discussions":[{"author":{"id":1026224,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/a8/b0/6f87ab08.jpg","nickname":"Tony Bai","note":"","ucode":"B6B08985F6FA89","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":549075,"discussion_content":"显式通过go get 降级版本","likes_number":2,"is_delete":false,"is_hidden":false,"ctime":1643542651,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1035064,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/cb/38/4c9cfdf4.jpg","nickname":"谢小路","note":"","ucode":"C9FE2EB10DC105","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":566705,"discussion_content":"go get 下载第三方包，默认是会下载最新版本。不过可以指定版本下载，go get github.com/sirupsen/logrus@v.17.0   甚至可以指定分支下载 go get github.com/sirupsen/logrus@dev  ","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1650731156,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":322000,"user_name":"Noir","can_delete":false,"product_type":"c1","uid":1186981,"ip_address":"","ucode":"985D4C4A5E1E85","user_header":"https://static001.geekbang.org/account/avatar/00/12/1c/a5/226ce8a7.jpg","comment_is_top":false,"comment_ctime":1637132862,"is_pvip":false,"replies":[{"id":117140,"content":"1. 没有必要\n2. 不会去拉取。因为go命令会识别出你的代码就在你的本地module下面。","user_name":"作者回复","user_name_real":"编辑","uid":1026224,"ctime":1637556574,"ip_address":"","comment_id":322000,"utype":1}],"discussion_count":1,"race_medal":0,"score":6,"product_id":100093501,"comment_content":"1. 要是自己写的程序，module path 有必要采用 github.com&#47;xxx 作为前缀吗？\n2. 在自己的项目中，要是采用 import &quot;github.com&#47;xxx&quot; 岂不是会主动去 github.com 上面拉取。而不使用自己项目中的 xxx (比如：&#47;PATH&#47;TO&#47;PROJECT&#47;xxx 中) ？","like_count":1,"discussions":[{"author":{"id":1026224,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/a8/b0/6f87ab08.jpg","nickname":"Tony Bai","note":"","ucode":"B6B08985F6FA89","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":532210,"discussion_content":"1. 没有必要\n2. 不会去拉取。因为go命令会识别出你的代码就在你的本地module下面。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1637556574,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":318644,"user_name":"Dunbreak","can_delete":false,"product_type":"c1","uid":1155210,"ip_address":"","ucode":"A64010733754BF","user_header":"https://static001.geekbang.org/account/avatar/00/11/a0/8a/69f4023c.jpg","comment_is_top":false,"comment_ctime":1635382047,"is_pvip":false,"replies":[{"id":115637,"content":"如果现在B依赖的不是v1.3.0而是v2.3.0， 那最终go会选择C v1.1.0和Cv2.3.0，这两个都会下载到本地并链接到最终程序中。因为根据go的语义导入版本的规则，不同major号的module就是不同的module。\n\n那如果我现在依赖了100个包，那是不是最多会有100的不同的版本？--- 这个能再具体一点么？","user_name":"作者回复","user_name_real":"Tony Bai","uid":1026224,"ctime":1635571031,"ip_address":"","comment_id":318644,"utype":1}],"discussion_count":2,"race_medal":0,"score":6,"product_id":100093501,"comment_content":"我有一个问题，在包依赖引用那一节，您说的是A和B依赖C的v1.1.0和v1.3.0版本，这种版本依赖很好理解。但是按照上述的V1和V2不同的原则，如果现在B依赖的不是v1.3.0而是v2.3.0，那我现在项目里引用的C到底是哪个版本？以最小依赖版本我应该依赖v2.3.0，但是又根据主版本号相互不兼容原则，v1和v2又不兼容，那这不是乱套了？难道我的项目里现在要同时下载C包的v1.1.0和v2.3.0吗？那如果我现在依赖了100个包，那是不是最多会有100的不同的版本？","like_count":1,"discussions":[{"author":{"id":1026224,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/a8/b0/6f87ab08.jpg","nickname":"Tony Bai","note":"","ucode":"B6B08985F6FA89","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":409968,"discussion_content":"如果B依赖的是C v2.3.0，那么B导入C的语句就是 import c/v2，而A依赖的是v1.1.0，那么A导入c的语句就是import c，这两个是可以共存的啊。于是你在go.mod中看到的既有c，也有c/v2，它们可以理解为两个不同的module。","likes_number":7,"is_delete":false,"is_hidden":false,"ctime":1635561922,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1026224,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/a8/b0/6f87ab08.jpg","nickname":"Tony Bai","note":"","ucode":"B6B08985F6FA89","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":529327,"discussion_content":"如果现在B依赖的不是v1.3.0而是v2.3.0， 那最终go会选择C v1.1.0和Cv2.3.0，这两个都会下载到本地并链接到最终程序中。因为根据go的语义导入版本的规则，不同major号的module就是不同的module。\n\n那如果我现在依赖了100个包，那是不是最多会有100的不同的版本？--- 这个能再具体一点么？","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1635571031,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":318299,"user_name":"python玩家一枚","can_delete":false,"product_type":"c1","uid":1709839,"ip_address":"","ucode":"6D9C988960BFE5","user_header":"https://static001.geekbang.org/account/avatar/00/1a/17/0f/2a35eb18.jpg","comment_is_top":false,"comment_ctime":1635235561,"is_pvip":false,"replies":[{"id":115589,"content":"1. go module构建模式不要求你自己的项目必须放在gopath&#47;src下；任意目录都可以。\n2. go mod init github.com&#47;bigwhite&#47;module-mode 这里是在module-mode目录执行的吗？ -- 在你的项目根目录下执行就行。你的项目目录可以是任意目录名。","user_name":"作者回复","user_name_real":"Tony Bai","uid":1026224,"ctime":1635456031,"ip_address":"","comment_id":318299,"utype":1}],"discussion_count":1,"race_medal":0,"score":6,"product_id":100093501,"comment_content":"老师您好，大概一个月前开始看go的书籍的，开始看的时候就构建项目纠结了很久，已经有的书籍基本上用的都是老方法gopath样式的pkg src bin 三件套，新的包括goland也是一个mod解决，然后又在一些书上看到说建议自己的项目按照github.com&#47;xxxx&#47;yyyy这种方式去建，还有又说最好是新版方式mod的也是放在gopath的src里面去玩，众说纷纭吧，这里有一些疑惑想请教下了，一般下载的三方依赖github.com&#47;啥啥啥&#47;这种也会被丢在gopath的src，那么自己的项目也叫github.com&#47;XXX样式都放在src吗。。。？再就是您go mod init github.com&#47;bigwhite&#47;module-mode 这里是在module-mode目录执行的吗，我记得在哪里看到go mod init 如果不在gopath下面没法这么执行 只能go mod init；","like_count":1,"discussions":[{"author":{"id":1026224,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/a8/b0/6f87ab08.jpg","nickname":"Tony Bai","note":"","ucode":"B6B08985F6FA89","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":529176,"discussion_content":"1. go module构建模式不要求你自己的项目必须放在gopath/src下；任意目录都可以。\n2. go mod init github.com/bigwhite/module-mode 这里是在module-mode目录执行的吗？ -- 在你的项目根目录下执行就行。你的项目目录可以是任意目录名。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1635456031,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":350105,"user_name":"菠萝吹雪—Code","can_delete":false,"product_type":"c1","uid":1650378,"ip_address":"","ucode":"A5B2FC661EE17D","user_header":"https://static001.geekbang.org/account/avatar/00/19/2e/ca/469f7266.jpg","comment_is_top":false,"comment_ctime":1656575038,"is_pvip":false,"replies":[{"id":127390,"content":"👍","user_name":"作者回复","user_name_real":"编辑","uid":1026224,"ctime":1656597478,"ip_address":"","comment_id":350105,"utype":1}],"discussion_count":1,"race_medal":0,"score":6,"product_id":100093501,"comment_content":"以前在这个地方就卡住了，这下就通畅了","like_count":1,"discussions":[{"author":{"id":1026224,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/a8/b0/6f87ab08.jpg","nickname":"Tony Bai","note":"","ucode":"B6B08985F6FA89","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":578238,"discussion_content":"👍","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1656597478,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":348766,"user_name":"葛云龙","can_delete":false,"product_type":"c1","uid":2961265,"ip_address":"","ucode":"A52EE523F92A31","user_header":"","comment_is_top":false,"comment_ctime":1655374640,"is_pvip":false,"replies":[{"id":127030,"content":"没遇到过你这种问题。你的GOPROXY环境变量配置的是什么？go版本是？","user_name":"作者回复","user_name_real":"编辑","uid":1026224,"ctime":1655704242,"ip_address":"","comment_id":348766,"utype":1}],"discussion_count":1,"race_medal":0,"score":6,"product_id":100093501,"comment_content":"提问：使用golang工具，执行go mod tidy  会出现 github.com&#47;google&#47;uuid: module github.com&#47;google&#47;uuid: Get &quot;https:&#47;&#47;github.com&#47;github.com&#47;google&#47;uuid&#47;@v&#47;list&quot;:    \n为什么get地址会有两个github.com&#47;\n获取数据就会失败，用go get 命令是可以下载下来uuid的，希望可以得到如何解决这个问题的方法步骤","like_count":1,"discussions":[{"author":{"id":1026224,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/a8/b0/6f87ab08.jpg","nickname":"Tony Bai","note":"","ucode":"B6B08985F6FA89","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":576616,"discussion_content":"没遇到过你这种问题。你的GOPROXY环境变量配置的是什么？go版本是？","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1655704242,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":346696,"user_name":"Geek_244c46","can_delete":false,"product_type":"c1","uid":2034469,"ip_address":"","ucode":"419D97DA9F1F9B","user_header":"","comment_is_top":false,"comment_ctime":1653364178,"is_pvip":false,"replies":[{"id":126447,"content":"你用的go版本是go 1.18? 如果是，看看https:&#47;&#47;stackoverflow.com&#47;questions&#47;71507321&#47;go-1-18-build-error-on-mac-unix-syscall-darwin-1-13-go253-golinkname-mus  \n这个和你问题类似。\n\n试试\ngo get golang.org&#47;x&#47;sys@latest\n\n将x&#47;sys升到最新版。","user_name":"作者回复","user_name_real":"编辑","uid":1026224,"ctime":1653381331,"ip_address":"","comment_id":346696,"utype":1}],"discussion_count":1,"race_medal":0,"score":6,"product_id":100093501,"comment_content":"我这边输入go build指令后，报错了，这是什么原因呢，go.mod中的内容都是一致的\n# golang.org&#47;x&#47;sys&#47;unix\n..&#47;..&#47;go&#47;pkg&#47;mod&#47;golang.org&#47;x&#47;sys@v0.0.0-20191026070338-33540a1f6037&#47;unix&#47;syscall_darwin.1_13.go:25:3: &#47;&#47;go:linkname must refer to declared function or variable\n..&#47;..&#47;go&#47;pkg&#47;mod&#47;golang.org&#47;x&#47;sys@v0.0.0-20191026070338-33540a1f6037&#47;unix&#47;zsyscall_darwin_amd64.1_13.go:27:3: &#47;&#47;go:linkname must refer to declared function or variable\n..&#47;..&#47;go&#47;pkg&#47;mod&#47;golang.org&#47;x&#47;sys@v0.0.0-20191026070338-33540a1f6037&#47;unix&#47;zsyscall_darwin_amd64.1_13.go:40:3: &#47;&#47;go:linkname must refer to declared function or variable\n..&#47;..&#47;go&#47;pkg&#47;mod&#47;golang.org&#47;x&#47;sys@v0.0.0-20191026070338-33540a1f6037&#47;unix&#47;zsyscall_darwin_amd64.go:28:3: &#47;&#47;go:linkname must refer to declared function or variable\n..&#47;..&#47;go&#47;pkg&#47;mod&#47;golang.org&#47;x&#47;sys@v0.0.0-20191026070338-33540a1f6037&#47;unix&#47;zsyscall_darwin_amd64.go:43:3: &#47;&#47;go:linkname must refer to declared function or variable\n..&#47;..&#47;go&#47;pkg&#47;mod&#47;golang.org&#47;x&#47;sys@v0.0.0-20191026070338-33540a1f6037&#47;unix&#47;zsyscall_darwin_amd64.go:59:3: &#47;&#47;go:linkname must refer to declared function or variable\n..&#47;..&#47;go&#47;pkg&#47;mod&#47;golang.org&#47;x&#47;sys@v0.0.0-20191026070338-33540a1f6037&#47;unix&#47;zsyscall_darwin_amd64.go:75:3: &#47;&#47;go:linkname must refer to declared function or variable\n..&#47;..&#47;go&#47;pkg&#47;mod&#47;golang.org&#47;x&#47;sys@v0.0.0-20191026070338-33540a1f6037&#47;unix&#47;zsyscall_darwin_amd64.go:90:3: &#47;&#47;go:linkname must refer to declared function or variable\n..&#47;..&#47;go&#47;pkg&#47;mod&#47;golang.org&#47;x&#47;sys@v0.0.0-20191026070338-33540a1f6037&#47;unix&#47;zsyscall_darwin_amd64.go:105:3: &#47;&#47;go:linkname must refer to declared function or variable\n..&#47;..&#47;go&#47;pkg&#47;mod&#47;golang.org&#47;x&#47;sys@v0.0.0-20191026070338-33540a1f6037&#47;unix&#47;zsyscall_darwin_amd64.go:121:3: &#47;&#47;go:linkname must refer to declared function or variable\n..&#47;..&#47;go&#47;pkg&#47;mod&#47;golang.org&#47;x&#47;sys@v0.0.0-20191026070338-33540a1f6037&#47;unix&#47;zsyscall_darwin_amd64.go:121:3: too many errors\n","like_count":1,"discussions":[{"author":{"id":1026224,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/a8/b0/6f87ab08.jpg","nickname":"Tony Bai","note":"","ucode":"B6B08985F6FA89","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":573374,"discussion_content":"你用的go版本是go 1.18? 如果是，看看https://stackoverflow.com/questions/71507321/go-1-18-build-error-on-mac-unix-syscall-darwin-1-13-go253-golinkname-mus  \n这个和你问题类似。\n\n试试\ngo get golang.org/x/sys@latest\n\n将x/sys升到最新版。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1653381331,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":340648,"user_name":"瓜牛","can_delete":false,"product_type":"c1","uid":2273620,"ip_address":"","ucode":"5EB7D2F4400A70","user_header":"https://static001.geekbang.org/account/avatar/00/22/b1/54/6d663b95.jpg","comment_is_top":false,"comment_ctime":1648992956,"is_pvip":false,"replies":[{"id":124591,"content":"go mod会缓存logrus的不同版本。这样不同项目依赖logrus包的不同版本不会产生冲突。","user_name":"作者回复","user_name_real":"编辑","uid":1026224,"ctime":1649120621,"ip_address":"","comment_id":340648,"utype":1}],"discussion_count":2,"race_medal":0,"score":6,"product_id":100093501,"comment_content":"go mod tidy会把第三方包缓存到本地，那不同项目依赖同一个第三方包logrus的不同版本，是如何缓存的呢？","like_count":1,"discussions":[{"author":{"id":1026224,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/a8/b0/6f87ab08.jpg","nickname":"Tony Bai","note":"","ucode":"B6B08985F6FA89","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":560005,"discussion_content":"go mod会缓存logrus的不同版本。这样不同项目依赖logrus包的不同版本不会产生冲突。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1649120621,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1035064,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/cb/38/4c9cfdf4.jpg","nickname":"谢小路","note":"","ucode":"C9FE2EB10DC105","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":566701,"discussion_content":"可以看看 $GOPATH/pkg/mod 目录。","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1650730845,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":335905,"user_name":"pyhhou","can_delete":false,"product_type":"c1","uid":1256496,"ip_address":"","ucode":"31EF8D50CF91A5","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/ibZVAmmdAibBeVpUjzwId8ibgRzNk7fkuR5pgVicB5mFSjjmt2eNadlykVLKCyGA0GxGffbhqLsHnhDRgyzxcKUhjg/132","comment_is_top":false,"comment_ctime":1645764740,"is_pvip":false,"replies":[{"id":122779,"content":"为什么要把第三方包放入项目根目录的指定文件夹中呢？没这个必要啊。你想把它们提交到项目代码仓库中？","user_name":"作者回复","user_name_real":"编辑","uid":1026224,"ctime":1645837943,"ip_address":"","comment_id":335905,"utype":1}],"discussion_count":2,"race_medal":0,"score":6,"product_id":100093501,"comment_content":"老师，还是之前的一个问题有点不理解，还望指教\n\n如果想要实现前面说的项目结构，在使用 `go mod tidy` 构建依赖时，想把第三方包存放在项目根目录下的指定文件夹中，比如 pkgN&#47; 或者 internal&#47;。那么我们是不是得需要改变 GOMODCACHE （&gt;= 1.15）或者 GOPATH。或者说有其他的工具进行辅助？","like_count":1,"discussions":[{"author":{"id":1026224,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/a8/b0/6f87ab08.jpg","nickname":"Tony Bai","note":"","ucode":"B6B08985F6FA89","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":553302,"discussion_content":"为什么要把第三方包放入项目根目录的指定文件夹中呢？没这个必要啊。你想把它们提交到项目代码仓库中？","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1645837943,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1256496,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/ibZVAmmdAibBeVpUjzwId8ibgRzNk7fkuR5pgVicB5mFSjjmt2eNadlykVLKCyGA0GxGffbhqLsHnhDRgyzxcKUhjg/132","nickname":"pyhhou","note":"","ucode":"31EF8D50CF91A5","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":553506,"discussion_content":"了解了，原来之前我们说的 pkgN/ 以及 internal/ 是指的是当前项目的源代码，并非需要下载的第三方依赖","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1645938689,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":332136,"user_name":"运维夜谈","can_delete":false,"product_type":"c1","uid":1054300,"ip_address":"","ucode":"E2E93375FF5A07","user_header":"https://static001.geekbang.org/account/avatar/00/10/16/5c/d0476f9f.jpg","comment_is_top":false,"comment_ctime":1643036786,"is_pvip":true,"replies":[{"id":121615,"content":"显式通过go get 降级版本","user_name":"作者回复","user_name_real":"编辑","uid":1026224,"ctime":1643542651,"ip_address":"","comment_id":332136,"utype":1}],"discussion_count":2,"race_medal":0,"score":6,"product_id":100093501,"comment_content":"老师，请教一个问题，就是Go的语义导入版本机制，只能用来限定Go导入的依赖包的主版本，但对于同一个主版本的不同版本，比如1.17.0和1.18.0，我们直接import &quot;github.com&#47;sirupsen&#47;logrus&quot;，Go其实会去下载最新版本的logrus，那如果我们想要导入1.17.0版本怎么办？","like_count":1,"discussions":[{"author":{"id":1026224,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/a8/b0/6f87ab08.jpg","nickname":"Tony Bai","note":"","ucode":"B6B08985F6FA89","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":549075,"discussion_content":"显式通过go get 降级版本","likes_number":2,"is_delete":false,"is_hidden":false,"ctime":1643542651,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1035064,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/cb/38/4c9cfdf4.jpg","nickname":"谢小路","note":"","ucode":"C9FE2EB10DC105","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":566705,"discussion_content":"go get 下载第三方包，默认是会下载最新版本。不过可以指定版本下载，go get github.com/sirupsen/logrus@v.17.0   甚至可以指定分支下载 go get github.com/sirupsen/logrus@dev  ","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1650731156,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":322060,"user_name":"kkxue","can_delete":false,"product_type":"c1","uid":1159904,"ip_address":"","ucode":"0DCB861D5543D6","user_header":"https://static001.geekbang.org/account/avatar/00/11/b2/e0/bf56878a.jpg","comment_is_top":false,"comment_ctime":1637150774,"is_pvip":false,"replies":[{"id":117143,"content":"欢迎捧场:)","user_name":"作者回复","user_name_real":"编辑","uid":1026224,"ctime":1637558258,"ip_address":"","comment_id":322060,"utype":1}],"discussion_count":1,"race_medal":5,"score":6,"product_id":100093501,"comment_content":"买这个课程的目的达到了，入门篇太赞了","like_count":1,"discussions":[{"author":{"id":1026224,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/a8/b0/6f87ab08.jpg","nickname":"Tony Bai","note":"","ucode":"B6B08985F6FA89","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":532217,"discussion_content":"欢迎捧场:)","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1637558258,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":322000,"user_name":"Noir","can_delete":false,"product_type":"c1","uid":1186981,"ip_address":"","ucode":"985D4C4A5E1E85","user_header":"https://static001.geekbang.org/account/avatar/00/12/1c/a5/226ce8a7.jpg","comment_is_top":false,"comment_ctime":1637132862,"is_pvip":false,"replies":[{"id":117140,"content":"1. 没有必要\n2. 不会去拉取。因为go命令会识别出你的代码就在你的本地module下面。","user_name":"作者回复","user_name_real":"编辑","uid":1026224,"ctime":1637556574,"ip_address":"","comment_id":322000,"utype":1}],"discussion_count":1,"race_medal":0,"score":6,"product_id":100093501,"comment_content":"1. 要是自己写的程序，module path 有必要采用 github.com&#47;xxx 作为前缀吗？\n2. 在自己的项目中，要是采用 import &quot;github.com&#47;xxx&quot; 岂不是会主动去 github.com 上面拉取。而不使用自己项目中的 xxx (比如：&#47;PATH&#47;TO&#47;PROJECT&#47;xxx 中) ？","like_count":1,"discussions":[{"author":{"id":1026224,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/a8/b0/6f87ab08.jpg","nickname":"Tony Bai","note":"","ucode":"B6B08985F6FA89","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":532217,"discussion_content":"欢迎捧场:)","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1637558258,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":318644,"user_name":"Dunbreak","can_delete":false,"product_type":"c1","uid":1155210,"ip_address":"","ucode":"A64010733754BF","user_header":"https://static001.geekbang.org/account/avatar/00/11/a0/8a/69f4023c.jpg","comment_is_top":false,"comment_ctime":1635382047,"is_pvip":false,"replies":[{"id":115637,"content":"如果现在B依赖的不是v1.3.0而是v2.3.0， 那最终go会选择C v1.1.0和Cv2.3.0，这两个都会下载到本地并链接到最终程序中。因为根据go的语义导入版本的规则，不同major号的module就是不同的module。\n\n那如果我现在依赖了100个包，那是不是最多会有100的不同的版本？--- 这个能再具体一点么？","user_name":"作者回复","user_name_real":"Tony Bai","uid":1026224,"ctime":1635571031,"ip_address":"","comment_id":318644,"utype":1}],"discussion_count":2,"race_medal":0,"score":6,"product_id":100093501,"comment_content":"我有一个问题，在包依赖引用那一节，您说的是A和B依赖C的v1.1.0和v1.3.0版本，这种版本依赖很好理解。但是按照上述的V1和V2不同的原则，如果现在B依赖的不是v1.3.0而是v2.3.0，那我现在项目里引用的C到底是哪个版本？以最小依赖版本我应该依赖v2.3.0，但是又根据主版本号相互不兼容原则，v1和v2又不兼容，那这不是乱套了？难道我的项目里现在要同时下载C包的v1.1.0和v2.3.0吗？那如果我现在依赖了100个包，那是不是最多会有100的不同的版本？","like_count":1,"discussions":[{"author":{"id":1026224,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/a8/b0/6f87ab08.jpg","nickname":"Tony Bai","note":"","ucode":"B6B08985F6FA89","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":532210,"discussion_content":"1. 没有必要\n2. 不会去拉取。因为go命令会识别出你的代码就在你的本地module下面。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1637556574,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":318299,"user_name":"python玩家一枚","can_delete":false,"product_type":"c1","uid":1709839,"ip_address":"","ucode":"6D9C988960BFE5","user_header":"https://static001.geekbang.org/account/avatar/00/1a/17/0f/2a35eb18.jpg","comment_is_top":false,"comment_ctime":1635235561,"is_pvip":false,"replies":[{"id":115589,"content":"1. go module构建模式不要求你自己的项目必须放在gopath&#47;src下；任意目录都可以。\n2. go mod init github.com&#47;bigwhite&#47;module-mode 这里是在module-mode目录执行的吗？ -- 在你的项目根目录下执行就行。你的项目目录可以是任意目录名。","user_name":"作者回复","user_name_real":"Tony Bai","uid":1026224,"ctime":1635456031,"ip_address":"","comment_id":318299,"utype":1}],"discussion_count":1,"race_medal":0,"score":6,"product_id":100093501,"comment_content":"老师您好，大概一个月前开始看go的书籍的，开始看的时候就构建项目纠结了很久，已经有的书籍基本上用的都是老方法gopath样式的pkg src bin 三件套，新的包括goland也是一个mod解决，然后又在一些书上看到说建议自己的项目按照github.com&#47;xxxx&#47;yyyy这种方式去建，还有又说最好是新版方式mod的也是放在gopath的src里面去玩，众说纷纭吧，这里有一些疑惑想请教下了，一般下载的三方依赖github.com&#47;啥啥啥&#47;这种也会被丢在gopath的src，那么自己的项目也叫github.com&#47;XXX样式都放在src吗。。。？再就是您go mod init github.com&#47;bigwhite&#47;module-mode 这里是在module-mode目录执行的吗，我记得在哪里看到go mod init 如果不在gopath下面没法这么执行 只能go mod init；","like_count":1,"discussions":[{"author":{"id":1026224,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/a8/b0/6f87ab08.jpg","nickname":"Tony Bai","note":"","ucode":"B6B08985F6FA89","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":409968,"discussion_content":"如果B依赖的是C v2.3.0，那么B导入C的语句就是 import c/v2，而A依赖的是v1.1.0，那么A导入c的语句就是import c，这两个是可以共存的啊。于是你在go.mod中看到的既有c，也有c/v2，它们可以理解为两个不同的module。","likes_number":7,"is_delete":false,"is_hidden":false,"ctime":1635561922,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1026224,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/a8/b0/6f87ab08.jpg","nickname":"Tony Bai","note":"","ucode":"B6B08985F6FA89","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":529327,"discussion_content":"如果现在B依赖的不是v1.3.0而是v2.3.0， 那最终go会选择C v1.1.0和Cv2.3.0，这两个都会下载到本地并链接到最终程序中。因为根据go的语义导入版本的规则，不同major号的module就是不同的module。\n\n那如果我现在依赖了100个包，那是不是最多会有100的不同的版本？--- 这个能再具体一点么？","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1635571031,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":318155,"user_name":"lawliet","can_delete":false,"product_type":"c1","uid":1948862,"ip_address":"","ucode":"9284DCF335436E","user_header":"https://thirdwx.qlogo.cn/mmopen/vi_32/Q3auHgzwzM56UnXVeXoXbxUXJIPoK1uTtpo3icD7JibLQkqW63wtgFw47h0q9XLsysewnDZzh4RMNQDOzwsRuJ9A/132","comment_is_top":false,"comment_ctime":1635166062,"is_pvip":false,"replies":[{"id":115424,"content":"有全量命令执行与输出的日志么？","user_name":"作者回复","user_name_real":"Tony Bai","uid":1026224,"ctime":1635236013,"ip_address":"","comment_id":318155,"utype":1}],"discussion_count":2,"race_medal":0,"score":7,"product_id":100093501,"comment_content":"error while importing github.com&#47;sirupsen&#47;logrus: missing go.sum entry for module providing package golang.org&#47;x&#47;sys&#47;unix (imported by github.com&#47;sirupsen&#47;logrus); to add:\n\tgo get github.com&#47;sirupsen&#47;logrus@v1.8.1\n\n请问go mod tidy后还是会报错，但是能正常运行","like_count":1},{"had_liked":false,"id":318123,"user_name":"Bynow","can_delete":false,"product_type":"c1","uid":2735072,"ip_address":"","ucode":"1E4F3ADD65CF18","user_header":"https://static001.geekbang.org/account/avatar/00/29/bb/e0/c7cd5170.jpg","comment_is_top":false,"comment_ctime":1635156202,"is_pvip":false,"replies":[{"id":115379,"content":"感谢支持:)","user_name":"作者回复","user_name_real":"Tony Bai","uid":1026224,"ctime":1635215726,"ip_address":"","comment_id":318123,"utype":1}],"discussion_count":1,"race_medal":0,"score":7,"product_id":100093501,"comment_content":"热乎，讲的真好。","like_count":1,"discussions":[{"author":{"id":1026224,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/a8/b0/6f87ab08.jpg","nickname":"Tony Bai","note":"","ucode":"B6B08985F6FA89","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":529122,"discussion_content":"有全量命令执行与输出的日志么？","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1635236013,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1363671,"avatar":"https://static001.geekbang.org/account/avatar/00/14/ce/d7/5315f6ce.jpg","nickname":"不负青春不负己🤘","note":"","ucode":"A6DD8E8B20EA6E","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":408127,"discussion_content":"我也遇到了，应该是IDE Goland 有关","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1635176280,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":318119,"user_name":"奕","can_delete":false,"product_type":"c1","uid":1005391,"ip_address":"","ucode":"73CEA468CE70C3","user_header":"https://static001.geekbang.org/account/avatar/00/0f/57/4f/6fb51ff1.jpg","comment_is_top":false,"comment_ctime":1635155481,"is_pvip":false,"replies":[{"id":115380,"content":"别急，07讲会给你答案。","user_name":"作者回复","user_name_real":"Tony Bai","uid":1026224,"ctime":1635215755,"ip_address":"","comment_id":318119,"utype":1}],"discussion_count":3,"race_medal":0,"score":7,"product_id":100093501,"comment_content":"怎么指定自己开发 moduel 的版本呢？","like_count":1,"discussions":[{"author":{"id":1026224,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/a8/b0/6f87ab08.jpg","nickname":"Tony Bai","note":"","ucode":"B6B08985F6FA89","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":529112,"discussion_content":"感谢支持:)","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1635215726,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":395564,"user_name":"Vincent","can_delete":false,"product_type":"c1","uid":1110967,"ip_address":"北京","ucode":"A14BA4C418315F","user_header":"https://static001.geekbang.org/account/avatar/00/10/f3/b7/d7377f0c.jpg","comment_is_top":false,"comment_ctime":1731244116,"is_pvip":false,"replies":[{"id":143640,"content":"test what?😁","user_name":"作者回复","user_name_real":"编辑","uid":1026224,"ctime":1731400755,"ip_address":"北京","comment_id":395564,"utype":1}],"discussion_count":1,"race_medal":0,"score":7,"product_id":100093501,"comment_content":"test","like_count":0,"discussions":[{"author":{"id":1026224,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/a8/b0/6f87ab08.jpg","nickname":"Tony Bai","note":"","ucode":"B6B08985F6FA89","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":529110,"discussion_content":"别急，07讲会给你答案。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1635215755,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1031828,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/DYAIOgq83erEHTaQDkWqEYib9iabib8rACYpSFBHTPFmgicUKaib79MB6VIxNwiajHUS8kYFEKCGOjpibf0dibhIjqhfzg/132","nickname":"plh","note":"","ucode":"D79F2B87AC3AD2","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":532392,"discussion_content":"马上会遇到的问题。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1637591603,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"user_type\":1}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1351076,"avatar":"https://static001.geekbang.org/account/avatar/00/14/9d/a4/e481ae48.jpg","nickname":"lesserror","note":"","ucode":"25A54D1165FCF6","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":408123,"discussion_content":"git tag ?","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1635176144,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":395431,"user_name":"JIE_HENG","can_delete":false,"product_type":"c1","uid":4017609,"ip_address":"上海","ucode":"482B7C10A085D7","user_header":"https://static001.geekbang.org/account/avatar/00/3d/4d/c9/b6eb3a2c.jpg","comment_is_top":false,"comment_ctime":1730776406,"is_pvip":false,"replies":[{"id":143641,"content":"你的module是不是托管到github.com上？无论是私有库还是public的。如果是，那这么写就是ok的：github.com&#47;user&#47;repo\n\n如果你的module托管到gitee、gitlab或其他代码托管平台上，写法也是差不多的的。\n\n如果你的module在公司域名下面（即你的module有vanity url），比如example.com&#47;go&#47;modulename，那么就直接go mod init example.com&#47;go&#47;modulename\n\n如果你的module只是用作本地test或验证一些想法使用，你只需要go mod init demo即可。\n\ngo mod init xxx中的xxx只是你的module的module path，是其他人导入你的module中包时需要关注和使用的。\n\n当你使用example.com&#47;go&#47;modulename作为module path，其他人导入你的包时，就需要写import &quot;example.com&#47;go&#47;modulename&quot;, that is all.","user_name":"作者回复","user_name_real":"作者","uid":1026224,"ctime":1731401582,"ip_address":"北京","comment_id":395431,"utype":1}],"discussion_count":1,"race_medal":0,"score":7,"product_id":100093501,"comment_content":"go mod init github.com&#47;bigwhite&#47;module-mode\n\n还是理解不了这个路径实际开发中怎么写，我实际代码在git肯定不是github.com这个吧 肯定是一个具体的路径，那都是github.com这样写吗 还是写实际的git路径，还有我定义这个路径 在多人开发的时候不会变来变去，其他同学拉代码 这个mod地址是不是不需要变了。","like_count":0,"discussions":[{"author":{"id":1026224,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/a8/b0/6f87ab08.jpg","nickname":"Tony Bai","note":"","ucode":"B6B08985F6FA89","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":653697,"discussion_content":"test what?😁","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1731400756,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"北京","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2,\"source\":0}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":395159,"user_name":"VICI-Gong","can_delete":false,"product_type":"c1","uid":1033437,"ip_address":"上海","ucode":"5638966FA5E5DF","user_header":"https://static001.geekbang.org/account/avatar/00/0f/c4/dd/641e4482.jpg","comment_is_top":false,"comment_ctime":1729645892,"is_pvip":false,"replies":[{"id":143490,"content":"😄","user_name":"作者回复","user_name_real":"编辑","uid":1026224,"ctime":1729690928,"ip_address":"辽宁","comment_id":395159,"utype":1}],"discussion_count":1,"race_medal":0,"score":7,"product_id":100093501,"comment_content":"讲的挺清晰的","like_count":0,"discussions":[{"author":{"id":1026224,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/a8/b0/6f87ab08.jpg","nickname":"Tony Bai","note":"","ucode":"B6B08985F6FA89","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":653698,"discussion_content":"你的module是不是托管到github.com上？无论是私有库还是public的。如果是，那这么写就是ok的：github.com/user/repo\n\n如果你的module托管到gitee、gitlab或其他代码托管平台上，写法也是差不多的的。\n\n如果你的module在公司域名下面（即你的module有vanity url），比如example.com/go/modulename，那么就直接go mod init example.com/go/modulename\n\n如果你的module只是用作本地test或验证一些想法使用，你只需要go mod init demo即可。\n\ngo mod init xxx中的xxx只是你的module的module path，是其他人导入你的module中包时需要关注和使用的。\n\n当你使用example.com/go/modulename作为module path，其他人导入你的包时，就需要写import \"example.com/go/modulename\", that is all.","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1731401582,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"北京","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2,\"source\":0}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":395026,"user_name":"酒曲流苏","can_delete":false,"product_type":"c1","uid":2457530,"ip_address":"广东","ucode":"504E70803E10AB","user_header":"https://static001.geekbang.org/account/avatar/00/25/7f/ba/d43b1073.jpg","comment_is_top":false,"comment_ctime":1729134883,"is_pvip":false,"replies":[{"id":143491,"content":"一般构建指的是使用go build对module进行编译，如果是work module恰好是main包，则会编译为可执行程序。\n\n而go build main.go 只是等价某个module下面仅有一个main.go的情况。当module的根路径下有其他go源文件或有其他go包（子目录下）时，且main.go依赖这些文件中的符号或包时，go build main.go只是编译一个源文件，便会编译失败。而go build编译的是整个module，go编译器会自动分析依赖。","user_name":"作者回复","user_name_real":"编辑","uid":1026224,"ctime":1729691249,"ip_address":"辽宁","comment_id":395026,"utype":1}],"discussion_count":1,"race_medal":0,"score":7,"product_id":100093501,"comment_content":"接下来，我们只需在当前 module 的根路径下，执行 go build 就可以完成 module 的构建了！\n我实际测试了下， 执行 go build main.go 后，运行 .&#47;main 的效果也是相同的。\n请问老师 module 的构建，为什么不使用 go build main.go 呢？","like_count":0,"discussions":[{"author":{"id":1026224,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/a8/b0/6f87ab08.jpg","nickname":"Tony Bai","note":"","ucode":"B6B08985F6FA89","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":652829,"discussion_content":"😄","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1729690928,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"辽宁","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2,\"source\":0}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":393017,"user_name":"ゝ骑着小车去兜风。","can_delete":false,"product_type":"c1","uid":2600957,"ip_address":"陕西","ucode":"35F9E5360DF42C","user_header":"https://static001.geekbang.org/account/avatar/00/27/af/fd/a1708649.jpg","comment_is_top":false,"comment_ctime":1722496801,"is_pvip":false,"replies":[{"id":142759,"content":"都2024年了，还在用gopath，个人建议先让其他组的人从gopath改为go module，后面自然就好办了。你懂的:)","user_name":"作者回复","user_name_real":"编辑","uid":1026224,"ctime":1722781413,"ip_address":"辽宁","comment_id":393017,"utype":1}],"discussion_count":1,"race_medal":0,"score":7,"product_id":100093501,"comment_content":"项目原先的目录结构是有多个子模块，每个子模块一个go module，而且还有模块是采用GOPATH构建。现在计划将原先的多个go module子模块构建方式整合成一个go module放在项目根目录下，但是又不能影响到其他采用GOPATH构建的子模块(因为这个模块是其他项目组的代码)，回来重温下老师的这部分内容，看看有没有什么方式来处理。","like_count":0,"discussions":[{"author":{"id":1026224,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/a8/b0/6f87ab08.jpg","nickname":"Tony Bai","note":"","ucode":"B6B08985F6FA89","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":652830,"discussion_content":"一般构建指的是使用go build对module进行编译，如果是work module恰好是main包，则会编译为可执行程序。\n\n而go build main.go 只是等价某个module下面仅有一个main.go的情况。当module的根路径下有其他go源文件或有其他go包（子目录下）时，且main.go依赖这些文件中的符号或包时，go build main.go只是编译一个源文件，便会编译失败。而go build编译的是整个module，go编译器会自动分析依赖。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1729691249,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"辽宁","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2,\"source\":0}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":390348,"user_name":"人言有力","can_delete":false,"product_type":"c1","uid":1690736,"ip_address":"浙江","ucode":"3708FBBFB641FE","user_header":"https://static001.geekbang.org/account/avatar/00/19/cc/70/64045bc0.jpg","comment_is_top":false,"comment_ctime":1715180643,"is_pvip":false,"replies":[{"id":142012,"content":"第一点提到的“确保可测性”非常赞！","user_name":"作者回复","user_name_real":"编辑","uid":1026224,"ctime":1715262567,"ip_address":"辽宁","comment_id":390348,"utype":1}],"discussion_count":1,"race_medal":0,"score":7,"product_id":100093501,"comment_content":"#思考题：如何将GOPATH模式的项目迁移到GOMODULE模式？\n答：\n1. 迁移首先确保可测性，尤其是生产级项目。先找好测试用例BAT，在迁移前后都可以正常运行通过\n2. 确保Go版本在1.11以上支持GOMODULE，最好是最新版本\n3. 设置GO111MODULE=on或者auto，开启GOMODULE\n4. 通过go mod init命令创建go.mod文件\n5. 通过go mod tidy下载依赖\n6. 通过go build确保构建成功\n7. 测试环境运行BAT用例通过 ","like_count":0,"discussions":[{"author":{"id":1026224,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/a8/b0/6f87ab08.jpg","nickname":"Tony Bai","note":"","ucode":"B6B08985F6FA89","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":649103,"discussion_content":"都2024年了，还在用gopath，个人建议先让其他组的人从gopath改为go module，后面自然就好办了。你懂的:)","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1722781413,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"辽宁","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2,\"source\":0}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":388173,"user_name":"Geek_3d0fe8","can_delete":false,"product_type":"c1","uid":3794407,"ip_address":"广东","ucode":"E75EACDA00E7A6","user_header":"","comment_is_top":false,"comment_ctime":1709557523,"is_pvip":false,"replies":[{"id":141405,"content":"“C 的版本号没有遵守语义化版本规范”这句如何理解？是C的版本号就没有按照语义化版本规范命名？还是按照语义版本规范命名了，但实质上对语义版本的使用不对，即便产生了break change，仍然不升级major版本号？","user_name":"作者回复","user_name_real":"编辑","uid":1026224,"ctime":1709986045,"ip_address":"辽宁","comment_id":388173,"utype":1}],"discussion_count":1,"race_medal":0,"score":7,"product_id":100093501,"comment_content":"请教个实际遇到的问题， A 项目直接依赖了 B 和 C（x版本），  B 也依赖了 C（y版本）， 但是 C 的版本号没有遵守语义化版本规范，那么实际上A项目会选用C的哪个版本？","like_count":0,"discussions":[{"author":{"id":1026224,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/a8/b0/6f87ab08.jpg","nickname":"Tony Bai","note":"","ucode":"B6B08985F6FA89","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":644473,"discussion_content":"第一点提到的“确保可测性”非常赞！","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1715262567,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"辽宁","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2,\"source\":0}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":318155,"user_name":"lawliet","can_delete":false,"product_type":"c1","uid":1948862,"ip_address":"","ucode":"9284DCF335436E","user_header":"https://thirdwx.qlogo.cn/mmopen/vi_32/Q3auHgzwzM56UnXVeXoXbxUXJIPoK1uTtpo3icD7JibLQkqW63wtgFw47h0q9XLsysewnDZzh4RMNQDOzwsRuJ9A/132","comment_is_top":false,"comment_ctime":1635166062,"is_pvip":false,"replies":[{"id":115424,"content":"有全量命令执行与输出的日志么？","user_name":"作者回复","user_name_real":"Tony Bai","uid":1026224,"ctime":1635236013,"ip_address":"","comment_id":318155,"utype":1}],"discussion_count":2,"race_medal":0,"score":7,"product_id":100093501,"comment_content":"error while importing github.com&#47;sirupsen&#47;logrus: missing go.sum entry for module providing package golang.org&#47;x&#47;sys&#47;unix (imported by github.com&#47;sirupsen&#47;logrus); to add:\n\tgo get github.com&#47;sirupsen&#47;logrus@v1.8.1\n\n请问go mod tidy后还是会报错，但是能正常运行","like_count":1,"discussions":[{"author":{"id":1026224,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/a8/b0/6f87ab08.jpg","nickname":"Tony Bai","note":"","ucode":"B6B08985F6FA89","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":529122,"discussion_content":"有全量命令执行与输出的日志么？","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1635236013,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1363671,"avatar":"https://static001.geekbang.org/account/avatar/00/14/ce/d7/5315f6ce.jpg","nickname":"不负青春不负己🤘","note":"","ucode":"A6DD8E8B20EA6E","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":408127,"discussion_content":"我也遇到了，应该是IDE Goland 有关","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1635176280,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":318123,"user_name":"Bynow","can_delete":false,"product_type":"c1","uid":2735072,"ip_address":"","ucode":"1E4F3ADD65CF18","user_header":"https://static001.geekbang.org/account/avatar/00/29/bb/e0/c7cd5170.jpg","comment_is_top":false,"comment_ctime":1635156202,"is_pvip":false,"replies":[{"id":115379,"content":"感谢支持:)","user_name":"作者回复","user_name_real":"Tony Bai","uid":1026224,"ctime":1635215726,"ip_address":"","comment_id":318123,"utype":1}],"discussion_count":1,"race_medal":0,"score":7,"product_id":100093501,"comment_content":"热乎，讲的真好。","like_count":1,"discussions":[{"author":{"id":1026224,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/a8/b0/6f87ab08.jpg","nickname":"Tony Bai","note":"","ucode":"B6B08985F6FA89","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":529112,"discussion_content":"感谢支持:)","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1635215726,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":318119,"user_name":"奕","can_delete":false,"product_type":"c1","uid":1005391,"ip_address":"","ucode":"73CEA468CE70C3","user_header":"https://static001.geekbang.org/account/avatar/00/0f/57/4f/6fb51ff1.jpg","comment_is_top":false,"comment_ctime":1635155481,"is_pvip":false,"replies":[{"id":115380,"content":"别急，07讲会给你答案。","user_name":"作者回复","user_name_real":"Tony Bai","uid":1026224,"ctime":1635215755,"ip_address":"","comment_id":318119,"utype":1}],"discussion_count":3,"race_medal":0,"score":7,"product_id":100093501,"comment_content":"怎么指定自己开发 moduel 的版本呢？","like_count":1,"discussions":[{"author":{"id":1026224,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/a8/b0/6f87ab08.jpg","nickname":"Tony Bai","note":"","ucode":"B6B08985F6FA89","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":529110,"discussion_content":"别急，07讲会给你答案。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1635215755,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1031828,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/DYAIOgq83erEHTaQDkWqEYib9iabib8rACYpSFBHTPFmgicUKaib79MB6VIxNwiajHUS8kYFEKCGOjpibf0dibhIjqhfzg/132","nickname":"plh","note":"","ucode":"D79F2B87AC3AD2","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":532392,"discussion_content":"马上会遇到的问题。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1637591603,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"user_type\":1}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1351076,"avatar":"https://static001.geekbang.org/account/avatar/00/14/9d/a4/e481ae48.jpg","nickname":"lesserror","note":"","ucode":"25A54D1165FCF6","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":408123,"discussion_content":"git tag ?","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1635176144,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":395564,"user_name":"Vincent","can_delete":false,"product_type":"c1","uid":1110967,"ip_address":"北京","ucode":"A14BA4C418315F","user_header":"https://static001.geekbang.org/account/avatar/00/10/f3/b7/d7377f0c.jpg","comment_is_top":false,"comment_ctime":1731244116,"is_pvip":false,"replies":[{"id":143640,"content":"test what?😁","user_name":"作者回复","user_name_real":"编辑","uid":1026224,"ctime":1731400755,"ip_address":"北京","comment_id":395564,"utype":1}],"discussion_count":1,"race_medal":0,"score":7,"product_id":100093501,"comment_content":"test","like_count":0,"discussions":[{"author":{"id":1026224,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/a8/b0/6f87ab08.jpg","nickname":"Tony Bai","note":"","ucode":"B6B08985F6FA89","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":653697,"discussion_content":"test what?😁","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1731400756,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"北京","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2,\"source\":0}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":395431,"user_name":"JIE_HENG","can_delete":false,"product_type":"c1","uid":4017609,"ip_address":"上海","ucode":"482B7C10A085D7","user_header":"https://static001.geekbang.org/account/avatar/00/3d/4d/c9/b6eb3a2c.jpg","comment_is_top":false,"comment_ctime":1730776406,"is_pvip":false,"replies":[{"id":143641,"content":"你的module是不是托管到github.com上？无论是私有库还是public的。如果是，那这么写就是ok的：github.com&#47;user&#47;repo\n\n如果你的module托管到gitee、gitlab或其他代码托管平台上，写法也是差不多的的。\n\n如果你的module在公司域名下面（即你的module有vanity url），比如example.com&#47;go&#47;modulename，那么就直接go mod init example.com&#47;go&#47;modulename\n\n如果你的module只是用作本地test或验证一些想法使用，你只需要go mod init demo即可。\n\ngo mod init xxx中的xxx只是你的module的module path，是其他人导入你的module中包时需要关注和使用的。\n\n当你使用example.com&#47;go&#47;modulename作为module path，其他人导入你的包时，就需要写import &quot;example.com&#47;go&#47;modulename&quot;, that is all.","user_name":"作者回复","user_name_real":"作者","uid":1026224,"ctime":1731401582,"ip_address":"北京","comment_id":395431,"utype":1}],"discussion_count":1,"race_medal":0,"score":7,"product_id":100093501,"comment_content":"go mod init github.com&#47;bigwhite&#47;module-mode\n\n还是理解不了这个路径实际开发中怎么写，我实际代码在git肯定不是github.com这个吧 肯定是一个具体的路径，那都是github.com这样写吗 还是写实际的git路径，还有我定义这个路径 在多人开发的时候不会变来变去，其他同学拉代码 这个mod地址是不是不需要变了。","like_count":0,"discussions":[{"author":{"id":1026224,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/a8/b0/6f87ab08.jpg","nickname":"Tony Bai","note":"","ucode":"B6B08985F6FA89","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":653698,"discussion_content":"你的module是不是托管到github.com上？无论是私有库还是public的。如果是，那这么写就是ok的：github.com/user/repo\n\n如果你的module托管到gitee、gitlab或其他代码托管平台上，写法也是差不多的的。\n\n如果你的module在公司域名下面（即你的module有vanity url），比如example.com/go/modulename，那么就直接go mod init example.com/go/modulename\n\n如果你的module只是用作本地test或验证一些想法使用，你只需要go mod init demo即可。\n\ngo mod init xxx中的xxx只是你的module的module path，是其他人导入你的module中包时需要关注和使用的。\n\n当你使用example.com/go/modulename作为module path，其他人导入你的包时，就需要写import \"example.com/go/modulename\", that is all.","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1731401582,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"北京","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2,\"source\":0}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":395159,"user_name":"VICI-Gong","can_delete":false,"product_type":"c1","uid":1033437,"ip_address":"上海","ucode":"5638966FA5E5DF","user_header":"https://static001.geekbang.org/account/avatar/00/0f/c4/dd/641e4482.jpg","comment_is_top":false,"comment_ctime":1729645892,"is_pvip":false,"replies":[{"id":143490,"content":"😄","user_name":"作者回复","user_name_real":"编辑","uid":1026224,"ctime":1729690928,"ip_address":"辽宁","comment_id":395159,"utype":1}],"discussion_count":1,"race_medal":0,"score":7,"product_id":100093501,"comment_content":"讲的挺清晰的","like_count":0,"discussions":[{"author":{"id":1026224,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/a8/b0/6f87ab08.jpg","nickname":"Tony Bai","note":"","ucode":"B6B08985F6FA89","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":652829,"discussion_content":"😄","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1729690928,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"辽宁","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2,\"source\":0}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":395026,"user_name":"酒曲流苏","can_delete":false,"product_type":"c1","uid":2457530,"ip_address":"广东","ucode":"504E70803E10AB","user_header":"https://static001.geekbang.org/account/avatar/00/25/7f/ba/d43b1073.jpg","comment_is_top":false,"comment_ctime":1729134883,"is_pvip":false,"replies":[{"id":143491,"content":"一般构建指的是使用go build对module进行编译，如果是work module恰好是main包，则会编译为可执行程序。\n\n而go build main.go 只是等价某个module下面仅有一个main.go的情况。当module的根路径下有其他go源文件或有其他go包（子目录下）时，且main.go依赖这些文件中的符号或包时，go build main.go只是编译一个源文件，便会编译失败。而go build编译的是整个module，go编译器会自动分析依赖。","user_name":"作者回复","user_name_real":"编辑","uid":1026224,"ctime":1729691249,"ip_address":"辽宁","comment_id":395026,"utype":1}],"discussion_count":1,"race_medal":0,"score":7,"product_id":100093501,"comment_content":"接下来，我们只需在当前 module 的根路径下，执行 go build 就可以完成 module 的构建了！\n我实际测试了下， 执行 go build main.go 后，运行 .&#47;main 的效果也是相同的。\n请问老师 module 的构建，为什么不使用 go build main.go 呢？","like_count":0,"discussions":[{"author":{"id":1026224,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/a8/b0/6f87ab08.jpg","nickname":"Tony Bai","note":"","ucode":"B6B08985F6FA89","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":652830,"discussion_content":"一般构建指的是使用go build对module进行编译，如果是work module恰好是main包，则会编译为可执行程序。\n\n而go build main.go 只是等价某个module下面仅有一个main.go的情况。当module的根路径下有其他go源文件或有其他go包（子目录下）时，且main.go依赖这些文件中的符号或包时，go build main.go只是编译一个源文件，便会编译失败。而go build编译的是整个module，go编译器会自动分析依赖。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1729691249,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"辽宁","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2,\"source\":0}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":393017,"user_name":"ゝ骑着小车去兜风。","can_delete":false,"product_type":"c1","uid":2600957,"ip_address":"陕西","ucode":"35F9E5360DF42C","user_header":"https://static001.geekbang.org/account/avatar/00/27/af/fd/a1708649.jpg","comment_is_top":false,"comment_ctime":1722496801,"is_pvip":false,"replies":[{"id":142759,"content":"都2024年了，还在用gopath，个人建议先让其他组的人从gopath改为go module，后面自然就好办了。你懂的:)","user_name":"作者回复","user_name_real":"编辑","uid":1026224,"ctime":1722781413,"ip_address":"辽宁","comment_id":393017,"utype":1}],"discussion_count":1,"race_medal":0,"score":7,"product_id":100093501,"comment_content":"项目原先的目录结构是有多个子模块，每个子模块一个go module，而且还有模块是采用GOPATH构建。现在计划将原先的多个go module子模块构建方式整合成一个go module放在项目根目录下，但是又不能影响到其他采用GOPATH构建的子模块(因为这个模块是其他项目组的代码)，回来重温下老师的这部分内容，看看有没有什么方式来处理。","like_count":0,"discussions":[{"author":{"id":1026224,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/a8/b0/6f87ab08.jpg","nickname":"Tony Bai","note":"","ucode":"B6B08985F6FA89","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":649103,"discussion_content":"都2024年了，还在用gopath，个人建议先让其他组的人从gopath改为go module，后面自然就好办了。你懂的:)","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1722781413,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"辽宁","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2,\"source\":0}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":390348,"user_name":"人言有力","can_delete":false,"product_type":"c1","uid":1690736,"ip_address":"浙江","ucode":"3708FBBFB641FE","user_header":"https://static001.geekbang.org/account/avatar/00/19/cc/70/64045bc0.jpg","comment_is_top":false,"comment_ctime":1715180643,"is_pvip":false,"replies":[{"id":142012,"content":"第一点提到的“确保可测性”非常赞！","user_name":"作者回复","user_name_real":"编辑","uid":1026224,"ctime":1715262567,"ip_address":"辽宁","comment_id":390348,"utype":1}],"discussion_count":1,"race_medal":0,"score":7,"product_id":100093501,"comment_content":"#思考题：如何将GOPATH模式的项目迁移到GOMODULE模式？\n答：\n1. 迁移首先确保可测性，尤其是生产级项目。先找好测试用例BAT，在迁移前后都可以正常运行通过\n2. 确保Go版本在1.11以上支持GOMODULE，最好是最新版本\n3. 设置GO111MODULE=on或者auto，开启GOMODULE\n4. 通过go mod init命令创建go.mod文件\n5. 通过go mod tidy下载依赖\n6. 通过go build确保构建成功\n7. 测试环境运行BAT用例通过 ","like_count":0,"discussions":[{"author":{"id":1026224,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/a8/b0/6f87ab08.jpg","nickname":"Tony Bai","note":"","ucode":"B6B08985F6FA89","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":644473,"discussion_content":"第一点提到的“确保可测性”非常赞！","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1715262567,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"辽宁","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2,\"source\":0}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":388173,"user_name":"Geek_3d0fe8","can_delete":false,"product_type":"c1","uid":3794407,"ip_address":"广东","ucode":"E75EACDA00E7A6","user_header":"","comment_is_top":false,"comment_ctime":1709557523,"is_pvip":false,"replies":[{"id":141405,"content":"“C 的版本号没有遵守语义化版本规范”这句如何理解？是C的版本号就没有按照语义化版本规范命名？还是按照语义版本规范命名了，但实质上对语义版本的使用不对，即便产生了break change，仍然不升级major版本号？","user_name":"作者回复","user_name_real":"编辑","uid":1026224,"ctime":1709986045,"ip_address":"辽宁","comment_id":388173,"utype":1}],"discussion_count":1,"race_medal":0,"score":7,"product_id":100093501,"comment_content":"请教个实际遇到的问题， A 项目直接依赖了 B 和 C（x版本），  B 也依赖了 C（y版本）， 但是 C 的版本号没有遵守语义化版本规范，那么实际上A项目会选用C的哪个版本？","like_count":0,"discussions":[{"author":{"id":1026224,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/a8/b0/6f87ab08.jpg","nickname":"Tony Bai","note":"","ucode":"B6B08985F6FA89","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":638840,"discussion_content":"“C 的版本号没有遵守语义化版本规范”这句如何理解？是C的版本号就没有按照语义化版本规范命名？还是按照语义版本规范命名了，但实质上对语义版本的使用不对，即便产生了break change，仍然不升级major版本号？","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1709986045,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"辽宁","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2,\"source\":0}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":377631,"user_name":"lufofire","can_delete":false,"product_type":"c1","uid":3218954,"ip_address":"新加坡","ucode":"CA12C6E772C7BD","user_header":"https://static001.geekbang.org/account/avatar/00/31/1e/0a/159b2129.jpg","comment_is_top":false,"comment_ctime":1688896044,"is_pvip":false,"replies":[{"id":137619,"content":"👍","user_name":"作者回复","user_name_real":"编辑","uid":1026224,"ctime":1688941859,"ip_address":"辽宁","comment_id":377631,"utype":1}],"discussion_count":1,"race_medal":0,"score":8,"product_id":100093501,"comment_content":"很简介， 满足工作需要","like_count":0},{"had_liked":false,"id":375118,"user_name":"维和土豆","can_delete":false,"product_type":"c1","uid":1347473,"ip_address":"上海","ucode":"94BCC5F48B268E","user_header":"https://static001.geekbang.org/account/avatar/00/14/8f/91/b4c3df48.jpg","comment_is_top":false,"comment_ctime":1684925446,"is_pvip":false,"replies":[{"id":136930,"content":"首先v1.7.0、v1.3.0和v1.1.0按照语义版本规范(Semver)是兼容的版本哦。\n\n按照你的假设，最初： A 依赖 C 的 v1.1.0 版本，而 B 依赖的是 C 的 v1.3.0 版本，此时myproject依赖的C版本会被mvs(最小版本选择)定为v1.3.0版本。\n\n如果A升级C的依赖版本为v1.7.0，此时B依赖C版本没变，仍是v1.3.0，那么mvs机制会为myproject选择C的版本为v1.7.0。\n\n要深入理解mvs，mvs指的是满足整个项目版本要求的最小版本。\n\nv1.1.0和v1.3.0：满足整个项目要求的是v1.3.0，即便目前C最新的是v1.7.0，go不会拉取最新版本。\n\nv1.7.0和v1.3.0：满足整个项目要求的是v1.7.0，只是恰好与C目前最新的版本一致了罢了。","user_name":"作者回复","user_name_real":"编辑","uid":1026224,"ctime":1685069147,"ip_address":"北京","comment_id":375118,"utype":1}],"discussion_count":1,"race_medal":1,"score":8,"product_id":100093501,"comment_content":"最小版本原则不会有问题吗？\nmyproject 有两个直接依赖 A 和 B，A 和 B 有一个共同的依赖包 C，但 A 依赖 C 的 v1.1.0 版本，而 B 依赖的是 C 的 v1.3.0 版本，并且此时 C 包的最新发布版为 C v1.7.0。\n如果A包调用C包最新的v1.7.0中的提供的某个方法，该方法在v1.3.0中并未提供，那不就报错了么？\n如果采用最大版本原则，则可以避免这个问题，感觉还是最大版本比较靠谱啊","like_count":0,"discussions":[{"author":{"id":1026224,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/a8/b0/6f87ab08.jpg","nickname":"Tony Bai","note":"","ucode":"B6B08985F6FA89","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":623006,"discussion_content":"👍","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1688941859,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"辽宁","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":344875,"user_name":"颜海航","can_delete":false,"product_type":"c1","uid":1308159,"ip_address":"","ucode":"5644F6328BF901","user_header":"https://static001.geekbang.org/account/avatar/00/13/f5/ff/523fb378.jpg","comment_is_top":false,"comment_ctime":1651830282,"is_pvip":false,"replies":[{"id":125915,"content":"什么叫本地不同的module?能具体一些吗，或举一个例子?","user_name":"作者回复","user_name_real":"编辑","uid":1026224,"ctime":1651973635,"ip_address":"","comment_id":344875,"utype":1}],"discussion_count":2,"race_medal":0,"score":8,"product_id":100093501,"comment_content":"本地不同的module怎么import","like_count":0,"discussions":[{"author":{"id":1026224,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/a8/b0/6f87ab08.jpg","nickname":"Tony Bai","note":"","ucode":"B6B08985F6FA89","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":619406,"discussion_content":"首先v1.7.0、v1.3.0和v1.1.0按照语义版本规范(Semver)是兼容的版本哦。\n\n按照你的假设，最初： A 依赖 C 的 v1.1.0 版本，而 B 依赖的是 C 的 v1.3.0 版本，此时myproject依赖的C版本会被mvs(最小版本选择)定为v1.3.0版本。\n\n如果A升级C的依赖版本为v1.7.0，此时B依赖C版本没变，仍是v1.3.0，那么mvs机制会为myproject选择C的版本为v1.7.0。\n\n要深入理解mvs，mvs指的是满足整个项目版本要求的最小版本。\n\nv1.1.0和v1.3.0：满足整个项目要求的是v1.3.0，即便目前C最新的是v1.7.0，go不会拉取最新版本。\n\nv1.7.0和v1.3.0：满足整个项目要求的是v1.7.0，只是恰好与C目前最新的版本一致了罢了。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1685069147,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"北京","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":337941,"user_name":"flexiver","can_delete":false,"product_type":"c1","uid":2889691,"ip_address":"","ucode":"5D83DFA90826E1","user_header":"","comment_is_top":false,"comment_ctime":1647168779,"is_pvip":false,"replies":[{"id":123636,"content":"同问题1的回答:)","user_name":"作者回复","user_name_real":"编辑","uid":1026224,"ctime":1647398140,"ip_address":"","comment_id":337941,"utype":1}],"discussion_count":3,"race_medal":0,"score":8,"product_id":100093501,"comment_content":"2、module path的前缀， 一定是github.com？是有什么规定或者协议要求吗？ 这个问题是接着第一个问题的，不小心点了提交。 ","like_count":0,"discussions":[{"author":{"id":1026224,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/a8/b0/6f87ab08.jpg","nickname":"Tony Bai","note":"","ucode":"B6B08985F6FA89","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":556479,"discussion_content":"同问题1的回答:)","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1647398140,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1035064,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/cb/38/4c9cfdf4.jpg","nickname":"谢小路","note":"","ucode":"C9FE2EB10DC105","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":566703,"discussion_content":"约定俗称的。如果是自己玩的项目，随便咋命名都没关系。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1650730925,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"","child_discussion_number":1,"child_discussions":[{"author":{"id":2713546,"avatar":"","nickname":"Geek_2c6fcd","note":"","ucode":"7A3AF7815351F8","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1035064,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/cb/38/4c9cfdf4.jpg","nickname":"谢小路","note":"","ucode":"C9FE2EB10DC105","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":574573,"discussion_content":"不通过它来定位源码库地址吗","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1654154827,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":566703,"ip_address":"","group_id":0},"score":574573,"extra":""}]}]},{"had_liked":false,"id":321691,"user_name":"多选参数","can_delete":false,"product_type":"c1","uid":1248326,"ip_address":"","ucode":"B2294D80AB075F","user_header":"https://static001.geekbang.org/account/avatar/00/13/0c/46/dfe32cf4.jpg","comment_is_top":false,"comment_ctime":1636995660,"is_pvip":false,"replies":[{"id":117130,"content":"如果要使用go module构建，没有go.mod肯定不行的，哪个版本都不行。","user_name":"作者回复","user_name_real":"编辑","uid":1026224,"ctime":1637551913,"ip_address":"","comment_id":321691,"utype":1}],"discussion_count":1,"race_medal":0,"score":8,"product_id":100093501,"comment_content":"我用的是 go 1.16 版本的，我在没有 go.mod 路径下执行 github.com&#47;sirupsen&#47;logrus 的时候都会报错，但是当我在有 go.mod 的路径下执行就可以下载到这个包。这个是因为 go 1.16 的问题嘛？我的 GO111MODULE 是 auto","like_count":0,"discussions":[{"author":{"id":1026224,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/a8/b0/6f87ab08.jpg","nickname":"Tony Bai","note":"","ucode":"B6B08985F6FA89","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":556479,"discussion_content":"同问题1的回答:)","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1647398140,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1035064,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/cb/38/4c9cfdf4.jpg","nickname":"谢小路","note":"","ucode":"C9FE2EB10DC105","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":566703,"discussion_content":"约定俗称的。如果是自己玩的项目，随便咋命名都没关系。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1650730925,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"","child_discussion_number":1,"child_discussions":[{"author":{"id":2713546,"avatar":"","nickname":"Geek_2c6fcd","note":"","ucode":"7A3AF7815351F8","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1035064,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/cb/38/4c9cfdf4.jpg","nickname":"谢小路","note":"","ucode":"C9FE2EB10DC105","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":574573,"discussion_content":"不通过它来定位源码库地址吗","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1654154827,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":566703,"ip_address":"","group_id":0},"score":574573,"extra":""}]}]},{"had_liked":false,"id":318367,"user_name":"陈东","can_delete":false,"product_type":"c1","uid":2213995,"ip_address":"","ucode":"FCDE6D237CC621","user_header":"https://thirdwx.qlogo.cn/mmopen/vi_32/Ge7uhlEVxicQT73YuomDPrVKI8UmhqxKWrhtO5GMNlFjrHWfd3HAjgaSribR4Pzorw8yalYGYqJI4VPvUyPzicSKg/132","comment_is_top":false,"comment_ctime":1635259657,"is_pvip":true,"replies":[{"id":115624,"content":"能把问题再具体一些么？用一个例子说明问题更好。","user_name":"作者回复","user_name_real":"Tony Bai","uid":1026224,"ctime":1635568983,"ip_address":"","comment_id":318367,"utype":1}],"discussion_count":1,"race_medal":0,"score":8,"product_id":100093501,"comment_content":"在包管理中，同一个代码包中，或同一个src文件下，如何管理好或者分别执行好命令源码文件？谢谢。","like_count":0,"discussions":[{"author":{"id":1026224,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/a8/b0/6f87ab08.jpg","nickname":"Tony Bai","note":"","ucode":"B6B08985F6FA89","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":529206,"discussion_content":"能把问题再具体一些么？用一个例子说明问题更好。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1635568983,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":318330,"user_name":"martin","can_delete":false,"product_type":"c1","uid":1819565,"ip_address":"","ucode":"11E2A5702E5EEB","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/QXlhQAlDkJLxC3R28qEIy9wsC2SeDRAvNUYL0w7ltzRq0aCsBddrbx7dkyhBoQicw4PTDYLiafa8Nib6hmIPq3OpQ/132","comment_is_top":false,"comment_ctime":1635244081,"is_pvip":false,"replies":[{"id":115623,"content":"注意：最小版本选择的前提条件是要go包版本要满足语义版本规则。","user_name":"作者回复","user_name_real":"Tony Bai","uid":1026224,"ctime":1635568931,"ip_address":"","comment_id":318330,"utype":1}],"discussion_count":1,"race_medal":0,"score":8,"product_id":100093501,"comment_content":"最小版本选择怎么兼容后续版本呢？","like_count":0,"discussions":[{"author":{"id":1026224,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/a8/b0/6f87ab08.jpg","nickname":"Tony Bai","note":"","ucode":"B6B08985F6FA89","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":529193,"discussion_content":"注意：最小版本选择的前提条件是要go包版本要满足语义版本规则。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1635568931,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":318292,"user_name":"jacky","can_delete":false,"product_type":"c1","uid":2822959,"ip_address":"","ucode":"6404300921C8D1","user_header":"https://static001.geekbang.org/account/avatar/00/2b/13/2f/24420ab6.jpg","comment_is_top":false,"comment_ctime":1635233972,"is_pvip":false,"replies":[{"id":115588,"content":"对整个项目来说，还要满足包B对C v1.3.0的依赖要求。如果选择v1.1.0，那么就不满足包B的依赖要求了。所以要整体来看。","user_name":"作者回复","user_name_real":"Tony Bai","uid":1026224,"ctime":1635455891,"ip_address":"","comment_id":318292,"utype":1}],"discussion_count":2,"race_medal":0,"score":8,"product_id":100093501,"comment_content":"“这个例子中，C v1.3.0 是符合项目整体要求的版本集合中的版本最小的那个，于是 Go 命令选择了 C v1.3.0，而不是最新最大的 C v1.7.0。并且，Go 团队认为“最小版本选择”为 Go 程序实现持久的和可重现的构建提供了最佳的方案。”  这里最小的不是v1.1.0吗？怎么是v1.3.0呢","like_count":0,"discussions":[{"author":{"id":1026224,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/a8/b0/6f87ab08.jpg","nickname":"Tony Bai","note":"","ucode":"B6B08985F6FA89","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":529173,"discussion_content":"对整个项目来说，还要满足包B对C v1.3.0的依赖要求。如果选择v1.1.0，那么就不满足包B的依赖要求了。所以要整体来看。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1635455891,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":2822959,"avatar":"https://static001.geekbang.org/account/avatar/00/2b/13/2f/24420ab6.jpg","nickname":"jacky","note":"","ucode":"6404300921C8D1","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":409143,"discussion_content":"已在评论中找到作者回复: 按照课程中的例子，A 要求 >=C v1.1.0，B 要求 C >=v1.3.0，那么选择同时满足A与B要求的最小版本，就是v1.3.0。如果选择v1.1.0则不满足A要求。","likes_number":2,"is_delete":false,"is_hidden":false,"ctime":1635384515,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":318023,"user_name":"罗杰","can_delete":false,"product_type":"c1","uid":1320487,"ip_address":"","ucode":"96BAFAA147341F","user_header":"https://static001.geekbang.org/account/avatar/00/14/26/27/eba94899.jpg","comment_is_top":false,"comment_ctime":1635126130,"is_pvip":false,"replies":null,"discussion_count":0,"race_medal":0,"score":8,"product_id":100093501,"comment_content":"从构建来看，现在的确是掌握 Go 的好时机。之前入坑的时候，gopath 真的让人抓狂。","like_count":36},{"had_liked":false,"id":318120,"user_name":"leon","can_delete":false,"product_type":"c1","uid":2618120,"ip_address":"","ucode":"1EC73BB462AFC6","user_header":"https://static001.geekbang.org/account/avatar/00/27/f3/08/e77fb9dd.jpg","comment_is_top":false,"comment_ctime":1635155905,"is_pvip":false,"replies":null,"discussion_count":3,"race_medal":0,"score":8,"product_id":100093501,"comment_content":"if go version &lt; 1.13: 项目移出GOPATH&#47;src\ngo env -w GO111MODULE=on\ngo mod init module_path\ngo mod tidy\n","like_count":16,"discussions":[{"author":{"id":1071909,"avatar":"https://static001.geekbang.org/account/avatar/00/10/5b/25/d78cc1fe.jpg","nickname":"都市夜归人","note":"","ucode":"DFF59BE3D80B42","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":619933,"discussion_content":"版本太低的话是否根本不支持go module编译啊","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1685619846,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":"北京","group_id":0},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1936087,"avatar":"https://static001.geekbang.org/account/avatar/00/1d/8a/d7/daabec34.jpg","nickname":"tequ1lAneio","note":"","ucode":"41336E87FF2E1A","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":409139,"discussion_content":"不设置GO111MODULE直接运行go mod init不可以吗？","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1635384253,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"","child_discussion_number":1,"child_discussions":[{"author":{"id":1226968,"avatar":"https://static001.geekbang.org/account/avatar/00/12/b8/d8/f81b5604.jpg","nickname":"hcyycb","note":"","ucode":"77FF6CA41F9E66","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":1936087,"avatar":"https://static001.geekbang.org/account/avatar/00/1d/8a/d7/daabec34.jpg","nickname":"tequ1lAneio","note":"","ucode":"41336E87FF2E1A","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":533898,"discussion_content":"go 1.13 之前的版本，GO111MODULE 的默认值不是go mod 模式。","likes_number":3,"is_delete":false,"is_hidden":false,"ctime":1638015739,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":409139,"ip_address":"","group_id":0},"score":533898,"extra":""}]}]},{"had_liked":false,"id":377631,"user_name":"lufofire","can_delete":false,"product_type":"c1","uid":3218954,"ip_address":"新加坡","ucode":"CA12C6E772C7BD","user_header":"https://static001.geekbang.org/account/avatar/00/31/1e/0a/159b2129.jpg","comment_is_top":false,"comment_ctime":1688896044,"is_pvip":false,"replies":[{"id":137619,"content":"👍","user_name":"作者回复","user_name_real":"编辑","uid":1026224,"ctime":1688941859,"ip_address":"辽宁","comment_id":377631,"utype":1}],"discussion_count":1,"race_medal":0,"score":8,"product_id":100093501,"comment_content":"很简介， 满足工作需要","like_count":0,"discussions":[{"author":{"id":1026224,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/a8/b0/6f87ab08.jpg","nickname":"Tony Bai","note":"","ucode":"B6B08985F6FA89","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":623006,"discussion_content":"👍","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1688941859,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"辽宁","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":375118,"user_name":"维和土豆","can_delete":false,"product_type":"c1","uid":1347473,"ip_address":"上海","ucode":"94BCC5F48B268E","user_header":"https://static001.geekbang.org/account/avatar/00/14/8f/91/b4c3df48.jpg","comment_is_top":false,"comment_ctime":1684925446,"is_pvip":false,"replies":[{"id":136930,"content":"首先v1.7.0、v1.3.0和v1.1.0按照语义版本规范(Semver)是兼容的版本哦。\n\n按照你的假设，最初： A 依赖 C 的 v1.1.0 版本，而 B 依赖的是 C 的 v1.3.0 版本，此时myproject依赖的C版本会被mvs(最小版本选择)定为v1.3.0版本。\n\n如果A升级C的依赖版本为v1.7.0，此时B依赖C版本没变，仍是v1.3.0，那么mvs机制会为myproject选择C的版本为v1.7.0。\n\n要深入理解mvs，mvs指的是满足整个项目版本要求的最小版本。\n\nv1.1.0和v1.3.0：满足整个项目要求的是v1.3.0，即便目前C最新的是v1.7.0，go不会拉取最新版本。\n\nv1.7.0和v1.3.0：满足整个项目要求的是v1.7.0，只是恰好与C目前最新的版本一致了罢了。","user_name":"作者回复","user_name_real":"编辑","uid":1026224,"ctime":1685069147,"ip_address":"北京","comment_id":375118,"utype":1}],"discussion_count":1,"race_medal":1,"score":8,"product_id":100093501,"comment_content":"最小版本原则不会有问题吗？\nmyproject 有两个直接依赖 A 和 B，A 和 B 有一个共同的依赖包 C，但 A 依赖 C 的 v1.1.0 版本，而 B 依赖的是 C 的 v1.3.0 版本，并且此时 C 包的最新发布版为 C v1.7.0。\n如果A包调用C包最新的v1.7.0中的提供的某个方法，该方法在v1.3.0中并未提供，那不就报错了么？\n如果采用最大版本原则，则可以避免这个问题，感觉还是最大版本比较靠谱啊","like_count":0,"discussions":[{"author":{"id":1026224,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/a8/b0/6f87ab08.jpg","nickname":"Tony Bai","note":"","ucode":"B6B08985F6FA89","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":619406,"discussion_content":"首先v1.7.0、v1.3.0和v1.1.0按照语义版本规范(Semver)是兼容的版本哦。\n\n按照你的假设，最初： A 依赖 C 的 v1.1.0 版本，而 B 依赖的是 C 的 v1.3.0 版本，此时myproject依赖的C版本会被mvs(最小版本选择)定为v1.3.0版本。\n\n如果A升级C的依赖版本为v1.7.0，此时B依赖C版本没变，仍是v1.3.0，那么mvs机制会为myproject选择C的版本为v1.7.0。\n\n要深入理解mvs，mvs指的是满足整个项目版本要求的最小版本。\n\nv1.1.0和v1.3.0：满足整个项目要求的是v1.3.0，即便目前C最新的是v1.7.0，go不会拉取最新版本。\n\nv1.7.0和v1.3.0：满足整个项目要求的是v1.7.0，只是恰好与C目前最新的版本一致了罢了。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1685069147,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"北京","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":344875,"user_name":"颜海航","can_delete":false,"product_type":"c1","uid":1308159,"ip_address":"","ucode":"5644F6328BF901","user_header":"https://static001.geekbang.org/account/avatar/00/13/f5/ff/523fb378.jpg","comment_is_top":false,"comment_ctime":1651830282,"is_pvip":false,"replies":[{"id":125915,"content":"什么叫本地不同的module?能具体一些吗，或举一个例子?","user_name":"作者回复","user_name_real":"编辑","uid":1026224,"ctime":1651973635,"ip_address":"","comment_id":344875,"utype":1}],"discussion_count":2,"race_medal":0,"score":8,"product_id":100093501,"comment_content":"本地不同的module怎么import","like_count":0,"discussions":[{"author":{"id":1026224,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/a8/b0/6f87ab08.jpg","nickname":"Tony Bai","note":"","ucode":"B6B08985F6FA89","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":570864,"discussion_content":"什么叫本地不同的module?能具体一些吗，或举一个例子?","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1651973635,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1681459,"avatar":"https://static001.geekbang.org/account/avatar/00/19/a8/33/b71635c1.jpg","nickname":"锋子","note":"","ucode":"89FFA85BDB1C99","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":576143,"discussion_content":"replace  ../* 了解一下","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1655301113,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":337941,"user_name":"flexiver","can_delete":false,"product_type":"c1","uid":2889691,"ip_address":"","ucode":"5D83DFA90826E1","user_header":"","comment_is_top":false,"comment_ctime":1647168779,"is_pvip":false,"replies":[{"id":123636,"content":"同问题1的回答:)","user_name":"作者回复","user_name_real":"编辑","uid":1026224,"ctime":1647398140,"ip_address":"","comment_id":337941,"utype":1}],"discussion_count":3,"race_medal":0,"score":8,"product_id":100093501,"comment_content":"2、module path的前缀， 一定是github.com？是有什么规定或者协议要求吗？ 这个问题是接着第一个问题的，不小心点了提交。 ","like_count":0,"discussions":[{"author":{"id":1026224,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/a8/b0/6f87ab08.jpg","nickname":"Tony Bai","note":"","ucode":"B6B08985F6FA89","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":570864,"discussion_content":"什么叫本地不同的module?能具体一些吗，或举一个例子?","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1651973635,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1681459,"avatar":"https://static001.geekbang.org/account/avatar/00/19/a8/33/b71635c1.jpg","nickname":"锋子","note":"","ucode":"89FFA85BDB1C99","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":576143,"discussion_content":"replace  ../* 了解一下","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1655301113,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":321691,"user_name":"多选参数","can_delete":false,"product_type":"c1","uid":1248326,"ip_address":"","ucode":"B2294D80AB075F","user_header":"https://static001.geekbang.org/account/avatar/00/13/0c/46/dfe32cf4.jpg","comment_is_top":false,"comment_ctime":1636995660,"is_pvip":false,"replies":[{"id":117130,"content":"如果要使用go module构建，没有go.mod肯定不行的，哪个版本都不行。","user_name":"作者回复","user_name_real":"编辑","uid":1026224,"ctime":1637551913,"ip_address":"","comment_id":321691,"utype":1}],"discussion_count":1,"race_medal":0,"score":8,"product_id":100093501,"comment_content":"我用的是 go 1.16 版本的，我在没有 go.mod 路径下执行 github.com&#47;sirupsen&#47;logrus 的时候都会报错，但是当我在有 go.mod 的路径下执行就可以下载到这个包。这个是因为 go 1.16 的问题嘛？我的 GO111MODULE 是 auto","like_count":0,"discussions":[{"author":{"id":1026224,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/a8/b0/6f87ab08.jpg","nickname":"Tony Bai","note":"","ucode":"B6B08985F6FA89","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":532191,"discussion_content":"如果要使用go module构建，没有go.mod肯定不行的，哪个版本都不行。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1637551913,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":318367,"user_name":"陈东","can_delete":false,"product_type":"c1","uid":2213995,"ip_address":"","ucode":"FCDE6D237CC621","user_header":"https://thirdwx.qlogo.cn/mmopen/vi_32/Ge7uhlEVxicQT73YuomDPrVKI8UmhqxKWrhtO5GMNlFjrHWfd3HAjgaSribR4Pzorw8yalYGYqJI4VPvUyPzicSKg/132","comment_is_top":false,"comment_ctime":1635259657,"is_pvip":true,"replies":[{"id":115624,"content":"能把问题再具体一些么？用一个例子说明问题更好。","user_name":"作者回复","user_name_real":"Tony Bai","uid":1026224,"ctime":1635568983,"ip_address":"","comment_id":318367,"utype":1}],"discussion_count":1,"race_medal":0,"score":8,"product_id":100093501,"comment_content":"在包管理中，同一个代码包中，或同一个src文件下，如何管理好或者分别执行好命令源码文件？谢谢。","like_count":0,"discussions":[{"author":{"id":1026224,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/a8/b0/6f87ab08.jpg","nickname":"Tony Bai","note":"","ucode":"B6B08985F6FA89","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":532191,"discussion_content":"如果要使用go module构建，没有go.mod肯定不行的，哪个版本都不行。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1637551913,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":318330,"user_name":"martin","can_delete":false,"product_type":"c1","uid":1819565,"ip_address":"","ucode":"11E2A5702E5EEB","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/QXlhQAlDkJLxC3R28qEIy9wsC2SeDRAvNUYL0w7ltzRq0aCsBddrbx7dkyhBoQicw4PTDYLiafa8Nib6hmIPq3OpQ/132","comment_is_top":false,"comment_ctime":1635244081,"is_pvip":false,"replies":[{"id":115623,"content":"注意：最小版本选择的前提条件是要go包版本要满足语义版本规则。","user_name":"作者回复","user_name_real":"Tony Bai","uid":1026224,"ctime":1635568931,"ip_address":"","comment_id":318330,"utype":1}],"discussion_count":1,"race_medal":0,"score":8,"product_id":100093501,"comment_content":"最小版本选择怎么兼容后续版本呢？","like_count":0,"discussions":[{"author":{"id":1026224,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/a8/b0/6f87ab08.jpg","nickname":"Tony Bai","note":"","ucode":"B6B08985F6FA89","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":529206,"discussion_content":"能把问题再具体一些么？用一个例子说明问题更好。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1635568983,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":318292,"user_name":"jacky","can_delete":false,"product_type":"c1","uid":2822959,"ip_address":"","ucode":"6404300921C8D1","user_header":"https://static001.geekbang.org/account/avatar/00/2b/13/2f/24420ab6.jpg","comment_is_top":false,"comment_ctime":1635233972,"is_pvip":false,"replies":[{"id":115588,"content":"对整个项目来说，还要满足包B对C v1.3.0的依赖要求。如果选择v1.1.0，那么就不满足包B的依赖要求了。所以要整体来看。","user_name":"作者回复","user_name_real":"Tony Bai","uid":1026224,"ctime":1635455891,"ip_address":"","comment_id":318292,"utype":1}],"discussion_count":2,"race_medal":0,"score":8,"product_id":100093501,"comment_content":"“这个例子中，C v1.3.0 是符合项目整体要求的版本集合中的版本最小的那个，于是 Go 命令选择了 C v1.3.0，而不是最新最大的 C v1.7.0。并且，Go 团队认为“最小版本选择”为 Go 程序实现持久的和可重现的构建提供了最佳的方案。”  这里最小的不是v1.1.0吗？怎么是v1.3.0呢","like_count":0,"discussions":[{"author":{"id":1026224,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/a8/b0/6f87ab08.jpg","nickname":"Tony Bai","note":"","ucode":"B6B08985F6FA89","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":529193,"discussion_content":"注意：最小版本选择的前提条件是要go包版本要满足语义版本规则。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1635568931,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":318023,"user_name":"罗杰","can_delete":false,"product_type":"c1","uid":1320487,"ip_address":"","ucode":"96BAFAA147341F","user_header":"https://static001.geekbang.org/account/avatar/00/14/26/27/eba94899.jpg","comment_is_top":false,"comment_ctime":1635126130,"is_pvip":false,"replies":null,"discussion_count":0,"race_medal":0,"score":8,"product_id":100093501,"comment_content":"从构建来看，现在的确是掌握 Go 的好时机。之前入坑的时候，gopath 真的让人抓狂。","like_count":36},{"had_liked":false,"id":318120,"user_name":"leon","can_delete":false,"product_type":"c1","uid":2618120,"ip_address":"","ucode":"1EC73BB462AFC6","user_header":"https://static001.geekbang.org/account/avatar/00/27/f3/08/e77fb9dd.jpg","comment_is_top":false,"comment_ctime":1635155905,"is_pvip":false,"replies":null,"discussion_count":3,"race_medal":0,"score":8,"product_id":100093501,"comment_content":"if go version &lt; 1.13: 项目移出GOPATH&#47;src\ngo env -w GO111MODULE=on\ngo mod init module_path\ngo mod tidy\n","like_count":16,"discussions":[{"author":{"id":1026224,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/a8/b0/6f87ab08.jpg","nickname":"Tony Bai","note":"","ucode":"B6B08985F6FA89","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":529173,"discussion_content":"对整个项目来说，还要满足包B对C v1.3.0的依赖要求。如果选择v1.1.0，那么就不满足包B的依赖要求了。所以要整体来看。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1635455891,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":2822959,"avatar":"https://static001.geekbang.org/account/avatar/00/2b/13/2f/24420ab6.jpg","nickname":"jacky","note":"","ucode":"6404300921C8D1","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":409143,"discussion_content":"已在评论中找到作者回复: 按照课程中的例子，A 要求 >=C v1.1.0，B 要求 C >=v1.3.0，那么选择同时满足A与B要求的最小版本，就是v1.3.0。如果选择v1.1.0则不满足A要求。","likes_number":2,"is_delete":false,"is_hidden":false,"ctime":1635384515,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":318002,"user_name":"Aaron Liu","can_delete":false,"product_type":"c1","uid":1125662,"ip_address":"","ucode":"DECCD16350C2A7","user_header":"https://static001.geekbang.org/account/avatar/00/11/2d/1e/4a93ebb5.jpg","comment_is_top":false,"comment_ctime":1635120578,"is_pvip":false,"replies":null,"discussion_count":2,"race_medal":0,"score":9,"product_id":100093501,"comment_content":"看起来有点像node module，初学者从go module开始构建会比较好，理解一个方式","like_count":6},{"had_liked":false,"id":318784,"user_name":"Darren","can_delete":false,"product_type":"c1","uid":1254968,"ip_address":"","ucode":"CCD2B2C492BE9A","user_header":"https://static001.geekbang.org/account/avatar/00/13/26/38/ef063dc2.jpg","comment_is_top":false,"comment_ctime":1635423845,"is_pvip":false,"replies":null,"discussion_count":4,"race_medal":0,"score":9,"product_id":100093501,"comment_content":"老师，问一个目前遇到很奇怪的东西，没有一点思路：\n是这样的，一个git项目，vendor模式，src目录下有多个项目（多个文件夹）中都有main.go，打包也是多个可执行文件，依赖同一个vendor，vendor也是在src目录下。\n\n本地打包成的可执行文件，启动时报错，缺少配置文件。看代码逻辑确实是需要的，本机mac，设置了 CGO_ENABLED=0 GOOS=linux GOARCH=amd64 go build 。\n但是有一个以前开发同事的Linux机器，把src整个目录上传上去（包括vendor），然后解压后，执行打包，执行的可执行文件和本地打包的大小都不一样，同时执行就不报错了，打包机是基于Makefile,但是Makefile中感觉也没有写啥,与src目录同级，我关注项目的打包\n\nexport GOPATH=$(CURDIR) ;       \ngo build -o .&#47;bin&#47;xxxx .src&#47;apps&#47;xxxx;\n\n按照老师这节课，我的理解是vendor一样的话，按道理打包的结果也是一样的（GOPATH也相同），为啥本地打包的就不行，打包机打包的就可以？老师有什么思路吗？谢谢老师","like_count":2,"discussions":[{"author":{"id":1667175,"avatar":"https://static001.geekbang.org/account/avatar/00/19/70/67/0c1359c2.jpg","nickname":"qinsi","note":"","ucode":"090D9C4068FF12","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":407906,"discussion_content":"根据最小版本选择机制，go mod每个依赖包只保留一个版本，对于依赖包的兼容性还是有一定要求的。相比之下npm会直接保留多个版本，但会占用更多空间。","likes_number":8,"is_delete":false,"is_hidden":false,"ctime":1635148092,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1437884,"avatar":"https://static001.geekbang.org/account/avatar/00/15/f0/bc/65543e09.jpg","nickname":"铁甲依然在","note":"","ucode":"7487E704441849","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":413354,"discussion_content":"nice\n","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1636454285,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":318033,"user_name":"在下宝龙、","can_delete":false,"product_type":"c1","uid":1618030,"ip_address":"","ucode":"0735B64EB61CAC","user_header":"https://static001.geekbang.org/account/avatar/00/18/b0/6e/921cb700.jpg","comment_is_top":false,"comment_ctime":1635127985,"is_pvip":false,"replies":null,"discussion_count":1,"race_medal":0,"score":9,"product_id":100093501,"comment_content":"最近刚学go，然后被gopath搞得糊里糊涂，看了这一篇感觉学的时机恰到好处","like_count":1,"discussions":[{"author":{"id":1026224,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/a8/b0/6f87ab08.jpg","nickname":"Tony Bai","note":"","ucode":"B6B08985F6FA89","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":409922,"discussion_content":"”本地打包成的可执行文件，启动时报错，缺少配置文件。“ -- 你这不是打包ok了么？执行错误是另外一回事？另外你以linux为目标平台构建的程序在mac上能跑么？","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1635550662,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"","child_discussion_number":3,"child_discussions":[{"author":{"id":1254968,"avatar":"https://static001.geekbang.org/account/avatar/00/13/26/38/ef063dc2.jpg","nickname":"Darren","note":"","ucode":"CCD2B2C492BE9A","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1026224,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/a8/b0/6f87ab08.jpg","nickname":"Tony Bai","note":"","ucode":"B6B08985F6FA89","race_medal":0,"user_type":2,"is_pvip":false},"discussion":{"id":410071,"discussion_content":"打包后，上传到测试环境的，测试环境是Linux，打包是没有报错，我的问题是为什么相同的代码和vendor，为什么打包出来的结果不同？还有什么可能的影响因素吗？","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1635587105,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":409922,"ip_address":"","group_id":0},"score":410071,"extra":""},{"author":{"id":1026224,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/a8/b0/6f87ab08.jpg","nickname":"Tony Bai","note":"","ucode":"B6B08985F6FA89","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":1254968,"avatar":"https://static001.geekbang.org/account/avatar/00/13/26/38/ef063dc2.jpg","nickname":"Darren","note":"","ucode":"CCD2B2C492BE9A","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":410089,"discussion_content":"&#34;启动时报错，缺少配置文件&#34; - 缺少什么配置文件，是否你们两个环境有细微差异？","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1635597906,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":410071,"ip_address":"","group_id":0},"score":410089,"extra":""},{"author":{"id":1254968,"avatar":"https://static001.geekbang.org/account/avatar/00/13/26/38/ef063dc2.jpg","nickname":"Darren","note":"","ucode":"CCD2B2C492BE9A","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1026224,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/a8/b0/6f87ab08.jpg","nickname":"Tony Bai","note":"","ucode":"B6B08985F6FA89","race_medal":0,"user_type":2,"is_pvip":false},"discussion":{"id":410140,"discussion_content":"老师，是这样的，配置文件是自定义的，就是一般的，代码中相对路径的具体文件名，不是系统的配置文件。问题就是不知道，相同的代码，除了vendor目录影响项目打包的结果，是否还有其他的，本地和打包机的环境肯定是有不同的，不然也不会有不同的结果，因为我是刚转go开发的，因此不知道还有啥可能的原因导致最终打包结果不同？老师方便留个邮箱吗，我工作日的时候，把打包机的相关情况详细发给老师，因为之前同事已经离职，麻烦老师看看，谢谢老师！","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1635604908,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":410089,"ip_address":"","group_id":0},"score":410140,"extra":""}]}]},{"had_liked":false,"id":395563,"user_name":"Vincent","can_delete":false,"product_type":"c1","uid":1110967,"ip_address":"北京","ucode":"A14BA4C418315F","user_header":"https://static001.geekbang.org/account/avatar/00/10/f3/b7/d7377f0c.jpg","comment_is_top":false,"comment_ctime":1731244104,"is_pvip":false,"replies":null,"discussion_count":0,"race_medal":0,"score":9,"product_id":100093501,"comment_content":"test","like_count":0},{"had_liked":false,"id":342146,"user_name":"Slowdive","can_delete":false,"product_type":"c1","uid":1624537,"ip_address":"","ucode":"AF3429CE47C462","user_header":"https://static001.geekbang.org/account/avatar/00/18/c9/d9/00870178.jpg","comment_is_top":false,"comment_ctime":1650037419,"is_pvip":false,"replies":null,"discussion_count":0,"race_medal":0,"score":9,"product_id":100093501,"comment_content":"最后还得npm","like_count":0},{"had_liked":false,"id":320521,"user_name":"vYao","can_delete":false,"product_type":"c1","uid":1136063,"ip_address":"","ucode":"008905AF84C5AB","user_header":"https://static001.geekbang.org/account/avatar/00/11/55/bf/f1845771.jpg","comment_is_top":false,"comment_ctime":1636364649,"is_pvip":false,"replies":null,"discussion_count":0,"race_medal":0,"score":9,"product_id":100093501,"comment_content":"白嫖了老乡四节课，订阅走一波。并且对于我这种Go小白来说看的一点都不费劲，很好理解。","like_count":0,"discussions":[{"author":{"id":1627670,"avatar":"https://static001.geekbang.org/account/avatar/00/18/d6/16/107f0d04.jpg","nickname":"山青","note":"","ucode":"904AE3C23D3B92","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":412731,"discussion_content":"gopath没有用不用管就行","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1636272477,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":318002,"user_name":"Aaron Liu","can_delete":false,"product_type":"c1","uid":1125662,"ip_address":"","ucode":"DECCD16350C2A7","user_header":"https://static001.geekbang.org/account/avatar/00/11/2d/1e/4a93ebb5.jpg","comment_is_top":false,"comment_ctime":1635120578,"is_pvip":false,"replies":null,"discussion_count":2,"race_medal":0,"score":9,"product_id":100093501,"comment_content":"看起来有点像node module，初学者从go module开始构建会比较好，理解一个方式","like_count":6,"discussions":[{"author":{"id":1667175,"avatar":"https://static001.geekbang.org/account/avatar/00/19/70/67/0c1359c2.jpg","nickname":"qinsi","note":"","ucode":"090D9C4068FF12","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":407906,"discussion_content":"根据最小版本选择机制，go mod每个依赖包只保留一个版本，对于依赖包的兼容性还是有一定要求的。相比之下npm会直接保留多个版本，但会占用更多空间。","likes_number":8,"is_delete":false,"is_hidden":false,"ctime":1635148092,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1437884,"avatar":"https://static001.geekbang.org/account/avatar/00/15/f0/bc/65543e09.jpg","nickname":"铁甲依然在","note":"","ucode":"7487E704441849","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":413354,"discussion_content":"nice\n","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1636454285,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":318784,"user_name":"Darren","can_delete":false,"product_type":"c1","uid":1254968,"ip_address":"","ucode":"CCD2B2C492BE9A","user_header":"https://static001.geekbang.org/account/avatar/00/13/26/38/ef063dc2.jpg","comment_is_top":false,"comment_ctime":1635423845,"is_pvip":false,"replies":null,"discussion_count":4,"race_medal":0,"score":9,"product_id":100093501,"comment_content":"老师，问一个目前遇到很奇怪的东西，没有一点思路：\n是这样的，一个git项目，vendor模式，src目录下有多个项目（多个文件夹）中都有main.go，打包也是多个可执行文件，依赖同一个vendor，vendor也是在src目录下。\n\n本地打包成的可执行文件，启动时报错，缺少配置文件。看代码逻辑确实是需要的，本机mac，设置了 CGO_ENABLED=0 GOOS=linux GOARCH=amd64 go build 。\n但是有一个以前开发同事的Linux机器，把src整个目录上传上去（包括vendor），然后解压后，执行打包，执行的可执行文件和本地打包的大小都不一样，同时执行就不报错了，打包机是基于Makefile,但是Makefile中感觉也没有写啥,与src目录同级，我关注项目的打包\n\nexport GOPATH=$(CURDIR) ;       \ngo build -o .&#47;bin&#47;xxxx .src&#47;apps&#47;xxxx;\n\n按照老师这节课，我的理解是vendor一样的话，按道理打包的结果也是一样的（GOPATH也相同），为啥本地打包的就不行，打包机打包的就可以？老师有什么思路吗？谢谢老师","like_count":2,"discussions":[{"author":{"id":1026224,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/a8/b0/6f87ab08.jpg","nickname":"Tony Bai","note":"","ucode":"B6B08985F6FA89","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":409922,"discussion_content":"”本地打包成的可执行文件，启动时报错，缺少配置文件。“ -- 你这不是打包ok了么？执行错误是另外一回事？另外你以linux为目标平台构建的程序在mac上能跑么？","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1635550662,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"","child_discussion_number":3,"child_discussions":[{"author":{"id":1254968,"avatar":"https://static001.geekbang.org/account/avatar/00/13/26/38/ef063dc2.jpg","nickname":"Darren","note":"","ucode":"CCD2B2C492BE9A","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1026224,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/a8/b0/6f87ab08.jpg","nickname":"Tony Bai","note":"","ucode":"B6B08985F6FA89","race_medal":0,"user_type":2,"is_pvip":false},"discussion":{"id":410071,"discussion_content":"打包后，上传到测试环境的，测试环境是Linux，打包是没有报错，我的问题是为什么相同的代码和vendor，为什么打包出来的结果不同？还有什么可能的影响因素吗？","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1635587105,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":409922,"ip_address":"","group_id":0},"score":410071,"extra":""},{"author":{"id":1026224,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/a8/b0/6f87ab08.jpg","nickname":"Tony Bai","note":"","ucode":"B6B08985F6FA89","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":1254968,"avatar":"https://static001.geekbang.org/account/avatar/00/13/26/38/ef063dc2.jpg","nickname":"Darren","note":"","ucode":"CCD2B2C492BE9A","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":410089,"discussion_content":"&#34;启动时报错，缺少配置文件&#34; - 缺少什么配置文件，是否你们两个环境有细微差异？","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1635597906,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":410071,"ip_address":"","group_id":0},"score":410089,"extra":""},{"author":{"id":1254968,"avatar":"https://static001.geekbang.org/account/avatar/00/13/26/38/ef063dc2.jpg","nickname":"Darren","note":"","ucode":"CCD2B2C492BE9A","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1026224,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/a8/b0/6f87ab08.jpg","nickname":"Tony Bai","note":"","ucode":"B6B08985F6FA89","race_medal":0,"user_type":2,"is_pvip":false},"discussion":{"id":410140,"discussion_content":"老师，是这样的，配置文件是自定义的，就是一般的，代码中相对路径的具体文件名，不是系统的配置文件。问题就是不知道，相同的代码，除了vendor目录影响项目打包的结果，是否还有其他的，本地和打包机的环境肯定是有不同的，不然也不会有不同的结果，因为我是刚转go开发的，因此不知道还有啥可能的原因导致最终打包结果不同？老师方便留个邮箱吗，我工作日的时候，把打包机的相关情况详细发给老师，因为之前同事已经离职，麻烦老师看看，谢谢老师！","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1635604908,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":410089,"ip_address":"","group_id":0},"score":410140,"extra":""}]}]},{"had_liked":false,"id":318033,"user_name":"在下宝龙、","can_delete":false,"product_type":"c1","uid":1618030,"ip_address":"","ucode":"0735B64EB61CAC","user_header":"https://static001.geekbang.org/account/avatar/00/18/b0/6e/921cb700.jpg","comment_is_top":false,"comment_ctime":1635127985,"is_pvip":false,"replies":null,"discussion_count":1,"race_medal":0,"score":9,"product_id":100093501,"comment_content":"最近刚学go，然后被gopath搞得糊里糊涂，看了这一篇感觉学的时机恰到好处","like_count":1,"discussions":[{"author":{"id":1627670,"avatar":"https://static001.geekbang.org/account/avatar/00/18/d6/16/107f0d04.jpg","nickname":"山青","note":"","ucode":"904AE3C23D3B92","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":412731,"discussion_content":"gopath没有用不用管就行","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1636272477,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":395563,"user_name":"Vincent","can_delete":false,"product_type":"c1","uid":1110967,"ip_address":"北京","ucode":"A14BA4C418315F","user_header":"https://static001.geekbang.org/account/avatar/00/10/f3/b7/d7377f0c.jpg","comment_is_top":false,"comment_ctime":1731244104,"is_pvip":false,"replies":null,"discussion_count":0,"race_medal":0,"score":9,"product_id":100093501,"comment_content":"test","like_count":0},{"had_liked":false,"id":342146,"user_name":"Slowdive","can_delete":false,"product_type":"c1","uid":1624537,"ip_address":"","ucode":"AF3429CE47C462","user_header":"https://static001.geekbang.org/account/avatar/00/18/c9/d9/00870178.jpg","comment_is_top":false,"comment_ctime":1650037419,"is_pvip":false,"replies":null,"discussion_count":0,"race_medal":0,"score":9,"product_id":100093501,"comment_content":"最后还得npm","like_count":0},{"had_liked":false,"id":320521,"user_name":"vYao","can_delete":false,"product_type":"c1","uid":1136063,"ip_address":"","ucode":"008905AF84C5AB","user_header":"https://static001.geekbang.org/account/avatar/00/11/55/bf/f1845771.jpg","comment_is_top":false,"comment_ctime":1636364649,"is_pvip":false,"replies":null,"discussion_count":0,"race_medal":0,"score":9,"product_id":100093501,"comment_content":"白嫖了老乡四节课，订阅走一波。并且对于我这种Go小白来说看的一点都不费劲，很好理解。","like_count":0}]}