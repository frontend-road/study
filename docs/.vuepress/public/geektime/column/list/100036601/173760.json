{"id":173760,"title":"21 | 开源还是自研：企业DevOps平台建设的三个阶段","content":"<p>你好，我是石雪峰，从今天开始，专栏正式进入了“平台工具篇”。</p><p>在这个全新的章节，我重点想讲三个方面的内容：</p><ul>\n<li>帮助你梳理企业内部DevOps平台的实施路径，理清平台建设的主体脉络；</li>\n<li>给你分享一些核心平台的建设经验，这些经验都来自于生产一线；</li>\n<li>给你分析一下DevOps平台的发展方向和热门趋势，让你在进行平台建设时，能够跟上潮流。</li>\n</ul><p>我想跟你说的是，<strong>没有人天生就是DevOps平台的产品经理，但每一个人都能成为DevOps平台的产品经理</strong>。</p><p>因为，DevOps平台的产品与业务方向的产品不同，它要解决的就是<strong>一线研发交付团队的实际问题</strong>。</p><p>普通的产品经理没有研发交付的背景，很难理解研发交付的困境，而研发交付团队又缺少产品经理的技能和思路。所以，这个领域的人才少之又少，基本只能靠内部培养，我希望你能通过专栏的学习，摸索出一些产品设计的门道。</p><p>好了，今天，我们就来聊一聊企业DevOps平台建设的话题。</p><p>就像我之前提到的那样，在企业内部推行DevOps，工具不是万能的，但是没有工具，却是万万不能的。</p><p>当企业决定引入DevOps工具的时候，无外乎有三种选择：直接使用开源工具；采购商业工具；自己研发工具。</p><p>你可能会说，如果有能力，当然是选自研工具啊，自主可控，又有核心竞争力。可是，在DevOps状态报告中，却有一些不同的发现。</p><!-- [[[read_end]]] --><p>那些倾向于使用完全自建工具的企业，效能水平往往不高。所谓的完全自建工具，是指不依赖于开源解决方案，整个工具完全由自己来实现。而那些大部分采用开源工具的企业，效能水平反而不差。</p><p>这就有点反常理了。企业花了这么大的时间和精力来建设内部工具，到最后却没有达到预期的效果，究竟是为什么呢？</p><p>在我看来，这是因为没有找到企业内部平台建设的正确路径。<strong>我们要在正确的时候，做正确的事情，太超前，或者太落后，都是会有问题的</strong>。</p><p>那么，接下来，我就跟你聊聊企业DevOps平台建设的三个阶段。</p><h2>阶段一：从无到有</h2><p>在这个阶段，企业的DevOps平台建设处于刚刚起步的状态，在整个交付过程中，还有大量的本地操作和重复性的操作。</p><p>另外，企业内部一般也没有一个成体系的工具团队，来专门负责平台能力建设。</p><p>那么，对于这个阶段，<strong>我给你的建议是：引入开源工具和商业工具，快速补齐现有的能力短板</strong>。</p><p>所谓能力短板，其实就是当前交付工具链体系中缺失的部分，尤其是高频操作，或者是涉及多人协作的部分，比如，需求管理、持续集成等。</p><p>无论是开源工具，还是商业工具，基本都是比较成熟的、拿来即用的，这种“即战力”是当前企业最需要的。因为，工具的引入解决了从无到有的问题，可以直接提升单点效率。这也是在DevOps转型初期，团队的效率能够飞速提升的主要原因。</p><p>看到这里，你可能会问两个问题：“如何选择工具？”“为什么商业工具也是可选项？”</p><p>其实，这也是团队在引入工具的初期，最头疼的两个典型问题，我们一一来看下。</p><h3>如何选择工具？</h3><p>现在，以DevOps为名的工具太多了。想要在这么多工具中，选择一款合适的，你要怎么做呢？</p><p>有的人可能会把相关工具的功能列表拉出来，然后逐项比对，看哪个工具的功能更加强大。其实，我觉得，在从无到有的阶段，不需要这么复杂，<strong>核心原则就是选择主流工具</strong>。</p><p>主流工具就是业内大家用得比较多的，在各种分享文章里面高频出现的，使用经验一搜一大把的那种工具。我给你提供一些工具，你可以参考一下：</p><ul>\n<li>需求管理工具Jira；</li>\n<li>知识管理工具Confluence；</li>\n<li>版本控制系统GitLab；</li>\n<li>持续集成工具Jenkins；</li>\n<li>代码质量工具SonarQube；</li>\n<li>构建工具Maven/Gradle；</li>\n<li>制品管理Artifactory/Harbor；</li>\n<li>配置管理工具Ansible；</li>\n<li>配置中心Apollo；</li>\n<li>测试工具RF/Selenium/Appium/Jmeter/TestNG；</li>\n<li>安全合规工具BlackDuck/Fortify；</li>\n<li>……</li>\n</ul><p>在初期，工具要解决的大多是单点问题，主流工具意味着更好的可扩展性，比如有完整的接口列表，甚至对其他工具已经内置了插件支持。</p><p>另外，很多开发实践都是基于主流工具来设计的。业内对于这些工具摸索得也比较深，有很多现成的实践经验，这些都对应了快速补齐能力短板的目标。</p><p>我之前见过一家大型金融机构，他们也在考虑将代码管理从SVN切换到Git。但是，他们选择的Git平台既不是开源的GitLab、Gerrit，也不是商业化的主流工具，而是一个听都没听过的开源工具。</p><p>这个工具的操作流程跟一般工具都不太一样，配套的评审、集成功能也都不够完善。最后，这家机构还是改用主流工具了。</p><h3>为什么商业工具也是可选项？</h3><p>随着开源工具的成熟和完善，越来越多的公司，甚至是传统企业，都开始积极拥抱开源，似乎开源就是代表未来的趋势。</p><p>那么，是不是只选择开源工具就行了，不用考虑商业工具了呢？我觉得，这种想法也是比较片面的。</p><p>商业工具的优势一直都存在，比如，专业性、安全性、扩展性、技术支持力度等。其实，很多开源工具都有商业版本。</p><p>比如，很多公司即便有开源的Nexus，制品管理工具Artifactory也都是标配。因为，Artifactory无论是在支持的制品类型、分布式部署、附加制品安全漏洞检查，还是在与外部工具的集成等方面，都有着明显的优势。</p><p>另外，像Jira这种需求和缺陷管理工具，与Confluence深度集成的话，足够满足绝大多数公司的需求。</p><p>再举个例子，安卓开发最常见的Gradle工具，它的商业版本可以直接让你的编译速度提升一个数量级。在最开始时，你可能觉得够用就行，但是当你开始追求极致效率的时候，这些都是核心竞争力。</p><p>选择商业工具的理由有很多，不选的理由大多就是一个字：贵。针对这个问题，我要说的是，<strong>要分清一笔支出到底是成本，还是投资</strong>。</p><p>就跟购买黄金一样，虽然也花了钱，但这是一笔投资，未来可以保值和增值，甚至是变现。对于商业工具来说，也是同样的道理。如果一款商业工具可以大幅提升团队效率，最后的产出可能远超最开始的投资。如果我们组建一个团队，仿照商业工具，开发一套自研工具，重复造轮子的成本也可能一点不少。所以，重点就是要看怎么算这笔账。</p><h2>阶段二：从小到大</h2><p>经过了第一个阶段，企业交付链路上的工具基本都已经齐全了。团队对于工具的需求开始从够用到好用进行转变。另外，随着业务发展，团队扩大，差异化需求也成了摆在面前的问题。再加上，人和数据都越来越多，工具的重要性与日俱增。</p><p>那么，工具的稳定性、可靠性，以及大规模使用的性能问题，也开始凸显出来。</p><p>对于这个阶段，<strong>我给你的建议是：使用半自建工具和定制商业工具，来解决自己的问题</strong>。</p><p>所谓半自建工具，大多数情况下，还是基于开源工具的二次开发，或者是对开源工具进行一次封装，在开源工具上面实现需要的业务逻辑和交互界面。</p><p>比如，基于Jenkins封装一套自己的构建打包平台，完全可以利用Jenkins API和插件扩展实现。我附上了一幅架构示意图，你可以参考一下。</p><p><img src=\"https://static001.geekbang.org/resource/image/fa/de/fad880b4dbd8464e3ccd37886f42c0de.png?wh=1418*637\" alt=\"\"></p><p>那么，半自建工具有哪些注意事项呢？虽然各个领域的工具职能千差万别，但从我的经验来看，主要有两点：<strong>设计时给扩展留出空间；实现时关注元数据治理</strong>。</p><h3>设计时给扩展留出空间</h3><p>刚开始建设平台的时候，很容易就事论事，眼前有什么问题，就提供什么功能。这固然是比较务实的态度，但对于平台而言，还是要有顶层设计，给未来留出扩展性。这么说可能比较抽象，我来给你举几个实际的例子，也是我们之前踩过的“坑”。</p><p><strong>案例一：</strong></p><p>平台的初期设计没有考虑租户的特性，只是为了满足单一业务的使用。当功能比较成熟，想要对外输出的时候，我们发现，要重新在更高的维度插入租户，导致系统需要进行大幅改造，不仅功能页面需要调整，连权限模型都要重新设计。</p><p>如果在设计平台之初，就考虑到未来的扩展需求，把单一业务实现为一个平台租户，会不会更好些呢？</p><p><strong>案例二：</strong></p><p>为了满足快速上线的需要，我们对Jenkins进行了简单封装，实现了在线打包平台。但是，打包页面的参数都“写死”在了页面中。另外，每接入一个项目，就需要单独实现一个页面。后来，面对上百个应用的接入所带来的差异化需求，平台只能推倒重来。</p><p>如果最开始在设计的时候，就采用接口获取的方式，将参数实现配置化，会不会更好些呢？</p><p>除此之外，在技术选型的时候，前后端分离的开发方式、主流的技术栈选型、一些典型的设计模式、相对统一的语言类型，其实都有助于平台空间的后续扩展。</p><p><strong>功能可以快速迭代，人员可以快速进入团队，形成战斗力，在设计平台的时候，这些都是需要思考的问题</strong>。</p><p>当然，<strong>顶层规划，不代表过度设计</strong>。我只是说，要在可以预见的范围内，预留一些空间，从而规避后期的尴尬。</p><h3>实现时关注元数据治理</h3><p>所谓元数据，也就是常说的meta-data，可以理解为钥匙链，这些数据可以串起整个平台的数据结构。比如应用名称、模块名称、安全ID等等。</p><p>各个平台在组织数据结构的时候，都需要用到这些元数据，而且一旦使用了，轻易都不好改变。因为，在数据模型里面，这些元数据很有可能已经作为各种主键、外键的约束存在了。</p><p>对于单一平台来说，怎么维护这些元数据，都没什么大问题，但是，对于后续平台间的打通而言，这些元数据就成了一种标准语言。如果平台间的语言不通，就需要加入大量的翻译处理过程，这就导致系统性耦合加大，连接变得脆弱。</p><p>比如，同样是购物车模块，在我的平台里面叫购物车，而在你的平台里面叫shopping-cart，而且还按照平台划分，比如shopping-cart-android、shopping-cart-ios，甚至还有一些特性维度，比如shopping-cart-feature1等等。显然，想让两边的数据对齐，并不容易。</p><p><strong>当然，元数据的治理并不是单一平台能够解决的事情，这同样需要顶层规划</strong>。</p><p>比如，在公司内部建立统一的CMDB，在其中统一管理应用信息。或者，建立应用创建审批流程，通用一个标准化流程，来管控应用的生命周期，同时管理应用的基础信息。这些都属于技术债务，做得越晚，还债的成本就越高。</p><h2>阶段三：从繁到简</h2><p>到了第三个阶段，恭喜你已经在DevOps平台建设方面有了一定的积累，在各个垂直领域也积累了成功案例。那么，在这个阶段，我们要解决的主要问题有3点：</p><ul>\n<li>平台太多。做一件事情，需要各种切来切去；</li>\n<li>平台太复杂。想要实现一个功能，需要对相关人员进行专业培训，他们才能做对；</li>\n<li>平台价值说不清。比如，使用平台，能带来多大价值？能给团队和业务带来多大贡献？</li>\n</ul><p>对于这个阶段，<strong>我给你的建议是：使用整合工具来化繁为简，统一界面，简化操作，有效度量。</strong></p><p>整合工具，就是包含了开源工具、半自研工具、商业工具的集合。</p><p><strong>你要提供的不再是一个工具，而是一整套的解决方案；不是解决一个问题，而是解决交付过程中方方面面的问题。</strong></p><h3>企业工具平台治理</h3><p>如果最开始没有一个顶层规划，到了这个时候，企业内部大大小小的工具平台应该有很多。你需要做的第一步，就是<strong>平台化治理工作</strong>。</p><p>首先，你要识别出来有哪些工具平台，使用情况是怎样的，比如有哪些业务在使用，实现了哪些功能。</p><p>如果要把所有工具平台收编起来，这不是一件容易的事情，甚至超出了技术的范畴。尤其是对很多大企业来说，工具平台是很多团队的根基，如果不需要这个平台，就意味着团队的重心也得调整。</p><p>所以，我给你的第一条建议是比较温和可行的，那就是，<strong>找到软件交付的主路径</strong>。用一个平台覆盖这条主路径，从而串联各个单点上的能力，让一些真正好的平台能够脱颖而出。而要做到这个事情，就需要<strong>持续交付流水线</strong>了。</p><p>这些年来，我一直在从事持续交付平台的建设，也总结了很多经验。我会在后面的内容中，跟你好好聊聊，如何设计一个现代的持续交付流水线平台。</p><p>流水线平台与一体化平台之间，还是有很大差距的。毕竟，各种工具平台的设计思路、操作路径、界面风格，差别很大。</p><p>所以，在实际操作的过程中，我给你的第二条建议就是，<strong>区分平台和工具，让平台脱颖而出</strong>。</p><p>比如，测试环境存在大量的工具，而一整套测试平台，实际上可以满足测试方方面面的需求，也就是说，测试人员只要在这个平台上工作就够了。当企业内部繁杂的工具收敛为几个核心平台之后，对于用户来说，就减少了界面切换的场景，可以通过平台和平台对接完成日常工作。</p><h3>打造自服务的工具平台</h3><p>到了这个阶段，<strong>自服务</strong>就成了平台建设的核心理念。</p><p><strong>所谓自服务，就是用户可以自行登录平台实现自己的操作，查看自己关心的数据，获取有效的信息</strong>。</p><p>而想要实现自服务，<strong>简化操作</strong>是必经之路。说白了，如果一件事情只要一键就能完成，这才是真正地实现了自服务。</p><p>这么说可能有点夸张。但是，打破职能间的壁垒，实现跨职能的赋能，依靠的就是平台的自服务能力。很多时候，当你在埋怨“平台设计得这么简单，为啥还是有人不会用”的时候，其实这只能说明一个问题，就是<strong>平台依然不够简单</strong>。</p><p>之前，Jenkins社区就发起过一个项目，叫作“5 Click，5 Minutes”，意思是希望用户只需要5次点击，花5分钟时间，就能完成一个Jenkins服务的建立。</p><p>这个项目的结果，就是现在的Jenkins创建导航，通过把建立服务的成本降到最低，从而帮助更多的用户上手使用。</p><p>你看，用户体验是否简单，与技术是否高深无关，重点在于是否能够换位思考。所以，在建设平台的时候，要始终保有一份同理心。</p><h2>总结</h2><p>企业内部的平台化建设是个长期问题，如果你要问我，企业要建设DevOps平台，有什么经验总结吗？我的回答就是“四化”：<strong>标准化、自动化、服务化和数据化</strong>。实际上，这些也是指导平台建设的核心理念。</p><ul>\n<li>标准化：一切皆有规则，一切皆有标准；</li>\n<li>自动化：干掉一切不必要的手工操作环节，能一键完成的，绝不操作两次；</li>\n<li>服务化：面向用户设计，而不是面向专家设计，让每个人都能在没有外界依赖的前提下，完成自己的工作；</li>\n<li>数据化：对数据进行收集、汇总、分析和展示，让客观数据呈现出来，让数据指导持续改进。</li>\n</ul><h2>思考题</h2><p>最后，关于平台化建设，你有什么私藏的好工具吗？可以分享一下吗？</p><p>欢迎在留言区写下你的思考和答案，我们一起讨论，共同学习进步。如果你觉得这篇文章对你有所帮助，欢迎你把文章分享给你的朋友。</p><p></p>","neighbors":{"left":{"article_title":"20 | 持续改进：PDCA体系和持续改进的意义","id":170698},"right":{"article_title":"22 | 产品设计之道：DevOps产品设计的五个层次","id":174732}},"comments":[{"had_liked":false,"id":158069,"user_name":"leslie","can_delete":false,"product_type":"c1","uid":1324255,"ip_address":"","ucode":"798E7C1CC98CC2","user_header":"https://static001.geekbang.org/account/avatar/00/14/34/df/64e3d533.jpg","comment_is_top":false,"comment_ctime":1575310982,"is_pvip":false,"replies":[{"id":"60841","content":"其实我的看法是，软件交付这条链路是企业的核心生命线，这条线的效率高低，客观上限制了软件交付的速度和质量，所以自主可控也是从这个角度出发，毕竟商业化工具的响应速度和定制化能力还是要打折扣的。另外，做啥都是为了解决问题哈，工具只是锤子嘛，还得看钉子在哪里，为了做工具而做工具就没啥意义了。","user_name":"作者回复","user_name_real":"石雪峰","uid":"1117795","ctime":1575528487,"ip_address":"","comment_id":158069,"utype":1}],"discussion_count":1,"race_medal":0,"score":"31640082054","product_id":100036601,"comment_content":"       平台工具中其实有中台的概念：只不过DevOps的中台概念和我们知道的中台业务对象不同而已。个人觉得初期开源工具的二次开发或直接商业化是个不错的方案，大幅减少初期时间成本。<br>    个人觉得从产品的角度可以如下流程：<br>     初期如果开源工具能基本满足直接用就可以+适当的商业化；<br>     中期应当是要做二次开发-本质是节约成本；<br>     后期应当是尽可能适当的开发+基于底层内核的二次开发，或者合理整合开源应当是个不错的方案。<br>    产品经理的课学习了一些：从产品的视角去思考DevOps,应当会更清晰的去看待DevOps。单独的从产品或者程序角度去分析或者打造，反而会迷失其真实的合理性。","like_count":8,"discussions":[{"author":{"id":1117795,"avatar":"https://static001.geekbang.org/account/avatar/00/11/0e/63/cef8f0f4.jpg","nickname":"石雪峰","note":"","ucode":"2B3EA5B86D9A0A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":476620,"discussion_content":"其实我的看法是，软件交付这条链路是企业的核心生命线，这条线的效率高低，客观上限制了软件交付的速度和质量，所以自主可控也是从这个角度出发，毕竟商业化工具的响应速度和定制化能力还是要打折扣的。另外，做啥都是为了解决问题哈，工具只是锤子嘛，还得看钉子在哪里，为了做工具而做工具就没啥意义了。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1575528487,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":160590,"user_name":"陈斯佳","can_delete":false,"product_type":"c1","uid":1259323,"ip_address":"","ucode":"C236F874FC767A","user_header":"https://static001.geekbang.org/account/avatar/00/13/37/3b/495e2ce6.jpg","comment_is_top":false,"comment_ctime":1575980848,"is_pvip":false,"replies":[{"id":"61600","content":"没错，特别精辟，在网站设计领域有一本特别经典的书叫做 Don’t make me think，虽然有些年头了，也不厚，可以找来翻翻哈。","user_name":"作者回复","user_name_real":"石雪峰","uid":"1117795","ctime":1576314798,"ip_address":"","comment_id":160590,"utype":1}],"discussion_count":1,"race_medal":0,"score":"18755850032","product_id":100036601,"comment_content":"乔帮主说，好的产品设计，它本身就是说明书，确实有道理","like_count":5,"discussions":[{"author":{"id":1117795,"avatar":"https://static001.geekbang.org/account/avatar/00/11/0e/63/cef8f0f4.jpg","nickname":"石雪峰","note":"","ucode":"2B3EA5B86D9A0A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":477424,"discussion_content":"没错，特别精辟，在网站设计领域有一本特别经典的书叫做 Don’t make me think，虽然有些年头了，也不厚，可以找来翻翻哈。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1576314798,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":160584,"user_name":"陈斯佳","can_delete":false,"product_type":"c1","uid":1259323,"ip_address":"","ucode":"C236F874FC767A","user_header":"https://static001.geekbang.org/account/avatar/00/13/37/3b/495e2ce6.jpg","comment_is_top":false,"comment_ctime":1575980116,"is_pvip":false,"replies":[{"id":"61603","content":"特别赞的补充呀，其实工作也是类似的，如果只是一味消耗，也没有什么成长就可以看成是在消耗自己的费用，相反就是对自己的投资哈。","user_name":"作者回复","user_name_real":"石雪峰","uid":"1117795","ctime":1576315421,"ip_address":"","comment_id":160584,"utype":1}],"discussion_count":2,"race_medal":0,"score":"18755849300","product_id":100036601,"comment_content":"看到老师提到成本和资产，刚好刚才在复习老喻的《人生算法》课里第十一章的涌现也提到了这个概念，摘抄一下以做复习……<br><br>“拼多多的创始人黄峥就是这么一个人，他学习了贝佐斯的思路，他把自己当作一张资产负债表，把每一个生活、工作中的决策都看作投资决策。<br>这个方法的关键，就是你要去分辨，用时间和钱换来的这些东西，哪些是资产（asset），哪些是费用（cost）。随着时间流逝，会加深你的护城河，给你带来新价值的往往是“资产”；而那些只是当前的消耗，或者时间越久对自己越不利的可以看成是费用。<br>选择多投入“资产”，少投入“费用”。随着资产的不断增厚，你这个系统的价值就会越来越大。”","like_count":5,"discussions":[{"author":{"id":1117795,"avatar":"https://static001.geekbang.org/account/avatar/00/11/0e/63/cef8f0f4.jpg","nickname":"石雪峰","note":"","ucode":"2B3EA5B86D9A0A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":477422,"discussion_content":"特别赞的补充呀，其实工作也是类似的，如果只是一味消耗，也没有什么成长就可以看成是在消耗自己的费用，相反就是对自己的投资哈。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1576315421,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1785524,"avatar":"https://static001.geekbang.org/account/avatar/00/1b/3e/b4/c7e71996.jpg","nickname":"胖胖的熊猫","note":"","ucode":"283549662984D2","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":401418,"discussion_content":"厉害厉害","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1633663902,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":159313,"user_name":"a","can_delete":false,"product_type":"c1","uid":1275158,"ip_address":"","ucode":"6DF2FB37C98BE6","user_header":"https://static001.geekbang.org/account/avatar/00/13/75/16/4dd77397.jpg","comment_is_top":false,"comment_ctime":1575597961,"is_pvip":false,"replies":[{"id":"67664","content":"你好，其实这一点并不难实现，首先需要跟研发约定在所有的commit信息中关联需求编号，然后在构建系统中建立代码基线（说白了就是这个版本对应哪个提交就在提交处打个tag），并且比较任意两个版本之间的代码变更记录，并提取其中的需求管理编号，从而生成版本的变更记录哈。","user_name":"作者回复","user_name_real":"石雪峰","uid":"1117795","ctime":1579855539,"ip_address":"","comment_id":159313,"utype":1}],"discussion_count":1,"race_medal":0,"score":"14460499849","product_id":100036601,"comment_content":"石老师好,我在一家民营企业上班,管理层完全没有devops的认知,我们私下两三个人一起基于gitlab,jenkins,kubernetes,istio搭了一套平台实现了容器化,自动化集成和灰度发布等.但目前有一个问题就是所有的版本无法与需求关联起来.<br><br>  我们有一套免费版的TAPD(也没有完全用起来),版本变更内容应该来源于产品和开发,产品的需求可以更新到TAPD,但开发变更的内容也到TAPD去更新对开发来说体验太差了.请问有没有这方面的最挂实践.<br><br>  如果能做到开发在日常开发过程中通过commit代码最后在版本变更中就能自动收集到当前版本的所有变更就好了.<br><br>  希望能够得到大神的指点.","like_count":4,"discussions":[{"author":{"id":1117795,"avatar":"https://static001.geekbang.org/account/avatar/00/11/0e/63/cef8f0f4.jpg","nickname":"石雪峰","note":"","ucode":"2B3EA5B86D9A0A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":477008,"discussion_content":"你好，其实这一点并不难实现，首先需要跟研发约定在所有的commit信息中关联需求编号，然后在构建系统中建立代码基线（说白了就是这个版本对应哪个提交就在提交处打个tag），并且比较任意两个版本之间的代码变更记录，并提取其中的需求管理编号，从而生成版本的变更记录哈。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1579855539,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":158075,"user_name":"Robert小七","can_delete":false,"product_type":"c1","uid":1165254,"ip_address":"","ucode":"6BBF4674673AF5","user_header":"https://static001.geekbang.org/account/avatar/00/11/c7/c6/35cc7c7c.jpg","comment_is_top":false,"comment_ctime":1575325738,"is_pvip":false,"replies":[{"id":"60840","content":"恩恩，你会发现慢慢效率也变成了一种资源，变成一种经济，说白了效率双赢的事情，所以很多公司一方面输出效率产品获取收益，另外一方面也是展现技术能力，以一种增值服务，附加值的方式提供出来，从而推动更大范围的合作。其实这里有一个潜在的风险，就是软件研发流程不会随意变更，否则就乱套了，如果决定采用一个商业化服务，那么就要做好心理准备，是否软件交付的命脉就交给别人了，这就跟当初上云是一模一样的。","user_name":"作者回复","user_name_real":"石雪峰","uid":"1117795","ctime":1575528286,"ip_address":"","comment_id":158075,"utype":1}],"discussion_count":2,"race_medal":0,"score":"10165260330","product_id":100036601,"comment_content":"大型企业如果没有很好的落地devops或者想拥抱devops，我个人建议直接购买第三方商业工具平台，首先是第三方工具平台可以快速帮助你构建一幅devops全景图，帮助企业从理论到实践应用的直接有效提升，他们有更好的功能完整性，易用性，可维护性，安全性等！其次，第三方一般都会提供一些咨询服务，比如培训和项目实战，帮助企业快速建立自己的devops团队并赋能，让企业可以短时间内拥有自己的转型团队，帮助企业在后续进行推广和持续优化！最后，第三方还可以根据企业目前的情况进行定制化开发，比如集成企业目前已有的工具等！目前像阿里云效，京东云，腾讯蓝鲸等都是不错的选择！特别是云效在业内口碑非常不错，服务好，价格实惠，落地效果佳！","like_count":2,"discussions":[{"author":{"id":1117795,"avatar":"https://static001.geekbang.org/account/avatar/00/11/0e/63/cef8f0f4.jpg","nickname":"石雪峰","note":"","ucode":"2B3EA5B86D9A0A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":476621,"discussion_content":"恩恩，你会发现慢慢效率也变成了一种资源，变成一种经济，说白了效率双赢的事情，所以很多公司一方面输出效率产品获取收益，另外一方面也是展现技术能力，以一种增值服务，附加值的方式提供出来，从而推动更大范围的合作。其实这里有一个潜在的风险，就是软件研发流程不会随意变更，否则就乱套了，如果决定采用一个商业化服务，那么就要做好心理准备，是否软件交付的命脉就交给别人了，这就跟当初上云是一模一样的。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1575528286,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1447903,"avatar":"https://static001.geekbang.org/account/avatar/00/16/17/df/3aba2d8e.jpg","nickname":"DevOps在路上","note":"","ucode":"577E324546893C","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":362267,"discussion_content":"但是落地真的很难，不是简单上个工具平台就可以","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1616903092,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":158551,"user_name":"阿硕","can_delete":false,"product_type":"c1","uid":1210978,"ip_address":"","ucode":"39856C29E6614B","user_header":"https://static001.geekbang.org/account/avatar/00/12/7a/62/9b248708.jpg","comment_is_top":false,"comment_ctime":1575418260,"is_pvip":false,"replies":[{"id":"60807","content":"说实话，现在很多公司所谓的知识管理工具就是wiki为主啦，最多代码倡导内部开源和组件共享，另外事件管理有专门的平台，整体并没有一套完整的体系，不像是CICD这么热门哈。","user_name":"作者回复","user_name_real":"石雪峰","uid":"1117795","ctime":1575497510,"ip_address":"","comment_id":158551,"utype":1}],"discussion_count":1,"race_medal":0,"score":"5870385556","product_id":100036601,"comment_content":"石老师，您好，请问关于知识管理的工具，到底如何定义和理解落地呢？谢谢","like_count":1,"discussions":[{"author":{"id":1117795,"avatar":"https://static001.geekbang.org/account/avatar/00/11/0e/63/cef8f0f4.jpg","nickname":"石雪峰","note":"","ucode":"2B3EA5B86D9A0A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":476766,"discussion_content":"说实话，现在很多公司所谓的知识管理工具就是wiki为主啦，最多代码倡导内部开源和组件共享，另外事件管理有专门的平台，整体并没有一套完整的体系，不像是CICD这么热门哈。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1575497510,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":235852,"user_name":"Geek_46be33","can_delete":false,"product_type":"c1","uid":2071854,"ip_address":"","ucode":"7EF4B56E2FABCC","user_header":"","comment_is_top":false,"comment_ctime":1595224338,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1595224338","product_id":100036601,"comment_content":"老师您好，对于gitlab来说，Gogs可以在公司做devops基础建设前提吗","like_count":0},{"had_liked":false,"id":197000,"user_name":"Leo","can_delete":false,"product_type":"c1","uid":1297869,"ip_address":"","ucode":"7FE5B2382858DF","user_header":"https://static001.geekbang.org/account/avatar/00/13/cd/cd/3b4aadf8.jpg","comment_is_top":false,"comment_ctime":1585329786,"is_pvip":true,"discussion_count":0,"race_medal":0,"score":"1585329786","product_id":100036601,"comment_content":"石老师，你们用的测试平台是二次开发的吗？有没有开源或商业的推荐？我们团队最近打算构建这样的平台支持测试开发，测试执行，生成报告等。","like_count":0},{"had_liked":false,"id":162656,"user_name":"小谢同学","can_delete":false,"product_type":"c1","uid":1032544,"ip_address":"","ucode":"E809E6BC470631","user_header":"https://static001.geekbang.org/account/avatar/00/0f/c1/60/fc3689d0.jpg","comment_is_top":false,"comment_ctime":1576574317,"is_pvip":false,"replies":[{"id":"67661","content":"呵呵，希望每个老板都能具备如你这般的视角，效率最终将决定一家企业的天花板的高度，而由我的观察来看，2020年效率将正式进入企业的主战场，这一点在我们公司的战略规划中已经一览无遗，这个方向的发展空间足够大，我们一起加油！","user_name":"作者回复","user_name_real":"石雪峰","uid":"1117795","ctime":1579854964,"ip_address":"","comment_id":162656,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1576574317","product_id":100036601,"comment_content":"devops的服务受众就是企业内部的技术团队，说的再具象一些就是软件产品的生产线，正如工业都提倡4.0等升级概念，软件产业在研发效率和质量控制方面的投入绝对是值得的，这部分钱绝对不是简单的成本中心，而是可以带来利润中心的效果","like_count":0,"discussions":[{"author":{"id":1117795,"avatar":"https://static001.geekbang.org/account/avatar/00/11/0e/63/cef8f0f4.jpg","nickname":"石雪峰","note":"","ucode":"2B3EA5B86D9A0A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":478119,"discussion_content":"呵呵，希望每个老板都能具备如你这般的视角，效率最终将决定一家企业的天花板的高度，而由我的观察来看，2020年效率将正式进入企业的主战场，这一点在我们公司的战略规划中已经一览无遗，这个方向的发展空间足够大，我们一起加油！","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1579854964,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":160982,"user_name":"happychap","can_delete":false,"product_type":"c1","uid":1388033,"ip_address":"","ucode":"C872B959BF2F3D","user_header":"https://static001.geekbang.org/account/avatar/00/15/2e/01/14a478bb.jpg","comment_is_top":false,"comment_ctime":1576072962,"is_pvip":true,"replies":[{"id":"67648","content":"哈哈，工具其实从来不是问题，不过对于一个十几年的老产品，跟不上节奏也是正常的，不过在我们的实践中，依然还是使用Jenkins，其实说到底还是因为熟悉吧，毕竟对于用户来说，他们压根不关心这些细节，因为都被平台封装和屏蔽掉了。","user_name":"作者回复","user_name_real":"石雪峰","uid":"1117795","ctime":1579852761,"ip_address":"","comment_id":160982,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1576072962","product_id":100036601,"comment_content":"总觉得jenkin有点英雄迟暮的感觉，更亲睐drone.io。自定义，简洁，saas服务化，插件与底座藕合度低等。不过最关键的还是在于人和流程(✿◡‿◡)","like_count":0,"discussions":[{"author":{"id":1117795,"avatar":"https://static001.geekbang.org/account/avatar/00/11/0e/63/cef8f0f4.jpg","nickname":"石雪峰","note":"","ucode":"2B3EA5B86D9A0A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":477554,"discussion_content":"哈哈，工具其实从来不是问题，不过对于一个十几年的老产品，跟不上节奏也是正常的，不过在我们的实践中，依然还是使用Jenkins，其实说到底还是因为熟悉吧，毕竟对于用户来说，他们压根不关心这些细节，因为都被平台封装和屏蔽掉了。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1579852761,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":160589,"user_name":"陈斯佳","can_delete":false,"product_type":"c1","uid":1259323,"ip_address":"","ucode":"C236F874FC767A","user_header":"https://static001.geekbang.org/account/avatar/00/13/37/3b/495e2ce6.jpg","comment_is_top":false,"comment_ctime":1575980757,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1575980757","product_id":100036601,"comment_content":"感觉虽然不一定要做产品经理，但是产品经理的思路和同理心真是很重要的竞争力。这时候想想马化腾一秒钟变小白的能力真是令人佩服，需要学习","like_count":0},{"had_liked":false,"id":159277,"user_name":"一步","can_delete":false,"product_type":"c1","uid":1005391,"ip_address":"","ucode":"73CEA468CE70C3","user_header":"https://static001.geekbang.org/account/avatar/00/0f/57/4f/6fb51ff1.jpg","comment_is_top":false,"comment_ctime":1575594264,"is_pvip":true,"replies":[{"id":"67640","content":"你好，对于大公司来说，数据变更管理平台都是自研的，因为这些都是DBA的自留地，他们有自己的规则和流程。工具方面的话，像是flyway，inception，还有小米开源的soar也都集成了基本的审核扫描检测功能，可以基于他们的来进行二次开发哈。","user_name":"作者回复","user_name_real":"石雪峰","uid":"1117795","ctime":1579851800,"ip_address":"","comment_id":159277,"utype":1}],"discussion_count":2,"race_medal":0,"score":"1575594264","product_id":100036601,"comment_content":"数据库管理平台，比如管理SQL的变化，老师有什么工具推荐吗？现在利用的git进行版本化管理的，但是不能清晰的看到变更的语句是什么，很是不方便高效，每次部署应用都很头疼","like_count":1,"discussions":[{"author":{"id":1117795,"avatar":"https://static001.geekbang.org/account/avatar/00/11/0e/63/cef8f0f4.jpg","nickname":"石雪峰","note":"","ucode":"2B3EA5B86D9A0A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":476999,"discussion_content":"你好，对于大公司来说，数据变更管理平台都是自研的，因为这些都是DBA的自留地，他们有自己的规则和流程。工具方面的话，像是flyway，inception，还有小米开源的soar也都集成了基本的审核扫描检测功能，可以基于他们的来进行二次开发哈。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1579851800,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1275158,"avatar":"https://static001.geekbang.org/account/avatar/00/13/75/16/4dd77397.jpg","nickname":"a","note":"","ucode":"6DF2FB37C98BE6","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":73810,"discussion_content":"我们也有这样的困惑,希望能得到老师的意见.","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1575598065,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]}]}