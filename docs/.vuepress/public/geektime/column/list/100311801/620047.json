{"id":620047,"title":"14｜聚合的概念：怎样保护业务规则？","content":"<p>你好，我是钟敬。</p><p>上节课我们介绍了迭代二的内容和目标。接下来几节课，咱们会通过实现几个新增的功能，学习DDD中的一个重要模式“聚合”（Aggregate)。今天，我们先来理解聚合的概念和领域建模，为我们后面几节课实现聚合打好基础。</p><p>到现在为止，我们已经识别出不少业务规则了。不过，其中有一些并不像表面上看起来那么容易维护，有时会被莫名其妙地破坏，而且这种破坏不容易发现。聚合就是保护业务规则的一种有效手段。</p><h2>聚合的概念</h2><p>现在我们来考虑怎么为<strong>员工</strong>的<strong>工作经验</strong>和<strong>技能</strong>建模。从业务角度，这两者其实都是员工信息的一部分。我们先从迭代一的模型中找到员工实体的位置，如下图。<br>\n<img src=\"https://static001.geekbang.org/resource/image/5a/dc/5aa7f7e0f92d48a8490dc15452d719dc.jpg?wh=3733x2312\" alt=\"\"></p><p>然后，我们为员工添加上<strong>工作经验</strong>和<strong>技能</strong>两个实体，如下图。<br>\n<img src=\"https://static001.geekbang.org/resource/image/c4/df/c4bb69bf4ea76de8dc9e60f7985876df.jpg?wh=3068x2407\" alt=\"\"></p><p>在图里，我们先暂时忽略掉组织管理以外的其他模块。技能和工作经验与员工都是多对一的关系，这个容易理解。</p><p>另外，我们增加了<strong>技能类别</strong>实体，用来定义一共有多少种技能。也就是说，可能有Java、SQL、Linux等很多种技能，这些都会定义在<strong>技能类别</strong>里面，然后录入员工技能的时候，从列表中选择就可以了。</p><p>这里比较关键的问题是和<strong>技能</strong>、<strong>工作经验</strong>有关的两个业务规则。我们先看和技能有关的规则：“同一技能不能录入两次”。比如说，小张给自己录入了一遍“10年，高级Java技能”，那么他就不能再新增一条“5年，中级Java技能”，而只能修改原来那条Java技能，或者删除原来的，再新增一条。这个规则很合理吧？</p><!-- [[[read_end]]] --><p>顺便说一下，这种业务规则在员工的整个生命周期都是有效的，不会有时候有效，有时候又无效了。这种规则在术语上称为“<strong>不变规则</strong>”（invariant）。</p><p>问题在于，在并发的环境下，这个不变规则可能会被破坏。现在咱们想象一下，假设现在小张还没有Java的技能，有两个人事部门的同事A和B同时录入小张的技能。操作顺序是这样的。</p><ol>\n<li>A查询到小张没有Java技能。</li>\n<li>同一时刻，B也查询到小张没有Java技能。</li>\n<li>A为小张添加Java技能并提交。这时，从A的线程来看，小张还没有Java技能。</li>\n<li>在A的线程还没有把数据保存到数据库那一刻，B也提交了小张的Java技能。这时，从B的线程来看，小张也还没有Java技能。</li>\n<li>A和B的数据都保存到了数据库，这时，数据库中，小张就有了两条Java技能记录，不变规则就被破坏了。</li>\n</ol><p>那么，怎么避免破坏不变规则呢？</p><p>凡是并发引起的问题，你可能已经想到要用事务和锁了。问题是锁住什么。对于某些不变规则，锁住一条记录就可以解决问题。不过对我们现在这条规则而言，锁住一条技能记录是没有用的，因为新建的时候数据库里还没有记录呢。</p><p>问题的关键在于，从业务角度，小张的员工信息作为一个整体，不应该同时被两个人操作。从技术角度来说，不应该被两个线程同时操作。也就是说，只有一个人做完了，另一个人才能做。那么怎样保证这一点呢？</p><p>这就需要在一个人操作时，用事务把包含技能在内的员工信息作为一个整体锁起来，等到这个事务提交后，锁被释放，另一个人才能操作。这也可以说成“<strong>员工和技能都在同一个事务边界之内</strong>”。</p><p>我们知道，事务有 ACID 特性。一般说“要么都成功，要么都失败”，说的是 A，也就是原子性（Atomicity），而这里强调的是 I ，隔离性（Isolation），以及 C，一致性（Consistency）。也就是说，事务之间必须相互隔离，不能互相干扰，从而保证数据是一致的。具体的实现方法，我们会在后面的课程讲解。</p><p>现在我们归纳一下，员工和技能这两个实体有两个重要特征。</p><p>第一，<strong>具有整体与部分的关系</strong>。也就是说，逻辑上，员工信息是整体，而技能信息是员工信息的一部分。</p><p>第二，<strong>具有不变规则，而且这种不变规则在并发的时候可能被破坏</strong>。要防止规则的破坏，仅仅锁住一条技能记录是不够的，必须把员工和所有技能作为一个整体锁住才能解决。或者说，员工和他的所有技能确定了一个事务边界。</p><p>具有这样特征的一组领域对象，在 DDD 里就叫做一个<strong>聚合</strong>（Aggregate）。</p><p><strong>工作经验</strong>和<strong>员工</strong>也具有类似的关系。其中，工作经验是员工信息的一部分，这一点容易理解。那么“工作经验的时间段不能重复”这条规则在并发的情况下会怎样被破坏呢？你可以先思考一下，在第16课里我们会讲到。</p><h2>聚合的表示法</h2><p>下一步，我们把<strong>员工</strong>、<strong>技能</strong>和<strong>工作经验</strong>的这种<strong>聚合</strong>关系，在领域模型中显式地表达出来，如下图。</p><p><img src=\"https://static001.geekbang.org/resource/image/d5/7e/d500d472db6f1e9057e3f6796d08047e.jpg?wh=3068x2407\" alt=\"\"></p><p>让我们看看这个图是怎么表达的。</p><p>首先，在员工实体名字上方，我们加了一个 &lt;&lt;aggregate root&gt;&gt; 的标识，中文是聚合根的意思。<strong>在一个聚合里，像员工这样代表整体的实体就是聚合根。一个聚合只有一个聚合根。</strong></p><p>另外，&lt;&lt;aggregate root&gt;&gt; 外面这个像书名号一样的符号，其实不是书名号，而是两个小于号和两个大于号。这个符号在UML里叫做 stereotype ，中文译作“<strong>衍型</strong>”。这是UML里用来扩充符号意思的一种机制。</p><p>比如说，表示员工实体的方框在UML中本来用来表示“类”。加上&lt;&lt;aggregate root&gt;&gt;以后，就衍生出了“表示聚合根的类”的符号。所谓“衍型”就是“衍生出来的符号类型”。这种机制我们后面还会用到。</p><p>再看表示<strong>员工</strong>和<strong>技能</strong>一对多关联的那条实线。在员工一端，变成了一个空心棱形。这种符号专门表示整体部分关系，有菱形的一端是代表“整体”的对象，另一端是代表“部分”的对象。整体部分关系是关联关系的一种特例。</p><p>另外，原来这一端的 “1..1” 被删掉了。因为，对于这种整体部分关系而言，这一端必然是 “1..1”。你可以思考一下为什么。虽然写上 “1..1” 也对，但由于必然是，所以出于简洁的原因，就可以不写了。</p><p>最后，我们用一个包把这个<strong>聚合</strong>中的类包起来，从而可以一眼看出这个<strong>聚合</strong>的边界。一般我们约定，<strong>聚合包的名字和聚合根的名字是一样的</strong>。</p><h2>识别更多的聚合</h2><p>现在我们继续看一下另外几个需求：<strong>要为客户经理、合同经理以及项目经理保存变更历史</strong>。比如说，要记录在什么时间段，某个客户的客户经理是张三，什么时间段又变成了李四，当前客户经理是哪一位。通过这几个需求看看能否找到更多的聚合。</p><p>让我们先看看目前模型的样子。<br>\n<img src=\"https://static001.geekbang.org/resource/image/8f/75/8f44399d14d4e1e8950ce2eb0c7b1975.jpg?wh=3733x2313\" alt=\"\"></p><p>画红圈的部分就是我们要改进的地方。增加了三个变更信息后，变成下面的样子，看看和你心目中的一不一样？<br>\n<img src=\"https://static001.geekbang.org/resource/image/9a/0f/9aef1d0450affcbfdc4cca62a134b50f.jpg?wh=3472x2318\" alt=\"\"></p><p>在这个图里暂时省去了没有直接关系的模块。三个关联是类似的，我们以<strong>客户经理</strong>为例来说明。</p><p>客户经理的变更信息，实际上是员工和客户之间的一种多对多关联。也就是说，一个员工可以作为多个客户的客户经理，而一个客户，在不同的时间，也可以有多个不同的客户经理。我们在上一个迭代学过，一个多对多可以拆成两个一对多。对于这个需求，客户经理实体就是用来表达这个多对多关联的。</p><p>注意到图中“时间段不能重叠”这个不变规则没有？这个规则也是不能仅仅靠锁住一条记录就可以保证的。此外，客户经理的信息，可以看作客户信息的一部分。所以，<strong>客户和客户经理也构成了聚合</strong>。合同经理和项目经理也类似。</p><p>这里还有一个小问题。客户和员工之间原来直接的关联还存在，不过角色名由“客户经理”改成了“/当前客户经理”。按理说，客户经理实体中，状态为“有效”的就是当前客户经理，本来不必保留原来这条关联了。</p><p>不过，一般来说，业务人员最关心的就是当前客户经理，历史变更信息只在少数情况下才用到。所以，领域专家希望强调<strong>当前客户经理</strong>这个概念。因此，我们保留了这个关联。</p><p>这个关联是可以由客户经理推导出来的，称为“<strong>派生关联</strong>”（derived association）。仔细看一下，在“/当前客户经理”前面有一个斜杠。在 UML中，凡是前面有斜杠的，就表示是派生出来的内容。</p><p>识别出聚合以后，模型图变成下面的样子。<br>\n<img src=\"https://static001.geekbang.org/resource/image/13/e2/13a017fbf72295ac8c771a16fe4de6e2.jpg?wh=3231x2314\" alt=\"\"></p><h2>进一步理解聚合概念</h2><p>现在，相信你对聚合的基本概念和建模技术已经有了一定了解了吧。下面我们再进一步思考一下。</p><p>前面我们提到，聚合的两个基本特征是整体部分关系和不变规则。由此又可以得出几个推论。</p><p>首先，作为部分的实体，只能属于一个聚合根，不可能属于多个聚合根。比如说，一条技能信息，只能属于一个员工，不能属于多个员工。又比如说，我的手只能是我一个人的手，不能同时又是其他人的手。</p><p>其次，我的手是不能“跳槽”的。不能今天是我的手，明天就变成了别人的手。也就是说，一个聚合的一部分，不能再变成其他聚合根的一部分。</p><p>再次，由前两条自然可以推出，聚合根被删除，那么聚合中的所有对象都会被删除。</p><p>最后，还有一个“标识”的问题。在业务上，为了识别每个实体，实体必然要有一个<strong>标识</strong>。例如，人的标识，可以是身份证号。如果这个人是学生，那么他的标识也可以是学号。注意，这里说的标识是一个业务概念，而不是技术概念，和数据库表中常见的没有业务概念的ID是不同的。</p><p>对于聚合而言，<strong>聚合根要有全局的唯一标识</strong>，而从属于聚合根的实体只需要有局部于聚合的标识。例如，员工是聚合根，员工号是全局标识。而工作经验没有必要进行全局编号，只需要在聚合内部编个号就可以了。例如，001号员工的第 1 份工作经验、第2份工作经验等等。</p><p><strong>我们再来考虑一下聚合的作用。</strong>聚合最基本的作用，是为一组具有整体部分关系的对象维护不变规则。而当我们掌握了这种建模技术以后，还可以发现其他一些层面的作用。</p><p>首先，聚合不仅是“被动地”实现不变规则，它还为我们提供了一个新的视角，可以更细致地和业务人员讨论业务规则。从这个视角去思考过去做过的系统，我们很可能会发现一些遗漏的业务规则。</p><p>其次，开发人员过去一般认为事务只是一个技术概念。现在我们可以看到，事务其实是来源于业务规则的，本质上是个业务问题。也就是说，聚合在业务规则和事务之间建立了起联系。</p><p>再次，我们在模型上为每个聚合建了一个包，可以认为，聚合是一种特殊的模块。这样，模型的层次就变得更清晰了。同时，我们也可以把<strong>聚合</strong>当作一个粗粒度的概念单位进行思考，降低了认知负载。</p><p>最后，不少开发人员编程时觉得事务范围的大小不好把握。聚合作为一个事务边界，给出了事务范围的下限，为开发时确定事务范围提供了参考。</p><h2>总结</h2><p>好，这节课的主要内容就讲完了，下面来总结一下。</p><p>聚合是 DDD 里的一个重要模式，主要作用是<strong>维护不变规则</strong>。如果一组对象具有整体部分关系，并且需要维护整体上的不变规则，那么就可以识别为一个聚合。其中表示整体的那个实体叫做聚合根。</p><p>为了在模型中表示聚合，我们使用了叫做&lt;&lt;aggregate root&gt;&gt;的衍型来表示聚合根；在关联上用空心菱形符号表示整体部分关系；并用一个包把聚合包起来，包的名字一般和聚合根的名字相同。另外，在识别客户经理等聚合的时候，我们还介绍了<strong>派生关联</strong>。</p><p>通过整体部分这一特征，我们还可以推出其他几个特征，包括：表示部分的实体只能属于一个聚合，并且不能再变成其他聚合的一部分；聚合根被删除的话，整个聚合的实体都要被删除；聚合根有全局标识，非聚合根实体只有局部标识。</p><p>聚合的作用，除了确保不变规则以外，还为我们增加了一个分析业务规则的视角，将业务规则和事务联系起来，增加了模型的清晰度，并且使开发人员更容易确定事务的范围。</p><h2>思考题</h2><p>1.能否在你的实际项目中找到不变规则的例子，这些规则有没有被恰当地保护起来？</p><p>2.仅仅依靠数据库提供的事务机制，可以保证这种不变规则吗？为什么？</p><p>好，今天的课程结束了，有什么问题欢迎在评论区留言，下节课，我们开始对今天的模型进行实现。</p>","comments":[{"had_liked":false,"id":366979,"user_name":"腾挪","can_delete":false,"product_type":"c1","uid":1003853,"ip_address":"上海","ucode":"E80661F2235344","user_header":"https://static001.geekbang.org/account/avatar/00/0f/51/4d/0aceadde.jpg","comment_is_top":false,"comment_ctime":1674732836,"is_pvip":false,"replies":[{"id":133753,"content":"共同进步 ：）","user_name":"作者回复","user_name_real":"编辑","uid":1288110,"ctime":1674914709,"ip_address":"广东","comment_id":366979,"utype":1}],"discussion_count":2,"race_medal":0,"score":2,"product_id":100311801,"comment_content":"👍第一次看到有人把“聚合”这个概念讲得如此通透，感谢。","like_count":12,"discussions":[{"author":{"id":1288110,"avatar":"https://thirdwx.qlogo.cn/mmopen/vi_32/VBLEAcychgbs5CicUczSYcibicoicZmyk1JHHFiae94KuvVsibAKtcQAvnOPWp0C4yvia8mzvQAORiazjWSoc1XQ9QkLrQ/132","nickname":"钟敬","note":"","ucode":"20B3D31A2C8C86","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":600870,"discussion_content":"共同进步 ：）","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1674914709,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"广东","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1157771,"avatar":"https://static001.geekbang.org/account/avatar/00/11/aa/8b/6843a110.jpg","nickname":"yuzhe","note":"","ucode":"CDD4521583E82F","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":620289,"discussion_content":"同感，比看原书效率高多了","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1686021470,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":"上海","group_id":0},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":365768,"user_name":"Ouyang","can_delete":false,"product_type":"c1","uid":1103201,"ip_address":"广东","ucode":"D623F2150A806D","user_header":"https://static001.geekbang.org/account/avatar/00/10/d5/61/75c6f392.jpg","comment_is_top":false,"comment_ctime":1672988769,"is_pvip":false,"replies":[{"id":133222,"content":"你说得对，本来是这样，但《DDD》原书用错了，如果改过来，命名又会混淆。所以课程里是将错就错的策略。用实心菱形确实更符合UML.","user_name":"作者回复","user_name_real":"编辑","uid":1288110,"ctime":1672995177,"ip_address":"广东","comment_id":365768,"utype":1}],"discussion_count":3,"race_medal":0,"score":2,"product_id":100311801,"comment_content":"ddd聚合的概念，如果用uml图来表示，是不是用组合，也就是实心的菱形更合适？\numl聚合，部分可以脱离整体存在，uml组合，部分不可以脱离整体存在","like_count":11,"discussions":[{"author":{"id":1288110,"avatar":"https://thirdwx.qlogo.cn/mmopen/vi_32/VBLEAcychgbs5CicUczSYcibicoicZmyk1JHHFiae94KuvVsibAKtcQAvnOPWp0C4yvia8mzvQAORiazjWSoc1XQ9QkLrQ/132","nickname":"钟敬","note":"","ucode":"20B3D31A2C8C86","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":598689,"discussion_content":"你说得对，本来是这样，但《DDD》原书用错了，如果改过来，命名又会混淆。所以课程里是将错就错的策略。用实心菱形确实更符合UML.","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1672995178,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"广东","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1540332,"avatar":"https://static001.geekbang.org/account/avatar/00/17/80/ec/b6149cbf.jpg","nickname":"老狗","note":"","ucode":"80927B4D31CFCE","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":600124,"discussion_content":"收回我的话，DDD聚合=UML组合，组合的定义是 1. 不可共享 2. 不可游离 3. 级连删除","likes_number":3,"is_delete":false,"is_hidden":false,"ctime":1674026675,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":"广东","group_id":0},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1540332,"avatar":"https://static001.geekbang.org/account/avatar/00/17/80/ec/b6149cbf.jpg","nickname":"老狗","note":"","ucode":"80927B4D31CFCE","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":600120,"discussion_content":"我觉得DDD的聚合和UML的组合不是完全等价的，组合是同生命周期的，但DDD聚合只是有一个唯一约束，这是两个层面的事情，比如汽车和轮胎在某业务场景下是DDD的聚合，但不一定系统上汽车销毁了它的轮胎就销毁了，有可能被装到另一个车上了。","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1674023628,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":"广东","group_id":0},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":367674,"user_name":"Jaising","can_delete":false,"product_type":"c1","uid":1037630,"ip_address":"浙江","ucode":"F68830B7B90F96","user_header":"https://static001.geekbang.org/account/avatar/00/0f/d5/3e/7f3a9c2b.jpg","comment_is_top":false,"comment_ctime":1675415190,"is_pvip":false,"replies":[{"id":133954,"content":"不错","user_name":"作者回复","user_name_real":"编辑","uid":1288110,"ctime":1675642786,"ip_address":"广东","comment_id":367674,"utype":1}],"discussion_count":1,"race_medal":0,"score":2,"product_id":100311801,"comment_content":"翻了下 《UML和模式应用》 结合钟老师和其他评论——《DDD》 里的聚合用 UML 表示的话就是组合，应该用实心菱形表示，这里就将错就错了。DDD 的聚合具有特点：不能共享，不可游离，级联删除。\n迭代一的建模练习现在看来可以进一步优化：比如用户故事与优先级应该是一个以用户故事为聚合根的聚合，因为优先级依赖用户故事存在，属于整体拥有部分这种模型，并且用户故事的优先级具备不变规则特性，并发调整优先级会产生破坏。","like_count":5,"discussions":[{"author":{"id":1288110,"avatar":"https://thirdwx.qlogo.cn/mmopen/vi_32/VBLEAcychgbs5CicUczSYcibicoicZmyk1JHHFiae94KuvVsibAKtcQAvnOPWp0C4yvia8mzvQAORiazjWSoc1XQ9QkLrQ/132","nickname":"钟敬","note":"","ucode":"20B3D31A2C8C86","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":602049,"discussion_content":"不错","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1675642786,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"广东","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":366262,"user_name":"小5","can_delete":false,"product_type":"c1","uid":1074736,"ip_address":"广东","ucode":"F99936F37D04E4","user_header":"https://static001.geekbang.org/account/avatar/00/10/66/30/ce2cc535.jpg","comment_is_top":false,"comment_ctime":1673518393,"is_pvip":false,"replies":[{"id":133677,"content":"这是一个业务人员关注的规则对吧，只要是这样，就放领域层","user_name":"作者回复","user_name_real":"编辑","uid":1288110,"ctime":1674452418,"ip_address":"广东","comment_id":366262,"utype":1}],"discussion_count":2,"race_medal":0,"score":2,"product_id":100311801,"comment_content":"对于不变规则，有个问题请假老师。\n业务背景： 系统中有客户，客户下面有一个或者多个联系人\n不变规则：同一个客户下面的联系人名称和手机号不能重复\n新需求：现在增加一个需求， 需要根据租户的参数设置（是否允许联系人手机号重复）去校验。 如果不允许重复的话就需要校验整个租户下面的联系人手机号不允许重复。\n问题：想问下这个根据参数设置动态校验的逻辑是应该写在领域层还是应用层呢？","like_count":4,"discussions":[{"author":{"id":1288110,"avatar":"https://thirdwx.qlogo.cn/mmopen/vi_32/VBLEAcychgbs5CicUczSYcibicoicZmyk1JHHFiae94KuvVsibAKtcQAvnOPWp0C4yvia8mzvQAORiazjWSoc1XQ9QkLrQ/132","nickname":"钟敬","note":"","ucode":"20B3D31A2C8C86","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":600505,"discussion_content":"这是一个业务人员关注的规则对吧，只要是这样，就放领域层","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1674452418,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"广东","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":1,"child_discussions":[{"author":{"id":1074736,"avatar":"https://static001.geekbang.org/account/avatar/00/10/66/30/ce2cc535.jpg","nickname":"小5","note":"","ucode":"F99936F37D04E4","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1288110,"avatar":"https://thirdwx.qlogo.cn/mmopen/vi_32/VBLEAcychgbs5CicUczSYcibicoicZmyk1JHHFiae94KuvVsibAKtcQAvnOPWp0C4yvia8mzvQAORiazjWSoc1XQ9QkLrQ/132","nickname":"钟敬","note":"","ucode":"20B3D31A2C8C86","race_medal":0,"user_type":2,"is_pvip":false},"discussion":{"id":600506,"discussion_content":"是的，是业务人员关注的逻辑。我也觉得都是检验逻辑如果还分散在不同地方，与“高内聚”相背离了，老师的回答让我更加确信了","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1674452936,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":600505,"ip_address":"广东","group_id":0},"score":600506,"extra":""}]}]},{"had_liked":false,"id":366220,"user_name":"南山","can_delete":false,"product_type":"c1","uid":1119593,"ip_address":"江苏","ucode":"94656FE4A6C378","user_header":"https://static001.geekbang.org/account/avatar/00/11/15/69/187b9968.jpg","comment_is_top":false,"comment_ctime":1673490744,"is_pvip":false,"replies":[{"id":133678,"content":"这几个问题比较微妙，可以继续探讨，我尝试回答一下。\n1.关于整体部分关系，还要看用户的理解，比如，用户是把项目当成一个单独的单元去处理，还是每次都经由合同再去处理项目\n2.可以再加强一下，必须是即时保证的，每时每刻都不变的规则。理论上可以用最终一致性处理的，就不算了。\n3.理论上有，可以考虑其他方式保证，聚合不是处理不变规则的唯一方式。","user_name":"作者回复","user_name_real":"编辑","uid":1288110,"ctime":1674453299,"ip_address":"广东","comment_id":366220,"utype":1}],"discussion_count":1,"race_medal":0,"score":2,"product_id":100311801,"comment_content":"客户、合同、项目每个都是一个聚合的判断依据是什么呢？感觉和说的1.整体部分，2.具有不变规则，而且并发时可能被破坏\n 1.客户与合同、合同与项目是不是也有整体部分的关系，比如合同终止了，项目是不是也就取消或者完成了呢？\n2.划分成独立聚合是考虑没有不变规则吗？\n3.同一个合同也有可能创建多个项目来落地，理论上是不是也可能存不变规则被破坏？","like_count":4,"discussions":[{"author":{"id":1288110,"avatar":"https://thirdwx.qlogo.cn/mmopen/vi_32/VBLEAcychgbs5CicUczSYcibicoicZmyk1JHHFiae94KuvVsibAKtcQAvnOPWp0C4yvia8mzvQAORiazjWSoc1XQ9QkLrQ/132","nickname":"钟敬","note":"","ucode":"20B3D31A2C8C86","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":600507,"discussion_content":"这几个问题比较微妙，可以继续探讨，我尝试回答一下。\n1.关于整体部分关系，还要看用户的理解，比如，用户是把项目当成一个单独的单元去处理，还是每次都经由合同再去处理项目\n2.可以再加强一下，必须是即时保证的，每时每刻都不变的规则。理论上可以用最终一致性处理的，就不算了。\n3.理论上有，可以考虑其他方式保证，聚合不是处理不变规则的唯一方式。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1674453299,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"广东","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":365665,"user_name":"hk","can_delete":false,"product_type":"c1","uid":1057377,"ip_address":"广东","ucode":"92996CA0BCDD66","user_header":"https://static001.geekbang.org/account/avatar/00/10/22/61/580bb3c3.jpg","comment_is_top":false,"comment_ctime":1672883141,"is_pvip":false,"replies":[{"id":133226,"content":"谢谢肯定，咱们共同提高","user_name":"作者回复","user_name_real":"编辑","uid":1288110,"ctime":1672995482,"ip_address":"广东","comment_id":365665,"utype":1}],"discussion_count":1,"race_medal":0,"score":2,"product_id":100311801,"comment_content":"老师这课讲的很通透，理论结合实践，至少我学起来少走很多弯路","like_count":4,"discussions":[{"author":{"id":1288110,"avatar":"https://thirdwx.qlogo.cn/mmopen/vi_32/VBLEAcychgbs5CicUczSYcibicoicZmyk1JHHFiae94KuvVsibAKtcQAvnOPWp0C4yvia8mzvQAORiazjWSoc1XQ9QkLrQ/132","nickname":"钟敬","note":"","ucode":"20B3D31A2C8C86","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":598693,"discussion_content":"谢谢肯定，咱们共同提高","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1672995482,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"广东","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":380615,"user_name":"zyc","can_delete":false,"product_type":"c1","uid":2160985,"ip_address":"上海","ucode":"734B496867F790","user_header":"https://static001.geekbang.org/account/avatar/00/20/f9/59/b4c48cf3.jpg","comment_is_top":false,"comment_ctime":1693894641,"is_pvip":false,"replies":[{"id":138954,"content":"聚合的要求是修改聚合的任何部分，都要把这个聚合锁起来，这样降低的并发性，所以要谨慎一点，一般只设计小聚合。如果把项目成员也作为项目聚合的一部分，那么修改项目成员时，就要把整个聚合（包括项目和所有项目成员等）锁住，显然范围太大了。","user_name":"作者回复","user_name_real":"编辑","uid":1288110,"ctime":1695269331,"ip_address":"广东","comment_id":380615,"utype":1}],"discussion_count":2,"race_medal":0,"score":2,"product_id":100311801,"comment_content":"有个疑问，《项目》的聚合中，是不是《项目成员》也应该是聚合的一部分，同《项目经理》一样也属于《项目》这个聚合根？","like_count":3,"discussions":[{"author":{"id":1288110,"avatar":"https://thirdwx.qlogo.cn/mmopen/vi_32/VBLEAcychgbs5CicUczSYcibicoicZmyk1JHHFiae94KuvVsibAKtcQAvnOPWp0C4yvia8mzvQAORiazjWSoc1XQ9QkLrQ/132","nickname":"钟敬","note":"","ucode":"20B3D31A2C8C86","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":628388,"discussion_content":"聚合的要求是修改聚合的任何部分，都要把这个聚合锁起来，这样降低的并发性，所以要谨慎一点，一般只设计小聚合。如果把项目成员也作为项目聚合的一部分，那么修改项目成员时，就要把整个聚合（包括项目和所有项目成员等）锁住，显然范围太大了。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1695269332,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"广东","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1588683,"avatar":"https://static001.geekbang.org/account/avatar/00/18/3d/cb/791d0f5e.jpg","nickname":"猴哥","note":"","ucode":"63A1BFDF13D85D","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":649859,"discussion_content":"还有这层考虑呢，woc","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1724064756,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":"浙江","group_id":0},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":369443,"user_name":"quietwater","can_delete":false,"product_type":"c1","uid":1055029,"ip_address":"北京","ucode":"C25E2CD356D3F9","user_header":"https://static001.geekbang.org/account/avatar/00/10/19/35/be8372be.jpg","comment_is_top":false,"comment_ctime":1677552010,"is_pvip":false,"replies":[{"id":134739,"content":"在我们的例子里，由于项目经理实体（或者考虑项目经理表也行）里有时间段，也有状态，所以完全可以从项目经理实体中得出“当前项目经理”。所以“当前项目经理”那个关联是不必画的。画了以后反而是冗余的。一般而言图里最好不要有冗余。但是，领域专家可能特别关注“当前项目经理”这个概念，所以特别想在图里画出来。这时候，可以画出来，但最好标明，这是一个“派生”出来的关联。","user_name":"作者回复","user_name_real":"编辑","uid":1288110,"ctime":1677920850,"ip_address":"广东","comment_id":369443,"utype":1}],"discussion_count":1,"race_medal":0,"score":2,"product_id":100311801,"comment_content":"老师，对派生关联没有完全理解，能否再详细解释一下这个概念。","like_count":3,"discussions":[{"author":{"id":1288110,"avatar":"https://thirdwx.qlogo.cn/mmopen/vi_32/VBLEAcychgbs5CicUczSYcibicoicZmyk1JHHFiae94KuvVsibAKtcQAvnOPWp0C4yvia8mzvQAORiazjWSoc1XQ9QkLrQ/132","nickname":"钟敬","note":"","ucode":"20B3D31A2C8C86","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":607490,"discussion_content":"在我们的例子里，由于项目经理实体（或者考虑项目经理表也行）里有时间段，也有状态，所以完全可以从项目经理实体中得出“当前项目经理”。所以“当前项目经理”那个关联是不必画的。画了以后反而是冗余的。一般而言图里最好不要有冗余。但是，领域专家可能特别关注“当前项目经理”这个概念，所以特别想在图里画出来。这时候，可以画出来，但最好标明，这是一个“派生”出来的关联。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1677920850,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"广东","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":386244,"user_name":"keys头","can_delete":false,"product_type":"c1","uid":1444919,"ip_address":"浙江","ucode":"47C3E0648A8434","user_header":"https://static001.geekbang.org/account/avatar/00/16/0c/37/913de94f.jpg","comment_is_top":false,"comment_ctime":1704371745,"is_pvip":false,"replies":[{"id":141219,"content":"非常好的问题。聚合不是控制并发规则的唯一方式。你举的这个情况，聚合不能完全解决了。从建模的角度，还是建议客户 和客户经理作为一个聚合。但要用两把锁才能控制了。客户一把锁，员工一把锁。","user_name":"作者回复","user_name_real":"编辑","uid":1288110,"ctime":1708159270,"ip_address":"广东","comment_id":386244,"utype":1}],"discussion_count":1,"race_medal":0,"score":2,"product_id":100311801,"comment_content":"客户有一个业务规则：「业务经理的时间不能重复」，假设员工上也加了一个业务规则：「同一个员工同一时间只能担任其中一个客户的客户经理」。这种情况应该怎么建模？看起来员工、客户、客户经理三者组成了一个整体。","like_count":2,"discussions":[{"author":{"id":1288110,"avatar":"https://thirdwx.qlogo.cn/mmopen/vi_32/VBLEAcychgbs5CicUczSYcibicoicZmyk1JHHFiae94KuvVsibAKtcQAvnOPWp0C4yvia8mzvQAORiazjWSoc1XQ9QkLrQ/132","nickname":"钟敬","note":"","ucode":"20B3D31A2C8C86","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":637236,"discussion_content":"非常好的问题。聚合不是控制并发规则的唯一方式。你举的这个情况，聚合不能完全解决了。从建模的角度，还是建议客户 和客户经理作为一个聚合。但要用两把锁才能控制了。客户一把锁，员工一把锁。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1708159270,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"广东","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2,\"source\":0}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":382647,"user_name":"Geek4329","can_delete":false,"product_type":"c1","uid":2028951,"ip_address":"上海","ucode":"D6FB8D1B2D5DAC","user_header":"https://static001.geekbang.org/account/avatar/00/1e/f5/97/9a7ee7b3.jpg","comment_is_top":false,"comment_ctime":1697725487,"is_pvip":false,"replies":[{"id":139707,"content":"当你这么问的时候，你所说的“技能”实际上是模型图中的“技能类别”，请仔细区分。","user_name":"作者回复","user_name_real":"编辑","uid":1288110,"ctime":1699079020,"ip_address":"广东","comment_id":382647,"utype":1}],"discussion_count":1,"race_medal":0,"score":2,"product_id":100311801,"comment_content":"员工和技能应该是多对多关系吧？","like_count":1,"discussions":[{"author":{"id":1288110,"avatar":"https://thirdwx.qlogo.cn/mmopen/vi_32/VBLEAcychgbs5CicUczSYcibicoicZmyk1JHHFiae94KuvVsibAKtcQAvnOPWp0C4yvia8mzvQAORiazjWSoc1XQ9QkLrQ/132","nickname":"钟敬","note":"","ucode":"20B3D31A2C8C86","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":630936,"discussion_content":"当你这么问的时候，你所说的“技能”实际上是模型图中的“技能类别”，请仔细区分。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1699079021,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"广东","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":368482,"user_name":"Michael","can_delete":false,"product_type":"c1","uid":1015222,"ip_address":"陕西","ucode":"27EB4A725CE14E","user_header":"https://static001.geekbang.org/account/avatar/00/0f/7d/b6/abdebdeb.jpg","comment_is_top":false,"comment_ctime":1676377158,"is_pvip":false,"replies":[{"id":134200,"content":"这节课只讲了聚合的概念，所以您会有这样的疑问。后面两节课应该能回答您的问题，也讲到了乐观锁。","user_name":"作者回复","user_name_real":"编辑","uid":1288110,"ctime":1676419276,"ip_address":"广东","comment_id":368482,"utype":1}],"discussion_count":1,"race_medal":0,"score":3,"product_id":100311801,"comment_content":"老师说的以聚合作为事务边界保证事务一致性，我理解\n- 所有的对聚合的更新或者插入操作只能通过聚合根\n- 聚合内部保证强一致性\n但是这样并发度是不是降低了？或者应该这样问，老师讲的通过事务和锁来保证数据一致性这个我不太理解，即便我们使用了聚合作为事务边界，但并发场景下，再怎么样也得用乐观锁或者悲观锁来保证数据一致性吧?这个跟是不是聚合好像没什么关系。请老师再展开说说!","like_count":1,"discussions":[{"author":{"id":1288110,"avatar":"https://thirdwx.qlogo.cn/mmopen/vi_32/VBLEAcychgbs5CicUczSYcibicoicZmyk1JHHFiae94KuvVsibAKtcQAvnOPWp0C4yvia8mzvQAORiazjWSoc1XQ9QkLrQ/132","nickname":"钟敬","note":"","ucode":"20B3D31A2C8C86","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":604645,"discussion_content":"这节课只讲了聚合的概念，所以您会有这样的疑问。后面两节课应该能回答您的问题，也讲到了乐观锁。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1676419276,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"广东","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":367183,"user_name":"escray","can_delete":false,"product_type":"c1","uid":1020525,"ip_address":"北京","ucode":"1F4204930E47C4","user_header":"https://static001.geekbang.org/account/avatar/00/0f/92/6d/becd841a.jpg","comment_is_top":false,"comment_ctime":1674992310,"is_pvip":true,"replies":[{"id":135202,"content":"关于仅仅依靠数据库事务不能保证不变规则的问题，后面讲到乐观锁的时候，就清楚了。","user_name":"作者回复","user_name_real":"编辑","uid":1288110,"ctime":1678979864,"ip_address":"广东","comment_id":367183,"utype":1}],"discussion_count":1,"race_medal":0,"score":3,"product_id":100311801,"comment_content":"聚合是为了保护业务规则么？我之前的理解聚合是把相关的实体放在一起。当然，说是为了保护业务规则看上去也不错。\n\n读原文：AGGREGATES tighten up the model itself by defining clear ownership and boundaries, avoiding a chaotic, tangled web of objects.\n\nAn AGGREGATES is a cluster of associated objects that we treat as a unit for the purpose of data changes.\n\n印象里面之前的聚合（根）似乎是从面向对象分析或者是业务分析的时候抽取出来的。\n\n聚合是 DDD 中的一个模式，这个是我以前没有注意到的，还有其他两个模式分别是：FACTORIES 和 REPOSITORIES。\n\n对于思考题，\n\n1. 之前并没有将 DDD 落实到具体的项目中，（不变的）规则一般会放到对象实体中去，或者变成配置文件的一部分，应该是缺乏保护，另外修改起来也不方便。\n2. 仅仅依靠数据库的事务机制，估计很难保证保证不变规则，采用事务机制似乎更加不灵活。","like_count":1,"discussions":[{"author":{"id":1288110,"avatar":"https://thirdwx.qlogo.cn/mmopen/vi_32/VBLEAcychgbs5CicUczSYcibicoicZmyk1JHHFiae94KuvVsibAKtcQAvnOPWp0C4yvia8mzvQAORiazjWSoc1XQ9QkLrQ/132","nickname":"钟敬","note":"","ucode":"20B3D31A2C8C86","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":609471,"discussion_content":"关于仅仅依靠数据库事务不能保证不变规则的问题，后面讲到乐观锁的时候，就清楚了。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1678979864,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"广东","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":393908,"user_name":"py","can_delete":false,"product_type":"c1","uid":1496577,"ip_address":"上海","ucode":"2372522D715419","user_header":"https://static001.geekbang.org/account/avatar/00/16/d6/01/2448b4a9.jpg","comment_is_top":false,"comment_ctime":1725324818,"is_pvip":false,"replies":[{"id":143632,"content":"不变规则是业务规则的子集，是保证一个聚合合法的最小规则集，局限在聚合内部。跨聚合的业务规则就不算不变规则了。","user_name":"作者回复","user_name_real":"编辑","uid":1288110,"ctime":1731398151,"ip_address":"广东","comment_id":393908,"utype":1}],"discussion_count":1,"race_medal":0,"score":3,"product_id":100311801,"comment_content":"不变规则和业务规则的区别在哪里？ 一般业务规则和时效性没有关系的话不就是不变规则吗？","like_count":0,"discussions":[{"author":{"id":1288110,"avatar":"https://thirdwx.qlogo.cn/mmopen/vi_32/VBLEAcychgbs5CicUczSYcibicoicZmyk1JHHFiae94KuvVsibAKtcQAvnOPWp0C4yvia8mzvQAORiazjWSoc1XQ9QkLrQ/132","nickname":"钟敬","note":"","ucode":"20B3D31A2C8C86","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":653685,"discussion_content":"不变规则是业务规则的子集，是保证一个聚合合法的最小规则集，局限在聚合内部。跨聚合的业务规则就不算不变规则了。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1731398151,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"广东","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2,\"source\":0}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":390844,"user_name":"Geek_6c5a57","can_delete":false,"product_type":"c1","uid":2594853,"ip_address":"广东","ucode":"61304363046EA1","user_header":"https://static001.geekbang.org/account/avatar/00/27/98/25/c9d4b4d8.jpg","comment_is_top":false,"comment_ctime":1716449098,"is_pvip":false,"replies":[{"id":143671,"content":"可以这么说。本质上，是为了和业务专家把事情说清楚。","user_name":"作者回复","user_name_real":"编辑","uid":1288110,"ctime":1731491814,"ip_address":"广东","comment_id":390844,"utype":1}],"discussion_count":1,"race_medal":0,"score":3,"product_id":100311801,"comment_content":"这里引入派生关联的目的是否是为了突出实体的角色","like_count":0,"discussions":[{"author":{"id":1288110,"avatar":"https://thirdwx.qlogo.cn/mmopen/vi_32/VBLEAcychgbs5CicUczSYcibicoicZmyk1JHHFiae94KuvVsibAKtcQAvnOPWp0C4yvia8mzvQAORiazjWSoc1XQ9QkLrQ/132","nickname":"钟敬","note":"","ucode":"20B3D31A2C8C86","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":653875,"discussion_content":"可以这么说。本质上，是为了和业务专家把事情说清楚。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1731491815,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"广东","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2,\"source\":0}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":390703,"user_name":"Beaulo","can_delete":false,"product_type":"c1","uid":3894364,"ip_address":"广东","ucode":"566C7ED2F97E67","user_header":"https://static001.geekbang.org/account/avatar/00/3b/6c/5c/90c0ba0f.jpg","comment_is_top":false,"comment_ctime":1716046956,"is_pvip":false,"replies":[{"id":143673,"content":"是的，这是笔误，那条线应该删除，看来你已经掌握了。十分感谢！","user_name":"作者回复","user_name_real":"编辑","uid":1288110,"ctime":1731547331,"ip_address":"广东","comment_id":390703,"utype":1}],"discussion_count":1,"race_medal":0,"score":3,"product_id":100311801,"comment_content":"这里有个疑问，构建出客户经理、合同经理以及项目经理那一块的聚合以后的模型图中，项目经理到聚合根的那根0.** 到 1..1是否是多余的？因为下面的菱形框已经表达了这层意思。","like_count":0,"discussions":[{"author":{"id":1288110,"avatar":"https://thirdwx.qlogo.cn/mmopen/vi_32/VBLEAcychgbs5CicUczSYcibicoicZmyk1JHHFiae94KuvVsibAKtcQAvnOPWp0C4yvia8mzvQAORiazjWSoc1XQ9QkLrQ/132","nickname":"钟敬","note":"","ucode":"20B3D31A2C8C86","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":653893,"discussion_content":"是的，这是笔误，那条线应该删除，看来你已经掌握了。十分感谢！","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1731547331,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"广东","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2,\"source\":0}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":388867,"user_name":"Geek2808","can_delete":false,"product_type":"c1","uid":2028948,"ip_address":"北京","ucode":"835C9691723163","user_header":"","comment_is_top":false,"comment_ctime":1711025187,"is_pvip":false,"replies":[{"id":141533,"content":"应用层","user_name":"作者回复","user_name_real":"编辑","uid":1288110,"ctime":1711082173,"ip_address":"广东","comment_id":388867,"utype":1}],"discussion_count":3,"race_medal":0,"score":3,"product_id":100311801,"comment_content":"老师，想咨询个问题，针对聚合是应该保持事务的一致性，那这个事务应该在哪一层去实现呢？是领域层吗？","like_count":0,"discussions":[{"author":{"id":1288110,"avatar":"https://thirdwx.qlogo.cn/mmopen/vi_32/VBLEAcychgbs5CicUczSYcibicoicZmyk1JHHFiae94KuvVsibAKtcQAvnOPWp0C4yvia8mzvQAORiazjWSoc1XQ9QkLrQ/132","nickname":"钟敬","note":"","ucode":"20B3D31A2C8C86","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":640032,"discussion_content":"应用层","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1711082173,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"广东","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2,\"source\":0}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1504389,"avatar":"https://static001.geekbang.org/account/avatar/00/16/f4/85/ede25210.jpg","nickname":"fann","note":"","ucode":"A055C712EFDEED","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":645643,"discussion_content":"所以这里归属应用层，是基于第二点的考虑吗。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1716473587,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":"上海","group_id":0},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1504389,"avatar":"https://static001.geekbang.org/account/avatar/00/16/f4/85/ede25210.jpg","nickname":"fann","note":"","ucode":"A055C712EFDEED","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":645642,"discussion_content":"这里有点疑问，事务的一致性是为了保证业务规则的不变和统一，如果按照业务规则是业务专家达成一致的原则，那应该属于领域层啊？\n反之，如果从这个事务的一致性实现是个技术问题，不需要和业务专家达成一致，那么确实属于应用层。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1716473560,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":"上海","group_id":0},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":387755,"user_name":"Spoon","can_delete":false,"product_type":"c1","uid":1959822,"ip_address":"浙江","ucode":"2FF9193AD482C2","user_header":"https://static001.geekbang.org/account/avatar/00/1d/e7/8e/318cfde0.jpg","comment_is_top":false,"comment_ctime":1708514100,"is_pvip":false,"replies":[{"id":141258,"content":"翻译成“固定规则”或“不变式”更好","user_name":"作者回复","user_name_real":"编辑","uid":1288110,"ctime":1708760351,"ip_address":"广东","comment_id":387755,"utype":1}],"discussion_count":1,"race_medal":0,"score":3,"product_id":100311801,"comment_content":"在领域驱动设计（Domain-Driven Design, DDD）中，聚合的不变性是指聚合必须始终保持其业务规则和约束的一致性。不变性（Invariants）是指在整个聚合的生命周期中始终必须为真的业务规则或条件。这些不变性定义了聚合的完整性，并确保聚合在任何时候都处于有效状态。\n\n聚合不变性的重要性\n聚合不变性之所以重要，是因为它们为聚合的使用和维护提供了清晰的指导原则。通过确保不变性，开发者可以避免数据不一致性和逻辑错误，这样聚合就能可靠地反映业务规则和逻辑。","like_count":0,"discussions":[{"author":{"id":1288110,"avatar":"https://thirdwx.qlogo.cn/mmopen/vi_32/VBLEAcychgbs5CicUczSYcibicoicZmyk1JHHFiae94KuvVsibAKtcQAvnOPWp0C4yvia8mzvQAORiazjWSoc1XQ9QkLrQ/132","nickname":"钟敬","note":"","ucode":"20B3D31A2C8C86","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":637656,"discussion_content":"翻译成“固定规则”或“不变式”更好","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1708760351,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"广东","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2,\"source\":0}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":385802,"user_name":"🏄🏻米兰的大铁匠🎤🎈","can_delete":false,"product_type":"c1","uid":1177832,"ip_address":"天津","ucode":"704DB6905F96D1","user_header":"https://static001.geekbang.org/account/avatar/00/11/f8/e8/bbd1b66d.jpg","comment_is_top":false,"comment_ctime":1703406801,"is_pvip":false,"replies":[{"id":141084,"content":"欢迎在留言区多分享你的思考收获，加油～","user_name":"编辑回复","user_name_real":"编辑","uid":1501385,"ctime":1706163906,"ip_address":"北京","comment_id":385802,"utype":2}],"discussion_count":1,"race_medal":0,"score":3,"product_id":100311801,"comment_content":"第二遍学习有了更透彻的理解，读老师的文章温故知新","like_count":0,"discussions":[{"author":{"id":1501385,"avatar":"https://static001.geekbang.org/account/avatar/00/16/e8/c9/59bcd490.jpg","nickname":"听水的湖","note":"","ucode":"B1759F90165D81","race_medal":0,"user_type":8,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":636449,"discussion_content":"欢迎在留言区多分享你的思考收获，加油～","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1706163906,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"北京","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":8,\"source\":0}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":376919,"user_name":"金山💰","can_delete":false,"product_type":"c1","uid":2038027,"ip_address":"广东","ucode":"1FFBC100873EED","user_header":"https://static001.geekbang.org/account/avatar/00/1f/19/0b/1c4ebf1e.jpg","comment_is_top":false,"comment_ctime":1687707064,"is_pvip":false,"replies":[{"id":137389,"content":"是的，后面讲“限定”那节课就会说到。不过，程序应该先守住，数据库的唯一索引是最后的“底线”。","user_name":"作者回复","user_name_real":"编辑","uid":1288110,"ctime":1687750220,"ip_address":"广东","comment_id":376919,"utype":1}],"discussion_count":1,"race_medal":0,"score":3,"product_id":100311801,"comment_content":"我总感觉这个技能不能重复那个例子可以用一个数据库的组合唯一索引去做啊","like_count":0,"discussions":[{"author":{"id":1288110,"avatar":"https://thirdwx.qlogo.cn/mmopen/vi_32/VBLEAcychgbs5CicUczSYcibicoicZmyk1JHHFiae94KuvVsibAKtcQAvnOPWp0C4yvia8mzvQAORiazjWSoc1XQ9QkLrQ/132","nickname":"钟敬","note":"","ucode":"20B3D31A2C8C86","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":621897,"discussion_content":"是的，后面讲“限定”那节课就会说到。不过，程序应该先守住，数据库的唯一索引是最后的“底线”。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1687750220,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"广东","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":367407,"user_name":"树袋熊🐨","can_delete":false,"product_type":"c1","uid":3204907,"ip_address":"广东","ucode":"3589700A259404","user_header":"https://static001.geekbang.org/account/avatar/00/30/e7/2b/c5e5ebc6.jpg","comment_is_top":false,"comment_ctime":1675217707,"is_pvip":false,"replies":[{"id":133828,"content":"1.这个例子挺好，物料清单对象应该就是聚合根 2.还要考虑锁住的是一组对象","user_name":"作者回复","user_name_real":"编辑","uid":1288110,"ctime":1675227467,"ip_address":"广东","comment_id":367407,"utype":1}],"discussion_count":2,"race_medal":0,"score":3,"product_id":100311801,"comment_content":"1. 能否在你的实际项目中找到不变规则的例子，这些规则有没有被恰当地保护起来？\n在制造业里，生产一个产品需要很多物料（物料清单），一个产品的物料清单不应该出现重复的物料，\n我的历史经验：物料清单会是一个单独的页面管理，入参是产品的ID，提供增删改查的功能，没有过聚合的概念，增改的业务规则里面往往容易忽略判断重复的规则。\n2. 仅仅依靠数据库提供的事务机制，可以保证这种不变规则吗？为什么？\n仅靠数据库是无法保证的，因为不变规则，我理解是业务规则的一种，需要通过代码来实现。","like_count":0,"discussions":[{"author":{"id":1288110,"avatar":"https://thirdwx.qlogo.cn/mmopen/vi_32/VBLEAcychgbs5CicUczSYcibicoicZmyk1JHHFiae94KuvVsibAKtcQAvnOPWp0C4yvia8mzvQAORiazjWSoc1XQ9QkLrQ/132","nickname":"钟敬","note":"","ucode":"20B3D31A2C8C86","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":601339,"discussion_content":"1.这个例子挺好，物料清单对象应该就是聚合根 2.还要考虑锁住的是一组对象","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1675227467,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"广东","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":3204907,"avatar":"https://static001.geekbang.org/account/avatar/00/30/e7/2b/c5e5ebc6.jpg","nickname":"树袋熊🐨","note":"","ucode":"3589700A259404","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":601940,"discussion_content":"我理解产品属于聚合根，物料清单是产品聚合里面的实体。物料清单离开了产品就没有存在的意义了。物料是另外一个聚合根。不知道这样的理解有没有错？","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1675513429,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":"广东","group_id":0},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":366724,"user_name":"南山","can_delete":false,"product_type":"c1","uid":1119593,"ip_address":"江苏","ucode":"94656FE4A6C378","user_header":"https://static001.geekbang.org/account/avatar/00/11/15/69/187b9968.jpg","comment_is_top":false,"comment_ctime":1674115801,"is_pvip":false,"replies":[{"id":133657,"content":"规则本身可以在领域服务实现，然后可以由工厂，或其他需要的地方来调用","user_name":"作者回复","user_name_real":"编辑","uid":1288110,"ctime":1674447008,"ip_address":"广东","comment_id":366724,"utype":1}],"discussion_count":1,"race_medal":0,"score":4,"product_id":100311801,"comment_content":"钟老师请教个问题，像“只有销售人员才能作为客户经理”这条业务规则应该放在哪里实现呢？跨聚合了，如果是应用层判断，领域逻辑泄漏了。那是不是应该放在客户经理实体的工厂做校验呢？","like_count":0,"discussions":[{"author":{"id":1288110,"avatar":"https://thirdwx.qlogo.cn/mmopen/vi_32/VBLEAcychgbs5CicUczSYcibicoicZmyk1JHHFiae94KuvVsibAKtcQAvnOPWp0C4yvia8mzvQAORiazjWSoc1XQ9QkLrQ/132","nickname":"钟敬","note":"","ucode":"20B3D31A2C8C86","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":600482,"discussion_content":"规则本身可以在领域服务实现，然后可以由工厂，或其他需要的地方来调用","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1674447008,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"广东","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":366629,"user_name":"6点无痛早起学习的和尚","can_delete":false,"product_type":"c1","uid":1703256,"ip_address":"北京","ucode":"33A8A1CDA103F9","user_header":"https://static001.geekbang.org/account/avatar/00/19/fd/58/1af629c7.jpg","comment_is_top":false,"comment_ctime":1674006007,"is_pvip":false,"replies":[{"id":133663,"content":"关于第三个问题可以慢慢来。比如说，如果你一开始就在想数据表，那么可以假定一个表就是一个实体，然后用课程里的方法画领域模型图，分析实体间的关系，这时就有可能发现表不合理。然后再改正。比如说，如果表太大，可否拆成多个实体呢？会不会有些概念是重复的呢？有没有遗漏业务概念呢？等等","user_name":"作者回复","user_name_real":"编辑","uid":1288110,"ctime":1674448874,"ip_address":"广东","comment_id":366629,"utype":1}],"discussion_count":1,"race_medal":0,"score":4,"product_id":100311801,"comment_content":"思考🤔和问题： \n1. 实际项目案例中：业务规则：1 个用户只能申请一张有效的同类型（信用卡、借记卡等）的卡，卡可以注销，聚合根全局标识：acctId\n2. 针对上面解决方案，开卡采用分布式锁，key=acctId+cardType。\n\n3. 不知道如何去划定领域建模和 DB 设计的边界，感觉自己在这一块容易模糊不清。\n在领域建模的时候，自己总是先去想数据库怎么设计，而不是先去想有哪些实体，比如客户和客户经理记录，自己总是先去想数据库字段怎么设置，字段冗余到哪个表里。 \n\n听听老师的意见","like_count":0,"discussions":[{"author":{"id":1288110,"avatar":"https://thirdwx.qlogo.cn/mmopen/vi_32/VBLEAcychgbs5CicUczSYcibicoicZmyk1JHHFiae94KuvVsibAKtcQAvnOPWp0C4yvia8mzvQAORiazjWSoc1XQ9QkLrQ/132","nickname":"钟敬","note":"","ucode":"20B3D31A2C8C86","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":600489,"discussion_content":"关于第三个问题可以慢慢来。比如说，如果你一开始就在想数据表，那么可以假定一个表就是一个实体，然后用课程里的方法画领域模型图，分析实体间的关系，这时就有可能发现表不合理。然后再改正。比如说，如果表太大，可否拆成多个实体呢？会不会有些概念是重复的呢？有没有遗漏业务概念呢？等等","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1674448874,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"广东","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":366207,"user_name":"Jxin","can_delete":false,"product_type":"c1","uid":1251111,"ip_address":"山东","ucode":"4C03928388C413","user_header":"https://static001.geekbang.org/account/avatar/00/13/17/27/ec30d30a.jpg","comment_is_top":false,"comment_ctime":1673485834,"is_pvip":false,"replies":[{"id":133660,"content":"第一点，专属于一个聚合的领域服务，放在聚合所在的包里，否则放在外面。第二个问题，当聚合范围过大，可考虑进一步拆，这个问题找时间再探讨","user_name":"作者回复","user_name_real":"编辑","uid":1288110,"ctime":1674447470,"ip_address":"广东","comment_id":366207,"utype":1}],"discussion_count":4,"race_medal":0,"score":4,"product_id":100311801,"comment_content":"1.领域服务不在聚合里？\n2.聚合的判断原则还有别的。 知乎的问题和答案在一个聚合，问题为根。但后面答案成了独立的聚合。","like_count":0,"discussions":[{"author":{"id":1288110,"avatar":"https://thirdwx.qlogo.cn/mmopen/vi_32/VBLEAcychgbs5CicUczSYcibicoicZmyk1JHHFiae94KuvVsibAKtcQAvnOPWp0C4yvia8mzvQAORiazjWSoc1XQ9QkLrQ/132","nickname":"钟敬","note":"","ucode":"20B3D31A2C8C86","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":600485,"discussion_content":"第一点，专属于一个聚合的领域服务，放在聚合所在的包里，否则放在外面。第二个问题，当聚合范围过大，可考虑进一步拆，这个问题找时间再探讨","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1674447470,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"广东","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1047442,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/fb/92/4de0c05c.jpg","nickname":"bin","note":"","ucode":"F540DADF3AAD87","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":599503,"discussion_content":"请教下，没太懂问题1","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1673574595,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":"广东","group_id":0},"score":2,"extra":"","child_discussion_number":2,"child_discussions":[{"author":{"id":1251111,"avatar":"https://static001.geekbang.org/account/avatar/00/13/17/27/ec30d30a.jpg","nickname":"Jxin","note":"","ucode":"4C03928388C413","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1047442,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/fb/92/4de0c05c.jpg","nickname":"bin","note":"","ucode":"F540DADF3AAD87","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":599608,"discussion_content":"现在聚合圈起来的只有聚合根 实体 值对象。 但还有 领域服务和领域事件。不过也看选则，有的圈有的不圈。我是圈的，所以提出来，看能套钟老师不圈的思路不。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1673609624,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":599503,"ip_address":"山东","group_id":0},"score":599608,"extra":""},{"author":{"id":1047442,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/fb/92/4de0c05c.jpg","nickname":"bin","note":"","ucode":"F540DADF3AAD87","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1251111,"avatar":"https://static001.geekbang.org/account/avatar/00/13/17/27/ec30d30a.jpg","nickname":"Jxin","note":"","ucode":"4C03928388C413","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":599669,"discussion_content":"领域事件是圈的，领域服务有时候走数据库啥的，我就不圈","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1673686992,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":599608,"ip_address":"广东","group_id":0},"score":599669,"extra":""}]}]},{"had_liked":false,"id":365899,"user_name":"leesper","can_delete":false,"product_type":"c1","uid":1351104,"ip_address":"广东","ucode":"CC76320571BECA","user_header":"https://static001.geekbang.org/account/avatar/00/14/9d/c0/cb5341ec.jpg","comment_is_top":false,"comment_ctime":1673186785,"is_pvip":false,"replies":[{"id":133297,"content":"还有些不变规则需要通过锁住聚合根，把整个聚合锁住，这种也无法单纯通过数据库事务实现。后面的课会专门讲。","user_name":"作者回复","user_name_real":"编辑","uid":1288110,"ctime":1673238888,"ip_address":"广东","comment_id":365899,"utype":1}],"discussion_count":1,"race_medal":0,"score":4,"product_id":100311801,"comment_content":"思考题：\n1. 比如已发起流程的申请，就不能再重复发起申请了，或者创建的任务仅创建人可以修改，这些都是不变规则，都是靠代码中的检查来保护\n\n2. 仅仅依靠数据库提供的事务机制，可以保证这种不变规则吗？为什么？\n不能，有些不变规则其实是业务规则，要靠代码的检查来完成，比如权限管理，这个就不是数据库事务能搞定的","like_count":0,"discussions":[{"author":{"id":1288110,"avatar":"https://thirdwx.qlogo.cn/mmopen/vi_32/VBLEAcychgbs5CicUczSYcibicoicZmyk1JHHFiae94KuvVsibAKtcQAvnOPWp0C4yvia8mzvQAORiazjWSoc1XQ9QkLrQ/132","nickname":"钟敬","note":"","ucode":"20B3D31A2C8C86","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":598956,"discussion_content":"还有些不变规则需要通过锁住聚合根，把整个聚合锁住，这种也无法单纯通过数据库事务实现。后面的课会专门讲。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1673238888,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"广东","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":365817,"user_name":"阿昕","can_delete":false,"product_type":"c1","uid":1012906,"ip_address":"广东","ucode":"F3AD093B68E074","user_header":"https://static001.geekbang.org/account/avatar/00/0f/74/aa/178a6797.jpg","comment_is_top":false,"comment_ctime":1673079504,"is_pvip":false,"replies":[{"id":133271,"content":"关于问题1，可以进一步想想一个聚合内部有什么不变规则。问题2，下节课提到乐观锁悲观锁后，再回味一下。","user_name":"作者回复","user_name_real":"编辑","uid":1288110,"ctime":1673138199,"ip_address":"广东","comment_id":365817,"utype":1}],"discussion_count":1,"race_medal":0,"score":4,"product_id":100311801,"comment_content":"1.不变规则从事务的角度可以理解为一致性，例如：订单与支付单、退款单，需要遵循支付金额等于订单金额、退款金额小于等于支付金额的规则，可以归类为不变规则；\n\n2.在单体服务中，可以通过数据库事务来控制多个数据操作的一致性，分布式系统则需要考虑分布式锁的方案。","like_count":0,"discussions":[{"author":{"id":1288110,"avatar":"https://thirdwx.qlogo.cn/mmopen/vi_32/VBLEAcychgbs5CicUczSYcibicoicZmyk1JHHFiae94KuvVsibAKtcQAvnOPWp0C4yvia8mzvQAORiazjWSoc1XQ9QkLrQ/132","nickname":"钟敬","note":"","ucode":"20B3D31A2C8C86","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":598832,"discussion_content":"关于问题1，可以进一步想想一个聚合内部有什么不变规则。问题2，下节课提到乐观锁悲观锁后，再回味一下。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1673138199,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"广东","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":365762,"user_name":"小5","can_delete":false,"product_type":"c1","uid":1074736,"ip_address":"广东","ucode":"F99936F37D04E4","user_header":"https://static001.geekbang.org/account/avatar/00/10/66/30/ce2cc535.jpg","comment_is_top":false,"comment_ctime":1672980124,"is_pvip":false,"replies":[{"id":133223,"content":"1 两种策略，你说了一种，另一种是不加字段，直接从客户经理表里取。两种策略都可行，要根据实际情况权衡\n2 直接从客户经理吧中取状态为有效的","user_name":"作者回复","user_name_real":"编辑","uid":1288110,"ctime":1672995381,"ip_address":"广东","comment_id":365762,"utype":1}],"discussion_count":4,"race_medal":0,"score":4,"product_id":100311801,"comment_content":"有两个疑问：\n问题1 当前客户经理 这个概念在数据库中怎么体现呢，是在客户表中有一个当前客户经理字段吗？\n问题2 如果说有天增加一个需求说当前客户经理可能是多个人怎么办？（不确定真实场景中出现这个需求的概率有多大）","like_count":0,"discussions":[{"author":{"id":1288110,"avatar":"https://thirdwx.qlogo.cn/mmopen/vi_32/VBLEAcychgbs5CicUczSYcibicoicZmyk1JHHFiae94KuvVsibAKtcQAvnOPWp0C4yvia8mzvQAORiazjWSoc1XQ9QkLrQ/132","nickname":"钟敬","note":"","ucode":"20B3D31A2C8C86","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":598690,"discussion_content":"1 两种策略，你说了一种，另一种是不加字段，直接从客户经理表里取。两种策略都可行，要根据实际情况权衡\n2 直接从客户经理吧中取状态为有效的","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1672995381,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"广东","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":3,"child_discussions":[{"author":{"id":1074736,"avatar":"https://static001.geekbang.org/account/avatar/00/10/66/30/ce2cc535.jpg","nickname":"小5","note":"","ucode":"F99936F37D04E4","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1288110,"avatar":"https://thirdwx.qlogo.cn/mmopen/vi_32/VBLEAcychgbs5CicUczSYcibicoicZmyk1JHHFiae94KuvVsibAKtcQAvnOPWp0C4yvia8mzvQAORiazjWSoc1XQ9QkLrQ/132","nickname":"钟敬","note":"","ucode":"20B3D31A2C8C86","race_medal":0,"user_type":2,"is_pvip":false},"discussion":{"id":598702,"discussion_content":"理解了，谢谢，我所接触到的都是存在客户经理表。如果考虑性能问题的时候会冗余到客户表","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1672997140,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":598690,"ip_address":"广东","group_id":0},"score":598702,"extra":""},{"author":{"id":1703256,"avatar":"https://static001.geekbang.org/account/avatar/00/19/fd/58/1af629c7.jpg","nickname":"6点无痛早起学习的和尚","note":"","ucode":"33A8A1CDA103F9","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1074736,"avatar":"https://static001.geekbang.org/account/avatar/00/10/66/30/ce2cc535.jpg","nickname":"小5","note":"","ucode":"F99936F37D04E4","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":600078,"discussion_content":"我理解老师说的另一种应该是：在客户经理表里冗余一个客户字段是吧，不知道理解正不正确，你的一种：客户表里冗余一个客户经理字段","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1674004834,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":598702,"ip_address":"北京","group_id":0},"score":600078,"extra":""},{"author":{"id":1074736,"avatar":"https://static001.geekbang.org/account/avatar/00/10/66/30/ce2cc535.jpg","nickname":"小5","note":"","ucode":"F99936F37D04E4","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1703256,"avatar":"https://static001.geekbang.org/account/avatar/00/19/fd/58/1af629c7.jpg","nickname":"6点无痛早起学习的和尚","note":"","ucode":"33A8A1CDA103F9","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":600177,"discussion_content":"应该不是这样，老师说的意思是直接在客户与客户经理表（常说的多对多关系表关系表）上面去状态是当前状态的那条记录，然后根据关系表上的userid取到这个员工，就是客户经理了","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1674060302,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":600078,"ip_address":"广东","group_id":0},"score":600177,"extra":""}]}]},{"had_liked":false,"id":365736,"user_name":"张强","can_delete":false,"product_type":"c1","uid":1273361,"ip_address":"广东","ucode":"A017F014BABD30","user_header":"https://static001.geekbang.org/account/avatar/00/13/6e/11/65e668c0.jpg","comment_is_top":false,"comment_ctime":1672963277,"is_pvip":false,"replies":[{"id":133206,"content":"是的","user_name":"作者回复","user_name_real":"编辑","uid":1288110,"ctime":1672968607,"ip_address":"广东","comment_id":365736,"utype":1}],"discussion_count":1,"race_medal":0,"score":4,"product_id":100311801,"comment_content":"问题二： 不可以 如果聚合根和部分是不同的表，而数据库事物是表级情况下，就不能保证这种不变规则。","like_count":0,"discussions":[{"author":{"id":1288110,"avatar":"https://thirdwx.qlogo.cn/mmopen/vi_32/VBLEAcychgbs5CicUczSYcibicoicZmyk1JHHFiae94KuvVsibAKtcQAvnOPWp0C4yvia8mzvQAORiazjWSoc1XQ9QkLrQ/132","nickname":"钟敬","note":"","ucode":"20B3D31A2C8C86","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":598628,"discussion_content":"是的","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1672968607,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"广东","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":365666,"user_name":"bin","can_delete":false,"product_type":"c1","uid":1047442,"ip_address":"广东","ucode":"F540DADF3AAD87","user_header":"https://static001.geekbang.org/account/avatar/00/0f/fb/92/4de0c05c.jpg","comment_is_top":false,"comment_ctime":1672883570,"is_pvip":false,"replies":[{"id":133185,"content":"问题一，订单的例子，在《DDD》原书里有一个不变规则的例子更典型，可以看一下;问题二，在下节课还会探讨","user_name":"作者回复","user_name_real":"编辑","uid":1288110,"ctime":1672888618,"ip_address":"广东","comment_id":365666,"utype":1}],"discussion_count":1,"race_medal":0,"score":4,"product_id":100311801,"comment_content":"问题一：订单和订单项需要维护不变关系，订单整单取消，订单项也是取消的。\n\n问题二：有些场景可以依赖数据库事务，比如表层面定义业务唯一键，防止插入重复数据。数据库的事务控制的是acid，ddd的事务是说一个业务操作的完整性（个人见解）","like_count":0,"discussions":[{"author":{"id":1288110,"avatar":"https://thirdwx.qlogo.cn/mmopen/vi_32/VBLEAcychgbs5CicUczSYcibicoicZmyk1JHHFiae94KuvVsibAKtcQAvnOPWp0C4yvia8mzvQAORiazjWSoc1XQ9QkLrQ/132","nickname":"钟敬","note":"","ucode":"20B3D31A2C8C86","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":598526,"discussion_content":"问题一，订单的例子，在《DDD》原书里有一个不变规则的例子更典型，可以看一下;问题二，在下节课还会探讨","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1672888618,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"广东","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":370532,"user_name":"暴走的🐌","can_delete":false,"product_type":"c1","uid":1033630,"ip_address":"江苏","ucode":"804381D877E53C","user_header":"https://static001.geekbang.org/account/avatar/00/0f/c5/9e/d6fce09c.jpg","comment_is_top":false,"comment_ctime":1678930869,"is_pvip":false,"replies":null,"discussion_count":0,"race_medal":0,"score":4,"product_id":100311801,"comment_content":"1、聚合内部强一致；聚合间最终一致\n2、聚合根是外部访问的唯一入口，对外屏蔽掉内部概念\n3、聚合根有生命周期的概念，聚合根没有了，聚合相关失去意义","like_count":1},{"had_liked":false,"id":385976,"user_name":"下吧下吧我要发芽","can_delete":false,"product_type":"c1","uid":1513025,"ip_address":"山东","ucode":"DB946E6925D423","user_header":"https://static001.geekbang.org/account/avatar/00/17/16/41/791d0f5e.jpg","comment_is_top":false,"comment_ctime":1703751786,"is_pvip":false,"replies":null,"discussion_count":0,"race_medal":0,"score":4,"product_id":100311801,"comment_content":"1、整体与部分；例子：个人、个人信息、家庭住址等\n2、不可变原则；例子：父与子\n","like_count":0},{"had_liked":false,"id":368365,"user_name":"py","can_delete":false,"product_type":"c1","uid":1496577,"ip_address":"上海","ucode":"2372522D715419","user_header":"https://static001.geekbang.org/account/avatar/00/16/d6/01/2448b4a9.jpg","comment_is_top":false,"comment_ctime":1676258189,"is_pvip":false,"replies":null,"discussion_count":0,"race_medal":0,"score":5,"product_id":100311801,"comment_content":"1.经验\n2.不能","like_count":0}]}