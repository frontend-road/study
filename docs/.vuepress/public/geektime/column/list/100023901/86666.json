{"id":86666,"title":"10 | Java线程（中）：创建多少线程才是合适的？","content":"<p>在Java领域，实现并发程序的主要手段就是多线程，使用多线程还是比较简单的，但是使用多少个线程却是个困难的问题。工作中，经常有人问，“各种线程池的线程数量调整成多少是合适的？”或者“Tomcat的线程数、Jdbc连接池的连接数是多少？”等等。那我们应该如何设置合适的线程数呢？</p><p>要解决这个问题，首先要分析以下两个问题：</p><ol>\n<li>为什么要使用多线程？</li>\n<li>多线程的应用场景有哪些？</li>\n</ol><h2>为什么要使用多线程？</h2><p>使用多线程，本质上就是提升程序性能。不过此刻谈到的性能，可能在你脑海里还是比较笼统的，基本上就是快、快、快，这种无法度量的感性认识很不科学，所以在提升性能之前，首要问题是：如何度量性能。</p><p>度量性能的指标有很多，但是有两个指标是最核心的，它们就是延迟和吞吐量。<strong>延迟</strong>指的是发出请求到收到响应这个过程的时间；延迟越短，意味着程序执行得越快，性能也就越好。 <strong>吞吐量</strong>指的是在单位时间内能处理请求的数量；吞吐量越大，意味着程序能处理的请求越多，性能也就越好。这两个指标内部有一定的联系（同等条件下，延迟越短，吞吐量越大），但是由于它们隶属不同的维度（一个是时间维度，一个是空间维度），并不能互相转换。</p><p>我们所谓提升性能，从度量的角度，主要是<strong>降低延迟，提高吞吐量</strong>。这也是我们使用多线程的主要目的。那我们该怎么降低延迟，提高吞吐量呢？这个就要从多线程的应用场景说起了。</p><!-- [[[read_end]]] --><h2>多线程的应用场景</h2><p>要想“降低延迟，提高吞吐量”，对应的方法呢，基本上有两个方向，一个方向是<strong>优化算法</strong>，另一个方向是<strong>将硬件的性能发挥到极致</strong>。前者属于算法范畴，后者则是和并发编程息息相关了。那计算机主要有哪些硬件呢？主要是两类：一个是I/O，一个是CPU。简言之，<strong>在并发编程领域，提升性能本质上就是提升硬件的利用率，再具体点来说，就是提升I/O的利用率和CPU的利用率</strong>。</p><p>估计这个时候你会有个疑问，操作系统不是已经解决了硬件的利用率问题了吗？的确是这样，例如操作系统已经解决了磁盘和网卡的利用率问题，利用中断机制还能避免CPU轮询I/O状态，也提升了CPU的利用率。但是操作系统解决硬件利用率问题的对象往往是单一的硬件设备，而我们的并发程序，往往需要CPU和I/O设备相互配合工作，也就是说，<strong>我们需要解决CPU和I/O设备综合利用率的问题</strong>。关于这个综合利用率的问题，操作系统虽然没有办法完美解决，但是却给我们提供了方案，那就是：多线程。</p><p>下面我们用一个简单的示例来说明：如何利用多线程来提升CPU和I/O设备的利用率？假设程序按照CPU计算和I/O操作交叉执行的方式运行，而且CPU计算和I/O操作的耗时是1:1。</p><p>如下图所示，如果只有一个线程，执行CPU计算的时候，I/O设备空闲；执行I/O操作的时候，CPU空闲，所以CPU的利用率和I/O设备的利用率都是50%。</p><p><img src=\"https://static001.geekbang.org/resource/image/d1/22/d1d7dfa1d574356cc5cb1019a4b7ca22.png?wh=1142*566\" alt=\"\"></p><center><span class=\"reference\">单线程执行示意图</span></center><p>如果有两个线程，如下图所示，当线程A执行CPU计算的时候，线程B执行I/O操作；当线程A执行I/O操作的时候，线程B执行CPU计算，这样CPU的利用率和I/O设备的利用率就都达到了100%。</p><p><img src=\"https://static001.geekbang.org/resource/image/68/2c/68a415b31b72844eb81889e9f0eb3f2c.png?wh=1142*567\" alt=\"\"></p><center><span class=\"reference\">二线程执行示意图</span></center><p>我们将CPU的利用率和I/O设备的利用率都提升到了100%，会对性能产生了哪些影响呢？通过上面的图示，很容易看出：单位时间处理的请求数量翻了一番，也就是说吞吐量提高了1倍。此时可以逆向思维一下，<strong>如果CPU和I/O设备的利用率都很低，那么可以尝试通过增加线程来提高吞吐量</strong>。</p><p>在单核时代，多线程主要就是用来平衡CPU和I/O设备的。如果程序只有CPU计算，而没有I/O操作的话，多线程不但不会提升性能，还会使性能变得更差，原因是增加了线程切换的成本。但是在多核时代，这种纯计算型的程序也可以利用多线程来提升性能。为什么呢？因为利用多核可以降低响应时间。</p><p>为便于你理解，这里我举个简单的例子说明一下：计算1+2+… … +100亿的值，如果在4核的CPU上利用4个线程执行，线程A计算[1，25亿)，线程B计算[25亿，50亿)，线程C计算[50，75亿)，线程D计算[75亿，100亿]，之后汇总，那么理论上应该比一个线程计算[1，100亿]快将近4倍，响应时间能够降到25%。一个线程，对于4核的CPU，CPU的利用率只有25%，而4个线程，则能够将CPU的利用率提高到100%。</p><p><img src=\"https://static001.geekbang.org/resource/image/95/8c/95367d49f55e0dfd099f2749c532098c.png?wh=1142*566\" alt=\"\"></p><center><span class=\"reference\">多核执行多线程示意图</span></center><h2>创建多少线程合适？</h2><p>创建多少线程合适，要看多线程具体的应用场景。我们的程序一般都是CPU计算和I/O操作交叉执行的，由于I/O设备的速度相对于CPU来说都很慢，所以大部分情况下，I/O操作执行的时间相对于CPU计算来说都非常长，这种场景我们一般都称为I/O密集型计算；和I/O密集型计算相对的就是CPU密集型计算了，CPU密集型计算大部分场景下都是纯CPU计算。I/O密集型程序和CPU密集型程序，计算最佳线程数的方法是不同的。</p><p>下面我们对这两个场景分别说明。</p><p>对于CPU密集型计算，多线程本质上是提升多核CPU的利用率，所以对于一个4核的CPU，每个核一个线程，理论上创建4个线程就可以了，再多创建线程也只是增加线程切换的成本。所以，<strong>对于CPU密集型的计算场景，理论上“线程的数量=CPU核数”就是最合适的</strong>。不过在工程上，<strong>线程的数量一般会设置为“CPU核数+1”</strong>，这样的话，当线程因为偶尔的内存页失效或其他原因导致阻塞时，这个额外的线程可以顶上，从而保证CPU的利用率。</p><p>对于I/O密集型的计算场景，比如前面我们的例子中，如果CPU计算和I/O操作的耗时是1:1，那么2个线程是最合适的。如果CPU计算和I/O操作的耗时是1:2，那多少个线程合适呢？是3个线程，如下图所示：CPU在A、B、C三个线程之间切换，对于线程A，当CPU从B、C切换回来时，线程A正好执行完I/O操作。这样CPU和I/O设备的利用率都达到了100%。</p><p><img src=\"https://static001.geekbang.org/resource/image/98/cb/98b71b72f01baf5f0968c7c3a2102fcb.png?wh=1142*595\" alt=\"\"></p><center><span class=\"reference\">三线程执行示意图</span></center><p>通过上面这个例子，我们会发现，对于I/O密集型计算场景，最佳的线程数是与程序中CPU计算和I/O操作的耗时比相关的，我们可以总结出这样一个公式：</p><blockquote>\n<p>最佳线程数=1 +（I/O耗时 / CPU耗时）</p>\n</blockquote><p>我们令R=I/O耗时 / CPU耗时，综合上图，可以这样理解：当线程A执行IO操作时，另外R个线程正好执行完各自的CPU计算。这样CPU的利用率就达到了100%。</p><p>不过上面这个公式是针对单核CPU的，至于多核CPU，也很简单，只需要等比扩大就可以了，计算公式如下：</p><blockquote>\n<p>最佳线程数=CPU核数 * [ 1 +（I/O耗时 / CPU耗时）]</p>\n</blockquote><h2>总结</h2><p>很多人都知道线程数不是越多越好，但是设置多少是合适的，却又拿不定主意。其实只要把握住一条原则就可以了，这条原则就是<strong>将硬件的性能发挥到极致</strong>。上面我们针对CPU密集型和I/O密集型计算场景都给出了理论上的最佳公式，这些公式背后的目标其实就是<strong>将硬件的性能发挥到极致</strong>。</p><p>对于I/O密集型计算场景，I/O耗时和CPU耗时的比值是一个关键参数，不幸的是这个参数是未知的，而且是动态变化的，所以工程上，我们要估算这个参数，然后做各种不同场景下的压测来验证我们的估计。不过工程上，原则还是<strong>将硬件的性能发挥到极致</strong>，所以压测时，我们需要重点关注CPU、I/O设备的利用率和性能指标（响应时间、吞吐量）之间的关系。</p><h2>课后思考</h2><p>有些同学对于最佳线程数的设置积累了一些经验值，认为对于I/O密集型应用，最佳线程数应该为：2 * CPU的核数 + 1，你觉得这个经验值合理吗？</p><p>欢迎在留言区与我分享你的想法，也欢迎你在留言区记录你的思考过程。感谢阅读，如果你觉得这篇文章对你有帮助的话，也欢迎把它分享给更多的朋友。</p><p></p>","neighbors":{"left":{"article_title":"09 | Java线程（上）：Java线程的生命周期","id":86366},"right":{"article_title":"11 | Java线程（下）：为什么局部变量是线程安全的？","id":86695}},"comments":[{"had_liked":false,"id":78519,"user_name":"CHEN川","can_delete":false,"product_type":"c1","uid":1001694,"ip_address":"","ucode":"4B4D11141A68B9","user_header":"https://static001.geekbang.org/account/avatar/00/0f/48/de/d9a88304.jpg","comment_is_top":false,"comment_ctime":1553165322,"is_pvip":false,"discussion_count":12,"race_medal":0,"score":"800417082378","product_id":100023901,"comment_content":"更多的精力其实应该放在算法的优化上，线程池的配置，按照经验配置一个，随时关注线程池大小对程序的影响即可，具体做法：可以为你的程序配置一个全局的线程池，需要异步执行的任务，扔到这个全局线程池处理，线程池大小按照经验设置，每隔一段时间打印一下线程池的利用率，做到心里有数。<br><br>看到过太多的代码，遇到要执行一个异步任务就创建一个线程池，导致整个程序的线程池大到爆，完全没必要。而且大多数时候，提高吞吐量可以通过使用缓存、优化业务逻辑、提前计算好等方式来处理，真没有必要太过于关注线程池大小怎么配置，如果小了就改大一点，大了改小一点就好，从老师本文的篇幅也可以看出来。<br><br>经验值不靠谱的另外一个原因，大多数情况下，一台服务器跑了很多程序，每个程序都有自己的线程池，那CPU如何分配？还是根据实际情况来确定比较好。","like_count":186,"discussions":[{"author":{"id":1621660,"avatar":"https://static001.geekbang.org/account/avatar/00/18/be/9c/d21b7e17.jpg","nickname":"子非鱼","note":"","ucode":"020DA0784E728C","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":65362,"discussion_content":"肯定不能使用一个线程池,不同的任务使用的线程池种类肯定是不一样的. 从juc的Executors 工具类,创建不同的线程池就能知道","likes_number":23,"is_delete":false,"is_hidden":false,"ctime":1574997756,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1063422,"avatar":"https://static001.geekbang.org/account/avatar/00/10/39/fe/99465085.jpg","nickname":"Adrian","note":"","ucode":"C11789EA4AFC69","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":218,"discussion_content":"切分线程池的一个使用场景，工程上有些服务需要做资源隔离，来保证对应服务执行线程的稳定性，不会受其他非重要业务影响；这个点来考虑新增线程池还是有必要的。","likes_number":16,"is_delete":false,"is_hidden":false,"ctime":1561289800,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":1,"child_discussions":[{"author":{"id":1561353,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/DYAIOgq83eoJmkx2BnrkzJHibSlsqQPYSNicBfaMBfwCFxgro1UGcdHhAtsow2hq1zKib5Wln1no4OqjSO8H9Z5gQ/132","nickname":"Geek_263696","note":"","ucode":"129DAA847DF312","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1063422,"avatar":"https://static001.geekbang.org/account/avatar/00/10/39/fe/99465085.jpg","nickname":"Adrian","note":"","ucode":"C11789EA4AFC69","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":66837,"discussion_content":"对的，资源隔离很重要","likes_number":4,"is_delete":false,"is_hidden":false,"ctime":1575110208,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":218,"ip_address":""},"score":66837,"extra":""}]},{"author":{"id":1024978,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/a3/d2/69356194.jpg","nickname":"Woong","note":"","ucode":"F009F3DFC4760A","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":3024,"discussion_content":"用一个线程池，线程名字一致，不利于查问题","likes_number":13,"is_delete":false,"is_hidden":false,"ctime":1564120001,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1448974,"avatar":"https://static001.geekbang.org/account/avatar/00/16/1c/0e/42b357cd.jpg","nickname":"Xiky","note":"","ucode":"C9E8D8C7024CA6","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":250,"discussion_content":"确实是这样，共用一个线程池，如果遇到某些任务处理数量大且时间较长，会影响到后续加到线程池任务队列里面的其他任务，尤其是一些对时效性要求较高的任务。","likes_number":8,"is_delete":false,"is_hidden":false,"ctime":1561358537,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1718303,"avatar":"https://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTKDfO7wKibzpw4YsoqLRCHUKxX4rYRUh7m7RCdOwzWVaN9QLlhcU5ho3w2Qcpib1O69YPj65ib07xQBQ/132","nickname":"努力呼吸","note":"","ucode":"52941DD7A01BBA","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":219088,"discussion_content":"个人认为一类业务一个线程池比较好，比如smsThreadPool，mailThreadPool, calcThreadPool这样","likes_number":4,"is_delete":false,"is_hidden":false,"ctime":1585734200,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":4,"child_discussions":[{"author":{"id":1341612,"avatar":"https://static001.geekbang.org/account/avatar/00/14/78/ac/e5e6e7f3.jpg","nickname":"古夜","note":"","ucode":"0A82D3CFCEDF07","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1718303,"avatar":"https://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTKDfO7wKibzpw4YsoqLRCHUKxX4rYRUh7m7RCdOwzWVaN9QLlhcU5ho3w2Qcpib1O69YPj65ib07xQBQ/132","nickname":"努力呼吸","note":"","ucode":"52941DD7A01BBA","race_medal":0,"user_type":1,"is_pvip":true},"discussion":{"id":287513,"discussion_content":"为什么呢","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1593473181,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":219088,"ip_address":""},"score":287513,"extra":""},{"author":{"id":1112183,"avatar":"https://static001.geekbang.org/account/avatar/00/10/f8/77/a6d34ca5.jpg","nickname":"jackie","note":"","ucode":"01A4B7839CFABD","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1341612,"avatar":"https://static001.geekbang.org/account/avatar/00/14/78/ac/e5e6e7f3.jpg","nickname":"古夜","note":"","ucode":"0A82D3CFCEDF07","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":288699,"discussion_content":"业务之间不相互影响","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1593843490,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":287513,"ip_address":""},"score":288699,"extra":""},{"author":{"id":1636029,"avatar":"https://static001.geekbang.org/account/avatar/00/18/f6/bd/f2c07661.jpg","nickname":"leon_LI","note":"","ucode":"7881396BB38053","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1341612,"avatar":"https://static001.geekbang.org/account/avatar/00/14/78/ac/e5e6e7f3.jpg","nickname":"古夜","note":"","ucode":"0A82D3CFCEDF07","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":329314,"discussion_content":"线程池里线程数是有限的，当线程忙不过来的时候，任务就放到阻塞队列里了，用统一一个线程池，各种业务的任务在一起排队，如果前面业务处理的时间太常，就会影响阻塞队列里后面业务处理。","likes_number":9,"is_delete":false,"is_hidden":false,"ctime":1606365729,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":287513,"ip_address":""},"score":329314,"extra":""}]},{"author":{"id":1302170,"avatar":"https://static001.geekbang.org/account/avatar/00/13/de/9a/bf7634a3.jpg","nickname":"E-N","note":"","ucode":"2BFD09695B7F63","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":200867,"discussion_content":"文中的三线程图假设io是并行的，恐怕并不合理，实际理论上真的是只要两倍线程就好，再多的线程也无法提高利用率，都会因为io阻塞。","likes_number":3,"is_delete":false,"is_hidden":false,"ctime":1583731691,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1145759,"avatar":"https://static001.geekbang.org/account/avatar/00/11/7b/9f/da374651.jpg","nickname":"zero","note":"","ucode":"D8A22815D8987C","race_medal":5,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":571894,"discussion_content":"肯定是要不同的业务不同的线程池","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1652452305,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":78472,"user_name":"假行僧","can_delete":false,"product_type":"c1","uid":1107161,"ip_address":"","ucode":"5D87225B067A20","user_header":"https://static001.geekbang.org/account/avatar/00/10/e4/d9/d74e4c61.jpg","comment_is_top":false,"comment_ctime":1553155323,"is_pvip":false,"replies":[{"id":"28573","content":"👍👍<br>","user_name":"作者回复","comment_id":78472,"uid":"1269969","ip_address":"","utype":1,"ctime":1553171868,"user_name_real":"王宝令"}],"discussion_count":4,"race_medal":0,"score":"293610931451","product_id":100023901,"comment_content":"个人觉得公式话性能问题有些不妥，定性的io密集或者cpu密集很难在定量的维度上反应出性能瓶颈，而且公式上忽略了线程数增加带来的cpu消耗，性能优化还是要定量比较好，这样不会盲目，比如io已经成为了瓶颈，增加线程或许带来不了性能提升，这个时候是不是可以考虑用cpu换取带宽，压缩数据，或者逻辑上少发送一些。最后一个问题，我的答案是大部分应用环境是合理的，老师也说了是积累了一些调优经验后给出的方案，没有特殊需求，初始值我会选大家都在用伪标准","like_count":68,"discussions":[{"author":{"id":1269969,"avatar":"https://static001.geekbang.org/account/avatar/00/13/60/d1/8efa89ab.jpg","nickname":"王宝令","note":"","ucode":"4FE19F5BC32FCA","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":444107,"discussion_content":"👍👍\n","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1553171868,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1192601,"avatar":"https://static001.geekbang.org/account/avatar/00/12/32/99/91b58bf7.jpg","nickname":"Tomy","note":"","ucode":"D7E49E90B0D60F","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":412659,"discussion_content":"如何打印线程池利用率","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1636248416,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1603420,"avatar":"https://static001.geekbang.org/account/avatar/00/18/77/5c/5d6fb47b.jpg","nickname":"小强（jacky）","note":"","ucode":"C6C26A2FE0F767","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":309423,"discussion_content":"厉害老哥","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1601286950,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1156592,"avatar":"https://static001.geekbang.org/account/avatar/00/11/a5/f0/8648c464.jpg","nickname":"Joker","note":"","ucode":"126AF848001A1E","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":42895,"discussion_content":"厉害，老哥","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1572806131,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":78312,"user_name":"多拉格·five","can_delete":false,"product_type":"c1","uid":1207914,"ip_address":"","ucode":"07023F43811EE3","user_header":"https://static001.geekbang.org/account/avatar/00/12/6e/6a/38a3fa8d.jpg","comment_is_top":false,"comment_ctime":1553129740,"is_pvip":false,"replies":[{"id":"28680","content":"比较简单的工具就是apm了","user_name":"作者回复","comment_id":78312,"uid":"1269969","ip_address":"","utype":1,"ctime":1553268390,"user_name_real":"王宝令"}],"discussion_count":3,"race_medal":0,"score":"203416592652","product_id":100023901,"comment_content":"问一下老师，这个线程配置比我在其他的资料也看过，但是最后那个公式没见过，方便说一下如何测试IO&#47;CPU 这个耗时比例吗","like_count":47,"discussions":[{"author":{"id":1269969,"avatar":"https://static001.geekbang.org/account/avatar/00/13/60/d1/8efa89ab.jpg","nickname":"王宝令","note":"","ucode":"4FE19F5BC32FCA","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":444044,"discussion_content":"比较简单的工具就是apm了","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1553268390,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1980201,"avatar":"https://static001.geekbang.org/account/avatar/00/1e/37/29/b3af57a7.jpg","nickname":"凯文小猪","note":"","ucode":"36D8AD0229547F","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":537612,"discussion_content":"首先说下结论：思考题的公式 2 * N +1 在大多数场景下都是不适用的。\n比方说 我现在从qps500飙升到qps1000 显然在不考虑bug的情况下 ，吞吐量、时延都是要下降的。因为web容器默认是每连接每线程 那么这些连接或是请求如果无法吸收 那么对客户端来说就是超时了。\n故此时线程数显然不够用。\n\n那么老师的给出的公式是否可行？\n我觉得在理想或是实验室场景下 可行。这里有个前提就是io切换与cpu切换一定是严格切割干净的 但事实上因为现代指令集优化（如乱序执行） 两者在微观上并不等价。\n\n很多同学问到cpu 耗时 io耗时怎么采集？io耗时比较简单就不说了 cpu耗时通常需要工具辅助 我自己使用jmeter ，刚才看了下skywalking8.1并没有提供 可能是我一时没找到把。\n\n最后谈一下我个人的计算公式 抛砖引玉\nqps * （99SLA + 预留空间）\n\n公式来自于：hystrix文档\nrequests per second at peak when healthy × 99th percentile latency in seconds + some breathing room\n\n每秒能处理1000个请求，99%的请求响应时间是30ms，那么公式是：\n1000 *（0.030+0.012）","likes_number":4,"is_delete":false,"is_hidden":false,"ctime":1639119366,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1500785,"avatar":"https://static001.geekbang.org/account/avatar/00/16/e6/71/491dcad1.jpg","nickname":"南瓜","note":"","ucode":"A3828CEC6257CC","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":286936,"discussion_content":"apm指的是听云吗？","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1593327671,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":78549,"user_name":"董宗磊","can_delete":false,"product_type":"c1","uid":1095445,"ip_address":"","ucode":"D7005A328BC2EE","user_header":"https://static001.geekbang.org/account/avatar/00/10/b7/15/6a2b6b83.jpg","comment_is_top":false,"comment_ctime":1553173135,"is_pvip":false,"replies":[{"id":"28655","content":"新版的jvm开始支持docker了，老版本问题还挺多","user_name":"作者回复","comment_id":78549,"uid":"1269969","ip_address":"","utype":1,"ctime":1553262849,"user_name_real":"王宝令"}],"discussion_count":2,"race_medal":0,"score":"156171995791","product_id":100023901,"comment_content":"思考题：认为不合理，不能只考虑经验，还有根据是IO密集型或者是CPU密集型，具体问题具体分析。<br>看今天文章内容，分享个实际问题；我们公司服务器都是容器，一个物理机分出好多容器，有个哥们设置线程池数量直接就是：Runtime.getRuntime().availableProcessors() * 2；本来想获取容器的CPU数量 * 2，其实Runtime.getRuntime().availableProcessors()获取到的是物理机CPU合数，一下开启了好多线程 ^_^","like_count":36,"discussions":[{"author":{"id":1269969,"avatar":"https://static001.geekbang.org/account/avatar/00/13/60/d1/8efa89ab.jpg","nickname":"王宝令","note":"","ucode":"4FE19F5BC32FCA","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":444139,"discussion_content":"新版的jvm开始支持docker了，老版本问题还挺多","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1553262849,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1980201,"avatar":"https://static001.geekbang.org/account/avatar/00/1e/37/29/b3af57a7.jpg","nickname":"凯文小猪","note":"","ucode":"36D8AD0229547F","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":537608,"discussion_content":"嗯 cgroup没做好 所以能看到底层实际的物理核数 比方说E5的机器 能看到64核甚至128核","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1639117344,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":78277,"user_name":"aksonic","can_delete":false,"product_type":"c1","uid":1003633,"ip_address":"","ucode":"B6F3348F6714DB","user_header":"https://static001.geekbang.org/account/avatar/00/0f/50/71/e8229703.jpg","comment_is_top":false,"comment_ctime":1553125198,"is_pvip":false,"replies":[{"id":"28683","content":"不但起的早，还看懂了","user_name":"作者回复","comment_id":78277,"uid":"1269969","ip_address":"","utype":1,"ctime":1553268699,"user_name_real":"王宝令"}],"discussion_count":1,"race_medal":0,"score":"156171947854","product_id":100023901,"comment_content":"早起的鸟果然有食吃，抢到了顶楼，哈哈。<br>对于老师的思考题，我觉得不合理，本来就是分CPU密集型和IO密集型的，尤其是IO密集型更是需要进行测试和分析而得到结果，差别很大，比如IO&#47;CPU的比率很大，比如10倍，2核，较佳配置：2*（1+10）=22个线程，而2*CPU核数+1 = 5，这两个差别就很大了。老师，我说的对不对？","like_count":36,"discussions":[{"author":{"id":1269969,"avatar":"https://static001.geekbang.org/account/avatar/00/13/60/d1/8efa89ab.jpg","nickname":"王宝令","note":"","ucode":"4FE19F5BC32FCA","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":444029,"discussion_content":"不但起的早，还看懂了","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1553268699,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":81701,"user_name":"南山","can_delete":false,"product_type":"c1","uid":1119593,"ip_address":"","ucode":"94656FE4A6C378","user_header":"https://static001.geekbang.org/account/avatar/00/11/15/69/187b9968.jpg","comment_is_top":false,"comment_ctime":1554011433,"is_pvip":true,"replies":[{"id":"29618","content":"说的太对了！！！","user_name":"作者回复","comment_id":81701,"uid":"1269969","ip_address":"","utype":1,"ctime":1554028799,"user_name_real":"王宝令"}],"discussion_count":1,"race_medal":0,"score":"130403030313","product_id":100023901,"comment_content":"理论加经验加实际场景，比如现在大多数公司的系统是以服务的形式来通过docker部署的，每个docker服务其实对应部署的就一个服务，这样的情况下是可以按照理论为基础，再加上实际情况来设置线程池大小的，当然通过各种监控来调整是最好的，但是实际情况是但服务几十上百，除非是核心功能，否则很难通过监控指标来调整线程池大小。理论加经验起码不会让设置跑偏太多，还有就是服务中的各种线程池统一管理是很有必要的","like_count":30,"discussions":[{"author":{"id":1269969,"avatar":"https://static001.geekbang.org/account/avatar/00/13/60/d1/8efa89ab.jpg","nickname":"王宝令","note":"","ucode":"4FE19F5BC32FCA","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":445305,"discussion_content":"说的太对了！！！","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1554028799,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":78265,"user_name":"不靠谱的琴谱","can_delete":false,"product_type":"c1","uid":1243964,"ip_address":"","ucode":"D388EDFD6E5F8C","user_header":"https://static001.geekbang.org/account/avatar/00/12/fb/3c/e92d40f6.jpg","comment_is_top":false,"comment_ctime":1553120074,"is_pvip":false,"discussion_count":7,"race_medal":0,"score":"87452465994","product_id":100023901,"comment_content":"如果我一个cpu是4核8线程  这里线程数数量是4+1还是8+1（cpu密集类型）","like_count":20,"discussions":[{"author":{"id":1179224,"avatar":"https://static001.geekbang.org/account/avatar/00/11/fe/58/2cddaca4.jpg","nickname":"FH","note":"","ucode":"E47F6765CF1EEE","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":85276,"discussion_content":"你说的应该是超线程技术，这里应该是8+1","likes_number":3,"is_delete":false,"is_hidden":false,"ctime":1576514792,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1980201,"avatar":"https://static001.geekbang.org/account/avatar/00/1e/37/29/b3af57a7.jpg","nickname":"凯文小猪","note":"","ucode":"36D8AD0229547F","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":537609,"discussion_content":"intel E5 还不支持 超线程 因为他本身核数非常高。如果是实机虚拟化的话  已经没有超线程的概念了。当然实际上只是多几个也无所谓。大多数程序cpu io都是拉不满的","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1639117500,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1121758,"avatar":"https://static001.geekbang.org/account/avatar/00/11/1d/de/62bfa83f.jpg","nickname":"aoe","note":"","ucode":"1C6201EDB4E954","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":41236,"discussion_content":"8+1 8个线程是CPU支持的，可以并行计算。实际压测一下便知","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1572369978,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1049017,"avatar":"https://static001.geekbang.org/account/avatar/00/10/01/b9/73435279.jpg","nickname":"学习学个屁","note":"","ucode":"DF2D61E6FB2FCE","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":572098,"discussion_content":"8+1 实际需要压测","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1652600924,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1228185,"avatar":"https://static001.geekbang.org/account/avatar/00/12/bd/99/851b0db6.jpg","nickname":"ylw66","note":"","ucode":"3FD0A4937793B7","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":24345,"discussion_content":"4核8G吧，应该是4+1=5","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1570100419,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1015754,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/7f/ca/ea85bfdd.jpg","nickname":"helloworld","note":"","ucode":"00DF2FEC58D2E6","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":2894,"discussion_content":"按照文中所说应该是4吧","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1564023177,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1334409,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTIjRETqRjvLESLDZkNTjIiaSibtNYBaS1o8WMUicOFn3ycF3Mgh6LRJibqSBjVBjiaO2ibW0gHkafATb21A/132","nickname":"lmdcx","note":"","ucode":"F2CDD0091ADFD7","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":2344,"discussion_content":"没看到你的评论，我提的问题和你重复了😅，不过我还有两个问题，你能帮我看看吗？","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1563503578,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":78274,"user_name":"探索无止境","can_delete":false,"product_type":"c1","uid":1044178,"ip_address":"","ucode":"91D2A9907DFA79","user_header":"https://static001.geekbang.org/account/avatar/00/0f/ee/d2/7024431c.jpg","comment_is_top":false,"comment_ctime":1553124994,"is_pvip":false,"replies":[{"id":"28684","content":"单机有瓶颈，就分布式。<br>数据库有瓶颈，就分库分表分片","user_name":"作者回复","comment_id":78274,"uid":"1269969","ip_address":"","utype":1,"ctime":1553268751,"user_name_real":"王宝令"}],"discussion_count":7,"race_medal":0,"score":"74567569026","product_id":100023901,"comment_content":"老师早上好，当应用来的请数量过大，此时线程池的线程已经不够使用，排队的队列也已经满了，那么后面的请求就会被丢弃掉，如果这是一个更新数据的请求操作，那么就会出现数据更新丢失，老师有没有什么具体的解决思路？期待解答","like_count":17,"discussions":[{"author":{"id":1269969,"avatar":"https://static001.geekbang.org/account/avatar/00/13/60/d1/8efa89ab.jpg","nickname":"王宝令","note":"","ucode":"4FE19F5BC32FCA","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":444027,"discussion_content":"单机有瓶颈，就分布式。\n数据库有瓶颈，就分库分表分片","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1553268751,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1006922,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/5d/4a/4b0d9ebc.jpg","nickname":"西伯利亚鼯鼠","note":"","ucode":"311ADB023935E4","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":319381,"discussion_content":"如果觉得硬件利用率已经很高，但仍无法抗住的话，可以考虑异步消息队列","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1604020535,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1284938,"avatar":"https://static001.geekbang.org/account/avatar/00/13/9b/4a/6faf0428.jpg","nickname":"sdyin","note":"","ucode":"7DA6F50117410E","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":44418,"discussion_content":"可以考虑设置线程池的拒绝策略,当线程池满了,让主线程执行","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1572947638,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":1,"child_discussions":[{"author":{"id":2963434,"avatar":"","nickname":"Geek_94fa0e","note":"","ucode":"15BC7D4E130E80","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1284938,"avatar":"https://static001.geekbang.org/account/avatar/00/13/9b/4a/6faf0428.jpg","nickname":"sdyin","note":"","ucode":"7DA6F50117410E","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":560499,"discussion_content":"这个丢弃是操作系统层面的丢弃吧?","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1649347423,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":44418,"ip_address":""},"score":560499,"extra":""}]},{"author":{"id":1980201,"avatar":"https://static001.geekbang.org/account/avatar/00/1e/37/29/b3af57a7.jpg","nickname":"凯文小猪","note":"","ucode":"36D8AD0229547F","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":586900,"discussion_content":"单机的瓶颈确实是通过水平扩展拉伸的 数据库的瓶颈取决于数据结构 &amp;&amp; 数据规模。\n比方说 一个几千万的表 按照主键查 或者做const查询 不能说单个查询慢。\n而是高并发查询下 数据递延造成的延迟。比方说单次请求0.001s 那么5000并发为5000*0.001 = 5s\n\n所以优化的方式是两点：\n1. 改变数据结构——换hbase redis mongo es\n2. 改变数据量——分库分表","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1662601803,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":"上海"},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1980201,"avatar":"https://static001.geekbang.org/account/avatar/00/1e/37/29/b3af57a7.jpg","nickname":"凯文小猪","note":"","ucode":"36D8AD0229547F","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":586899,"discussion_content":"这里老师说的比较片面了 ","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1662601636,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":"上海"},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":2963434,"avatar":"","nickname":"Geek_94fa0e","note":"","ucode":"15BC7D4E130E80","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":560500,"discussion_content":"这个丢弃是操作系统的网络模块层面的丢弃报文吧?","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1649347440,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":78755,"user_name":"木卫六","can_delete":false,"product_type":"c1","uid":1199495,"ip_address":"","ucode":"D113DF578C5BF5","user_header":"https://static001.geekbang.org/account/avatar/00/12/4d/87/57236a2d.jpg","comment_is_top":false,"comment_ctime":1553232602,"is_pvip":true,"replies":[{"id":"28635","content":"工作中都是按照逻辑核数来的，理论值和经验值只是提供个指导，实际上还是要靠压测。<br>","user_name":"作者回复","comment_id":78755,"uid":"1269969","ip_address":"","utype":1,"ctime":1553256329,"user_name_real":"王宝令"}],"discussion_count":1,"race_medal":0,"score":"70272709338","product_id":100023901,"comment_content":"在4核8线程的处理器使用Runtime.availableProcessors()结果是8，超线程技术属于硬件层面上的并发，从cpu硬件来看是一个物理核心有两个逻辑核心，但因为缓存、执行资源等存在共享和竞争，所以两个核心并不能并行工作。超线程技术统计性能提升大概是30%左右，并不是100%。另外，不管设置成4还是8，现代操作系统层面的调度应该是按逻辑核心数，也就是8来调度的（除非禁用超线程技术）。所以我觉得这种情况下，严格来说，4和8都不一定是合适的，具体情况还是要根据应用性能和资源的使用情况进行调整。这是个人的理解，请老师指正。","like_count":16,"discussions":[{"author":{"id":1269969,"avatar":"https://static001.geekbang.org/account/avatar/00/13/60/d1/8efa89ab.jpg","nickname":"王宝令","note":"","ucode":"4FE19F5BC32FCA","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":444225,"discussion_content":"工作中都是按照逻辑核数来的，理论值和经验值只是提供个指导，实际上还是要靠压测。\n","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1553256329,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":78609,"user_name":"QQ怪","can_delete":false,"product_type":"c1","uid":1211223,"ip_address":"","ucode":"1A39B8433D9208","user_header":"https://static001.geekbang.org/account/avatar/00/12/7b/57/a9b04544.jpg","comment_is_top":false,"comment_ctime":1553182647,"is_pvip":false,"replies":[{"id":"28660","content":"apm工具可以","user_name":"作者回复","comment_id":78609,"uid":"1269969","ip_address":"","utype":1,"ctime":1553263371,"user_name_real":"王宝令"}],"discussion_count":1,"race_medal":0,"score":"44502855607","product_id":100023901,"comment_content":"我就想问下如何测试io耗时和cpu耗时","like_count":10,"discussions":[{"author":{"id":1269969,"avatar":"https://static001.geekbang.org/account/avatar/00/13/60/d1/8efa89ab.jpg","nickname":"王宝令","note":"","ucode":"4FE19F5BC32FCA","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":444163,"discussion_content":"apm工具可以","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1553263371,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":78506,"user_name":"zsh0103","can_delete":false,"product_type":"c1","uid":1326016,"ip_address":"","ucode":"3992AB4BD1A18A","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/DYAIOgq83epLhKkTgowm9PqUwP9k90DecpOU7HQ0IRuAp515kIonbfyqYm6ME7s2bmaPX0sSA14micZ2DAfLLibw/132","comment_is_top":false,"comment_ctime":1553161749,"is_pvip":false,"replies":[{"id":"28656","content":"1.两次之和<br>2.理论值仅仅适用部署一个服务的场景。<br>3.有区别","user_name":"作者回复","comment_id":78506,"uid":"1269969","ip_address":"","utype":1,"ctime":1553263028,"user_name_real":"王宝令"}],"discussion_count":1,"race_medal":0,"score":"31617932821","product_id":100023901,"comment_content":"请问老师，<br>1 在现实项目如何计算I&#47;O耗时与CPU耗时呢，比如程序是读取网络数据，然后分析，最后插入数据库。这里网络读取何数据库插入是两次IO操作，计算IO耗时是两次的和吗？<br>2. 如果我在一台机器上部署2个服务，那计算线程数是要每个服务各占一半的数量吗？<br>3. 如果我用一个8核CPU的机器部署服务，启动8个不同端口的相同服务，和启动一个包含8个线程的服务在处理性能上会有区别吗？","like_count":7,"discussions":[{"author":{"id":1269969,"avatar":"https://static001.geekbang.org/account/avatar/00/13/60/d1/8efa89ab.jpg","nickname":"王宝令","note":"","ucode":"4FE19F5BC32FCA","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":444123,"discussion_content":"1.两次之和\n2.理论值仅仅适用部署一个服务的场景。\n3.有区别","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1553263028,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":78572,"user_name":"已忘二","can_delete":false,"product_type":"c1","uid":1446764,"ip_address":"","ucode":"CBBE4E1AA22F36","user_header":"https://static001.geekbang.org/account/avatar/00/16/13/6c/08b8829d.jpg","comment_is_top":false,"comment_ctime":1553177547,"is_pvip":false,"replies":[{"id":"28629","content":"io有瓶颈后，cpu使用率就上不去了<br>","user_name":"作者回复","comment_id":78572,"uid":"1269969","ip_address":"","utype":1,"ctime":1553229946,"user_name_real":"王宝令"}],"discussion_count":10,"race_medal":0,"score":"27322981323","product_id":100023901,"comment_content":"老师，有个疑问，就是那个I&#47;O和CPU比为2:1时，CPU使用率达到了100%，但是I&#47;O使用率却到了200%，也就是时刻有两个I&#47;O同时执行，这样是可以的么？I&#47;O不需要等待的么？","like_count":6,"discussions":[{"author":{"id":1269969,"avatar":"https://static001.geekbang.org/account/avatar/00/13/60/d1/8efa89ab.jpg","nickname":"王宝令","note":"","ucode":"4FE19F5BC32FCA","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":444148,"discussion_content":"io有瓶颈后，cpu使用率就上不去了\n","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1553229946,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1077931,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/Wy62w9wUM6hLpx7wSw0M1SPoT6pKr07yPHOib56CvtzIQ96t7eZkG4UHQ2kgp9jzBJzfxB1mlP8ibosdqxVwicQUw/132","nickname":"三良","note":"","ucode":"1AAAAED847D85E","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":178813,"discussion_content":"“对于 I/O 密集型的计算场景，比如前面我们的例子中，如果 CPU 计算和 I/O 操作的耗时是 1:1，那么 2 个线程是最合适的。如果 CPU 计算和 I/O 操作的耗时是 1:2，那多少个线程合适呢？是 3 个线程，如下图所示：CPU 在 A、B、C 三个线程之间切换，对于线程 A，当 CPU 从 B、C 切换回来时，线程 A 正好执行完 I/O 操作。这样 CPU 和 I/O 设备的利用率都达到了 100%。”\n\n背景是：一个线程执行，CPU执行计算使用的时间和 线程等待I/O的时间（可以释放CPU）是1:2。\n如果只有一个线程执行，那CPU的利用率为 1/3=33%。\n在增加并发度为三个线程后，CPU利用率为100%。有一个隐含的条件是：在增加为3个线程并发的情况下，一个线程执行所需CPU执行计算使用的时间和 线程等待I/O的时间还是1:2，也就是要求在三个线程的场景下（同时会有两个线程请求I/O），I/O时间不能增加。\n同时会有两个线程请求I/O的情况，I/O时间不增加，肯定未达到I/O的瓶颈，有两种情况：\n1. 要么是I/O硬件性能不是瓶颈，比如外部服务请求，网卡性能OK，外部服务慢，等待外部服务响应的时候，I/O硬件资源也是空闲。\n2.要么是新增硬件。\n\n不存在单一硬件使用率200%的情况。\n","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1582199168,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":2,"child_discussions":[{"author":{"id":2007786,"avatar":"https://static001.geekbang.org/account/avatar/00/1e/a2/ea/8f913dfa.jpg","nickname":"吃猫的鱼","note":"","ucode":"DC15372C47A0CD","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1077931,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/Wy62w9wUM6hLpx7wSw0M1SPoT6pKr07yPHOib56CvtzIQ96t7eZkG4UHQ2kgp9jzBJzfxB1mlP8ibosdqxVwicQUw/132","nickname":"三良","note":"","ucode":"1AAAAED847D85E","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":321442,"discussion_content":"没看明白，我就很好奇磁盘头就一个，它怎么做到两个线程同时IO？\nCPU利用率可以达到100%，但I/O利用率100%实在没理解。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1604581375,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":178813,"ip_address":""},"score":321442,"extra":""},{"author":{"id":1145759,"avatar":"https://static001.geekbang.org/account/avatar/00/11/7b/9f/da374651.jpg","nickname":"zero","note":"","ucode":"D8A22815D8987C","race_medal":5,"user_type":1,"is_pvip":false},"reply_author":{"id":2007786,"avatar":"https://static001.geekbang.org/account/avatar/00/1e/a2/ea/8f913dfa.jpg","nickname":"吃猫的鱼","note":"","ucode":"DC15372C47A0CD","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":571900,"discussion_content":"他理解错了，cpu耗时:io耗时=1:2，应该是两个线程同时执行cpu计算，一个线程执行io。其实，利用率100%也只是理论的","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1652454088,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":321442,"ip_address":""},"score":571900,"extra":""}]},{"author":{"id":1145759,"avatar":"https://static001.geekbang.org/account/avatar/00/11/7b/9f/da374651.jpg","nickname":"zero","note":"","ucode":"D8A22815D8987C","race_medal":5,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":571902,"discussion_content":"2:1的情况下，应该是只有1个io执行，否则就不是2:1了","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1652454214,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1493907,"avatar":"https://static001.geekbang.org/account/avatar/00/16/cb/93/4adea49a.jpg","nickname":"努力努力再努力","note":"","ucode":"0C6EEA28FCE8C7","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":561887,"discussion_content":"其实应该不是200，只是线程被刮起阻塞了，等待up设备操作完上一个线程的请求，再来操作它，但相对 cpu 来说，这两个线程都没有在使用cpu","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1649738291,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1554995,"avatar":"https://static001.geekbang.org/account/avatar/00/17/ba/33/2d83d174.jpg","nickname":"时光守护者-基兰","note":"","ucode":"F0B0887B1979D2","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":361531,"discussion_content":" 为啥io有瓶颈后，cpu使用率就上不去了","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1616684402,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":1,"child_discussions":[{"author":{"id":1649057,"avatar":"https://static001.geekbang.org/account/avatar/00/19/29/a1/41607383.jpg","nickname":"hello","note":"","ucode":"4F42DAA5DB5C38","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":1554995,"avatar":"https://static001.geekbang.org/account/avatar/00/17/ba/33/2d83d174.jpg","nickname":"时光守护者-基兰","note":"","ucode":"F0B0887B1979D2","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":375553,"discussion_content":"外部输入达到了瓶颈，CPU 都空闲下来了，当然使用率上不去。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1621741338,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":361531,"ip_address":""},"score":375553,"extra":""}]},{"author":{"id":1249870,"avatar":"https://static001.geekbang.org/account/avatar/00/13/12/4e/b12085e6.jpg","nickname":"大雄","note":"","ucode":"CDDEA245594137","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":70287,"discussion_content":"I/O使用率20%怎么计算的？","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1575342342,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":1,"child_discussions":[{"author":{"id":1554995,"avatar":"https://static001.geekbang.org/account/avatar/00/17/ba/33/2d83d174.jpg","nickname":"时光守护者-基兰","note":"","ucode":"F0B0887B1979D2","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1249870,"avatar":"https://static001.geekbang.org/account/avatar/00/13/12/4e/b12085e6.jpg","nickname":"大雄","note":"","ucode":"CDDEA245594137","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":361533,"discussion_content":"是200%，同一时间段2个io操作，一个cpu操作","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1616684415,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":70287,"ip_address":""},"score":361533,"extra":""}]}]},{"had_liked":false,"id":78300,"user_name":"阿冲","can_delete":false,"product_type":"c1","uid":1062514,"ip_address":"","ucode":"06BF66D9009659","user_header":"https://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTKg7RjNMzSrIwUnjYstbdicVv5MawrQLTHc6rdpwm0Q04b7icj7eAb0F8zSxe8gmM99QBvTECK5KvrQ/132","comment_is_top":false,"comment_ctime":1553127989,"is_pvip":false,"replies":[{"id":"28681","content":"就是针对一个线程既有cpu也有io的，这个才是io密集型","user_name":"作者回复","comment_id":78300,"uid":"1269969","ip_address":"","utype":1,"ctime":1553268477,"user_name_real":"王宝令"}],"discussion_count":3,"race_medal":0,"score":"27322931765","product_id":100023901,"comment_content":"老师，你好！有个疑惑就是我在写web应用的时候一般都是一个请求里既包含cpu计算（比如字符串检验）又包含操作（比如数据库操作），这种操作就是一个线程完成的。那么这种情况按你写的这个公式还起作用吗？c#里面有对io操作基本都封装了异步方法，很容易解决我刚说的问题(调用异步方法就会切换线程进行io操作，等操作完了再切回来)。java要达到这种效果代码一般怎么写比较合适？","like_count":6,"discussions":[{"author":{"id":1269969,"avatar":"https://static001.geekbang.org/account/avatar/00/13/60/d1/8efa89ab.jpg","nickname":"王宝令","note":"","ucode":"4FE19F5BC32FCA","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":444039,"discussion_content":"就是针对一个线程既有cpu也有io的，这个才是io密集型","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1553268477,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1812970,"avatar":"https://static001.geekbang.org/account/avatar/00/1b/a9/ea/5bfce6c5.jpg","nickname":"mgs2002","note":"","ucode":"F5931108BD509B","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":276139,"discussion_content":"是的，基本都是IO密集型","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1590827560,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1437158,"avatar":"https://static001.geekbang.org/account/avatar/00/15/ed/e6/75a32708.jpg","nickname":"日拱一兵","note":"","ucode":"D6386E5CD7C061","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":5492,"discussion_content":"按照这个意思说，绝大多数我们日常的业务都是io密集型的了","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1566305469,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":78247,"user_name":"姜戈","can_delete":false,"product_type":"c1","uid":1058972,"ip_address":"","ucode":"45C4BE93C8E4CC","user_header":"https://static001.geekbang.org/account/avatar/00/10/28/9c/73e76b19.jpg","comment_is_top":false,"comment_ctime":1553101509,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"27322905285","product_id":100023901,"comment_content":"2*CPU核数+1，我觉得不合理，针对IO密集型，老师提供的公式是：CPU核数*（1+IO耗时&#47;CPU耗时）。2*CPU核数+1这个公式相当于这里有个潜在估计，假设了IO消耗时间与CPU消耗时间1:1，再加一个线程用来预防其中有某个线程被阻塞，及时顶上。针对IO密集型，要考虑的就是IO耗时与CPU耗时之比！这个经验公式只是针对其中1:1耗时比一种情况，不够全面！","like_count":6},{"had_liked":false,"id":115171,"user_name":"lmdcx","can_delete":false,"product_type":"c1","uid":1334409,"ip_address":"","ucode":"F2CDD0091ADFD7","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTIjRETqRjvLESLDZkNTjIiaSibtNYBaS1o8WMUicOFn3ycF3Mgh6LRJibqSBjVBjiaO2ibW0gHkafATb21A/132","comment_is_top":false,"comment_ctime":1563503234,"is_pvip":false,"replies":[{"id":"53900","content":"用逻辑核数就行，也就是操作系统里看到的核数","user_name":"作者回复","comment_id":115171,"uid":"1269969","ip_address":"","utype":1,"ctime":1570709753,"user_name_real":"王宝令"}],"discussion_count":1,"race_medal":0,"score":"23038339714","product_id":100023901,"comment_content":"我有个疑惑哈，老师的算法都是以 CPU 核数为参数，但是在硬件上有这种情况：<br>比如Intel 赛扬G460是单核心，双线程的CPU，<br>Intel 酷睿i3 3220是双核心 四线程，<br>Intel 酷睿i5 4570是四核心 四线程，<br>Intel 酷睿i7 4770K是四核心 八线程 等等<br>这个对那个算法有影响吗？<br>还有就是线程让出CPU内核 时，他的数据是要刷新到内存中保存吗？（我不是想要挑刺啊，我是觉得这个和前面讲的可见性应该有关系，比如单核多线程是不是不会有可见性的问题？当然只要是单线程不管多少核则定没有可见性的问题）<br>@董宗磊 提到了 availableProcessors ，这个我看文档写的是获得可用的Java虚拟机的可用的处理器数量，和实际的主机 CPU 核数不是一致的吧，先忽略 docker 的问题，它可以用作算法中的 CPU核数吗？（我对“可用”俩字也很迷惑，难道这个数量会动态变化吗？）","like_count":5,"discussions":[{"author":{"id":1269969,"avatar":"https://static001.geekbang.org/account/avatar/00/13/60/d1/8efa89ab.jpg","nickname":"王宝令","note":"","ucode":"4FE19F5BC32FCA","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":458999,"discussion_content":"用逻辑核数就行，也就是操作系统里看到的核数","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1570709753,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":78479,"user_name":"walkingonair","can_delete":false,"product_type":"c1","uid":1444748,"ip_address":"","ucode":"0C8BEE064ABF8B","user_header":"https://static001.geekbang.org/account/avatar/00/16/0b/8c/db1ee0a2.jpg","comment_is_top":false,"comment_ctime":1553156504,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"18733025688","product_id":100023901,"comment_content":"当I&#47;O 耗时远远大于CPU耗时时，&quot;2 * CPU 的核数 + 1&quot;会导致所有线程在长时间下都处于等待I&#47;O操作的状态，而无法合理利用CPU","like_count":4},{"had_liked":false,"id":146049,"user_name":"tungSing","can_delete":false,"product_type":"c1","uid":1402570,"ip_address":"","ucode":"F7147EA351BE44","user_header":"https://static001.geekbang.org/account/avatar/00/15/66/ca/fb5c3a30.jpg","comment_is_top":false,"comment_ctime":1572424557,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"14457326445","product_id":100023901,"comment_content":"看完这篇文章首先收获的一点就是知道了压力测试的一个作用就是要调整io和cpu配合发挥到极致，具体怎么调需要继续学习呀！","like_count":3},{"had_liked":false,"id":104001,"user_name":"醉红颜","can_delete":false,"product_type":"c1","uid":1118507,"ip_address":"","ucode":"66C7FA47CC4D7A","user_header":"https://static001.geekbang.org/account/avatar/00/11/11/2b/4053b256.jpg","comment_is_top":false,"comment_ctime":1560586923,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"14445488811","product_id":100023901,"comment_content":"王老师！如何判断程序是cpu密集型和io密集型的程序？","like_count":3},{"had_liked":false,"id":79127,"user_name":"Weixiao","can_delete":false,"product_type":"c1","uid":1020698,"ip_address":"","ucode":"E627DE43521E64","user_header":"https://static001.geekbang.org/account/avatar/00/0f/93/1a/79b052df.jpg","comment_is_top":false,"comment_ctime":1553360169,"is_pvip":false,"replies":[{"id":"28860","content":"你对照着图理解一下，cpu时间上没有重叠<br>","user_name":"作者回复","comment_id":79127,"uid":"1269969","ip_address":"","utype":1,"ctime":1553389202,"user_name_real":"王宝令"}],"discussion_count":3,"race_medal":0,"score":"14438262057","product_id":100023901,"comment_content":"最佳线程数 =1 +（I&#47;O 耗时 &#47; CPU 耗时），<br><br>文中说，1表示一个线程执行io，另外R个线程刚好执行完cpu计算。<br><br>这里理解有点问题，这个公式是按照单核给出的，所以不可能存在同时R个线程执行cpu计算。所以我理解文章中说反了，应该是1个线程在执行cpu，然后有R个线程可以同时在执行io，这样cpu的利用率为100%","like_count":3,"discussions":[{"author":{"id":1269969,"avatar":"https://static001.geekbang.org/account/avatar/00/13/60/d1/8efa89ab.jpg","nickname":"王宝令","note":"","ucode":"4FE19F5BC32FCA","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":444365,"discussion_content":"你对照着图理解一下，cpu时间上没有重叠\n","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1553389202,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1179952,"avatar":"https://static001.geekbang.org/account/avatar/00/12/01/30/cb3a729e.jpg","nickname":"XHH","note":"","ucode":"3EF89099982977","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":19596,"discussion_content":"例如1个io要10秒，1个cpu要1秒， 1个线程执行io，另外R(10)个线程刚好执行完cpu计算，所以10秒内，10个cpu，1个io，刚好利用率为100%","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1569209612,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":1,"child_discussions":[{"author":{"id":1640973,"avatar":"https://static001.geekbang.org/account/avatar/00/19/0a/0d/7bac5bcb.jpg","nickname":"maybe","note":"","ucode":"2C0D1D26853DB3","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1179952,"avatar":"https://static001.geekbang.org/account/avatar/00/12/01/30/cb3a729e.jpg","nickname":"XHH","note":"","ucode":"3EF89099982977","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":376110,"discussion_content":"感觉单核的话，设置这么多线程也没啥用啊，为什么不是两个线程，一个io操作10s，一个线程一直执行cpu操作","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1621956795,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":19596,"ip_address":""},"score":376110,"extra":""}]}]},{"had_liked":false,"id":78668,"user_name":"曾轼麟","can_delete":false,"product_type":"c1","uid":1451391,"ip_address":"","ucode":"D418371AC11270","user_header":"https://static001.geekbang.org/account/avatar/00/16/25/7f/473d5a77.jpg","comment_is_top":false,"comment_ctime":1553215610,"is_pvip":false,"replies":[{"id":"28639","content":"都按照逻辑核数设置，最终还是要根据压测数据调整的<br>","user_name":"作者回复","comment_id":78668,"uid":"1269969","ip_address":"","utype":1,"ctime":1553256813,"user_name_real":"王宝令"}],"discussion_count":1,"race_medal":0,"score":"14438117498","product_id":100023901,"comment_content":"老师我记得csapp那本书中说过，x86架构的CPU是拥有超程技术的，也就是一个核可以当成两个使用，AMD的却没有，不知道您的这个计算公式是否适合其它厂商的CPU呢？","like_count":3,"discussions":[{"author":{"id":1269969,"avatar":"https://static001.geekbang.org/account/avatar/00/13/60/d1/8efa89ab.jpg","nickname":"王宝令","note":"","ucode":"4FE19F5BC32FCA","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":444185,"discussion_content":"都按照逻辑核数设置，最终还是要根据压测数据调整的\n","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1553256813,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":78497,"user_name":"狂战俄洛伊","can_delete":false,"product_type":"c1","uid":1213269,"ip_address":"","ucode":"F6EACA321E6180","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTJUzv6S9wroydkGP6m3OsQ8QuI4jAibv21tNkm7KVGPffJibj8Y29yIdKl4qkDGd3iaGJCSGVarfxoibQ/132","comment_is_top":false,"comment_ctime":1553160584,"is_pvip":false,"replies":[{"id":"28574","content":"每台机器算自己的，发挥出每台机器的硬件能力就可以了<br>","user_name":"作者回复","user_name_real":"王宝令","uid":"1269969","ctime":1553172101,"ip_address":"","comment_id":78497,"utype":1}],"discussion_count":1,"race_medal":0,"score":"14438062472","product_id":100023901,"comment_content":"对于这个思考题，我觉得是比较合理。<br>因为经验是经过大量实践的结果，是符合大多数的情况，而且是一种快速估计的方法。<br>我看留言区里很多都说不合理，并且给出了例子。我觉得他们说的也没错，只是举出了经验没覆盖到的情况而已。<br>这里我还有个疑问，这篇文章中都是在讲一台机器工作的情况下。我想问的是如果是在一个集群里，这个线程数又该怎么计算？<br>例如有三台机器构成一个集群，这三台机器的cpu分别是8核，4核，2核。就打算是cpu密集型，这时候该怎么计算线程数？","like_count":3,"discussions":[{"author":{"id":1269969,"avatar":"https://static001.geekbang.org/account/avatar/00/13/60/d1/8efa89ab.jpg","nickname":"王宝令","note":"","ucode":"4FE19F5BC32FCA","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":444121,"discussion_content":"每台机器算自己的，发挥出每台机器的硬件能力就可以了\n","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1553172101,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":225247,"user_name":"漂泊者及其影子","can_delete":false,"product_type":"c1","uid":1119979,"ip_address":"","ucode":"13FE760FE8B111","user_header":"https://static001.geekbang.org/account/avatar/00/11/16/eb/30864e40.jpg","comment_is_top":false,"comment_ctime":1591694175,"is_pvip":false,"replies":[{"id":"83307","content":"不是这样的，要看io模型是啥样的，nio和bio是不同的。实际场景和实验室场景差异太大，公式只能用来指导调优","user_name":"作者回复","user_name_real":"王宝令","uid":"1269969","ctime":1591972222,"ip_address":"","comment_id":225247,"utype":1}],"discussion_count":1,"race_medal":0,"score":"10181628767","product_id":100023901,"comment_content":"对于网关这种服务，io时长和cpu时长的比例可能是99:1 ,那一个8核的网关服务的线程数是配置成8*（99+1）=800？","like_count":2,"discussions":[{"author":{"id":1269969,"avatar":"https://static001.geekbang.org/account/avatar/00/13/60/d1/8efa89ab.jpg","nickname":"王宝令","note":"","ucode":"4FE19F5BC32FCA","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":497785,"discussion_content":"不是这样的，要看io模型是啥样的，nio和bio是不同的。实际场景和实验室场景差异太大，公式只能用来指导调优","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1591972222,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":210093,"user_name":"JSON","can_delete":false,"product_type":"c1","uid":1084199,"ip_address":"","ucode":"0F25EB99CCA9C9","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/EmXS3Kmby5usibRic8rPzFoVhk2mGmQHm5pvsuF9e5dILLffm1VqZEK6CnLuamBhxdrFdyR211zXqmRPZ3aQiaygw/132","comment_is_top":false,"comment_ctime":1587685848,"is_pvip":false,"replies":[{"id":"78693","content":"复杂场景只能简化成理想模型后再用公式，如果简化不出来，就只能靠压测了","user_name":"作者回复","user_name_real":"王宝令","uid":"1269969","ctime":1588032825,"ip_address":"","comment_id":210093,"utype":1}],"discussion_count":1,"race_medal":0,"score":"10177620440","product_id":100023901,"comment_content":"一个java实例应用中可以使用多个TreadPoolExcutor线程池吗？以避免不同的业务都阻塞在一个线程池中，那么有多个线程池的话，每个TreadPoolExcutor参数中的核心线程和最大线程，该如何设置呢？<br>还有就是一个java的应用实例，dump 当前的jvm日志，都会有上千的线程在运行，并不满足2*CPU核数，这个对性能有影响吗？","like_count":2,"discussions":[{"author":{"id":1269969,"avatar":"https://static001.geekbang.org/account/avatar/00/13/60/d1/8efa89ab.jpg","nickname":"王宝令","note":"","ucode":"4FE19F5BC32FCA","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":492943,"discussion_content":"复杂场景只能简化成理想模型后再用公式，如果简化不出来，就只能靠压测了","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1588032825,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":136585,"user_name":"水滴s","can_delete":false,"product_type":"c1","uid":1264431,"ip_address":"","ucode":"1C684514B54B6F","user_header":"https://static001.geekbang.org/account/avatar/00/13/4b/2f/2f73fd52.jpg","comment_is_top":false,"comment_ctime":1569476038,"is_pvip":false,"replies":[{"id":"52394","content":"io可以排队，但是没办法并行","user_name":"作者回复","user_name_real":"王宝令","uid":"1269969","ctime":1569494922,"ip_address":"","comment_id":136585,"utype":1}],"discussion_count":1,"race_medal":0,"score":"10159410630","product_id":100023901,"comment_content":"老师，您好 问下IO操作可以并行进行吗？按照上述这个公式：最佳线程数 =1 +（I&#47;O 耗时 &#47; CPU 耗时），假设I&#47;O耗时&#47;CPU耗时是4，最佳线程数是5，那么在运行的过程中，CPU利用率理论上的确是100%，但是会存在某一个时间段同时进行多个IO操作？","like_count":2,"discussions":[{"author":{"id":1269969,"avatar":"https://static001.geekbang.org/account/avatar/00/13/60/d1/8efa89ab.jpg","nickname":"王宝令","note":"","ucode":"4FE19F5BC32FCA","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":468711,"discussion_content":"io可以排队，但是没办法并行","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1569494922,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":135952,"user_name":"dingdongfm","can_delete":false,"product_type":"c1","uid":1564213,"ip_address":"","ucode":"7D17D2BC392A66","user_header":"","comment_is_top":false,"comment_ctime":1569313801,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"10159248393","product_id":100023901,"comment_content":"非常赞的一篇分享，可以结合https:&#47;&#47;time.geekbang.org&#47;column&#47;article&#47;40742看。虽然两篇文章描述不太一致，但是不影响理解消化。","like_count":2},{"had_liked":false,"id":78711,"user_name":"机遇号","can_delete":false,"product_type":"c1","uid":1105053,"ip_address":"","ucode":"A2940DE77BCAEA","user_header":"https://static001.geekbang.org/account/avatar/00/10/dc/9d/e20b37d7.jpg","comment_is_top":false,"comment_ctime":1553222537,"is_pvip":false,"replies":[{"id":"28636","content":"apm工具可以精确到方法耗时，io相关的方法一般是知道的","user_name":"作者回复","user_name_real":"王宝令","uid":"1269969","ctime":1553256491,"ip_address":"","comment_id":78711,"utype":1}],"discussion_count":1,"race_medal":0,"score":"10143157129","product_id":100023901,"comment_content":"实际项目中怎么确定IO耗时、CPU耗时？","like_count":2,"discussions":[{"author":{"id":1269969,"avatar":"https://static001.geekbang.org/account/avatar/00/13/60/d1/8efa89ab.jpg","nickname":"王宝令","note":"","ucode":"4FE19F5BC32FCA","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":444201,"discussion_content":"apm工具可以精确到方法耗时，io相关的方法一般是知道的","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1553256491,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":325759,"user_name":"凯文小猪","can_delete":false,"product_type":"c1","uid":1980201,"ip_address":"","ucode":"36D8AD0229547F","user_header":"https://static001.geekbang.org/account/avatar/00/1e/37/29/b3af57a7.jpg","comment_is_top":false,"comment_ctime":1639119356,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"5934086652","product_id":100023901,"comment_content":"首先说下结论：思考题的公式 2 * N +1 在大多数场景下都是不适用的。<br>比方说 我现在从qps500飙升到qps1000 显然在不考虑bug的情况下 ，吞吐量、时延都是要下降的。因为web容器默认是每连接每线程 那么这些连接或是请求如果无法吸收 那么对客户端来说就是超时了。<br>故此时线程数显然不够用。<br><br>那么老师的给出的公式是否可行？<br>我觉得在理想或是实验室场景下 可行。这里有个前提就是io切换与cpu切换一定是严格切割干净的 但事实上因为现代指令集优化（如乱序执行） 两者在微观上并不等价。<br><br>很多同学问到cpu 耗时 io耗时怎么采集？io耗时比较简单就不说了 cpu耗时通常需要工具辅助 我自己使用jmeter ，刚才看了下skywalking8.1并没有提供 可能是我一时没找到把。<br><br>最后谈一下我个人的计算公式 抛砖引玉<br>qps * （99SLA + 预留空间）<br><br>公式来自于：hystrix文档<br>requests per second at peak when healthy × 99th percentile latency in seconds + some breathing room<br><br>每秒能处理1000个请求，99%的请求响应时间是30ms，那么公式是：<br>1000 *（0.030+0.012）","like_count":1},{"had_liked":false,"id":291843,"user_name":"纽扣","can_delete":false,"product_type":"c1","uid":1313813,"ip_address":"","ucode":"870A1E731E1C02","user_header":"https://static001.geekbang.org/account/avatar/00/14/0c/15/ad1d202c.jpg","comment_is_top":false,"comment_ctime":1620548633,"is_pvip":false,"replies":[{"id":"106779","content":"很多IO操作不支持并行，比如顺序地写海量日志，这时候多个线程写反而更慢","user_name":"作者回复","user_name_real":"王宝令","uid":"1269969","ctime":1621901643,"ip_address":"","comment_id":291843,"utype":1}],"discussion_count":2,"race_medal":0,"score":"5915515929","product_id":100023901,"comment_content":"“我们令 R=I&#47;O 耗时 &#47; CPU 耗时，综合上图，可以这样理解：当线程 A 执行 IO 操作时，另外 R 个线程正好执行完各自的 CPU 计算。这样 CPU 的利用率就达到了 100%。”<br><br>老师您好，请问：如果 IO耗时 : CPU耗时=R : 1，说明IO更加耗时，那不应该R条线程去处理IO，一条处理CPU更快吗？为什么反过来了呢？","like_count":1,"discussions":[{"author":{"id":1269969,"avatar":"https://static001.geekbang.org/account/avatar/00/13/60/d1/8efa89ab.jpg","nickname":"王宝令","note":"","ucode":"4FE19F5BC32FCA","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":519582,"discussion_content":"很多IO操作不支持并行，比如顺序地写海量日志，这时候多个线程写反而更慢","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1621901643,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1313813,"avatar":"https://static001.geekbang.org/account/avatar/00/14/0c/15/ad1d202c.jpg","nickname":"纽扣","note":"","ucode":"870A1E731E1C02","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":376083,"discussion_content":"原来如此，谢谢老师回复！","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1621952063,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":164693,"user_name":"业余爱好者","can_delete":false,"product_type":"c1","uid":1482915,"ip_address":"","ucode":"A890935A982988","user_header":"https://static001.geekbang.org/account/avatar/00/16/a0/a3/8da99bb0.jpg","comment_is_top":false,"comment_ctime":1577073394,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"5872040690","product_id":100023901,"comment_content":"之前总是纠结于，本文为什么不考虑计算机上还有其它进程与Java共享计算机资源这一因素?后来醒悟，这不就是操作系统的功劳吗。它为进程提供一个抽象，让进程觉得自己是在独占计算机资源。这是一种对问题的简化，不然问题就太复杂了，无法分析。<br><br>跟阿姆达尔定律一样是个经验公式:<br>线程数=CPU核数*（1+io与CPU耗时比）<br>","like_count":1},{"had_liked":false,"id":127623,"user_name":"探索无止境","can_delete":false,"product_type":"c1","uid":1044178,"ip_address":"","ucode":"91D2A9907DFA79","user_header":"https://static001.geekbang.org/account/avatar/00/0f/ee/d2/7024431c.jpg","comment_is_top":false,"comment_ctime":1566750357,"is_pvip":false,"replies":[{"id":"47367","content":"会有开销，在不能将线程绑定到具体CPU的场景里，我觉得还是可以接受的，我们的程序很难写的一点阻塞都没有。实际场景还是要看压测结果","user_name":"作者回复","user_name_real":"王宝令","uid":"1269969","ctime":1566794715,"ip_address":"","comment_id":127623,"utype":1}],"discussion_count":1,"race_medal":0,"score":"5861717653","product_id":100023901,"comment_content":"老师你好，在CPU密集型的最佳线程数公式为：CPU核数+1，但是如果线程没有发生阻塞，那么多出来这个1不就会造成上下文切换的开销了吗？","like_count":1,"discussions":[{"author":{"id":1269969,"avatar":"https://static001.geekbang.org/account/avatar/00/13/60/d1/8efa89ab.jpg","nickname":"王宝令","note":"","ucode":"4FE19F5BC32FCA","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":464581,"discussion_content":"会有开销，在不能将线程绑定到具体CPU的场景里，我觉得还是可以接受的，我们的程序很难写的一点阻塞都没有。实际场景还是要看压测结果","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1566794715,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":126775,"user_name":"静水流深","can_delete":false,"product_type":"c1","uid":1339724,"ip_address":"","ucode":"644F05EFBD2E7B","user_header":"https://static001.geekbang.org/account/avatar/00/14/71/4c/2cefec07.jpg","comment_is_top":false,"comment_ctime":1566470716,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"5861438012","product_id":100023901,"comment_content":"感觉，有时候还得取决于容器和算法。","like_count":1},{"had_liked":false,"id":113893,"user_name":"邢宇超","can_delete":false,"product_type":"c1","uid":1105246,"ip_address":"","ucode":"3113F55E60ADE9","user_header":"https://static001.geekbang.org/account/avatar/00/10/dd/5e/ddbdde5a.jpg","comment_is_top":false,"comment_ctime":1563180727,"is_pvip":false,"replies":[{"id":"41574","content":"程序计数器里是下一条指令的地址，指令在代码段里，你可以找本汇编的书看看","user_name":"作者回复","user_name_real":"王宝令","uid":"1269969","ctime":1563234398,"ip_address":"","comment_id":113893,"utype":1}],"discussion_count":1,"race_medal":0,"score":"5858148023","product_id":100023901,"comment_content":"老师你说 堆栈寄存器指向栈顶内存地址 <br>我记得程序计数器是干这事的  <br>堆栈寄存器和程序计数器有关系不 老师","like_count":1,"discussions":[{"author":{"id":1269969,"avatar":"https://static001.geekbang.org/account/avatar/00/13/60/d1/8efa89ab.jpg","nickname":"王宝令","note":"","ucode":"4FE19F5BC32FCA","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":458424,"discussion_content":"程序计数器里是下一条指令的地址，指令在代码段里，你可以找本汇编的书看看","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1563234398,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":100905,"user_name":"Hour","can_delete":false,"product_type":"c1","uid":1448748,"ip_address":"","ucode":"AA1045ACABC0BB","user_header":"https://static001.geekbang.org/account/avatar/00/16/1b/2c/6b3c0911.jpg","comment_is_top":false,"comment_ctime":1559685157,"is_pvip":false,"replies":[{"id":"36464","content":"阻塞的线程会释放CPU使用权，多画两个周期就明白了","user_name":"作者回复","user_name_real":"王宝令","uid":"1269969","ctime":1559741596,"ip_address":"","comment_id":100905,"utype":1}],"discussion_count":1,"race_medal":0,"score":"5854652453","product_id":100023901,"comment_content":"老师好，再次回顾这片文章，发现个问题：<br>任务切换是如何控制的？这些线程执行的任务都是相同的，比如都是先从数据库中获取数据(IO操作)，再从进行分析(CPU操作)。这个顺序不可逆的。<br>那CPU是如何准确的切换，让线程A执行IO操作的同时，线程B和线程C执行CPU操作呢？","like_count":1,"discussions":[{"author":{"id":1269969,"avatar":"https://static001.geekbang.org/account/avatar/00/13/60/d1/8efa89ab.jpg","nickname":"王宝令","note":"","ucode":"4FE19F5BC32FCA","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":452730,"discussion_content":"阻塞的线程会释放CPU使用权，多画两个周期就明白了","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1559741596,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":78733,"user_name":"空知","can_delete":false,"product_type":"c1","uid":1013283,"ip_address":"","ucode":"C448E98238DD36","user_header":"https://static001.geekbang.org/account/avatar/00/0f/76/23/31e5e984.jpg","comment_is_top":false,"comment_ctime":1553225758,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"5848193054","product_id":100023901,"comment_content":"刚好看了这个文章 https:&#47;&#47;github.com&#47;brettwooldridge&#47;HikariCP&#47;wiki&#47;About-Pool-Sizing 里面就有讲 connections = ((core_count * 2) + effective_spindle_count)","like_count":1},{"had_liked":false,"id":78389,"user_name":"你只是看起来很努力","can_delete":false,"product_type":"c1","uid":1449173,"ip_address":"","ucode":"F9340A560D347C","user_header":"https://static001.geekbang.org/account/avatar/00/16/1c/d5/248a9c38.jpg","comment_is_top":false,"comment_ctime":1553137967,"is_pvip":false,"replies":[{"id":"28572","content":"工作中我都是用逻辑核数","user_name":"作者回复","user_name_real":"王宝令","uid":"1269969","ctime":1553171104,"ip_address":"","comment_id":78389,"utype":1}],"discussion_count":2,"race_medal":0,"score":"5848105263","product_id":100023901,"comment_content":"假设4核，i&#47;o耗时：cpu耗时=8:3<br>按经验来算：2*4+1=9<br>按工式来算：4（1+8&#47;3）=15<br>差距有点大<br>老师，这个线程数与cpu线程数没关系么，比如说4核8线程的cpu与4核的cpu最佳线程数是一样的？","like_count":1,"discussions":[{"author":{"id":1269969,"avatar":"https://static001.geekbang.org/account/avatar/00/13/60/d1/8efa89ab.jpg","nickname":"王宝令","note":"","ucode":"4FE19F5BC32FCA","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":444076,"discussion_content":"工作中我都是用逻辑核数","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1553171104,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":1,"child_discussions":[{"author":{"id":2289740,"avatar":"https://static001.geekbang.org/account/avatar/00/22/f0/4c/791d0f5e.jpg","nickname":"Geek_009527","note":"","ucode":"C57BD66CCEB3A9","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":1269969,"avatar":"https://static001.geekbang.org/account/avatar/00/13/60/d1/8efa89ab.jpg","nickname":"王宝令","note":"","ucode":"4FE19F5BC32FCA","race_medal":0,"user_type":2,"is_pvip":false},"discussion":{"id":581607,"discussion_content":"什么是逻辑核数，王老师算出来的结果是多少？","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1658885464,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":444076,"ip_address":""},"score":581607,"extra":""}]}]},{"had_liked":false,"id":78360,"user_name":"IMSolar","can_delete":false,"product_type":"c1","uid":1155392,"ip_address":"","ucode":"1F57A438DFAF68","user_header":"https://static001.geekbang.org/account/avatar/00/11/a1/40/2c4ba425.jpg","comment_is_top":false,"comment_ctime":1553133341,"is_pvip":false,"replies":[{"id":"28658","content":"你放长远一点看，第一轮CPU等待，第二轮自动就错开了。","user_name":"作者回复","user_name_real":"王宝令","uid":"1269969","ctime":1553263287,"ip_address":"","comment_id":78360,"utype":1}],"discussion_count":1,"race_medal":0,"score":"5848100637","product_id":100023901,"comment_content":"“最佳线程数 =1 +（I&#47;O 耗时 &#47; CPU 耗时） <br>我们令 R=I&#47;O 耗时 &#47; CPU 耗时，综合上图，可以这样理解：当线程 A 执行 IO 操作时，另外 R 个线程正好执行完各自的 CPU 计算。这样 CPU 的利用率就达到了100%。”<br><br>假设线程A和线程B同时开始IO操作，而且线程C开始CPU计算，当线程C计算结束的时候，线程A和线程B的IO操作还没有结束，这样的话50%的CPU是不是被浪费了？是不是还差一条线程接上CPU呢？","like_count":1,"discussions":[{"author":{"id":1269969,"avatar":"https://static001.geekbang.org/account/avatar/00/13/60/d1/8efa89ab.jpg","nickname":"王宝令","note":"","ucode":"4FE19F5BC32FCA","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":444063,"discussion_content":"你放长远一点看，第一轮CPU等待，第二轮自动就错开了。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1553263287,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":78288,"user_name":"渔夫","can_delete":false,"product_type":"c1","uid":1019289,"ip_address":"","ucode":"6BF08FD8923E45","user_header":"https://static001.geekbang.org/account/avatar/00/0f/8d/99/f886543d.jpg","comment_is_top":false,"comment_ctime":1553126585,"is_pvip":false,"replies":[{"id":"28568","content":"经验值是个很好的开始，是不是合适还得压测<br>","user_name":"作者回复","user_name_real":"王宝令","uid":"1269969","ctime":1553170103,"ip_address":"","comment_id":78288,"utype":1}],"discussion_count":1,"race_medal":0,"score":"5848093881","product_id":100023901,"comment_content":"对于I&#47;O密集型应用，工程上一般会区分I&#47;O请求响应线程和工作线程的话，而前者的线程池大小——按照Hikari推荐的——比较好数量是: 核数*2+1，因为前者可以进行I&#47;O多路复用，请问老师这个事情是否是这么理解的？","like_count":1,"discussions":[{"author":{"id":1269969,"avatar":"https://static001.geekbang.org/account/avatar/00/13/60/d1/8efa89ab.jpg","nickname":"王宝令","note":"","ucode":"4FE19F5BC32FCA","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":444035,"discussion_content":"经验值是个很好的开始，是不是合适还得压测\n","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1553170103,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":78279,"user_name":"zhangtnty","can_delete":false,"product_type":"c1","uid":1180553,"ip_address":"","ucode":"3C9A14BD7CF432","user_header":"https://static001.geekbang.org/account/avatar/00/12/03/89/e1621a01.jpg","comment_is_top":false,"comment_ctime":1553125461,"is_pvip":false,"replies":[{"id":"28682","content":"调用三方接口 如果是rpc，并且是bio，那么rpc完全看成io就行了","user_name":"作者回复","user_name_real":"王宝令","uid":"1269969","ctime":1553268646,"ip_address":"","comment_id":78279,"utype":1}],"discussion_count":1,"race_medal":0,"score":"5848092757","product_id":100023901,"comment_content":"王老师，我对问题的理解：没有考虑各自耗时情况。如果核数越多，I&#47;O耗时越大，会造成CPU多核都在I&#47;O中执行，影响了延时和吞吐量。<br>另外想请教个问题：近期工作需要调用三方接口，需要组织参数，调用，响应处理。如果考虑2种耗时来设置多线程数量，I&#47;O耗时和CPU耗时该如何划分呢？辛苦老师。","like_count":1,"discussions":[{"author":{"id":1269969,"avatar":"https://static001.geekbang.org/account/avatar/00/13/60/d1/8efa89ab.jpg","nickname":"王宝令","note":"","ucode":"4FE19F5BC32FCA","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":444030,"discussion_content":"调用三方接口 如果是rpc，并且是bio，那么rpc完全看成io就行了","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1553268646,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":352440,"user_name":"NARUTO","can_delete":false,"product_type":"c1","uid":1234420,"ip_address":"北京","ucode":"D4ECADEBAFD4FF","user_header":"https://static001.geekbang.org/account/avatar/00/12/d5/f4/ce6acfc0.jpg","comment_is_top":false,"comment_ctime":1658672138,"is_pvip":false,"replies":[{"id":"130864","content":"公式是用来说明原理的，工作中定性使用，非定量使用","user_name":"作者回复","user_name_real":"编辑","uid":"1269969","ctime":1665838109,"ip_address":"北京","comment_id":352440,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1658672138","product_id":100023901,"comment_content":"怎么知道IO耗时与CPU耗时的比值是多少？否则这公式也没法套用","like_count":0,"discussions":[{"author":{"id":1269969,"avatar":"https://static001.geekbang.org/account/avatar/00/13/60/d1/8efa89ab.jpg","nickname":"王宝令","note":"","ucode":"4FE19F5BC32FCA","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":590528,"discussion_content":"公式是用来说明原理的，工作中定性使用，非定量使用","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1665838109,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"北京"},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":349204,"user_name":"沧海一粟","can_delete":false,"product_type":"c1","uid":1482590,"ip_address":"","ucode":"146961635959E7","user_header":"https://static001.geekbang.org/account/avatar/00/16/9f/5e/479f33a6.jpg","comment_is_top":false,"comment_ctime":1655797701,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1655797701","product_id":100023901,"comment_content":"有个疑问，估算线程数的方法前提是 cpu同一时间只能执行一个任务，而IO在多线程下是可以并行的，请问老师IO并行时难道不受什么制约吗？","like_count":0},{"had_liked":false,"id":345795,"user_name":"学习学个屁","can_delete":false,"product_type":"c1","uid":1049017,"ip_address":"","ucode":"DF2D61E6FB2FCE","user_header":"https://static001.geekbang.org/account/avatar/00/10/01/b9/73435279.jpg","comment_is_top":false,"comment_ctime":1652600794,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1652600794","product_id":100023901,"comment_content":"理论上是io密集型 2n+1 实际情况需要压测，动态调整达到性能最高的一个值。","like_count":0},{"had_liked":false,"id":341758,"user_name":"努力努力再努力","can_delete":false,"product_type":"c1","uid":1493907,"ip_address":"","ucode":"0C6EEA28FCE8C7","user_header":"https://static001.geekbang.org/account/avatar/00/16/cb/93/4adea49a.jpg","comment_is_top":false,"comment_ctime":1649823459,"is_pvip":true,"replies":[{"id":"124899","content":"web服务器是io密集型","user_name":"作者回复","user_name_real":"编辑","uid":"1269969","ctime":1649911938,"ip_address":"","comment_id":341758,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1649823459","product_id":100023901,"comment_content":"有个疑问，如果是cpu密集型 4核心的话，就设置4个线程吗，tomcat正常运行下不是都200个线程最大吗😥😥那是不是得将tomcat的线程改成4才对","like_count":0,"discussions":[{"author":{"id":1269969,"avatar":"https://static001.geekbang.org/account/avatar/00/13/60/d1/8efa89ab.jpg","nickname":"王宝令","note":"","ucode":"4FE19F5BC32FCA","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":562938,"discussion_content":"web服务器是io密集型","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1649911938,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":315177,"user_name":"官宝儿","can_delete":false,"product_type":"c1","uid":2110827,"ip_address":"","ucode":"03B4312475A984","user_header":"https://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTI5eicXFWltiaF9ibsEh2nNC80OYoHibhhE0X1hPHZ5KuAtY4Yxp5dQ4LsciaDxUHFBPlJM7kgQwkspzsQ/132","comment_is_top":false,"comment_ctime":1633741774,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1633741774","product_id":100023901,"comment_content":"课后问题：不合理的，如果实际业务场景下，如果出现cpu io比很高，cpu很可能达不到100%利用率","like_count":0},{"had_liked":false,"id":312468,"user_name":"旅途","can_delete":false,"product_type":"c1","uid":1212902,"ip_address":"","ucode":"5022477E8E9441","user_header":"https://static001.geekbang.org/account/avatar/00/12/81/e6/6cafed37.jpg","comment_is_top":false,"comment_ctime":1631829955,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1631829955","product_id":100023901,"comment_content":"这章看第三遍了 太牛逼了","like_count":0},{"had_liked":false,"id":311289,"user_name":"prader26","can_delete":false,"product_type":"c1","uid":1433707,"ip_address":"","ucode":"5EFFFC374ADECE","user_header":"https://static001.geekbang.org/account/avatar/00/15/e0/6b/f61d7466.jpg","comment_is_top":false,"comment_ctime":1631156533,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1631156533","product_id":100023901,"comment_content":"线程数： <br>cpu 计算密集型，在多核的情况下等于，核数加一。 <br>io 计算密集型， 最佳线程数 =CPU 核数 * [ 1 +（I&#47;O 耗时 &#47; CPU 耗时）]<br>     ","like_count":0},{"had_liked":false,"id":311131,"user_name":"到道可道","can_delete":false,"product_type":"c1","uid":1031181,"ip_address":"","ucode":"12B94B6C26BE0D","user_header":"https://static001.geekbang.org/account/avatar/00/0f/bc/0d/00424e81.jpg","comment_is_top":false,"comment_ctime":1631083304,"is_pvip":true,"replies":[{"id":"112933","content":"👍🏻","user_name":"作者回复","user_name_real":"王宝令","uid":"1269969","ctime":1631431337,"ip_address":"","comment_id":311131,"utype":1}],"discussion_count":1,"race_medal":1,"score":"1631083304","product_id":100023901,"comment_content":"个人认为这个经验值有一定的合理性，如果是程序首次运行，可以将线程数设置为这个经验值，以得到比较好的运行效果；不过运行一段时间后，能够根据工具（如apm等）分析得出I&#47;O耗时&#47;CPU耗时的比值，则应该采用更优化的线程数设置（最佳线程数 =CPU 核数 * [ 1 +（I&#47;O 耗时 &#47; CPU 耗时）]）。","like_count":0,"discussions":[{"author":{"id":1269969,"avatar":"https://static001.geekbang.org/account/avatar/00/13/60/d1/8efa89ab.jpg","nickname":"王宝令","note":"","ucode":"4FE19F5BC32FCA","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":526485,"discussion_content":"👍🏻","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1631431337,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":296803,"user_name":"Cc°°","can_delete":false,"product_type":"c1","uid":1149143,"ip_address":"","ucode":"6C88E8D2C4622D","user_header":"https://static001.geekbang.org/account/avatar/00/11/88/d7/43cf7b60.jpg","comment_is_top":false,"comment_ctime":1623165108,"is_pvip":true,"discussion_count":0,"race_medal":0,"score":"1623165108","product_id":100023901,"comment_content":"对于io密集型的最佳线程数的公式中为什么会出现：io时间&#47;cpu时间，这个比值？这个比值加1的根本含义就是：需要多少个线程可以把cpu利用率用到100%！","like_count":0},{"had_liked":false,"id":285247,"user_name":"时光守护者-基兰","can_delete":false,"product_type":"c1","uid":1554995,"ip_address":"","ucode":"F0B0887B1979D2","user_header":"https://static001.geekbang.org/account/avatar/00/17/ba/33/2d83d174.jpg","comment_is_top":false,"comment_ctime":1616684330,"is_pvip":false,"replies":[{"id":"103594","content":"Cpu没活可干了","user_name":"作者回复","user_name_real":"王宝令","uid":"1269969","ctime":1616822042,"ip_address":"","comment_id":285247,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1616684330","product_id":100023901,"comment_content":"老师为啥 io有瓶颈后，cpu使用率就上不去了？","like_count":0,"discussions":[{"author":{"id":1269969,"avatar":"https://static001.geekbang.org/account/avatar/00/13/60/d1/8efa89ab.jpg","nickname":"王宝令","note":"","ucode":"4FE19F5BC32FCA","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":517625,"discussion_content":"Cpu没活可干了","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1616822042,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":284635,"user_name":"Laughing","can_delete":false,"product_type":"c1","uid":1002134,"ip_address":"","ucode":"F68F1E000CA800","user_header":"https://static001.geekbang.org/account/avatar/00/0f/4a/96/99466a06.jpg","comment_is_top":false,"comment_ctime":1616397638,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1616397638","product_id":100023901,"comment_content":"经验值只是作为一个同环境的参考，但是具体的还是要看实际场景。针对线程所做的任务进行优化，尽量缩小延迟增大吞吐才是关键。优化也无非就是空间换时间，时间换空间。所以感觉这两件事需要结合着来优化才行。","like_count":0},{"had_liked":false,"id":279282,"user_name":"沙可","can_delete":false,"product_type":"c1","uid":1284820,"ip_address":"","ucode":"1498D221133DD8","user_header":"https://static001.geekbang.org/account/avatar/00/13/9a/d4/8632497b.jpg","comment_is_top":false,"comment_ctime":1613706015,"is_pvip":false,"replies":[{"id":"102076","content":"多个服务而且特性不知，没法考虑，压测也不靠谱","user_name":"作者回复","user_name_real":"王宝令","uid":"1269969","ctime":1614599234,"ip_address":"","comment_id":279282,"utype":1}],"discussion_count":3,"race_medal":0,"score":"1613706015","product_id":100023901,"comment_content":"老师，像一台服务器上一般都会部署多个服务，这种情况下，设置线程池大小要考虑其他服务吧。还是说其实还是通过压测并且通过监控指标来配置？","like_count":0,"discussions":[{"author":{"id":1269969,"avatar":"https://static001.geekbang.org/account/avatar/00/13/60/d1/8efa89ab.jpg","nickname":"王宝令","note":"","ucode":"4FE19F5BC32FCA","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":515690,"discussion_content":"多个服务而且特性不知，没法考虑，压测也不靠谱","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1614599234,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":2264859,"avatar":"","nickname":"Geek_550f2d","note":"","ucode":"BAEB866191EBDA","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":370124,"discussion_content":"外国有大佬用程序写了计算公式，填入期望指标和当前系统的一些数据，直接给优化方案","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1619289416,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":1,"child_discussions":[{"author":{"id":1649057,"avatar":"https://static001.geekbang.org/account/avatar/00/19/29/a1/41607383.jpg","nickname":"hello","note":"","ucode":"4F42DAA5DB5C38","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":2264859,"avatar":"","nickname":"Geek_550f2d","note":"","ucode":"BAEB866191EBDA","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":375554,"discussion_content":"老哥，有链接吗？","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1621741468,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":370124,"ip_address":""},"score":375554,"extra":""}]}]},{"had_liked":false,"id":249636,"user_name":"maybe","can_delete":false,"product_type":"c1","uid":1475528,"ip_address":"","ucode":"93D160F617E750","user_header":"https://static001.geekbang.org/account/avatar/00/16/83/c8/5ce842f6.jpg","comment_is_top":false,"comment_ctime":1600736819,"is_pvip":false,"discussion_count":0,"race_medal":4,"score":"1600736819","product_id":100023901,"comment_content":"经验值是个好的开端：1、IO密集型 线程数=cpu核数*（1+io&#47;cpu耗是比）。2、cpu密集型 线程数=cpu核数+1","like_count":0},{"had_liked":false,"id":236421,"user_name":"Java垒墙工程师","can_delete":false,"product_type":"c1","uid":1937062,"ip_address":"","ucode":"E76AE44A9C76AE","user_header":"https://static001.geekbang.org/account/avatar/00/1d/8e/a6/c3286b61.jpg","comment_is_top":false,"comment_ctime":1595411428,"is_pvip":false,"replies":[{"id":"94100","content":"Io过饱和会引起io时间变长，线程数最终还是要压测。理论知识给一个指导方向而已","user_name":"作者回复","user_name_real":"王宝令","uid":"1269969","ctime":1604407439,"ip_address":"","comment_id":236421,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1595411428","product_id":100023901,"comment_content":"IO密集型设置多少线程数比较合适问题？对于I&#47;O密集型的计算，我们只考虑CPU利用率，I&#47;O过饱和会不会引起I&#47;O时间变得更长？","like_count":0,"discussions":[{"author":{"id":1269969,"avatar":"https://static001.geekbang.org/account/avatar/00/13/60/d1/8efa89ab.jpg","nickname":"王宝令","note":"","ucode":"4FE19F5BC32FCA","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":502049,"discussion_content":"Io过饱和会引起io时间变长，线程数最终还是要压测。理论知识给一个指导方向而已","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1604407439,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":235579,"user_name":"数学汤家凤","can_delete":false,"product_type":"c1","uid":2029485,"ip_address":"","ucode":"DE84E777C384AD","user_header":"https://static001.geekbang.org/account/avatar/00/1e/f7/ad/4fd4d867.jpg","comment_is_top":false,"comment_ctime":1595100279,"is_pvip":true,"discussion_count":0,"race_medal":0,"score":"1595100279","product_id":100023901,"comment_content":"估算经供参考，实际以压测为主<br>颇有方便面封面的味道。。。","like_count":0},{"had_liked":false,"id":233232,"user_name":"幽林萌逐","can_delete":false,"product_type":"c1","uid":1520451,"ip_address":"","ucode":"E6D95EC891800F","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTLqrAA1j4Oyy6ibicNOicn8K0olrEjtLLanic8V0y9icia6cvCVRCiabOm5llC0WhzcSWvaI2fia75hYbvjrQ/132","comment_is_top":false,"comment_ctime":1594266101,"is_pvip":false,"replies":[{"id":"87345","content":"有消耗，协议解析也会消耗cpu","user_name":"作者回复","user_name_real":"王宝令","uid":"1269969","ctime":1595423200,"ip_address":"","comment_id":233232,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1594266101","product_id":100023901,"comment_content":"老师好，我请问一个问题,如果我的操作几乎没有cpu 消耗,打个比方我会 在我的业务中给两个不同的url发送get请求，这个是几乎没有cpu消耗的。","like_count":0,"discussions":[{"author":{"id":1269969,"avatar":"https://static001.geekbang.org/account/avatar/00/13/60/d1/8efa89ab.jpg","nickname":"王宝令","note":"","ucode":"4FE19F5BC32FCA","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":500950,"discussion_content":"有消耗，协议解析也会消耗cpu","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1595423200,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":225689,"user_name":"Sunrise","can_delete":false,"product_type":"c1","uid":1739817,"ip_address":"","ucode":"417AEE308CB6A7","user_header":"https://static001.geekbang.org/account/avatar/00/1a/8c/29/e4fcbbf3.jpg","comment_is_top":false,"comment_ctime":1591835356,"is_pvip":false,"replies":[{"id":"83306","content":"200个线程，在我的印象里不算大。验证只能在实际场景里，公式是理想场景","user_name":"作者回复","user_name_real":"王宝令","uid":"1269969","ctime":1591972013,"ip_address":"","comment_id":225689,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1591835356","product_id":100023901,"comment_content":"老师你好，我们在每个月有几天会执行一个数据量比较大的任务。这些任务会存在一些比较慢的 i&#47;o 操作，我自己试了下公式算出的最佳线程数是200，我想请问下这个线程数，这个线程数算出来这么大正常么？如果不正常应该怎么算才合适？","like_count":0,"discussions":[{"author":{"id":1269969,"avatar":"https://static001.geekbang.org/account/avatar/00/13/60/d1/8efa89ab.jpg","nickname":"王宝令","note":"","ucode":"4FE19F5BC32FCA","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":497947,"discussion_content":"200个线程，在我的印象里不算大。验证只能在实际场景里，公式是理想场景","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1591972013,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":222606,"user_name":"sky","can_delete":false,"product_type":"c1","uid":1008071,"ip_address":"","ucode":"9FE5F43055D3AB","user_header":"https://static001.geekbang.org/account/avatar/00/0f/61/c7/b64ac05e.jpg","comment_is_top":false,"comment_ctime":1590848211,"is_pvip":false,"discussion_count":1,"race_medal":0,"score":"1590848211","product_id":100023901,"comment_content":"举个我们的dubbo服务应用例子,对外提供了多个dubbo 服务, 有的dubbo 服务接口直接查完db做下adaptor成API BEAN 就返回了, 有的查完db 后做了一些运算再返回,对于不同的接口,IO耗时&#47;CPU耗时占比并不相同,那么提供服务的时候线程数量怎么设置,通常dubbo 都有自己的线程池对外提供服务,应用跑在TOMCAT下,tomcat 也有自己的线程池,这时候本文描述的线程数量设置为多少适合,是指对单个dubbo 服务 method么?如果是针对单个dubbo服务method的,那么多个服务之间按同样的方式计算出的线程数相互也受影响吧,求老师解答!!!","like_count":0,"discussions":[{"author":{"id":1215066,"avatar":"https://static001.geekbang.org/account/avatar/00/12/8a/5a/b67a82e3.jpg","nickname":"shen","note":"","ucode":"AE5737B0C7DC4F","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":276882,"discussion_content":"这种应该是平均值","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1590965621,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":215001,"user_name":"kimoti","can_delete":false,"product_type":"c1","uid":1897671,"ip_address":"","ucode":"0A78077408C2B1","user_header":"https://static001.geekbang.org/account/avatar/00/1c/f4/c7/037235c9.jpg","comment_is_top":false,"comment_ctime":1588866210,"is_pvip":false,"replies":[{"id":"79976","content":"是的","user_name":"作者回复","user_name_real":"王宝令","uid":"1269969","ctime":1589198108,"ip_address":"","comment_id":215001,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1588866210","product_id":100023901,"comment_content":"请问老师所谓IO操作就是不需要CPU也可以执行？","like_count":0,"discussions":[{"author":{"id":1269969,"avatar":"https://static001.geekbang.org/account/avatar/00/13/60/d1/8efa89ab.jpg","nickname":"王宝令","note":"","ucode":"4FE19F5BC32FCA","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":494269,"discussion_content":"是的","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1589198108,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":204076,"user_name":"忆水寒","can_delete":false,"product_type":"c1","uid":1147453,"ip_address":"","ucode":"E3F86BD8AA8903","user_header":"https://static001.geekbang.org/account/avatar/00/11/82/3d/356fc3d6.jpg","comment_is_top":false,"comment_ctime":1586330148,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1586330148","product_id":100023901,"comment_content":"网络收发其实是一个IO密集型操作，在Netty里面其实线程池默认的设置为CPU的2倍。其实很多时间还是看具体应用，如果纯网络收发，不涉及计算，这个2倍CPU+1 相对比较合理。如果里面也混合了CPU计算，则要具体观察，动态监控，然后调优参数。","like_count":0},{"had_liked":false,"id":196827,"user_name":"Geek_27a248","can_delete":false,"product_type":"c1","uid":1542778,"ip_address":"","ucode":"6AC3AC42E6EEC9","user_header":"https://static001.geekbang.org/account/avatar/00/17/8a/7a/54003392.jpg","comment_is_top":false,"comment_ctime":1585316145,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1585316145","product_id":100023901,"comment_content":"作为一个刚入门的小菜鸟，看完本章抓紧把代码线程池修改一下去","like_count":0},{"had_liked":false,"id":189494,"user_name":"mgs2002","can_delete":false,"product_type":"c1","uid":1812970,"ip_address":"","ucode":"F5931108BD509B","user_header":"https://static001.geekbang.org/account/avatar/00/1b/a9/ea/5bfce6c5.jpg","comment_is_top":false,"comment_ctime":1584522250,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1584522250","product_id":100023901,"comment_content":"线程池具体大小的设置还是要进行压力测试才行，不同类型业务可以设置不同线程池防止干扰","like_count":0},{"had_liked":false,"id":179898,"user_name":"Geek_bb89c3","can_delete":false,"product_type":"c1","uid":1331828,"ip_address":"","ucode":"0F97B5B0F2DDD6","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/IZKGetBZDuMEa2VwwtesTELvLORIyV749ItgfAqNPv30n4zEv71wuGNr1aNVIVltG0icvH53DHDuqPuzNpiauWAg/132","comment_is_top":false,"comment_ctime":1582119439,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1582119439","product_id":100023901,"comment_content":"这里的一个公式是（cpu% + 非cpu%） = 100%。如果只有一个线程。这个时候cpu的使用率只有cpu%。这里需要更多的线程。在业务逻辑处理非cpu%任务的时候切换到去执行cpu的任务。<br>这里有一个公式：1&#47;（cpu%）个线程  。这里的逻辑为（cpu% + 非cpu%）&#47;cpu%  =》 1+非cpu%&#47;cpu% 。如果有多核，需要乘以核数。","like_count":0},{"had_liked":false,"id":176643,"user_name":"CDz","can_delete":false,"product_type":"c1","uid":1114779,"ip_address":"","ucode":"A23BEE1C4A5922","user_header":"https://static001.geekbang.org/account/avatar/00/11/02/9b/b1a3c60d.jpg","comment_is_top":false,"comment_ctime":1581127501,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1581127501","product_id":100023901,"comment_content":"CPU密集型：线程数=CPU核心数(逻辑核心数)+1<br>I&#47;O密集型：线程数=CPU核心数*(1+I&#47;O耗时&#47;CPU耗时)<br><br>实际开发中最难确定的是**I&#47;O耗时&#47;CPU耗时**这个参数，<br><br>一般使用*apm*压测的方式，来主要观察I&#47;O耗时与CPU耗时。<br><br>部署分容器与物理机，<br><br>容器部署一般一个容器中只有一个Java程序在跑，可以使用`Runtime.getRuntime().availableProcessors()`来获取容器中的线程数，**新版本Java才支持**。<br><br>而在机器上跑，很多时候并不只有一个Java程序，所以还需要根据实际的情况从理论值开始调节。","like_count":0},{"had_liked":false,"id":172300,"user_name":"堵车","can_delete":false,"product_type":"c1","uid":1145404,"ip_address":"","ucode":"7BC1E50A4F8D3D","user_header":"https://static001.geekbang.org/account/avatar/00/11/7a/3c/87e015f8.jpg","comment_is_top":false,"comment_ctime":1579146205,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1579146205","product_id":100023901,"comment_content":"最佳线程数 =CPU 核数 * [ 1 +（I&#47;O 耗时 &#47; CPU 耗时）]这个公式值不能直接使用吧？一台机器的服务有多个，且一个服务接哟IO密集也有计算密集。各个业务并发的IO耗时不一样，cpu耗时也不一样。","like_count":0},{"had_liked":false,"id":160336,"user_name":"redis","can_delete":false,"product_type":"c1","uid":1066278,"ip_address":"","ucode":"91C54605384F51","user_header":"https://static001.geekbang.org/account/avatar/00/10/45/26/f54c9888.jpg","comment_is_top":false,"comment_ctime":1575938104,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1575938104","product_id":100023901,"comment_content":"如何监控的CPU耗时和IO耗时呢？","like_count":0},{"had_liked":false,"id":151965,"user_name":"木心","can_delete":false,"product_type":"c1","uid":1043293,"ip_address":"","ucode":"538A3B9B214BF7","user_header":"https://static001.geekbang.org/account/avatar/00/0f/eb/5d/2467ad6c.jpg","comment_is_top":false,"comment_ctime":1573823651,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1573823651","product_id":100023901,"comment_content":"io和cpu占比如果是2比1,3个线程并发，cpu利用率100%，那io利用率都200%了，同一个时刻2个线程在这些io操作","like_count":0},{"had_liked":false,"id":148100,"user_name":"考休","can_delete":false,"product_type":"c1","uid":1053955,"ip_address":"","ucode":"968DFC00D6D0CF","user_header":"https://static001.geekbang.org/account/avatar/00/10/15/03/c0fe1dbf.jpg","comment_is_top":false,"comment_ctime":1572940956,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1572940956","product_id":100023901,"comment_content":"之所以采用并发编程，最大的目的就是提高硬件CPU和I&#47;O的利用率，从而提升系统的性能，性能指标可以用延迟、并发、QPS等指标来表示，至于采用多少个线程来执行，其实还没有太好的公式可以表示，工作中还是会以实际情况分析、测试得出结果","like_count":0},{"had_liked":false,"id":148006,"user_name":"铁匠","can_delete":false,"product_type":"c1","uid":1088309,"ip_address":"","ucode":"D403835F5DB8F7","user_header":"https://static001.geekbang.org/account/avatar/00/10/9b/35/79e42357.jpg","comment_is_top":false,"comment_ctime":1572927534,"is_pvip":false,"replies":[{"id":"57435","content":"自己写个包装类，网上有不少例子","user_name":"作者回复","user_name_real":"王宝令","uid":"1269969","ctime":1573217892,"ip_address":"","comment_id":148006,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1572927534","product_id":100023901,"comment_content":"老师，我想了解下，线程池怎么做监控","like_count":0,"discussions":[{"author":{"id":1269969,"avatar":"https://static001.geekbang.org/account/avatar/00/13/60/d1/8efa89ab.jpg","nickname":"王宝令","note":"","ucode":"4FE19F5BC32FCA","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":473368,"discussion_content":"自己写个包装类，网上有不少例子","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1573217892,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":144430,"user_name":"黑色毛衣","can_delete":false,"product_type":"c1","uid":1135912,"ip_address":"","ucode":"FF7E235F91BA5C","user_header":"https://static001.geekbang.org/account/avatar/00/11/55/28/31b0cf2f.jpg","comment_is_top":false,"comment_ctime":1571920330,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1571920330","product_id":100023901,"comment_content":"王老师，不太明白，为什么 cpu 密集型任务只和 cpu 有关系，而 io 密集型任务需要的新城就和 cpu 有关系了呢？？","like_count":0},{"had_liked":false,"id":140647,"user_name":"Aaron","can_delete":false,"product_type":"c1","uid":1066251,"ip_address":"","ucode":"B0C504A76297C7","user_header":"https://thirdwx.qlogo.cn/mmopen/vi_32/0Qp9pxHBvgdZAveKzsvUFFUicCJfe7ONzhC7jSNFQDNFvg0jRMXuqqZOdxG1qKosylUYrpIHUR2Q76w5m4HtVkg/132","comment_is_top":false,"comment_ctime":1571020999,"is_pvip":true,"discussion_count":1,"race_medal":0,"score":"1571020999","product_id":100023901,"comment_content":"IO耗时和CPU耗时，怎么获取呢？","like_count":0,"discussions":[{"author":{"id":1135912,"avatar":"https://static001.geekbang.org/account/avatar/00/11/55/28/31b0cf2f.jpg","nickname":"黑色毛衣","note":"","ucode":"FF7E235F91BA5C","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":39386,"discussion_content":"显然要插桩，可以通过 AOP，使用 AspectJ 面向切面编程","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1571920589,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":135958,"user_name":"dingdongfm","can_delete":false,"product_type":"c1","uid":1564213,"ip_address":"","ucode":"7D17D2BC392A66","user_header":"","comment_is_top":false,"comment_ctime":1569314874,"is_pvip":false,"replies":[{"id":"52709","content":"QPS是吞吐量的一种度量方法","user_name":"作者回复","user_name_real":"王宝令","uid":"1269969","ctime":1569667972,"ip_address":"","comment_id":135958,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1569314874","product_id":100023901,"comment_content":"请问吞吐量跟QPS什么关系呢？","like_count":0,"discussions":[{"author":{"id":1269969,"avatar":"https://static001.geekbang.org/account/avatar/00/13/60/d1/8efa89ab.jpg","nickname":"王宝令","note":"","ucode":"4FE19F5BC32FCA","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":468401,"discussion_content":"QPS是吞吐量的一种度量方法","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1569667972,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":127455,"user_name":"日不落帝国","can_delete":false,"product_type":"c1","uid":1111870,"ip_address":"","ucode":"6A11ABBD8AC438","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTK2Az5uTh9ZGVA7yQCj1BXtXuicPRkvJicA97AoN9xX3bnPcUYglTMXJeZeoVbPQeJA7ICvQhR3KQ0w/132","comment_is_top":false,"comment_ctime":1566720942,"is_pvip":false,"replies":[{"id":"47368","content":"多谢多谢😄","user_name":"作者回复","user_name_real":"王宝令","uid":"1269969","ctime":1566794789,"ip_address":"","comment_id":127455,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1566720942","product_id":100023901,"comment_content":"王老师讲得这节课太棒了，赞👍","like_count":0,"discussions":[{"author":{"id":1269969,"avatar":"https://static001.geekbang.org/account/avatar/00/13/60/d1/8efa89ab.jpg","nickname":"王宝令","note":"","ucode":"4FE19F5BC32FCA","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":464501,"discussion_content":"多谢多谢😄","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1566794789,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":126332,"user_name":"文","can_delete":false,"product_type":"c1","uid":1090847,"ip_address":"","ucode":"E2DBA62248052E","user_header":"https://static001.geekbang.org/account/avatar/00/10/a5/1f/d2f6a1f7.jpg","comment_is_top":false,"comment_ctime":1566364650,"is_pvip":false,"replies":[{"id":"50595","content":"这个只能靠压测了，最好是线上真实数据","user_name":"作者回复","user_name_real":"王宝令","uid":"1269969","ctime":1568085193,"ip_address":"","comment_id":126332,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1566364650","product_id":100023901,"comment_content":"老师，如果一个服务上同时处理很多请求，每个请求处理链路不一样，怎样设置服务的通用线程池线程数大小","like_count":0,"discussions":[{"author":{"id":1269969,"avatar":"https://static001.geekbang.org/account/avatar/00/13/60/d1/8efa89ab.jpg","nickname":"王宝令","note":"","ucode":"4FE19F5BC32FCA","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":463941,"discussion_content":"这个只能靠压测了，最好是线上真实数据","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1568085193,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":123567,"user_name":"空白","can_delete":false,"product_type":"c1","uid":1074788,"ip_address":"","ucode":"05CF370E1ECCC6","user_header":"https://static001.geekbang.org/account/avatar/00/10/66/64/cb531bbc.jpg","comment_is_top":false,"comment_ctime":1565704134,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1565704134","product_id":100023901,"comment_content":"最佳线程数 =CPU 核数 * [ 1 +（I&#47;O 耗时 &#47;...<br>往往分布式应用的情况下会配置多个线程池，线程池隔离，单纯说最佳线程数也有点脱离实际","like_count":0},{"had_liked":false,"id":120691,"user_name":"chon","can_delete":false,"product_type":"c1","uid":1068925,"ip_address":"","ucode":"1C32170972F726","user_header":"https://static001.geekbang.org/account/avatar/00/10/4f/7d/dd852b04.jpg","comment_is_top":false,"comment_ctime":1564976445,"is_pvip":true,"replies":[{"id":"44975","content":"PPT😂","user_name":"作者回复","user_name_real":"王宝令","uid":"1269969","ctime":1565429664,"ip_address":"","comment_id":120691,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1564976445","product_id":100023901,"comment_content":"三线程执行示例图画的真漂亮，请问是用什么工具画的？","like_count":0,"discussions":[{"author":{"id":1269969,"avatar":"https://static001.geekbang.org/account/avatar/00/13/60/d1/8efa89ab.jpg","nickname":"王宝令","note":"","ucode":"4FE19F5BC32FCA","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":461438,"discussion_content":"PPT😂","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1565429664,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":116877,"user_name":"拯救地球好累","can_delete":false,"product_type":"c1","uid":1339022,"ip_address":"","ucode":"7643439601EF4C","user_header":"https://static001.geekbang.org/account/avatar/00/14/6e/8e/5d309a85.jpg","comment_is_top":false,"comment_ctime":1563933350,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1563933350","product_id":100023901,"comment_content":"---总结---<br>1. 多线程的好处：单核提高CPU和I&#47;O的综合利用率；多核提高CPU并行计算<br>2. CPU密集型线程数量=CPU核数+1：按核数并行计算，暂留一个线程用于某线程的I&#47;0阻塞<br>3. I&#47;O密集型线程数量=CPU核数 * （1+（I&#47;O耗时&#47;CPU耗时））：保证比例情况下CPU不空闲<br>4. 多线程原则：将硬件性能发挥到极致","like_count":0},{"had_liked":false,"id":107876,"user_name":"斐波那契","can_delete":false,"product_type":"c1","uid":1464006,"ip_address":"","ucode":"85E2EBC01392B1","user_header":"https://static001.geekbang.org/account/avatar/00/16/56/c6/0b449bc6.jpg","comment_is_top":false,"comment_ctime":1561627193,"is_pvip":false,"replies":[{"id":"39046","content":"不需要考虑","user_name":"作者回复","user_name_real":"王宝令","uid":"1269969","ctime":1561633953,"ip_address":"","comment_id":107876,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1561627193","product_id":100023901,"comment_content":"老师 刚刚了解到超线程技术 我们在开发中需不需要考虑这个？","like_count":0,"discussions":[{"author":{"id":1269969,"avatar":"https://static001.geekbang.org/account/avatar/00/13/60/d1/8efa89ab.jpg","nickname":"王宝令","note":"","ucode":"4FE19F5BC32FCA","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":455720,"discussion_content":"不需要考虑","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1561633953,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":105774,"user_name":"小李子","can_delete":false,"product_type":"c1","uid":1196293,"ip_address":"","ucode":"C5593E33CA6F4C","user_header":"https://static001.geekbang.org/account/avatar/00/12/41/05/5ba603f2.jpg","comment_is_top":false,"comment_ctime":1561082974,"is_pvip":false,"replies":[{"id":"38277","content":"共用隔离性不好，建议还是根据实际场景分一下","user_name":"作者回复","user_name_real":"王宝令","uid":"1269969","ctime":1561092645,"ip_address":"","comment_id":105774,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1561082974","product_id":100023901,"comment_content":"老师，是不是系统中不同类型的任务，最好分别使用自己的线程池，将线程池和它的参数写死在配置文件，然后系统所有任务共用，是不是很不科学？","like_count":0,"discussions":[{"author":{"id":1269969,"avatar":"https://static001.geekbang.org/account/avatar/00/13/60/d1/8efa89ab.jpg","nickname":"王宝令","note":"","ucode":"4FE19F5BC32FCA","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":454805,"discussion_content":"共用隔离性不好，建议还是根据实际场景分一下","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1561092645,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":105403,"user_name":"Carl","can_delete":false,"product_type":"c1","uid":1396521,"ip_address":"","ucode":"09850C3E61172E","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/gsMyyNmIN9T1b6yam316lf4BkdWOrISIsicajdiahoia0WkCWkPgSrveNj9K5An35xbjZ9eaDr7IY0r84I8ElIvww/132","comment_is_top":false,"comment_ctime":1560992980,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1560992980","product_id":100023901,"comment_content":"老师，你好，线程ABC的cpu时间没有重叠，但IO时间有一小段重叠了，怎么计算100%？cpu：io执行时间1:2，io可以并发执行，cpu是单核，同一时刻只有一个线程执行。是这个意思吗？","like_count":0},{"had_liked":false,"id":104046,"user_name":"LTL","can_delete":false,"product_type":"c1","uid":1139990,"ip_address":"","ucode":"6CA70296766B9F","user_header":"https://static001.geekbang.org/account/avatar/00/11/65/16/24d6921d.jpg","comment_is_top":false,"comment_ctime":1560600526,"is_pvip":true,"discussion_count":0,"race_medal":0,"score":"1560600526","product_id":100023901,"comment_content":"最佳线程数 =CPU 核数 * [ 1 +（I&#47;O 耗时 &#47;CPU耗时)]，我觉得这个公式应该改为：最佳线程数 = 1 +CPU核数*（I&#47;O 耗时 &#47;CPU耗时），因为cpu增加核数，相对来说就是降低了单个cpu的耗时，4个核数就相当于单核CPU的耗时降低到了1&#47;4，因此应该是1 +CPU核数*（I&#47;O 耗时 &#47;CPU耗时）","like_count":0},{"had_liked":false,"id":98626,"user_name":"啊！备","can_delete":false,"product_type":"c1","uid":1285759,"ip_address":"","ucode":"3279B9E182EE3D","user_header":"https://static001.geekbang.org/account/avatar/00/13/9e/7f/657625cc.jpg","comment_is_top":false,"comment_ctime":1559043898,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1559043898","product_id":100023901,"comment_content":"对于缓存 业务调整 实现方式之类的皆可归纳“算法”，当然对于线程池的使用当然要合理使用，具体怎么合理  <br><br><br><br>我也不很清楚","like_count":0},{"had_liked":false,"id":98622,"user_name":"啊！备","can_delete":false,"product_type":"c1","uid":1285759,"ip_address":"","ucode":"3279B9E182EE3D","user_header":"https://static001.geekbang.org/account/avatar/00/13/9e/7f/657625cc.jpg","comment_is_top":false,"comment_ctime":1559043534,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1559043534","product_id":100023901,"comment_content":"我来回答第一位的问题：首先所有的线程共用一个池会出现某类业务线程异常，死锁，耗时造成的线程逃逸影响其他业务，不同的业务是很难调整线程大小的（何况是动态业务添加）。","like_count":0},{"had_liked":false,"id":97133,"user_name":"melon-skin","can_delete":false,"product_type":"c1","uid":1073938,"ip_address":"","ucode":"BCAA30C66C1B15","user_header":"https://static001.geekbang.org/account/avatar/00/10/63/12/af32e9d4.jpg","comment_is_top":false,"comment_ctime":1558594261,"is_pvip":false,"replies":[{"id":"34744","content":"是io密集型，但是不到简单套用公式，实际场景复杂的多","user_name":"作者回复","user_name_real":"王宝令","uid":"1269969","ctime":1558616110,"ip_address":"","comment_id":97133,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1558594261","product_id":100023901,"comment_content":"jdbc连接池是io密集型吗 它的线程数个数可以用这个公式来计算吗？","like_count":0,"discussions":[{"author":{"id":1269969,"avatar":"https://static001.geekbang.org/account/avatar/00/13/60/d1/8efa89ab.jpg","nickname":"王宝令","note":"","ucode":"4FE19F5BC32FCA","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":451151,"discussion_content":"是io密集型，但是不到简单套用公式，实际场景复杂的多","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1558616110,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":96840,"user_name":"虫子","can_delete":false,"product_type":"c1","uid":1105931,"ip_address":"","ucode":"383AA5665CFE56","user_header":"https://static001.geekbang.org/account/avatar/00/10/e0/0b/e0364454.jpg","comment_is_top":false,"comment_ctime":1558517866,"is_pvip":true,"replies":[{"id":"34652","content":"理论方法仅供参考","user_name":"作者回复","user_name_real":"王宝令","uid":"1269969","ctime":1558535431,"ip_address":"","comment_id":96840,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1558517866","product_id":100023901,"comment_content":"问一下，实际应用中，会有很多进程，不可能有一个，还是这么计算io密集型吗？","like_count":0,"discussions":[{"author":{"id":1269969,"avatar":"https://static001.geekbang.org/account/avatar/00/13/60/d1/8efa89ab.jpg","nickname":"王宝令","note":"","ucode":"4FE19F5BC32FCA","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":451031,"discussion_content":"理论方法仅供参考","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1558535431,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":95492,"user_name":"rm -rf&#47;*","can_delete":false,"product_type":"c1","uid":1388034,"ip_address":"","ucode":"D5A997682B6F7E","user_header":"https://static001.geekbang.org/account/avatar/00/15/2e/02/07ae4c9e.jpg","comment_is_top":false,"comment_ctime":1558063890,"is_pvip":false,"replies":[{"id":"34434","content":"只有实验室环境才有公式，实际场景都得压测","user_name":"作者回复","user_name_real":"王宝令","uid":"1269969","ctime":1558358175,"ip_address":"","comment_id":95492,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1558063890","product_id":100023901,"comment_content":"老师，那在threadpoolexecutor中阻塞队列的大小和最大线程数应该怎么算呢","like_count":0,"discussions":[{"author":{"id":1269969,"avatar":"https://static001.geekbang.org/account/avatar/00/13/60/d1/8efa89ab.jpg","nickname":"王宝令","note":"","ucode":"4FE19F5BC32FCA","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":450479,"discussion_content":"只有实验室环境才有公式，实际场景都得压测","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1558358175,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":95257,"user_name":"0928","can_delete":false,"product_type":"c1","uid":1240990,"ip_address":"","ucode":"03221745CF8141","user_header":"https://static001.geekbang.org/account/avatar/00/12/ef/9e/78420b67.jpg","comment_is_top":false,"comment_ctime":1557999043,"is_pvip":false,"replies":[{"id":"34154","content":"我们说的都是单机的，不是分布式情况下的","user_name":"作者回复","user_name_real":"王宝令","uid":"1269969","ctime":1558091717,"ip_address":"","comment_id":95257,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1557999043","product_id":100023901,"comment_content":"如果程序的部署方式是，三台16核的物理机器，每台机器上部署三个tomcat来跑服务，这样怎么计算线程数呢？我理解是每台机器上计算出来一个总的线程数然后平分给这个机器上的tomcat，这样理解对吗？因为刚接触服务器这边的开发，有个疑问就是mysql数据库的连接数配置等同于这个线程数配置吗？<br>","like_count":0,"discussions":[{"author":{"id":1269969,"avatar":"https://static001.geekbang.org/account/avatar/00/13/60/d1/8efa89ab.jpg","nickname":"王宝令","note":"","ucode":"4FE19F5BC32FCA","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":450387,"discussion_content":"我们说的都是单机的，不是分布式情况下的","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1558091717,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":95246,"user_name":"minggushen","can_delete":false,"product_type":"c1","uid":1441635,"ip_address":"","ucode":"60A76A58F81D7A","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTIhvw4HpdqXOUJnFcRKsKZwZAubZwYCtqFYLNVpp52QEWTZoMHU0DU634loe8ia4iaZibBege6SpLatQ/132","comment_is_top":false,"comment_ctime":1557996448,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1557996448","product_id":100023901,"comment_content":"实际生产中，很多硬件都存在瓶颈，例如一个操作需要进行硬盘写入或读取操作，IO性能会随着并发量的提升而减弱，从而进一步增加IO延时。<br>所以还是要具体问题具体分析。","like_count":0},{"had_liked":false,"id":91325,"user_name":"楊威","can_delete":false,"product_type":"c1","uid":1025474,"ip_address":"","ucode":"8BA77716CE8179","user_header":"https://static001.geekbang.org/account/avatar/00/0f/a5/c2/41fa26df.jpg","comment_is_top":false,"comment_ctime":1556980182,"is_pvip":true,"replies":[{"id":"34457","content":"这个理论值没问题","user_name":"作者回复","user_name_real":"王宝令","uid":"1269969","ctime":1558362572,"ip_address":"","comment_id":91325,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1556980182","product_id":100023901,"comment_content":"老师，按照对我这堂课的理解，多线程最多提升一倍效率(CPU:IN=1;1)? 但是我记得多线程执行插入数据库操作提升不止一倍，不清楚怎么回事","like_count":0,"discussions":[{"author":{"id":1269969,"avatar":"https://static001.geekbang.org/account/avatar/00/13/60/d1/8efa89ab.jpg","nickname":"王宝令","note":"","ucode":"4FE19F5BC32FCA","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":448886,"discussion_content":"这个理论值没问题","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1558362572,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":90484,"user_name":"码农Kevin亮","can_delete":false,"product_type":"c1","uid":1116630,"ip_address":"","ucode":"D34562461CA0A1","user_header":"https://static001.geekbang.org/account/avatar/00/11/09/d6/5f366427.jpg","comment_is_top":false,"comment_ctime":1556533801,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1556533801","product_id":100023901,"comment_content":"特别喜欢老师这种先从基本概念说起的讲课方式，帮我们很系统地捋了一遍。之前碎片式的学习让人看完就忘。老师的课程逻辑严密，点赞点赞","like_count":0},{"had_liked":false,"id":85621,"user_name":"chuenfaiy","can_delete":false,"product_type":"c1","uid":1291234,"ip_address":"","ucode":"71F1898C8CACA5","user_header":"https://static001.geekbang.org/account/avatar/00/13/b3/e2/7bdc7255.jpg","comment_is_top":false,"comment_ctime":1555146249,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1555146249","product_id":100023901,"comment_content":"对于单核CPU，为什么不是两个线程呢，一用用于io，一个用于CPU计算（CPU计算总由于不能重叠，总体来看还是串行的，而且这个还少了上下文切换）","like_count":0},{"had_liked":false,"id":83946,"user_name":"铁匠","can_delete":false,"product_type":"c1","uid":1088309,"ip_address":"","ucode":"D403835F5DB8F7","user_header":"https://static001.geekbang.org/account/avatar/00/10/9b/35/79e42357.jpg","comment_is_top":false,"comment_ctime":1554736932,"is_pvip":false,"replies":[{"id":"30309","content":"第一个回合如你所说，第二个回合就自动变成交叉执行了","user_name":"作者回复","user_name_real":"王宝令","uid":"1269969","ctime":1554771452,"ip_address":"","comment_id":83946,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1554736932","product_id":100023901,"comment_content":"有个疑问，不知道是不是思考的角度不太对。假设cpu执行时间和io执行时间的比例是1:1，我们用两个线程执行，为什么A线程执行完CPU计算切换到B的时候B刚好执行IO操作，就不会出现A在执行CPU计算，切换到B的时候也是CPU计算吗。","like_count":0,"discussions":[{"author":{"id":1269969,"avatar":"https://static001.geekbang.org/account/avatar/00/13/60/d1/8efa89ab.jpg","nickname":"王宝令","note":"","ucode":"4FE19F5BC32FCA","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":446185,"discussion_content":"第一个回合如你所说，第二个回合就自动变成交叉执行了","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1554771452,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":82282,"user_name":"张天屹","can_delete":false,"product_type":"c1","uid":1477612,"ip_address":"","ucode":"8BD6BD6DCF0F4F","user_header":"https://static001.geekbang.org/account/avatar/00/16/8b/ec/dc03f5ad.jpg","comment_is_top":false,"comment_ctime":1554175166,"is_pvip":false,"replies":[{"id":"29862","content":"压测吧<br>","user_name":"作者回复","user_name_real":"王宝令","uid":"1269969","ctime":1554217577,"ip_address":"","comment_id":82282,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1554175166","product_id":100023901,"comment_content":"老师好，比如对于一个8核的cpu，也许10几个线程合适，但是如果考虑到多个进程服务呢，那么总线程数应该是进程数n* 每个进程的线程数m   n和m怎么设置比较合理呢？","like_count":0,"discussions":[{"author":{"id":1269969,"avatar":"https://static001.geekbang.org/account/avatar/00/13/60/d1/8efa89ab.jpg","nickname":"王宝令","note":"","ucode":"4FE19F5BC32FCA","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":445536,"discussion_content":"压测吧\n","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1554217577,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":81445,"user_name":"正义柔情永在","can_delete":false,"product_type":"c1","uid":1385762,"ip_address":"","ucode":"41BAA3827C8FF5","user_header":"https://static001.geekbang.org/account/avatar/00/15/25/22/80bb0990.jpg","comment_is_top":false,"comment_ctime":1553915317,"is_pvip":false,"replies":[{"id":"29510","content":"Apache ab、Apache JMeter这样的工具用的比较多，统计数据都会自动计算出来的。","user_name":"作者回复","user_name_real":"王宝令","uid":"1269969","ctime":1553925980,"ip_address":"","comment_id":81445,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1553915317","product_id":100023901,"comment_content":"老师，跟着您的课程一路学来，收货颇多。想请教您一个问题。程序运行需要多少个线程，IO 和CPU的执行时间比，吞吐量等这些，一般都是用那些工具测量比较好点。能不能出一节这样的教程。一些程序按照a方式写出来了，却不知道到底比b方式好多少？一个线程池配置了20个线程，不知道是不是不配置了10个线程高了理论上的一倍。线程数量的分水岭应该怎么测。<br> 问题比较幼稚，老师不要见笑","like_count":0,"discussions":[{"author":{"id":1269969,"avatar":"https://static001.geekbang.org/account/avatar/00/13/60/d1/8efa89ab.jpg","nickname":"王宝令","note":"","ucode":"4FE19F5BC32FCA","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":445201,"discussion_content":"Apache ab、Apache JMeter这样的工具用的比较多，统计数据都会自动计算出来的。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1553925980,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":80499,"user_name":"靠人品去赢","can_delete":false,"product_type":"c1","uid":1301286,"ip_address":"","ucode":"7A20F9EBE847E1","user_header":"https://static001.geekbang.org/account/avatar/00/13/db/26/54f2c164.jpg","comment_is_top":false,"comment_ctime":1553670748,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1553670748","product_id":100023901,"comment_content":"楼上有人说CPU 4核8线程中的线程对比这个线程，我的理解是CPU密集还是要以核数为准。这个CPU的4核8线程，多出来的4个线程是基于超线程技术得到的，看过一篇文章多出来的这部分实际使用要打一点折扣，是乘以25%还是50%忘记了。这里探讨线程数以程序中为准日志中见得到，我觉得还是应该核数+1吧。","like_count":0},{"had_liked":false,"id":80107,"user_name":"崔晓川","can_delete":false,"product_type":"c1","uid":1193730,"ip_address":"","ucode":"635B9E822FC92D","user_header":"https://static001.geekbang.org/account/avatar/00/12/37/02/8c6eb702.jpg","comment_is_top":false,"comment_ctime":1553606488,"is_pvip":false,"replies":[{"id":"29197","content":"网盘，网关这里和磁盘网络打交道的都是io密集型的","user_name":"作者回复","user_name_real":"王宝令","uid":"1269969","ctime":1553610476,"ip_address":"","comment_id":80107,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1553606488","product_id":100023901,"comment_content":"请问老师，如何区分我的服务器是cpu密集型还是io密集型呢？","like_count":0,"discussions":[{"author":{"id":1269969,"avatar":"https://static001.geekbang.org/account/avatar/00/13/60/d1/8efa89ab.jpg","nickname":"王宝令","note":"","ucode":"4FE19F5BC32FCA","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":444753,"discussion_content":"网盘，网关这里和磁盘网络打交道的都是io密集型的","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1553610476,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":80048,"user_name":"linqw","can_delete":false,"product_type":"c1","uid":1134138,"ip_address":"","ucode":"09DCFE98C54DD8","user_header":"https://static001.geekbang.org/account/avatar/00/11/4e/3a/86196508.jpg","comment_is_top":false,"comment_ctime":1553600352,"is_pvip":false,"replies":[{"id":"29186","content":"磁盘允许多好线程操作，如果都操作io，没办法百分百，说明io是瓶颈，软件只能提高硬件利用率，但是不能突破硬件瓶颈。这个时候多个线程就提高不了性能<br>","user_name":"作者回复","user_name_real":"王宝令","uid":"1269969","ctime":1553604359,"ip_address":"","comment_id":80048,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1553600352","product_id":100023901,"comment_content":"\bio密集型，有点疑惑的是:不可能所有的线程都执行io操作么？难道磁盘驱动只允许一个线程进行操作么？不太清楚操作系统是如何调度线程在cpu和io中合理的分配，如果洽巧所有线程都在io操作，那这样的话cpu的利用率如何百分百？老师帮忙解答下哦","like_count":0,"discussions":[{"author":{"id":1269969,"avatar":"https://static001.geekbang.org/account/avatar/00/13/60/d1/8efa89ab.jpg","nickname":"王宝令","note":"","ucode":"4FE19F5BC32FCA","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":444738,"discussion_content":"磁盘允许多好线程操作，如果都操作io，没办法百分百，说明io是瓶颈，软件只能提高硬件利用率，但是不能突破硬件瓶颈。这个时候多个线程就提高不了性能\n","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1553604359,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":79974,"user_name":"ban","can_delete":false,"product_type":"c1","uid":1034204,"ip_address":"","ucode":"E523CE97E48266","user_header":"https://static001.geekbang.org/account/avatar/00/0f/c7/dc/9408c8c2.jpg","comment_is_top":false,"comment_ctime":1553586318,"is_pvip":false,"replies":[{"id":"29190","content":"1.64<br>2.通过操作系统的监控去看是多少核，压测要看监控数据，所以物理的核数对实际工作用处不大<br>","user_name":"作者回复","user_name_real":"王宝令","uid":"1269969","ctime":1553604812,"ip_address":"","comment_id":79974,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1553586318","product_id":100023901,"comment_content":"请问老师，百度后发现有这两点比较模糊，求解答<br>1、我看评论说，计算的是逻辑总数。<br>比如说我的机器有4个物理CPU，每个CPU是八核，逻辑总数64，如果是CPU密集型，上面说的公式是：CPU 核数 +1，那我计算线程数的时候，是以线程数=CPU核数+1=》线程数=8+1=9<br>还是以线程数=逻辑总数+1==》线程数=64+1=65。<br><br>2、我看CPU的参数看到显示8核16线程数，这个线程数跟逻辑总数有没有关系呢。<br>","like_count":0,"discussions":[{"author":{"id":1269969,"avatar":"https://static001.geekbang.org/account/avatar/00/13/60/d1/8efa89ab.jpg","nickname":"王宝令","note":"","ucode":"4FE19F5BC32FCA","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":444708,"discussion_content":"1.64\n2.通过操作系统的监控去看是多少核，压测要看监控数据，所以物理的核数对实际工作用处不大\n","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1553604812,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":79909,"user_name":"发条橙子 。","can_delete":false,"product_type":"c1","uid":1259218,"ip_address":"","ucode":"ED076F4534FFED","user_header":"https://static001.geekbang.org/account/avatar/00/13/36/d2/c7357723.jpg","comment_is_top":false,"comment_ctime":1553572224,"is_pvip":false,"replies":[{"id":"29238","content":"1.只关注io花了多少时间就可以了，用时间减去它就是cpu时间<br>2.不是相同的，tomcat设置要比其他的大，因为他是流量入口<br>","user_name":"作者回复","user_name_real":"王宝令","uid":"1269969","ctime":1553647660,"ip_address":"","comment_id":79909,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1553572224","product_id":100023901,"comment_content":"老师 ，今天突然想到一个问题 ，回过头来问一下 。 老师说的一般传统电商应该都是 I&#47;O 密集型 。当我按照apm工具分析好io耗时和cpu耗时的比例后 。准备开始调配线程池数量 <br><br>问题 ：<br><br>1.apm是每个方法级别的， 是把应用里大部分接口比例取出来然后算平均的比例么  <br><br>2.设置线程池的应用有很多 ， 例如tomcat 、 druid 、redis 等等 ， 是每个应用都配置相同的线程池数量么","like_count":0,"discussions":[{"author":{"id":1269969,"avatar":"https://static001.geekbang.org/account/avatar/00/13/60/d1/8efa89ab.jpg","nickname":"王宝令","note":"","ucode":"4FE19F5BC32FCA","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":444684,"discussion_content":"1.只关注io花了多少时间就可以了，用时间减去它就是cpu时间\n2.不是相同的，tomcat设置要比其他的大，因为他是流量入口\n","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1553647660,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":79809,"user_name":"WL","can_delete":false,"product_type":"c1","uid":1173771,"ip_address":"","ucode":"6277DCD776B87E","user_header":"https://static001.geekbang.org/account/avatar/00/11/e9/0b/1171ac71.jpg","comment_is_top":false,"comment_ctime":1553560339,"is_pvip":false,"replies":[{"id":"29113","content":"不是所有线程都忙碌，要找到有瓶颈的线程池<br>","user_name":"作者回复","user_name_real":"王宝令","uid":"1269969","ctime":1553571752,"ip_address":"","comment_id":79809,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1553560339","product_id":100023901,"comment_content":"想问一下老师在我们的项目里使用的是spring的框架, 程序启动就已经有十几个线程再跑了, 那么这种情况下怎么计算分析应该创建多大线程池呢?","like_count":0,"discussions":[{"author":{"id":1269969,"avatar":"https://static001.geekbang.org/account/avatar/00/13/60/d1/8efa89ab.jpg","nickname":"王宝令","note":"","ucode":"4FE19F5BC32FCA","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":444635,"discussion_content":"不是所有线程都忙碌，要找到有瓶颈的线程池\n","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1553571752,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":79276,"user_name":"WhoAmI","can_delete":false,"product_type":"c1","uid":1445156,"ip_address":"","ucode":"58588E643EB842","user_header":"https://static001.geekbang.org/account/avatar/00/16/0d/24/b07de4f2.jpg","comment_is_top":false,"comment_ctime":1553422667,"is_pvip":false,"replies":[{"id":"28924","content":"理解成逻辑核数就可以了","user_name":"作者回复","user_name_real":"王宝令","uid":"1269969","ctime":1553436029,"ip_address":"","comment_id":79276,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1553422667","product_id":100023901,"comment_content":"您好，所谓 “CPU 的核数“，是单个物理CPU的核心数还是总的逻辑CPU数？谢谢！","like_count":0,"discussions":[{"author":{"id":1269969,"avatar":"https://static001.geekbang.org/account/avatar/00/13/60/d1/8efa89ab.jpg","nickname":"王宝令","note":"","ucode":"4FE19F5BC32FCA","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":444426,"discussion_content":"理解成逻辑核数就可以了","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1553436029,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":79156,"user_name":"好牙","can_delete":false,"product_type":"c1","uid":1117320,"ip_address":"","ucode":"F36A824C1AB19A","user_header":"","comment_is_top":false,"comment_ctime":1553390799,"is_pvip":false,"replies":[{"id":"28891","content":"如果一台服务器上部署很多东西，估计并发也大不哪里去。抓住核心矛盾，日志收集怎么会让他占很多资源，分配0.1核就可以了。理论计算仅用来指导而已。","user_name":"作者回复","user_name_real":"王宝令","uid":"1269969","ctime":1553402740,"ip_address":"","comment_id":79156,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1553390799","product_id":100023901,"comment_content":"老师您好，关于最佳线程数量一直有个疑惑，目前各种计算方式都是计算一个进程拥有所有cpu io资源情况下的最佳线程数，但一台服务器上肯定有多个进程，比如tomcat，日志收集agent，那么多个进程间的线程池肯定会竞争资源，这又如何考虑呢？","like_count":0,"discussions":[{"author":{"id":1269969,"avatar":"https://static001.geekbang.org/account/avatar/00/13/60/d1/8efa89ab.jpg","nickname":"王宝令","note":"","ucode":"4FE19F5BC32FCA","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":444373,"discussion_content":"如果一台服务器上部署很多东西，估计并发也大不哪里去。抓住核心矛盾，日志收集怎么会让他占很多资源，分配0.1核就可以了。理论计算仅用来指导而已。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1553402740,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":79108,"user_name":"谢特","can_delete":false,"product_type":"c1","uid":1248684,"ip_address":"","ucode":"9C30DBFECFE649","user_header":"https://static001.geekbang.org/account/avatar/00/13/0d/ac/09678490.jpg","comment_is_top":false,"comment_ctime":1553353915,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1553353915","product_id":100023901,"comment_content":"什么是io耗时，什么是cpu耗时","like_count":0},{"had_liked":false,"id":78859,"user_name":"多襄丸","can_delete":false,"product_type":"c1","uid":1074310,"ip_address":"","ucode":"1AA1497C5A293C","user_header":"https://static001.geekbang.org/account/avatar/00/10/64/86/f5a9403a.jpg","comment_is_top":false,"comment_ctime":1553260274,"is_pvip":false,"replies":[{"id":"28858","content":"建议看测试专栏吧😂","user_name":"作者回复","user_name_real":"王宝令","uid":"1269969","ctime":1553388839,"ip_address":"","comment_id":78859,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1553260274","product_id":100023901,"comment_content":"老师 实际项目中 怎么做压测啊？","like_count":0,"discussions":[{"author":{"id":1269969,"avatar":"https://static001.geekbang.org/account/avatar/00/13/60/d1/8efa89ab.jpg","nickname":"王宝令","note":"","ucode":"4FE19F5BC32FCA","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":444262,"discussion_content":"建议看测试专栏吧😂","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1553388839,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":78698,"user_name":"张三","can_delete":false,"product_type":"c1","uid":1004092,"ip_address":"","ucode":"1155528FAE1546","user_header":"https://static001.geekbang.org/account/avatar/00/0f/52/3c/d6fcb93a.jpg","comment_is_top":false,"comment_ctime":1553220009,"is_pvip":false,"replies":[{"id":"28637","content":"linux有很多监控工具，win上也有监控，任务管理器相对差一些<br>","user_name":"作者回复","user_name_real":"王宝令","uid":"1269969","ctime":1553256680,"ip_address":"","comment_id":78698,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1553220009","product_id":100023901,"comment_content":"cpu利用率、I&#47;O利用率是不是看任务管理器里边的性能那一栏就行了，里边有cpu usage，physical memory。","like_count":0,"discussions":[{"author":{"id":1269969,"avatar":"https://static001.geekbang.org/account/avatar/00/13/60/d1/8efa89ab.jpg","nickname":"王宝令","note":"","ucode":"4FE19F5BC32FCA","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":444194,"discussion_content":"linux有很多监控工具，win上也有监控，任务管理器相对差一些\n","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1553256680,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":78674,"user_name":"alias cd=rm -rf","can_delete":false,"product_type":"c1","uid":1318325,"ip_address":"","ucode":"E7B27D76305B75","user_header":"https://static001.geekbang.org/account/avatar/00/14/1d/b5/971261fd.jpg","comment_is_top":false,"comment_ctime":1553216304,"is_pvip":false,"replies":[{"id":"28638","content":"一般都是按照逻辑核数","user_name":"作者回复","user_name_real":"王宝令","uid":"1269969","ctime":1553256767,"ip_address":"","comment_id":78674,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1553216304","product_id":100023901,"comment_content":"对于计算密集型的业务，cpu有个超线程技术用2*cpu核数是不是比较合适","like_count":0,"discussions":[{"author":{"id":1269969,"avatar":"https://static001.geekbang.org/account/avatar/00/13/60/d1/8efa89ab.jpg","nickname":"王宝令","note":"","ucode":"4FE19F5BC32FCA","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":444188,"discussion_content":"一般都是按照逻辑核数","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1553256767,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":78566,"user_name":"太阳滚雪球","can_delete":false,"product_type":"c1","uid":1209158,"ip_address":"","ucode":"89EA2CB07B2FE6","user_header":"https://static001.geekbang.org/account/avatar/00/12/73/46/65ead7dd.jpg","comment_is_top":false,"comment_ctime":1553176505,"is_pvip":false,"replies":[{"id":"28689","content":"不限制最大值，会导致OOM。实际工作中一定会限制最大值的","user_name":"作者回复","user_name_real":"王宝令","uid":"1269969","ctime":1553269224,"ip_address":"","comment_id":78566,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1553176505","product_id":100023901,"comment_content":"老师所讲的，是否适用线程池的设置？对于forkjoin这种可以自动调整最大化资源利用率的机制，在实际中，是否还有关注线程数多少的必要？","like_count":0,"discussions":[{"author":{"id":1269969,"avatar":"https://static001.geekbang.org/account/avatar/00/13/60/d1/8efa89ab.jpg","nickname":"王宝令","note":"","ucode":"4FE19F5BC32FCA","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":444146,"discussion_content":"不限制最大值，会导致OOM。实际工作中一定会限制最大值的","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1553269224,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":78516,"user_name":"皮蛋","can_delete":false,"product_type":"c1","uid":1202619,"ip_address":"","ucode":"8384CC338549EB","user_header":"https://static001.geekbang.org/account/avatar/00/12/59/bb/caf2b06c.jpg","comment_is_top":false,"comment_ctime":1553164275,"is_pvip":false,"replies":[{"id":"28565","content":"是<br>","user_name":"作者回复","user_name_real":"王宝令","uid":"1269969","ctime":1553166561,"ip_address":"","comment_id":78516,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1553164275","product_id":100023901,"comment_content":"老师，如果线程大多时间都在不断查数据库，这样是io密集型吗","like_count":0,"discussions":[{"author":{"id":1269969,"avatar":"https://static001.geekbang.org/account/avatar/00/13/60/d1/8efa89ab.jpg","nickname":"王宝令","note":"","ucode":"4FE19F5BC32FCA","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":444128,"discussion_content":"是\n","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1553166561,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":78515,"user_name":"萧一狼","can_delete":false,"product_type":"c1","uid":1266160,"ip_address":"","ucode":"35CC9C8FC8DDD6","user_header":"https://static001.geekbang.org/account/avatar/00/13/51/f0/9b7d40fc.jpg","comment_is_top":false,"comment_ctime":1553164268,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1553164268","product_id":100023901,"comment_content":"最后思考题也是我想问的， AsyncTask中MAXIMUM_POOL_SIZE = CPU_COUNT * 2 + 1;本来还觉得正常，现在有些蒙蔽","like_count":0},{"had_liked":false,"id":78503,"user_name":"aroll","can_delete":false,"product_type":"c1","uid":1023524,"ip_address":"","ucode":"3A1A1267C88CC3","user_header":"https://static001.geekbang.org/account/avatar/00/0f/9e/24/0d6a7987.jpg","comment_is_top":false,"comment_ctime":1553161397,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1553161397","product_id":100023901,"comment_content":"我们需要解决 CPU 和 I&#47;O 设备综合利用率的问题,而这个公式(2 * CPU 的核数 + 1)没有任何与IO相关的参数，显然不合适<br>","like_count":0},{"had_liked":false,"id":78448,"user_name":"bing","can_delete":false,"product_type":"c1","uid":1067589,"ip_address":"","ucode":"6ADAA36B2B732C","user_header":"https://static001.geekbang.org/account/avatar/00/10/4a/45/04a13bf9.jpg","comment_is_top":false,"comment_ctime":1553150683,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1553150683","product_id":100023901,"comment_content":"N核服务器，通过执行业务的单线程分析出本地计算时间为x，等待时间为y，则工作线程数（线程池线程数）设置为 N*(x+y)&#47;x，能让CPU的利用率最大化。<br>","like_count":0},{"had_liked":false,"id":78425,"user_name":"ack","can_delete":false,"product_type":"c1","uid":1440912,"ip_address":"","ucode":"69CA1233EEA8E2","user_header":"https://static001.geekbang.org/account/avatar/00/15/fc/90/c9df0459.jpg","comment_is_top":false,"comment_ctime":1553144447,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1553144447","product_id":100023901,"comment_content":"2 * CPU 的核数 + 1，根据公式这个应该只在cpu时间大于io时间的情况下成立，也就是cpu密集型。但没考虑到io密集型的情况","like_count":0},{"had_liked":false,"id":78421,"user_name":"WolvesLeader","can_delete":false,"product_type":"c1","uid":1103839,"ip_address":"","ucode":"33610E19CA2E96","user_header":"https://static001.geekbang.org/account/avatar/00/10/d7/df/fc0a6709.jpg","comment_is_top":false,"comment_ctime":1553143968,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1553143968","product_id":100023901,"comment_content":"还是感觉要做大量的测试，所有的公式都只是理论上的东西","like_count":0},{"had_liked":false,"id":78412,"user_name":"techwro","can_delete":false,"product_type":"c1","uid":1113744,"ip_address":"","ucode":"7AF2B319F0AE1B","user_header":"https://static001.geekbang.org/account/avatar/00/10/fe/90/19ef108d.jpg","comment_is_top":false,"comment_ctime":1553142289,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1553142289","product_id":100023901,"comment_content":"老师，请问如何根据 CPU、I&#47;O 设备的利用率和性能指标（响应时间、吞吐量）来验证估算的参数呢？","like_count":0},{"had_liked":false,"id":78340,"user_name":"JGOS","can_delete":false,"product_type":"c1","uid":1237592,"ip_address":"","ucode":"46A905A169408F","user_header":"https://static001.geekbang.org/account/avatar/00/12/e2/58/2468a5e9.jpg","comment_is_top":false,"comment_ctime":1553131823,"is_pvip":false,"replies":[{"id":"28571","content":"理论值都是高度抽象之后的，实际场景能发挥硬件性能就可以，这个不是简单的公式能搞定的<br>","user_name":"作者回复","user_name_real":"王宝令","uid":"1269969","ctime":1553170911,"ip_address":"","comment_id":78340,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1553131823","product_id":100023901,"comment_content":"老师，这个线程数的大小是根据整个应用的情况来计算的,还是按照应用中各自的任务来计算啊.比如现在有任务A和任务B，任务A的io耗时&#47;cpu耗时是1,任务B的io耗时&#47;cpu耗时是2,要为任务A和任务B各配一个线程池,线程数的大小是根据各自的io,cpu的比率计算,还是按照任务A和任务B总的比率的来计算最佳线程数啊","like_count":0,"discussions":[{"author":{"id":1269969,"avatar":"https://static001.geekbang.org/account/avatar/00/13/60/d1/8efa89ab.jpg","nickname":"王宝令","note":"","ucode":"4FE19F5BC32FCA","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":444055,"discussion_content":"理论值都是高度抽象之后的，实际场景能发挥硬件性能就可以，这个不是简单的公式能搞定的\n","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1553170911,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":78339,"user_name":"一斤猴子","can_delete":false,"product_type":"c1","uid":1297587,"ip_address":"","ucode":"D61D3B9B6390BA","user_header":"https://static001.geekbang.org/account/avatar/00/13/cc/b3/3d198746.jpg","comment_is_top":false,"comment_ctime":1553131575,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1553131575","product_id":100023901,"comment_content":"不合理，首先是IO密集型，不是CPU密集型；其次IO密集型计算公式为cpu核数除以1-阻塞系数而不是核数+1","like_count":0},{"had_liked":false,"id":78338,"user_name":"松花皮蛋me","can_delete":false,"product_type":"c1","uid":1000054,"ip_address":"","ucode":"B0846CEEF6B0D1","user_header":"https://static001.geekbang.org/account/avatar/00/0f/42/76/256bbd43.jpg","comment_is_top":false,"comment_ctime":1553131574,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1553131574","product_id":100023901,"comment_content":"但是大部分都只考虑CPU不考虑IO","like_count":0},{"had_liked":false,"id":78333,"user_name":"牛在天上飞","can_delete":false,"product_type":"c1","uid":1137660,"ip_address":"","ucode":"972DAF20F085ED","user_header":"https://static001.geekbang.org/account/avatar/00/11/5b/fc/5c24080b.jpg","comment_is_top":false,"comment_ctime":1553131479,"is_pvip":false,"replies":[{"id":"28659","content":"apm工具比较实用，能统计到每个方法的耗时","user_name":"作者回复","user_name_real":"王宝令","uid":"1269969","ctime":1553263347,"ip_address":"","comment_id":78333,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1553131479","product_id":100023901,"comment_content":"老师，io耗时 和CPU耗时 我没找到合适的计算方式，能指点下吗？","like_count":0,"discussions":[{"author":{"id":1269969,"avatar":"https://static001.geekbang.org/account/avatar/00/13/60/d1/8efa89ab.jpg","nickname":"王宝令","note":"","ucode":"4FE19F5BC32FCA","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":444051,"discussion_content":"apm工具比较实用，能统计到每个方法的耗时","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1553263347,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":78332,"user_name":"大禹☀️👻","can_delete":false,"product_type":"c1","uid":1104670,"ip_address":"","ucode":"7C692FB8EEEC9B","user_header":"https://static001.geekbang.org/account/avatar/00/10/db/1e/6e245137.jpg","comment_is_top":false,"comment_ctime":1553131424,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1553131424","product_id":100023901,"comment_content":"怎么估算I&#47;O耗时和CPU耗时？","like_count":0},{"had_liked":false,"id":78330,"user_name":"君子幽幽","can_delete":false,"product_type":"c1","uid":1125551,"ip_address":"","ucode":"4C4841813945C4","user_header":"https://static001.geekbang.org/account/avatar/00/11/2c/af/1817e787.jpg","comment_is_top":false,"comment_ctime":1553131183,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1553131183","product_id":100023901,"comment_content":"看着都是明白的知识点，但是工作时缺没总结出来，少了直到方向。谢谢老师的提炼。","like_count":0},{"had_liked":false,"id":78327,"user_name":"王肖武","can_delete":false,"product_type":"c1","uid":1282385,"ip_address":"","ucode":"561AF05284EBE2","user_header":"https://static001.geekbang.org/account/avatar/00/13/91/51/234f9a73.jpg","comment_is_top":false,"comment_ctime":1553131052,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1553131052","product_id":100023901,"comment_content":"关于线程数，这是我听到的比较有说服力的一篇文章","like_count":0},{"had_liked":false,"id":78326,"user_name":"冰激凌的眼泪","can_delete":false,"product_type":"c1","uid":1087945,"ip_address":"","ucode":"5DCB974667E93A","user_header":"https://static001.geekbang.org/account/avatar/00/10/99/c9/a7c77746.jpg","comment_is_top":false,"comment_ctime":1553130898,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1553130898","product_id":100023901,"comment_content":"线程数量的设置更清晰了","like_count":0},{"had_liked":false,"id":78313,"user_name":"多襄丸","can_delete":false,"product_type":"c1","uid":1074310,"ip_address":"","ucode":"1AA1497C5A293C","user_header":"https://static001.geekbang.org/account/avatar/00/10/64/86/f5a9403a.jpg","comment_is_top":false,"comment_ctime":1553129870,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1553129870","product_id":100023901,"comment_content":"因为是io密集型:<br><br>最佳线程数: cpu核数*(1+R)<br><br>若 2*cpu核数+1 = cpu核数*(1+R)<br><br>则R=(1+cpu核数)&#47;cpu核数<br><br>那么 思考题中的经验值 在 R等于上述值即单核单线程下一个周期内 io耗时&#47;cpu耗=(1+cpu核数)&#47;cpu核数 时，实际线程数 与 理论线程数相等 <br><br>否则思考题中的经验公式 不能作为理论最佳线程数参考","like_count":0},{"had_liked":false,"id":78309,"user_name":"落叶","can_delete":false,"product_type":"c1","uid":1116169,"ip_address":"","ucode":"E7D26B673C98E5","user_header":"https://static001.geekbang.org/account/avatar/00/11/08/09/1504f5ca.jpg","comment_is_top":false,"comment_ctime":1553129416,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1553129416","product_id":100023901,"comment_content":"不合理，没有考虑IO操作时，导致CPU利用率低。","like_count":0},{"had_liked":false,"id":78293,"user_name":"而立斋","can_delete":false,"product_type":"c1","uid":1087258,"ip_address":"","ucode":"5FED6E9E148195","user_header":"https://static001.geekbang.org/account/avatar/00/10/97/1a/389eab84.jpg","comment_is_top":false,"comment_ctime":1553126893,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1553126893","product_id":100023901,"comment_content":"最佳线程数 =CPU 核数 * [ 1 +（I&#47;O 耗时 &#47; CPU 耗时）]，这个公式是针对io密集型的，io跟cpu的耗时比最小是1，这还是他们两利用率一样的情况，思考题给的2cpu+1只是一个最低配吧","like_count":0},{"had_liked":false,"id":78290,"user_name":"高源","can_delete":false,"product_type":"c1","uid":1048887,"ip_address":"","ucode":"751B41FD38EF7D","user_header":"https://static001.geekbang.org/account/avatar/00/10/01/37/12e4c9c9.jpg","comment_is_top":false,"comment_ctime":1553126669,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1553126669","product_id":100023901,"comment_content":"i&#47;o密集型执行i&#47;o操作时线程被阻塞，如果多于处理器核心数1个处理器，线程发生i&#47;o阻塞时cpu可以进行线程上下文切换的线程","like_count":0},{"had_liked":false,"id":78287,"user_name":"往事随风，顺其自然","can_delete":false,"product_type":"c1","uid":1235692,"ip_address":"","ucode":"F266EC6B143E38","user_header":"https://static001.geekbang.org/account/avatar/00/12/da/ec/779c1a78.jpg","comment_is_top":false,"comment_ctime":1553126546,"is_pvip":false,"replies":[{"id":"28538","content":"是的","user_name":"作者回复","user_name_real":"王宝令","uid":"1269969","ctime":1553141094,"ip_address":"","comment_id":78287,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1553126546","product_id":100023901,"comment_content":"这个要具体情况具体分析","like_count":0,"discussions":[{"author":{"id":1269969,"avatar":"https://static001.geekbang.org/account/avatar/00/13/60/d1/8efa89ab.jpg","nickname":"王宝令","note":"","ucode":"4FE19F5BC32FCA","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":444034,"discussion_content":"是的","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1553141094,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":78286,"user_name":"undifined","can_delete":false,"product_type":"c1","uid":1068920,"ip_address":"","ucode":"449CB4CD2DC089","user_header":"https://static001.geekbang.org/account/avatar/00/10/4f/78/c3d8ecb0.jpg","comment_is_top":false,"comment_ctime":1553126493,"is_pvip":false,"replies":[{"id":"28646","content":"读写分离，慢sql打到一台db上，神仙也没着<br>","user_name":"作者回复","user_name_real":"王宝令","uid":"1269969","ctime":1553257384,"ip_address":"","comment_id":78286,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1553126493","product_id":100023901,"comment_content":"老师 那 DB 的连接池该怎么配置，我们经常遇到查询阻塞导致线程池被占用完，其他的查询被拒绝的情况，这个问题该怎么解决","like_count":0,"discussions":[{"author":{"id":1269969,"avatar":"https://static001.geekbang.org/account/avatar/00/13/60/d1/8efa89ab.jpg","nickname":"王宝令","note":"","ucode":"4FE19F5BC32FCA","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":444033,"discussion_content":"读写分离，慢sql打到一台db上，神仙也没着\n","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1553257384,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":78281,"user_name":"西西弗与卡夫卡","can_delete":false,"product_type":"c1","uid":1001710,"ip_address":"","ucode":"B4C27B8335B76A","user_header":"https://static001.geekbang.org/account/avatar/00/0f/48/ee/872ad07e.jpg","comment_is_top":false,"comment_ctime":1553125668,"is_pvip":true,"discussion_count":0,"race_medal":0,"score":"1553125668","product_id":100023901,"comment_content":"敲小黑板，知识点，以前还真没注意","like_count":0}]}