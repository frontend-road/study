{"id":613046,"title":"50｜函数的参数：怎样实现函数与外部数据通信？","content":"<p>PEP 484链接：<a href=\"https://peps.python.org/pep-0484/\">https://peps.python.org/pep-0484/</a></p><p><strong>课后习题</strong><br>\n请你编写一个函数，计算 PI 的近似值。函数的参数越大，PI 的值越精确。</p><p><strong>课程代码、课件及其他相关资料地址</strong><br>\n<a href=\"https://gitee.com/wilsonyin/zero-basics-python\">https://gitee.com/wilsonyin/zero-basics-python</a></p>","comments":[{"had_liked":false,"id":377784,"user_name":"Geek_Mike","can_delete":false,"product_type":"c3","uid":3196376,"ip_address":"云南","ucode":"CFA942192C3B74","user_header":"https://static001.geekbang.org/account/avatar/00/30/c5/d8/c5509b9c.jpg","comment_is_top":false,"comment_ctime":1689179282,"is_pvip":false,"replies":[{"id":138183,"content":"不错！！\n你提供的代码使用了反余弦函数来计算 \\(\\pi\\) 的值，这是一种可行的方法。不过，如果你想通过增加参数来提高精确度，可以考虑使用一种数值方法，例如蒙特卡洛方法或者利用数学公式，例如Leibniz公式。\n\n下面是使用Leibniz公式计算 \\(\\pi\\) 的一个示例：\n\n\\[\n\\pi = 4 \\times \\left(1 - \\frac{1}{3} + \\frac{1}{5} - \\frac{1}{7} + \\frac{1}{9} - \\frac{1}{11} + \\ldots\\right)\n\\]\n\n代码如下：\n\n```python\ndef Pi(terms: int):\n    pi = 0\n    for i in range(terms):\n        pi += ((-1) ** i) &#47; (2 * i + 1)\n    pi *= 4\n    return pi\n\n# 测试函数\nterms = 1000000\napproximate_pi = Pi(terms)\nprint(f&quot;Approximate value of PI with {terms} terms: {approximate_pi}&quot;)\n```\n\n此代码中的 `terms` 参数控制了近似计算中使用的项数。项数越多，近似值就越精确。例如，当 `terms` 为 \\(1000000\\) 时，你会得到一个相当精确的 \\(\\pi\\) 值。\n\n你可以根据需要调整 `terms` 的值来获得所需的精确度。","user_name":"作者回复","user_name_real":"编辑","uid":1056235,"ctime":1691595418,"ip_address":"甘肃","comment_id":377784,"utype":1}],"discussion_count":2,"race_medal":0,"score":2,"product_id":100310001,"comment_content":"# 编写一个函数，计算 PI 的近似值。函数的参数越大，PI 的值越精确。\nimport math\n\ndef Pi(x:int):\n    pi = math.acos(-1)\n    print(f&#39;{pi:.{x}f}&#39;)\n\nPi(20)","like_count":2,"discussions":[{"author":{"id":1056235,"avatar":"https://static001.geekbang.org/account/avatar/00/10/1d/eb/b2123759.jpg","nickname":"尹会生","note":"","ucode":"D1093DBD093617","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":625360,"discussion_content":"不错！！\n你提供的代码使用了反余弦函数来计算 \\(\\pi\\) 的值，这是一种可行的方法。不过，如果你想通过增加参数来提高精确度，可以考虑使用一种数值方法，例如蒙特卡洛方法或者利用数学公式，例如Leibniz公式。\n\n下面是使用Leibniz公式计算 \\(\\pi\\) 的一个示例：\n\n\\[\n\\pi = 4 \\times \\left(1 - \\frac{1}{3} + \\frac{1}{5} - \\frac{1}{7} + \\frac{1}{9} - \\frac{1}{11} + \\ldots\\right)\n\\]\n\n代码如下：\n\n```python\ndef Pi(terms: int):\n    pi = 0\n    for i in range(terms):\n        pi += ((-1) ** i) / (2 * i + 1)\n    pi *= 4\n    return pi\n\n# 测试函数\nterms = 1000000\napproximate_pi = Pi(terms)\nprint(f&#34;Approximate value of PI with {terms} terms: {approximate_pi}&#34;)\n```\n\n此代码中的 `terms` 参数控制了近似计算中使用的项数。项数越多，近似值就越精确。例如，当 `terms` 为 \\(1000000\\) 时，你会得到一个相当精确的 \\(\\pi\\) 值。\n\n你可以根据需要调整 `terms` 的值来获得所需的精确度。","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1691595418,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"甘肃","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":1,"child_discussions":[{"author":{"id":3196376,"avatar":"https://static001.geekbang.org/account/avatar/00/30/c5/d8/c5509b9c.jpg","nickname":"Geek_Mike","note":"","ucode":"CFA942192C3B74","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1056235,"avatar":"https://static001.geekbang.org/account/avatar/00/10/1d/eb/b2123759.jpg","nickname":"尹会生","note":"","ucode":"D1093DBD093617","race_medal":0,"user_type":2,"is_pvip":false},"discussion":{"id":625473,"discussion_content":"感谢老师的指点，我下来好好研究一下😃","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1691730449,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":625360,"ip_address":"云南","group_id":0},"score":625473,"extra":""}]}]},{"had_liked":false,"id":367496,"user_name":"yanyu-xin","can_delete":false,"product_type":"c3","uid":1899757,"ip_address":"广东","ucode":"3AA389F9E4C236","user_header":"","comment_is_top":false,"comment_ctime":1675263471,"is_pvip":false,"replies":null,"discussion_count":0,"race_medal":0,"score":2,"product_id":100310001,"comment_content":"import random\n\ndef pi_cal(num_halt = 1000000 ):\n    &quot;&quot;&quot;计算PI值。\n        参数：num_halt = 1000000 精度(循环次数)初始值\n        蒙特卡洛法计算圆周率。设想一个正方形，边长a=2，则其内接圆的半径r=1，则圆和正方形的面积比是：Sy&#47;Sz = PI*r*r&#47;a*a = PI&#47;4。\n        由此：PI = 4*Sy&#47;Sz。\n        蒙特卡洛法来获得面积比Sy&#47;Sz：让计算机产生很多的随机点(x,y)，其中x、y都是[0,1]之间的随机数，\n        可以用判断（X*X + Y*Y) 是否小于1的方法来确定是否在圆内，则圆内的点数代表圆面积，总点数代表总面积，两者相除就是面积比Sy&#47;Sz。&quot;&quot;&quot;\n    num_cir = 0         #随机点在圆内的计数器\n    for i in range(num_halt): \n        x = random.random()         #获得随机点的横坐标\n        y = random.random()         #获得随机点的纵坐标\n        if x*x + y*y &lt; 1 :          #随机点(x,y)在圆内\n            num_cir = num_cir + 1   #圆内计数器+1\n        pi = 4*num_cir&#47;num_halt\n    print(num_halt,&quot;    &quot;, pi)\n\nprint(&quot;\\n实验次数     计算结果&quot;)\npi_cal()\npi_cal(5000000)\npi_cal(10000000)\npi_cal(50000000)","like_count":4},{"had_liked":false,"id":364498,"user_name":"Matthew","can_delete":false,"product_type":"c3","uid":2843865,"ip_address":"江苏","ucode":"96093089773740","user_header":"https://thirdwx.qlogo.cn/mmopen/vi_32/PiajxSqBRaEKSVuNarJuDhBSvHY0giaq6yriceEBKiaKuc04wCYWOuso50noqDexaPJJibJN7PHwvcQppnzsDia1icZkw/132","comment_is_top":false,"comment_ctime":1671031437,"is_pvip":false,"replies":null,"discussion_count":1,"race_medal":0,"score":2,"product_id":100310001,"comment_content":"import random\n\n# 蒙特卡洛方法\ndef cal_pi(n:int) -&gt; float:\n    count = 0\n\n    for i in range(int(n)):\n        x = random.random()\n        y = random.random()\n        d = (x - 0.5) ** 2 + (y - 0.5) ** 2\n        if d &lt;= 0.5 ** 2:\n            count+=1\n        else:\n            pass\n\n    return (4*count)&#47;n\n\n# 测试验证\nn = input(&quot;请输入：&quot;)\nprint(f&quot;PI的近似值为：{cal_pi(int(n))}&quot;)","like_count":3,"discussions":[{"author":{"id":1035744,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/cd/e0/c85bb948.jpg","nickname":"朱雯","note":"","ucode":"064C45FBF6B51F","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":601198,"discussion_content":"请问一下这个蒙特卡洛方法是啥意思啊，我看了半天看不懂，资料也没看懂","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1675141007,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":"北京","group_id":0},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":365591,"user_name":"江江儿嘛哩哄","can_delete":false,"product_type":"c3","uid":1928117,"ip_address":"浙江","ucode":"E7D6E59551B7F1","user_header":"https://static001.geekbang.org/account/avatar/00/1d/6b/b5/14586a78.jpg","comment_is_top":false,"comment_ctime":1672805315,"is_pvip":false,"replies":null,"discussion_count":0,"race_medal":0,"score":2,"product_id":100310001,"comment_content":"#蒙特卡洛模拟\nimport random\n\nn = input(&quot;请输入参数：&quot;)\nhits = 0\nfor i in range(int(n)):\n    x, y = random.random(), random.random()\n    dist = (x**2 + y**2)**0.5\n    if dist &lt;= 1.0:\n        hits = hits + 1\npi = (4 * hits) &#47; int(n)\n\nprint(f&quot;圆周率是：{pi}&quot;)","like_count":1},{"had_liked":false,"id":395248,"user_name":"尹长拟","can_delete":false,"product_type":"c3","uid":3074007,"ip_address":"北京","ucode":"1EBD42B5BBD934","user_header":"","comment_is_top":false,"comment_ctime":1729849290,"is_pvip":false,"replies":null,"discussion_count":0,"race_medal":0,"score":2,"product_id":100310001,"comment_content":"# 定义一个函数接受参数\ndef foo_pi(n):\n    pi = 0\n    num_1 = 1\n    for i in range(n):\n        # 使用莱布尼茨级数的公式计算近视π的值\n        pi += num_1 * 4 &#47;(i*2 + 1)\n        num_1 *=-1\n    return pi\n\nnum_pi = foo_pi(10000000)\nprint(num_pi)","like_count":0},{"had_liked":false,"id":389326,"user_name":"吃鱼","can_delete":false,"product_type":"c3","uid":1898478,"ip_address":"广东","ucode":"C4EF2036F36000","user_header":"https://static001.geekbang.org/account/avatar/00/1c/f7/ee/f7f45ca9.jpg","comment_is_top":false,"comment_ctime":1712126867,"is_pvip":false,"replies":null,"discussion_count":0,"race_medal":0,"score":2,"product_id":100310001,"comment_content":"请问函数与外部通信的方式只能是参数吗？如果定义一个全局的可变变量，函数也可以直接操作，比如可以直接增减列表的值。虽然可以这样，但是不是不建议这种方式？为啥呢？","like_count":0},{"had_liked":false,"id":388923,"user_name":"陈斯佳","can_delete":false,"product_type":"c3","uid":1259323,"ip_address":"加拿大","ucode":"C236F874FC767A","user_header":"https://static001.geekbang.org/account/avatar/00/13/37/3b/495e2ce6.jpg","comment_is_top":false,"comment_ctime":1711179545,"is_pvip":false,"replies":null,"discussion_count":0,"race_medal":0,"score":2,"product_id":100310001,"comment_content":"形参英文名是parameter，实参是argument","like_count":0},{"had_liked":false,"id":388152,"user_name":"认真哥","can_delete":false,"product_type":"c3","uid":1097552,"ip_address":"江苏","ucode":"EC7A3B1DA4729B","user_header":"https://static001.geekbang.org/account/avatar/00/10/bf/50/eb2ac6cb.jpg","comment_is_top":false,"comment_ctime":1709520338,"is_pvip":false,"replies":null,"discussion_count":1,"race_medal":0,"score":2,"product_id":100310001,"comment_content":"请教下为什么视频每次看了不到10分钟左右就会自动停止？","like_count":0,"discussions":[{"author":{"id":3838010,"avatar":"","nickname":"8000tank","note":"","ucode":"C5DC98A0EB57CE","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":649134,"discussion_content":"私认为，那些“暂停”应该只是老师录屏中的人工暂停而已，等着就会继续播放了","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1722848029,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":"北京","group_id":0},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":385037,"user_name":"蓝定月","can_delete":false,"product_type":"c3","uid":1497795,"ip_address":"上海","ucode":"3765E44A958022","user_header":"https://static001.geekbang.org/account/avatar/00/16/da/c3/4133a67a.jpg","comment_is_top":false,"comment_ctime":1701958143,"is_pvip":false,"replies":null,"discussion_count":0,"race_medal":0,"score":2,"product_id":100310001,"comment_content":"GPT方法，跟老师给的结果是一样的\ndef calculate_pi(n_terms):\n    numerator = 4.0\n    denominator = 1.0\n    operation = 1.0\n    pi = 0.0\n    for _ in range(n_terms):\n        pi += operation * (numerator &#47; denominator)\n        denominator += 2.0\n        operation *= -1.0\n    return pi\n\n\nprint(calculate_pi(100000))","like_count":0},{"had_liked":false,"id":384897,"user_name":"Geek_0c747b","can_delete":false,"product_type":"c3","uid":3790728,"ip_address":"广东","ucode":"7D7251D7B98B08","user_header":"","comment_is_top":false,"comment_ctime":1701764071,"is_pvip":false,"replies":null,"discussion_count":0,"race_medal":0,"score":2,"product_id":100310001,"comment_content":"ChatGPT:\n\nimport random\n\ndef estimate_pi(n):\n    num_points_circle = 0\n    num_points_total = 0\n\n    for _ in range(n):\n        x = random.uniform(0, 1)\n        y = random.uniform(0, 1)\n        distance = x**2 + y**2\n        if distance &lt;= 1:\n            num_points_circle += 1\n        num_points_total += 1\n\n    return 4 * num_points_circle &#47; num_points_total\n\nprint(estimate_pi(100000))","like_count":0},{"had_liked":false,"id":383519,"user_name":"饭饭之梦","can_delete":false,"product_type":"c3","uid":2764327,"ip_address":"广东","ucode":"640123EF480054","user_header":"https://static001.geekbang.org/account/avatar/00/2a/2e/27/edc48292.jpg","comment_is_top":false,"comment_ctime":1699197379,"is_pvip":false,"replies":null,"discussion_count":2,"race_medal":0,"score":3,"product_id":100310001,"comment_content":"为什么大家都知道这个蒙特卡洛方法，我是不是缺少了什么知识，还是我不配转学python","like_count":0,"discussions":[{"author":{"id":3838010,"avatar":"","nickname":"8000tank","note":"","ucode":"C5DC98A0EB57CE","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":649133,"discussion_content":"自信点，你只是缺少了“PI值是如何用数学知识计算出来的（不止一种计算方式）”的知识而已~","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1722847932,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":"北京","group_id":0},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":2383299,"avatar":"https://static001.geekbang.org/account/avatar/00/24/5d/c3/b8bb888c.jpg","nickname":"依托答辩","note":"","ucode":"4BE79E8A030813","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":632408,"discussion_content":"他们看答案了（狗头）","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1700734046,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":"上海","group_id":0},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":382088,"user_name":"MarkG","can_delete":false,"product_type":"c3","uid":3675806,"ip_address":"山东","ucode":"454082595FE769","user_header":"https://static001.geekbang.org/account/avatar/00/38/16/9e/48621655.jpg","comment_is_top":false,"comment_ctime":1696673177,"is_pvip":false,"replies":null,"discussion_count":0,"race_medal":0,"score":3,"product_id":100310001,"comment_content":"# 蒙特卡洛方法 - 使用几何概率来求 π 的方法\nimport random\n\ndef approximate_pi(num_iterations):\n    num_points_inside_circle = 0\n    num_points_total = 0\n\n    for _ in range(num_iterations):\n        x = random.uniform(0, 1)\n        y = random.uniform(0, 1)\n        distance_squared = x**2 + y**2\n        \n        if distance_squared &lt;= 1:\n            num_points_inside_circle += 1\n        \n        num_points_total += 1\n\n    return 4 * num_points_inside_circle &#47; num_points_total\n\nprint(approximate_pi(100))\nprint(approximate_pi(1000))\nprint(approximate_pi(10000))\nprint(approximate_pi(100000))\nprint(approximate_pi(1000000))\nprint(approximate_pi(10000000))\nprint(approximate_pi(100000000))","like_count":0},{"had_liked":false,"id":380486,"user_name":"好困啊","can_delete":false,"product_type":"c3","uid":2094450,"ip_address":"上海","ucode":"D49429660F2DC8","user_header":"https://static001.geekbang.org/account/avatar/00/1f/f5/72/8cbc5cb3.jpg","comment_is_top":false,"comment_ctime":1693669809,"is_pvip":false,"replies":null,"discussion_count":0,"race_medal":0,"score":3,"product_id":100310001,"comment_content":"# 计算pi的近似值\nimport random\n\ndef aproximate_pi(n):\n    &quot;&quot;&quot;\n    使用蒙特卡罗方法估计pi的值。\n\n    参数：\n    n -- 投掷点的数量\n\n    返回：\n    pi的近似值\n    &quot;&quot;&quot;\n    inside_circle = 0\n\n    for _ in range(n):\n        x,y = random.random(),random.random()\n        if x**2 + y**2 &lt;= 1:\n            inside_circle += 1\n\n    return (inside_circle &#47; n) * 4","like_count":0},{"had_liked":false,"id":378004,"user_name":"Greenery","can_delete":false,"product_type":"c3","uid":3566765,"ip_address":"","ucode":"16111129C9EBA2","user_header":"https://static001.geekbang.org/account/avatar/00/36/6c/ad/0a694b50.jpg","comment_is_top":false,"comment_ctime":1689655193,"is_pvip":false,"replies":null,"discussion_count":0,"race_medal":0,"score":3,"product_id":100310001,"comment_content":"def get_pi(n: int) -&gt; float:\n    pi = 0\n    for i in range(1, n + 1):\n        pi += 1 &#47; i ** 2\n    return pi\n\n\nimport math\n\nfor i in range(1, 10000):\n    myPi = math.sqrt(get_pi(i) * 6)\n    print(&quot;my pi is&quot;, myPi, &quot;, diff=&quot;, abs(myPi - math.pi))","like_count":0},{"had_liked":false,"id":375900,"user_name":"ラ キチ","can_delete":false,"product_type":"c3","uid":1554636,"ip_address":"上海","ucode":"996486D3D04EBC","user_header":"https://static001.geekbang.org/account/avatar/00/17/b8/cc/da1b2804.jpg","comment_is_top":false,"comment_ctime":1686118875,"is_pvip":false,"replies":null,"discussion_count":0,"race_medal":0,"score":3,"product_id":100310001,"comment_content":"def calculate_pi(n):\n    pi = 0\n    sign = 1\n    for i in range(1, n * 2, 2):\n        pi += sign * (1 &#47; i)\n        sign *= -1\n    return pi * 4\n\n\nprint(calculate_pi(10000000))","like_count":0},{"had_liked":false,"id":374888,"user_name":"Geek_943787","can_delete":false,"product_type":"c3","uid":3023953,"ip_address":"浙江","ucode":"E16967E38B57A8","user_header":"","comment_is_top":false,"comment_ctime":1684575443,"is_pvip":false,"replies":null,"discussion_count":1,"race_medal":0,"score":3,"product_id":100310001,"comment_content":"def euler_pi(n):\n  # n is the number of terms in the series\n    s = 0 # initialize the sum\n    for i in range(1, n+1):\n        s += 1 &#47; i**2 # add the i-th term to the sum\n    pi = (6 * s)**0.5 # calculate pi from the sum\n    return pi # return the result\nprint(euler_pi(300))\nprint(euler_pi(30000))\n\ndef euler_pi(n):\n  # n is the number of terms in the series\n    s = 0 # initialize the sum\n    for i in range(n+1):\n        s += (1 &#47; 16**i) * (4 &#47; (8*i+1) - 2 &#47; (8*i+4) - 1 &#47; (8*i+5) - 1 &#47; (8*i+6)) # add the i-th term to the sum\n    pi = s # calculate pi from the sum\n    return pi # return the result\nprint(euler_pi(30))\nprint(euler_pi(30000))","like_count":0,"discussions":[{"author":{"id":1362163,"avatar":"https://static001.geekbang.org/account/avatar/00/14/c8/f3/a147bdb3.jpg","nickname":"Tuesday","note":"","ucode":"57B0E8A9ECB8D9","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":620003,"discussion_content":"请教下下面的PI模拟计算是怎么做出来的","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1685694722,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":"山东","group_id":0},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":374222,"user_name":"titanium","can_delete":false,"product_type":"c3","uid":1320860,"ip_address":"美国","ucode":"E36BAB95393BC4","user_header":"https://static001.geekbang.org/account/avatar/00/14/27/9c/3199a559.jpg","comment_is_top":false,"comment_ctime":1683724277,"is_pvip":false,"replies":null,"discussion_count":0,"race_medal":0,"score":3,"product_id":100310001,"comment_content":"import random\n\ndef monte_carlo_pi(n):\n    start = 0\n    for i in range(n):\n        x = random.uniform(-1, 1)\n        y = random.uniform(-1, 1)\n        if x ** 2 + y ** 2 &lt;= 1:\n            start += 1\n    return start * 4 &#47; n \n\nprint(monte_carlo_pi(100000000))","like_count":0},{"had_liked":false,"id":368189,"user_name":"sunny","can_delete":false,"product_type":"c3","uid":1904632,"ip_address":"江苏","ucode":"12350F6FF873D1","user_header":"https://static001.geekbang.org/account/avatar/00/1d/0f/f8/e1b9c1cc.jpg","comment_is_top":false,"comment_ctime":1675993677,"is_pvip":false,"replies":null,"discussion_count":0,"race_medal":0,"score":3,"product_id":100310001,"comment_content":"#请你编写一个函数，计算 PI 的近似值。函数的参数越大，PI 的值越精确。\n\n\nimport random\n\n# 传入需要生成的点的数量，点数量越多，pi值越精确\ndef monte_carlo_method(point_count):\n    # 在 1x1 的正方形内随机生成 point_count 数量的点\n    point_list = [(random.random(), random.random()) for i in range(point_count)]\n    count = 0\n    # 遍历计算这些点落在 1x1 正方形内切圆内的数量\n    for x, y in point_list:\n        # 求随机点到圆心到距离\n        distance = ((x - 0.5) ** 2 + (y - 0.5) ** 2) ** 0.5\n        # 如果距离小于 0.5，数量加1\n        if distance &lt; 0.5:\n            count += 1\n    # count&#47;point_count = pi &#47; 4， 求pi\n    pi = count &#47; point_count * 4\n    return pi\n\nprint(f&#39;pi = {monte_carlo_method(1000000)}&#39;)","like_count":0}]}