{"id":699400,"title":"01｜LangChain系统安装和快速入门","content":"<p>你好，我是黄佳，欢迎来到LangChain实战课！</p><p>在我们开始正式的学习之前，先做一些基本知识储备。虽然大语言模型的使用非常简单，但是如果我们通过API来进行应用开发，那么还是有些基础知识应该先了解了解，比如什么是大模型，怎么安装LangChain，OpenAI的API有哪些类型，以及常用的开源大模型从哪里下载等等。</p><h2>什么是大语言模型</h2><p>大语言模型是一种人工智能模型，通常使用深度学习技术，比如神经网络，来理解和生成人类语言。这些模型的“大”在于它们的参数数量非常多，可以达到数十亿甚至更多，这使得它们能够理解和生成高度复杂的语言模式。</p><p>你可以<strong>将大语言模型想象成一个巨大的预测机器，其训练过程主要基于“猜词”</strong>：给定一段文本的开头，它的任务就是预测下一个词是什么。模型会根据大量的训练数据（例如在互联网上爬取的文本），试图理解词语和词组在语言中的用法和含义，以及它们如何组合形成意义。它会通过不断地学习和调整参数，使得自己的预测越来越准确。</p><p><img src=\"https://static001.geekbang.org/resource/image/57/e5/5730e6debb8c1a0876f79814c0fb78e5.png?wh=744x478\" alt=\"\" title=\"语言模型帮我们预测下一个词\"></p><p>比如我们给模型一个句子：“今天的天气真”，模型可能会预测出“好”作为下一个词，因为在它看过的大量训练数据中，“今天的天气真好”是一个常见的句子。这种预测并不只基于词语的统计关系，还包括对上下文的理解，甚至有时能体现出对世界常识的认知，比如它会理解到，人们通常会在天气好的时候进行户外活动。因此也就能够继续生成或者说推理出相关的内容。</p><!-- [[[read_end]]] --><p>但是，大语言模型并不完全理解语言，它们没有人类的情感、意识或理解力。它们只是通过复杂的数学函数学习到的语言模式，一个概率模型来做预测，所以有时候它们会犯错误，或者生成不合理甚至偏离主题的内容。</p><p>咱们当然还是主说LangChain。<strong>LangChain 是一个全方位的、基于大语言模型这种预测能力的应用开发工具</strong>，它的灵活性和模块化特性使得处理语言模型变得极其简便。不论你在何时何地，都能利用它流畅地调用语言模型，并基于语言模型的“预测”或者说“推理”能力开发新的应用。</p><p><img src=\"https://static001.geekbang.org/resource/image/62/0c/6259a17134fd5a080fc3d9856a08050c.png?wh=813x226\" alt=\"\" title=\"LangChain 的标志，我想是1只能说会道的鹦鹉+1个链条\"></p><p>LangChain 的预构建链功能，就像乐高积木一样，无论你是新手还是经验丰富的开发者，都可以选择适合自己的部分快速构建项目。对于希望进行更深入工作的开发者，LangChain 提供的模块化组件则允许你根据自己的需求定制和创建应用中的功能链条。</p><p>LangChain支持Python和JavaScript两个开发版本，我们这个教程中全部使用Python版本进行讲解。</p><h2>安装LangChain</h2><p>LangChain的基本安装特别简单。</p><pre><code class=\"language-plain\">pip install langchain\n</code></pre><p>这是安装 LangChain 的最低要求。这里我要提醒你一点，LangChain 要与各种模型、数据存储库集成，比如说最重要的OpenAI的API接口，比如说开源大模型库HuggingFace Hub，再比如说对各种向量数据库的支持。默认情况下，是没有同时安装所需的依赖项。</p><p>也就是说，当你 <code>pip install langchain</code> 之后，可能还需要 <code>pip install openai</code>、<code>pip install chroma</code>（一种向量数据库）……</p><p>用下面两种方法，我们就可以在安装 LangChain 的方法时，引入大多数的依赖项。</p><p>安装LangChain时包括常用的开源LLM（大语言模型） 库：</p><pre><code class=\"language-plain\">pip install langchain[llms]\n</code></pre><p>安装完成之后，还需要更新到 LangChain 的最新版本，这样才能使用较新的工具。</p><pre><code class=\"language-plain\">pip install --upgrade langchain\n</code></pre><p>如果你想从源代码安装，可以克隆存储库并运行：</p><pre><code class=\"language-plain\">pip install -e\n</code></pre><p>我个人觉得非常好的学习渠道也在这儿分享给你。</p><p>LangChain 的 <a href=\"https://github.com/langchain-ai/langchain\">GitHub</a> 社区非常活跃，你可以在这里找到大量的教程和最佳实践，也可以和其他开发者分享自己的经验和观点。</p><p>LangChain也提供了详尽的 <a href=\"https://python.langchain.com/docs/get_started\">API 文档</a>，这是你在遇到问题时的重要参考。不过呢，我觉得因为 LangChain太新了，有时你可能会发现文档中有一些错误。在这种情况下，你可以考虑更新你的版本，或者在官方平台上提交一个问题反馈。</p><p>当我遇到问题，我通常会在LangChain的GitHub开一个Issue，很快就可以得到解答。</p><p><img src=\"https://static001.geekbang.org/resource/image/ff/a8/ff014c517a428cc970e26a34b700c2a8.png?wh=2072x1678\" alt=\"\" title=\"我 Log 的 LangChain Issue 得到了解答\"></p><p>跟着LangChain其快速的更新步伐，你就能在这个领域取得显著的进步。</p><h2>OpenAI API</h2><p>下面我想说一说OpenAI的API。</p><p>关于ChatGPT和GPT-4，我想就没有必要赘言了，网上已经有太多资料了。但是要继续咱们的LangChain实战课，你需要对OpenAI的API有进一步的了解。因为，<strong>LangChain本质上就是对各种大模型提供的API的套壳，是为了方便我们使用这些API，搭建起来的一些框架、模块和接口。</strong></p><p>因此，要了解LangChain的底层逻辑，需要了解大模型的API的基本设计思路。而目前接口最完备的、同时也是最强大的大语言模型，当然是OpenAI提供的GPT家族模型。</p><p><img src=\"https://static001.geekbang.org/resource/image/41/e4/413abcbb7c08bd0a2655a15368b980e4.png?wh=3840x2093\" alt=\"\"></p><p>当然，要使用OpenAI API，你需要先用科学的方法进行注册，并得到一个API Key。</p><p><img src=\"https://static001.geekbang.org/resource/image/20/bf/205151183f71bdd86c25c01f99e248bf.png?wh=1429x737\" alt=\"\"></p><p>有了OpenAI的账号和Key，你就可以在面板中看到各种信息，比如模型的费用、使用情况等。下面的图片显示了各种模型的访问数量限制信息。其中，TPM和RPM分别代表tokens-per-minute、requests-per-minute。也就是说，对于GPT-4，你通过API最多每分钟调用200次、传输40000个字节。</p><p><img src=\"https://static001.geekbang.org/resource/image/66/f3/66e055f3c48b4bc3e11ffe0e85a5c7f3.png?wh=2229x1576\" alt=\"\"></p><p>这里，我们需要重点说明的两类模型，就是图中的Chat Model和Text Model。这两类Model，是大语言模型的代表。当然，OpenAI还提供Image、Audio和其它类型的模型，目前它们不是LangChain所支持的重点，模型数量也比较少。</p><ul>\n<li><strong>Chat Model，聊天模型</strong>，用于产生人类和AI之间的对话，代表模型当然是gpt-3.5-turbo（也就是ChatGPT）和GPT-4。当然，OpenAI还提供其它的版本，gpt-3.5-turbo-0613代表ChatGPT在2023年6月13号的一个快照，而gpt-3.5-turbo-16k则代表这个模型可以接收16K长度的Token，而不是通常的4K。（注意了，gpt-3.5-turbo-16k并未开放给我们使用，而且你传输的字节越多，花钱也越多）</li>\n<li><strong>Text Model，文本模型</strong>，在ChatGPT出来之前，大家都使用这种模型的API来调用GPT-3，文本模型的代表作是text-davinci-003（基于GPT3）。而在这个模型家族中，也有专门训练出来做文本嵌入的text-embedding-ada-002，也有专门做相似度比较的模型，如text-similarity-curie-001。</li>\n</ul><p>上面这两种模型，提供的功能类似，都是接收对话输入（input，也叫prompt），返回回答文本（output，也叫response）。但是，它们的调用方式和要求的输入格式是有区别的，这个我们等下还会进一步说明。</p><p>下面我们用简单的代码段说明上述两种模型的调用方式。先看比较原始的Text模型（GPT3.5之前的版本）。</p><h3>调用Text模型</h3><p>第1步，先注册好你的API Key。</p><p>第2步，用 <code>pip install openai</code> 命令来安装OpenAI库。</p><p>第3步，导入 OpenAI API Key。</p><p>导入API Key有多种方式，其中之一是通过下面的代码：</p><pre><code class=\"language-plain\">import os\nos.environ[\"OPENAI_API_KEY\"] = '你的Open API Key'\n</code></pre><p>OpenAI库就会查看名为OPENAI_API_KEY的环境变量，并使用它的值作为API密钥。</p><p>也可以像下面这样先导入OpenAI库，然后指定api_key的值。</p><pre><code class=\"language-plain\">import openai\nopenai.api_key = '你的Open API Key'\n</code></pre><p>当然，这种把Key直接放在代码里面的方法最不可取，因为你一不小心共享了代码，密钥就被别人看到了，他就可以使用你的GPT-4资源！所以，建议你给自己的OpenAI账户设个上限，比如每月10美元啥的。</p><p>所以更好的方法是在操作系统中定义环境变量，比如在Linux系统的命令行中使用：</p><pre><code class=\"language-plain\">export OPENAI_API_KEY='你的Open API Key' \n</code></pre><p>或者，你也可以考虑把环境变量保存在.env文件中，使用python-dotenv库从文件中读取它，这样也可以降低API密钥暴露在代码中的风险。</p><p>第4步，导入OpenAI库，并创建一个Client。</p><pre><code class=\"language-plain\">from openai import OpenAI\nclient = OpenAI()\n</code></pre><p>第5步，指定 gpt-3.5-turbo-instruct（也就是 Text 模型）并调用 completions 方法，返回结果。</p><pre><code class=\"language-plain\">response = client.completions.create(\n  model=\"gpt-3.5-turbo-instruct\",\n  temperature=0.5,\n  max_tokens=100,\n  prompt=\"请给我的花店起个名\")\n</code></pre><p>在使用OpenAI的文本生成模型时，你可以通过一些参数来控制输出的内容和样式。这里我总结为了一些常见的参数。</p><p><img src=\"https://static001.geekbang.org/resource/image/34/c3/34aaeaff93368c3c3596c12523c1ccc3.jpg?wh=3434x3607\" alt=\"\"></p><p>第6步，打印输出大模型返回的文字。</p><pre><code class=\"language-plain\">print(response.choices[0].text.strip())\n</code></pre><p>当你调用OpenAI的Completion.create方法时，它会返回一个响应对象，该对象包含了模型生成的输出和其他一些信息。这个响应对象是一个字典结构，包含了多个字段。</p><p>在使用Text模型（如text-davinci-003）的情况下，响应对象的主要字段包括：</p><p><img src=\"https://static001.geekbang.org/resource/image/4c/ce/4cb717e0258971c7e92dace9c4d8f2ce.jpg?wh=1406x634\" alt=\"\"></p><p>choices字段是一个列表，因为在某些情况下，你可以要求模型生成多个可能的输出。每个选择都是一个字典，其中包含以下字段：</p><ul>\n<li>text：模型生成的文本。</li>\n<li>finish_reason：模型停止生成的原因，可能的值包括 stop（遇到了停止标记）、length（达到了最大长度）或 temperature（根据设定的温度参数决定停止）。</li>\n</ul><p>所以，<code>response.choices[0].text.strip()</code> 这行代码的含义是：从响应中获取第一个（如果在调用大模型时，没有指定n参数，那么就只有唯一的一个响应）选择，然后获取该选择的文本，并移除其前后的空白字符。这通常是你想要的模型的输出。</p><p>至此，任务完成，模型的输出如下：</p><pre><code class=\"language-plain\">心动花庄、芳华花楼、轩辕花舍、簇烂花街、满园春色\n</code></pre><p>不错。下面，让我们再来调用Chat模型（GPT-3.5和GPT-4）。</p><h3>调用Chat模型</h3><p>整体流程上，Chat模型和Text模型的调用是类似的，只是前面加了一个chat，然后输入（prompt）和输出（response）的数据格式有所不同。</p><p>示例代码如下：</p><pre><code class=\"language-plain\">response = client.chat.completions.create(  \n  model=\"gpt-4\",\n  messages=[\n        {\"role\": \"system\", \"content\": \"You are a creative AI.\"},\n        {\"role\": \"user\", \"content\": \"请给我的花店起个名\"},\n    ],\n  temperature=0.8,\n  max_tokens=60\n)\n</code></pre><p>这段代码中，除去刚才已经介绍过的temperature、max_tokens等参数之外，有两个专属于Chat模型的概念，一个是消息，一个是角色！</p><p>先说<strong>消息</strong>，消息就是传入模型的提示。此处的messages参数是一个列表，包含了多个消息。每个消息都有一个role（可以是system、user或assistant）和content（消息的内容）。系统消息设定了对话的背景（你是一个很棒的智能助手），然后用户消息提出了具体请求（请给我的花店起个名）。模型的任务是基于这些消息来生成回复。</p><p>再说<strong>角色</strong>，在OpenAI的Chat模型中，system、user和assistant都是消息的角色。每一种角色都有不同的含义和作用。</p><ul>\n<li>system：系统消息主要用于设定对话的背景或上下文。这可以帮助模型理解它在对话中的角色和任务。例如，你可以通过系统消息来设定一个场景，让模型知道它是在扮演一个医生、律师或者一个知识丰富的AI助手。系统消息通常在对话开始时给出。</li>\n<li>user：用户消息是从用户或人类角色发出的。它们通常包含了用户想要模型回答或完成的请求。用户消息可以是一个问题、一段话，或者任何其他用户希望模型响应的内容。</li>\n<li>assistant：助手消息是模型的回复。例如，在你使用API发送多轮对话中新的对话请求时，可以通过助手消息提供先前对话的上下文。然而，请注意在对话的最后一条消息应始终为用户消息，因为模型总是要回应最后这条用户消息。</li>\n</ul><p>在使用Chat模型生成内容后，返回的<strong>响应</strong>，也就是response会包含一个或多个choices，每个choices都包含一个message。每个message也都包含一个role和content。role可以是system、user或assistant，表示该消息的发送者，content则包含了消息的实际内容。</p><p>一个典型的response对象可能如下所示：</p><pre><code class=\"language-plain\">{\n&nbsp;'id': 'chatcmpl-2nZI6v1cW9E3Jg4w2Xtoql0M3XHfH',\n&nbsp;'object': 'chat.completion',\n&nbsp;'created': 1677649420,\n&nbsp;'model': 'gpt-4',\n&nbsp;'usage': {'prompt_tokens': 56, 'completion_tokens': 31, 'total_tokens': 87},\n&nbsp;'choices': [\n&nbsp; &nbsp;{\n&nbsp; &nbsp; 'message': {\n&nbsp; &nbsp; &nbsp; 'role': 'assistant',\n&nbsp; &nbsp; &nbsp; 'content': '你的花店可以叫做\"花香四溢\"。'\n&nbsp; &nbsp; &nbsp;},\n&nbsp; &nbsp; 'finish_reason': 'stop',\n&nbsp; &nbsp; 'index': 0\n&nbsp; &nbsp;}\n&nbsp; ]\n}\n</code></pre><p>以下是各个字段的含义：</p><p><img src=\"https://static001.geekbang.org/resource/image/93/bd/934aaf3e187de074348198e0b0d307bd.jpg?wh=1408x927\" alt=\"\"></p><p>这就是response的基本结构，其实它和Text模型返回的响应结构也是很相似，只是choices字段中的Text换成了Message。你可以通过解析这个对象来获取你需要的信息。例如，要获取模型的回复，可使用 response[‘choices’][0][‘message’][‘content’]。</p><h3>Chat模型 vs Text模型</h3><p>Chat模型和Text模型都有各自的优点，其适用性取决于具体的应用场景。</p><p>相较于Text模型，Chat模型的设计更适合处理对话或者多轮次交互的情况。这是因为它可以接受一个消息列表作为输入，而不仅仅是一个字符串。这个消息列表可以包含system、user和assistant的历史信息，从而在处理交互式对话时提供更多的上下文信息。</p><p>这种设计的主要优点包括：</p><ol>\n<li>对话历史的管理：通过使用Chat模型，你可以更方便地管理对话的历史，并在需要时向模型提供这些历史信息。例如，你可以将过去的用户输入和模型的回复都包含在消息列表中，这样模型在生成新的回复时就可以考虑到这些历史信息。</li>\n<li>角色模拟：通过system角色，你可以设定对话的背景，给模型提供额外的指导信息，从而更好地控制输出的结果。当然在Text模型中，你在提示中也可以为AI设定角色，作为输入的一部分。</li>\n</ol><p>然而，对于简单的单轮文本生成任务，使用Text模型可能会更简单、更直接。例如，如果你只需要模型根据一个简单的提示生成一段文本，那么Text模型可能更适合。从上面的结果看，Chat模型给我们输出的文本更完善，是一句完整的话，而Text模型输出的是几个名字。这是因为ChatGPT经过了对齐（基于人类反馈的强化学习），输出的答案更像是真实聊天场景。</p><p>好了，我们对OpenAI的API调用，理解到这个程度就可以了。毕竟我们主要是通过LangChain这个高级封装的框架来访问Open AI。</p><h2>通过LangChain调用Text和Chat模型</h2><p>最后，让我们来使用LangChain来调用OpenAI的Text和Chat模型，完成了这两个任务，我们今天的课程就可以结束了！</p><h3>调用Text模型</h3><p>代码如下：</p><pre><code class=\"language-plain\">import os\nos.environ[\"OPENAI_API_KEY\"] = '你的Open API Key'\nfrom langchain.llms import OpenAI\nllm = OpenAI( &nbsp;\n&nbsp; &nbsp; model=\"gpt-3.5-turbo-instruct\",\n&nbsp; &nbsp; temperature=0.8,\n&nbsp; &nbsp; max_tokens=60,)\nresponse = llm.predict(\"请给我的花店起个名\")\nprint(response)\n</code></pre><p>输出：</p><pre><code class=\"language-plain\">花之缘、芳华花店、花语心意、花风旖旎、芳草世界、芳色年华\n</code></pre><p>这只是一个对OpenAI API的简单封装：先导入LangChain的OpenAI类，创建一个LLM（大语言模型）对象，指定使用的模型和一些生成参数。使用创建的LLM对象和消息列表调用OpenAI类的__call__方法，进行文本生成。生成的结果被存储在response变量中。没有什么需要特别解释之处。</p><h3>调用Chat模型</h3><p>代码如下：</p><pre><code class=\"language-plain\">import os\nos.environ[\"OPENAI_API_KEY\"] = '你的Open API Key'\nfrom langchain.chat_models import ChatOpenAI\nchat = ChatOpenAI(model=\"gpt-4\",\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; temperature=0.8,\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; max_tokens=60)\nfrom langchain.schema import (\n&nbsp; &nbsp; HumanMessage,\n&nbsp; &nbsp; SystemMessage\n)\nmessages = [\n&nbsp; &nbsp; SystemMessage(content=\"你是一个很棒的智能助手\"),\n&nbsp; &nbsp; HumanMessage(content=\"请给我的花店起个名\")\n]\nresponse = chat(messages)\nprint(response)\n</code></pre><p>这段代码也不难理解，主要是通过导入LangChain的ChatOpenAI类，创建一个Chat模型对象，指定使用的模型和一些生成参数。然后从LangChain的schema模块中导入LangChain的SystemMessage和HumanMessage类，创建一个消息列表。消息列表中包含了一个系统消息和一个人类消息。你已经知道系统消息通常用来设置一些上下文或者指导AI的行为，人类消息则是要求AI回应的内容。之后，使用创建的chat对象和消息列表调用ChatOpenAI类的__call__方法，进行文本生成。生成的结果被存储在response变量中。</p><p>输出：</p><pre><code class=\"language-plain\">content='当然可以，叫做\"花语秘境\"怎么样？' \nadditional_kwargs={} example=False\n</code></pre><p>从响应内容“<strong>当然可以，叫做‘花语秘境’怎么样？</strong>”不难看出，GPT-4的创造力真的是胜过GPT-3，她给了我们这么有意境的一个店名，比我自己起的“易速鲜花”好多了。</p><p>另外，无论是langchain.llms中的OpenAI（Text模型），还是langchain.chat_models中的ChatOpenAI中的ChatOpenAI（Chat模型），其返回的结果response变量的结构，都比直接调用OpenAI API来得简单一些。这是因为，LangChain已经对大语言模型的output进行了解析，只保留了响应中最重要的文字部分。</p><h2>总结时刻</h2><p>好了，今天课程的内容不少，我希望你理解OpenAI从Text模型到Chat模型的进化，以及什么时候你会选用Chat模型，什么时候会选用Text模型。另外就是这两种模型的最基本调用流程，掌握了这些内容，我们就可以继续后面的学习。</p><p>另外，大语言模型可不是OpenAI一家独大，知名的大模型开源社群HugginFace网站上面提供了很多开源模型供你尝试使用。就在我写这节课的时候，Meta的Llama-2最受热捧，而且通义千问（Qwen）则刚刚开源。这些趋势，你点击下面的图片就看得到。</p><p><img src=\"https://static001.geekbang.org/resource/image/05/0e/05f5c16f3d908b4b0a16958e28842e0e.png?wh=3885x1981\" alt=\"\" title=\"当前下载较多的开源大语言模型\"></p><p>两点提醒，一是这个领域进展太快，当你学这门课程的时候，流行的开源模型肯定变成别的了；二是这些新的开源模型，LangChain还不一定提供很好的接口，因此通过LangChain来使用最新的开源模型可能不容易。</p><p>不过LangChain作为最流行的LLM框架，新的开源模型被封装进来是迟早的事情。而且，LangChain的框架也已经定型，各个组件的设计都基本固定了。</p><h2>思考题</h2><p>最后给你留几个有难度的思考题，有些题目你可能现在没有答案，但是我希望你带着这些问题去继续学习后续课程。</p><ol>\n<li>从今天的两个例子看起来，使用LangChain并不比直接调用OpenAI API来得省事？而且也仍然需要OpenAI API才能调用GPT家族模型。那么LangChain的核心价值在哪里？至少从这两个示例中没看出来。针对这个问题，你仔细思考思考。<br>\n<strong>提示</strong>：这个问题没有标准答案，仁者见仁智者见智，等学完了课程，我们可以再回过头来回答一次。<br>\n&nbsp;</li>\n<li>LangChain支持的可绝不只有OpenAI模型，那么你能否试一试HuggingFace开源社区中的其它模型，看看能不能用。<br>\n<strong>提示</strong>：你要选择Text-Generation、Text-Text Generation和Question-Answer这一类的文本生成式模型。</li>\n</ol><pre><code class=\"language-plain\">from langchain import HuggingFaceHub\nllm = HuggingFaceHub(model_id=\"bigscience/bloom-1b7\")\n</code></pre><ol start=\"3\">\n<li>上面我提到了生成式模型，那么，大语言模型除了文本生成式模型，还有哪些类别的模型？比如说有名的Bert模型，是不是文本生成式的模型？<br>\n<strong>提示</strong>：如果你没有太多NLP基础知识，建议你可以看一下我的专栏《<a href=\"https://time.geekbang.org/column/intro/100085501\">零基础实战机器学习</a>》和公开课《<a href=\"https://time.geekbang.org/opencourse/videointro/100541201\">ChatGPT和预训练模型实战课</a>》。</li>\n</ol><p>期待在留言区看到你的思考，如果你觉得内容对你有帮助，也欢迎分享给有需要的朋友！最后如果你学有余力，可以进一步学习下面的延伸阅读。</p><h1>延伸阅读</h1><ol>\n<li>LangChain官方文档（<a href=\"https://python.langchain.com/docs/get_started/introduction.html\">Python版</a>）（<a href=\"https://js.langchain.com/docs/get_started/introduction.html\">JavaScript版</a>），这是你学习专栏的过程中，有任何疑惑都可以随时去探索的知识大本营。我个人觉得，目前LangChain的文档还不够体系化，有些杂乱，讲解也不大清楚。但是，这是官方文档，会维护得越来越好。</li>\n<li><a href=\"https://platform.openai.com/docs/introduction\">OpenAI API 官方文档</a>，深入学习OpenAI API的地方。</li>\n<li><a href=\"https://huggingface.co/\">HuggingFace 官方网站</a>，玩开源大模型的好地方。</li>\n</ol>","comments":[{"had_liked":false,"id":386813,"user_name":"黄佳","can_delete":false,"product_type":"c1","uid":1809833,"ip_address":"瑞士","ucode":"8EC41D2EAB0E3C","user_header":"https://static001.geekbang.org/account/avatar/00/1b/9d/a9/4602808f.jpg","comment_is_top":true,"comment_ctime":1705630259,"is_pvip":false,"replies":null,"discussion_count":3,"race_medal":0,"score":2,"product_id":100617601,"comment_content":"OpenAI，最近戏比较多，旧代码是0.28版本，任何以上的版本，都需要比较大的改动，记录如下。\n\n旧代码\n# import openai\n\n新代码\nfrom openai import OpenAI\nclient = OpenAI()\n\n旧代码\n# response = openai.Completion.create(\n#   model=&quot;text-davinci-003&quot;,\n#   temperature=0.5,\n#   max_tokens=100,\n#   prompt=&quot;请给我的花店起个名&quot;)\n\n新代码\nresponse = client.completions.create(\n  model=&quot;gpt-3.5-turbo-instruct&quot;,\n  temperature=0.5,\n  max_tokens=100,\n  prompt=&quot;请给我的花店起个名&quot;)\n\n旧代码\n# response = openai.ChatCompletion.create(\n#   model=&quot;gpt-4&quot;,\n#   messages=[\n#         {&quot;role&quot;: &quot;system&quot;, &quot;content&quot;: &quot;You are a creative AI.&quot;},\n#         {&quot;role&quot;: &quot;user&quot;, &quot;content&quot;: &quot;请给我的花店起个名&quot;},\n#     ],\n#   temperature=0.8,\n#   max_tokens=60\n# )\n\n# print(response[&#39;choices&#39;][0][&#39;message&#39;][&#39;content&#39;])\n\n新代码\nresponse = client.completions.create(  model=&quot;gpt-4&quot;,\n  messages=[\n        {&quot;role&quot;: &quot;system&quot;, &quot;content&quot;: &quot;You are a creative AI.&quot;},\n        {&quot;role&quot;: &quot;user&quot;, &quot;content&quot;: &quot;请给我的花店起个名&quot;},\n    ],\n  temperature=0.8,\n  max_tokens=60\n)\n\nprint(response.choices[0].message.content)","like_count":9,"discussions":[{"author":{"id":1019244,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/8d/6c/0c2a26c7.jpg","nickname":"clip","note":"","ucode":"D0E142605A5BD5","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":636782,"discussion_content":"老师你好， gpt-4 的例子现在跑不通了，现在需要用 client.chat.completions.create 而不是 client.completions.create","likes_number":5,"is_delete":false,"is_hidden":false,"ctime":1706967024,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":"北京","group_id":0},"score":2,"extra":"","child_discussion_number":1,"child_discussions":[{"author":{"id":2639724,"avatar":"https://static001.geekbang.org/account/avatar/00/28/47/6c/78184d19.jpg","nickname":"非洲黑猴子","note":"","ucode":"F5FEAC07D562E0","race_medal":1,"user_type":1,"is_pvip":true},"reply_author":{"id":1019244,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/8d/6c/0c2a26c7.jpg","nickname":"clip","note":"","ucode":"D0E142605A5BD5","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":638115,"discussion_content":"没错，我用了你这个才跑成功了👍 😄  openai升级太频繁，而且代码不兼容，差评，差评，差评！","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1709257327,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":636782,"ip_address":"美国","group_id":0},"score":638115,"extra":""}]},{"author":{"id":1809833,"avatar":"https://static001.geekbang.org/account/avatar/00/1b/9d/a9/4602808f.jpg","nickname":"黄佳","note":"","ucode":"8EC41D2EAB0E3C","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":646262,"discussion_content":"对对对 是 client.chat.completions.create 谢谢同学！","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1717648834,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":"新加坡","group_id":0},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":380932,"user_name":"吴曦","can_delete":false,"product_type":"c1","uid":1013673,"ip_address":"上海","ucode":"0AEC3D078F1587","user_header":"https://static001.geekbang.org/account/avatar/00/0f/77/a9/846e2e85.jpg","comment_is_top":false,"comment_ctime":1694479307,"is_pvip":false,"replies":[{"id":138730,"content":"同学这个问题覆盖面比较大\n1. 准确性：这是最直接的指标，即机器人的回答是否准确。你可以根据自己的业务场景为机器人准备一个包含问题和正确答案的测试集，然后比较机器人的回答与正确答案。\n2. GitHub上面有很多评估大模型的指标、框架和数据集，也有很多人在做这个事情，我给出一个例子\nhttps:&#47;&#47;github.com&#47;openai&#47;evals\n3. 主观评价。毕竟是问答型机器人，有时候没有绝对的对错，主观感受很重要。","user_name":"作者回复","user_name_real":"编辑","uid":1809833,"ctime":1694481624,"ip_address":"新加坡","comment_id":380932,"utype":1}],"discussion_count":1,"race_medal":0,"score":2,"product_id":100617601,"comment_content":"搭建了基础的langchain问答机器人，怎样评估回答质量？有适合的指标吗？","like_count":11,"discussions":[{"author":{"id":1809833,"avatar":"https://static001.geekbang.org/account/avatar/00/1b/9d/a9/4602808f.jpg","nickname":"黄佳","note":"","ucode":"8EC41D2EAB0E3C","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":627720,"discussion_content":"同学这个问题覆盖面比较大\n1. 准确性：这是最直接的指标，即机器人的回答是否准确。你可以根据自己的业务场景为机器人准备一个包含问题和正确答案的测试集，然后比较机器人的回答与正确答案。\n2. GitHub上面有很多评估大模型的指标、框架和数据集，也有很多人在做这个事情，我给出一个例子\nhttps://github.com/openai/evals\n3. 主观评价。毕竟是问答型机器人，有时候没有绝对的对错，主观感受很重要。","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1694481624,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"新加坡","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":380913,"user_name":"黄振宇","can_delete":false,"product_type":"c1","uid":1686397,"ip_address":"浙江","ucode":"976BC7B46DA419","user_header":"https://static001.geekbang.org/account/avatar/00/19/bb/7d/26340713.jpg","comment_is_top":false,"comment_ctime":1694437606,"is_pvip":false,"replies":[{"id":138737,"content":"嗯呐，课程终于来了。同学，在死磕过程的学习中你一定大有收获，有什么好的见解一定要多分享。一花独放不是春 百花齐放春满园！！！","user_name":"作者回复","user_name_real":"编辑","uid":1809833,"ctime":1694485378,"ip_address":"新加坡","comment_id":380913,"utype":1}],"discussion_count":1,"race_medal":0,"score":2,"product_id":100617601,"comment_content":"最近在死磕langchain 终于有中文的详细课程啦","like_count":9,"discussions":[{"author":{"id":1809833,"avatar":"https://static001.geekbang.org/account/avatar/00/1b/9d/a9/4602808f.jpg","nickname":"黄佳","note":"","ucode":"8EC41D2EAB0E3C","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":627731,"discussion_content":"嗯呐，课程终于来了。同学，在死磕过程的学习中你一定大有收获，有什么好的见解一定要多分享。一花独放不是春 百花齐放春满园！！！","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1694485378,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"新加坡","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":381090,"user_name":"在路上","can_delete":false,"product_type":"c1","uid":1402511,"ip_address":"广东","ucode":"6E31908EFE1107","user_header":"https://static001.geekbang.org/account/avatar/00/15/66/8f/02be926d.jpg","comment_is_top":false,"comment_ctime":1694663691,"is_pvip":false,"replies":[{"id":138798,"content":"兄弟的代理弄通啦？祝贺兄弟完成了HuggingFace模型调用！\n是的，模块化，API的封装，这是LangChain很重要的一个特点。另外一个是Agent的自主性，在后面课程的学习过程中请仔细体会。","user_name":"作者回复","user_name_real":"作者","uid":1809833,"ctime":1694669488,"ip_address":"新加坡","comment_id":381090,"utype":1}],"discussion_count":5,"race_medal":0,"score":2,"product_id":100617601,"comment_content":"1.我认为LangChain的核心价值在于功能模块化和模块链接化，这意味着AI应用开发被提炼成了很多个标准步骤，每个步骤有标准的参数和接口，便于灵活的替换和组合。这就像Java中Spring，封装了各种组件，并通过控制反转将它们组合在一起。\n\n2.HuggingFace模型：\nimport os\n# 设置网络代理\nos.environ[&quot;http_proxy&quot;] = &quot;http:&#47;&#47;127.0.0.1:7890&quot;\nos.environ[&quot;https_proxy&quot;] = &quot;http:&#47;&#47;127.0.0.1:7890&quot;\n\n# 通过.env管理huggingfacehub_api_token\nfrom dotenv import load_dotenv\nload_dotenv()\n\nfrom langchain import HuggingFaceHub\nllm = HuggingFaceHub(repo_id=&quot;bigscience&#47;bloom-1b7&quot;)\nresp = llm.predict(&quot;请给我的花店起个名&quot;)\nprint(resp)\n\n#输出：,叫&quot;花之恋&quot;。&quot;花之恋&quot;","like_count":6,"discussions":[{"author":{"id":1809833,"avatar":"https://static001.geekbang.org/account/avatar/00/1b/9d/a9/4602808f.jpg","nickname":"黄佳","note":"","ucode":"8EC41D2EAB0E3C","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":627902,"discussion_content":"兄弟的代理弄通啦？祝贺兄弟完成了HuggingFace模型调用！\n是的，模块化，API的封装，这是LangChain很重要的一个特点。另外一个是Agent的自主性，在后面课程的学习过程中请仔细体会。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1694669488,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"新加坡","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1042358,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/e7/b6/c9b56731.jpg","nickname":"St.Peter","note":"","ucode":"49E9974D26AB59","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":645408,"discussion_content":"这个回答非常好","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1716119020,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":"辽宁","group_id":0},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":3688255,"avatar":"https://static001.geekbang.org/account/avatar/00/38/47/3f/51708649.jpg","nickname":"Blow","note":"","ucode":"4B8B76CF352E41","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":629205,"discussion_content":"没错就i是这么用的，也是通过这种方法，也并没有捣鼓很久","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1696828530,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":"福建","group_id":0},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1402511,"avatar":"https://static001.geekbang.org/account/avatar/00/15/66/8f/02be926d.jpg","nickname":"在路上","note":"","ucode":"6E31908EFE1107","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":627903,"discussion_content":"是的，佳哥，我重新买了个梯子就可以了","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1694670115,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":"广东","group_id":0},"score":2,"extra":"","child_discussion_number":1,"child_discussions":[{"author":{"id":3732614,"avatar":"https://static001.geekbang.org/account/avatar/00/38/f4/86/21ea3970.jpg","nickname":"界元","note":"","ucode":"6BE6C6497237DB","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1402511,"avatar":"https://static001.geekbang.org/account/avatar/00/15/66/8f/02be926d.jpg","nickname":"在路上","note":"","ucode":"6E31908EFE1107","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":629882,"discussion_content":"买的是哪家的梯子？我也是代理出问题，调用不了openai的ai","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1697765838,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":627903,"ip_address":"广东","group_id":0},"score":629882,"extra":""}]}]},{"had_liked":false,"id":381356,"user_name":"Crazy","can_delete":false,"product_type":"c1","uid":1005471,"ip_address":"北京","ucode":"56B287F98A20A5","user_header":"https://static001.geekbang.org/account/avatar/00/0f/57/9f/8a7cd83d.jpg","comment_is_top":false,"comment_ctime":1695093432,"is_pvip":false,"replies":[{"id":138925,"content":"嗯嗯，一看同学就是已经有了LangChain实战的经验了。理解的是相当到位的。的确，这是编程思维范式的转换。\n从调试的角度来说，也是一个范式转换。更多的思考聚焦于是如何确保模型的稳定性。\n后续课程中，我们会讲到很多如何Debug代理的推理过程这个事儿。\n把Chain的verbose=True，这是一个关键点。\n另外，还有langchain.debug和langchain.verbose这两个参数，设为True！\n最后，同学研究一些LangSmith。分享分享收获。","user_name":"作者回复","user_name_real":"作者","uid":1809833,"ctime":1695107289,"ip_address":"新加坡","comment_id":381356,"utype":1}],"discussion_count":1,"race_medal":0,"score":2,"product_id":100617601,"comment_content":"使用LangChain编程，是一个编程思维的转化，你定义工具，流程，让大模型的能力去提供逻辑判断，流程组建，我写的过程中感觉其对传统编程思维挑战最大。同时，调试的复杂度更高，更要语义化的编程，导致你要获取确定的答案或者拿到预期的结果挑战很大。希望课程后续能分享到系统化地讲解调试输出，目前个人调试方法是各种参数、提示词，工具描述一顿改，花费比之前更长的时间调试一个功能，能解决这个效率问题对之后的产品化或者应用至关重要。","like_count":5,"discussions":[{"author":{"id":1809833,"avatar":"https://static001.geekbang.org/account/avatar/00/1b/9d/a9/4602808f.jpg","nickname":"黄佳","note":"","ucode":"8EC41D2EAB0E3C","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":628240,"discussion_content":"嗯嗯，一看同学就是已经有了LangChain实战的经验了。理解的是相当到位的。的确，这是编程思维范式的转换。\n从调试的角度来说，也是一个范式转换。更多的思考聚焦于是如何确保模型的稳定性。\n后续课程中，我们会讲到很多如何Debug代理的推理过程这个事儿。\n把Chain的verbose=True，这是一个关键点。\n另外，还有langchain.debug和langchain.verbose这两个参数，设为True！\n最后，同学研究一些LangSmith。分享分享收获。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1695107290,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"新加坡","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":380923,"user_name":"dengyu","can_delete":false,"product_type":"c1","uid":1068659,"ip_address":"广东","ucode":"F3FEC6CF5DF24C","user_header":"https://static001.geekbang.org/account/avatar/00/10/4e/73/93e09e89.jpg","comment_is_top":false,"comment_ctime":1694445351,"is_pvip":false,"replies":[{"id":138729,"content":"第一步：pip install python-dotenv\n第二步：创建一个名为.env的文件，并添加\nOPENAI_API_KEY=your_api_key_here\n第三步：代码\nimport os\nfrom dotenv import load_dotenv\nload_dotenv()\nopenai_api_key = os.getenv(&quot;OPENAI_API_KEY&quot;)\n同学你试试，也可以给出你完成后的代码。","user_name":"作者回复","user_name_real":"编辑","uid":1809833,"ctime":1694481333,"ip_address":"新加坡","comment_id":380923,"utype":1}],"discussion_count":3,"race_medal":0,"score":2,"product_id":100617601,"comment_content":"windows中使用把openai API key保存在.env 文件中，读取文件，能否给出具体代码？","like_count":5,"discussions":[{"author":{"id":1809833,"avatar":"https://static001.geekbang.org/account/avatar/00/1b/9d/a9/4602808f.jpg","nickname":"黄佳","note":"","ucode":"8EC41D2EAB0E3C","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":627718,"discussion_content":"第一步：pip install python-dotenv\n第二步：创建一个名为.env的文件，并添加\nOPENAI_API_KEY=your_api_key_here\n第三步：代码\nimport os\nfrom dotenv import load_dotenv\nload_dotenv()\nopenai_api_key = os.getenv(&#34;OPENAI_API_KEY&#34;)\n同学你试试，也可以给出你完成后的代码。","likes_number":3,"is_delete":false,"is_hidden":false,"ctime":1694481333,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"新加坡","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1157627,"avatar":"https://static001.geekbang.org/account/avatar/00/11/a9/fb/7cd1a23e.jpg","nickname":"YH","note":"","ucode":"82D2340F62EFED","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":628035,"discussion_content":"当在Windows中使用Python时，你可以使用`python-dotenv`库来读取`.env`文件并加载环境变量。以下是具体的代码示例：\n\n首先，确保已经安装`python-dotenv`库。可以使用以下命令使用pip进行安装：\n\n```shell\npip install python-dotenv\n```\n\n接下来，在你的项目目录中创建一个`.env`文件，并将你的OpenAI API密钥添加到该文件中。`.env`文件的内容如下：\n\n```\nOPENAI_API_KEY=your_api_key_here\n```\n\n请确保将`your_api_key_here`替换为你的实际OpenAI API密钥。\n\n然后，在你的Python代码中，使用以下代码加载`.env`文件中的环境变量：\n\n```python\nimport os\nfrom dotenv import load_dotenv\n\n# 加载.env文件中的环境变量\nload_dotenv()\n\n# 访问环境变量\napi_key = os.getenv(&#34;OPENAI_API_KEY&#34;)\n\n# 在这里使用你的API密钥\nprint(api_key)\n```\n\n这样，你就可以通过`os.getenv()`来获取`.env`文件中定义的环境变量。在上述示例中，我们使用`OPENAI_API_KEY`来获取OpenAI API密钥。\n\n请确保在项目中包含`python-dotenv`库，并将`.env`文件放置在正确的位置，以便能够正确加载和访问环境变量。","likes_number":2,"is_delete":false,"is_hidden":false,"ctime":1694777139,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":"中国香港","group_id":0},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1356878,"avatar":"https://static001.geekbang.org/account/avatar/00/14/b4/4e/e3683b3e.jpg","nickname":"undefined","note":"","ucode":"AC9C7AABDCB592","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":627995,"discussion_content":"好问题！","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1694760048,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":"福建","group_id":0},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":380944,"user_name":"neohope","can_delete":false,"product_type":"c1","uid":1043475,"ip_address":"上海","ucode":"C0268F6E7E2B6E","user_header":"https://static001.geekbang.org/account/avatar/00/0f/ec/13/49e98289.jpg","comment_is_top":false,"comment_ctime":1694492797,"is_pvip":false,"replies":[{"id":138747,"content":"同学说的太好了，激发想象力。与Spring的比较也很开脑洞。让我们拭目以待，看看AI智能代理能够走到那一步。我个人来说，希望将来老了走不动路的时候，能够有大批AI机器人懂我，理解我，照顾我，这样我就不需要依赖人类了。因为人类照顾老年人是很费心力的。我是不是把AI想象的太听话了呢。😍","user_name":"作者回复","user_name_real":"编辑","uid":1809833,"ctime":1694533123,"ip_address":"新加坡","comment_id":380944,"utype":1}],"discussion_count":1,"race_medal":0,"score":2,"product_id":100617601,"comment_content":"对于开发人员来说，LangChain是一个工具箱，可以方便的组合各类AI和非AI的能力，并通过抽象实现各相似组件的快速替代，有点儿类似于java生态下的spring。\n对于AI来说，会有两个门槛，一个是AI学会使用和组合这些工具，二是可以自行创造新的工具并予以使用。一旦走到第二步，硅基生物的时代可能就到来了。","like_count":3,"discussions":[{"author":{"id":1809833,"avatar":"https://static001.geekbang.org/account/avatar/00/1b/9d/a9/4602808f.jpg","nickname":"黄佳","note":"","ucode":"8EC41D2EAB0E3C","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":627781,"discussion_content":"同学说的太好了，激发想象力。与Spring的比较也很开脑洞。让我们拭目以待，看看AI智能代理能够走到那一步。我个人来说，希望将来老了走不动路的时候，能够有大批AI机器人懂我，理解我，照顾我，这样我就不需要依赖人类了。因为人类照顾老年人是很费心力的。我是不是把AI想象的太听话了呢。😍","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1694533123,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"新加坡","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":380903,"user_name":"抽象派","can_delete":false,"product_type":"c1","uid":2599971,"ip_address":"广东","ucode":"6879F90CB702FC","user_header":"https://thirdwx.qlogo.cn/mmopen/vi_32/YflLdCdbUAkfr9LPzF50EibDrMxBibPicQ5NNAETaPP0ytTmuR3h6QNichDMhDbR2XelSIXpOrPwbiaHgBkMJYOeULA/132","comment_is_top":false,"comment_ctime":1694428693,"is_pvip":false,"replies":[{"id":138717,"content":"3.8以上的任意版本。","user_name":"作者回复","user_name_real":"编辑","uid":1809833,"ctime":1694438919,"ip_address":"新加坡","comment_id":380903,"utype":1}],"discussion_count":1,"race_medal":0,"score":2,"product_id":100617601,"comment_content":"请问Python用什么版本？","like_count":3,"discussions":[{"author":{"id":1809833,"avatar":"https://static001.geekbang.org/account/avatar/00/1b/9d/a9/4602808f.jpg","nickname":"黄佳","note":"","ucode":"8EC41D2EAB0E3C","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":627689,"discussion_content":"3.8以上的任意版本。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1694438919,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"新加坡","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":384226,"user_name":"aLong","can_delete":false,"product_type":"c1","uid":2409553,"ip_address":"北京","ucode":"11DB1B9C579811","user_header":"https://static001.geekbang.org/account/avatar/00/24/c4/51/5bca1604.jpg","comment_is_top":false,"comment_ctime":1700556519,"is_pvip":false,"replies":[{"id":140169,"content":"不错啊，总要有点挫折才有收获。得到了三个nice英文名字。","user_name":"作者回复","user_name_real":"编辑","uid":1809833,"ctime":1700578037,"ip_address":"瑞士","comment_id":384226,"utype":1}],"discussion_count":1,"race_medal":0,"score":2,"product_id":100617601,"comment_content":"磕磕绊绊，跑到openai看API文档，跑到langchain去看文档。然后按照课程内容写下了新版本的东西。\n\n#我让他给我返回三个店名供我挑选，格式是list。\nSure! Here are three name suggestions for your flower shop:\n1. Blossom Boutique\n2. Petal Paradise\n3. Floral Haven\n","like_count":1,"discussions":[{"author":{"id":1809833,"avatar":"https://static001.geekbang.org/account/avatar/00/1b/9d/a9/4602808f.jpg","nickname":"黄佳","note":"","ucode":"8EC41D2EAB0E3C","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":632212,"discussion_content":"不错啊，总要有点挫折才有收获。得到了三个nice英文名字。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1700578037,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"瑞士","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":383967,"user_name":"卓丁","can_delete":false,"product_type":"c1","uid":1030687,"ip_address":"北京","ucode":"71B68238D304FE","user_header":"https://static001.geekbang.org/account/avatar/00/0f/ba/1f/7551f182.jpg","comment_is_top":false,"comment_ctime":1700031004,"is_pvip":false,"replies":[{"id":140173,"content":"在使用ChatGPT模型进行多轮对话时，assistant字段的作用是提供之前的对话历史。这样做的目的是为了让模型能够了解到目前为止的对话上下文，从而更好地回应用户的当前问题。\n具体来说，assistant字段应包含之前所有的对话历史，包括用户的提问和模型的回复。这样，当您向模型提出新的问题时，它可以参考这些历史信息以提供更准确、连贯的回答。\n\n至于您提到的“最后一条消息应始终为用户消息”，这是指在一个对话回合中，用户的提问（即user字段的内容）应该是该回合的最后一条消息。这是因为模型设计成回应用户的最后一条消息。如果最后一条消息是模型的回复（即在assistant字段中），那么模型就没有新的用户输入来回应，这可能会导致对话上下文的混乱。","user_name":"作者回复","user_name_real":"编辑","uid":1809833,"ctime":1700578508,"ip_address":"瑞士","comment_id":383967,"utype":1}],"discussion_count":1,"race_medal":0,"score":2,"product_id":100617601,"comment_content":"老师好，请教一下关于assistant的讲解：\n\nassistant：助手消息是模型的回复。例如，在你使用 API 发送多轮对话中新的对话请求时，可以通过助手消息提供先前对话的上下文。然而，请注意在对话的最后一条消息应始终为用户消息，因为模型总是要回应最后这条用户消息。\n\n这里的assistant的用途，我还是比较模糊，意思就是说：比如在多轮对话的场景中，可以将 跟模型的历史对话 通过 assistant 字段 再次传递给llm，是吗？\n额外，“然而，请注意在对话的最后一条消息应始终为用户消息，因为模型总是要回应最后这条用户消息。”中你所说的 “最后一条” 是什么含义？没理解；\n\n是否可以理解为：每次对话中user字段就是传递的用户最新的一次提问， 然后assistant 字段传递的是历史消息，但是需要记着：assistant字段的最后一条为历史消息中的用户消息？ 是这个意思否？ ","like_count":1,"discussions":[{"author":{"id":1809833,"avatar":"https://static001.geekbang.org/account/avatar/00/1b/9d/a9/4602808f.jpg","nickname":"黄佳","note":"","ucode":"8EC41D2EAB0E3C","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":632216,"discussion_content":"在使用ChatGPT模型进行多轮对话时，assistant字段的作用是提供之前的对话历史。这样做的目的是为了让模型能够了解到目前为止的对话上下文，从而更好地回应用户的当前问题。\n具体来说，assistant字段应包含之前所有的对话历史，包括用户的提问和模型的回复。这样，当您向模型提出新的问题时，它可以参考这些历史信息以提供更准确、连贯的回答。\n\n至于您提到的“最后一条消息应始终为用户消息”，这是指在一个对话回合中，用户的提问（即user字段的内容）应该是该回合的最后一条消息。这是因为模型设计成回应用户的最后一条消息。如果最后一条消息是模型的回复（即在assistant字段中），那么模型就没有新的用户输入来回应，这可能会导致对话上下文的混乱。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1700578508,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"瑞士","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":380921,"user_name":"阿斯蒂芬","can_delete":false,"product_type":"c1","uid":1024164,"ip_address":"广东","ucode":"61D5E3BDA4EBC5","user_header":"https://static001.geekbang.org/account/avatar/00/0f/a0/a4/b060c723.jpg","comment_is_top":false,"comment_ctime":1694444623,"is_pvip":false,"replies":[{"id":138728,"content":"说的好。LangChain它提供了指导开发者如何最有效地使用这些大模型的“最佳实践”。任何事情，我们站在巨人的肩膀上，不必自己从0开始。","user_name":"作者回复","user_name_real":"编辑","uid":1809833,"ctime":1694481182,"ip_address":"新加坡","comment_id":380921,"utype":1}],"discussion_count":2,"race_medal":0,"score":3,"product_id":100617601,"comment_content":"LangChain 作为LLM模型的应用开发框架，个人理解是致力于为模型落地提供技术层面的“一站式”解决方案。或者说是把大模型相关的技术集成和最佳流程实践，通过模块化、链式的方式，为应用开发者提供易用的脚手架。","like_count":1,"discussions":[{"author":{"id":1809833,"avatar":"https://static001.geekbang.org/account/avatar/00/1b/9d/a9/4602808f.jpg","nickname":"黄佳","note":"","ucode":"8EC41D2EAB0E3C","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":627716,"discussion_content":"说的好。LangChain它提供了指导开发者如何最有效地使用这些大模型的“最佳实践”。任何事情，我们站在巨人的肩膀上，不必自己从0开始。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1694481182,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"新加坡","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1024164,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/a0/a4/b060c723.jpg","nickname":"阿斯蒂芬","note":"","ucode":"61D5E3BDA4EBC5","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":628273,"discussion_content":"回来做思考题。做个记录\n1. 尝试了一下HuggingFace 的 bigscience/bloom-1b7 模型，用LangChain 跑出来的结果跟 HuggingFace 上 Hosted inference API 的结果一致。\n2. 这是一个Text Generation模型，它给出的response是跟随我们给的文本之后的有点类似填空，比如“请给我的花店起个名”，结果是“,叫&#34;花之恋&#34;。&#34;花之恋&#34;”，这点跟OpenAI的 QA 不太一样。\n3. LangChain 文档中对于 HuggingFace 提供了两种封装，HuggingFaceHub 是在线式调用，HuggingFacePipleline 是下载模型并在本地调用，一开始使用 HuggingFacePipleline 折腾了几个模型，好家伙，下载了好些GB，哈哈。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1695130690,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":"广东","group_id":0},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":380907,"user_name":"DOOM","can_delete":false,"product_type":"c1","uid":2050915,"ip_address":"四川","ucode":"1551DCE744CE73","user_header":"https://static001.geekbang.org/account/avatar/00/1f/4b/63/e97ef435.jpg","comment_is_top":false,"comment_ctime":1694432961,"is_pvip":false,"replies":[{"id":138718,"content":"是的，抽象层允许开发者与一个统一的接口进行交互，而不必关心其背后的具体实现细节。这种设计方法可以将复杂性隐藏起来，让开发者能够更加集中地关注他们的主要任务。\nLangChain提供抽象层使得整个系统具有更好的灵活性和可扩展性。这是它的核心价值其中的一个。\n另外，它也有很多的工具、接口，以及大量的内置提升模板，让模型的输出更准确，更符合我们应用开发的具体需求，让大模型不仅仅是一个聊天工具","user_name":"作者回复","user_name_real":"编辑","uid":1809833,"ctime":1694439093,"ip_address":"新加坡","comment_id":380907,"utype":1}],"discussion_count":1,"race_medal":0,"score":3,"product_id":100617601,"comment_content":"LangChain提供一个抽象层，这样后期更换其他语言模型的话，就不用修改已经写好的应用代码逻辑","like_count":1,"discussions":[{"author":{"id":1809833,"avatar":"https://static001.geekbang.org/account/avatar/00/1b/9d/a9/4602808f.jpg","nickname":"黄佳","note":"","ucode":"8EC41D2EAB0E3C","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":627690,"discussion_content":"是的，抽象层允许开发者与一个统一的接口进行交互，而不必关心其背后的具体实现细节。这种设计方法可以将复杂性隐藏起来，让开发者能够更加集中地关注他们的主要任务。\nLangChain提供抽象层使得整个系统具有更好的灵活性和可扩展性。这是它的核心价值其中的一个。\n另外，它也有很多的工具、接口，以及大量的内置提升模板，让模型的输出更准确，更符合我们应用开发的具体需求，让大模型不仅仅是一个聊天工具","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1694439093,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"新加坡","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":390458,"user_name":"秋天","can_delete":false,"product_type":"c1","uid":1057056,"ip_address":"北京","ucode":"A7E1D953EF7E17","user_header":"https://static001.geekbang.org/account/avatar/00/10/21/20/1299e137.jpg","comment_is_top":false,"comment_ctime":1715396783,"is_pvip":false,"replies":[{"id":142268,"content":"是吗，我装了0.2版的LangChain，还是可以运行，有些warning\n\nTo install langchain-community run `pip install -U langchain-community`.\n  warnings.warn(\nd:\\venv\\langchain_0_2_venv\\Lib\\site-packages\\langchain_core\\_api\\deprecation.py:119: LangChainDeprecationWarning: The class `OpenAI` was deprecated in LangChain 0.0.10 and will be removed in 0.3.0. An updated version of the class exists in the langchain-openai package and should be used instead. To use it run `pip install -U langchain-openai` and import as `from langchain_openai import OpenAI`.\n  warn_deprecated(\nd:\\venv\\langchain_0_2_venv\\Lib\\site-packages\\langchain_core\\_api\\deprecation.py:119: LangChainDeprecationWarning: The method `BaseLLM.predict` was deprecated in langchain-core 0.1.7 and will be removed in 0.3.0. Use invoke instead.\n  warn_deprecated(\n字\n\n&quot;花意盛开&quot;\n\n\n你也可以把import改为 \n`from langchain_community.llms import OpenAI`\n或者\nfrom langchain_openai import OpenAI\n试试","user_name":"作者回复","user_name_real":"编辑","uid":1809833,"ctime":1717648333,"ip_address":"新加坡","comment_id":390458,"utype":1}],"discussion_count":1,"race_medal":0,"score":3,"product_id":100617601,"comment_content":"import os\nos.environ[&quot;OPENAI_API_KEY&quot;] = &#39;你的Open API Key&#39;\nfrom langchain.llms import OpenAI\nllm = OpenAI(  \n    model=&quot;gpt-3.5-turbo-instruct&quot;,\n    temperature=0.8,\n    max_tokens=60,)\nresponse = llm.predict(&quot;请给我的花店起个名&quot;)\nprint(response)  这个代码 在目前这个时间段已经运行不了啦，老师","like_count":0,"discussions":[{"author":{"id":1809833,"avatar":"https://static001.geekbang.org/account/avatar/00/1b/9d/a9/4602808f.jpg","nickname":"黄佳","note":"","ucode":"8EC41D2EAB0E3C","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":646255,"discussion_content":"是吗，我装了0.2版的LangChain，还是可以运行，有些warning\n\nTo install langchain-community run `pip install -U langchain-community`.\n  warnings.warn(\nd:\\venv\\langchain_0_2_venv\\Lib\\site-packages\\langchain_core\\_api\\deprecation.py:119: LangChainDeprecationWarning: The class `OpenAI` was deprecated in LangChain 0.0.10 and will be removed in 0.3.0. An updated version of the class exists in the langchain-openai package and should be used instead. To use it run `pip install -U langchain-openai` and import as `from langchain_openai import OpenAI`.\n  warn_deprecated(\nd:\\venv\\langchain_0_2_venv\\Lib\\site-packages\\langchain_core\\_api\\deprecation.py:119: LangChainDeprecationWarning: The method `BaseLLM.predict` was deprecated in langchain-core 0.1.7 and will be removed in 0.3.0. Use invoke instead.\n  warn_deprecated(\n字\n\n&#34;花意盛开&#34;\n\n\n你也可以把import改为 \n`from langchain_community.llms import OpenAI`\n或者\nfrom langchain_openai import OpenAI\n试试","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1717648333,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"新加坡","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2,\"source\":0}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":390289,"user_name":"Coding","can_delete":false,"product_type":"c1","uid":1124243,"ip_address":"广东","ucode":"BFBA2D0782AF3A","user_header":"https://static001.geekbang.org/account/avatar/00/11/27/93/ade2062d.jpg","comment_is_top":false,"comment_ctime":1715005763,"is_pvip":false,"replies":[{"id":142275,"content":"对对对！我会修改正文，前面应该加个chat。","user_name":"作者回复","user_name_real":"编辑","uid":1809833,"ctime":1717649345,"ip_address":"新加坡","comment_id":390289,"utype":1}],"discussion_count":1,"race_medal":0,"score":3,"product_id":100617601,"comment_content":"老师，调用聊天模型，我理解应该是client.chat.completions.create，代码示例是不是少了个chat","like_count":0,"discussions":[{"author":{"id":1809833,"avatar":"https://static001.geekbang.org/account/avatar/00/1b/9d/a9/4602808f.jpg","nickname":"黄佳","note":"","ucode":"8EC41D2EAB0E3C","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":646263,"discussion_content":"对对对！我会修改正文，前面应该加个chat。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1717649345,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"新加坡","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2,\"source\":0}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":389812,"user_name":"saltedfish","can_delete":false,"product_type":"c1","uid":1946257,"ip_address":"北京","ucode":"936571E1AC4139","user_header":"https://static001.geekbang.org/account/avatar/00/1d/b2/91/cf0de36e.jpg","comment_is_top":false,"comment_ctime":1713516975,"is_pvip":false,"replies":[{"id":142148,"content":"对，现在基本上都用Chat模型了。","user_name":"作者回复","user_name_real":"编辑","uid":1809833,"ctime":1716480918,"ip_address":"新加坡","comment_id":389812,"utype":1}],"discussion_count":1,"race_medal":0,"score":3,"product_id":100617601,"comment_content":"gpt-3.5-turbo-instruct是chat模型不是text模型（可能是后来改的）","like_count":0,"discussions":[{"author":{"id":1809833,"avatar":"https://static001.geekbang.org/account/avatar/00/1b/9d/a9/4602808f.jpg","nickname":"黄佳","note":"","ucode":"8EC41D2EAB0E3C","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":645659,"discussion_content":"对，现在基本上都用Chat模型了。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1716480918,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"新加坡","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2,\"source\":0}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":389237,"user_name":"Geek_27bb04","can_delete":false,"product_type":"c1","uid":3871103,"ip_address":"上海","ucode":"D09053490A50CB","user_header":"","comment_is_top":false,"comment_ctime":1711941416,"is_pvip":false,"replies":[{"id":141711,"content":"Langchain本身是一个模块化的框架,支持多种LLM的接入方式,包括API调用和本地部署。如果你们已经在本地私有部署了开源大模型,完全可以通过自定义LLM类的方式对接到Langchain中,而不需要通过API Key。只需要继承BaseLLM类,实现对应的私有部署调用逻辑即可。具体需要参考该大模型的文档，HuggingFace等模型库的文档，以及LangChain的文档。组织起来。","user_name":"作者回复","user_name_real":"编辑","uid":1809833,"ctime":1712809400,"ip_address":"新加坡","comment_id":389237,"utype":1}],"discussion_count":1,"race_medal":0,"score":3,"product_id":100617601,"comment_content":"老师您好&#xff0c;我们想用langchain&#43;开源模型微调的方式&#xff0c;实现公司内私有数据的简单知识问答&#xff0c;请问langchain架构支持对接私有部署的模型吗&#xff0c;不是通过调用外部大模型API的方式","like_count":0,"discussions":[{"author":{"id":1809833,"avatar":"https://static001.geekbang.org/account/avatar/00/1b/9d/a9/4602808f.jpg","nickname":"黄佳","note":"","ucode":"8EC41D2EAB0E3C","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":641601,"discussion_content":"Langchain本身是一个模块化的框架,支持多种LLM的接入方式,包括API调用和本地部署。如果你们已经在本地私有部署了开源大模型,完全可以通过自定义LLM类的方式对接到Langchain中,而不需要通过API Key。只需要继承BaseLLM类,实现对应的私有部署调用逻辑即可。具体需要参考该大模型的文档，HuggingFace等模型库的文档，以及LangChain的文档。组织起来。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1712809400,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"新加坡","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2,\"source\":0}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":389155,"user_name":"神话","can_delete":false,"product_type":"c1","uid":1345713,"ip_address":"北京","ucode":"626B04135CDB73","user_header":"https://static001.geekbang.org/account/avatar/00/14/88/b1/5718003f.jpg","comment_is_top":false,"comment_ctime":1711693254,"is_pvip":false,"replies":[{"id":141617,"content":"我也是不大清楚，可能只有用开源模型，尤其是国内开源模型如ChatGLM做尝试。代码逻辑是一致的，更换一下模型。但是开源模型和GPT比，推理能力会有差别。","user_name":"作者回复","user_name_real":"编辑","uid":1809833,"ctime":1711987770,"ip_address":"新加坡","comment_id":389155,"utype":1}],"discussion_count":4,"race_medal":0,"score":3,"product_id":100617601,"comment_content":"现在openapi的账号不好申请，而且对ip有限制，可有其他替代方案？","like_count":0,"discussions":[{"author":{"id":1809833,"avatar":"https://static001.geekbang.org/account/avatar/00/1b/9d/a9/4602808f.jpg","nickname":"黄佳","note":"","ucode":"8EC41D2EAB0E3C","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":640928,"discussion_content":"我也是不大清楚，可能只有用开源模型，尤其是国内开源模型如ChatGLM做尝试。代码逻辑是一致的，更换一下模型。但是开源模型和GPT比，推理能力会有差别。","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1711987770,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"新加坡","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2,\"source\":0}","child_discussion_number":1,"child_discussions":[{"author":{"id":1345713,"avatar":"https://static001.geekbang.org/account/avatar/00/14/88/b1/5718003f.jpg","nickname":"神话","note":"","ucode":"626B04135CDB73","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1809833,"avatar":"https://static001.geekbang.org/account/avatar/00/1b/9d/a9/4602808f.jpg","nickname":"黄佳","note":"","ucode":"8EC41D2EAB0E3C","race_medal":0,"user_type":2,"is_pvip":false},"discussion":{"id":640937,"discussion_content":"多谢，我研究一下chatglm","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1712014704,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":640928,"ip_address":"黑龙江","group_id":0},"score":640937,"extra":""}]},{"author":{"id":1058708,"avatar":"https://static001.geekbang.org/account/avatar/00/10/27/94/f620a3a9.jpg","nickname":"冬瓜","note":"","ucode":"8685F458A33340","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":641152,"discussion_content":"用百度的千帆，我就用这个","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1712248320,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":"福建","group_id":0},"score":2,"extra":"","child_discussion_number":1,"child_discussions":[{"author":{"id":1345713,"avatar":"https://static001.geekbang.org/account/avatar/00/14/88/b1/5718003f.jpg","nickname":"神话","note":"","ucode":"626B04135CDB73","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1058708,"avatar":"https://static001.geekbang.org/account/avatar/00/10/27/94/f620a3a9.jpg","nickname":"冬瓜","note":"","ucode":"8685F458A33340","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":641369,"discussion_content":"多谢，我试试","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1712567144,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":641152,"ip_address":"北京","group_id":0},"score":641369,"extra":""}]}]},{"had_liked":false,"id":386716,"user_name":"Crystal","can_delete":false,"product_type":"c1","uid":1308710,"ip_address":"浙江","ucode":"1481B20843D690","user_header":"https://static001.geekbang.org/account/avatar/00/13/f8/26/e0bd8d24.jpg","comment_is_top":false,"comment_ctime":1705392363,"is_pvip":false,"replies":[{"id":141069,"content":"这一点，因为我不在国内，也不是很清楚。","user_name":"作者回复","user_name_real":"编辑","uid":1809833,"ctime":1705944835,"ip_address":"瑞士","comment_id":386716,"utype":1}],"discussion_count":2,"race_medal":0,"score":3,"product_id":100617601,"comment_content":"老师，有什么办法搞定openai充值","like_count":0,"discussions":[{"author":{"id":1809833,"avatar":"https://static001.geekbang.org/account/avatar/00/1b/9d/a9/4602808f.jpg","nickname":"黄佳","note":"","ucode":"8EC41D2EAB0E3C","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":636328,"discussion_content":"这一点，因为我不在国内，也不是很清楚。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1705944835,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"瑞士","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2,\"source\":0}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1124243,"avatar":"https://static001.geekbang.org/account/avatar/00/11/27/93/ade2062d.jpg","nickname":"Coding","note":"","ucode":"BFBA2D0782AF3A","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":644137,"discussion_content":"搜一下wildcard","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1715005510,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":"广东","group_id":0},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":386664,"user_name":"潮舀","can_delete":false,"product_type":"c1","uid":3811535,"ip_address":"广东","ucode":"BFB48C1F8D23B1","user_header":"https://static001.geekbang.org/account/avatar/00/3a/28/cf/6fd2e10e.jpg","comment_is_top":false,"comment_ctime":1705304426,"is_pvip":false,"replies":[{"id":141080,"content":"好的，已加！","user_name":"作者回复","user_name_real":"编辑","uid":1809833,"ctime":1705989807,"ip_address":"瑞士","comment_id":386664,"utype":1}],"discussion_count":1,"race_medal":0,"score":3,"product_id":100617601,"comment_content":"老师，刚学，有很多疑惑的地方没途径交流，您的微信加不了了，麻烦您加我一下拉我进一下交流群，我的微信是：15871350247","like_count":0,"discussions":[{"author":{"id":1809833,"avatar":"https://static001.geekbang.org/account/avatar/00/1b/9d/a9/4602808f.jpg","nickname":"黄佳","note":"","ucode":"8EC41D2EAB0E3C","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":636358,"discussion_content":"好的，已加！","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1705989807,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"瑞士","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2,\"source\":0}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":386284,"user_name":"rs勿忘初心","can_delete":false,"product_type":"c1","uid":1519200,"ip_address":"北京","ucode":"557D1ECD757195","user_header":"https://static001.geekbang.org/account/avatar/00/17/2e/60/4fa1f3bd.jpg","comment_is_top":false,"comment_ctime":1704441596,"is_pvip":false,"replies":[{"id":140849,"content":"啊？！还有这样的事情？我加你了。","user_name":"作者回复","user_name_real":"编辑","uid":1809833,"ctime":1704817351,"ip_address":"瑞士","comment_id":386284,"utype":1}],"discussion_count":1,"race_medal":0,"score":3,"product_id":100617601,"comment_content":"已经主动加不了老师微信了，显示被加次数太多，呜呜，老师方便的拉我进入下交流群：rs894568618，感谢","like_count":0,"discussions":[{"author":{"id":1809833,"avatar":"https://static001.geekbang.org/account/avatar/00/1b/9d/a9/4602808f.jpg","nickname":"黄佳","note":"","ucode":"8EC41D2EAB0E3C","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":635432,"discussion_content":"啊？！还有这样的事情？我加你了。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1704817351,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"瑞士","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2,\"source\":0}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":384998,"user_name":"Sandy","can_delete":false,"product_type":"c1","uid":1029353,"ip_address":"上海","ucode":"471882A50FA2F6","user_header":"https://static001.geekbang.org/account/avatar/00/0f/b4/e9/f43781b3.jpg","comment_is_top":false,"comment_ctime":1701918451,"is_pvip":false,"replies":[{"id":140844,"content":"同学好，这块内容我不大熟悉。看看有没有其它同学有用过。我回答的话，也只能问ChatGPT。\n\n下面是ChatGPT的回答：\n\n在 Azure Databricks 中设置环境变量通常有几种方法。由于 Databricks 的 notebook 环境基于 Apache Spark，它与传统的 Python 运行环境略有不同。以下是一些设置环境变量的方法：\n\n1. 使用 %sh 魔法命令\n在 Databricks notebook 中，你可以使用 %sh 魔法命令来运行 shell 命令。要设置环境变量，你可以这样做：\n\npython\nCopy code\n%sh\nexport OPENAI_API_TYPE=azure\nexport OPENAI_API_VERSION=2023-05-15\nexport OPENAI_API_BASE=https:&#47;&#47;vpa-openai-dev.openai.azure.com\nexport OPENAI_API_KEY=mykey\n但请注意，这种方法设置的环境变量仅在当前 notebook session 中有效，且只对随后的 %sh 命令有效。Python 代码不能访问这些变量。\n\n2. 在 Python 代码中设置\n你可以直接在 Python 代码中使用 os.environ 来设置环境变量。这样设置的变量将对当前 notebook 中的所有代码有效：\n\npython\nCopy code\nimport os\n\nos.environ[&#39;OPENAI_API_TYPE&#39;] = &#39;azure&#39;\nos.environ[&#39;OPENAI_API_VERSION&#39;] = &#39;2023-05-15&#39;\nos.environ[&#39;OPENAI_API_BASE&#39;] = &#39;https:&#47;&#47;vpa-openai-dev.openai.azure.com&#39;\nos.environ[&#39;OPENAI_API_KEY&#39;] = &#39;mykey&#39;\n\n# 之后你可以创建你的 AzureOpenAI 实例\n# llm = AzureOpenAI(temperature=0, verbose=True)","user_name":"作者回复","user_name_real":"编辑","uid":1809833,"ctime":1704816682,"ip_address":"瑞士","comment_id":384998,"utype":1}],"discussion_count":2,"race_medal":0,"score":4,"product_id":100617601,"comment_content":"老师你好 我是Azure Databricks中开发gpt的功能 怎么时候环境变量呢 十分感谢\n\n#from langchain.chat_models import AzureChatOpenAI\n# from langchain.llms import AzureOpenAI\n\n# export OPENAI_API_TYPE=azure\n# export OPENAI_API_VERSION=2023-05-15\n# export OPENAI_API_BASE=https:&#47;&#47;vpa-openai-dev.openai.azure.com\n# export OPENAI_API_KEY=mykey\n\n\n# llm = AzureOpenAI(temperature=0, verbose=True)","like_count":0,"discussions":[{"author":{"id":1809833,"avatar":"https://static001.geekbang.org/account/avatar/00/1b/9d/a9/4602808f.jpg","nickname":"黄佳","note":"","ucode":"8EC41D2EAB0E3C","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":635427,"discussion_content":"同学好，这块内容我不大熟悉。看看有没有其它同学有用过。我回答的话，也只能问ChatGPT。\n\n下面是ChatGPT的回答：\n\n在 Azure Databricks 中设置环境变量通常有几种方法。由于 Databricks 的 notebook 环境基于 Apache Spark，它与传统的 Python 运行环境略有不同。以下是一些设置环境变量的方法：\n\n1. 使用 %sh 魔法命令\n在 Databricks notebook 中，你可以使用 %sh 魔法命令来运行 shell 命令。要设置环境变量，你可以这样做：\n\npython\nCopy code\n%sh\nexport OPENAI_API_TYPE=azure\nexport OPENAI_API_VERSION=2023-05-15\nexport OPENAI_API_BASE=https://vpa-openai-dev.openai.azure.com\nexport OPENAI_API_KEY=mykey\n但请注意，这种方法设置的环境变量仅在当前 notebook session 中有效，且只对随后的 %sh 命令有效。Python 代码不能访问这些变量。\n\n2. 在 Python 代码中设置\n你可以直接在 Python 代码中使用 os.environ 来设置环境变量。这样设置的变量将对当前 notebook 中的所有代码有效：\n\npython\nCopy code\nimport os\n\nos.environ[&#39;OPENAI_API_TYPE&#39;] = &#39;azure&#39;\nos.environ[&#39;OPENAI_API_VERSION&#39;] = &#39;2023-05-15&#39;\nos.environ[&#39;OPENAI_API_BASE&#39;] = &#39;https://vpa-openai-dev.openai.azure.com&#39;\nos.environ[&#39;OPENAI_API_KEY&#39;] = &#39;mykey&#39;\n\n# 之后你可以创建你的 AzureOpenAI 实例\n# llm = AzureOpenAI(temperature=0, verbose=True)","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1704816682,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"瑞士","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2,\"source\":0}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1301877,"avatar":"https://static001.geekbang.org/account/avatar/00/13/dd/75/92acdab9.jpg","nickname":"crazy_stone","note":"","ucode":"A266CACBD6FB03","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":633752,"discussion_content":"请问你的问题解决了吗？","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1702567942,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":"北京","group_id":0},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":384930,"user_name":"不吃苦瓜","can_delete":false,"product_type":"c1","uid":3623296,"ip_address":"福建","ucode":"7C8D2994D0A722","user_header":"https://static001.geekbang.org/account/avatar/00/37/49/80/791d0f5e.jpg","comment_is_top":false,"comment_ctime":1701793331,"is_pvip":false,"replies":[{"id":140918,"content":"我觉得可以，你的接口就好比自己的CustomLLM。\nhttps:&#47;&#47;python.langchain.com&#47;docs&#47;modules&#47;model_io&#47;llms&#47;custom_llm\n\nclass CustomLLM(LLM):\n    n: int\n\n    @property\n    def _llm_type(self) -&gt; str:\n        return &quot;custom&quot;\n\n    def _call(\n        self,\n        prompt: str,\n        stop: Optional[List[str]] = None,\n        run_manager: Optional[CallbackManagerForLLMRun] = None,\n        **kwargs: Any,\n    ) -&gt; str:\n        if stop is not None:\n            raise ValueError(&quot;stop kwargs are not permitted.&quot;)\n        return prompt[: self.n]\n\n    @property\n    def _identifying_params(self) -&gt; Mapping[str, Any]:\n        &quot;&quot;&quot;Get the identifying parameters.&quot;&quot;&quot;\n        return {&quot;n&quot;: self.n}","user_name":"作者回复","user_name_real":"编辑","uid":1809833,"ctime":1705069567,"ip_address":"瑞士","comment_id":384930,"utype":1}],"discussion_count":2,"race_medal":0,"score":4,"product_id":100617601,"comment_content":"老师，咱们这个课程主要是用哪个大模型来做的，我想我自己封装了星火大模型的接口，能放在咱们这个课程用吗，我之前照着官方文档学过一下langchain发现，他对于OpenAI的生态做的很好，但是其他的就不知道了","like_count":0,"discussions":[{"author":{"id":1809833,"avatar":"https://static001.geekbang.org/account/avatar/00/1b/9d/a9/4602808f.jpg","nickname":"黄佳","note":"","ucode":"8EC41D2EAB0E3C","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":635724,"discussion_content":"我觉得可以，你的接口就好比自己的CustomLLM。\nhttps://python.langchain.com/docs/modules/model_io/llms/custom_llm\n\nclass CustomLLM(LLM):\n    n: int\n\n    @property\n    def _llm_type(self) -&gt; str:\n        return &#34;custom&#34;\n\n    def _call(\n        self,\n        prompt: str,\n        stop: Optional[List[str]] = None,\n        run_manager: Optional[CallbackManagerForLLMRun] = None,\n        **kwargs: Any,\n    ) -&gt; str:\n        if stop is not None:\n            raise ValueError(&#34;stop kwargs are not permitted.&#34;)\n        return prompt[: self.n]\n\n    @property\n    def _identifying_params(self) -&gt; Mapping[str, Any]:\n        &#34;&#34;&#34;Get the identifying parameters.&#34;&#34;&#34;\n        return {&#34;n&#34;: self.n}","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1705069567,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"瑞士","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2,\"source\":0}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1058708,"avatar":"https://static001.geekbang.org/account/avatar/00/10/27/94/f620a3a9.jpg","nickname":"冬瓜","note":"","ucode":"8685F458A33340","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":641153,"discussion_content":"这位兄 福建哪里人，网名跟我太像了……我在其他地方叫不吃冬瓜……","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1712248434,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":"福建","group_id":0},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":383727,"user_name":"卓丁","can_delete":false,"product_type":"c1","uid":1030687,"ip_address":"北京","ucode":"71B68238D304FE","user_header":"https://static001.geekbang.org/account/avatar/00/0f/ba/1f/7551f182.jpg","comment_is_top":false,"comment_ctime":1699521042,"is_pvip":false,"replies":[{"id":140195,"content":"看起来没毛病似的，同学的问题现在解决了吗？","user_name":"作者回复","user_name_real":"编辑","uid":1809833,"ctime":1700583734,"ip_address":"瑞士","comment_id":383727,"utype":1}],"discussion_count":2,"race_medal":0,"score":4,"product_id":100617601,"comment_content":"response = openai.Completion.create(model=&quot;text-davinci-003&quot;, temperature=0.5, max_tokens=100, prompt=&quot;请给我的花店起个名&quot;)\n\nprint(response)\n\n老师好，我运行了上面相同的例子，直接报：\n\n{\n  &quot;error&quot;: {\n    &quot;code&quot;: &quot;DeploymentNotFound&quot;,\n    &quot;message&quot;: &quot;The API deployment for this resource does not exist. If you created the deployment within the last 5 minutes, please wait a moment and try again.&quot;\n  }\n}\n\n请问下，如何替换 ，才可以正常的run ？ ","like_count":0,"discussions":[{"author":{"id":1809833,"avatar":"https://static001.geekbang.org/account/avatar/00/1b/9d/a9/4602808f.jpg","nickname":"黄佳","note":"","ucode":"8EC41D2EAB0E3C","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":632244,"discussion_content":"看起来没毛病似的，同学的问题现在解决了吗？","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1700583734,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"瑞士","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1255076,"avatar":"https://static001.geekbang.org/account/avatar/00/13/26/a4/404ea926.jpg","nickname":"Da「=_=」","note":"","ucode":"B954AFEABAA2FE","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":632349,"discussion_content":"openai新版本切换了client的方式，试下\nfrom openai import OpenAI\nclient = OpenAI()\nresponse = client.completions.create(...)","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1700707544,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":"新加坡","group_id":0},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":383598,"user_name":"Blow","can_delete":false,"product_type":"c1","uid":3688255,"ip_address":"福建","ucode":"4B8B76CF352E41","user_header":"https://static001.geekbang.org/account/avatar/00/38/47/3f/51708649.jpg","comment_is_top":false,"comment_ctime":1699328431,"is_pvip":false,"replies":[{"id":140191,"content":"很多同学都在群里了，加我微信jackyhuang79","user_name":"作者回复","user_name_real":"编辑","uid":1809833,"ctime":1700582560,"ip_address":"瑞士","comment_id":383598,"utype":1}],"discussion_count":2,"race_medal":0,"score":4,"product_id":100617601,"comment_content":"有人入群了？哪位大哥能拉我入群","like_count":0,"discussions":[{"author":{"id":1809833,"avatar":"https://static001.geekbang.org/account/avatar/00/1b/9d/a9/4602808f.jpg","nickname":"黄佳","note":"","ucode":"8EC41D2EAB0E3C","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":632240,"discussion_content":"很多同学都在群里了，加我微信jackyhuang79","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1700582560,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"瑞士","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":3688255,"avatar":"https://static001.geekbang.org/account/avatar/00/38/47/3f/51708649.jpg","nickname":"Blow","note":"","ucode":"4B8B76CF352E41","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":632850,"discussion_content":"老师，我给你发了验证消息很多次，没有通过","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1701430772,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":"福建","group_id":0},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":383596,"user_name":"Geek_7ee455","can_delete":false,"product_type":"c1","uid":1527581,"ip_address":"浙江","ucode":"76C69F26B0F653","user_header":"https://thirdwx.qlogo.cn/mmopen/vi_32/270T9KAFd4oCxXXB1giaMDaJuTQVib8gPt77VkM5dbS3hW60kwTNnxMYpVibwWVdnASCrymBbwT7HI77URia0KUylw/132","comment_is_top":false,"comment_ctime":1699327697,"is_pvip":false,"replies":[{"id":140203,"content":"langchain不大适合做这个，你可以用Bert或者GPT干这个事儿。","user_name":"作者回复","user_name_real":"编辑","uid":1809833,"ctime":1700584252,"ip_address":"瑞士","comment_id":383596,"utype":1}],"discussion_count":1,"race_medal":0,"score":4,"product_id":100617601,"comment_content":"1 langchain本身不仅仅对openai家族的支持,支持多种语言模型和数据源,封装了一些工具,能够减少我们的开发成本,但是感觉它的文档写的不是那么清晰,读起来有点费劲\n顺便,老师, langchain能做对用户问题中的专有名词进行规范化处理吗","like_count":0,"discussions":[{"author":{"id":1809833,"avatar":"https://static001.geekbang.org/account/avatar/00/1b/9d/a9/4602808f.jpg","nickname":"黄佳","note":"","ucode":"8EC41D2EAB0E3C","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":632253,"discussion_content":"langchain不大适合做这个，你可以用Bert或者GPT干这个事儿。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1700584252,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"瑞士","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":382170,"user_name":"Blow","can_delete":false,"product_type":"c1","uid":3688255,"ip_address":"福建","ucode":"4B8B76CF352E41","user_header":"https://static001.geekbang.org/account/avatar/00/38/47/3f/51708649.jpg","comment_is_top":false,"comment_ctime":1696828738,"is_pvip":false,"replies":[{"id":139256,"content":"我感觉OpenAI没有提供这个时戳。要获取模型生成内容的时间戳，可能需要在你的应用、服务或系统层面上添加这个功能，而不是从模型自身获得。向模型发送一个请求并得到响应时在代码中记录当前的时间。或者利用Callback和Log功能得到。\n可以看一下OpenAI的API，我没有找到时戳。\nhttps:&#47;&#47;platform.openai.com&#47;docs&#47;api-reference&#47;chat&#47;create","user_name":"作者回复","user_name_real":"编辑","uid":1809833,"ctime":1697018627,"ip_address":"新加坡","comment_id":382170,"utype":1}],"discussion_count":1,"race_medal":0,"score":4,"product_id":100617601,"comment_content":"老师，如何知道llm中OpenAI类剩下的方法，我想要获得模型返回的时间戳","like_count":0,"discussions":[{"author":{"id":1809833,"avatar":"https://static001.geekbang.org/account/avatar/00/1b/9d/a9/4602808f.jpg","nickname":"黄佳","note":"","ucode":"8EC41D2EAB0E3C","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":629405,"discussion_content":"我感觉OpenAI没有提供这个时戳。要获取模型生成内容的时间戳，可能需要在你的应用、服务或系统层面上添加这个功能，而不是从模型自身获得。向模型发送一个请求并得到响应时在代码中记录当前的时间。或者利用Callback和Log功能得到。\n可以看一下OpenAI的API，我没有找到时戳。\nhttps://platform.openai.com/docs/api-reference/chat/create","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1697018627,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"新加坡","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":381874,"user_name":"HdUIprince","can_delete":false,"product_type":"c1","uid":1262168,"ip_address":"美国","ucode":"2510EBFACDBDB2","user_header":"https://static001.geekbang.org/account/avatar/00/13/42/58/2286eca6.jpg","comment_is_top":false,"comment_ctime":1696078417,"is_pvip":false,"replies":[{"id":139118,"content":"是么，这挺有意思，应该是觉得你的话没说完。因为我们让它给花店起个名。。。。 它觉得应该是起个“名字” 。。。哈哈","user_name":"作者回复","user_name_real":"编辑","uid":1809833,"ctime":1696346114,"ip_address":"瑞士","comment_id":381874,"utype":1}],"discussion_count":2,"race_medal":0,"score":4,"product_id":100617601,"comment_content":"本地测试，基于Text的模型都会先输出一个 &quot;字&quot;，一个 &quot;\\n&quot;，然后才是具体内容，请问下老师，前面的 &quot;字&quot; 的输出是模型对于问题的补全么\n\n```plain\n字\n\n美花坊、芳草园、花舞香草、小花园、芬芳花店、花艺汇、花艺家、花艺坊、花艺汇、花艺园、花之恋\n```","like_count":0,"discussions":[{"author":{"id":1809833,"avatar":"https://static001.geekbang.org/account/avatar/00/1b/9d/a9/4602808f.jpg","nickname":"黄佳","note":"","ucode":"8EC41D2EAB0E3C","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":628964,"discussion_content":"是么，这挺有意思，应该是觉得你的话没说完。因为我们让它给花店起个名。。。。 它觉得应该是起个“名字” 。。。哈哈","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1696346114,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"瑞士","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":2397945,"avatar":"https://static001.geekbang.org/account/avatar/00/24/96/f9/e52955e1.jpg","nickname":"吴亮","note":"","ucode":"CEB3995975654C","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":630880,"discussion_content":"哈哈，我的response也是这样的，gpt3.5的响应。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1699002347,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":"广东","group_id":0},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":381812,"user_name":"Mr.S","can_delete":false,"product_type":"c1","uid":1158946,"ip_address":"广东","ucode":"96DC8BE01D54C2","user_header":"https://static001.geekbang.org/account/avatar/00/11/af/22/559c2fdb.jpg","comment_is_top":false,"comment_ctime":1695891991,"is_pvip":false,"replies":[{"id":139095,"content":"对的，它可以简化开发流程，至少是可以参考这个框架里面的思路进行基于LLM的开发工作。","user_name":"作者回复","user_name_real":"编辑","uid":1809833,"ctime":1696176108,"ip_address":"新加坡","comment_id":381812,"utype":1}],"discussion_count":1,"race_medal":0,"score":4,"product_id":100617601,"comment_content":"问题1:\n从解决问题的角度看，一个模型通常只能解决一个特定场景的问题，要解决复杂的业务问题，需要多模型协作，有LangChain这么一个开发工具，可以更方便的对接多模型，提升解决问题效率\n从工程化角度看，LangChain这样的统一框架工具能提升开发效率","like_count":0,"discussions":[{"author":{"id":1809833,"avatar":"https://static001.geekbang.org/account/avatar/00/1b/9d/a9/4602808f.jpg","nickname":"黄佳","note":"","ucode":"8EC41D2EAB0E3C","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":628894,"discussion_content":"对的，它可以简化开发流程，至少是可以参考这个框架里面的思路进行基于LLM的开发工作。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1696176108,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"新加坡","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":381696,"user_name":"🦅⃒⃘⃤ Shean","can_delete":false,"product_type":"c1","uid":2587437,"ip_address":"北京","ucode":"0576DF60476107","user_header":"https://static001.geekbang.org/account/avatar/00/27/7b/2d/6ba4a75a.jpg","comment_is_top":false,"comment_ctime":1695693249,"is_pvip":false,"replies":[{"id":139020,"content":"我用的langchain 0.0.284，目前最新的应该是0.030","user_name":"作者回复","user_name_real":"作者","uid":1809833,"ctime":1695714951,"ip_address":"新加坡","comment_id":381696,"utype":1}],"discussion_count":1,"race_medal":0,"score":4,"product_id":100617601,"comment_content":"老师，咱们用langchain哪个版本的？","like_count":0,"discussions":[{"author":{"id":1809833,"avatar":"https://static001.geekbang.org/account/avatar/00/1b/9d/a9/4602808f.jpg","nickname":"黄佳","note":"","ucode":"8EC41D2EAB0E3C","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":628669,"discussion_content":"我用的langchain 0.0.284，目前最新的应该是0.030","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1695714951,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"新加坡","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":381635,"user_name":"bluuus","can_delete":false,"product_type":"c1","uid":1218438,"ip_address":"中国香港","ucode":"274D5063B5F542","user_header":"https://static001.geekbang.org/account/avatar/00/12/97/86/fb564a19.jpg","comment_is_top":false,"comment_ctime":1695563100,"is_pvip":false,"replies":[{"id":139017,"content":"gpt-3.5亦可","user_name":"作者回复","user_name_real":"编辑","uid":1809833,"ctime":1695702805,"ip_address":"新加坡","comment_id":381635,"utype":1}],"discussion_count":2,"race_medal":0,"score":4,"product_id":100617601,"comment_content":"chat模型只能使用gpt-4吗？","like_count":0,"discussions":[{"author":{"id":1809833,"avatar":"https://static001.geekbang.org/account/avatar/00/1b/9d/a9/4602808f.jpg","nickname":"黄佳","note":"","ucode":"8EC41D2EAB0E3C","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":628662,"discussion_content":"gpt-3.5亦可","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1695702805,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"新加坡","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1519200,"avatar":"https://static001.geekbang.org/account/avatar/00/17/2e/60/4fa1f3bd.jpg","nickname":"rs勿忘初心","note":"","ucode":"557D1ECD757195","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":635144,"discussion_content":"示例：model=&#34;gpt-3.5-turbo&#34;","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1704441634,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":"北京","group_id":0},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":381576,"user_name":"Monin","can_delete":false,"product_type":"c1","uid":3144503,"ip_address":"上海","ucode":"AA6C4C4F19FA14","user_header":"https://static001.geekbang.org/account/avatar/00/2f/fb/37/791d0f5e.jpg","comment_is_top":false,"comment_ctime":1695460317,"is_pvip":false,"replies":[{"id":139013,"content":"同学你好。LangChain并不是大模型的训练+微调，它是基于大模型推理能力的高层API。是应用程序开发。\nTF和Pytorch，是做大&#47;小模型的训练、微调的框架。\n这两者需求量都很大，具体取决于你想往那个方向钻研或者你的业务&#47;科研场景是什么。","user_name":"作者回复","user_name_real":"作者","uid":1809833,"ctime":1695701928,"ip_address":"新加坡","comment_id":381576,"utype":1}],"discussion_count":1,"race_medal":0,"score":5,"product_id":100617601,"comment_content":"黄佳老师  目前工程应用主要是基于Langchain等的大模型训练+微调  还是基于TF和pytorch的深度学习训练？\n","like_count":0,"discussions":[{"author":{"id":1809833,"avatar":"https://static001.geekbang.org/account/avatar/00/1b/9d/a9/4602808f.jpg","nickname":"黄佳","note":"","ucode":"8EC41D2EAB0E3C","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":628658,"discussion_content":"同学你好。LangChain并不是大模型的训练+微调，它是基于大模型推理能力的高层API。是应用程序开发。\nTF和Pytorch，是做大/小模型的训练、微调的框架。\n这两者需求量都很大，具体取决于你想往那个方向钻研或者你的业务/科研场景是什么。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1695701928,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"新加坡","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":381439,"user_name":"Geek_695050","can_delete":false,"product_type":"c1","uid":3716957,"ip_address":"四川","ucode":"B99AA432CEC522","user_header":"","comment_is_top":false,"comment_ctime":1695202852,"is_pvip":false,"replies":[{"id":138943,"content":"应该是的，但是总体来说不是很贵，跑我们所有的教学程序也不会超过几毛钱。而且，LangChain的框架从学习的角度使用GPT-3(text-davinci-003) 或者GPT3.5，甚至其它开源模型都是可以的。","user_name":"作者回复","user_name_real":"编辑","uid":1809833,"ctime":1695224723,"ip_address":"新加坡","comment_id":381439,"utype":1}],"discussion_count":1,"race_medal":0,"score":5,"product_id":100617601,"comment_content":"老师，是不是只有买了GPT4.0的服务，才能调4.0的API？","like_count":0,"discussions":[{"author":{"id":1809833,"avatar":"https://static001.geekbang.org/account/avatar/00/1b/9d/a9/4602808f.jpg","nickname":"黄佳","note":"","ucode":"8EC41D2EAB0E3C","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":628350,"discussion_content":"应该是的，但是总体来说不是很贵，跑我们所有的教学程序也不会超过几毛钱。而且，LangChain的框架从学习的角度使用GPT-3(text-davinci-003) 或者GPT3.5，甚至其它开源模型都是可以的。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1695224723,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"新加坡","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":381329,"user_name":"吴曦","can_delete":false,"product_type":"c1","uid":1013673,"ip_address":"美国","ucode":"0AEC3D078F1587","user_header":"https://static001.geekbang.org/account/avatar/00/0f/77/a9/846e2e85.jpg","comment_is_top":false,"comment_ctime":1695047807,"is_pvip":false,"replies":[{"id":138910,"content":"同学，你的这个Version不对。---- 当然这也是因为LangChain太新，自己也混乱。\nLangChain截至2023年9月最新版是0.029！！！\nhttps:&#47;&#47;pypi.org&#47;project&#47;langchain&#47; ---- 在这里查看\n我用的是0.028版本\n你可以 1. 指定版本 2. 使用pip install -U langchain来把它变到0.029\n版本搞定就好嘞。","user_name":"作者回复","user_name_real":"编辑","uid":1809833,"ctime":1695086359,"ip_address":"新加坡","comment_id":381329,"utype":1}],"discussion_count":2,"race_medal":0,"score":5,"product_id":100617601,"comment_content":"老师，我安装了最新版的langchain（0.0.39），接口好像有了很大的改动，例如，导入文件的：from langchain.document_loaders import PyPDFLoader  都报错了（ModuleNotFoundError: No module named &#39;langchain.document_loaders&#39;）。是不是要降级使用langchain才能上您的课呀。。。","like_count":0,"discussions":[{"author":{"id":1809833,"avatar":"https://static001.geekbang.org/account/avatar/00/1b/9d/a9/4602808f.jpg","nickname":"黄佳","note":"","ucode":"8EC41D2EAB0E3C","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":628204,"discussion_content":"同学，你的这个Version不对。---- 当然这也是因为LangChain太新，自己也混乱。\nLangChain截至2023年9月最新版是0.029！！！\nhttps://pypi.org/project/langchain/ ---- 在这里查看\n我用的是0.028版本\n你可以 1. 指定版本 2. 使用pip install -U langchain来把它变到0.029\n版本搞定就好嘞。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1695086359,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"新加坡","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1110039,"avatar":"https://static001.geekbang.org/account/avatar/00/10/f0/17/796a3d20.jpg","nickname":"言十年","note":"","ucode":"67B8B49C3A3B17","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":628566,"discussion_content":"可以指定版本号安装 pip install langchain===具体版本号","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1695535706,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":"北京","group_id":0},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":381295,"user_name":".Scorpio","can_delete":false,"product_type":"c1","uid":1392501,"ip_address":"北京","ucode":"F2DBFCE2102294","user_header":"https://static001.geekbang.org/account/avatar/00/15/3f/75/2f64ff67.jpg","comment_is_top":false,"comment_ctime":1695003496,"is_pvip":false,"replies":[{"id":138893,"content":"嗯，吧调用各种大模型的接口一致化，标准化，这肯定是LangChain的一个目标。而LangChain的一个问题是野心太大，目前各种各样的接口太多，内部结构和逻辑也都比较复杂，给人一种应接不暇的感觉。希望我的这个课程能够为入门的同学做一个比较清晰的重点梳理。","user_name":"作者回复","user_name_real":"编辑","uid":1809833,"ctime":1695010032,"ip_address":"新加坡","comment_id":381295,"utype":1}],"discussion_count":1,"race_medal":0,"score":5,"product_id":100617601,"comment_content":"目前还没学完，不知道langchain能都达到，所有达到所有模型调用一个方法的目的。这样减少应用开发的心智负担，就像当年jquery解决各个浏览器兼容性问题一样的处理方式。有过这样的想法，但个人时间原因无法实践，希望llm中有类似工具","like_count":0,"discussions":[{"author":{"id":1809833,"avatar":"https://static001.geekbang.org/account/avatar/00/1b/9d/a9/4602808f.jpg","nickname":"黄佳","note":"","ucode":"8EC41D2EAB0E3C","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":628149,"discussion_content":"嗯，吧调用各种大模型的接口一致化，标准化，这肯定是LangChain的一个目标。而LangChain的一个问题是野心太大，目前各种各样的接口太多，内部结构和逻辑也都比较复杂，给人一种应接不暇的感觉。希望我的这个课程能够为入门的同学做一个比较清晰的重点梳理。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1695010032,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"新加坡","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":381239,"user_name":"杨松","can_delete":false,"product_type":"c1","uid":1264510,"ip_address":"日本","ucode":"A4373FF2845251","user_header":"https://static001.geekbang.org/account/avatar/00/13/4b/7e/b469c383.jpg","comment_is_top":false,"comment_ctime":1694877861,"is_pvip":false,"replies":[{"id":138872,"content":"第06课中，对这个问题有非常完整的答案。","user_name":"作者回复","user_name_real":"编辑","uid":1809833,"ctime":1694963026,"ip_address":"新加坡","comment_id":381239,"utype":1}],"discussion_count":1,"race_medal":0,"score":5,"product_id":100617601,"comment_content":"怎么加载本地自己微调的llm模型？","like_count":0,"discussions":[{"author":{"id":1809833,"avatar":"https://static001.geekbang.org/account/avatar/00/1b/9d/a9/4602808f.jpg","nickname":"黄佳","note":"","ucode":"8EC41D2EAB0E3C","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":628113,"discussion_content":"第06课中，对这个问题有非常完整的答案。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1694963026,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"新加坡","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":381023,"user_name":"杰光","can_delete":false,"product_type":"c1","uid":1213173,"ip_address":"福建","ucode":"36D793723DC79A","user_header":"https://static001.geekbang.org/account/avatar/00/12/82/f5/54bdb950.jpg","comment_is_top":false,"comment_ctime":1694593033,"is_pvip":false,"replies":[{"id":138782,"content":"当然可以了。HuggingFace上的模型，用Transformer库导入进来，然后就下载到你的本机了，你可以在此基础上进行微调甚至重新训练。这个内容的详情参阅HuggingFace官方文档。","user_name":"作者回复","user_name_real":"编辑","uid":1809833,"ctime":1694596553,"ip_address":"新加坡","comment_id":381023,"utype":1}],"discussion_count":3,"race_medal":0,"score":5,"product_id":100617601,"comment_content":"HuggingFace上的模型，可以像 ImageToCaption 的例子那样，在本地通过Transformer加载模型来运行吗？","like_count":0,"discussions":[{"author":{"id":1809833,"avatar":"https://static001.geekbang.org/account/avatar/00/1b/9d/a9/4602808f.jpg","nickname":"黄佳","note":"","ucode":"8EC41D2EAB0E3C","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":627841,"discussion_content":"当然可以了。HuggingFace上的模型，用Transformer库导入进来，然后就下载到你的本机了，你可以在此基础上进行微调甚至重新训练。这个内容的详情参阅HuggingFace官方文档。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1694596554,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"新加坡","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1213173,"avatar":"https://static001.geekbang.org/account/avatar/00/12/82/f5/54bdb950.jpg","nickname":"杰光","note":"","ucode":"36D793723DC79A","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":627842,"discussion_content":"这种情况下，LangChain要怎么创建一个 llm 对象来封装这个这个本地的模型？ 给的例子都是对外部API的封装\n","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1694597074,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":"福建","group_id":0},"score":2,"extra":"","child_discussion_number":1,"child_discussions":[{"author":{"id":1809833,"avatar":"https://static001.geekbang.org/account/avatar/00/1b/9d/a9/4602808f.jpg","nickname":"黄佳","note":"","ucode":"8EC41D2EAB0E3C","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":1213173,"avatar":"https://static001.geekbang.org/account/avatar/00/12/82/f5/54bdb950.jpg","nickname":"杰光","note":"","ucode":"36D793723DC79A","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":627848,"discussion_content":"同学可以看看第3课中最后一部分，应该是回答了你的疑问。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1694601372,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":627842,"ip_address":"新加坡","group_id":0},"score":627848,"extra":""}]}]},{"had_liked":false,"id":380978,"user_name":"iLeGeND","can_delete":false,"product_type":"c1","uid":1055475,"ip_address":"北京","ucode":"4055A628A6E97C","user_header":"https://static001.geekbang.org/account/avatar/00/10/1a/f3/41d5ba7d.jpg","comment_is_top":false,"comment_ctime":1694525258,"is_pvip":false,"replies":[{"id":138775,"content":"对于 2023 年 8 月 18 日之后创建的 API 帐户，您可以在购买价值 0.50 美元或更多的预付费积分后立即访问 GPT-4 。\n同学看看这里：https:&#47;&#47;help.openai.com&#47;en&#47;articles&#47;7102672-how-can-i-access-gpt-4\n\n如果不想付钱，用3.5和davici模型都可以的哈。不过这些模型好像有免费几块钱之后也要收钱。但是不贵。咱们的程序跑起来也就几分钱不到。","user_name":"作者回复","user_name_real":"编辑","uid":1809833,"ctime":1694592284,"ip_address":"新加坡","comment_id":380978,"utype":1}],"discussion_count":2,"race_medal":0,"score":5,"product_id":100617601,"comment_content":"没有访问gpt-4的权限怎么办","like_count":0,"discussions":[{"author":{"id":1809833,"avatar":"https://static001.geekbang.org/account/avatar/00/1b/9d/a9/4602808f.jpg","nickname":"黄佳","note":"","ucode":"8EC41D2EAB0E3C","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":627832,"discussion_content":"对于 2023 年 8 月 18 日之后创建的 API 帐户，您可以在购买价值 0.50 美元或更多的预付费积分后立即访问 GPT-4 。\n同学看看这里：https://help.openai.com/en/articles/7102672-how-can-i-access-gpt-4\n\n如果不想付钱，用3.5和davici模型都可以的哈。不过这些模型好像有免费几块钱之后也要收钱。但是不贵。咱们的程序跑起来也就几分钱不到。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1694592284,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"新加坡","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":1,"child_discussions":[{"author":{"id":1055475,"avatar":"https://static001.geekbang.org/account/avatar/00/10/1a/f3/41d5ba7d.jpg","nickname":"iLeGeND","note":"","ucode":"4055A628A6E97C","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1809833,"avatar":"https://static001.geekbang.org/account/avatar/00/1b/9d/a9/4602808f.jpg","nickname":"黄佳","note":"","ucode":"8EC41D2EAB0E3C","race_medal":0,"user_type":2,"is_pvip":false},"discussion":{"id":627853,"discussion_content":"一直想付钱，但是在国内给GPT充值挺麻烦的","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1694604398,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":627832,"ip_address":"北京","group_id":0},"score":627853,"extra":""}]}]},{"had_liked":false,"id":380956,"user_name":"laski","can_delete":false,"product_type":"c1","uid":1524632,"ip_address":"浙江","ucode":"87DD2AA1730B02","user_header":"https://static001.geekbang.org/account/avatar/00/17/43/98/ea3a8d8e.jpg","comment_is_top":false,"comment_ctime":1694506360,"is_pvip":false,"replies":[{"id":138752,"content":"好的，同学！成功的完成了一个提示工程的实战。棒。","user_name":"作者回复","user_name_real":"编辑","uid":1809833,"ctime":1694533486,"ip_address":"新加坡","comment_id":380956,"utype":1}],"discussion_count":1,"race_medal":0,"score":5,"product_id":100617601,"comment_content":"在回答中老是出现“字”这个字在回复最前面，看了下response，返回的类似“字\\n\\n1. 花朵家园\\n2. 花色天堂\\n3. 花语世界\\n4. 花开满城\\n5. 花家时光”，原来是前置问句“请给我的花店起个名&quot;的问题，大模型自动补充完整了“名字”这个词语，把前置变成“请给我的花店起个名：”就好了，需要用“：”引导。","like_count":0,"discussions":[{"author":{"id":1809833,"avatar":"https://static001.geekbang.org/account/avatar/00/1b/9d/a9/4602808f.jpg","nickname":"黄佳","note":"","ucode":"8EC41D2EAB0E3C","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":627786,"discussion_content":"好的，同学！成功的完成了一个提示工程的实战。棒。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1694533486,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"新加坡","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":380930,"user_name":"曙光","can_delete":false,"product_type":"c1","uid":3716551,"ip_address":"浙江","ucode":"5D1CBFDFA229A2","user_header":"https://static001.geekbang.org/account/avatar/00/38/b5/c7/ed1dcbed.jpg","comment_is_top":false,"comment_ctime":1694474158,"is_pvip":false,"replies":[{"id":138725,"content":"很多同学找到了科学上网的方法😁，可以问问周围的小朋友们。","user_name":"作者回复","user_name_real":"编辑","uid":1809833,"ctime":1694480941,"ip_address":"新加坡","comment_id":380930,"utype":1}],"discussion_count":2,"race_medal":0,"score":5,"product_id":100617601,"comment_content":"openai 账号在大陆用不了，有什么办法？","like_count":0,"discussions":[{"author":{"id":1809833,"avatar":"https://static001.geekbang.org/account/avatar/00/1b/9d/a9/4602808f.jpg","nickname":"黄佳","note":"","ucode":"8EC41D2EAB0E3C","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":627713,"discussion_content":"很多同学找到了科学上网的方法😁，可以问问周围的小朋友们。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1694480941,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"新加坡","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1008312,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/62/b8/0e1b655e.jpg","nickname":"fireshort","note":"","ucode":"10550CA9C6C730","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":629538,"discussion_content":"可以开通微软Azure的模型，用起来差不多，不用科学上网。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1697185328,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":"广东","group_id":0},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":392331,"user_name":"张申傲","can_delete":false,"product_type":"c1","uid":1182372,"ip_address":"北京","ucode":"22D46BC529BA8A","user_header":"https://static001.geekbang.org/account/avatar/00/12/0a/a4/828a431f.jpg","comment_is_top":false,"comment_ctime":1720616473,"is_pvip":false,"replies":null,"discussion_count":0,"race_medal":2,"score":5,"product_id":100617601,"comment_content":"第一讲打卡~\n这段时间使用了下LangChain，确实非常强大，而且内部很多设计思想都很值得借鉴~","like_count":1},{"had_liked":false,"id":392322,"user_name":"yanyu-xin","can_delete":false,"product_type":"c1","uid":1899757,"ip_address":"广东","ucode":"3AA389F9E4C236","user_header":"","comment_is_top":false,"comment_ctime":1720595385,"is_pvip":false,"replies":null,"discussion_count":0,"race_medal":0,"score":6,"product_id":100617601,"comment_content":"# 用langchain 调用阿里云的模型 \n\nfrom langchain_openai import ChatOpenAI\nllm = ChatOpenAI(\n    api_key=&quot;API Key&quot;,  # 请在此处用您的API Key进行替换\n    base_url=&quot;https:&#47;&#47;dashscope.aliyuncs.com&#47;compatible-mode&#47;v1&quot;, # 填写DashScope base_url\n    model=&quot;qwen-plus&quot;\n    )\nmessages = [\n    {&quot;role&quot;:&quot;system&quot;,&quot;content&quot;:&quot;你是一个很棒的智能助手.&quot;}, \n    {&quot;role&quot;:&quot;user&quot;,&quot;content&quot;:&quot;请给我的花店起个名&quot;}\n]\nresponse = llm.invoke(messages)\nprint(response.content)\n\n## 输出结果：\n&quot;花语小筑&quot;如何？这个名字寓含了花朵的无声语言和温馨的小天地的感觉，适合一个充满生机与美的花店。如果你想要更有特色或者有特定主题的，也可以告诉我，我可以再为你 brainstorm 一些其他的建议。","like_count":1},{"had_liked":false,"id":394772,"user_name":"Johar","can_delete":false,"product_type":"c1","uid":1101969,"ip_address":"印度","ucode":"834136A6F64CDC","user_header":"https://static001.geekbang.org/account/avatar/00/10/d0/91/89123507.jpg","comment_is_top":false,"comment_ctime":1728296164,"is_pvip":false,"replies":null,"discussion_count":0,"race_medal":0,"score":6,"product_id":100617601,"comment_content":"from langchain.llms import OpenAI \n一直在报错，错误信息：\nTraceback (most recent call last):\n  File &quot;e:\\Python\\project\\learn\\llm_model.py&quot;, line 4, in &lt;module&gt;\n    from langchain.llms import ChatOpenAI\n  File &quot;C:\\Users\\Johar\\AppData\\Roaming\\Python\\Python312\\site-packages\\langchain\\llms\\__init__.py&quot;, line 545, in __getattr__\n    from langchain_community import llms\nModuleNotFoundError: No module named &#39;langchain_community&#39;","like_count":0},{"had_liked":false,"id":392841,"user_name":"海亮","can_delete":false,"product_type":"c1","uid":1630994,"ip_address":"上海","ucode":"C6F98C1D37CFC9","user_header":"https://static001.geekbang.org/account/avatar/00/18/e3/12/e3056519.jpg","comment_is_top":false,"comment_ctime":1721910389,"is_pvip":false,"replies":null,"discussion_count":0,"race_medal":0,"score":6,"product_id":100617601,"comment_content":"目前最新版本 langchain 示例 demo 的代码如下\nText 模型：\nfrom langchain_openai import OpenAI\nllm = OpenAI(\n    model=&quot;gpt-3.5-turbo-instruct&quot;,\n    temperature=0.8,\n    max_tokens=60,)\nresponse = llm.invoke(&quot;请给我的花店起个名&quot;)\nprint(response)\n\n使用 chat 模型：\nfrom langchain_openai import ChatOpenAI\nchat = ChatOpenAI(model=&quot;gpt-4&quot;,\n                    temperature=0.8,\n                    max_tokens=60)\nfrom langchain_core.messages import (\n    HumanMessage,\n    SystemMessage\n)\nmessages = [\n    SystemMessage(content=&quot;你是一个很棒的智能助手&quot;),\n    HumanMessage(content=&quot;请给我的花店起个名&quot;)\n]\nresponse = chat.invoke(messages)\nprint(response)","like_count":0},{"had_liked":false,"id":390031,"user_name":"Matthew","can_delete":false,"product_type":"c1","uid":2843865,"ip_address":"江苏","ucode":"96093089773740","user_header":"https://thirdwx.qlogo.cn/mmopen/vi_32/PiajxSqBRaEKSVuNarJuDhBSvHY0giaq6yriceEBKiaKuc04wCYWOuso50noqDexaPJJibJN7PHwvcQppnzsDia1icZkw/132","comment_is_top":false,"comment_ctime":1714130247,"is_pvip":false,"replies":null,"discussion_count":0,"race_medal":0,"score":6,"product_id":100617601,"comment_content":"RateLimitError: Error code: 429 - {&#39;error&#39;: {&#39;message&#39;: &#39;You exceeded your current quota, please check your plan and billing details. For more information on this error, read the docs: https:&#47;&#47;platform.openai.com&#47;docs&#47;guides&#47;error-codes&#47;api-errors.&#39;, &#39;type&#39;: &#39;insufficient_quota&#39;, &#39;param&#39;: None, &#39;code&#39;: &#39;insufficient_quota&#39;}}\n\n这个问题，是因为 openai 的账户没有充钱吗？","like_count":0},{"had_liked":false,"id":386709,"user_name":"Crystal","can_delete":false,"product_type":"c1","uid":1308710,"ip_address":"浙江","ucode":"1481B20843D690","user_header":"https://static001.geekbang.org/account/avatar/00/13/f8/26/e0bd8d24.jpg","comment_is_top":false,"comment_ctime":1705382183,"is_pvip":false,"replies":null,"discussion_count":0,"race_medal":0,"score":6,"product_id":100617601,"comment_content":"大佬们的 openai 充值怎么搞定的，有没有推荐靠谱的方法啊","like_count":0}]}