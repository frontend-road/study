{"id":429826,"title":"07 | Torchvision（中）：数据增强，让数据更加多样性","content":"<p>你好，我是方远。</p><p>上一节课，我们一同迈出了训练开始的第一步——数据读取，初步认识了Torchvision，学习了如何利用Torchvision读取数据。不过仅仅将数据集中的图片读取出来是不够的，在训练的过程中，神经网络模型接收的数据类型是Tensor，而不是PIL对象，因此我们还需要对数据进行预处理操作，比如图像格式的转换。</p><p>与此同时，加载后的图像数据可能还需要进行一系列图像变换与增强操作，例如裁切边框、调整图像比例和大小、标准化等，以便模型能够更好地学习到数据的特征。这些操作都可以使用<code>torchvision.transforms</code>工具完成。</p><p>今天我们就来学习一下，利用Torchvision如何进行数据预处理操作，如何进行图像变换与增强。</p><h2>图像处理工具之torchvision.transforms</h2><p>Torchvision库中的<code>torchvision.transforms</code>包中提供了常用的图像操作，包括对Tensor 及PIL Image对象的操作，例如随机切割、旋转、数据类型转换等等。</p><p>按照<code>torchvision.transforms</code> 的功能，大致分为以下几类：数据类型转换、对PIL.Image 和 Tensor进行变化和变换的组合。下面我们依次来学习这些类别中的操作。</p><!-- [[[read_end]]] --><h3>数据类型转换</h3><p>在上一节课中，我们学习了读取数据集中的图片，读取到的数据是PIL.Image的对象。而在模型训练阶段，需要传入Tensor类型的数据，神经网络才能进行运算。</p><p>那么如何将PIL.Image或Numpy.ndarray格式的数据转化为Tensor格式呢？这需要用到<code>transforms.ToTensor()</code> 类。</p><p>而反之，将Tensor 或 Numpy.ndarray 格式的数据转化为PIL.Image格式，则使用<code>transforms.ToPILImage(mode=None)</code> 类。它则是ToTensor的一个逆操作，它能把Tensor或Numpy的数组转换成PIL.Image对象。</p><p>其中，参数mode代表PIL.Image的模式，如果mode为None（默认值），则根据输入数据的维度进行推断：</p><ul>\n<li>输入为3通道：mode为’RGB’；</li>\n<li>输入为4通道：mode为’RGBA’；</li>\n<li>输入为2通道：mode为’LA’;</li>\n<li>输入为单通道：mode根据输入数据的类型确定具体模式。</li>\n</ul><p><img src=\"https://static001.geekbang.org/resource/image/d3/0c/d3013753ef85937a39b64ef8f556df0c.jpg?wh=318x116\" alt=\"图片\"></p><p>说完用法，我们来看一个具体的例子加深理解。以极客时间的LOGO图片（文件名为：jk.jpg）为例，进行一下数据类型的相互转换。具体代码如下。</p><pre><code class=\"language-python\">from PIL import Image\nfrom torchvision import transforms&nbsp;\n\n\n\nimg = Image.open('jk.jpg')&nbsp;\ndisplay(img)\nprint(type(img)) # PIL.Image.Image是PIL.JpegImagePlugin.JpegImageFile的基类\n'''\n输出:&nbsp;\n&lt;class 'PIL.JpegImagePlugin.JpegImageFile'&gt;\n'''\n\n# PIL.Image转换为Tensor\nimg1 = transforms.ToTensor()(img)\nprint(type(img1))\n'''\n输出:&nbsp;\n&lt;class 'torch.Tensor'&gt;\n'''\n\n# Tensor转换为PIL.Image\nimg2 = transforms.ToPILImage()(img1)&nbsp; #PIL.Image.Image\nprint(type(img2))\n'''\n输出:&nbsp;\n&lt;class 'PIL.Image.Image'&gt;\n'''\n</code></pre><p>首先用读取图片，查看一下图片的类型为PIL.JpegImagePlugin.JpegImageFile，这里需要注意<strong>，PIL.JpegImagePlugin.JpegImageFile类是PIL.Image.Image类的子类</strong>。然后，用<code>transforms.ToTensor()</code> 将PIL.Image转换为Tensor。最后，再将Tensor转换回PIL.Image。</p><h3>对 PIL.Image 和 Tensor 进行变换</h3><p><code>torchvision.transforms</code> 提供了丰富的图像变换方法，例如：改变尺寸、剪裁、翻转等。并且这些图像变换操作可以接收多种数据格式，不仅可以直接对PIL格式的图像进行变换，也可以对Tensor进行变换，无需我们再去做额外的数据类型转换。</p><p>下面我们依次来看一看。</p><h4>Resize</h4><p>将输入的 PIL Image 或 Tensor 尺寸调整为给定的尺寸，具体定义为：</p><pre><code class=\"language-python\">torchvision.transforms.Resize(size, interpolation=2)\n</code></pre><p>我们依次看下相关的参数：</p><ul>\n<li>size：期望输出的尺寸。如果 size 是一个像 (h, w) 这样的元组，则图像输出尺寸将与之匹配。如果 size 是一个 int 类型的整数，图像较小的边将被匹配到该整数，另一条边按比例缩放。</li>\n<li>interpolation：插值算法，int类型，默认为2，表示 PIL.Image.BILINEAR。</li>\n</ul><p>有关Size中是tuple还是int这一点请你一定要注意。</p><p>让我说明一下，在我们训练时，通常要把图片resize到一定的大小，比如说128x128，256x256这样的。如果直接给定resize后的高与宽，是没有问题的。但如果设定的是一个int型，较长的边就会按比例缩放。</p><p>在resize之后呢，一般会接一个crop操作，crop到指定的大小。对于高与宽接近的图片来说，这么做问题不大，但是高与宽的差距较大时，就会crop掉很多有用的信息。关于这一点，我们在后续的图像分类部分还会遇到，到时我在详细展开。</p><p>我们还是以极客时间的LOGO图片为例，一起看一下Resize的效果。</p><pre><code class=\"language-python\">from PIL import Image\nfrom torchvision import transforms&nbsp;\n\n# 定义一个Resize操作\nresize_img_oper = transforms.Resize((200,200), interpolation=2)\n\n# 原图\norig_img = Image.open('jk.jpg')&nbsp;\ndisplay(orig_img)\n\n# Resize操作后的图\nimg = resize_img_oper(orig_img)\ndisplay(img)\n</code></pre><p>首先定义一个Resize操作，设置好变换后的尺寸为(200, 200)，然后对极客时间LOGO图片进行Resize变换。<br>\n原图以及Resize变换后的效果如下表所示。</p><p><img src=\"https://static001.geekbang.org/resource/image/56/09/5611e53aaed88bb079909992db5c6d09.jpg?wh=1232x505\" alt=\"图片\"></p><h4>剪裁</h4><p><code>torchvision.transforms</code>提供了多种剪裁方法，例如中心剪裁、随机剪裁、四角和中心剪裁等。我们依次来看下它们的定义。</p><p>先说中心剪裁，顾名思义，在中心裁剪指定的 PIL Image 或 Tensor，其定义如下：</p><pre><code class=\"language-python\">torchvision.transforms.CenterCrop(size)\n</code></pre><p>其中，size表示期望输出的剪裁尺寸。如果 size 是一个像 (h, w) 这样的元组，则剪裁后的图像尺寸将与之匹配。如果&nbsp;size&nbsp;是&nbsp;int&nbsp;类型的整数，剪裁出来的图像是&nbsp;(size, size)&nbsp;的正方形。</p><p>然后是随机剪裁，就是在一个随机位置剪裁指定的 PIL Image 或 Tensor，定义如下：</p><pre><code class=\"language-python\">torchvision.transforms.RandomCrop(size, padding=None)\n</code></pre><p>其中，size代表期望输出的剪裁尺寸，用法同上。而padding表示图像的每个边框上的可选填充。默认值是 None，即没有填充。通常来说，不会用padding这个参数，至少对于我来说至今没用过。</p><p>最后要说的是FiveCrop，我们将给定的 PIL Image  或 Tensor ，分别从四角和中心进行剪裁，共剪裁成五块，定义如下：</p><pre><code>torchvision.transforms.FiveCrop(size)\n</code></pre><p>size可以是int或tuple，用法同上。<br>\n掌握了各种剪裁的定义和参数用法以后，我们来看一下这些剪裁操作具体如何调用，代码如下。</p><pre><code class=\"language-python\">from PIL import Image\nfrom torchvision import transforms&nbsp;\n\n# 定义剪裁操作\ncenter_crop_oper = transforms.CenterCrop((60,70))\nrandom_crop_oper = transforms.RandomCrop((80,80))\nfive_crop_oper = transforms.FiveCrop((60,70))\n\n# 原图\norig_img = Image.open('jk.jpg')&nbsp;\ndisplay(orig_img)\n\n# 中心剪裁\nimg1 = center_crop_oper(orig_img)\ndisplay(img1)\n# 随机剪裁\nimg2 = random_crop_oper(orig_img)\ndisplay(img2)\n# 四角和中心剪裁\nimgs = five_crop_oper(orig_img)\nfor img in imgs:\n&nbsp; &nbsp; display(img)\n</code></pre><p>流程和Resize类似，都是先定义剪裁操作，然后对极客时间LOGO图片进行不同的剪裁。<br>\n具体剪裁效果如下表所示。</p><p><img src=\"https://static001.geekbang.org/resource/image/60/b5/60ca577c5f08eef4ca727c1f0aac9cb5.jpg?wh=1384x896\" alt=\"图片\"></p><h4>翻转</h4><p>接下来，我们来看一看翻转操作。<code>torchvision.transforms</code>提供了两种翻转操作，分别是：以某一概率随机水平翻转图像和以某一概率随机垂直翻转图像。我们分别来看它们的定义。</p><p>以概率p随机水平翻转图像，定义如下：</p><pre><code class=\"language-plain\">torchvision.transforms.RandomHorizontalFlip(p=0.5)\n</code></pre><p>以概率p随机垂直翻转图像，定义如下：</p><pre><code class=\"language-plain\">torchvision.transforms.RandomVerticalFlip(p=0.5)\n</code></pre><p>其中，p表示随机翻转的概率值，默认为0.5。<br>\n这里的随机翻转，是为数据增强提供方便。如果想要必须执行翻转操作的话，将p设置为1即可。</p><p>以极客时间的LOGO图片为例，图片翻转的代码如下。</p><pre><code class=\"language-python\">from PIL import Image\nfrom torchvision import transforms&nbsp;\n\n# 定义翻转操作\nh_flip_oper = transforms.RandomHorizontalFlip(p=1)\nv_flip_oper = transforms.RandomVerticalFlip(p=1)\n\n# 原图\norig_img = Image.open('jk.jpg')&nbsp;\ndisplay(orig_img)\n\n# 水平翻转\nimg1 = h_flip_oper(orig_img)\ndisplay(img1)\n# 垂直翻转\nimg2 = v_flip_oper(orig_img)\ndisplay(img2)\n</code></pre><p>翻转效果如下表所示。</p><p><img src=\"https://static001.geekbang.org/resource/image/0d/84/0dc2543bb7bdfyy7803c353f2030f184.jpg?wh=1386x675\" alt=\"图片\"></p><h3>只对Tensor进行变换</h3><p>目前版本的Torchvision（v0.10.0）对各种图像变换操作已经基本同时支持 PIL Image 和 Tensor 类型了，因此只针对Tensor的变换操作很少，只有4个，分别是LinearTransformation（线性变换）、Normalize（标准化）、RandomErasing（随机擦除）、ConvertImageDtype（格式转换）。</p><p>这里我们重点来看最常用的一个操作：标准化，其他3个你可以查阅官方文档。</p><h4>标准化</h4><p>标准化是指每一个数据点减去所在通道的平均值，再除以所在通道的标准差，数学的计算公式如下：</p><p>$$output=(input-mean)/std$$</p><p>而对图像进行标准化，就是对图像的每个通道利用均值和标准差进行正则化。这样做的目的，是<strong>为了保证数据集中所有的图像分布都相似，这样在训练的时候更容易收敛，既加快了训练速度，也提高了训练效果</strong>。</p><p>让我来解释一下：首先，标准化是一个常规做法，可以理解为无脑进行标准化后再训练的效果，大概率要好于不进行标准化。</p><p>我把极客时间的LOGO读入后，所有像素都减去50，获得下图。</p><p><img src=\"https://static001.geekbang.org/resource/image/3c/a1/3c3f30cee39ec09cc08fa91b4925e3a1.png?wh=640x234\" alt=\"图片\"></p><p>对于我们人来说是可以分辨出，这也是极客时间的LOGO。但是计算机（也就是卷积神经网络）就不一定能分辨出来了，因为卷积神经网络是通过图像的像素进行提取特征的，这两张图片像素的数值都不一样，凭什么还让神经网络认为是一张图片？</p><p>而标准化后的数据就会避免这一问题，标准化后会将数据映射到同一区间中，一个类别的图片虽说有的像素值可能有差异，但是它们分布都是类似的分布。</p><p><code>torchvision.transforms</code>提供了对Tensor进行标准化的函数，定义如下。</p><pre><code class=\"language-plain\">torchvision.transforms.Normalize(mean, std, inplace=False)\n</code></pre><p>其中，每个参数的含义如下所示：</p><ul>\n<li>mean：表示各通道的均值；</li>\n<li>std：表示各通道的标准差；</li>\n<li>inplace：表示是否原地操作，默认为否。</li>\n</ul><p>以极客时间的LOGO图片为例，我们来看看以(R, G, B)均值和标准差均为(0.5, 0.5, 0.5)来标准化图片后，是什么效果。</p><pre><code class=\"language-python\">from PIL import Image\nfrom torchvision import transforms&nbsp;\n\n# 定义标准化操作\nnorm_oper = transforms.Normalize((0.5, 0.5, 0.5), (0.5, 0.5, 0.5))\n\n# 原图\norig_img = Image.open('jk.jpg')&nbsp;\ndisplay(orig_img)\n\n# 图像转化为Tensor\nimg_tensor = transforms.ToTensor()(orig_img)\n\n# 标准化\ntensor_norm = norm_oper(img_tensor)\n\n# Tensor转化为图像\nimg_norm = transforms.ToPILImage()(tensor_norm)\ndisplay(img_norm)\n</code></pre><p>上面代码的过程是，首先定义了均值和标准差均为(0.5, 0.5, 0.5)的标准化操作，然后将原图转化为Tensor，接着对Tensor进行标准化，最后再将Tensor转化为图像输出。</p><p>标准化的效果如下表所示。</p><p><img src=\"https://static001.geekbang.org/resource/image/f5/05/f58f3662e60501e02b31b12fa9f4e905.jpg?wh=1244x515\" alt=\"\"></p><h3>变换的组合</h3><p>其实前面介绍过的所有操作都可以用 Compose 类组合起来，进行连续操作。</p><p>Compose类是将多个变换组合到一起，它的定义如下。</p><pre><code class=\"language-plain\">torchvision.transforms.Compose(transforms)\n</code></pre><p>其中，transforms是一个Transform对象的列表，表示要组合的变换列表。<br>\n我们还是结合例子动手试试，如果我们想要将图片变为200*200像素大小，并且随机裁切成80像素的正方形。那么我们可以组合Resize和RandomCrop变换，具体代码如下所示。</p><pre><code class=\"language-python\">from PIL import Image\nfrom torchvision import transforms&nbsp;\n\n# 原图\norig_img = Image.open('jk.jpg')&nbsp;\ndisplay(orig_img)\n\n# 定义组合操作\ncomposed = transforms.Compose([transforms.Resize((200, 200)),\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;transforms.RandomCrop(80)])\n\n# 组合操作后的图\nimg = composed(orig_img)\ndisplay(img)\n</code></pre><p>运行的结果如下表所示，也推荐你动手试试看。</p><p><img src=\"https://static001.geekbang.org/resource/image/6b/c1/6b3ce280815cff443734c9b8180fc6c1.jpg?wh=1046x505\" alt=\"图片\"></p><h2>结合datasets使用</h2><p>Compose类是未来我们在实际项目中经常要使用到的类，结合<code>torchvision.datasets</code>包，就可以在读取数据集的时候做图像变换与数据增强操作。下面让我们一起来看一看。</p><p>还记得<a href=\"https://time.geekbang.org/column/article/429048\">上一节课</a>中，在利用<code>torchvision.datasets</code> 读取MNIST数据集时，有一个参数“transform”吗？它就是用于对图像进行预处理操作的，例如数据增强、归一化、旋转或缩放等。这里的“transform”就可以接收一个<code>torchvision.transforms</code>操作或者由Compose类所定义的操作组合。</p><p>上节课中，我们在读取MNIST数据集时，直接读取出来的图像数据是PIL.Image.Image类型的。但是遇到要训练手写数字识别模型这类的情况，模型接收的数据类型是Tensor，而不是PIL对象。这时候，我们就可以利用“transform”参数，使数据在读取的同时做类型转换，这样读取出的数据直接就可以是Tensor类型了。</p><p>不只是数据类型的转换，我们还可以增加归一化等数据增强的操作，只需要使用上面介绍过的Compose类进行组合即可。这样，在读取数据的同时，我们也就完成了数据预处理、数据增强等一系列操作。</p><p>我们还是以读取MNIST数据集为例，看下如何在读取数据的同时，完成数据预处理等操作。具体代码如下。</p><pre><code class=\"language-python\">from torchvision import transforms\nfrom torchvision import datasets\n\n# 定义一个transform\nmy_transform = transforms.Compose([transforms.ToTensor(),\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;transforms.Normalize((0.5), (0.5))\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; ])\n# 读取MNIST数据集 同时做数据变换\nmnist_dataset = datasets.MNIST(root='./data',\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;train=False,\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;transform=my_transform,\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;target_transform=None,\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;download=True)\n\n# 查看变换后的数据类型\nitem = mnist_dataset.__getitem__(0)\nprint(type(item[0]))\n'''\n输出：\n&lt;class 'torch.Tensor'&gt;\n'''\n</code></pre><p>当然，MNIST数据集非常简单，根本不进行任何处理直接读入的话，效果也非常好，但是它确实适合学习来使用，你可以在利用它进行各种尝试。</p><p>我们下面先来看看，在图像分类实战中使用的transform，可以感受一下实际使用的transforms是什么样子：</p><pre><code class=\"language-python\">transform = transforms.Compose([\n&nbsp; &nbsp; transforms.RandomResizedCrop(dest_image_size),\n&nbsp; &nbsp; transforms.RandomHorizontalFlip(),\n&nbsp; &nbsp; transforms.ToTensor(),\n&nbsp; &nbsp; transforms.Normalize(mean=[0.485, 0.456, 0.406], std=[0.229, 0.224, 0.225])\n&nbsp; &nbsp; ])\n</code></pre><p>这也是我在项目中使用的transform。数据增强的方法有很多，不过根据我的经验来看，并不是用的越多，效果越好。</p><h2>小结</h2><p>恭喜你完成了这节课的学习，我来给你做个总结。</p><p><strong>今天的重点内容就是<code>torchvision.transforms</code>工具的使用。包括常用的图像处理操作，以及如何与<code>torchvision.datasets</code>结合使用</strong>。</p><p>常用的图像处理操作包括数据类型转换、图像尺寸变化、剪裁、翻转、标准化等等。Compose类还可以将多个变换操作组合成一个Transform对象的列表。</p><p><code>torchvision.transforms</code>与<code>torchvision.datasets</code>结合使用，可以在数据加载的同时进行一系列图像变换与数据增强操作，不仅能够直接将数据送入模型训练，还可以加快模型收敛速度，让模型更好地学习到数据特征。</p><p>当然，我们在实际的项目中会有自己的数据，而不会使用torchvision.datasets中提供的公开数据集，我们今天讲的<code>torchvision.transforms</code> 同样可以在我们自定义的数据集中使用，关于这一点，我会在图像分类的实战中继续讲解。</p><p>下节课中，我们会介绍Torchvision中其他有趣的功能。包括经典网络模型的实例化与其他有用的函数。</p><h2>每课一练</h2><p>Torchvision中 transforms 模块的作用是什么？</p><p>欢迎你在留言区跟我交流讨论，也欢迎你把这节课分享给自己的朋友，和他一起尝试一下Torchvision的各种功能。</p>","neighbors":{"left":{"article_title":"06 | Torchvision（上）：数据读取，训练开始的第一步","id":429048},"right":{"article_title":"08 | Torchvision（下）：其他有趣的功能","id":431420}},"comments":[{"had_liked":false,"id":318049,"user_name":"Yuhan","can_delete":false,"product_type":"c1","uid":2767570,"ip_address":"","ucode":"38CC135D8BBF67","user_header":"https://static001.geekbang.org/account/avatar/00/2a/3a/d2/cbd2c882.jpg","comment_is_top":false,"comment_ctime":1635132544,"is_pvip":false,"replies":[{"id":"115308","content":"你好，Yuhan，感谢你的留言。<br>display的来源是：<br>from IPython.display import display<br>在jupyter中可以直接调用无需import。^^","user_name":"作者回复","user_name_real":"方远","uid":"2802608","ctime":1635152521,"ip_address":"","comment_id":318049,"utype":1}],"discussion_count":5,"race_medal":0,"score":"31699903616","product_id":100093301,"comment_content":"老师您好，感觉应该注明一下display函数的来源，是Ipython.display 里面的display函数吗？","like_count":8,"discussions":[{"author":{"id":2802608,"avatar":"https://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTK1ZkL9L7CEicI87xicpIhXAIhVdVWpJKBsD8Jpzg9iaAwFcDEhTvdRwuKItJS14mYznT2w2YQvn8QsQ/132","nickname":"方远","note":"","ucode":"248B1DE180EB4C","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":529078,"discussion_content":"你好，Yuhan，感谢你的留言。\ndisplay的来源是：\nfrom IPython.display import display\n在jupyter中可以直接调用无需import。^^","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1635152521,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":2808296,"avatar":"https://thirdwx.qlogo.cn/mmopen/vi_32/SKmvhbNe9LMPQ0ib8ZqbJEfHicUxzxCSKVXiaibn7OrmXGUFQjkesgvODymZz4kibzqOGxuRq42t3sB2ibcBIIGWRgSg/132","nickname":"超人不会飞","note":"","ucode":"6F67096D5FFAFA","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":407909,"discussion_content":"可以导入matplot包，import matplotlib.pyplot as plt,,,,,,然后显示图像的时候这么写，plt.imshow(img)      plt.show()    就能显示出来了","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1635148794,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":2028956,"avatar":"","nickname":"勿更改任何信息","note":"","ucode":"575185C69C05A3","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":408388,"discussion_content":"老师，代码部分在github上有完整链接嘛？","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1635239012,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":1,"child_discussions":[{"author":{"id":2802608,"avatar":"https://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTK1ZkL9L7CEicI87xicpIhXAIhVdVWpJKBsD8Jpzg9iaAwFcDEhTvdRwuKItJS14mYznT2w2YQvn8QsQ/132","nickname":"方远","note":"","ucode":"248B1DE180EB4C","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":2028956,"avatar":"","nickname":"勿更改任何信息","note":"","ucode":"575185C69C05A3","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":560612,"discussion_content":"hi，不好意思，我刚看到。\n新开一个评论我有提示能看到，在留言下面的留言我没有提示，看不到。😂\n后面的图像分类和图像分割有代码。其余课程的代码基本都是可运行的代码，把课程里的代码copy到notebook里都可以运行~","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1649404039,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":408388,"ip_address":""},"score":560612,"extra":""}]},{"author":{"id":2808296,"avatar":"https://thirdwx.qlogo.cn/mmopen/vi_32/SKmvhbNe9LMPQ0ib8ZqbJEfHicUxzxCSKVXiaibn7OrmXGUFQjkesgvODymZz4kibzqOGxuRq42t3sB2ibcBIIGWRgSg/132","nickname":"超人不会飞","note":"","ucode":"6F67096D5FFAFA","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":407910,"discussion_content":"或者你不导包，可以直接写img.show()","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1635148819,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":324177,"user_name":"上岸吧，Adagio","can_delete":false,"product_type":"c1","uid":2704740,"ip_address":"","ucode":"0224857DAE0F79","user_header":"https://static001.geekbang.org/account/avatar/00/29/45/64/ab1fada2.jpg","comment_is_top":false,"comment_ctime":1638327069,"is_pvip":false,"replies":[{"id":"117652","content":"Hi，感谢你的提问。<br>transforms.ToTensor()  相当于创建了一个ToTensor的实例。<br>transforms.ToTensor()(img)  是执行了ToTensor中的__call__方法（如下链接）。<br>https:&#47;&#47;github.com&#47;pytorch&#47;vision&#47;blob&#47;main&#47;torchvision&#47;transforms&#47;transforms.py#L123<br>这部分属于Python的知识，详细的内容你可以看看Python中__call__的作用。简单来说__call__的作用是使实例能够像函数一样被调用。<br>transforms.ToPILImage()同理。^^","user_name":"作者回复","user_name_real":"作者","uid":"2802608","ctime":1638337086,"ip_address":"","comment_id":324177,"utype":1}],"discussion_count":1,"race_medal":0,"score":"27408130845","product_id":100093301,"comment_content":"老师您好，请问<br><br>img1 = transforms.ToTensor()(img)<br>img2 = transforms.ToPILImage()(img1)<br><br>是怎么使用的呢？<br>transforms.ToTensor是一个类，为什么不把img当做参数传给这个类做初始化呢？<br>transforms.ToTensor()是创建一个对象吗？为什么后面又直接传入了(img)参数呢？<br>不太懂这一块的细节，请老师帮忙解答下~<br>","like_count":7,"discussions":[{"author":{"id":2802608,"avatar":"https://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTK1ZkL9L7CEicI87xicpIhXAIhVdVWpJKBsD8Jpzg9iaAwFcDEhTvdRwuKItJS14mYznT2w2YQvn8QsQ/132","nickname":"方远","note":"","ucode":"248B1DE180EB4C","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":535029,"discussion_content":"Hi，感谢你的提问。\ntransforms.ToTensor()  相当于创建了一个ToTensor的实例。\ntransforms.ToTensor()(img)  是执行了ToTensor中的__call__方法（如下链接）。\nhttps://github.com/pytorch/vision/blob/main/torchvision/transforms/transforms.py#L123\n这部分属于Python的知识，详细的内容你可以看看Python中__call__的作用。简单来说__call__的作用是使实例能够像函数一样被调用。\ntransforms.ToPILImage()同理。^^","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1638337086,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":318557,"user_name":"vcjmhg","can_delete":false,"product_type":"c1","uid":1526461,"ip_address":"","ucode":"B508D1E9B3F974","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/j24oyxHcpB5AMR9pMO6fITqnOFVOncnk2T1vdu1rYLfq1cN6Sj7xVrBVbCvHXUad2MpfyBcE4neBguxmjIxyiaQ/132","comment_is_top":false,"comment_ctime":1635333002,"is_pvip":false,"replies":[{"id":"115502","content":"你好，谢谢留言。完美👍🏻👍🏻👍🏻👍🏻👍🏻👍🏻👍🏻👍🏻👍🏻👍🏻。：）加油~","user_name":"作者回复","user_name_real":"方远","uid":"2802608","ctime":1635338781,"ip_address":"","comment_id":318557,"utype":1}],"discussion_count":1,"race_medal":0,"score":"18815202186","product_id":100093301,"comment_content":"Torchvision 中 transforms 模块的作用：封装了常用的图像操作，例随机切割、旋转、数据类型转换、tensor 与 numpy 和 PIL Image 的互换等。","like_count":5,"discussions":[{"author":{"id":2802608,"avatar":"https://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTK1ZkL9L7CEicI87xicpIhXAIhVdVWpJKBsD8Jpzg9iaAwFcDEhTvdRwuKItJS14mYznT2w2YQvn8QsQ/132","nickname":"方远","note":"","ucode":"248B1DE180EB4C","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":529297,"discussion_content":"你好，谢谢留言。完美👍🏻👍🏻👍🏻👍🏻👍🏻👍🏻👍🏻👍🏻👍🏻👍🏻。：）加油~","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1635338781,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":326999,"user_name":"天凉好个秋","can_delete":false,"product_type":"c1","uid":2842361,"ip_address":"","ucode":"C61A17A9591C24","user_header":"https://static001.geekbang.org/account/avatar/00/2b/5e/f9/96896116.jpg","comment_is_top":false,"comment_ctime":1639823081,"is_pvip":false,"replies":[{"id":"118980","content":"Hi,<br>是resize中的interpolation参数。<br>例如，torchvision.transforms.Resize((128, 128),  interpolation=InterpolationMode.BICUBIC）。<br>这个参数接收int也可以，就是当int的时候，就会报这个warning。<br><br>","user_name":"作者回复","user_name_real":"编辑","uid":"2802608","ctime":1639961621,"ip_address":"","comment_id":326999,"utype":1}],"discussion_count":1,"race_medal":0,"score":"14524724969","product_id":100093301,"comment_content":"老师你好，在使用 Resize 的时候，出现以下 warning:<br><br>UserWarning: Argument interpolation should be of type InterpolationMode instead of int. Please, use InterpolationMode enum.<br><br>在之前的回答中给的解决方案的第二条：将Image.BICUBIC 替换为InterpolationMode.BICUBIC，这个是在哪儿替换?transforms.py的源代码中也没有相关代码","like_count":3,"discussions":[{"author":{"id":2802608,"avatar":"https://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTK1ZkL9L7CEicI87xicpIhXAIhVdVWpJKBsD8Jpzg9iaAwFcDEhTvdRwuKItJS14mYznT2w2YQvn8QsQ/132","nickname":"方远","note":"","ucode":"248B1DE180EB4C","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":540094,"discussion_content":"Hi,\n是resize中的interpolation参数。\n例如，torchvision.transforms.Resize((128, 128),  interpolation=InterpolationMode.BICUBIC）。\n这个参数接收int也可以，就是当int的时候，就会报这个warning。\n\n","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1639961621,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":331611,"user_name":"汤火火火","can_delete":false,"product_type":"c1","uid":1663497,"ip_address":"","ucode":"98C75FCF358AF9","user_header":"https://static001.geekbang.org/account/avatar/00/19/62/09/7fd0634a.jpg","comment_is_top":false,"comment_ctime":1642669585,"is_pvip":false,"replies":[{"id":"121158","content":"你好，汤火火火，感谢留言。<br>需要，预测时数据做的预处理（标准化之类的）操作要与训练时做的预处理操作一毛一样。","user_name":"作者回复","user_name_real":"编辑","uid":"2802608","ctime":1642733900,"ip_address":"","comment_id":331611,"utype":1}],"discussion_count":3,"race_medal":0,"score":"10232604177","product_id":100093301,"comment_content":"老师您好，我想问一下，在训练时对图像做了标准化，那测试的时候需要对测试图像做标准化吗？","like_count":3,"discussions":[{"author":{"id":2802608,"avatar":"https://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTK1ZkL9L7CEicI87xicpIhXAIhVdVWpJKBsD8Jpzg9iaAwFcDEhTvdRwuKItJS14mYznT2w2YQvn8QsQ/132","nickname":"方远","note":"","ucode":"248B1DE180EB4C","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":547527,"discussion_content":"你好，汤火火火，感谢留言。\n需要，预测时数据做的预处理（标准化之类的）操作要与训练时做的预处理操作一毛一样。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1642733900,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1257152,"avatar":"https://static001.geekbang.org/account/avatar/00/13/2e/c0/7ec23600.jpg","nickname":"睿","note":"","ucode":"838790C3D01A21","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":556040,"discussion_content":"老师，那像翻转之类的预处理， 也需要预测和训练进行同样的操作么","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1647177881,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":1,"child_discussions":[{"author":{"id":2822701,"avatar":"https://static001.geekbang.org/account/avatar/00/2b/12/2d/aba06a9a.jpg","nickname":"李泽","note":"","ucode":"136225FC58F164","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1257152,"avatar":"https://static001.geekbang.org/account/avatar/00/13/2e/c0/7ec23600.jpg","nickname":"睿","note":"","ucode":"838790C3D01A21","race_medal":0,"user_type":1,"is_pvip":true},"discussion":{"id":580660,"discussion_content":"我认为应该是的，相当于训练和预测都是同一个量纲下的数据","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1658308318,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":556040,"ip_address":""},"score":580660,"extra":""}]}]},{"had_liked":false,"id":345488,"user_name":"亚林","can_delete":false,"product_type":"c1","uid":1018972,"ip_address":"","ucode":"4A5A6D24314B79","user_header":"https://static001.geekbang.org/account/avatar/00/0f/8c/5c/3f164f66.jpg","comment_is_top":false,"comment_ctime":1652325242,"is_pvip":false,"replies":[{"id":"126114","content":"你好，亚林<br>是说标准化的参数如何确定的是吧。<br>通常来说如果使用其他人的模型做微调的话，就要与原作者的数据处理方式一致，例如后面的图像分类中讲的EfficientNet。我想这也是大部分会遇到的情况。<br>如果是完全自己重新训练的话，可以参考一些ImageNet上的预处理方式，其实也就那几种，减均值，除以标准差之类的。","user_name":"作者回复","user_name_real":"编辑","uid":"2802608","ctime":1652409910,"ip_address":"","comment_id":345488,"utype":1}],"discussion_count":1,"race_medal":0,"score":"5947292538","product_id":100093301,"comment_content":"Torchvision 中 transforms 模块的作用图像数据的预处理。怎么标准化，这些标准化参数是如何确定的类？","like_count":2,"discussions":[{"author":{"id":2802608,"avatar":"https://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTK1ZkL9L7CEicI87xicpIhXAIhVdVWpJKBsD8Jpzg9iaAwFcDEhTvdRwuKItJS14mYznT2w2YQvn8QsQ/132","nickname":"方远","note":"","ucode":"248B1DE180EB4C","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":571788,"discussion_content":"你好，亚林\n是说标准化的参数如何确定的是吧。\n通常来说如果使用其他人的模型做微调的话，就要与原作者的数据处理方式一致，例如后面的图像分类中讲的EfficientNet。我想这也是大部分会遇到的情况。\n如果是完全自己重新训练的话，可以参考一些ImageNet上的预处理方式，其实也就那几种，减均值，除以标准差之类的。","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1652409910,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":323714,"user_name":"快快🔥","can_delete":false,"product_type":"c1","uid":2854084,"ip_address":"","ucode":"0B84A21884C25E","user_header":"https://static001.geekbang.org/account/avatar/00/2b/8c/c4/9fbe78cf.jpg","comment_is_top":false,"comment_ctime":1638110218,"is_pvip":false,"replies":[{"id":"117501","content":"hi，你好。感谢留言。输入给模型的数据是转换后的数据。原始图像不会变。","user_name":"作者回复","user_name_real":"编辑","uid":"2802608","ctime":1638147901,"ip_address":"","comment_id":323714,"utype":1}],"discussion_count":1,"race_medal":0,"score":"5933077514","product_id":100093301,"comment_content":"老师，我想问下，在transform.dataset()中进行transforms的转换操作，是会将原图像数据覆盖掉吗，还是产生新的转换后的数据。","like_count":1,"discussions":[{"author":{"id":2802608,"avatar":"https://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTK1ZkL9L7CEicI87xicpIhXAIhVdVWpJKBsD8Jpzg9iaAwFcDEhTvdRwuKItJS14mYznT2w2YQvn8QsQ/132","nickname":"方远","note":"","ucode":"248B1DE180EB4C","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":534237,"discussion_content":"hi，你好。感谢留言。输入给模型的数据是转换后的数据。原始图像不会变。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1638147901,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":357041,"user_name":"问鼎苍穹","can_delete":false,"product_type":"c1","uid":3169115,"ip_address":"北京","ucode":"C059352076D92C","user_header":"https://static001.geekbang.org/account/avatar/00/30/5b/5b/1804b22f.jpg","comment_is_top":false,"comment_ctime":1662882319,"is_pvip":false,"replies":[{"id":"129995","content":"你好，感谢留言。<br>应该也是可以的，不过我没试过。","user_name":"作者回复","user_name_real":"编辑","uid":"2802608","ctime":1663055992,"ip_address":"北京","comment_id":357041,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1662882319","product_id":100093301,"comment_content":"老师您好，transforms是只能对图像的tensor数据进行处理是吧，对于表格类型的数据是不能进行数据增强的操作是吗，如果要对表格类型的数据进行数据增强应该如何操作呢","like_count":0,"discussions":[{"author":{"id":2802608,"avatar":"https://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTK1ZkL9L7CEicI87xicpIhXAIhVdVWpJKBsD8Jpzg9iaAwFcDEhTvdRwuKItJS14mYznT2w2YQvn8QsQ/132","nickname":"方远","note":"","ucode":"248B1DE180EB4C","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":587439,"discussion_content":"你好，感谢留言。\n应该也是可以的，不过我没试过。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1663055993,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"北京"},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":356994,"user_name":"🐰","can_delete":false,"product_type":"c1","uid":3169524,"ip_address":"北京","ucode":"DB5753473F7E9E","user_header":"https://static001.geekbang.org/account/avatar/00/30/5c/f4/70270989.jpg","comment_is_top":false,"comment_ctime":1662809686,"is_pvip":false,"replies":[{"id":"129992","content":"你好，在哪里运行的？运行的哪一段代码？<br>","user_name":"作者回复","user_name_real":"编辑","uid":"2802608","ctime":1663055494,"ip_address":"北京","comment_id":356994,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1662809686","product_id":100093301,"comment_content":"老师好，我想问一下，我在运行时最后结果不显示图片只显示标签是为什么呢？","like_count":0,"discussions":[{"author":{"id":2802608,"avatar":"https://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTK1ZkL9L7CEicI87xicpIhXAIhVdVWpJKBsD8Jpzg9iaAwFcDEhTvdRwuKItJS14mYznT2w2YQvn8QsQ/132","nickname":"方远","note":"","ucode":"248B1DE180EB4C","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":587436,"discussion_content":"你好，在哪里运行的？运行的哪一段代码？\n","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1663055494,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"北京"},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":353064,"user_name":"John(易筋)","can_delete":false,"product_type":"c1","uid":1180202,"ip_address":"北京","ucode":"BB4E58DD4B8F15","user_header":"https://static001.geekbang.org/account/avatar/00/12/02/2a/90e38b94.jpg","comment_is_top":false,"comment_ctime":1659108217,"is_pvip":true,"replies":[{"id":"128538","content":"👍🏻^^","user_name":"作者回复","user_name_real":"编辑","uid":"2802608","ctime":1659508632,"ip_address":"北京","comment_id":353064,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1659108217","product_id":100093301,"comment_content":"加上逗号解决：too many indices for tensor of dimension 0<br>The problem is that the mean and std have to be sequences (e.g., tuples), therefore you should add a comma after the values:<br><br><br># 定义一个transform<br>my_transform = transforms.Compose([transforms.ToTensor(),<br>                                   transforms.Normalize((0.5,), (0.5,))<br><br>ref: https:&#47;&#47;stackoverflow.com&#47;questions&#47;56745486&#47;pytorch-dataloader-indexerror-too-many-indices-for-tensor-of-dimension-0","like_count":0,"discussions":[{"author":{"id":2802608,"avatar":"https://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTK1ZkL9L7CEicI87xicpIhXAIhVdVWpJKBsD8Jpzg9iaAwFcDEhTvdRwuKItJS14mYznT2w2YQvn8QsQ/132","nickname":"方远","note":"","ucode":"248B1DE180EB4C","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":582555,"discussion_content":"👍🏻^^","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1659508632,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"北京"},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":353063,"user_name":"John(易筋)","can_delete":false,"product_type":"c1","uid":1180202,"ip_address":"陕西","ucode":"BB4E58DD4B8F15","user_header":"https://static001.geekbang.org/account/avatar/00/12/02/2a/90e38b94.jpg","comment_is_top":false,"comment_ctime":1659107974,"is_pvip":true,"discussion_count":0,"race_medal":0,"score":"1659107974","product_id":100093301,"comment_content":"老师，请教 执行报错<br>my_transform = transforms.Compose([transforms.ToTensor(),<br>                                   transforms.Normalize((0.5), (0.5))<br>                                  ])<br>mnist_dataset = datasets.MNIST(root=&#39;.&#47;data&#39;,<br>                               train=False,<br>                               transform=my_transform,<br>                               target_transform=None,<br>                               download=True)<br>item = mnist_dataset.__getitem__(0)<br>print(type(item[0]))<br><br>---------<br>IndexError                                Traceback (most recent call last)<br>&lt;ipython-input-1-bc3a8de1cbd4&gt; in &lt;module&gt;<br>     14 <br>     15 # 查看变换后的数据类型<br>---&gt; 16 item = mnist_dataset.__getitem__(0)<br>     17 print(type(item[0]))<br><br>~&#47;opt&#47;anaconda3&#47;lib&#47;python3.8&#47;site-packages&#47;torchvision&#47;datasets&#47;mnist.py in __getitem__(self, index)<br>     93 <br>     94         if self.transform is not None:<br>---&gt; 95             img = self.transform(img)<br>     96 <br>     97         if self.target_transform is not None:<br><br>~&#47;opt&#47;anaconda3&#47;lib&#47;python3.8&#47;site-packages&#47;torchvision&#47;transforms&#47;transforms.py in __call__(self, img)<br>     58     def __call__(self, img):<br>     59         for t in self.transforms:<br>---&gt; 60             img = t(img)<br>     61         return img<br>     62 <br><br>~&#47;opt&#47;anaconda3&#47;lib&#47;python3.8&#47;site-packages&#47;torchvision&#47;transforms&#47;transforms.py in __call__(self, tensor)<br>    161             Tensor: Normalized Tensor image.<br>    162         &quot;&quot;&quot;<br>--&gt; 163         return F.normalize(tensor, self.mean, self.std, self.inplace)<br>    164 <br>    165     def __repr__(self):<br><br>~&#47;opt&#47;anaconda3&#47;lib&#47;python3.8&#47;site-packages&#47;torchvision&#47;transforms&#47;functional.py in normalize(tensor, mean, std, inplace)<br>    206     mean = torch.tensor(mean, dtype=torch.float32)<br>    207     std = torch.tensor(std, dtype=torch.float32)<br>--&gt; 208     tensor.sub_(mean[:, None, None]).div_(std[:, None, None])<br>    209     return tensor<br>    210 <br><br>IndexError: too many indices for tensor of dimension 0<br>","like_count":0},{"had_liked":false,"id":339490,"user_name":"Geek_b454ca","can_delete":false,"product_type":"c1","uid":2953092,"ip_address":"","ucode":"BA54BEFEF42321","user_header":"","comment_is_top":false,"comment_ctime":1648128742,"is_pvip":false,"replies":[{"id":"124327","content":"你好，你说的是行列二维表那种数据吗？<br>似乎是没有，你可以查查。^^","user_name":"作者回复","user_name_real":"编辑","uid":"2802608","ctime":1648540479,"ip_address":"","comment_id":339490,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1648128742","product_id":100093301,"comment_content":"老师您好，Torchvision中有transform这些可以对数据进行标准化的函数，如果不是要处理图像数据，在pytorch中是不是也有类似的对数据进行标准化等transform操作的函数呢？","like_count":0,"discussions":[{"author":{"id":2802608,"avatar":"https://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTK1ZkL9L7CEicI87xicpIhXAIhVdVWpJKBsD8Jpzg9iaAwFcDEhTvdRwuKItJS14mYznT2w2YQvn8QsQ/132","nickname":"方远","note":"","ucode":"248B1DE180EB4C","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":558981,"discussion_content":"你好，你说的是行列二维表那种数据吗？\n似乎是没有，你可以查查。^^","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1648540479,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":336918,"user_name":"黑暗骑士","can_delete":false,"product_type":"c1","uid":2710847,"ip_address":"","ucode":"2A1C89298DD0D1","user_header":"https://static001.geekbang.org/account/avatar/00/29/5d/3f/ad1fed4a.jpg","comment_is_top":false,"comment_ctime":1646467152,"is_pvip":false,"replies":[{"id":"123173","content":"嗯嗯，是的。标签没有变。<br>原始数据是(image, target) 这样的形式，只是对image进行了变换，而不是新增一些数据。","user_name":"作者回复","user_name_real":"编辑","uid":"2802608","ctime":1646630775,"ip_address":"","comment_id":336918,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1646467152","product_id":100093301,"comment_content":"老师您好，<br>这节课我们对于数据本身进行了一系列操作，请问相应的标签如何处理呢？是不是会自动匹配？","like_count":0,"discussions":[{"author":{"id":2802608,"avatar":"https://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTK1ZkL9L7CEicI87xicpIhXAIhVdVWpJKBsD8Jpzg9iaAwFcDEhTvdRwuKItJS14mYznT2w2YQvn8QsQ/132","nickname":"方远","note":"","ucode":"248B1DE180EB4C","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":554820,"discussion_content":"嗯嗯，是的。标签没有变。\n原始数据是(image, target) 这样的形式，只是对image进行了变换，而不是新增一些数据。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1646630775,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":323948,"user_name":"徐洲更","can_delete":false,"product_type":"c1","uid":1314643,"ip_address":"","ucode":"F8A323CB732D05","user_header":"https://static001.geekbang.org/account/avatar/00/14/0f/53/92a50f01.jpg","comment_is_top":false,"comment_ctime":1638237477,"is_pvip":true,"replies":[{"id":"117545","content":"你好，徐洲更，感谢你的留言。我们自己定义的数据集也可以使用transforms.Compose对数据进行变换.<br>在图像分类(下)中,就会用到.","user_name":"作者回复","user_name_real":"编辑","uid":"2802608","ctime":1638250394,"ip_address":"","comment_id":323948,"utype":1},{"id":"117546","content":"你好，徐洲更，感谢你的留言。我们自己定义的数据集也可以使用transforms.Compose对数据进行变换.<br>在图像分类(下)中,就会用到.","user_name":"作者回复","user_name_real":"编辑","uid":"2802608","ctime":1638250394,"ip_address":"","comment_id":323948,"utype":1}],"discussion_count":2,"race_medal":0,"score":"1638237477","product_id":100093301,"comment_content":"老师您好，对于torchvision提供的datasets, 可以应用我们定义的transforms.Compose, 在读取时同时做数据变换。 那么对于我们自己的图像数据集，是不是只能定义一个函数，一边读取成tensor，然后一边处理？","like_count":0,"discussions":[{"author":{"id":2802608,"avatar":"https://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTK1ZkL9L7CEicI87xicpIhXAIhVdVWpJKBsD8Jpzg9iaAwFcDEhTvdRwuKItJS14mYznT2w2YQvn8QsQ/132","nickname":"方远","note":"","ucode":"248B1DE180EB4C","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":534650,"discussion_content":"你好，徐洲更，感谢你的留言。我们自己定义的数据集也可以使用transforms.Compose对数据进行变换.\n在图像分类(下)中,就会用到.","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1638250394,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":2802608,"avatar":"https://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTK1ZkL9L7CEicI87xicpIhXAIhVdVWpJKBsD8Jpzg9iaAwFcDEhTvdRwuKItJS14mYznT2w2YQvn8QsQ/132","nickname":"方远","note":"","ucode":"248B1DE180EB4C","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":534649,"discussion_content":"你好，徐洲更，感谢你的留言。我们自己定义的数据集也可以使用transforms.Compose对数据进行变换.\n在图像分类(下)中,就会用到.","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1638250394,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":320214,"user_name":"马克图布","can_delete":false,"product_type":"c1","uid":1019274,"ip_address":"","ucode":"9E3879D6A55244","user_header":"https://static001.geekbang.org/account/avatar/00/0f/8d/8a/ec29ca4a.jpg","comment_is_top":false,"comment_ctime":1636130517,"is_pvip":false,"replies":[{"id":"116179","content":"你好，马克图布，谢谢你的留言。<br>warning可以忽略。<br>这主要是由于pillow包&#47;Image包插值模式造成的。<br>解决方案：<br>1. 导入from torchvision.transforms import InterpolationMode<br>2. 将Image.BICUBIC 替换为InterpolationMode.BICUBIC","user_name":"作者回复","user_name_real":"方远","uid":"2802608","ctime":1636349479,"ip_address":"","comment_id":320214,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1636130517","product_id":100093301,"comment_content":"老师，在使用 Resize 的时候，出现以下 warning:<br><br>UserWarning: Argument interpolation should be of type InterpolationMode instead of int. Please, use InterpolationMode enum.<br><br>这个是可以直接忽略的吗？","like_count":0,"discussions":[{"author":{"id":2802608,"avatar":"https://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTK1ZkL9L7CEicI87xicpIhXAIhVdVWpJKBsD8Jpzg9iaAwFcDEhTvdRwuKItJS14mYznT2w2YQvn8QsQ/132","nickname":"方远","note":"","ucode":"248B1DE180EB4C","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":529919,"discussion_content":"你好，马克图布，谢谢你的留言。\nwarning可以忽略。\n这主要是由于pillow包/Image包插值模式造成的。\n解决方案：\n1. 导入from torchvision.transforms import InterpolationMode\n2. 将Image.BICUBIC 替换为InterpolationMode.BICUBIC","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1636349479,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":318256,"user_name":"栗白","can_delete":false,"product_type":"c1","uid":2810401,"ip_address":"","ucode":"8B0FBE195DA8B8","user_header":"https://static001.geekbang.org/account/avatar/00/2a/e2/21/3bb82a79.jpg","comment_is_top":false,"comment_ctime":1635217125,"is_pvip":false,"replies":[{"id":"115503","content":"你好，。👍🏻👍🏻👍🏻👍🏻👍🏻👍🏻👍🏻👍🏻正确^^。<br>包含常用的图像操作，例如随机切割、旋转、Tensor 与 Numpy 和 PIL Image 的数据类型转换等。","user_name":"作者回复","user_name_real":"方远","uid":"2802608","ctime":1635338828,"ip_address":"","comment_id":318256,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1635217125","product_id":100093301,"comment_content":"是图像的预处理操作。","like_count":0,"discussions":[{"author":{"id":2802608,"avatar":"https://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTK1ZkL9L7CEicI87xicpIhXAIhVdVWpJKBsD8Jpzg9iaAwFcDEhTvdRwuKItJS14mYznT2w2YQvn8QsQ/132","nickname":"方远","note":"","ucode":"248B1DE180EB4C","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":529156,"discussion_content":"你好，。👍🏻👍🏻👍🏻👍🏻👍🏻👍🏻👍🏻👍🏻正确^^。\n包含常用的图像操作，例如随机切割、旋转、Tensor 与 Numpy 和 PIL Image 的数据类型转换等。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1635338828,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]}]}