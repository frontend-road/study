{"id":73479,"title":"16 | “order by”是怎么工作的？","content":"<p>在你开发应用的时候，一定会经常碰到需要根据指定的字段排序来显示结果的需求。还是以我们前面举例用过的市民表为例，假设你要查询城市是“杭州”的所有人名字，并且按照姓名排序返回前1000个人的姓名、年龄。</p><p>假设这个表的部分定义是这样的：</p><pre><code>CREATE TABLE `t` (\n  `id` int(11) NOT NULL,\n  `city` varchar(16) NOT NULL,\n  `name` varchar(16) NOT NULL,\n  `age` int(11) NOT NULL,\n  `addr` varchar(128) DEFAULT NULL,\n  PRIMARY KEY (`id`),\n  KEY `city` (`city`)\n) ENGINE=InnoDB;\n</code></pre><p>这时，你的SQL语句可以这么写：</p><pre><code>select city,name,age from t where city='杭州' order by name limit 1000  ;\n</code></pre><p>这个语句看上去逻辑很清晰，但是你了解它的执行流程吗？今天，我就和你聊聊这个语句是怎么执行的，以及有什么参数会影响执行的行为。</p><h1>全字段排序</h1><p>前面我们介绍过索引，所以你现在就很清楚了，为避免全表扫描，我们需要在city字段加上索引。</p><p>在city字段上创建索引之后，我们用explain命令来看看这个语句的执行情况。</p><p><img src=\"https://static001.geekbang.org/resource/image/82/03/826579b63225def812330ef6c344a303.png?wh=1470*126\" alt=\"\"></p><center><span class=\"reference\">图1 使用explain命令查看语句的执行情况</span></center><p>Extra这个字段中的“Using filesort”表示的就是需要排序，MySQL会给每个线程分配一块内存用于排序，称为sort_buffer。</p><p>为了说明这个SQL查询语句的执行过程，我们先来看一下city这个索引的示意图。</p><p><img src=\"https://static001.geekbang.org/resource/image/53/3e/5334cca9118be14bde95ec94b02f0a3e.png?wh=1142*856\" alt=\"\"></p><center><span class=\"reference\">图2 city字段的索引示意图</span></center><p>从图中可以看到，满足city='杭州’条件的行，是从ID_X到ID_(X+N)的这些记录。</p><p>通常情况下，这个语句执行流程如下所示 ：</p><!-- [[[read_end]]] --><ol>\n<li>\n<p>初始化sort_buffer，确定放入name、city、age这三个字段；</p>\n</li>\n<li>\n<p>从索引city找到第一个满足city='杭州’条件的主键id，也就是图中的ID_X；</p>\n</li>\n<li>\n<p>到主键id索引取出整行，取name、city、age三个字段的值，存入sort_buffer中；</p>\n</li>\n<li>\n<p>从索引city取下一个记录的主键id；</p>\n</li>\n<li>\n<p>重复步骤3、4直到city的值不满足查询条件为止，对应的主键id也就是图中的ID_Y；</p>\n</li>\n<li>\n<p>对sort_buffer中的数据按照字段name做快速排序；</p>\n</li>\n<li>\n<p>按照排序结果取前1000行返回给客户端。</p>\n</li>\n</ol><p>我们暂且把这个排序过程，称为全字段排序，执行流程的示意图如下所示，下一篇文章中我们还会用到这个排序。</p><p><img src=\"https://static001.geekbang.org/resource/image/6c/72/6c821828cddf46670f9d56e126e3e772.jpg?wh=1142*856\" alt=\"\"></p><center><span class=\"reference\">图3 全字段排序</span></center><p>图中“按name排序”这个动作，可能在内存中完成，也可能需要使用外部排序，这取决于排序所需的内存和参数sort_buffer_size。</p><p>sort_buffer_size，就是MySQL为排序开辟的内存（sort_buffer）的大小。如果要排序的数据量小于sort_buffer_size，排序就在内存中完成。但如果排序数据量太大，内存放不下，则不得不利用磁盘临时文件辅助排序。</p><p>你可以用下面介绍的方法，来确定一个排序语句是否使用了临时文件。</p><pre><code>/* 打开optimizer_trace，只对本线程有效 */\nSET optimizer_trace='enabled=on'; \n\n/* @a保存Innodb_rows_read的初始值 */\nselect VARIABLE_VALUE into @a from  performance_schema.session_status where variable_name = 'Innodb_rows_read';\n\n/* 执行语句 */\nselect city, name,age from t where city='杭州' order by name limit 1000; \n\n/* 查看 OPTIMIZER_TRACE 输出 */\nSELECT * FROM `information_schema`.`OPTIMIZER_TRACE`\\G\n\n/* @b保存Innodb_rows_read的当前值 */\nselect VARIABLE_VALUE into @b from performance_schema.session_status where variable_name = 'Innodb_rows_read';\n\n/* 计算Innodb_rows_read差值 */\nselect @b-@a;\n</code></pre><p>这个方法是通过查看 OPTIMIZER_TRACE 的结果来确认的，你可以从 number_of_tmp_files中看到是否使用了临时文件。</p><p><img src=\"https://static001.geekbang.org/resource/image/89/95/89baf99cdeefe90a22370e1d6f5e6495.png?wh=713*183\" alt=\"\"></p><center><span class=\"reference\">图4 全排序的OPTIMIZER_TRACE部分结果</span></center><p>number_of_tmp_files表示的是，排序过程中使用的临时文件数。你一定奇怪，为什么需要12个文件？内存放不下时，就需要使用外部排序，外部排序一般使用归并排序算法。可以这么简单理解，<strong>MySQL将需要排序的数据分成12份，每一份单独排序后存在这些临时文件中。然后把这12个有序文件再合并成一个有序的大文件。</strong></p><p>如果sort_buffer_size超过了需要排序的数据量的大小，number_of_tmp_files就是0，表示排序可以直接在内存中完成。</p><p>否则就需要放在临时文件中排序。sort_buffer_size越小，需要分成的份数越多，number_of_tmp_files的值就越大。</p><p>接下来，我再和你解释一下图4中其他两个值的意思。</p><p>我们的示例表中有4000条满足city='杭州’的记录，所以你可以看到 examined_rows=4000，表示参与排序的行数是4000行。</p><p>sort_mode 里面的packed_additional_fields的意思是，排序过程对字符串做了“紧凑”处理。即使name字段的定义是varchar(16)，在排序过程中还是要按照实际长度来分配空间的。</p><p>同时，最后一个查询语句select @b-@a 的返回结果是4000，表示整个执行过程只扫描了4000行。</p><p>这里需要注意的是，为了避免对结论造成干扰，我把internal_tmp_disk_storage_engine设置成MyISAM。否则，select @b-@a的结果会显示为4001。</p><p>这是因为查询OPTIMIZER_TRACE这个表时，需要用到临时表，而internal_tmp_disk_storage_engine的默认值是InnoDB。如果使用的是InnoDB引擎的话，把数据从临时表取出来的时候，会让Innodb_rows_read的值加1。</p><h1>rowid排序</h1><p>在上面这个算法过程里面，只对原表的数据读了一遍，剩下的操作都是在sort_buffer和临时文件中执行的。但这个算法有一个问题，就是如果查询要返回的字段很多的话，那么sort_buffer里面要放的字段数太多，这样内存里能够同时放下的行数很少，要分成很多个临时文件，排序的性能会很差。</p><p>所以如果单行很大，这个方法效率不够好。</p><p>那么，<strong>如果MySQL认为排序的单行长度太大会怎么做呢？</strong></p><p>接下来，我来修改一个参数，让MySQL采用另外一种算法。</p><pre><code>SET max_length_for_sort_data = 16;\n</code></pre><p>max_length_for_sort_data，是MySQL中专门控制用于排序的行数据的长度的一个参数。它的意思是，如果单行的长度超过这个值，MySQL就认为单行太大，要换一个算法。</p><p>city、name、age 这三个字段的定义总长度是36，我把max_length_for_sort_data设置为16，我们再来看看计算过程有什么改变。</p><p>新的算法放入sort_buffer的字段，只有要排序的列（即name字段）和主键id。</p><p>但这时，排序的结果就因为少了city和age字段的值，不能直接返回了，整个执行流程就变成如下所示的样子：</p><ol>\n<li>\n<p>初始化sort_buffer，确定放入两个字段，即name和id；</p>\n</li>\n<li>\n<p>从索引city找到第一个满足city='杭州’条件的主键id，也就是图中的ID_X；</p>\n</li>\n<li>\n<p>到主键id索引取出整行，取name、id这两个字段，存入sort_buffer中；</p>\n</li>\n<li>\n<p>从索引city取下一个记录的主键id；</p>\n</li>\n<li>\n<p>重复步骤3、4直到不满足city='杭州’条件为止，也就是图中的ID_Y；</p>\n</li>\n<li>\n<p>对sort_buffer中的数据按照字段name进行排序；</p>\n</li>\n<li>\n<p>遍历排序结果，取前1000行，并按照id的值回到原表中取出city、name和age三个字段返回给客户端。</p>\n</li>\n</ol><p>这个执行流程的示意图如下，我把它称为rowid排序。</p><p><img src=\"https://static001.geekbang.org/resource/image/dc/6d/dc92b67721171206a302eb679c83e86d.jpg?wh=1142*856\" alt=\"\"></p><center><span class=\"reference\">图5 rowid排序</span></center><p>对比图3的全字段排序流程图你会发现，rowid排序多访问了一次表t的主键索引，就是步骤7。</p><p>需要说明的是，最后的“结果集”是一个逻辑概念，实际上MySQL服务端从排序后的sort_buffer中依次取出id，然后到原表查到city、name和age这三个字段的结果，不需要在服务端再耗费内存存储结果，是直接返回给客户端的。</p><p>根据这个说明过程和图示，你可以想一下，这个时候执行select @b-@a，结果会是多少呢？</p><p>现在，我们就来看看结果有什么不同。</p><p>首先，图中的examined_rows的值还是4000，表示用于排序的数据是4000行。但是select @b-@a这个语句的值变成5000了。</p><p>因为这时候除了排序过程外，在排序完成后，还要根据id去原表取值。由于语句是limit 1000，因此会多读1000行。</p><p><img src=\"https://static001.geekbang.org/resource/image/27/9b/27f164804d1a4689718291be5d10f89b.png?wh=468*183\" alt=\"\"></p><center><span class=\"reference\">图6 rowid排序的OPTIMIZER_TRACE部分输出</span></center><p>从OPTIMIZER_TRACE的结果中，你还能看到另外两个信息也变了。</p><ul>\n<li>sort_mode变成了&lt;sort_key, rowid&gt;，表示参与排序的只有name和id这两个字段。</li>\n<li>number_of_tmp_files变成10了，是因为这时候参与排序的行数虽然仍然是4000行，但是每一行都变小了，因此需要排序的总数据量就变小了，需要的临时文件也相应地变少了。</li>\n</ul><h1>全字段排序 VS rowid排序</h1><p>我们来分析一下，从这两个执行流程里，还能得出什么结论。</p><p>如果MySQL实在是担心排序内存太小，会影响排序效率，才会采用rowid排序算法，这样排序过程中一次可以排序更多行，但是需要再回到原表去取数据。</p><p>如果MySQL认为内存足够大，会优先选择全字段排序，把需要的字段都放到sort_buffer中，这样排序后就会直接从内存里面返回查询结果了，不用再回到原表去取数据。</p><p>这也就体现了MySQL的一个设计思想：<strong>如果内存够，就要多利用内存，尽量减少磁盘访问。</strong></p><p>对于InnoDB表来说，rowid排序会要求回表多造成磁盘读，因此不会被优先选择。</p><p>这个结论看上去有点废话的感觉，但是你要记住它，下一篇文章我们就会用到。</p><p>看到这里，你就了解了，MySQL做排序是一个成本比较高的操作。那么你会问，是不是所有的order by都需要排序操作呢？如果不排序就能得到正确的结果，那对系统的消耗会小很多，语句的执行时间也会变得更短。</p><p>其实，并不是所有的order by语句，都需要排序操作的。从上面分析的执行过程，我们可以看到，MySQL之所以需要生成临时表，并且在临时表上做排序操作，<strong>其原因是原来的数据都是无序的。</strong></p><p>你可以设想下，如果能够保证从city这个索引上取出来的行，天然就是按照name递增排序的话，是不是就可以不用再排序了呢？</p><p>确实是这样的。</p><p>所以，我们可以在这个市民表上创建一个city和name的联合索引，对应的SQL语句是：</p><pre><code>alter table t add index city_user(city, name);\n</code></pre><p>作为与city索引的对比，我们来看看这个索引的示意图。</p><p><img src=\"https://static001.geekbang.org/resource/image/f9/bf/f980201372b676893647fb17fac4e2bf.png?wh=1142*856\" alt=\"\"></p><center><span class=\"reference\">图7 city和name联合索引示意图</span></center><p>在这个索引里面，我们依然可以用树搜索的方式定位到第一个满足city='杭州’的记录，并且额外确保了，接下来按顺序取“下一条记录”的遍历过程中，只要city的值是杭州，name的值就一定是有序的。</p><p>这样整个查询过程的流程就变成了：</p><ol>\n<li>\n<p>从索引(city,name)找到第一个满足city='杭州’条件的主键id；</p>\n</li>\n<li>\n<p>到主键id索引取出整行，取name、city、age三个字段的值，作为结果集的一部分直接返回；</p>\n</li>\n<li>\n<p>从索引(city,name)取下一个记录主键id；</p>\n</li>\n<li>\n<p>重复步骤2、3，直到查到第1000条记录，或者是不满足city='杭州’条件时循环结束。</p>\n</li>\n</ol><p><img src=\"https://static001.geekbang.org/resource/image/3f/92/3f590c3a14f9236f2d8e1e2cb9686692.jpg?wh=1142*856\" alt=\"\"></p><center><span class=\"reference\">图8 引入(city,name)联合索引后，查询语句的执行计划</span></center><p>可以看到，这个查询过程不需要临时表，也不需要排序。接下来，我们用explain的结果来印证一下。</p><p><img src=\"https://static001.geekbang.org/resource/image/fc/8a/fc53de303811ba3c46d344595743358a.png?wh=1382*127\" alt=\"\"></p><center><span class=\"reference\">图9 引入(city,name)联合索引后，查询语句的执行计划</span></center><p>从图中可以看到，Extra字段中没有Using filesort了，也就是不需要排序了。而且由于(city,name)这个联合索引本身有序，所以这个查询也不用把4000行全都读一遍，只要找到满足条件的前1000条记录就可以退出了。也就是说，在我们这个例子里，只需要扫描1000次。</p><p>既然说到这里了，我们再往前讨论，<strong>这个语句的执行流程有没有可能进一步简化呢？</strong>不知道你还记不记得，我在第5篇文章<a href=\"https://time.geekbang.org/column/article/69636\">《 深入浅出索引（下）》</a>中，和你介绍的覆盖索引。</p><p>这里我们可以再稍微复习一下。<strong>覆盖索引是指，索引上的信息足够满足查询请求，不需要再回到主键索引上去取数据。</strong></p><p>按照覆盖索引的概念，我们可以再优化一下这个查询语句的执行流程。</p><p>针对这个查询，我们可以创建一个city、name和age的联合索引，对应的SQL语句就是：</p><pre><code>alter table t add index city_user_age(city, name, age);\n</code></pre><p>这时，对于city字段的值相同的行来说，还是按照name字段的值递增排序的，此时的查询语句也就不再需要排序了。这样整个查询语句的执行流程就变成了：</p><ol>\n<li>\n<p>从索引(city,name,age)找到第一个满足city='杭州’条件的记录，取出其中的city、name和age这三个字段的值，作为结果集的一部分直接返回；</p>\n</li>\n<li>\n<p>从索引(city,name,age)取下一个记录，同样取出这三个字段的值，作为结果集的一部分直接返回；</p>\n</li>\n<li>\n<p>重复执行步骤2，直到查到第1000条记录，或者是不满足city='杭州’条件时循环结束。</p>\n</li>\n</ol><p><img src=\"https://static001.geekbang.org/resource/image/df/d6/df4b8e445a59c53df1f2e0f115f02cd6.jpg?wh=1142*856\" alt=\"\"></p><center><span class=\"reference\">图10 引入(city,name,age)联合索引后，查询语句的执行流程</span></center><p>然后，我们再来看看explain的结果。</p><p><img src=\"https://static001.geekbang.org/resource/image/9e/23/9e40b7b8f0e3f81126a9171cc22e3423.png?wh=1586*125\" alt=\"\"></p><center><span class=\"reference\">图11 引入(city,name,age)联合索引后，查询语句的执行计划</span></center><p>可以看到，Extra字段里面多了“Using index”，表示的就是使用了覆盖索引，性能上会快很多。</p><p>当然，这里并不是说要为了每个查询能用上覆盖索引，就要把语句中涉及的字段都建上联合索引，毕竟索引还是有维护代价的。这是一个需要权衡的决定。</p><h1>小结</h1><p>今天这篇文章，我和你介绍了MySQL里面order by语句的几种算法流程。</p><p>在开发系统的时候，你总是不可避免地会使用到order by语句。你心里要清楚每个语句的排序逻辑是怎么实现的，还要能够分析出在最坏情况下，每个语句的执行对系统资源的消耗，这样才能做到下笔如有神，不犯低级错误。</p><p>最后，我给你留下一个思考题吧。</p><p>假设你的表里面已经有了city_name(city, name)这个联合索引，然后你要查杭州和苏州两个城市中所有的市民的姓名，并且按名字排序，显示前100条记录。如果SQL查询语句是这么写的 ：</p><pre><code>mysql&gt; select * from t where city in ('杭州',&quot;苏州&quot;) order by name limit 100;\n</code></pre><p>那么，这个语句执行的时候会有排序过程吗，为什么？</p><p>如果业务端代码由你来开发，需要实现一个在数据库端不需要排序的方案，你会怎么实现呢？</p><p>进一步地，如果有分页需求，要显示第101页，也就是说语句最后要改成 “limit 10000,100”， 你的实现方法又会是什么呢？</p><p>你可以把你的思考和观点写在留言区里，我会在下一篇文章的末尾和你讨论这个问题。感谢你的收听，也欢迎你把这篇文章分享给更多的朋友一起阅读。</p><h1>上期问题时间</h1><p>上期的问题是，当MySQL去更新一行，但是要修改的值跟原来的值是相同的，这时候MySQL会真的去执行一次修改吗？还是看到值相同就直接返回呢？</p><p>这是第一次我们课后问题的三个选项都有同学选的，所以我要和你需要详细说明一下。</p><p>第一个选项是，MySQL读出数据，发现值与原来相同，不更新，直接返回，执行结束。这里我们可以用一个锁实验来确认。</p><p>假设，当前表t里的值是(1,2)。</p><p><img src=\"https://static001.geekbang.org/resource/image/6d/90/6d9d8837560d01b57d252c470157ea90.png?wh=935*203\" alt=\"\"></p><center><span class=\"reference\">图12 锁验证方式</span></center><p>session B的update 语句被blocked了，加锁这个动作是InnoDB才能做的，所以排除选项1。</p><p>第二个选项是，MySQL调用了InnoDB引擎提供的接口，但是引擎发现值与原来相同，不更新，直接返回。有没有这种可能呢？这里我用一个可见性实验来确认。</p><p>假设当前表里的值是(1,2)。</p><p><img src=\"https://static001.geekbang.org/resource/image/44/96/441682b64a3f5dd50f35b12ca4b87c96.png?wh=938*423\" alt=\"\"></p><center><span class=\"reference\">图13 可见性验证方式</span></center><p>session A的第二个select 语句是一致性读（快照读)，它是不能看见session B的更新的。</p><p>现在它返回的是(1,3)，表示它看见了某个新的版本，这个版本只能是session A自己的update语句做更新的时候生成。（如果你对这个逻辑有疑惑的话，可以回顾下第8篇文章<a href=\"https://time.geekbang.org/column/article/70562\">《事务到底是隔离的还是不隔离的？》</a>中的相关内容）</p><p>所以，我们上期思考题的答案应该是选项3，即：InnoDB认真执行了“把这个值修改成(1,2)\"这个操作，该加锁的加锁，该更新的更新。</p><p>然后你会说，MySQL怎么这么笨，就不会更新前判断一下值是不是相同吗？如果判断一下，不就不用浪费InnoDB操作，多去更新一次了？</p><p>其实MySQL是确认了的。只是在这个语句里面，MySQL认为读出来的值，只有一个确定的 (id=1), 而要写的是(a=3)，只从这两个信息是看不出来“不需要修改”的。</p><p>作为验证，你可以看一下下面这个例子。</p><p><img src=\"https://static001.geekbang.org/resource/image/63/c1/63dd6df32dacdb827d256e5acb9837c1.png?wh=964*447\" alt=\"\"></p><center><span class=\"reference\">图14 可见性验证方式--对照</span></center><p><strong>补充说明：</strong></p><p>上面我们的验证结果都是在binlog_format=statement格式下进行的。</p><p>@didiren 补充了一个case， 如果是binlog_format=row 并且binlog_row_image=FULL的时候，由于MySQL需要在binlog里面记录所有的字段，所以在读数据的时候就会把所有数据都读出来了。</p><p>根据上面说的规则，“既然读了数据，就会判断”， 因此在这时候，select * from t where id=1，结果就是“返回 (1,2)”。</p><p>同理，如果是binlog_row_image=NOBLOB, 会读出除blob 外的所有字段，在我们这个例子里，结果还是“返回 (1,2)”。</p><p>对应的代码如图15所示。这是MySQL 5.6版本引入的，在此之前我没有看过。所以，特此说明。</p><p><img src=\"https://static001.geekbang.org/resource/image/d4/89/d413b9235d56c62f9829750a68b06b89.png?wh=1040*160\" alt=\"\"></p><center><span class=\"reference\">图15 binlog_row_image=FULL读字段逻辑</span></center><p>类似的，@mahonebags 同学提到了timestamp字段的问题。结论是：如果表中有timestamp字段而且设置了自动更新的话，那么更新“别的字段”的时候，MySQL会读入所有涉及的字段，这样通过判断，就会发现不需要修改。</p><p>这两个点我会在后面讲更新性能的文章中再展开。</p><p>评论区留言点赞板：</p><blockquote>\n<p>@Gavin 、@melon、@阿建 等同学提到了锁验证法；<br>\n@郭江伟 同学提到了两个点，都非常好，有去实际验证。结论是这样的：<br>\n第一，hexdump看出来没改应该是WAL机制生效了，要过一会儿，或者把库shutdown看看。<br>\n第二，binlog没写是MySQL Server层知道行的值没变，所以故意不写的，这个是在row格式下的策略。你可以把binlog_format 改成statement再验证下。</p>\n</blockquote><p></p>","neighbors":{"left":{"article_title":"15 | 答疑文章（一）：日志和索引相关问题","id":73161},"right":{"article_title":"17 | 如何正确地显示随机消息？","id":73795}},"comments":[{"had_liked":false,"id":52028,"user_name":"某、人","can_delete":false,"product_type":"c1","uid":1308784,"ip_address":"","ucode":"ADB42AA12A11C1","user_header":"https://static001.geekbang.org/account/avatar/00/13/f8/70/f3a33a14.jpg","comment_is_top":true,"comment_ctime":1545297429,"is_pvip":false,"replies":[{"id":"18833","content":"发条橙子同学的问题：<br>问题1:你回答得比我回复的答案还好！👍🏿<br>问题2:这个后面我们展开哈，要配图才能说得清😄<br>问题3:回答得也很好，需要注意的是255这个边界。小于255都需要一个字节记录长度，超过255就需要两个字节<br><br>你的问题：#好问题_#<br>1. 排序相关的内存在排序后就free掉还给系统了<br>2. 读的时候加了写锁的<br>3. 堆排序要读所有行的，只读一次，我估计你已经理解对了😄<br><br>","user_name":"作者回复","comment_id":52028,"uid":"1264162","ip_address":"","utype":1,"ctime":1545303123,"user_name_real":"林晓斌"}],"discussion_count":18,"race_medal":0,"score":"9.2233728587388006e+18","product_id":100020801,"comment_content":"回答下@发条橙子同学的问题:<br>问题一：<br>1)无条件查询如果只有order by create_time,即便create_time上有索引,也不会使用到。<br>因为优化器认为走二级索引再去回表成本比全表扫描排序更高。<br>所以选择走全表扫描,然后根据老师讲的两种方式选择一种来排序<br>2)无条件查询但是是order by create_time limit m.如果m值较小,是可以走索引的.<br>因为优化器认为根据索引有序性去回表查数据,然后得到m条数据,就可以终止循环,那么成本比全表扫描小,则选择走二级索引。<br>即便没有二级索引,mysql针对order by limit也做了优化,采用堆排序。这部分老师明天会讲<br><br>问题二:<br>如果是group by a,a上不能使用索引的情况,是走rowid排序。<br>如果是group by limit,不能使用索引的情况,是走堆排序<br>如果是只有group by a,a上有索引的情况,又根据选取值不同,索引的扫描方式又有不同<br>select * from t group by a  --走的是索引全扫描,至于这里为什么选择走索引全扫描,还需要老师解惑下<br>select a from t group by a  --走的是索引松散扫描,也就说只需要扫描每组的第一行数据即可,不用扫描每一行的值<br><br>问题三:<br>bigint和int加数字都不影响能存储的值。<br>bigint(1)和bigint(19)都能存储2^64-1范围内的值,int是2^32-1。只是有些前端会根据括号里来截取显示而已。建议不加varchar()就必须带,因为varchar()括号里的数字代表能存多少字符。假设varchar(2),就只能存两个字符,不管是中文还是英文。目前来看varchar()这个值可以设得稍稍大点,因为内存是按照实际的大小来分配内存空间的,不是按照值来预分配的。<br><br>老师我有几个问题:<br>1.我还是想在确认之前问的问题。一个长连接,一条sql申请了sort_buffer_size等一系列的会话级别的内存,sql成功执行完,该连接变为sleep状态。这些内存只是内容会被情况,但是占用的内存空间不会释放?<br>2.假设要给a值加1,执行器先找引擎取a=1的行,然后执行器给a+1,在调用接口写入a+1了数据。那么加锁不应该是在执行器第一次去取数据时，引擎层就加该加的锁？为什么要等到第二次调用写入数据时,才加锁。第一次和第二次之间,难道不会被其他事务修改吗？如果没有锁保证<br>3.始终没太明白堆排序是采用的什么算法使得只需要对limit的数据进行排序就可以,而不是排序所有的数据在取前m条。--不过这里期待明天的文章","like_count":192,"discussions":[{"author":{"id":1264162,"avatar":"https://static001.geekbang.org/account/avatar/00/13/4a/22/2681d602.jpg","nickname":"林晓斌","note":"","ucode":"CDE42D44F26240","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":433709,"discussion_content":"发条橙子同学的问题：\n问题1:你回答得比我回复的答案还好！👍🏿\n问题2:这个后面我们展开哈，要配图才能说得清😄\n问题3:回答得也很好，需要注意的是255这个边界。小于255都需要一个字节记录长度，超过255就需要两个字节\n\n你的问题：#好问题_#\n1. 排序相关的内存在排序后就free掉还给系统了\n2. 读的时候加了写锁的\n3. 堆排序要读所有行的，只读一次，我估计你已经理解对了😄\n\n","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1545303123,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1336275,"avatar":"https://thirdwx.qlogo.cn/mmopen/vi_32/KibvgwBjrsVOiayuViaoQfyNts8xMsztwe0Fg24icicFW7YeJaPQhAGhdNZjWWhyxOian0SCdibhiaerLbhuefkiaP1EooQ/132","nickname":"学文化的流氓","note":"","ucode":"6D9412976EE8B0","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":261162,"discussion_content":"复制一下@发条橙子同学的问题，省的还得去找\n\n正好有个 order by 使用场景 ， 有个页面，需要按数据插入时间倒序来查看一张记录表的信息 ，因为除了分页的参数 ， 没有其他 where 的条件 ，所以除了主键外没有其他索引 。\n\n这时候 DBA 让我给 create_time 创建索引， 说是按照顺序排列 ，查询会增快 。这篇文章看完后 ， 让我感觉实际上创建 create_time 索引是没用的 。\n\n因为查询本身并没有用到 create_time 索引 ，实际上查询的步骤是 ：\n\n1. 初始化 sort_buffer 内存\n\n2. 因为没索引 ， 所以扫出全表的数据到 sort_buffer 中\n\n2. 如果内存够则直接内存按时间排序\n\n3. 如果内存不够则按数据量分成不同文件分别按时间排序后整合\n\n4. 根据数量分页查询数量 回聚集索引中用 ID 查询数据\n\n5. 返回\n\n所以我分析create_time索引应该不需要创建。反而增加了维护成本\n\n\n问题一 ：这种无条件查列表页除了全表扫还有其他建立索引的办法么\n\n问题二 : 如果加入 group by ， 数据该如何走\n\n问题三 ：老师之后的文章会有讲解 bigInt(20) 、 tinyint(2) 、varchar(32) 这种后面带数字与不带数字有何区别的文章么 。 每次建字段都会考虑长度 ，但实际却不知道他有何作用","likes_number":30,"is_delete":false,"is_hidden":false,"ctime":1588943894,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":2,"child_discussions":[{"author":{"id":1166966,"avatar":"https://static001.geekbang.org/account/avatar/00/11/ce/76/a344ccad.jpg","nickname":"放羊的村长","note":"","ucode":"AF948FCE8079B4","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1336275,"avatar":"https://thirdwx.qlogo.cn/mmopen/vi_32/KibvgwBjrsVOiayuViaoQfyNts8xMsztwe0Fg24icicFW7YeJaPQhAGhdNZjWWhyxOian0SCdibhiaerLbhuefkiaP1EooQ/132","nickname":"学文化的流氓","note":"","ucode":"6D9412976EE8B0","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":559712,"discussion_content":"如果插入时间是插入的时候自动填入的，id也是递增的，那order by create_time和order by id是一样的","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1648892749,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":261162,"ip_address":""},"score":559712,"extra":""},{"author":{"id":1986739,"avatar":"https://static001.geekbang.org/account/avatar/00/1e/50/b3/9269cd59.jpg","nickname":"LWD","note":"","ucode":"DDA444DB113C01","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1336275,"avatar":"https://thirdwx.qlogo.cn/mmopen/vi_32/KibvgwBjrsVOiayuViaoQfyNts8xMsztwe0Fg24icicFW7YeJaPQhAGhdNZjWWhyxOian0SCdibhiaerLbhuefkiaP1EooQ/132","nickname":"学文化的流氓","note":"","ucode":"6D9412976EE8B0","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":587482,"discussion_content":"有分页参数用这个索引会更好吧。。只不过分页偏移量大了会有性能问题，可以优化成where create_time&gt;xxx形式，只不过这样就不可用跳页了，但是可以通过预加载手动处理","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1663083211,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":261162,"ip_address":"广东"},"score":587482,"extra":""}]},{"author":{"id":2056201,"avatar":"https://static001.geekbang.org/account/avatar/00/1f/60/09/a8e7913b.jpg","nickname":"SandCarving","note":"","ucode":"6B97DB71613A46","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":321963,"discussion_content":"为什么你们都那么优秀","likes_number":6,"is_delete":false,"is_hidden":false,"ctime":1604654205,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1130927,"avatar":"https://static001.geekbang.org/account/avatar/00/11/41/af/abb7bfe3.jpg","nickname":"雨中漫步","note":"","ucode":"022AFC716E3CAA","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":256550,"discussion_content":"第一个问题不太明白，如果create_time 上有索引，那order by create_time不应该通过索引避免排序的过程吗？这样感觉会比全表扫描排序更快呀","likes_number":3,"is_delete":false,"is_hidden":false,"ctime":1588494680,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":1,"child_discussions":[{"author":{"id":1228424,"avatar":"https://static001.geekbang.org/account/avatar/00/12/be/88/8d15796f.jpg","nickname":"John","note":"","ucode":"A46AF2906C38C1","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1130927,"avatar":"https://static001.geekbang.org/account/avatar/00/11/41/af/abb7bfe3.jpg","nickname":"雨中漫步","note":"","ucode":"022AFC716E3CAA","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":310495,"discussion_content":"虽然可以在避免排序，create_time是他的dba为了所谓的加速才加的，没有业务意义，所以查询子句肯定不可能只有 create_time，此时无条件查询必然表中所有数据均要回表，总的来说在全表回表和全表排序上后者应该消耗更低","likes_number":2,"is_delete":false,"is_hidden":false,"ctime":1601879353,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":256550,"ip_address":""},"score":310495,"extra":""}]},{"author":{"id":1986739,"avatar":"https://static001.geekbang.org/account/avatar/00/1e/50/b3/9269cd59.jpg","nickname":"LWD","note":"","ucode":"DDA444DB113C01","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":535903,"discussion_content":"堆排序首先需要构建大顶堆或者小顶堆。每次取的时候要么是最小值要么是最大值","likes_number":2,"is_delete":false,"is_hidden":false,"ctime":1638601857,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":2033168,"avatar":"https://static001.geekbang.org/account/avatar/00/1f/06/10/77f6ccea.jpg","nickname":"尘灬","note":"","ucode":"553924A550B3BD","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":556659,"discussion_content":"这里的255是表示的是字节；\n比如一个字符集为utf8mb4（一个字符为4个字节),一个字段定义为varchar(M),M代表字符个数。\n1:如果4*M小于等于255，那就用一个字节来表示真实数据占用的字节数。\n2:如果4*M大于255，那就分两种情况，第一种是该变长字段的实际存储的字符串占用的字节数小于等于127，就用一个字节来表示真实数据占用的字节长度，若大于了127就用2个字节","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1647440871,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1451391,"avatar":"https://static001.geekbang.org/account/avatar/00/16/25/7f/473d5a77.jpg","nickname":"曾轼麟","note":"","ucode":"D418371AC11270","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":363836,"discussion_content":"堆排序本身就是topN，可以把多余的数据挤出去，很适合limit的场景","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1617288586,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":2287841,"avatar":"https://static001.geekbang.org/account/avatar/00/22/e8/e1/6045b299.jpg","nickname":"LPF","note":"","ucode":"036C552D7251E9","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":328625,"discussion_content":"对a加1不就相当于a++的操作 读取a， a + 1，对a写入a+1，这是三个步骤，是一个原子操作，需要在一个事务中，所以读取的时候就需要加锁了。","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1606197586,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1102771,"avatar":"https://static001.geekbang.org/account/avatar/00/10/d3/b3/4f5550c0.jpg","nickname":"大宝","note":"","ucode":"224458E5D1A35A","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":464,"discussion_content":"请问一下，varchar的长度设置=255，需要几个字节记录长度呢？","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1561602437,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":4,"child_discussions":[{"author":{"id":1179312,"avatar":"https://static001.geekbang.org/account/avatar/00/11/fe/b0/260f41f0.jpg","nickname":"loris","note":"","ucode":"00842745CF4B31","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":1102771,"avatar":"https://static001.geekbang.org/account/avatar/00/10/d3/b3/4f5550c0.jpg","nickname":"大宝","note":"","ucode":"224458E5D1A35A","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":156723,"discussion_content":"1个字节","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1580393767,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":464,"ip_address":""},"score":156723,"extra":""},{"author":{"id":1236620,"avatar":"https://static001.geekbang.org/account/avatar/00/12/de/8c/bd9d1868.jpg","nickname":"。","note":"","ucode":"089148414D59D2","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1102771,"avatar":"https://static001.geekbang.org/account/avatar/00/10/d3/b3/4f5550c0.jpg","nickname":"大宝","note":"","ucode":"224458E5D1A35A","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":290024,"discussion_content":"varchar,255以内 需要额外一个字节，大于255需要额外的2个。高性能MySQL 有提到","likes_number":5,"is_delete":false,"is_hidden":false,"ctime":1594304494,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":464,"ip_address":""},"score":290024,"extra":""},{"author":{"id":1255337,"avatar":"https://static001.geekbang.org/account/avatar/00/13/27/a9/80468562.jpg","nickname":"流沙","note":"","ucode":"64F12F181650B6","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":1102771,"avatar":"https://static001.geekbang.org/account/avatar/00/10/d3/b3/4f5550c0.jpg","nickname":"大宝","note":"","ucode":"224458E5D1A35A","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":392337,"discussion_content":"255是字符，但具体的占用空间字节数是不确定的，比如utf8字符集下，然后记录多少自己记录长度的值也是字节，所以要想占用一个字节长度，需要记录的字符串占用字节数小于等于 127，一个字节是8个比特位，mysql会使用一个比特位记录字段占用一个字节还是两个字节记录长度，所以要控制字符串在 127个字节以内，才能用一个字节记录字段长度","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1630975410,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":464,"ip_address":""},"score":392337,"extra":""}]},{"author":{"id":1204353,"avatar":"https://static001.geekbang.org/account/avatar/00/12/60/81/eaf6d0ac.jpg","nickname":"拉布拉多","note":"","ucode":"637A88D9F29F57","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":350382,"discussion_content":"这个留言赞。有难度","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1613832379,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":2407688,"avatar":"https://static001.geekbang.org/account/avatar/00/24/bd/08/4c0f9d3a.jpg","nickname":"Y-Meta","note":"","ucode":"08A4D621F1F1C0","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":347094,"discussion_content":"学习了","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1612151351,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":3,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":70884,"user_name":"XD","can_delete":false,"product_type":"c1","uid":1079293,"ip_address":"","ucode":"DC9DCFB3841A4E","user_header":"https://static001.geekbang.org/account/avatar/00/10/77/fd/c6619535.jpg","comment_is_top":true,"comment_ctime":1551202074,"is_pvip":false,"replies":[{"id":"26078","content":"<br>不仅对，而且非常好！👍👍<br><br>把两个知识点连起来了。是的：<br>1. rows_examined就是“server层调用引擎取一行的时候”加1；<br>2. 引擎内部自己调用，读取行，不加1；<br><br>再补充一个例子：<br>加索引的时候，也要扫描全表，但如果是inplace DDL（@第13篇），你会看到扫描行数是0，也是因为这些扫描动作都是引擎内部自己调用的。<br><br>","user_name":"作者回复","comment_id":70884,"uid":"1264162","ip_address":"","utype":1,"ctime":1551510023,"user_name_real":"林晓斌"}],"discussion_count":5,"race_medal":0,"score":"9.2233726010467e+18","product_id":100020801,"comment_content":"老师，基于早上知道的sort_buffer是在server层，我重新理解了下rowid排序的过程，<br>1，执行器查看表定义，发现name、city、age字段的长度之和超过max_length_for_sort_data，所以初始化sort_buffer的时候只放入id和name字段。<br>2，执行器调用存储引擎的读数据接口，依次获取满足条件的数据的id和name，存入sort_buffer。<br>3，排序。<br>4，执行器根据limit条件筛选出id，再次调用引擎读数据的接口获取相应的数据，返回客户端。<br>整个过程实际上是被执行器拆成了两次查询，共调用两次存储层的读数据接口，所以总的扫描行数需要相加。（@b-@a=5000）<br><br>但是对于using index condition的场景，执行器只调用了一次查询接口，回表是由存储层来完成的，所以扫描行数只算一次，即只算走索引搜索的过程中扫描的行数。（@b-@a只会是4000）<br><br>不知道这么理解对不对？","like_count":132,"discussions":[{"author":{"id":1285652,"avatar":"","nickname":"mycat","note":"","ucode":"6878BD32D042F2","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":308297,"discussion_content":"结合文章中的sql语句，对于using index condition应该是指扫描了1000行吧？因为有limit 1000这个条件。楼主说的@b-@a是指没有limit语句的情况下，rowid排序和在city、name上建立组合索引的情况下排序语句的扫描行数吧？","likes_number":3,"is_delete":false,"is_hidden":false,"ctime":1600910517,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1809802,"avatar":"https://static001.geekbang.org/account/avatar/00/1b/9d/8a/a2d34896.jpg","nickname":"一元(wx:abley1874)","note":"","ucode":"5E7A33642FC767","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":303047,"discussion_content":"有个疑惑，感觉按照单行长度来判断是否使用rowid排序不准确哎。如果是单行很大，但没有几行，总共占用内存大小小于sort_buffer呢？本质上不应该是符合条件的结果太多，导致的sort_buffer无法完全放下，必须分割为磁盘的临时文件来进行归并排序的问题吗？","likes_number":2,"is_delete":false,"is_hidden":false,"ctime":1599121251,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":1,"child_discussions":[{"author":{"id":1110677,"avatar":"https://static001.geekbang.org/account/avatar/00/10/f2/95/538d0348.jpg","nickname":"wrp000000","note":"","ucode":"4860119F2276FE","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1809802,"avatar":"https://static001.geekbang.org/account/avatar/00/1b/9d/8a/a2d34896.jpg","nickname":"一元(wx:abley1874)","note":"","ucode":"5E7A33642FC767","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":303595,"discussion_content":"（瞎猜测）如层主所说，Server层在开始的时候是不知道究竟有多少符合条件的结果的数量的，只能按照单行的长度判读取name和id如果扫完之后发现只有三四行，再回表查询主键索引，这个时候没有用到磁盘的临时文件，应该增加的只是几次查询主键的开销。另外我认为分割成的临时文件的大小应该是和sort_buffer_size大小相当的吧","likes_number":3,"is_delete":false,"is_hidden":false,"ctime":1599309578,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":303047,"ip_address":""},"score":303595,"extra":""}]},{"author":{"id":1264162,"avatar":"https://static001.geekbang.org/account/avatar/00/13/4a/22/2681d602.jpg","nickname":"林晓斌","note":"","ucode":"CDE42D44F26240","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":440885,"discussion_content":"\n不仅对，而且非常好！👍👍\n\n把两个知识点连起来了。是的：\n1. rows_examined就是“server层调用引擎取一行的时候”加1；\n2. 引擎内部自己调用，读取行，不加1；\n\n再补充一个例子：\n加索引的时候，也要扫描全表，但如果是inplace DDL（@第13篇），你会看到扫描行数是0，也是因为这些扫描动作都是引擎内部自己调用的。\n\n","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1551510023,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1809802,"avatar":"https://static001.geekbang.org/account/avatar/00/1b/9d/8a/a2d34896.jpg","nickname":"一元(wx:abley1874)","note":"","ucode":"5E7A33642FC767","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":303051,"discussion_content":"对于课后习题，我倒是想到了不用排序的方法，按照 （name，city）建立复合索引，由于索引下推的支持，在不回表的情况下也能迅速淘汰不符合条件的叶子节点，但这个时间复杂度上就是 O（n）了，如果该表中的数据量特别大，显然也是不可取的","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1599121794,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":51632,"user_name":"didiren","can_delete":false,"product_type":"c1","uid":1305376,"ip_address":"","ucode":"8341F02F2ABA60","user_header":"https://static001.geekbang.org/account/avatar/00/13/eb/20/a02c4f61.jpg","comment_is_top":true,"comment_ctime":1545211499,"is_pvip":false,"replies":[{"id":"18685","content":"是的。<br><br>这个我也盲点了。<br><br>但是细想MySQL 选择这个策略又是合理的。<br><br>我需要再更新一下专栏内容","user_name":"作者回复","comment_id":51632,"uid":"1264162","ip_address":"","utype":1,"ctime":1545217439,"user_name_real":"林晓斌"}],"discussion_count":7,"race_medal":0,"score":"9.2233722789181993e+18","product_id":100020801,"comment_content":"刚才又测了一下，在binlog-row-image=full的情况下，第二次update是不写redolog的，说明update并没有发生<br>这样我就理解了，当full时，mysql需要读到在更新时读到a值，所以会判断a值不变，不需要更新，与你给出的update t set a=3 where id=1 and a=3原理相同，但binlog-row-image会影响查询结果还是会让人吃一惊","like_count":57,"discussions":[{"author":{"id":1264162,"avatar":"https://static001.geekbang.org/account/avatar/00/13/4a/22/2681d602.jpg","nickname":"林晓斌","note":"","ucode":"CDE42D44F26240","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":433542,"discussion_content":"是的。\n\n这个我也盲点了。\n\n但是细想MySQL 选择这个策略又是合理的。\n\n我需要再更新一下专栏内容","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1545217439,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1149502,"avatar":"https://static001.geekbang.org/account/avatar/00/11/8a/3e/30c05bce.jpg","nickname":"aliang","note":"","ucode":"B36B94B362477F","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":296022,"discussion_content":"你好，我这边用mysql 5.7.22测试，结果和你的不一样，奇怪得很。binlog_format=row，可重复读隔离级别：\n（1）binlog_row_image=full。session A 执行 update t set a=2 where id=1; 发现binlog（show master status）和redo（show engine innodb status）都没写。\n（2）binlog_row_image=full。session A 执行 update t set a=2 where id=1 and a=2; 发现binlog没写，redo写了。\n（3）binlog_row_image=MINIMAL。session A 执行 update t set a=2 where id=1; 发现binlog没写，redo写了。\n（4）binlog_row_image=MINIMAL。session A 执行 update t set a=2 where id=1 and a=2; 发现binlog和redo都没写。","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1596430116,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1346267,"avatar":"https://static001.geekbang.org/account/avatar/00/14/8a/db/76ab84c6.jpg","nickname":"小豹子","note":"","ucode":"972F3E6BF0FDEA","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":36507,"discussion_content":"binlog-row-image=minimal也行，也就是说只要binlog_format=row就行","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1571386244,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1732823,"avatar":"https://static001.geekbang.org/account/avatar/00/1a/70/d7/d1049bae.jpg","nickname":"Geek_3004e0","note":"","ucode":"441D39BDC39E4A","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":55901,"discussion_content":"binlog不是在更新到prepared之后才写binlog吗，为什么提前读binlog判断数据是否一致？更糊涂了","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1574410798,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":2,"child_discussions":[{"author":{"id":1065351,"avatar":"https://static001.geekbang.org/account/avatar/00/10/41/87/d26efb2e.jpg","nickname":"SuperSnow","note":"","ucode":"84C89AA8083E6A","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1732823,"avatar":"https://static001.geekbang.org/account/avatar/00/1a/70/d7/d1049bae.jpg","nickname":"Geek_3004e0","note":"","ucode":"441D39BDC39E4A","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":159026,"discussion_content":"这样就可以少写一次binlog","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1580649139,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":55901,"ip_address":""},"score":159026,"extra":""},{"author":{"id":2843604,"avatar":"https://static001.geekbang.org/account/avatar/00/2b/63/d4/b63373c3.jpg","nickname":"金金","note":"","ucode":"807EDDCDB2E939","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1732823,"avatar":"https://static001.geekbang.org/account/avatar/00/1a/70/d7/d1049bae.jpg","nickname":"Geek_3004e0","note":"","ucode":"441D39BDC39E4A","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":581068,"discussion_content":"不是这个意思，是因为binlog格式是row+full，所以mysql服务层那里需要读出一个元组的所有数据，这个时候还没有写binlog呢，但是可以通过这个数据来判断到底需不需要进行更新操作。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1658482764,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":55901,"ip_address":""},"score":581068,"extra":""}]},{"author":{"id":1210699,"avatar":"https://static001.geekbang.org/account/avatar/00/12/79/4b/740f91ca.jpg","nickname":"-W.LI-","note":"","ucode":"3556786538664F","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":6965,"discussion_content":"为什么大佬们都这么优秀。膜拜","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1567229179,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":52273,"user_name":"null","can_delete":false,"product_type":"c1","uid":1024294,"ip_address":"","ucode":"F9039EFED6B55D","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/PiajxSqBRaELZPnUAiajaR5C25EDLWeJURggyiaOP5GGPe2qlwpQcm5e3ybib8OsP4tvddFDLVRSNNGL5I3SFPJHsA/132","comment_is_top":true,"comment_ctime":1545356740,"is_pvip":false,"replies":[{"id":"18996","content":"最怕的回答“历史原因”、“大家都这么做的所以…”、“别人要求的” 😄","user_name":"作者回复","comment_id":52273,"uid":"1264162","ip_address":"","utype":1,"ctime":1545360101,"user_name_real":"林晓斌"}],"discussion_count":8,"race_medal":0,"score":"9.2233722402636001e+18","product_id":100020801,"comment_content":"re: 问题3:回答得也很好，需要注意的是255这个边界。小于255都需要一个字节记录长度，超过255就需要两个字节<br><br>11 月过数据库设计方案，总监现场抛了一个问题，就是关于 varchar 255 的。现在回看，木有人回答到点上，都说是历史原因。<br>下回再问，就可以分享这一点了。ꉂ ೭(˵¯̴͒ꇴ¯̴͒˵)౨”哇哈哈～","like_count":47,"discussions":[{"author":{"id":1264162,"avatar":"https://static001.geekbang.org/account/avatar/00/13/4a/22/2681d602.jpg","nickname":"林晓斌","note":"","ucode":"CDE42D44F26240","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":433815,"discussion_content":"最怕的回答“历史原因”、“大家都这么做的所以…”、“别人要求的” 😄","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1545360101,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":2080208,"avatar":"https://static001.geekbang.org/account/avatar/00/1f/bd/d0/070824d1.jpg","nickname":"空城。","note":"","ucode":"0F6F110D811C2E","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":305247,"discussion_content":"一个8位字节能表示的最大无符号整数是255","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1599827639,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1221991,"avatar":"https://static001.geekbang.org/account/avatar/00/12/a5/67/bf286335.jpg","nickname":"AllenGFLiu","note":"","ucode":"90FA8A619A2629","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":310934,"discussion_content":"假如建制了一个varchar(255),代表此字段最多能保存255个字符(中英文都只占一个），一个字符是一个byte，那255个字符就是255个byte了？\n老师的意思是只要255以内，那都可以只用一个byte就能存储了？","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1602145836,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":1,"child_discussions":[{"author":{"id":1562105,"avatar":"https://static001.geekbang.org/account/avatar/00/17/d5/f9/39ceecda.jpg","nickname":"风雨一更","note":"","ucode":"A1D71115ECCF9F","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1221991,"avatar":"https://static001.geekbang.org/account/avatar/00/12/a5/67/bf286335.jpg","nickname":"AllenGFLiu","note":"","ucode":"90FA8A619A2629","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":362783,"discussion_content":"1个字节8位，最大值是 255，用来记录 varchar 的长度。如果大于255，1个字节无法存储，因此需要2个字节（16位）\n--复制下面的null的回复","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1617026950,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":310934,"ip_address":""},"score":362783,"extra":""}]},{"author":{"id":1673409,"avatar":"https://static001.geekbang.org/account/avatar/00/19/88/c1/d0136c63.jpg","nickname":"甜公子Timmy","note":"","ucode":"E6E90C518CDAC2","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":249816,"discussion_content":"能否进一步阐述一下，不是很明白这里的问题是什么","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1587964760,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":1,"child_discussions":[{"author":{"id":1024294,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/PiajxSqBRaELZPnUAiajaR5C25EDLWeJURggyiaOP5GGPe2qlwpQcm5e3ybib8OsP4tvddFDLVRSNNGL5I3SFPJHsA/132","nickname":"null","note":"","ucode":"F9039EFED6B55D","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1673409,"avatar":"https://static001.geekbang.org/account/avatar/00/19/88/c1/d0136c63.jpg","nickname":"甜公子Timmy","note":"","ucode":"E6E90C518CDAC2","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":250442,"discussion_content":"1个字节8位，最大值是 255，用来记录 varchar 的长度。如果大于255，1个字节无法存储，因此需要2个字节（16位）","likes_number":8,"is_delete":false,"is_hidden":false,"ctime":1588002199,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":249816,"ip_address":""},"score":250442,"extra":""}]},{"author":{"id":1019332,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/8d/c4/6f97daea.jpg","nickname":"长期规划","note":"","ucode":"5EF65E9115834B","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":53013,"discussion_content":"学习了👍","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1574124020,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":1,"child_discussions":[{"author":{"id":1812970,"avatar":"https://static001.geekbang.org/account/avatar/00/1b/a9/ea/5bfce6c5.jpg","nickname":"mgs2002","note":"","ucode":"F5931108BD509B","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1019332,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/8d/c4/6f97daea.jpg","nickname":"长期规划","note":"","ucode":"5EF65E9115834B","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":282652,"discussion_content":"+1","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1592038067,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":53013,"ip_address":""},"score":282652,"extra":""}]}]},{"had_liked":false,"id":51456,"user_name":"老杨同志","can_delete":false,"product_type":"c1","uid":1246199,"ip_address":"","ucode":"3F334F0CFD3DE6","user_header":"https://static001.geekbang.org/account/avatar/00/13/03/f7/3a493bec.jpg","comment_is_top":false,"comment_ctime":1545185067,"is_pvip":false,"replies":[{"id":"18635","content":"从业务上砍掉功能，这个意识很好👌👍🏿","user_name":"作者回复","comment_id":51456,"uid":"1264162","ip_address":"","utype":1,"ctime":1545193715,"user_name_real":"林晓斌"}],"discussion_count":4,"race_medal":0,"score":"340847601451","product_id":100020801,"comment_content":"1)<br>mysql&gt; select * from t where city in (&#39;杭州&#39;,&quot; 苏州 &quot;) order by name limit 100;<br>需要排序<br>原因是索引顺序城市、名称 与 单独按name排序的顺序不一致。<br><br>2）如果不想mysql排序<br>方案a<br>可以执行两条语句<br>select * from t where city = &#39;杭州&#39;  limit 100;<br>select * from t where city = &#39;苏州&#39;  limit 100;<br>然后把200条记录在java中排序。<br>方案b<br>分别取前100，然后在数据端对200条数据进行排序。可以sort buffer就可以完成排序了。<br>少了一次应用程序与数据库的网络交互<br>select * from (<br>\tselect * from t where city = &#39;杭州&#39;  limit 100<br>\tunion all<br>  select * from t where city = &#39;苏州&#39;  limit 100<br>) as tt order by name limit 100<br><br><br>3）对分页的优化。<br>  没有特别好的办法。如果业务允许不提供排序功能，不提供查询最后一页，只能一页一页的翻，基本上前几页的数据已经满足客户需求。<br>  为了意义不大的功能优化，可能会得不偿失。<br>  如果一定要优化可以 select id from t where city in (&#39;杭州&#39;,&quot; 苏州 &quot;) order by name limit 10000,100<br>  因为有city\\name索引，上面的语句走覆盖索引就可以完成，不用回表。<br>  最后使用 select * from t where id in (); 取得结果<br>  对于这个优化方法，我不好确定的是临界点，前几页直接查询就可以，最后几页使用这个优化方法。<br>  但是中间的页码应该怎么选择不太清楚<br>  ","like_count":80,"discussions":[{"author":{"id":1264162,"avatar":"https://static001.geekbang.org/account/avatar/00/13/4a/22/2681d602.jpg","nickname":"林晓斌","note":"","ucode":"CDE42D44F26240","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":433461,"discussion_content":"从业务上砍掉功能，这个意识很好👌👍🏿","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1545193715,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":2086624,"avatar":"https://static001.geekbang.org/account/avatar/00/1f/d6/e0/3ccaaa7b.jpg","nickname":"领子","note":"","ucode":"64AC4E6AB74E68","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":294586,"discussion_content":"对于2）\n1 、因为要分页，这种写法，在翻页的过程中就会丢失数据，不能一味的避免排序\n2、 如果city字段基数高，可以舍弃避免排序，直接以city做为索引前端列，这样需要回表按name排序就少\n3、 如果city基数低，那么就只能舍弃这个in查询，或者设计为必须加一个基数高的条件字段，以满足上面的2,降低回表排序数量\n4、可以建一个宽索引(全字段)，这样可以避免排序的时候回表，提高性能","likes_number":3,"is_delete":false,"is_hidden":false,"ctime":1595933455,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1139384,"avatar":"https://static001.geekbang.org/account/avatar/00/11/62/b8/bb9657c6.jpg","nickname":"Promise°","note":"","ucode":"0BFDBDAD852D6D","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":68161,"discussion_content":"对于您说的第三条 如果业务方一条条去翻页查看的话 可以考虑前台把当前页的最大id传过来 sql上就可以加上 where id》9999 减少数据搜索的范围","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1575204733,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":1,"child_discussions":[{"author":{"id":1106464,"avatar":"https://static001.geekbang.org/account/avatar/00/10/e2/20/1b5e8104.jpg","nickname":"String name=null;","note":"","ucode":"B9FE31B598C386","race_medal":4,"user_type":1,"is_pvip":false},"reply_author":{"id":1139384,"avatar":"https://static001.geekbang.org/account/avatar/00/11/62/b8/bb9657c6.jpg","nickname":"Promise°","note":"","ucode":"0BFDBDAD852D6D","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":209980,"discussion_content":"但是是按照name排序的，通过返回上一页最大id进行游标分页是错误的","likes_number":9,"is_delete":false,"is_hidden":false,"ctime":1584697007,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":68161,"ip_address":""},"score":209980,"extra":""}]}]},{"had_liked":false,"id":51547,"user_name":"波波","can_delete":false,"product_type":"c1","uid":1308565,"ip_address":"","ucode":"9C908575D0A8B5","user_header":"https://static001.geekbang.org/account/avatar/00/13/f7/95/3ebafd36.jpg","comment_is_top":false,"comment_ctime":1545197611,"is_pvip":false,"replies":[{"id":"19037","content":"👍🏿","user_name":"作者回复","comment_id":51547,"uid":"1264162","ip_address":"","utype":1,"ctime":1545372688,"user_name_real":"林晓斌"}],"discussion_count":1,"race_medal":0,"score":"293602973739","product_id":100020801,"comment_content":"笔记:<br>1.MySQL会为每个线程分配一个内存（sort_buffer）用于排序该内存大小为sort_buffer_size<br>  1&gt;如果排序的数据量小于sort_buffer_size，排序将会在内存中完成<br>  2&gt;如果排序数据量很大，内存中无法存下这么多数据，则会使用磁盘临时文件来辅助排序，也称外部排序<br>  3&gt;在使用外部排序时，MySQL会分成好几份单独的临时文件用来存放排序后的数据，然后在将这些文件合并成一个大文件<br><br><br>2.mysql会通过遍历索引将满足条件的数据读取到sort_buffer，并且按照排序字段进行快速排序<br>\t1&gt;如果查询的字段不包含在辅助索引中，需要按照辅助索引记录的主键返回聚集索引取出所需字段<br>  \t2&gt;该方式会造成随机IO，在MySQL5.6提供了MRR的机制，会将辅助索引匹配记录的主键取出来在内存中进行排序，然后在回表<br> \t3&gt;按照情况建立联合索引来避免排序所带来的性能损耗，允许的情况下也可以建立覆盖索引来避免回表<br><br>全字段排序<br>1.通过索引将所需的字段全部读取到sort_buffer中<br>2.按照排序字段进行排序<br>3.将结果集返回给客户端<br><br><br>缺点：<br>1.造成sort_buffer中存放不下很多数据，因为除了排序字段还存放其他字段，对sort_buffer的利用效率不高<br>2.当所需排序数据量很大时，会有很多的临时文件，排序性能也会很差<br><br>优点：MySQL认为内存足够大时会优先选择全字段排序，因为这种方式比rowid 排序避免了一次回表操作<br><br><br>rowid排序<br>1.通过控制排序的行数据的长度来让sort_buffer中尽可能多的存放数据，max_length_for_sort_data<br>2.只将需要排序的字段和主键读取到sort_buffer中，并按照排序字段进行排序<br>3.按照排序后的顺序，取id进行回表取出想要获取的数据<br>4.将结果集返回给客户端<br><br>优点：更好的利用内存的sort_buffer进行排序操作，尽量减少对磁盘的访问<br><br>缺点：回表的操作是随机IO，会造成大量的随机读，不一定就比全字段排序减少对磁盘的访问<br><br><br>3.按照排序的结果返回客户所取行数","like_count":69,"discussions":[{"author":{"id":1264162,"avatar":"https://static001.geekbang.org/account/avatar/00/13/4a/22/2681d602.jpg","nickname":"林晓斌","note":"","ucode":"CDE42D44F26240","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":433508,"discussion_content":"👍🏿","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1545372688,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":65153,"user_name":"看不到de颜色","can_delete":false,"product_type":"c1","uid":1162714,"ip_address":"","ucode":"88348CCAE81931","user_header":"https://static001.geekbang.org/account/avatar/00/11/bd/da/3d76ea74.jpg","comment_is_top":false,"comment_ctime":1549078723,"is_pvip":false,"replies":[{"id":"23101","content":"你是说图14这里对吧， <br>这里update语句自己是当前读，但是它没有更新数据；<br>所以之后的查询还是看不到(1,3)这个版本。<br><br>好问题👍<br>","user_name":"作者回复","comment_id":65153,"uid":"1264162","ip_address":"","utype":1,"ctime":1549102125,"user_name_real":"林晓斌"}],"discussion_count":8,"race_medal":0,"score":"147577966787","product_id":100020801,"comment_content":"关于上期问题里的最后一个例子不太明白，还请老师指点一下。按说在更新操作的时候应该是当前读，那么应该能读到id=1 and a = 3的记录并修改。那么为什么再select还会查到a = 2。难道是即便update但是where条件也是快照读？但是如果这样那么幻读的问题不就不会存在了吗？（B insert了一条记录，此时A范围update后再select会把B insert的语句查出来）","like_count":34,"discussions":[{"author":{"id":1264162,"avatar":"https://static001.geekbang.org/account/avatar/00/13/4a/22/2681d602.jpg","nickname":"林晓斌","note":"","ucode":"CDE42D44F26240","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":438336,"discussion_content":"你是说图14这里对吧， \n这里update语句自己是当前读，但是它没有更新数据；\n所以之后的查询还是看不到(1,3)这个版本。\n\n好问题👍\n","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1549102125,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1336951,"avatar":"https://static001.geekbang.org/account/avatar/00/14/66/77/194ba21d.jpg","nickname":"lzh","note":"","ucode":"C3D83DF4230109","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":5651,"discussion_content":"问题就是出在UPDATE语句本身，图14的UPDATE，WHERE里面有a和SET的a相同，UPDATE执行时发现了这点，于是直接返回，故没有新增任何修改记录（由SHOW ENGINE INNODB STATUS的LSN可以证明当WHERE和SET相同时，UPDATE不会执行）","likes_number":16,"is_delete":false,"is_hidden":false,"ctime":1566402069,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":1,"child_discussions":[{"author":{"id":2403312,"avatar":"https://static001.geekbang.org/account/avatar/00/24/ab/f0/12b18bba.jpg","nickname":"Vincent段","note":"","ucode":"36A764BAEF53A4","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1336951,"avatar":"https://static001.geekbang.org/account/avatar/00/14/66/77/194ba21d.jpg","nickname":"lzh","note":"","ucode":"C3D83DF4230109","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":562780,"discussion_content":"mark","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1649896188,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":5651,"ip_address":""},"score":562780,"extra":""}]},{"author":{"id":2876580,"avatar":"","nickname":"dxd_gk","note":"","ucode":"348705A4C631F0","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":552613,"discussion_content":"是不是这么 理解的，update当前读，读到了id=1 and a = 3的数据，判断了下就没有设置a = 3的操作了所以最后的select 查询到的是 （1,2）","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1645525031,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":2771089,"avatar":"","nickname":"Geek_126edf","note":"","ucode":"D5C8819DF40803","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":394761,"discussion_content":"终于明白了，老师设置这个例子是为了和图13的情况形成对比，MySQL不是不判断，而是必须是确定的情况了，才不执行重复的更新，正是因为当前读，让他确定不用重复执行update语句","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1632037586,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1028768,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/b2/a0/15f40838.jpg","nickname":"angelfish","note":"","ucode":"922D6025BD3640","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":391341,"discussion_content":"原来是这样","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1630407464,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1210519,"avatar":"https://static001.geekbang.org/account/avatar/00/12/78/97/fa101174.jpg","nickname":"年轻人","note":"","ucode":"CDD4612BAE3247","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":282931,"discussion_content":"是因为仅通过SQL语句就能让分析器还是优化器判断出来，当前的更新操作是不需要更新的。因为条件就是 a=3，结果更新操作还是 set a=3，就不执行了。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1592122309,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":1,"child_discussions":[{"author":{"id":1135537,"avatar":"https://static001.geekbang.org/account/avatar/00/11/53/b1/3d6075cc.jpg","nickname":"王建","note":"","ucode":"2289B282E18826","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1210519,"avatar":"https://static001.geekbang.org/account/avatar/00/12/78/97/fa101174.jpg","nickname":"年轻人","note":"","ucode":"CDD4612BAE3247","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":296399,"discussion_content":"是InnoDB引擎判断的吧，虽然没有更新但是已经加锁了。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1596532567,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":282931,"ip_address":""},"score":296399,"extra":""}]}]},{"had_liked":false,"id":69224,"user_name":"胡楚坚","can_delete":false,"product_type":"c1","uid":1120212,"ip_address":"","ucode":"225883EDF35BED","user_header":"https://static001.geekbang.org/account/avatar/00/11/17/d4/d7a4e6f5.jpg","comment_is_top":false,"comment_ctime":1550679442,"is_pvip":false,"replies":[{"id":"24587","content":"1. 需要的字段的定义大小的和<br>2. 好问题。首先取决于使用的算法。<br>  a) 如果是全字段排序就是select字段+where字段+order by字段,<br>  b) 如果是row_id排序，就是order by字段+row_id","user_name":"作者回复","comment_id":69224,"uid":"1264162","ip_address":"","utype":1,"ctime":1550711424,"user_name_real":"林晓斌"}],"discussion_count":9,"race_medal":0,"score":"126104731026","product_id":100020801,"comment_content":"不好意思，上个留言没打完。<br>问题一，在跟max_length_for_sort_data坐比较时，mysql是怎么判断一行数据的大小的？是直接根据表定义字段的大小吗？<br><br>问题二，另外这‘一行’的含义是整行数据，还是单单最终引擎层需要返回的字段(即select字段+where字段+order by字段)？<br><br>麻烦老师有空解答下，谢谢哈","like_count":29,"discussions":[{"author":{"id":1264162,"avatar":"https://static001.geekbang.org/account/avatar/00/13/4a/22/2681d602.jpg","nickname":"林晓斌","note":"","ucode":"CDE42D44F26240","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":440010,"discussion_content":"1. 需要的字段的定义大小的和\n2. 好问题。首先取决于使用的算法。\n  a) 如果是全字段排序就是select字段+where字段+order by字段,\n  b) 如果是row_id排序，就是order by字段+row_id","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1550711424,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":2031689,"avatar":"","nickname":"不凡","note":"","ucode":"28A3EC4C309C56","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":393491,"discussion_content":"city,name,age 三个字段定义长度加起来不是47吗？36是怎么算出来的","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1631454347,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":1,"child_discussions":[{"author":{"id":1302556,"avatar":"https://static001.geekbang.org/account/avatar/00/13/e0/1c/aa50dc27.jpg","nickname":"icyricky","note":"","ucode":"D63C285165309D","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":2031689,"avatar":"","nickname":"不凡","note":"","ucode":"28A3EC4C309C56","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":406994,"discussion_content":"16+16+4=36，int是4字节","likes_number":2,"is_delete":false,"is_hidden":false,"ctime":1634886002,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":393491,"ip_address":""},"score":406994,"extra":""}]},{"author":{"id":1649662,"avatar":"https://static001.geekbang.org/account/avatar/00/19/2b/fe/7925eb7e.jpg","nickname":"pdf","note":"","ucode":"A44250955878BB","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":306711,"discussion_content":"+1 为什么包含where字段","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1600352374,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":4,"child_discussions":[{"author":{"id":1285652,"avatar":"","nickname":"mycat","note":"","ucode":"6878BD32D042F2","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1649662,"avatar":"https://static001.geekbang.org/account/avatar/00/19/2b/fe/7925eb7e.jpg","nickname":"pdf","note":"","ucode":"A44250955878BB","race_medal":0,"user_type":1,"is_pvip":true},"discussion":{"id":308010,"discussion_content":"因为数据需要过滤，不查询出来这个where字段，你怎么知道某一行的数据是否符合条件","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1600825788,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":306711,"ip_address":""},"score":308010,"extra":""},{"author":{"id":1185259,"avatar":"https://static001.geekbang.org/account/avatar/00/12/15/eb/a2955dd6.jpg","nickname":"5%","note":"","ucode":"66E71A77A00923","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":1285652,"avatar":"","nickname":"mycat","note":"","ucode":"6878BD32D042F2","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":318666,"discussion_content":"难道判断数据是否在whete条件内还要拿出来再判断？","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1603801959,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":308010,"ip_address":""},"score":318666,"extra":""},{"author":{"id":1124692,"avatar":"https://static001.geekbang.org/account/avatar/00/11/29/54/b9fec917.jpg","nickname":"菜鸟一枚","note":"","ucode":"34052769B97FEC","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1185259,"avatar":"https://static001.geekbang.org/account/avatar/00/12/15/eb/a2955dd6.jpg","nickname":"5%","note":"","ucode":"66E71A77A00923","race_medal":0,"user_type":1,"is_pvip":true},"discussion":{"id":343116,"discussion_content":"应该是where的非索引字段。比age什么的。另外，引擎是不会判断条件的（非二级索引字段，二级字段会有索引下推）。引擎把数据返回，server层判断要不要该数据，引擎只负责拿","likes_number":2,"is_delete":false,"is_hidden":false,"ctime":1610953796,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":318666,"ip_address":""},"score":343116,"extra":""}]},{"author":{"id":2052088,"avatar":"","nickname":"dyh_zero","note":"","ucode":"98029D72597EF2","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":306564,"discussion_content":"为什么包含where 字段","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1600318288,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":52098,"user_name":"发条橙子 。","can_delete":false,"product_type":"c1","uid":1259218,"ip_address":"","ucode":"ED076F4534FFED","user_header":"https://static001.geekbang.org/account/avatar/00/13/36/d2/c7357723.jpg","comment_is_top":false,"comment_ctime":1545309900,"is_pvip":false,"replies":[{"id":"18914","content":"嗯 where和 order都会共同影响哦，今天这篇你要再看看最后加了联合索引以后，语句的执行逻辑<br><br><br>Analyze table 立功啦😄","user_name":"作者回复","comment_id":52098,"uid":"1264162","ip_address":"","utype":1,"ctime":1545315291,"user_name_real":"林晓斌"}],"discussion_count":3,"race_medal":0,"score":"113214459596","product_id":100020801,"comment_content":"老师 ， 接前面 create_time的回答 。 语句确实是 select * from t order by create_time desc ;<br><br>老师是指 优化器会根据 order by create_time 来选择使用 create_time 索引么 <br><br>我之前误以为优化器是根据 where 后面的字段条件来选择索引 ，所以上面那条语句没有where 的时候我就想当然地以为不会走索引 。 看来是自己跳进了一个大坑里面 😅<br><br>另 ： 我之前在本地建了张表加了20w数据 ，用explain 查了一次 ，发现走的是全表没有走索引， 老师说会走索引。我想了一下， 可能是统计的数据有误的缘故，用 analyze table重新统计 ，再次查询果然走了索引  。😁","like_count":25,"discussions":[{"author":{"id":1264162,"avatar":"https://static001.geekbang.org/account/avatar/00/13/4a/22/2681d602.jpg","nickname":"林晓斌","note":"","ucode":"CDE42D44F26240","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":433739,"discussion_content":"嗯 where和 order都会共同影响哦，今天这篇你要再看看最后加了联合索引以后，语句的执行逻辑\n\n\nAnalyze table 立功啦😄","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1545315291,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1134266,"avatar":"https://static001.geekbang.org/account/avatar/00/11/4e/ba/580ec429.jpg","nickname":"小兔子乖乖","note":"","ucode":"E5CC0258CF8858","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":385851,"discussion_content":"select * from t order by create_time desc ; 我测试的结果是不走索引呢","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1627300319,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1065351,"avatar":"https://static001.geekbang.org/account/avatar/00/10/41/87/d26efb2e.jpg","nickname":"SuperSnow","note":"","ucode":"84C89AA8083E6A","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":159068,"discussion_content":"共同影响的流程是什么样的？","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1580651549,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":52926,"user_name":"WL","can_delete":false,"product_type":"c1","uid":1173771,"ip_address":"","ucode":"6277DCD776B87E","user_header":"https://static001.geekbang.org/account/avatar/00/11/e9/0b/1171ac71.jpg","comment_is_top":false,"comment_ctime":1545552511,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"87444898431","product_id":100020801,"comment_content":"把该讲内容总结为几个问题, 大家复习的时候可以先尝试回答这些问题检查自己的掌握程度:<br>\t1. <br>全字段排序的流程是怎么样的?<br>\t2. <br>sort_buffer_size, number_of_tmp_files, packed_additional_fields 这几个参数各是什么含义? <br>\t3. <br>rowid排序的流程是怎么样的?<br>\t4. <br>通过什么方式可以减少排序对于系统的消耗? <br><br>","like_count":21},{"had_liked":false,"id":51620,"user_name":"didiren","can_delete":false,"product_type":"c1","uid":1305376,"ip_address":"","ucode":"8341F02F2ABA60","user_header":"https://static001.geekbang.org/account/avatar/00/13/eb/20/a02c4f61.jpg","comment_is_top":false,"comment_ctime":1545210105,"is_pvip":false,"replies":[{"id":"18684","content":"！！！<br><br>你说的对<br><br>我验证的是statement格式。<br><br>MySQL 看来选了不错吧路径。<br><br>这个我之前真不知道😓<br><br>多谢<br><br><br>","user_name":"作者回复","comment_id":51620,"uid":"1264162","ip_address":"","utype":1,"ctime":1545217369,"user_name_real":"林晓斌"}],"discussion_count":1,"race_medal":0,"score":"87444556025","product_id":100020801,"comment_content":"感谢！针对我之前提出的疑问，我又详细的做了实验，发现一个新的问题，我感觉是个bug，希望解答<br># SessionA<br>mysql&gt; show variables like &#39;%binlog_row_image%&#39;;<br>| Variable_name    | Value |<br>| binlog_row_image | FULL  |<br>mysql&gt; create table t (id int not null primary key auto_increment,<br>    -&gt; a int default null)<br>    -&gt; engine=innodb;<br>mysql&gt; insert into t values(1,2);<br>mysql&gt; set tx_isolation = &#39;repeatable-read&#39;;<br>mysql&gt; begin;<br>mysql&gt; select * from t where id = 1;<br>| id | a    |<br>|  1 |    2 |<br>此时在另一个SessionB执行update t set a=3 where id = 1;成功更新一条记录。通过show engine innodb status看，Log sequence number 2573458<br>然后在SessionA继续。。<br>mysql&gt; update t set a=3 where id = 1;<br>Rows matched: 1  Changed: 0  Warnings: 0<br>Log sequence number 2573467<br>mysql&gt; select * from t where id = 1;<br>| id | a    |<br>|  1 |    2 |<br><br>这里与你给出的答案里的实验结果不同<br>可以看到redolog是记录了第二次的update的，但是select却没有看到更新后的值，于是我又换了一个平时测试用的实例，同样的步骤却得到了与你的答案相同的结果<br>然后我对比了2个实例的参数，发现当binlog-row-image=minimal时第二次查询结果a=3，当binlog-row-image=full时第二次查询结果a=2，而且不论哪个参数，redolog都会因为SessionA的update增长，说明redolog都做了记录，update是发生了的，但是binlog-row-image参数会影响查询结果，难以理解，我用的mysql版本是官方的5.7.13<br><br>下面是binlog-row-image = minimal的实验结果<br>mysql&gt; set  binlog_row_image=MINIMAL;<br>mysql&gt; drop table t;<br>mysql&gt; create table t (id int not null primary key auto_increment,<br>    -&gt; a int default null)<br>    -&gt; engine=innodb;<br>insert into t values(1,2);<br>mysql&gt; insert into t values(1,2);<br>mysql&gt; set tx_isolation = &#39;repeatable-read&#39;;<br>mysql&gt; begin;<br>mysql&gt; select * from t where id = 1;<br>| id | a    |<br>|  1 |    2 |<br>此时在另一个SessionB执行update t set a=3 where id = 1;成功更新一条记录。<br>mysql&gt; update t set a=3 where id = 1;<br>Rows matched: 1  Changed: 0  Warnings: 0<br>mysql&gt; select * from t where id = 1; <br>| id | a    |<br>|  1 |    3 |","like_count":20,"discussions":[{"author":{"id":1264162,"avatar":"https://static001.geekbang.org/account/avatar/00/13/4a/22/2681d602.jpg","nickname":"林晓斌","note":"","ucode":"CDE42D44F26240","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":433537,"discussion_content":"！！！\n\n你说的对\n\n我验证的是statement格式。\n\nMySQL 看来选了不错吧路径。\n\n这个我之前真不知道😓\n\n多谢\n\n\n","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1545217369,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":110112,"user_name":"钱","can_delete":false,"product_type":"c1","uid":1009652,"ip_address":"","ucode":"2C92A243A463D4","user_header":"https://static001.geekbang.org/account/avatar/00/0f/67/f4/9a1feb59.jpg","comment_is_top":false,"comment_ctime":1562197898,"is_pvip":false,"discussion_count":3,"race_medal":0,"score":"48806838154","product_id":100020801,"comment_content":"  课前思考<br><br>1：如果排序的字段有索引，怎么排？<br><br>由于B+树是天然有序的，所以直接取出的数据也是天然有序的，因此依次取数就行不用再排序了。若取出的字段是覆盖索引，则连回表的动作也不必做啦！<br><br>2：如果排序的字段没索引，怎么排？<br><br>非索引字段，取出来的时候是按索引的顺序取出的，针对非索引字段无序，需要在内存中通过排序算法来排序。<br><br>3：如果数据大到内存放不下，怎么排？<br><br>取出的数据无序且体量较大，只能先放到磁盘，然后用外排序的方法排序。<br><br>4：如果排序的字段有多个，怎么排？<br><br>有多个还是一个其实思路没啥变化，如果原本就有序，则直接取出，否则只能进行排序，体量小在内存中排序，体量大则必须借助磁盘排序。<br><br>课后思考<br><br>牛逼的系统对于性能的优化都有着不懈的追求，数据库更是如此。<br><br>性能优化的原则是恒定的，就看各家怎么发挥啦！<br><br>1：就排序而言，如果数据天然有序，则不用排序，如果是覆盖索引，则不用回表，那么这种情况性能应该是最佳的。<br><br>2：对于计算机而言，内存比硬盘快多了，能在内存办的事要尽量在内存办。索引当MySQL认为查询的字段长度过大时会进行一定的优化，会只查出主键id和排序的字段，排序字段用于排序，主键id用于回表查询其他的字段，这样速度可能会快一些。<br><br>疑问？<br><br>1：sort_buffer是MySQL按线程的维度分配的专门用于排序的内存空间，且通过sort_buffer_size可以调整其大小，那么走一下极端情况，若sort_buffer_size=0，是否所有的排序都无法进行啦?若sort_buffer_size=+∞，是否只能有一个线程在同一时刻能排序?另外，sort_buffer设置后是对所有线程都一样限制嘛？其实际分配会根据实际数据量变化呢？还是固定不变?比如：MySQL分配给可用于划分sort_buffer的内存有10m，我设置为10m意味着一个5m的排序会占5m另外5m空着，还是可以跑两个5m的排序？<br><br>2：外部排序归并排序，具体怎么排序的？<br><br>1m的内存排序2m的数据，每次只能在内存中排序1m的数据，想着想着想明白了，这应该是个通用的方法，只有内存小于数据量都可以这么玩。<br><br>3：排序的内存在某线程排完序就释放了，临时文件的回收也是一样的吧？如果数据量大，磁盘不够排序也无法进行的，空间够不够这个判断时机是啥时候？<br><br>4：引擎返回数据结果是一条一条，Server返回给客户端也是一条一条嘛？文中图“结果集”是在哪里组合的，Server层？还是客户端？如果是Server层也会存在空间不够的可能吧？此时是先放入磁盘，等数据到齐，再一起发送给客户端吗？<br><br>非常感谢老师，提高了，我的认知！<br><br><br><br>","like_count":11,"discussions":[{"author":{"id":1285652,"avatar":"","nickname":"mycat","note":"","ucode":"6878BD32D042F2","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":308316,"discussion_content":"sort_buffer_size最小值为：32768，32KB，不能设置为0，默认值为262144，256KB。","likes_number":2,"is_delete":false,"is_hidden":false,"ctime":1600913893,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1285652,"avatar":"","nickname":"mycat","note":"","ucode":"6878BD32D042F2","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":308156,"discussion_content":"你的疑问1，我也有这个疑问。\n\n你的疑问2，当sort_buffer_size不够的时候，是不是就彻底不用sort_buffer_size了，直接全部在临时文件排？还是有一些数据在sort buffer里，一些在临时文件中？","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1600857367,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":1,"child_discussions":[{"author":{"id":2326134,"avatar":"https://static001.geekbang.org/account/avatar/00/23/7e/76/368394bf.jpg","nickname":"哦","note":"","ucode":"C776659DED9D79","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1285652,"avatar":"","nickname":"mycat","note":"","ucode":"6878BD32D042F2","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":337089,"discussion_content":"外部排序也是需要将数据读到内存中来排序的，所以应该是使用sort buffer的","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1608794314,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":308156,"ip_address":""},"score":337089,"extra":""}]}]},{"had_liked":false,"id":62186,"user_name":"coderbee","can_delete":false,"product_type":"c1","uid":1005530,"ip_address":"","ucode":"02339998217473","user_header":"https://static001.geekbang.org/account/avatar/00/0f/57/da/0adccef5.jpg","comment_is_top":false,"comment_ctime":1547973109,"is_pvip":false,"replies":[{"id":"22095","content":"Using where 确实是一个有时候让人误解的Extra信息，我后面看看找个文章展开说明哈<br>简单说就是，Using where包含了一个“值比较”的过程。<br><br>好问题","user_name":"作者回复","comment_id":62186,"uid":"1264162","ip_address":"","utype":1,"ctime":1548078382,"user_name_real":"林晓斌"}],"discussion_count":1,"race_medal":0,"score":"35907711477","product_id":100020801,"comment_content":"请教下林老师：<br>以文章中的 t 表，索引 city(city) 其实等价于 city(city, id) ，第2条语句加了 order by id，Extra 列多了 Using where ，为啥还要这个？？两个都是用到了覆盖索引。<br><br>mysql&gt; explain select id from t where city = &#39;city102&#39; limit 1, 10;<br>+----+-------------+-------+------------+------+---------------+------+---------+-------+------+----------+-------------+<br>| id | select_type | table | partitions | type | possible_keys | key  | key_len | ref   | rows | filtered | Extra       |<br>+----+-------------+-------+------------+------+---------------+------+---------+-------+------+----------+-------------+<br>|  1 | SIMPLE      | t     | NULL       | ref  | city          | city | 66      | const |    2 |   100.00 | Using index |<br>+----+-------------+-------+------------+------+---------------+------+---------+-------+------+----------+-------------+<br>1 row in set, 1 warning (0.00 sec)<br><br>mysql&gt; explain select id from t where city = &#39;city102&#39; order by id limit 1, 10;<br>+----+-------------+-------+------------+------+---------------+------+---------+-------+------+----------+--------------------------+<br>| id | select_type | table | partitions | type | possible_keys | key  | key_len | ref   | rows | filtered | Extra                    |<br>+----+-------------+-------+------------+------+---------------+------+---------+-------+------+----------+--------------------------+<br>|  1 | SIMPLE      | t     | NULL       | ref  | city          | city | 66      | const |    2 |   100.00 | Using where; Using index |<br>+----+-------------+-------+------------+------+---------------+------+---------+-------+------+----------+--------------------------+<br>1 row in set, 1 warning (0.00 sec)<br><br>","like_count":8,"discussions":[{"author":{"id":1264162,"avatar":"https://static001.geekbang.org/account/avatar/00/13/4a/22/2681d602.jpg","nickname":"林晓斌","note":"","ucode":"CDE42D44F26240","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":437128,"discussion_content":"Using where 确实是一个有时候让人误解的Extra信息，我后面看看找个文章展开说明哈\n简单说就是，Using where包含了一个“值比较”的过程。\n\n好问题","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1548078382,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":51510,"user_name":"cyberbit","can_delete":false,"product_type":"c1","uid":1303197,"ip_address":"","ucode":"1BD53A25F5277F","user_header":"https://static001.geekbang.org/account/avatar/00/13/e2/9d/fbbd4611.jpg","comment_is_top":false,"comment_ctime":1545191652,"is_pvip":false,"discussion_count":1,"race_medal":0,"score":"35904930020","product_id":100020801,"comment_content":"<br>1.不会有排序，这种情况属于《高性能mysql》里提到的“in技法”，符合索引的最左原则，是2个等值查询，可以用到右边的索引列。<br>2.分页查询，可以用延迟关联来优化：<br>select * from t join <br>(select id from t where city in(&#39;杭州&#39;,&#39;苏州&#39;) order by name limit 10000,100) t_id<br>on t.id=t_id.id;<br><br>","like_count":8,"discussions":[{"author":{"id":2086624,"avatar":"https://static001.geekbang.org/account/avatar/00/1f/d6/e0/3ccaaa7b.jpg","nickname":"领子","note":"","ucode":"64AC4E6AB74E68","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":294580,"discussion_content":"最外层少写了排序","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1595931261,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":65514,"user_name":"看不到de颜色","can_delete":false,"product_type":"c1","uid":1162714,"ip_address":"","ucode":"88348CCAE81931","user_header":"https://static001.geekbang.org/account/avatar/00/11/bd/da/3d76ea74.jpg","comment_is_top":false,"comment_ctime":1549424001,"is_pvip":false,"replies":[{"id":"23216","content":"新年快乐<br><br>1. 不影响<br>2. 再小也用rowid ，对，会转成磁盘排序","user_name":"作者回复","comment_id":65514,"uid":"1264162","ip_address":"","utype":1,"ctime":1549443651,"user_name_real":"林晓斌"}],"discussion_count":2,"race_medal":0,"score":"31614195073","product_id":100020801,"comment_content":"图14那个疑问明白了，是因为where条件中存在update的值InnoDB认为值一致所以没有修改，从而导致A的一致性视图中看不到B的修改。<br>这篇又看了一遍，还有个疑问，想请老师解答一下。<br>1.asc和desc会影响使用索引排序吗？<br>2.如果采用rowid也无法放入排序字段还是会转用磁盘排序吧。","like_count":7,"discussions":[{"author":{"id":1264162,"avatar":"https://static001.geekbang.org/account/avatar/00/13/4a/22/2681d602.jpg","nickname":"林晓斌","note":"","ucode":"CDE42D44F26240","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":438483,"discussion_content":"新年快乐\n\n1. 不影响\n2. 再小也用rowid ，对，会转成磁盘排序","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1549443651,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1285652,"avatar":"","nickname":"mycat","note":"","ucode":"6878BD32D042F2","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":308317,"discussion_content":"sort_buffer_size最小值为：32768，32KB，不能设置为0，默认值为262144，256KB。所以，一般情况下都会容下rowid+其他排序字段的。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1600913939,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":51956,"user_name":"发条橙子 。","can_delete":false,"product_type":"c1","uid":1259218,"ip_address":"","ucode":"ED076F4534FFED","user_header":"https://static001.geekbang.org/account/avatar/00/13/36/d2/c7357723.jpg","comment_is_top":false,"comment_ctime":1545281613,"is_pvip":false,"replies":[{"id":"18825","content":"你说的这样场景，加上create_time索引的话，是可以加速的呀，<br>语句是这样吗？select * from t order by create_time desk limit 100? 如果是这样，创建索引有用的。<br><br>问题二后面会有文章会说哈<br>问题三  嗯，这个也会安排文章说到","user_name":"作者回复","comment_id":51956,"uid":"1264162","ip_address":"","utype":1,"ctime":1545293659,"user_name_real":"林晓斌"}],"discussion_count":2,"race_medal":0,"score":"31610052685","product_id":100020801,"comment_content":"<br>正好有个 order by 使用场景 ， 有个页面，需要按数据插入时间倒序来查看一张记录表的信息 ，因为除了分页的参数 ， 没有其他 where 的条件 ，所以除了主键外没有其他索引 。 <br><br>这时候 DBA 让我给 create_time 创建索引， 说是按照顺序排列 ，查询会增快 。这篇文章看完后 ， 让我感觉实际上创建 create_time 索引是没用的 。 <br><br>因为查询本身并没有用到 create_time 索引 ，实际上查询的步骤是 ：<br><br>1. 初始化 sort_buffer 内存<br><br>2. 因为没索引 ， 所以扫出全表的数据到 sort_buffer 中<br><br>2. 如果内存够则直接内存按时间排序 <br><br>3. 如果内存不够则按数据量分成不同文件分别按时间排序后整合<br><br>4. 根据数量分页查询数量 回聚集索引中用 ID 查询数据<br><br>5. 返回<br><br>所以我分析create_time索引应该不需要创建。反而增加了维护成本<br><br><br>问题一 ：这种无条件查列表页除了全表扫还有其他建立索引的办法么<br><br>问题二 : 如果加入 group by ， 数据该如何走<br><br>问题三 ：老师之后的文章会有讲解 bigInt(20)  、 tinyint(2) 、varchar(32) 这种后面带数字与不带数字有何区别的文章么 。 每次建字段都会考虑长度 ，但实际却不知道他有何作用 <br><br><br>","like_count":8,"discussions":[{"author":{"id":1304762,"avatar":"https://static001.geekbang.org/account/avatar/00/13/e8/ba/a6976395.jpg","nickname":"Stev","note":"","ucode":"AC16C3BF6D0E66","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":276183,"discussion_content":"如果排序字段有索引,那么它的主键ID本身就是有序的,就会直接按索引的主键ID去原表取数,然后直接返回到客户端,避免了排序,是可以加速的.","likes_number":3,"is_delete":false,"is_hidden":false,"ctime":1590836636,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1264162,"avatar":"https://static001.geekbang.org/account/avatar/00/13/4a/22/2681d602.jpg","nickname":"林晓斌","note":"","ucode":"CDE42D44F26240","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":433679,"discussion_content":"你说的这样场景，加上create_time索引的话，是可以加速的呀，\n语句是这样吗？select * from t order by create_time desk limit 100? 如果是这样，创建索引有用的。\n\n问题二后面会有文章会说哈\n问题三  嗯，这个也会安排文章说到","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1545293659,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":58242,"user_name":"唐名之","can_delete":false,"product_type":"c1","uid":1004394,"ip_address":"","ucode":"F472C71E043E03","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/JKKWS6TzhncvAA0p0NDiaATPIvMicSM76vNAg9IG1ibibcJYPAiaicYjZfq4gAV8GRtcTpOibfRD8vzqHBtL0ibmhwQsbg/132","comment_is_top":false,"comment_ctime":1547016993,"is_pvip":false,"replies":[{"id":"21130","content":"1.  为什么这么说呢？<br>2. 对的","user_name":"作者回复","comment_id":58242,"uid":"1264162","ip_address":"","utype":1,"ctime":1547119645,"user_name_real":"林晓斌"}],"discussion_count":3,"race_medal":0,"score":"27316820769","product_id":100020801,"comment_content":"1：用@cyberbit 提供的方式，执行计划是不会使用到排序，但执行时间比使用排序消耗的多；<br>2：分页limit过大时会导致大量排序，可以记录上一页最后的ID，下一页查询条件带上 where  ID&gt;上一页最后ID limit 100","like_count":6,"discussions":[{"author":{"id":1264162,"avatar":"https://static001.geekbang.org/account/avatar/00/13/4a/22/2681d602.jpg","nickname":"林晓斌","note":"","ucode":"CDE42D44F26240","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":435968,"discussion_content":"1.  为什么这么说呢？\n2. 对的","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1547119645,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1057311,"avatar":"https://static001.geekbang.org/account/avatar/00/10/22/1f/1c0a78cc.jpg","nickname":"fred 🐒","note":"","ucode":"442245FE43131D","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":39283,"discussion_content":"排序之后的id不是应该是随机的吗？那where Id>上一页最后的id 是不是就有问题了，因为上一页最后的id可能很大，也可能很小，排序是根据name排的不是根据id排的。不太理解 为什么说这样是对的？","likes_number":7,"is_delete":false,"is_hidden":false,"ctime":1571910219,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":1,"child_discussions":[{"author":{"id":1285652,"avatar":"","nickname":"mycat","note":"","ucode":"6878BD32D042F2","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1057311,"avatar":"https://static001.geekbang.org/account/avatar/00/10/22/1f/1c0a78cc.jpg","nickname":"fred 🐒","note":"","ucode":"442245FE43131D","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":308302,"discussion_content":"我也有这个疑问，主键ID在排序后在页面展现的时候是无序的，因为排序是根据name来的。不能保证ID是有序的呀。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1600911439,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":39283,"ip_address":""},"score":308302,"extra":""}]}]},{"had_liked":false,"id":73460,"user_name":"毓殇笳","can_delete":false,"product_type":"c1","uid":1307422,"ip_address":"","ucode":"00C86902689D64","user_header":"https://static001.geekbang.org/account/avatar/00/13/f3/1e/8ea92c76.jpg","comment_is_top":false,"comment_ctime":1551888165,"is_pvip":false,"discussion_count":5,"race_medal":0,"score":"23026724645","product_id":100020801,"comment_content":"图 14 可见性验证方式 -- 对照中<br><br>session A 的 update t set a = 3  where id = 1 and a = 3 <br><br>会不会有当前读？如果当前读的话，那是不是会读到session B的更新的值？<br><br>请老师帮忙分析下。","like_count":5,"discussions":[{"author":{"id":1210519,"avatar":"https://static001.geekbang.org/account/avatar/00/12/78/97/fa101174.jpg","nickname":"年轻人","note":"","ucode":"CDD4612BAE3247","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":282932,"discussion_content":"更新条件是匹配的。但是仅通过SQL语句就能让分析器（或者是优化器）判断出来，当前的更新操作是不需要更新的。因为where中的条件是 a=3，更新操作还是 set a=3，就不执行更新了。","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1592122477,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1065351,"avatar":"https://static001.geekbang.org/account/avatar/00/10/41/87/d26efb2e.jpg","nickname":"SuperSnow","note":"","ucode":"84C89AA8083E6A","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":159050,"discussion_content":"当前读只适用于update，前于set a=3肯定是要当前读的，但是where中的a就不能用当前读，因为一致性视图中的a是2，所以更新条件不匹配，所以无法更新。","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1580650345,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1005391,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/57/4f/6fb51ff1.jpg","nickname":"一步","note":"","ucode":"73CEA468CE70C3","race_medal":1,"user_type":1,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":60330,"discussion_content":"这个会进行当前读，但是进行当前读的时候的 ，分析 update 语句发现不需要进行更新，也就没有执行更新的操作","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1574727733,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1344431,"avatar":"https://static001.geekbang.org/account/avatar/00/14/83/af/1cb42cd3.jpg","nickname":"马以","note":"","ucode":"3FEA06CA14DE28","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":5484,"discussion_content":"如果您已经解决，能不能留言给我解答下呢？","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1566296107,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1344431,"avatar":"https://static001.geekbang.org/account/avatar/00/14/83/af/1cb42cd3.jpg","nickname":"马以","note":"","ucode":"3FEA06CA14DE28","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":5483,"discussion_content":"我也有这个疑问啊，不知道是什么鬼这里突然就对sessionB感知不到了","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1566296088,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":77025,"user_name":"啊啊啊哦哦","can_delete":false,"product_type":"c1","uid":1309877,"ip_address":"","ucode":"68C7153ECAAC57","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/RNO4yZyBvic914hewmNNE8iblYDcfv5yGHZ9OnKuCuZXNmGR0F5qV3icKLT2xpMt66GyEpicZVvrmz8A6TIqt92MQg/132","comment_is_top":false,"comment_ctime":1552809281,"is_pvip":false,"replies":[{"id":"28917","content":"是的","user_name":"作者回复","comment_id":77025,"uid":"1264162","ip_address":"","utype":1,"ctime":1553419505,"user_name_real":"林晓斌"}],"discussion_count":2,"race_medal":0,"score":"18732678465","product_id":100020801,"comment_content":"假设超过sort buffer  排序是一部分在内存中排序 超出的部分 用临时文件吗。","like_count":4,"discussions":[{"author":{"id":1264162,"avatar":"https://static001.geekbang.org/account/avatar/00/13/4a/22/2681d602.jpg","nickname":"林晓斌","note":"","ucode":"CDE42D44F26240","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":443550,"discussion_content":"是的","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1553419505,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":2344609,"avatar":"https://static001.geekbang.org/account/avatar/00/23/c6/a1/3bdcde91.jpg","nickname":"向陽花开花向陽🌸","note":"","ucode":"9FDD01BE0E42CD","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":376390,"discussion_content":"找到答案了\n","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1622107007,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":51371,"user_name":"峰","can_delete":false,"product_type":"c1","uid":1056019,"ip_address":"","ucode":"C53CB64E8E7D19","user_header":"https://static001.geekbang.org/account/avatar/00/10/1d/13/31ea1b0b.jpg","comment_is_top":false,"comment_ctime":1545179511,"is_pvip":true,"replies":[{"id":"18543","content":"分页这个再考虑考虑哈😄","user_name":"作者回复","comment_id":51371,"uid":"1264162","ip_address":"","utype":1,"ctime":1545183570,"user_name_real":"林晓斌"}],"discussion_count":1,"race_medal":0,"score":"18725048695","product_id":100020801,"comment_content":"由于city有两个值，相当于匹配到了索引树的两段区域，虽然各自都是按name排序，但整体需要做一次归并，当然只是limit100，所以够数就行。再然后如果需要不做排序，业务端就按city不同的取值查询两次，每次都limit100，然后业务端做归并处理喽。再然后要做分页的话，好吧，我的思路是先整出一张临时的结果表，create table as select rownumber,* from t where city=x order by name(写的不对哈，只是表达意思，rownumber为行数,并为主键)然后直接从这张表中按rownumber进行分页查询就好。","like_count":4,"discussions":[{"author":{"id":1264162,"avatar":"https://static001.geekbang.org/account/avatar/00/13/4a/22/2681d602.jpg","nickname":"林晓斌","note":"","ucode":"CDE42D44F26240","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":433427,"discussion_content":"分页这个再考虑考虑哈😄","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1545183570,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":184872,"user_name":"天天向上","can_delete":false,"product_type":"c1","uid":1242455,"ip_address":"","ucode":"0CCCA6F4DCC480","user_header":"https://static001.geekbang.org/account/avatar/00/12/f5/57/ce10fb1b.jpg","comment_is_top":false,"comment_ctime":1583422175,"is_pvip":false,"discussion_count":2,"race_medal":0,"score":"14468324063","product_id":100020801,"comment_content":"老师，如果加索引的几个例子中，排序是 desc，也就是倒序，会是怎么样的过程呢。","like_count":3,"discussions":[{"author":{"id":1928368,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTLCKzC0IPq9HSaMiaySKyviaBftvz2EjgqKNCwia9C0xIfYnuE7qntQ6fQ9oL2sEyJGWu0Mmj7EbWicrg/132","nickname":"FL","note":"","ucode":"C82D077D6C2277","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":283842,"discussion_content":"在8.0版本之前 应该仍然时需要进行 file_sort的,但是在8.0之后 提供了倒叙搜索的功能,不需要flie_sort  虽然比正序会慢一点,但是也很大的提升了搜索的效率","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1592381541,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":1,"child_discussions":[{"author":{"id":1513298,"avatar":"https://static001.geekbang.org/account/avatar/00/17/17/52/a891caa2.jpg","nickname":"顶级潇洒","note":"","ucode":"4B689B7DAD508D","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1928368,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTLCKzC0IPq9HSaMiaySKyviaBftvz2EjgqKNCwia9C0xIfYnuE7qntQ6fQ9oL2sEyJGWu0Mmj7EbWicrg/132","nickname":"FL","note":"","ucode":"C82D077D6C2277","race_medal":0,"user_type":1,"is_pvip":true},"discussion":{"id":351767,"discussion_content":"是因为加了双向链表吗？\n","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1614430933,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":283842,"ip_address":""},"score":351767,"extra":""}]}]},{"had_liked":false,"id":51663,"user_name":"爱学习的好孩子","can_delete":false,"product_type":"c1","uid":1331195,"ip_address":"","ucode":"C51EA3E529BE0B","user_header":"https://static001.geekbang.org/account/avatar/00/14/4f/fb/3eb917f1.jpg","comment_is_top":false,"comment_ctime":1545219714,"is_pvip":false,"replies":[{"id":"18746","content":"好问题，明天见 😁<br>（明天的一篇也是跟排序有关的哦）","user_name":"作者回复","comment_id":51663,"uid":"1264162","ip_address":"","utype":1,"ctime":1545236941,"user_name_real":"林晓斌"}],"discussion_count":1,"race_medal":0,"score":"14430121602","product_id":100020801,"comment_content":"老师你好，全字段排序那一节，我做了实验，我的排序缓存大小是1M， examined rows 是7715892，查询的三个字段都有数据，那么如果这些数据都放到缓存应该需要（4+8+11）*7715892等于160M，但是我看了都没有用到临时表，这是为什么？<br><br>CREATE TABLE `phone_call_logs` (<br>  `id` int(11) unsigned NOT NULL AUTO_INCREMENT COMMENT &#39;主键ID&#39;,<br>  `city_id` int(11) NOT NULL DEFAULT &#39;11&#39;,<br>  `call_sender` varchar(40) DEFAULT NULL COMMENT &#39;电话主叫号码&#39;,<br>  `phone_id` bigint(20) NOT NULL DEFAULT &#39;0&#39; COMMENT &#39;手机id&#39;,<br>  PRIMARY KEY (`id`),<br>  KEY `idx_city` (`city_id`)<br>) ENGINE=InnoDB AUTO_INCREMENT=64551193;<br>----------------sort_buffer_size=1M----------------------------<br>root:(none)&gt; show variables like &#39;sort_buffer_size&#39;;<br>+------------------+---------+<br>| Variable_name    | Value   |<br>+------------------+---------+<br>| sort_buffer_size | 1048576 |<br>+------------------+---------+<br>1 row in set (0.00 sec)<br>---------------查询sql---------------------<br> select city_id,phone_id,call_sender from phone_call_logs where city_id=11 order by phone_id desc limit 1000;<br><br><br>-----------------------执行计划结果---------------------------------------------<br><br>  &quot;filesort_priority_queue_optimization&quot;: {<br>              &quot;limit&quot;: 1000,<br>              &quot;rows_estimate&quot;: 146364461,<br>              &quot;row_size&quot;: 146,<br>              &quot;memory_available&quot;: 1048576,<br>              &quot;chosen&quot;: true<br>            },<br>            &quot;filesort_execution&quot;: [<br>            ],<br>            &quot;filesort_summary&quot;: {<br>              &quot;rows&quot;: 1001,<br>              &quot;examined_rows&quot;: 7715892,<br>              &quot;number_of_tmp_files&quot;: 0,<br>              &quot;sort_buffer_size&quot;: 154160,<br>              &quot;sort_mode&quot;: &quot;&lt;sort_key, additional_fields&gt;&quot;<br>","like_count":3,"discussions":[{"author":{"id":1264162,"avatar":"https://static001.geekbang.org/account/avatar/00/13/4a/22/2681d602.jpg","nickname":"林晓斌","note":"","ucode":"CDE42D44F26240","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":433559,"discussion_content":"好问题，明天见 😁\n（明天的一篇也是跟排序有关的哦）","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1545236941,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":51650,"user_name":"yy","can_delete":false,"product_type":"c1","uid":1307788,"ip_address":"","ucode":"4F6E10E2D1FE8C","user_header":"","comment_is_top":false,"comment_ctime":1545217445,"is_pvip":false,"replies":[{"id":"18747","content":"要看使用的索引有没有变化，<br>是按照索引顺序的","user_name":"作者回复","comment_id":51650,"uid":"1264162","ip_address":"","utype":1,"ctime":1545236978,"user_name_real":"林晓斌"}],"discussion_count":2,"race_medal":0,"score":"14430119333","product_id":100020801,"comment_content":"老师我想问一下  mysql在做没有排序的查询语句的时候  每次扫描返回的结果集顺序一样吗？还是每次扫描的结果集顺序是变化的？","like_count":3,"discussions":[{"author":{"id":1264162,"avatar":"https://static001.geekbang.org/account/avatar/00/13/4a/22/2681d602.jpg","nickname":"林晓斌","note":"","ucode":"CDE42D44F26240","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":433554,"discussion_content":"要看使用的索引有没有变化，\n是按照索引顺序的","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1545236978,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":2344609,"avatar":"https://static001.geekbang.org/account/avatar/00/23/c6/a1/3bdcde91.jpg","nickname":"向陽花开花向陽🌸","note":"","ucode":"9FDD01BE0E42CD","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":376391,"discussion_content":"查询返回的记录，默认都是根据索引的顺序返回的","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1622107282,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":313413,"user_name":"珍贵的没头脑","can_delete":false,"product_type":"c1","uid":2691055,"ip_address":"","ucode":"04C48D36442D35","user_header":"https://static001.geekbang.org/account/avatar/00/29/0f/ef/d7d1fab6.jpg","comment_is_top":false,"comment_ctime":1632413031,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"10222347623","product_id":100020801,"comment_content":"这是我看的“最累”的课程，不仅要看课程，还要读评论。不然错失太多精彩。","like_count":2},{"had_liked":false,"id":88150,"user_name":"搞怪者😘 😒 😏 👿","can_delete":false,"product_type":"c1","uid":1300678,"ip_address":"","ucode":"40DFF5D3E3B24C","user_header":"https://static001.geekbang.org/account/avatar/00/13/d8/c6/2b2a58cf.jpg","comment_is_top":false,"comment_ctime":1555859125,"is_pvip":false,"replies":[{"id":"34323","content":"left join跟join的语义不一样的，后面我们有文章会说到","user_name":"作者回复","comment_id":88150,"uid":"1264162","ip_address":"","utype":1,"ctime":1558261710,"user_name_real":"林晓斌"}],"discussion_count":1,"race_medal":0,"score":"10145793717","product_id":100020801,"comment_content":"老师，我发现刚刚问的问题是因为我将join写成了left join，但是为什么加了一个left就会有这么大变化呢？","like_count":2,"discussions":[{"author":{"id":1264162,"avatar":"https://static001.geekbang.org/account/avatar/00/13/4a/22/2681d602.jpg","nickname":"林晓斌","note":"","ucode":"CDE42D44F26240","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":447747,"discussion_content":"left join跟join的语义不一样的，后面我们有文章会说到","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1558261710,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":61286,"user_name":"杰之7","can_delete":false,"product_type":"c1","uid":1297232,"ip_address":"","ucode":"F7DA2E21085332","user_header":"https://static001.geekbang.org/account/avatar/00/13/cb/50/66d0bd7f.jpg","comment_is_top":false,"comment_ctime":1547653035,"is_pvip":false,"replies":[{"id":"21820","content":"👍很好的总结","user_name":"作者回复","comment_id":61286,"uid":"1264162","ip_address":"","utype":1,"ctime":1547690226,"user_name_real":"林晓斌"}],"discussion_count":1,"race_medal":0,"score":"10137587627","product_id":100020801,"comment_content":"通过这一节的阅读学习，知道了一个有Order by语言的排序逻辑和排序对内存的消耗。<br><br>老师介绍了4种情况，区分了全字段排序和Rowid排序的区别，如果有足够的内存，用全字段排序，否则用Rowid排序，这样排序的效率会更好。<br><br>在上述两种排序的基础之上，讲述了联合索引，联合索引解决了不需要按照姓名进行排序，这样只需要扫描1000次。进一步是覆盖索引，连回到主键取索引都不需要了。<br><br>通过这一节的学习，知道了一条有Order by 语句的执行流程和对系统资源的影响，谢谢老师哈。","like_count":2,"discussions":[{"author":{"id":1264162,"avatar":"https://static001.geekbang.org/account/avatar/00/13/4a/22/2681d602.jpg","nickname":"林晓斌","note":"","ucode":"CDE42D44F26240","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":436819,"discussion_content":"👍很好的总结","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1547690226,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":53948,"user_name":"小岭哥","can_delete":false,"product_type":"c1","uid":1209817,"ip_address":"","ucode":"C022D703B6D4E9","user_header":"https://static001.geekbang.org/account/avatar/00/12/75/d9/24786b20.jpg","comment_is_top":false,"comment_ctime":1545779695,"is_pvip":true,"replies":[{"id":"19556","content":"因为索引要求“有序”","user_name":"作者回复","comment_id":53948,"uid":"1264162","ip_address":"","utype":1,"ctime":1545789402,"user_name_real":"林晓斌"}],"discussion_count":1,"race_medal":0,"score":"10135714287","product_id":100020801,"comment_content":"为什么建立组合索引之后会天然的按照name递增排序呢","like_count":2,"discussions":[{"author":{"id":1264162,"avatar":"https://static001.geekbang.org/account/avatar/00/13/4a/22/2681d602.jpg","nickname":"林晓斌","note":"","ucode":"CDE42D44F26240","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":434296,"discussion_content":"因为索引要求“有序”","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1545789402,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":52440,"user_name":"古娜拉黑暗之神·巴啦啦能量·堕落达","can_delete":false,"product_type":"c1","uid":1185642,"ip_address":"","ucode":"080BBCEF7DE985","user_header":"https://static001.geekbang.org/account/avatar/00/12/17/6a/c979163e.jpg","comment_is_top":false,"comment_ctime":1545382644,"is_pvip":false,"replies":[{"id":"19106","content":"Explain没有考虑limit的，这个不是实际执行效果。你看看slow log的输出","user_name":"作者回复","comment_id":52440,"uid":"1264162","ip_address":"","utype":1,"ctime":1545398208,"user_name_real":"林晓斌"}],"discussion_count":1,"race_medal":0,"score":"10135317236","product_id":100020801,"comment_content":"堕落天使<br>老师，您好。<br>请问：建立了city、name、age的联合索引之后，执行 “select city,name,age from t where city=&#39;杭州&#39; order by name limit 1000 ;” 语句，显示的rows（影响行数）依旧是4000呢？不应该是1000吗？<br>2018-12-20<br> 作者回复<br>Explain 发来看看<br>我：<br>命令如下：<br>mysql&gt; select count(*) from p where city = &#39;杭州&#39;;<br>+----------+<br>| count(*) |<br>+----------+<br>|     4000 |<br>+----------+<br>1 row in set (0.00 sec)<br><br>mysql&gt; explain select city,name,age from p where city=&#39;杭州&#39; order by name limit 1000;<br>+----+-------------+-------+------------+------+---------------+---------------+---------+-------+------+----------+--------------------------+<br>| id | select_type | table | partitions | type | possible_keys | key           | key_len | ref   | rows | filtered | Extra                    |<br>+----+-------------+-------+------------+------+---------------+---------------+---------+-------+------+----------+--------------------------+<br>|  1 | SIMPLE      | p     | NULL       | ref  | city_name_age | city_name_age | 66      | const | 4000 |   100.00 | Using where; Using index |<br>+----+-------------+-------+------------+------+---------------+---------------+---------+-------+------+----------+--------------------------+<br>1 row in set, 1 warning (0.00 sec)<br>由explain的结果可见：使用的索引是city_name_age，扫描的行数（rows）是4000。而且您文章中的 图9 和 图11 中的rows值也是4000。这是为什么呢？<br>","like_count":2,"discussions":[{"author":{"id":1264162,"avatar":"https://static001.geekbang.org/account/avatar/00/13/4a/22/2681d602.jpg","nickname":"林晓斌","note":"","ucode":"CDE42D44F26240","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":433875,"discussion_content":"Explain没有考虑limit的，这个不是实际执行效果。你看看slow log的输出","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1545398208,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":51978,"user_name":"一大只😴","can_delete":false,"product_type":"c1","uid":1310960,"ip_address":"","ucode":"92F3D2B7F63568","user_header":"https://static001.geekbang.org/account/avatar/00/14/00/f0/08409e78.jpg","comment_is_top":false,"comment_ctime":1545287880,"is_pvip":false,"replies":[{"id":"18918","content":"对的，不过描述要精确些<br><br>走了索引的，利用索引快速定位记录，但是排序的时候没用上","user_name":"作者回复","comment_id":51978,"uid":"1264162","ip_address":"","utype":1,"ctime":1545315739,"user_name_real":"林晓斌"}],"discussion_count":1,"race_medal":0,"score":"10135222472","product_id":100020801,"comment_content":"课后思考题：还要使用排序。在虚拟机上测试了，没加order by name时候，city in 两个值时就没有走索引，所以还是要排序，city in 俩值相当于or了","like_count":2,"discussions":[{"author":{"id":1264162,"avatar":"https://static001.geekbang.org/account/avatar/00/13/4a/22/2681d602.jpg","nickname":"林晓斌","note":"","ucode":"CDE42D44F26240","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":433686,"discussion_content":"对的，不过描述要精确些\n\n走了索引的，利用索引快速定位记录，但是排序的时候没用上","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1545315739,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":51358,"user_name":"明亮","can_delete":false,"product_type":"c1","uid":1303015,"ip_address":"","ucode":"DAFB3424C4C2D7","user_header":"https://static001.geekbang.org/account/avatar/00/13/e1/e7/d1b2e914.jpg","comment_is_top":false,"comment_ctime":1545178085,"is_pvip":false,"replies":[{"id":"18539","content":"这样不太好哈，变成全索引扫描了","user_name":"作者回复","comment_id":51358,"uid":"1264162","ip_address":"","utype":1,"ctime":1545183397,"user_name_real":"林晓斌"}],"discussion_count":1,"race_medal":0,"score":"10135112677","product_id":100020801,"comment_content":"需要排序，可以将原来的索引中name字段放前面，city字段放后面，来建索引就可以了","like_count":2,"discussions":[{"author":{"id":1264162,"avatar":"https://static001.geekbang.org/account/avatar/00/13/4a/22/2681d602.jpg","nickname":"林晓斌","note":"","ucode":"CDE42D44F26240","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":433423,"discussion_content":"这样不太好哈，变成全索引扫描了","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1545183397,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":51315,"user_name":"尘封","can_delete":false,"product_type":"c1","uid":1247006,"ip_address":"","ucode":"CEE0C006387A03","user_header":"https://static001.geekbang.org/account/avatar/00/13/07/1e/bdbe93f4.jpg","comment_is_top":false,"comment_ctime":1545154231,"is_pvip":false,"replies":[{"id":"18542","content":"要是排序就结果不符合order by 的语义逻辑了…","user_name":"作者回复","comment_id":51315,"uid":"1264162","ip_address":"","utype":1,"ctime":1545183546,"user_name_real":"林晓斌"}],"discussion_count":1,"race_medal":0,"score":"10135088823","product_id":100020801,"comment_content":"请问，第7步中遍历排序结果，取前 1000 行，并按照 id 的值回到原表中取出 city、name 和 age 三个字段返回给客户端：这里会把id再进行排序吗？转随机io为顺序io？","like_count":2,"discussions":[{"author":{"id":1264162,"avatar":"https://static001.geekbang.org/account/avatar/00/13/4a/22/2681d602.jpg","nickname":"林晓斌","note":"","ucode":"CDE42D44F26240","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":433405,"discussion_content":"要是排序就结果不符合order by 的语义逻辑了…","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1545183546,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":307393,"user_name":"Geek_71eb87","can_delete":false,"product_type":"c1","uid":1538835,"ip_address":"","ucode":"728A62EF2740BE","user_header":"","comment_is_top":false,"comment_ctime":1629080904,"is_pvip":false,"discussion_count":2,"race_medal":0,"score":"5924048200","product_id":100020801,"comment_content":"请教一下老师，我现在有个表A 包含pair 和block两个字段，现在有个查询语句是这样的<br> select * from A wher pair=&#39;x&#39; and block&lt;=y  order by block desc limit 1<br> limit 1的时候很慢<br><br>而 select * from A wher pair=&#39;x&#39; and block&lt;=y  order by block desc limit 10<br>使用Limit 10的时候很快 这个是什么原因","like_count":1,"discussions":[{"author":{"id":1986739,"avatar":"https://static001.geekbang.org/account/avatar/00/1e/50/b3/9269cd59.jpg","nickname":"LWD","note":"","ucode":"DDA444DB113C01","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":587510,"discussion_content":"表索引这些都没贴出来怎么看","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1663121691,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":"广东"},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1324550,"avatar":"https://static001.geekbang.org/account/avatar/00/14/36/06/08c46bcd.jpg","nickname":"聂利","note":"","ucode":"808E064089724D","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":586499,"discussion_content":"应该是limit 1 导致走了索引 ，而limit 10走索引回表太多，选择全表扫表，更慢了，可以采用强制索引看看","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1662268665,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":"广东"},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":306529,"user_name":"慌张而黑糖","can_delete":false,"product_type":"c1","uid":1638878,"ip_address":"","ucode":"B4416885A301C8","user_header":"https://static001.geekbang.org/account/avatar/00/19/01/de/bf524817.jpg","comment_is_top":false,"comment_ctime":1628598292,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"5923565588","product_id":100020801,"comment_content":"最近一直有个limit分页优化的问题困扰着我，不知道老师是否能够解答一下，比如：select * from words where id &gt; (select id from words order by id limit 1000,1) limit 10（id为主键）这种方式limit如何计算行数的，想了解一下这条语句的执行过程，我不太清楚具体优化在哪里，如果说是使用了索引，但是它是如何计算第1000条的位置？","like_count":1},{"had_liked":false,"id":300292,"user_name":"Monday","can_delete":false,"product_type":"c1","uid":1250907,"ip_address":"","ucode":"77B9BACC783598","user_header":"https://static001.geekbang.org/account/avatar/00/13/16/5b/83a35681.jpg","comment_is_top":false,"comment_ctime":1625099778,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"5920067074","product_id":100020801,"comment_content":"使用city_user_age覆盖索引，我寻思着只走了索引，没回表。扫描行数应该为0。但是实际是1000，这块不懂啊。。。<br><br>如果扫描索引也得计算扫描行数，那前面只有city 单字段索引时，扫描行数就应该是翻番。","like_count":1},{"had_liked":false,"id":300249,"user_name":"Monday","can_delete":false,"product_type":"c1","uid":1250907,"ip_address":"","ucode":"77B9BACC783598","user_header":"https://static001.geekbang.org/account/avatar/00/13/16/5b/83a35681.jpg","comment_is_top":false,"comment_ctime":1625063533,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"5920030829","product_id":100020801,"comment_content":"标记下：<br>https:&#47;&#47;dev.mysql.com&#47;doc&#47;refman&#47;5.7&#47;en&#47;explain-output.html#explain-extra-information 【Using filesort】 本次查询语句中有order by，且排序依照的字段不在本次使用的索引中，不能自然有序。需要进行额外的排序工作。 【Using index】 使用了覆盖索引——即本次查询所需的所有信息字段都可以从利用的索引上取得。无需回表，额外去主索引上去数据。 The column information is retrieved from the table using only information in the index tree without having to do an additional seek to read the actual row. This strategy can be used when the query uses only columns that are part of a single index. 【Using index condition】 使用了索引下推技术ICP。（虽然本次查询所需的数据，不能从利用的索引上完全取得，还是需要回表去主索引获取。但在回表前，充分利用索引中的字段，根据where条件进行过滤。提前排除了不符合查询条件的列。这样就减少了回表的次数，提高了效率。） Tables are read by accessing index tuples and testing them first to determine whether to read full table rows. In this way, index information is used to defer (“push down”) reading full table rows unless it is necessary. See Section 8.2.1.5, “Index Condition Pushdown Optimization”. 【Using where】 表示本次查询要进行筛选过滤。","like_count":1},{"had_liked":false,"id":300236,"user_name":"Monday","can_delete":false,"product_type":"c1","uid":1250907,"ip_address":"","ucode":"77B9BACC783598","user_header":"https://static001.geekbang.org/account/avatar/00/13/16/5b/83a35681.jpg","comment_is_top":false,"comment_ctime":1625057789,"is_pvip":false,"discussion_count":1,"race_medal":0,"score":"5920025085","product_id":100020801,"comment_content":"city、name、age 这三个字段的定义总长度是 36。<br>当设置186才使用&lt;sort_key, additional_fields&gt;,<br>&lt;=185使用&lt;sort_key, rowid&gt;，<br>别问我怎么知道的，我用二分查找法试出来 的。但是还得找原因，因为我计算长度是16*3+16*3+4=100。。。","like_count":1,"discussions":[{"author":{"id":1986739,"avatar":"https://static001.geekbang.org/account/avatar/00/1e/50/b3/9269cd59.jpg","nickname":"LWD","note":"","ucode":"DDA444DB113C01","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":587511,"discussion_content":"一样。所以别纠结计算了，只要直到这个会影响排序算法选择就行了","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1663121809,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":"广东"},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":300233,"user_name":"Monday","can_delete":false,"product_type":"c1","uid":1250907,"ip_address":"","ucode":"77B9BACC783598","user_header":"https://static001.geekbang.org/account/avatar/00/13/16/5b/83a35681.jpg","comment_is_top":false,"comment_ctime":1625057096,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"5920024392","product_id":100020801,"comment_content":"city、name、age 这三个字段的定义总长度是 36。<br>这里长度是怎么计划的， city:16+name:16+age:4=36？如果是utf-8，city和name全存汉字，那就是16*3+16*3+4=100啊","like_count":1},{"had_liked":false,"id":246732,"user_name":"benxiong","can_delete":false,"product_type":"c1","uid":1624574,"ip_address":"","ucode":"F6498059D439D9","user_header":"https://static001.geekbang.org/account/avatar/00/18/c9/fe/874b172b.jpg","comment_is_top":false,"comment_ctime":1599467309,"is_pvip":false,"discussion_count":1,"race_medal":0,"score":"5894434605","product_id":100020801,"comment_content":"老师能不能讲解一下 Using index condition, Using index, Using where...... 之间的区别。网上找的答案不敢去相信。现在才来留言，是不是得不到回复了:(  看到的同学帮忙解答一下，感谢！","like_count":1,"discussions":[{"author":{"id":1962621,"avatar":"https://static001.geekbang.org/account/avatar/00/1d/f2/7d/24fc1423.jpg","nickname":"XRR","note":"","ucode":"5AEFA04C43C5B4","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":401067,"discussion_content":"using index condiction 索引下推\nusing index 索引覆盖\nusing where 代表过滤元组 可以理解为使用了where using where 和 using index一起出现代表使用了索引过滤数据","likes_number":3,"is_delete":false,"is_hidden":false,"ctime":1633532600,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":238204,"user_name":"Z","can_delete":false,"product_type":"c1","uid":1588016,"ip_address":"","ucode":"13BB106EABA035","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTIz50ciaONXadCquPf8WDzKzyMYMeDSChgZcMR605sMfSibdw1vXbXvpAFkQxW70GkRtDqFu9lwPlFg/132","comment_is_top":false,"comment_ctime":1596095052,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"5891062348","product_id":100020801,"comment_content":"想请教下对于varchar类型排序，排序的依据是什么呢，如果是rowid那对name排序的时候还是会依据id来排么，不是rowid的话排序name又是怎么确定顺序的呢","like_count":1},{"had_liked":false,"id":231462,"user_name":"习兮习兮","can_delete":false,"product_type":"c1","uid":1367043,"ip_address":"","ucode":"E616E924188CBA","user_header":"https://static001.geekbang.org/account/avatar/00/14/dc/03/ad9574b3.jpg","comment_is_top":false,"comment_ctime":1593680791,"is_pvip":true,"discussion_count":1,"race_medal":0,"score":"5888648087","product_id":100020801,"comment_content":"关于上一节，选项二的解释感觉还是存在问题：<br>假如有id, a, b三个字段；<br>1. sessionA开启事务，执行查询select * ...;<br>2.sessionB修改a的值，commit；<br>3.sessionA修改b的值, 重点在这里（这里会进行一次当前读，也就是sessionB修改的a值会被读进来）；<br>4.sessionA执行select * ...,这时会发现a,b的值均被修改了；<br>既然结果是均被修改，那么老师的示例怎么能证明是正常写了？而不是在update的时候完成了一次当前读的结果呢？如果老师或哪位大佬还能看到，可以给我解惑一下么？","like_count":1,"discussions":[{"author":{"id":1135537,"avatar":"https://static001.geekbang.org/account/avatar/00/11/53/b1/3d6075cc.jpg","nickname":"王建","note":"","ucode":"2289B282E18826","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":296394,"discussion_content":"可重复读隔离级别下，根据MVCC特性，事务A是看不到事务B的修改的。事务A update的时候不仅要进行当前读，数据更新后还会修改数据行的事务id（row trx_id）为事务A的 事务ID，这样事务A就看到了事务B的修改，所以老师说是进行了正常写。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1596531740,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":203827,"user_name":"否极泰来","can_delete":false,"product_type":"c1","uid":1439355,"ip_address":"","ucode":"C249173266251A","user_header":"https://static001.geekbang.org/account/avatar/00/15/f6/7b/b6abcbbe.jpg","comment_is_top":false,"comment_ctime":1586270873,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"5881238169","product_id":100020801,"comment_content":"老师讲的是正序排序 如果desc倒叙也是相同的吗？","like_count":1},{"had_liked":false,"id":195368,"user_name":"GalaxyCreater","can_delete":false,"product_type":"c1","uid":1508329,"ip_address":"","ucode":"C79E8A088D57CF","user_header":"https://static001.geekbang.org/account/avatar/00/17/03/e9/6358059c.jpg","comment_is_top":false,"comment_ctime":1585183946,"is_pvip":false,"discussion_count":2,"race_medal":0,"score":"5880151242","product_id":100020801,"comment_content":"在mysql8.0中还是会返回(1,2)，而mysql 5.6中返回的是(1,3)，8.0的机制改了？","like_count":1,"discussions":[{"author":{"id":1603078,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/zAZv4NyuS21Y1qk45j8JiaoEYdA5Zgc1PqpJsBokz5bZVmdkf6kNWvT4cUAAKAdH6TgN52DWZhiaH6wNFhw14nRg/132","nickname":"Geek_4e4ec2","note":"","ucode":"6DAD5EE4FFB195","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":535681,"discussion_content":"同问","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1638515509,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1303954,"avatar":"https://wx.qlogo.cn/mmopen/vi_32/1mOvT5fApeicXppMP3zADG6XIPicNt5D9dL6y46SF5UUcH0hicG21LM6xSgHJj5oAdzCyeGtLZYHYmlvaFwecrGOA/132","nickname":"考拉出山","note":"","ucode":"917E35FD7B2D06","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":300953,"discussion_content":"5.7.17 也是这个结果  （1，2）","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1598340145,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":184870,"user_name":"天天向上","can_delete":false,"product_type":"c1","uid":1242455,"ip_address":"","ucode":"0CCCA6F4DCC480","user_header":"https://static001.geekbang.org/account/avatar/00/12/f5/57/ce10fb1b.jpg","comment_is_top":false,"comment_ctime":1583421709,"is_pvip":false,"discussion_count":2,"race_medal":0,"score":"5878389005","product_id":100020801,"comment_content":"文章中讲的加索引排序的两个例子中不是只扫描1000行吗，为什么explain显示rows都是4000呢？","like_count":1,"discussions":[{"author":{"id":2326134,"avatar":"https://static001.geekbang.org/account/avatar/00/23/7e/76/368394bf.jpg","nickname":"哦","note":"","ucode":"C776659DED9D79","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":337091,"discussion_content":"不是只扫描1000行，是将要符合条件的行检索出来（一共4000行），然后limit返回1000行","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1608794441,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1152877,"avatar":"https://static001.geekbang.org/account/avatar/00/11/97/6d/ec8bb975.jpg","nickname":"凉木","note":"","ucode":"F8344585965790","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":261882,"discussion_content":"同问\n","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1589018196,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":114335,"user_name":"种花家的兔子","can_delete":false,"product_type":"c1","uid":1396594,"ip_address":"","ucode":"24221423485348","user_header":"https://static001.geekbang.org/account/avatar/00/15/4f/72/72923901.jpg","comment_is_top":false,"comment_ctime":1563276638,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"5858243934","product_id":100020801,"comment_content":"关于大数据量排序并limit的时候offset很大，即使order by的字段上有索引，也会导致全表扫描的问题，查了很多资料，可以通过覆盖索引达到延迟关联的效果，从而避免全表扫描，但是不理解为什么mysql不能通过order by字段上的索引来读取需要的记录，而不是读取大量数据然后丢弃大部分数据。","like_count":1},{"had_liked":false,"id":87777,"user_name":"zws","can_delete":false,"product_type":"c1","uid":1240091,"ip_address":"","ucode":"18EC6E85F3431E","user_header":"https://static001.geekbang.org/account/avatar/00/12/ec/1b/650e3dbe.jpg","comment_is_top":false,"comment_ctime":1555689246,"is_pvip":false,"replies":[{"id":"31661","content":"其实这一篇的内容其实是面向开发工程师的😅","user_name":"作者回复","comment_id":87777,"uid":"1264162","ip_address":"","utype":1,"ctime":1555826165,"user_name_real":"林晓斌"}],"discussion_count":1,"race_medal":0,"score":"5850656542","product_id":100020801,"comment_content":"看到redolog  和 binlog 的内容就相当头疼。。  这一章讲的排序写的非常好，看到结尾关于上一节的提问回答我又陷入的沉思。。。我不是dba这些内容有这么重要吗","like_count":2,"discussions":[{"author":{"id":1264162,"avatar":"https://static001.geekbang.org/account/avatar/00/13/4a/22/2681d602.jpg","nickname":"林晓斌","note":"","ucode":"CDE42D44F26240","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":447596,"discussion_content":"其实这一篇的内容其实是面向开发工程师的😅","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1555826165,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":77027,"user_name":"啊啊啊哦哦","can_delete":false,"product_type":"c1","uid":1309877,"ip_address":"","ucode":"68C7153ECAAC57","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/RNO4yZyBvic914hewmNNE8iblYDcfv5yGHZ9OnKuCuZXNmGR0F5qV3icKLT2xpMt66GyEpicZVvrmz8A6TIqt92MQg/132","comment_is_top":false,"comment_ctime":1552809870,"is_pvip":false,"replies":[{"id":"28916","content":"你理解的对😆","user_name":"作者回复","comment_id":77027,"uid":"1264162","ip_address":"","utype":1,"ctime":1553419497,"user_name_real":"林晓斌"}],"discussion_count":4,"race_medal":0,"score":"5847777166","product_id":100020801,"comment_content":"文章说的紧凑排序的意思是。我有一个varchar（16）的字段。但是我只存了8个字。 排序的时候是按实际的8*3个字节来算内存吗。  我看高性能mysql里面说的是。按字段长度来算也就是按16来算的","like_count":0,"discussions":[{"author":{"id":1264162,"avatar":"https://static001.geekbang.org/account/avatar/00/13/4a/22/2681d602.jpg","nickname":"林晓斌","note":"","ucode":"CDE42D44F26240","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":443552,"discussion_content":"你理解的对😆","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1553419497,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1425377,"avatar":"https://static001.geekbang.org/account/avatar/00/15/bf/e1/ae6963bb.jpg","nickname":"薄荷","note":"","ucode":"B394DB7AB4DC58","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":394120,"discussion_content":"不太明白为什么rowid排序反而没有用packed_additional_fields","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1631751655,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1065351,"avatar":"https://static001.geekbang.org/account/avatar/00/10/41/87/d26efb2e.jpg","nickname":"SuperSnow","note":"","ucode":"84C89AA8083E6A","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":159100,"discussion_content":"为啥是8*3个字节？","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1580652795,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":1,"child_discussions":[{"author":{"id":1386818,"avatar":"https://static001.geekbang.org/account/avatar/00/15/29/42/43d4b1a8.jpg","nickname":"烫烫烫","note":"","ucode":"C06018670DE76A","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":1065351,"avatar":"https://static001.geekbang.org/account/avatar/00/10/41/87/d26efb2e.jpg","nickname":"SuperSnow","note":"","ucode":"84C89AA8083E6A","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":319111,"discussion_content":"utf8mb4编码下，一个中文一般都是3个字节","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1603944501,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":159100,"ip_address":""},"score":319111,"extra":""}]}]},{"had_liked":false,"id":66825,"user_name":"Sinyo","can_delete":false,"product_type":"c1","uid":1307297,"ip_address":"","ucode":"57B243E7AB86A5","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTJAibnPX9jW8kqLcIfibjic8GbkQkEUYyFKJkc39hZhibVlNrqwTjdLozkqibI2IwACd5YzofYickNxFnZg/132","comment_is_top":false,"comment_ctime":1550026163,"is_pvip":false,"replies":[{"id":"23667","content":"是的<br>","user_name":"作者回复","comment_id":66825,"uid":"1264162","ip_address":"","utype":1,"ctime":1550043560,"user_name_real":"林晓斌"}],"discussion_count":1,"race_medal":0,"score":"5844993459","product_id":100020801,"comment_content":"老师，如果row_id算法的大小也超出了sort_buffer_size，那么也会用到磁盘临时文件辅助么？","like_count":1,"discussions":[{"author":{"id":1264162,"avatar":"https://static001.geekbang.org/account/avatar/00/13/4a/22/2681d602.jpg","nickname":"林晓斌","note":"","ucode":"CDE42D44F26240","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":438932,"discussion_content":"是的\n","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1550043560,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":60568,"user_name":"fdconan","can_delete":false,"product_type":"c1","uid":1244596,"ip_address":"","ucode":"01C71C6E9FD1E4","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTLv9HJIW4OACkjlwOQJ9cU7HzvaDFYkACWCib2lzOMef9ZiaGDTVFqjPicpVK5KDRbBRVGGHrMHQO1Rw/132","comment_is_top":false,"comment_ctime":1547514050,"is_pvip":false,"replies":[{"id":"21572","content":"看语句怎么写，如果是 where city=&#39;X&#39; order by name desc, 那就建(city, name)的联合索引","user_name":"作者回复","comment_id":60568,"uid":"1264162","ip_address":"","utype":1,"ctime":1547518188,"user_name_real":"林晓斌"}],"discussion_count":1,"race_medal":0,"score":"5842481346","product_id":100020801,"comment_content":"老师，请教下，如果希望通过city找出记录后，按照name倒序(order by name desc)而又不想mysql进行排序(执行计划没有filesort关键字)，应该如何设计索引呢？有什么好的建议么？","like_count":1,"discussions":[{"author":{"id":1264162,"avatar":"https://static001.geekbang.org/account/avatar/00/13/4a/22/2681d602.jpg","nickname":"林晓斌","note":"","ucode":"CDE42D44F26240","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":436544,"discussion_content":"看语句怎么写，如果是 where city=&amp;#39;X&amp;#39; order by name desc, 那就建(city, name)的联合索引","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1547518188,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":58929,"user_name":"sam3125C","can_delete":false,"product_type":"c1","uid":1193708,"ip_address":"","ucode":"D725AEF2A1F47C","user_header":"https://static001.geekbang.org/account/avatar/00/12/36/ec/ca162d6b.jpg","comment_is_top":false,"comment_ctime":1547256843,"is_pvip":false,"replies":[{"id":"21344","content":"原意是要宽的表示数据项，窄的表示指针<br>我们修改下图哈，不容易引起疑问。<br>👍细致","user_name":"作者回复","comment_id":58929,"uid":"1264162","ip_address":"","utype":1,"ctime":1547268801,"user_name_real":"林晓斌"}],"discussion_count":1,"race_medal":0,"score":"5842224139","product_id":100020801,"comment_content":"类如图二的索引图，我一直有一个困惑。city的索引图上，有小一些的长方形和大一些的长方形。有时候箭头源自于小长方形，有些箭头又源自于大长方形。这究竟是什么含义？","like_count":1,"discussions":[{"author":{"id":1264162,"avatar":"https://static001.geekbang.org/account/avatar/00/13/4a/22/2681d602.jpg","nickname":"林晓斌","note":"","ucode":"CDE42D44F26240","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":436252,"discussion_content":"原意是要宽的表示数据项，窄的表示指针\n我们修改下图哈，不容易引起疑问。\n👍细致","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1547268801,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":52161,"user_name":"Sinyo","can_delete":false,"product_type":"c1","uid":1307297,"ip_address":"","ucode":"57B243E7AB86A5","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTJAibnPX9jW8kqLcIfibjic8GbkQkEUYyFKJkc39hZhibVlNrqwTjdLozkqibI2IwACd5YzofYickNxFnZg/132","comment_is_top":false,"comment_ctime":1545321697,"is_pvip":false,"replies":[{"id":"19010","content":"第二个select是普通查询，走的还是快照读呀","user_name":"作者回复","comment_id":52161,"uid":"1264162","ip_address":"","utype":1,"ctime":1545362288,"user_name_real":"林晓斌"}],"discussion_count":1,"race_medal":0,"score":"5840288993","product_id":100020801,"comment_content":"老师，图 13 可见性验证方式，第二个select不应该是“当前读”么？更新数据不是先读后写么？","like_count":1,"discussions":[{"author":{"id":1264162,"avatar":"https://static001.geekbang.org/account/avatar/00/13/4a/22/2681d602.jpg","nickname":"林晓斌","note":"","ucode":"CDE42D44F26240","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":433766,"discussion_content":"第二个select是普通查询，走的还是快照读呀","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1545362288,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":52077,"user_name":"流浪在寂寞古城","can_delete":false,"product_type":"c1","uid":1105678,"ip_address":"","ucode":"FE90DCD5DC3A20","user_header":"https://static001.geekbang.org/account/avatar/00/10/df/0e/4e2b06d5.jpg","comment_is_top":false,"comment_ctime":1545305943,"is_pvip":false,"replies":[{"id":"18917","content":"是的，非常对。<br><br>这里跟我们的例子有点像，如果你这个语句中两个update_time这么接近，可以考虑用force_index试试","user_name":"作者回复","comment_id":52077,"uid":"1264162","ip_address":"","utype":1,"ctime":1545315665,"user_name_real":"林晓斌"}],"discussion_count":1,"race_medal":0,"score":"5840273239","product_id":100020801,"comment_content":"您好，最近看了索引和排序的文章，学到很多。最近遇到一个问题。我们有一个比较大的表，以下语句：select ct.id, ct.title, ct.status, ct.content_type, ct.is_hot, ct.read_count, ct.share_count, ct.update_time, ct.publish_time, cxt.author_id from content as ct inner join content_ext cxt on (ct.id = cxt.id)  where update_time &gt;= &#39;2018-12-20 16:34:24&#39; and update_time &lt; &#39;2018-12-20 16:34:26&#39; and ct.id &gt; xxxx order by ct.id  limit 1;<br>在语句中涉及到的字段，都有索引。其中ct.id是主表的自增主键。在这个时间段内的数据只有几十条。<br>如果ct.id&gt;一个接近update_time时间内的id，查询比较快，如果ct.id&gt;0,那么就是一个灾难，根本查不到结果。我自己猜测，之所以变了这么慢，应该是msyql优化的时候选择了先按照主键的ct.id索引进行查询，因为是大于0，所以相当于一个扫描全表了，导致速度很慢。<br>这样理解的对吗？请求老师解答","like_count":1,"discussions":[{"author":{"id":1264162,"avatar":"https://static001.geekbang.org/account/avatar/00/13/4a/22/2681d602.jpg","nickname":"林晓斌","note":"","ucode":"CDE42D44F26240","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":433732,"discussion_content":"是的，非常对。\n\n这里跟我们的例子有点像，如果你这个语句中两个update_time这么接近，可以考虑用force_index试试","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1545315665,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":51811,"user_name":"一大只😴","can_delete":false,"product_type":"c1","uid":1310960,"ip_address":"","ucode":"92F3D2B7F63568","user_header":"https://static001.geekbang.org/account/avatar/00/14/00/f0/08409e78.jpg","comment_is_top":false,"comment_ctime":1545266184,"is_pvip":false,"replies":[{"id":"18959","content":"用到才分配","user_name":"作者回复","comment_id":51811,"uid":"1264162","ip_address":"","utype":1,"ctime":1545333001,"user_name_real":"林晓斌"}],"discussion_count":1,"race_medal":0,"score":"5840233480","product_id":100020801,"comment_content":"老师请教下，sort-buffer是线程初始化时候就分配还是需要排序时才分配？初始化线程是不是就是默认的256k？","like_count":1,"discussions":[{"author":{"id":1264162,"avatar":"https://static001.geekbang.org/account/avatar/00/13/4a/22/2681d602.jpg","nickname":"林晓斌","note":"","ucode":"CDE42D44F26240","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":433630,"discussion_content":"用到才分配","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1545333001,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":51722,"user_name":"南山","can_delete":false,"product_type":"c1","uid":1119593,"ip_address":"","ucode":"94656FE4A6C378","user_header":"https://static001.geekbang.org/account/avatar/00/11/15/69/187b9968.jpg","comment_is_top":false,"comment_ctime":1545229376,"is_pvip":true,"replies":[{"id":"18744","content":"每个连接有自己的内存空间，正常一个线程处理一个连接，<br>线程是工作单位，内存都是在连接的对象里面","user_name":"作者回复","comment_id":51722,"uid":"1264162","ip_address":"","utype":1,"ctime":1545233584,"user_name_real":"林晓斌"}],"discussion_count":1,"race_medal":0,"score":"5840196672","product_id":100020801,"comment_content":"MySQL的一个连接是一个线程吗？前面看到过MySQL一个连接是有自己的内存空间的，这块不太理解","like_count":1,"discussions":[{"author":{"id":1264162,"avatar":"https://static001.geekbang.org/account/avatar/00/13/4a/22/2681d602.jpg","nickname":"林晓斌","note":"","ucode":"CDE42D44F26240","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":433598,"discussion_content":"每个连接有自己的内存空间，正常一个线程处理一个连接，\n线程是工作单位，内存都是在连接的对象里面","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1545233584,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":51718,"user_name":"南山","can_delete":false,"product_type":"c1","uid":1119593,"ip_address":"","ucode":"94656FE4A6C378","user_header":"https://static001.geekbang.org/account/avatar/00/11/15/69/187b9968.jpg","comment_is_top":false,"comment_ctime":1545229054,"is_pvip":true,"replies":[{"id":"18755","content":"解析、执行、排序、返回结果，都是这个线程做的","user_name":"作者回复","comment_id":51718,"uid":"1264162","ip_address":"","utype":1,"ctime":1545244917,"user_name_real":"林晓斌"}],"discussion_count":1,"race_medal":0,"score":"5840196350","product_id":100020801,"comment_content":"老师，MySQL会给每个线程分配一个sort_buffer用于排序，那一条SQL的执行是只由一个线程负责嘛，还是排序由一个线程负责呢？","like_count":1,"discussions":[{"author":{"id":1264162,"avatar":"https://static001.geekbang.org/account/avatar/00/13/4a/22/2681d602.jpg","nickname":"林晓斌","note":"","ucode":"CDE42D44F26240","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":433595,"discussion_content":"解析、执行、排序、返回结果，都是这个线程做的","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1545244917,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":51408,"user_name":"小文","can_delete":false,"product_type":"c1","uid":1198258,"ip_address":"","ucode":"4D6257B8D63FA4","user_header":"https://static001.geekbang.org/account/avatar/00/12/48/b2/cca85581.jpg","comment_is_top":false,"comment_ctime":1545181012,"is_pvip":false,"replies":[{"id":"18537","content":"2. 这样就得全索引扫描了… 性能可能更差哦，不是很理想的方法哈","user_name":"作者回复","comment_id":51408,"uid":"1264162","ip_address":"","utype":1,"ctime":1545182783,"user_name_real":"林晓斌"}],"discussion_count":1,"race_medal":0,"score":"5840148308","product_id":100020801,"comment_content":"1.需要排序，仅仅是每个city_name下name有序<br>2.可不可以把name设为主键，city_name设索引，这样就会有序呢","like_count":1,"discussions":[{"author":{"id":1264162,"avatar":"https://static001.geekbang.org/account/avatar/00/13/4a/22/2681d602.jpg","nickname":"林晓斌","note":"","ucode":"CDE42D44F26240","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":433445,"discussion_content":"2. 这样就得全索引扫描了… 性能可能更差哦，不是很理想的方法哈","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1545182783,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":355478,"user_name":"ʘᴗʘ小白帽ʘᴗʘ","can_delete":false,"product_type":"c1","uid":1304567,"ip_address":"上海","ucode":"3519C67C3B1533","user_header":"https://static001.geekbang.org/account/avatar/00/13/e7/f7/8427bb06.jpg","comment_is_top":false,"comment_ctime":1661414915,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1661414915","product_id":100020801,"comment_content":"关于排序结果问题，有一点点小疑问，请教下您：<br><br>select address from t_user group by address asc; <br><br>排序结果是：<br>平利路21弄10号<br>平利路21弄1号<br>平利路21弄2号<br><br><br>select address from t_user group by CONVERT(address,SIGNED);<br><br>排序结果是：<br>平利路21弄1号<br>平利路21弄2号<br>平利路21弄10号<br><br><br>没理解这个是什么道理<br><br><br>","like_count":0},{"had_liked":false,"id":353836,"user_name":"起风了","can_delete":false,"product_type":"c1","uid":1110574,"ip_address":"浙江","ucode":"DEA3B47B7F3C3F","user_header":"https://static001.geekbang.org/account/avatar/00/10/f2/2e/cb647708.jpg","comment_is_top":false,"comment_ctime":1659855937,"is_pvip":true,"discussion_count":0,"race_medal":0,"score":"1659855937","product_id":100020801,"comment_content":"老师 初始化 sort_buffer，确定放入 name、city、age 这三个字段； 第一个步骤怎么理解","like_count":0},{"had_liked":false,"id":353635,"user_name":"SystemCaller","can_delete":false,"product_type":"c1","uid":3002347,"ip_address":"上海","ucode":"CECF6068EE3769","user_header":"","comment_is_top":false,"comment_ctime":1659623829,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1659623829","product_id":100020801,"comment_content":" 图 14的理解: <br>sessionA也触发了当前读, 但是更新条件和更新值一样, 不需要更新. 而上图13中的更新条件和更新值不一样,所以要进行更新. 即使当前读的结果和更新值一样.  <br>由于事务A没有进行更新, 只发生了当前读 . 所以还是一致性视图,结果还是a=2<br><br>我有一个问题: 假设，当前表 t 里的值是 (1,2)，(2,3)。下面的执行时序图。<br><br>           session A                                                                       session B<br>T1             begin<br>T2     select * from t where id=1<br>T3                                                                               uptate set a=3 where id =1 <br>T4      uptate set a=3 where id =2 <br>T5      select * from t where id=1<br><br>问题： <br>Q1： sessionA中更新了id=2的数据，触发了当前读，那么id=1的数据会收到影响也变为sessionB中最新值的3么？ <br>Q2： 更新语句一定会先触发当前读吗<br>Q3： 触发了当前读，但是不一定执行更新（图13那种情况），不执行更新所以当前读对当前事务无效，仍然是事务创建开始的时的值是吗？","like_count":0},{"had_liked":false,"id":352927,"user_name":"allen","can_delete":false,"product_type":"c1","uid":1157861,"ip_address":"陕西","ucode":"00BFF6D6FB6974","user_header":"https://static001.geekbang.org/account/avatar/00/11/aa/e5/60a405a6.jpg","comment_is_top":false,"comment_ctime":1659017423,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1659017423","product_id":100020801,"comment_content":"MySQL order by 字段，结合limit使用，当排序字段多个相同值的时候，排序分页会出现重复数据，MySQL在这块没有做优化吗","like_count":0},{"had_liked":false,"id":351222,"user_name":"LF","can_delete":false,"product_type":"c1","uid":1275909,"ip_address":"","ucode":"9DE3EC98CAD590","user_header":"https://static001.geekbang.org/account/avatar/00/13/78/05/7bdba0ad.jpg","comment_is_top":false,"comment_ctime":1657617539,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1657617539","product_id":100020801,"comment_content":"&quot;如果 MySQL 实在是担心排序内存太小，会影响排序效率，才会采用 rowid 排序算法，这样排序过程中一次可以排序更多行，但是需要再回到原表去取数据&quot;<br>老师您好，对 rowid 排序有一个小小的疑问。就是根据二级索引拿到主键id后，回表查询数据，此时已经把数据页加载到内存中了吧？这样排完序之后第二次根据主键id回表，是否不需要再次访问磁盘了，因为数据已经已经在内存中了？希望老师解惑，感谢～","like_count":0},{"had_liked":false,"id":345518,"user_name":"whyly","can_delete":false,"product_type":"c1","uid":1798882,"ip_address":"","ucode":"D34D6B7164C982","user_header":"https://static001.geekbang.org/account/avatar/00/1b/72/e2/95b0543c.jpg","comment_is_top":false,"comment_ctime":1652346564,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1652346564","product_id":100020801,"comment_content":"索引是否是按照正序存储的，如果我想按照name倒序查询，如 select city, name, age from T where city = &#39;杭州&#39; order by name desc limit 100; 这种情况是不是还得进行排序操作后才能返回客户端呢？","like_count":0},{"had_liked":false,"id":343096,"user_name":"服务端组1","can_delete":false,"product_type":"c1","uid":2107930,"ip_address":"","ucode":"F432FCF470F69D","user_header":"","comment_is_top":false,"comment_ctime":1650625042,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1650625042","product_id":100020801,"comment_content":"老师好，书上说innodb页内数据行与行之间是单向链表，想请问下降序操作是怎么实现的","like_count":0},{"had_liked":false,"id":342051,"user_name":"白不吃","can_delete":false,"product_type":"c1","uid":1033578,"ip_address":"","ucode":"F019914D8819C2","user_header":"https://static001.geekbang.org/account/avatar/00/0f/c5/6a/7f858f1f.jpg","comment_is_top":false,"comment_ctime":1649992198,"is_pvip":true,"discussion_count":0,"race_medal":4,"score":"1649992198","product_id":100020801,"comment_content":"MySQL 8.0.25 版本查询排序报错了，Out of sort memory，在查询缓存不够的时候，为啥并没有利用其他手段进行排序，而直接抛出了错误？","like_count":0},{"had_liked":false,"id":340962,"user_name":"李金鹏","can_delete":false,"product_type":"c1","uid":1445362,"ip_address":"","ucode":"8FCCA5B8BD8DDD","user_header":"https://static001.geekbang.org/account/avatar/00/16/0d/f2/3865fe28.jpg","comment_is_top":false,"comment_ctime":1649247449,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1649247449","product_id":100020801,"comment_content":"会有排序过程","like_count":0},{"had_liked":false,"id":340546,"user_name":"哲子兄","can_delete":false,"product_type":"c1","uid":1348819,"ip_address":"","ucode":"6D6B6FE1ED2583","user_header":"https://static001.geekbang.org/account/avatar/00/14/94/d3/1861fa96.jpg","comment_is_top":false,"comment_ctime":1648893442,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1648893442","product_id":100020801,"comment_content":"<br>1、排序问题：<br>mysql&gt; select * from t where city in (&#39;杭州&#39;,&quot;苏州&quot;) order by name limit 100;<br>执行的时候会有排序，因为 city_name(city, name) 这个联合索引先按city排序，再按name排序，要取前100条，需要把所有符合条件的数据进行排序，可以把索引改成name_city(name,city) ,但是extra 变成 using where了，不确定哪种效率更高。如果是业务改造可以苏州、杭州分别查100条，再合并排序。<br>2、分页需求：<br>limit 10000,100，会扫描10000+100条数据，如果是按照数值排序的，可以记录上一次偏移量的排序值，减少行数的遍历，如 where id &gt; 10000 order by id limit 0,100,name不好比较，可以增加一个md5_name的字段，where md5_name &gt; &#39;xxxxx&#39; order by md5_name limit 0,100，不知是否可以满足需求","like_count":0},{"had_liked":false,"id":334373,"user_name":"Composer","can_delete":false,"product_type":"c1","uid":2474640,"ip_address":"","ucode":"70596903AFB2F7","user_header":"https://static001.geekbang.org/account/avatar/00/25/c2/90/3f24c094.jpg","comment_is_top":false,"comment_ctime":1644905309,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1644905309","product_id":100020801,"comment_content":"select * from tbl where classid = 11531 order by sort asc<br>select id from tbl where classid = 11531 order by sort asc<br>classid上有普通索引，这个classid下sort值都是相同的，但是得到的结果集顺序却不一样，语句一在sort值相同的情况下不知道是按什么顺序排的，语句二在sort值都相同的情况下是按主键id从小到大这个是对的   有没有大佬帮忙给解释一下这个问题 谢谢","like_count":0},{"had_liked":false,"id":329502,"user_name":"Shepherd","can_delete":false,"product_type":"c1","uid":2338746,"ip_address":"","ucode":"5C882BBA20C089","user_header":"https://static001.geekbang.org/account/avatar/00/23/af/ba/e2926a33.jpg","comment_is_top":false,"comment_ctime":1641376271,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1641376271","product_id":100020801,"comment_content":"老师，我发现当order by的字段值相同时，有些情况会按照id升序返回结果，但有些情况是随机顺序返回结果，请问老师mysql这时候的排序策略是怎样的","like_count":0},{"had_liked":false,"id":328021,"user_name":"建强","can_delete":false,"product_type":"c1","uid":1397126,"ip_address":"","ucode":"62B03D0E0C64EC","user_header":"https://static001.geekbang.org/account/avatar/00/15/51/86/b5fd8dd8.jpg","comment_is_top":false,"comment_ctime":1640485781,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1640485781","product_id":100020801,"comment_content":"思考题：<br>我能想到的一种方案是，在T表上再建一个按name字段的索引，然后在语句中强迫SQL用这个索引：<br><br>create index idx_name on t(name);<br>select * from t force index(idx_name) where city in (&#39;杭州&#39;,&quot;苏州&quot;) order by name limit 100;<br><br>做了一下实验，这样确实可以不用排序，但这样的话就无法利用已有的索引city_name，但这样会不会降低where条件的查询性能，请老师指教。","like_count":0},{"had_liked":false,"id":327361,"user_name":"我要放大🐂","can_delete":false,"product_type":"c1","uid":1451509,"ip_address":"","ucode":"B280A95E02E7C1","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/P5EIPG3R01lW2MG1HfcPUDLKajMy7BGg8rKn5dKDbdrCreIwabwJ1RqWOJMVKqAusLaf7Y0Utomibp6ibxajflvQ/132","comment_is_top":false,"comment_ctime":1640082330,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1640082330","product_id":100020801,"comment_content":"我最近遇到一个问题的，就是我一个排序字段是没有索引并且有重复值，然后我分页和不分页查询出来的数据顺序是不一样的，这是为什么啊？","like_count":0},{"had_liked":false,"id":318188,"user_name":"学习学个屁","can_delete":false,"product_type":"c1","uid":1049017,"ip_address":"","ucode":"DF2D61E6FB2FCE","user_header":"https://static001.geekbang.org/account/avatar/00/10/01/b9/73435279.jpg","comment_is_top":false,"comment_ctime":1635177618,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1635177618","product_id":100020801,"comment_content":"老师我发现一个问题，我表88条记录，age &gt; 100  应该没数据的 ，但是执行计划出现了磁盘排序<br>以下是我的sql <br><br>explain SELECT name , age  FROM driver_info where age &gt; 100  ORDER BY name ASC  LIMIT 1<br><br>我考虑了一下结合explain计算的一个均值*总页数 是不是这么理解，explain 执行计划是row是个大概值，根据扫描几页，每页符合条件的均值计算一下总占用sort_buffer 排序大小，大于sort_size，如果排序字段没有索引 就是用磁盘排序，有就是用索引排序。","like_count":0},{"had_liked":false,"id":317632,"user_name":"Geek_7e3067","can_delete":false,"product_type":"c1","uid":2757402,"ip_address":"","ucode":"7313D3275C8BD3","user_header":"","comment_is_top":false,"comment_ctime":1634872584,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1634872584","product_id":100020801,"comment_content":"mysql&gt; select *from c;<br>+----+------+<br>| id | a    |<br>+----+------+<br>|  1 |    2 |<br>+----+------+<br>1 row in set (0.01 sec)<br><br>mysql&gt; begin ;<br>Query OK, 0 rows affected (0.00 sec)<br><br>mysql&gt; select *from c where id = 1;<br>+----+------+<br>| id | a    |<br>+----+------+<br>|  1 |    2 |<br>+----+------+<br>1 row in set (0.00 sec)<br><br>mysql&gt; update set a = 3 where id = 1;<br>ERROR 1064 (42000): You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near &#39;set a = 3 where id = 1&#39; at line 1<br>mysql&gt; update c set a = 3 where id = 1;<br>Query OK, 0 rows affected (0.00 sec)<br>Rows matched: 1  Changed: 0  Warnings: 0<br><br>mysql&gt; select *from c where id = 1;<br>+----+------+<br>| id | a    |<br>+----+------+<br>|  1 |    2 |<br>+----+------+<br>1 row in set (0.00 sec)；<br>和文中的不一样<br>","like_count":0},{"had_liked":false,"id":316539,"user_name":"Geek_43013d","can_delete":false,"product_type":"c1","uid":2025657,"ip_address":"","ucode":"43742B19B6E407","user_header":"","comment_is_top":false,"comment_ctime":1634374949,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1634374949","product_id":100020801,"comment_content":"老师，我发现，如果一个列全部是0，bigdecimal 类型的列，desc比asc快很多，这个是为什么","like_count":0},{"had_liked":false,"id":316519,"user_name":"盘胧","can_delete":false,"product_type":"c1","uid":1650748,"ip_address":"","ucode":"5386CC4C92ECC2","user_header":"https://static001.geekbang.org/account/avatar/00/19/30/3c/0668d6ae.jpg","comment_is_top":false,"comment_ctime":1634368597,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1634368597","product_id":100020801,"comment_content":"order by 在8.0 的优化官方文档说明：https:&#47;&#47;dev.mysql.com&#47;doc&#47;refman&#47;8.0&#47;en&#47;order-by-optimization.html","like_count":0},{"had_liked":false,"id":315825,"user_name":"戒酒的李白","can_delete":false,"product_type":"c1","uid":2166073,"ip_address":"","ucode":"744E1A22761647","user_header":"https://thirdwx.qlogo.cn/mmopen/vi_32/k3YD3y3BzGDSdrwRJyJY4BXsNJibfM4uzOdDVKIAlFApR2FZCLg2ibrZtJ4vuahA3LHLW9GKzH5CMGqCDhWjhZqg/132","comment_is_top":false,"comment_ctime":1634010762,"is_pvip":true,"discussion_count":0,"race_medal":0,"score":"1634010762","product_id":100020801,"comment_content":"需要排序的sql语句， 如果select的字段都在索引中， 就会走using index，此时不会出现using fileindex。是不是说， 走覆盖索引的语句， 都不需要进行文件排序？","like_count":0},{"had_liked":false,"id":312504,"user_name":"Geek_26794c","can_delete":false,"product_type":"c1","uid":1944561,"ip_address":"","ucode":"BBF0B71B49472F","user_header":"https://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTJx6YiaEictwmdCYibD0icNpSvgLkFXtbu1I4ER9icqXMkBMibtfvTNhEm1B1fuU1e4ico3nrCO20HwyncKA/132","comment_is_top":false,"comment_ctime":1631845410,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1631845410","product_id":100020801,"comment_content":"老师，我想就工作中一个点说一下，首先mysql order by排序，遇到多字段排序，升序降序都有的情况下，一定会进行排序。所以我们常见按照日期排序，按照消费金额排序等，都会设置一个冗余字段作相反数存储在数据库中，如果是降序的不使用desc，而是使用相反数的asc方式进行排序。","like_count":0},{"had_liked":false,"id":311753,"user_name":"Geek_b9fe21","can_delete":false,"product_type":"c1","uid":1297516,"ip_address":"","ucode":"7B6E74577FC5DB","user_header":"https://static001.geekbang.org/account/avatar/00/13/cc/6c/740cadef.jpg","comment_is_top":false,"comment_ctime":1631443074,"is_pvip":false,"discussion_count":1,"race_medal":0,"score":"1631443074","product_id":100020801,"comment_content":"排序是在引擎层执行还是server层","like_count":0,"discussions":[{"author":{"id":2120690,"avatar":"","nickname":"风间","note":"","ucode":"2DA14C209AD31F","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":405562,"discussion_content":"server","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1634603210,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":300740,"user_name":"Geek_457f47","can_delete":false,"product_type":"c1","uid":1443589,"ip_address":"","ucode":"B9EB1B46AA4D85","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/iamkqQRZFTAQgclRqskib3n860CStDuxq2aiaZO7EicDfLJwCdZ9gZiajhBoTNuFKH47DLKO5C4GHxukN5L1VOpcR6Q/132","comment_is_top":false,"comment_ctime":1625366217,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1625366217","product_id":100020801,"comment_content":"表结构<br>CREATE TABLE `tcb_user` (<br>  `id` int NOT NULL AUTO_INCREMENT,<br>  `name` varchar(255) DEFAULT NULL,<br>  `age` int DEFAULT NULL,<br>  `version` mediumtext,<br>  PRIMARY KEY (`id`),<br>  KEY `index_name` (`name`) USING BTREE<br>) ENGINE=InnoDB AUTO_INCREMENT=10004 DEFAULT CHARSET=utf8mb3;<br><br>1.explain select * from tcb_user where name = &#39;赵六&#39; order by age;<br>这个是用到了排序<br>id  select_type table partitions  type  possible_keys key key_len ref rows  filtered  Extra<br>1 SIMPLE  tcb_user    ref index_name  index_name  768 const 5069  100.00  Using filesort<br><br><br>2.explain select * from tcb_user where name = &#39;赵六&#39; order by id; 中extra是空，根据主键排序，是有什么特殊的优化吗？<br>id  select_type table partitions  type  possible_keys key key_len ref rows  filtered  Extra<br>1 SIMPLE  tcb_user    ref index_name  index_name  768 const 5069  100.00  <br><br><br><br>3.还有老师，我目前安装的mysql是8.0.25<br>查看排序用到的临时文件时，没有对应的输出，不知道问什么，<br>QUERY TRACE MISSING_BYTES_BEYOND_MAX_MEM_SIZE INSUFFICIENT_PRIVILEGES<br>SET PROFILING = 1 {<br>  &quot;steps&quot;: [<br>  ]<br>} 0 0<br><br><br><br>问题，<br>1根据主键排序，执行计划中的extra为什么是空？<br><br>2老师查看临时文件的语句没有生效<br><br><br>","like_count":0},{"had_liked":false,"id":296743,"user_name":"Y-Meta","can_delete":false,"product_type":"c1","uid":2407688,"ip_address":"","ucode":"08A4D621F1F1C0","user_header":"https://static001.geekbang.org/account/avatar/00/24/bd/08/4c0f9d3a.jpg","comment_is_top":false,"comment_ctime":1623141949,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1623141949","product_id":100020801,"comment_content":"SELECT  id,sign,report_id,drill_json,enabled,gmt_create,gmt_modified,uid_modified  FROM compute_drill_data           ORDER BY gmt_create DESC LIMIT 10; <br>其中drill_json的数据类型为json类型，extra为Using filesort该语句报错[HY001][1038] Out of sort memory, consider increasing server sort buffer size；将类型换成text或不查drill_json或者gmt_create添加索引排序都不会报错,<br>想请问一下，为什么用json类型排序就会报错，mysql版本8.0.22","like_count":0},{"had_liked":false,"id":296071,"user_name":"沧海若为水","can_delete":false,"product_type":"c1","uid":1593208,"ip_address":"","ucode":"A86A02CEACBFB7","user_header":"https://static001.geekbang.org/account/avatar/00/18/4f/78/d6369896.jpg","comment_is_top":false,"comment_ctime":1622730421,"is_pvip":true,"discussion_count":0,"race_medal":0,"score":"1622730421","product_id":100020801,"comment_content":"老师，如果order  by的字段的值是相同的话，为什么会随机显示呢","like_count":0},{"had_liked":false,"id":290204,"user_name":"yezhizi","can_delete":false,"product_type":"c1","uid":1302047,"ip_address":"","ucode":"D179ED99286897","user_header":"https://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTJ9oIRvWZARRmB2hNAmSKOQddHYBJr3QXoT8ibtFicfj46PBOTOwGib6WAA3ES2HzzqqXl4ccEEwrLXw/132","comment_is_top":false,"comment_ctime":1619428661,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1619428661","product_id":100020801,"comment_content":"@林老师   用debug 模式看了一下  两次的update 还是有区别的。<br>第二次的update  没有 row_upd_step <br>T@2: | | | | | | | | &gt;row_upd_step<br>T@2: | | | | | | | | | &gt;row_upd<br>T@2: | | | | | | | | | | row_upd: table: wxb&#47;test<br>T@2: | | | | | | | | | | row_upd: info bits in update vector: 0x0<br>T@2: | | | | | | | | | | row_upd: foreign_id: NULL<br>T@2: | | | | | | | | | | ib_cur: update PRIMARY (41) by 6408: COMPACT RECORD(info_bits=0, 4 fields): {[8]   <br>     (0x0000000000000004),[6]      (0x000000000504),[7]    $  (0x04000000040100),[17]12345678900000001(0x010<br>2030405060708090000000000000001)}<br>T@2: | | | | | | | | | | &gt;btr_cur_search_to_nth_level<br>T@2: | | | | | | | | | | &lt;btr_cur_search_to_nth_level 1963<br>T@2: | | | | | | | | | | ib_cur: update PRIMARY (41) by 6408: COMPACT RECORD(info_bits=0, 4 fields): {[8]   <br>     (0x0000000000000004),[6]      (0x000000000504),[7]    $  (0x04000000040100),[17]12345678900000001(0x010<br>2030405060708090000000000000001)}<br>T@2: | | | | | | | | | &lt;row_upd 3069<br>T@2: | | | | | | | | &lt;row_upd_step 3223<br>","like_count":0},{"had_liked":false,"id":289838,"user_name":"KK","can_delete":false,"product_type":"c1","uid":1096397,"ip_address":"","ucode":"14C0858C413E00","user_header":"https://static001.geekbang.org/account/avatar/00/10/ba/cd/1f91aa44.jpg","comment_is_top":false,"comment_ctime":1619222951,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1619222951","product_id":100020801,"comment_content":"老师好，问题：文中表t，追加30个字段，<br>select 时，orderby 多加这30字段，造成超过max_length_for_sort_data的值。查询语句流程就是怎样？","like_count":0},{"had_liked":false,"id":287067,"user_name":"chengcl","can_delete":false,"product_type":"c1","uid":1703199,"ip_address":"","ucode":"741C3DA1358FEA","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/zd9lKwHQVM59F9UJLYkicichbpYsUAl5yH1IiaW6LHLX0SscYcHUxib0qFDNrQghbvxACk0bErHDVFECYMUEOr9icIw/132","comment_is_top":false,"comment_ctime":1617764966,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1617764966","product_id":100020801,"comment_content":"老师你好<br>关于上一章的课后问题解答中， 你提到了 “如果是 binlog_format=row 并且 binlog_row_image=FULL 的时候，由于 MySQL 需要在 binlog 里面记录所有的字段，所以在读数据的时候就会把所有数据都读出来了。” <br>前面你将change buffer的时候说的是数据页不在内存中的时候 change buffer机制会介入，那如果binlog 模式设置为row的时候，每次更新的时候是不是都会将需要更新的数据页读到内存中，这个时候 change buffer 是不是失效了呢？","like_count":0},{"had_liked":false,"id":286384,"user_name":"Geek_55e386","can_delete":false,"product_type":"c1","uid":1795793,"ip_address":"","ucode":"5A727F1323C2D0","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/zxkns28cIAUZIt3WjDb8G26qiccT84d9GMr9ZpbYR60TU1ibqSj9NoYVHlJvGF1kOltkqNDmEfJCqPuYVkue3WHg/132","comment_is_top":false,"comment_ctime":1617275842,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1617275842","product_id":100020801,"comment_content":"老师,我想知道 递减排序怎么办呢","like_count":0},{"had_liked":false,"id":285017,"user_name":"龙晓","can_delete":false,"product_type":"c1","uid":1043325,"ip_address":"","ucode":"FAF34F1C65D103","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/c9xpiakQ3OC1AlfCeW03lLnnb7mj5v35Hib8YDs66zpnVib2n2qFichFmFp2Ec4QDPR0dKh38MkBBLyD3bE4NiaanZQ/132","comment_is_top":false,"comment_ctime":1616580012,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1616580012","product_id":100020801,"comment_content":"老师在此篇中忽略了磁盘辅助排序的详细过程，后面在理解group by、union的章节存在较大困难，不知道老师是否可以补充或给与一些相关资料，谢谢！","like_count":0},{"had_liked":false,"id":280056,"user_name":"上杉夏香","can_delete":false,"product_type":"c1","uid":1521568,"ip_address":"","ucode":"9FDDE0979BCC8C","user_header":"https://static001.geekbang.org/account/avatar/00/17/37/a0/032d0828.jpg","comment_is_top":false,"comment_ctime":1614067577,"is_pvip":true,"discussion_count":0,"race_medal":0,"score":"1614067577","product_id":100020801,"comment_content":"老师，关于上一期的问题，我进行试验之后（就是图13的试验），发现普通的select语句返回的为（1，2）。我的理解，InnoDB存储引擎层确实会判断更新是否和原来一样，如果一样，则不进行更新。所以sessionA的update没有更新，也就是说id=1的记录的trx_id没有更新，sessionA的普通的select采用MVCC，返回（1，2），如果为select ... for update返回的为（1，3）这个是当前读没有问题。<br><br>图14的试验，sessionA的试验 update t set a = 3中，update的逻辑是先读后写，所以读是当前读，能够读到sessionB的更新，但是InnoDB发现更新没有改变，所以id=1的记录的trx_id没有更新为sessionA的trx_id，所以普通查询还是（1，2）<br><br>但是如果同样图14的试验，只不过将sessionA中的update语句变为 update t set a = 4 where id = 1 and a = 3;执行这一语句，发现sessionA是更新了的，a变成了4；此时普通select会读到a=4（毕竟是自己的事务，自己事务做的修改肯定是可见的）。","like_count":0},{"had_liked":false,"id":277078,"user_name":"zenk","can_delete":false,"product_type":"c1","uid":1013669,"ip_address":"","ucode":"B235D5EBCF49BC","user_header":"https://static001.geekbang.org/account/avatar/00/0f/77/a5/c5ae871d.jpg","comment_is_top":false,"comment_ctime":1612254995,"is_pvip":true,"discussion_count":0,"race_medal":0,"score":"1612254995","product_id":100020801,"comment_content":"select * from tableName limit 100<br><br>这样的查询语句,是不是一定按照主键的顺序返回数据呢","like_count":0},{"had_liked":false,"id":262245,"user_name":"怕什么，抱紧我","can_delete":false,"product_type":"c1","uid":1318633,"ip_address":"","ucode":"CBCEA76E9EF33B","user_header":"https://static001.geekbang.org/account/avatar/00/14/1e/e9/dcc63d8f.jpg","comment_is_top":false,"comment_ctime":1605672385,"is_pvip":true,"discussion_count":1,"race_medal":0,"score":"1605672385","product_id":100020801,"comment_content":"结论：联合索引起不到排序作用,会有额外的排序过程;<br>原因：<br>打个比方：有sex,age(性别,年龄)两个字段,sex=1表示男生,sex=2表示女生；<br>如果建立(sex,age)联合索引,它会先按照sex排序,然后按照age排序;<br>初始数据和排序结果如下:<br>sex,age |  联合索引排序 |  age排序 <br>  2,10    |       1,3             |  2,1<br>  1,9      |       1,9             |  1,3<br>  2,1      |       2,1             |  1,9 <br>  2,14    |       2,10           |  2,10<br>  1, 3     |       2,14           |  2,14<br>从这里可以看出,联合索引和单个字段的排序不一样,索引起不到排序的作用;<br>如何解决：<br>方法一：给name字段单独的加一个索引;<br>方法二：改变联合索引的顺序,即把city_name(city,name)变成name_city(name,city);<br>打个比方：<br>初始数据如下:<br>联合索引(age,sex)会先按照age排序,再按照sex排序;<br>sex,age |  联合索引age,sex排序 |  age排序 <br>  2,10    |       1,2                        |  2,1<br>  1,9      |       3,1                        |  1,3<br>  2,1      |       9,1                        |  1,9 <br>  2,14    |       10,2                      |  2,10<br>  1, 3     |       14,2                      |  2,14<br>除了字段的前后发生变化,联合索引age,sex和age排序是一模一样的;<br><br><br><br><br>","like_count":0,"discussions":[{"author":{"id":2343743,"avatar":"https://static001.geekbang.org/account/avatar/00/23/c3/3f/61d59727.jpg","nickname":"二木林叫森","note":"","ucode":"FC8BCDE689B4F8","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":371390,"discussion_content":"联合索引也可以起到排序作用吧，最不过使用的时候要符合最左前缀原则","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1619753154,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":252240,"user_name":"图灵机","can_delete":false,"product_type":"c1","uid":2034632,"ip_address":"","ucode":"EB02DB653AD591","user_header":"https://static001.geekbang.org/account/avatar/00/1f/0b/c8/15f055d3.jpg","comment_is_top":false,"comment_ctime":1602210743,"is_pvip":true,"discussion_count":0,"race_medal":0,"score":"1602210743","product_id":100020801,"comment_content":"rowid 排序第二次回表查询不会查缓存吗？毕竟第一次加载要排序的字段已经把记录都加载到内存了","like_count":0},{"had_liked":false,"id":250524,"user_name":"牛掰的斐","can_delete":false,"product_type":"c1","uid":1337842,"ip_address":"","ucode":"A0265CCE3F4FC0","user_header":"https://static001.geekbang.org/account/avatar/00/14/69/f2/b17d73ff.jpg","comment_is_top":false,"comment_ctime":1601117108,"is_pvip":false,"discussion_count":1,"race_medal":0,"score":"1601117108","product_id":100020801,"comment_content":"记录一下，如果条件允许（小于max_length_for_sort_data），则全字段排序，即把符合条件的行读到server层的sort_buffer中（不够时存到文件，通过归并排序），排序（快速排序）后返回；如果条件不允许，则放入排序列和主键列，排序后通过主键回表。<br><br>当然，如果排序字段有索引，则不用进行排序，可以查找到符合条件的索引后，遍历获取之后的数据。","like_count":0,"discussions":[{"author":{"id":1965699,"avatar":"https://static001.geekbang.org/account/avatar/00/1d/fe/83/df562574.jpg","nickname":"慎独明强","note":"","ucode":"DC2F7F2C0C8F60","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":309465,"discussion_content":"是的，这样就把name索引全部扫描一遍再去过滤city","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1601296644,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":249043,"user_name":"Geek8819","can_delete":false,"product_type":"c1","uid":2028950,"ip_address":"","ucode":"521AEDAB2EED81","user_header":"https://static001.geekbang.org/account/avatar/00/1e/f5/96/e963b41b.jpg","comment_is_top":false,"comment_ctime":1600412240,"is_pvip":false,"discussion_count":2,"race_medal":0,"score":"1600412240","product_id":100020801,"comment_content":"提问，假设按照表T[表有city索引]的查询 select  id From where city=&#39;杭州&#39; order by  id desc ，这个时候会不会走文件排序","like_count":0,"discussions":[{"author":{"id":1970443,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTIx1V1QAxC4NHaxYZGyuibBN8lcURJWc5nrnO4yic1kxnDemYV2FJGialf47kYX9qtDnZZOfe1SJeLicg/132","nickname":"lleft","note":"","ucode":"D573EB509455AE","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":372793,"discussion_content":"这个不需要排序了，走覆盖索引了，天然有序的","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1620464305,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1788647,"avatar":"https://static001.geekbang.org/account/avatar/00/1b/4a/e7/6c16af5d.jpg","nickname":"汉江","note":"","ucode":"01622D984B8F9B","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":343251,"discussion_content":"这个要看扩展索引有没有打开","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1610973749,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":245386,"user_name":"心无止境","can_delete":false,"product_type":"c1","uid":1196962,"ip_address":"","ucode":"713ACD50EAABE0","user_header":"https://static001.geekbang.org/account/avatar/00/12/43/a2/551bc2de.jpg","comment_is_top":false,"comment_ctime":1598929179,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1598929179","product_id":100020801,"comment_content":"老师及各位同仁，你们好，请教一个问题，如果要实现这样的需求，返回杭州市的前1000年用户(按名字自增)，更好第1000名用户和1001名用户的name相同，这时候要求第1000应返回年龄小的。其实就是name相同时按照age排序，脚本是 select city,name,age from t where city = &#39;杭州&#39; order by name desc,age  limit 0 , 20。<br>对表索引进行了调整，由city和name的联合索引调整为了city、name、age三个字段的联合索引。<br>再explain了脚本，发现Extra里面是Using where; Using index; Using filesort。<br><br>是不是两个字段的排序就不支持根据联合索引获得有序的数据？<br><br>有没有其他方式能更高效的实现两字段排序？","like_count":0},{"had_liked":false,"id":243961,"user_name":"考拉出山","can_delete":false,"product_type":"c1","uid":1303954,"ip_address":"","ucode":"917E35FD7B2D06","user_header":"https://wx.qlogo.cn/mmopen/vi_32/1mOvT5fApeicXppMP3zADG6XIPicNt5D9dL6y46SF5UUcH0hicG21LM6xSgHJj5oAdzCyeGtLZYHYmlvaFwecrGOA/132","comment_is_top":false,"comment_ctime":1598341197,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1598341197","product_id":100020801,"comment_content":"第一个选项是，MySQL 读出数据，发现值与原来相同，不更新，直接返回，执行结束。这里我们可以用一个锁实验来确认。<br>个人理解作者都意思是：<br><br>session A  与 session B 更新的值都与 数据库相同  a = 2 ，如果session B 是先读取，发现相同就直接返回。<br>session B 就不会加锁了。 <br>但是 update 进行的是当前读，类似 select for update ,因为 session A  阻塞了 session B 进行了当前读，<br>因此并不能说明Session B 不是先读取后发现 相同就直接返回","like_count":0},{"had_liked":false,"id":242758,"user_name":"考拉出山","can_delete":false,"product_type":"c1","uid":1303954,"ip_address":"","ucode":"917E35FD7B2D06","user_header":"https://wx.qlogo.cn/mmopen/vi_32/1mOvT5fApeicXppMP3zADG6XIPicNt5D9dL6y46SF5UUcH0hicG21LM6xSgHJj5oAdzCyeGtLZYHYmlvaFwecrGOA/132","comment_is_top":false,"comment_ctime":1597834100,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1597834100","product_id":100020801,"comment_content":"第二个选项，session A. 在update的时候就发生了一致性读，虽然后面select的时候读到的是自己的版本。但是update时候读了session B的。这个例子不是很好？","like_count":0},{"had_liked":false,"id":240726,"user_name":"moonfox","can_delete":false,"product_type":"c1","uid":1526355,"ip_address":"","ucode":"902BFF40EFA9FA","user_header":"https://static001.geekbang.org/account/avatar/00/17/4a/53/063f9d17.jpg","comment_is_top":false,"comment_ctime":1597045868,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1597045868","product_id":100020801,"comment_content":"请问测试用的mysql 数据可以从哪里下载呀","like_count":0},{"had_liked":false,"id":239859,"user_name":"乖，摸摸头","can_delete":false,"product_type":"c1","uid":1611745,"ip_address":"","ucode":"BD92741A11D3CD","user_header":"https://static001.geekbang.org/account/avatar/00/18/97/e1/0f4d90ff.jpg","comment_is_top":false,"comment_ctime":1596678712,"is_pvip":true,"discussion_count":0,"race_medal":0,"score":"1596678712","product_id":100020801,"comment_content":"CREATE TABLE `test`.`Untitled`  (<br>  `id` int(11) NOT NULL AUTO_INCREMENT,<br>  `type` tinyint(4) NOT NULL,<br>  `username` varchar(20) CHARACTER SET utf8mb4 COLLATE utf8mb4_unicode_ci NOT NULL,<br>  `s` varchar(255) CHARACTER SET utf8mb4 COLLATE utf8mb4_unicode_ci NULL DEFAULT NULL,<br>  `utime` int(11) NOT NULL,<br>  PRIMARY KEY (`id`) USING BTREE,<br>  INDEX `idx_type_utime`(`type`, `utime`) USING BTREE,<br>  INDEX `idx_utime_type`(`utime`, `type`) USING BTREE<br>) ENGINE = InnoDB AUTO_INCREMENT = 20002 CHARACTER SET = utf8mb4 COLLATE = utf8mb4_unicode_ci ROW_FORMAT = Dynamic;<br><br>mysql&gt; explain select * from demo where type in(1,2) order by utime limit 10;<br>+----+-------------+-------+------------+-------+----------------+----------------+---------+------+------+----------+-------------+<br>| id | select_type | table | partitions | type  | possible_keys  | key            | key_len | ref  | rows | filtered | Extra       |<br>+----+-------------+-------+------------+-------+----------------+----------------+---------+------+------+----------+-------------+<br>|  1 | SIMPLE      | demo  | NULL       | index | idx_type_utime | idx_utime_type | 5       | NULL |   30 |    32.81 | Using where |<br>+----+-------------+-------+------------+-------+----------------+----------------+---------+------+------+----------+-------------+<br>1 row in set, 1 warning (0.00 sec)<br><br>所以 建一个联合索引索引 idx_username_city  就能使用索引了","like_count":0},{"had_liked":false,"id":238238,"user_name":"巴萨巴萨！！！","can_delete":false,"product_type":"c1","uid":1556722,"ip_address":"","ucode":"C204AD44347738","user_header":"https://static001.geekbang.org/account/avatar/00/17/c0/f2/1b2ed786.jpg","comment_is_top":false,"comment_ctime":1596099841,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1596099841","product_id":100020801,"comment_content":"思考题回答：肯定有，如果是order by city就没有排序的过程了，跟最左前缀索引道理一样","like_count":0},{"had_liked":false,"id":232746,"user_name":"Ps天花乱坠","can_delete":false,"product_type":"c1","uid":2038714,"ip_address":"","ucode":"E95A5A2E3B5EA6","user_header":"https://static001.geekbang.org/account/avatar/00/1f/1b/ba/1a929eaf.jpg","comment_is_top":false,"comment_ctime":1594107413,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1594107413","product_id":100020801,"comment_content":"我的想法是会排序，猜测因为name是无序的，limit那个没有想法。。","like_count":0},{"had_liked":false,"id":228548,"user_name":"KK","can_delete":false,"product_type":"c1","uid":1324863,"ip_address":"","ucode":"FFC31A3FE3A285","user_header":"https://static001.geekbang.org/account/avatar/00/14/37/3f/a9127a73.jpg","comment_is_top":false,"comment_ctime":1592732372,"is_pvip":false,"discussion_count":2,"race_medal":1,"score":"1592732372","product_id":100020801,"comment_content":"“在创建（city，name）联合索引，只要 city 的值是杭州，name 的值就一定是有序的”，这是什么原因，没有理解，望老师解答一下","like_count":0,"discussions":[{"author":{"id":2326134,"avatar":"https://static001.geekbang.org/account/avatar/00/23/7e/76/368394bf.jpg","nickname":"哦","note":"","ucode":"C776659DED9D79","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":337092,"discussion_content":"建立索引的时候，city不同按city排序，city相同则按name排序，所以说city相同的时候name是有序的","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1608794569,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":1,"child_discussions":[{"author":{"id":1324863,"avatar":"https://static001.geekbang.org/account/avatar/00/14/37/3f/a9127a73.jpg","nickname":"KK","note":"","ucode":"FFC31A3FE3A285","race_medal":1,"user_type":1,"is_pvip":false},"reply_author":{"id":2326134,"avatar":"https://static001.geekbang.org/account/avatar/00/23/7e/76/368394bf.jpg","nickname":"哦","note":"","ucode":"C776659DED9D79","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":337653,"discussion_content":"噢 明白啦 谢谢","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1609019196,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":337092,"ip_address":""},"score":337653,"extra":""}]}]},{"had_liked":false,"id":223776,"user_name":"Geek","can_delete":false,"product_type":"c1","uid":2016657,"ip_address":"","ucode":"07AD2487087D17","user_header":"https://thirdwx.qlogo.cn/mmopen/vi_32/AkS4rJAdkt5icChtbYGLLP2TficUDBHYCwUDHsP8wtfPeq6YUWYyvcKbZWV5p1hQuxQNaZf0G4axI5ibqPR7ia6ZCg/132","comment_is_top":false,"comment_ctime":1591178021,"is_pvip":false,"discussion_count":1,"race_medal":0,"score":"1591178021","product_id":100020801,"comment_content":"ROWID排序为啥city name age长度是36啊，按字符或字节来算也不是36啊","like_count":0,"discussions":[{"author":{"id":1465412,"avatar":"https://static001.geekbang.org/account/avatar/00/16/5c/44/d07c0865.jpg","nickname":"Geek_d960af","note":"","ucode":"C59AEF44BD8691","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":298302,"discussion_content":"感觉应该是  俩varchar(16)是32，一个int 4。 ","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1597241218,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":217925,"user_name":"shiziwen","can_delete":false,"product_type":"c1","uid":1016917,"ip_address":"","ucode":"ADADC770D82D66","user_header":"https://static001.geekbang.org/account/avatar/00/0f/84/55/1e40bd61.jpg","comment_is_top":false,"comment_ctime":1589657544,"is_pvip":false,"discussion_count":1,"race_medal":0,"score":"1589657544","product_id":100020801,"comment_content":"图14中，update并没有改变db的原因，是因为update语句自身判断了set的数据和where语句中的值一致，所以不会改变，并且也不会读db，还是因为update的当前读，读到了session B中的修改，发现a得值已经是3了，根本不需要修改？<br>是以上哪种操作呢？<br>","like_count":0,"discussions":[{"author":{"id":1465412,"avatar":"https://static001.geekbang.org/account/avatar/00/16/5c/44/d07c0865.jpg","nickname":"Geek_d960af","note":"","ucode":"C59AEF44BD8691","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":298555,"discussion_content":"同问。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1597325023,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":215989,"user_name":"BugBean","can_delete":false,"product_type":"c1","uid":1834181,"ip_address":"","ucode":"B51232281AD9BC","user_header":"https://static001.geekbang.org/account/avatar/00/1b/fc/c5/ff8b770e.jpg","comment_is_top":false,"comment_ctime":1589163950,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1589163950","product_id":100020801,"comment_content":"思考题：<br>需要排序，因为根据最左前缀原则，city=&#39;杭州&#39;的name是有序的，city=&#39;苏州&#39;的name也是有序的，但这两个集合之间是无序的，所以需要重新排序","like_count":0},{"had_liked":false,"id":214312,"user_name":"星期八","can_delete":false,"product_type":"c1","uid":1440429,"ip_address":"","ucode":"D8C66E7F61B0D1","user_header":"https://static001.geekbang.org/account/avatar/00/15/fa/ad/3fa02ac7.jpg","comment_is_top":false,"comment_ctime":1588721724,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1588721724","product_id":100020801,"comment_content":"1 全字段排序<br>不走sort_buuffer内存排序，有磁盘排序<br>2 rowid排序<br>限制行大小，走内存排序<br> 回表<br>","like_count":0},{"had_liked":false,"id":213457,"user_name":"辰星","can_delete":false,"product_type":"c1","uid":1037406,"ip_address":"","ucode":"C05AF875B85718","user_header":"https://static001.geekbang.org/account/avatar/00/0f/d4/5e/b8bfa75d.jpg","comment_is_top":false,"comment_ctime":1588419502,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1588419502","product_id":100020801,"comment_content":"老师，表数据可否共享下？","like_count":0},{"had_liked":false,"id":212962,"user_name":"达达队长","can_delete":false,"product_type":"c1","uid":1117597,"ip_address":"","ucode":"1C3F2E4F6B7637","user_header":"https://static001.geekbang.org/account/avatar/00/11/0d/9d/58d09086.jpg","comment_is_top":false,"comment_ctime":1588248895,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1588248895","product_id":100020801,"comment_content":"老师有个问题：图5 row id 排序的时候，最后获取1000条生成结果集，是server 批量向引擎层获取1000条吗","like_count":0},{"had_liked":false,"id":211633,"user_name":"甜宝仙女的专属饲养员","can_delete":false,"product_type":"c1","uid":1443145,"ip_address":"","ucode":"6D2039BA22551F","user_header":"https://thirdwx.qlogo.cn/mmopen/vi_32/DYAIOgq83eozpyAUaM6ra1hqeIsd4v0fulS4zVmxDM3LQyqGo0BFM141QpQnSib6oHdQricGrRxusp5rflGn54ew/132","comment_is_top":false,"comment_ctime":1587991305,"is_pvip":true,"discussion_count":0,"race_medal":0,"score":"1587991305","product_id":100020801,"comment_content":"这个server层的优化器算法感觉很吊啊，他几乎能挑选出最优的方法去执行sql，这个算法很神奇。","like_count":0},{"had_liked":false,"id":205870,"user_name":"Khirye","can_delete":false,"product_type":"c1","uid":1080985,"ip_address":"","ucode":"6C54C126FA54B8","user_header":"https://static001.geekbang.org/account/avatar/00/10/7e/99/c4302030.jpg","comment_is_top":false,"comment_ctime":1586749391,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1586749391","product_id":100020801,"comment_content":"老师您好，有个问题请教。内存不够时会使用外部文件辅助排序，一般会使用归并排序算法？归并排序算法的空间复杂度不是O(n)吗？用归并排序算法不是更加耗费内存吗？望解惑🙏","like_count":0},{"had_liked":false,"id":205091,"user_name":"斑斑驳驳","can_delete":false,"product_type":"c1","uid":1122057,"ip_address":"","ucode":"ADFC607C549620","user_header":"https://static001.geekbang.org/account/avatar/00/11/1f/09/abb7bfe3.jpg","comment_is_top":false,"comment_ctime":1586526303,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1586526303","product_id":100020801,"comment_content":"老师，图13出，sessionB 进行了更新；而此后sessionA 执行update时不应该是当前读吗，为什么说sessionA的第二个select的结果只能是他自己的呢？","like_count":0},{"had_liked":false,"id":204799,"user_name":"咕小咚","can_delete":false,"product_type":"c1","uid":1267621,"ip_address":"","ucode":"1B6AF9766AB081","user_header":"https://static001.geekbang.org/account/avatar/00/13/57/a5/4d8f6e7d.jpg","comment_is_top":false,"comment_ctime":1586476974,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1586476974","product_id":100020801,"comment_content":"老师，文中的例子用了city,name的联合对排序有加速，如果我有两个单独的索引，一个city,一个name呢？","like_count":0},{"had_liked":false,"id":202152,"user_name":"骋","can_delete":false,"product_type":"c1","uid":1241618,"ip_address":"","ucode":"6FC534BA9FCE3C","user_header":"https://static001.geekbang.org/account/avatar/00/12/f2/12/50eff143.jpg","comment_is_top":false,"comment_ctime":1585911205,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1585911205","product_id":100020801,"comment_content":"老师你好，请问下max_length_for_sort_data设置成多少合适？","like_count":0},{"had_liked":false,"id":200608,"user_name":"乐云付","can_delete":false,"product_type":"c1","uid":1310652,"ip_address":"","ucode":"26BFEE1DA3ED59","user_header":"","comment_is_top":false,"comment_ctime":1585623817,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1585623817","product_id":100020801,"comment_content":"老师，你好，全字段排序时的第一个步骤：初始化 sort_buffer，确定放入 name、city、age 这三个字段；<br><br>这里是怎么确定放入什么字段进入sort_buffer的呢？<br>如果查询语句为select city,age from t where city=&#39;杭州&#39; order by name limit 1000  ;<br>是否也是放入name、city、age 这三个字段到sort_buffer呢？<br>我是否可以这样理解：全字段排序时，sort_buffer是放查询条件字段和order by条件字段","like_count":0},{"had_liked":false,"id":196356,"user_name":"T.Y","can_delete":false,"product_type":"c1","uid":1105354,"ip_address":"","ucode":"243C96604F1CAA","user_header":"https://static001.geekbang.org/account/avatar/00/10/dd/ca/fe3f7f0e.jpg","comment_is_top":false,"comment_ctime":1585275251,"is_pvip":true,"discussion_count":0,"race_medal":0,"score":"1585275251","product_id":100020801,"comment_content":"想问一下老师，如果查询sql是 &quot;select city,name,age from t where city=&#39;杭州&#39; order by name desc&quot;，即倒序排序，在b+树叶子节点，指针需要从city=&#39;杭州&#39;的地方开始逆向遍历，如图2所示，mysql是如何快速定位到该位置的？","like_count":0},{"had_liked":false,"id":196098,"user_name":"Ryan","can_delete":false,"product_type":"c1","uid":1667987,"ip_address":"","ucode":"95BBBEE5B23878","user_header":"https://static001.geekbang.org/account/avatar/00/19/73/93/0a3a1e5b.jpg","comment_is_top":false,"comment_ctime":1585235211,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1585235211","product_id":100020801,"comment_content":"如果 语句的排序是按照 name asc,age desc,那执行的流程是怎样的？在全字段排序时，排序执行一次（一次性按照 name asc，age desc）还是两次（先按照name asc排序得到一个结果集，然后再按照age desc 再排依稀）？还有rowid排序时的流程呢？","like_count":0},{"had_liked":false,"id":194751,"user_name":"喻茂","can_delete":false,"product_type":"c1","uid":1318661,"ip_address":"","ucode":"C8BD8086A17365","user_header":"https://static001.geekbang.org/account/avatar/00/14/1f/05/8a06692e.jpg","comment_is_top":false,"comment_ctime":1585103020,"is_pvip":false,"discussion_count":1,"race_medal":0,"score":"1585103020","product_id":100020801,"comment_content":"MariaDB [test]&gt; select * from information_schema.optimizer_trace;<br>ERROR 1109 (42S02): Unknown table &#39;optimizer_trace&#39; in information_schema<br><br>老师 MariaDB中没有这个表，对应时哪个表？","like_count":0,"discussions":[{"author":{"id":1731404,"avatar":"https://static001.geekbang.org/account/avatar/00/1a/6b/4c/a86dc27b.jpg","nickname":"周星星","note":"","ucode":"131C0D981DECAB","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":213807,"discussion_content":"哥们，你跑mysql专栏里来问MariaDB。。。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1585124058,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":190743,"user_name":"探索无止境","can_delete":false,"product_type":"c1","uid":1044178,"ip_address":"","ucode":"91D2A9907DFA79","user_header":"https://static001.geekbang.org/account/avatar/00/0f/ee/d2/7024431c.jpg","comment_is_top":false,"comment_ctime":1584689233,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1584689233","product_id":100020801,"comment_content":"老师您好，有个疑问，文中描述的第一次排序时，只有city建立了索引，所以当我们取值city,name,age的时候，name本身还需要排序，所以执行计划看到的也是需要排序。当我们建立了city,name作为联合索引之后，就不需要排序了？但此时还有一个age字段，age字段不需要排序吗？这个有点不理解，望指点！","like_count":0},{"had_liked":false,"id":188637,"user_name":"Geek_ccf628","can_delete":false,"product_type":"c1","uid":1908867,"ip_address":"","ucode":"8C0D5F7B912541","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/dJPntZMwxAEZJNNdjTCoGqPrRDPjz3sgwfo5Y9rSkPQKzjW8zFgsPYL2jxQQyW1icT9oAiar4Axu9S6Rw4p3c88Q/132","comment_is_top":false,"comment_ctime":1584380006,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1584380006","product_id":100020801,"comment_content":"在上期问答中，排除第二个选项的可见性实验说明了什么，为什么说“现在它返回的是 (1,3)，表示它看见了某个新的版本，这个版本只能是 session A 自己的 update 语句做更新的时候生成”这个我也看懂了，但是然后就断定是选项3了，是不是遗漏说明了什么，没想明白，望有人给点提示解释下","like_count":0},{"had_liked":false,"id":186950,"user_name":"fgdgtz","can_delete":false,"product_type":"c1","uid":1240401,"ip_address":"","ucode":"486CC4ACCC015C","user_header":"","comment_is_top":false,"comment_ctime":1583978392,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1583978392","product_id":100020801,"comment_content":"你好老师，我想问问如果是 order by 多个字段排序的执行流程是什么样的呢？<br>比如 有40000行 order by a desc,b desc limit 1000 ,a字段有索引，b字段无索引，a字段保存的是时间戳，有少部分时间戳是同样的，此时explain 会有 Using filesort，这样放入sort_buffer 是40000行 还是 大于1000行而小于40000行呢？或是扫描了多少行？","like_count":0},{"had_liked":false,"id":184551,"user_name":"乔丹","can_delete":false,"product_type":"c1","uid":1217413,"ip_address":"","ucode":"D832A9F97A0C7E","user_header":"https://static001.geekbang.org/account/avatar/00/12/93/85/f5d9474c.jpg","comment_is_top":false,"comment_ctime":1583335663,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1583335663","product_id":100020801,"comment_content":"1. order by它有以下几种排序：1. 全字段排序，根据内存大小来决定在内存，还是在文件里面排序。 2. rowid 排序：所包含的字符太长，它就会先只取出id和排序字段先进行排序。 然后再根据id去表里面取数据，组成结果，返回给客户端。3. 将要取的字段和排序字段放入索引中，组成联合索引，来提高性能。","like_count":0},{"had_liked":false,"id":179956,"user_name":"泊","can_delete":false,"product_type":"c1","uid":1557092,"ip_address":"","ucode":"3E9275288F1B0D","user_header":"https://static001.geekbang.org/account/avatar/00/17/c2/64/5cd6efa0.jpg","comment_is_top":false,"comment_ctime":1582126703,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1582126703","product_id":100020801,"comment_content":"上一起更新的问题为什么加锁了第一种和第二种方式就不成立了啊，一时间没明白啊？","like_count":0},{"had_liked":false,"id":177730,"user_name":"李心宇🦉","can_delete":false,"product_type":"c1","uid":1208306,"ip_address":"","ucode":"C381CA80170D5B","user_header":"https://static001.geekbang.org/account/avatar/00/12/6f/f2/1f77b0bd.jpg","comment_is_top":false,"comment_ctime":1581483856,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1581483856","product_id":100020801,"comment_content":"老师好，请教两个问题<br>extra字段：using index - 索引覆盖，using index condition - 没有索引覆盖，是否正确。<br>假设有联合索引 c_d<br>select * from t where c = xxx order by d desc;<br>这个sql是不需要filesort的，但是由于是desc，extra字段显示 Backward index scan， 对于Backward index scan引擎的执行过程是怎样的？","like_count":0},{"had_liked":false,"id":176999,"user_name":"陈大头","can_delete":false,"product_type":"c1","uid":1335400,"ip_address":"","ucode":"F1CA8837BF1E5C","user_header":"https://static001.geekbang.org/account/avatar/00/14/60/68/626cb455.jpg","comment_is_top":false,"comment_ctime":1581245553,"is_pvip":false,"discussion_count":2,"race_medal":0,"score":"1581245553","product_id":100020801,"comment_content":"我想问一个问题：用limit1000，10和where ID&gt;传第1000行的ID limit 1，10这两个做法是哪个更好一些？","like_count":0,"discussions":[{"author":{"id":1335400,"avatar":"https://static001.geekbang.org/account/avatar/00/14/60/68/626cb455.jpg","nickname":"陈大头","note":"","ucode":"F1CA8837BF1E5C","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":197848,"discussion_content":"看来跟mongo的是一样的意思，我懂了，谢谢你","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1583453777,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1615539,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTI6LXcIqb5K48nia8d4zmdsD1M9AZeyXoGrLzX5xvqfN0fqXOsYKUWLbZvZ8TtJCXWmYbCkCXg93dQ/132","nickname":"漏脚脖","note":"","ucode":"214AE52EC201E6","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":195703,"discussion_content":"后者好，通过主键索引直接能定位到id，然后直接取10行\n前者就是扫到了第1000行，再扫10行","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1583299984,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":172877,"user_name":"Geek_55a272","can_delete":false,"product_type":"c1","uid":1674602,"ip_address":"","ucode":"7B12A9B322B3BF","user_header":"https://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTJPHfGiaByESiaHPWbfQicjgap3unxDsxlG6JuUCNvEFJNLibNjeX4CQYNtsvXBXqTpBERUIPyiagGBXbg/132","comment_is_top":false,"comment_ctime":1579346749,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1579346749","product_id":100020801,"comment_content":"1)<br>mysql&gt; select * from t where city in (&#39;杭州&#39;,&quot; 苏州 &quot;) order by name limit 100;<br>需要排序<br>原因是索引顺序城市、名称 与 单独按name排序的顺序不一致。<br><br>2）如果不想mysql排序<br>方案a<br>可以执行两条语句<br>select * from t where city = &#39;杭州&#39; limit 100;<br>select * from t where city = &#39;苏州&#39; limit 100;<br>然后把200条记录在java中排序。<br>方案b<br>分别取前100，然后在数据端对200条数据进行排序。可以sort buffer就可以完成排序了。<br>少了一次应用程序与数据库的网络交互<br>select * from (<br>select * from t where city = &#39;杭州&#39; limit 100<br>union all<br>  select * from t where city = &#39;苏州&#39; limit 100<br>) as tt order by name limit 100<br>关于分页优化<br>则需要通过延迟关联来达到减小内存消耗的目的<br>业务sql如下<br>select t.* from t inner join<br>(<br> select id from t where city in (&#39;杭州&#39;,&quot; 苏州 &quot;) order by name limit 100 )<br>t1<br>on t.id = t1.id ","like_count":0},{"had_liked":false,"id":172006,"user_name":"天亮前说晚安","can_delete":false,"product_type":"c1","uid":1541014,"ip_address":"","ucode":"1D82EE562A7C71","user_header":"https://static001.geekbang.org/account/avatar/00/17/83/96/73ff13a0.jpg","comment_is_top":false,"comment_ctime":1579069660,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1579069660","product_id":100020801,"comment_content":"是不是可以理解为调整max_length_for_sort_data 和 sort_buffer_size 参数是可以进行排序调优的？因为堆的数量太多，排序就慢，应该维持堆的数量和CPU核数相近效率最高。走Rowid排序模式每条数据需要多回表一次。","like_count":0},{"had_liked":false,"id":172000,"user_name":"天亮前说晚安","can_delete":false,"product_type":"c1","uid":1541014,"ip_address":"","ucode":"1D82EE562A7C71","user_header":"https://static001.geekbang.org/account/avatar/00/17/83/96/73ff13a0.jpg","comment_is_top":false,"comment_ctime":1579068565,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1579068565","product_id":100020801,"comment_content":"select * from T where city = &#39;杭州&#39; order by name desc limit 10,10 在index(city,name)的情况下，首先从索引树种查询出满足条件的id 并且 判断位置是否正确，如果满足两者就根据id回表查询数据，返回结果集。不知道理解对不对？<br>总结一下就是：where后面的字段全中索引就不需要要排序，否则就需要排序；","like_count":0},{"had_liked":false,"id":171118,"user_name":"波波","can_delete":false,"product_type":"c1","uid":1530378,"ip_address":"","ucode":"B47E725A54D1E7","user_header":"https://static001.geekbang.org/account/avatar/00/17/5a/0a/8cb68aff.jpg","comment_is_top":false,"comment_ctime":1578849052,"is_pvip":true,"discussion_count":1,"race_medal":0,"score":"1578849052","product_id":100020801,"comment_content":"老师，我遇到一个问题，使用order by的时候没有走索引 ，可以帮我分析下原因吗？<br><br>1、索引没有生效：<br>CREATE TABLE `user_info` (<br>  `user_id` int(11) NOT NULL AUTO_INCREMENT,<br>  `user_name` varchar(225) DEFAULT NULL,<br>  `user_password` varchar(225) DEFAULT NULL,<br>  `state` varchar(1) DEFAULT NULL,<br>  PRIMARY KEY (`user_id`),<br>  KEY `index_name` (`user_name`(191))<br>) ENGINE=InnoDB AUTO_INCREMENT=0 DEFAULT CHARSET=utf8mb4<br><br> 表有一百多万数据。在 user_name 上建立了索引。<br>问题：通过执行计划 explain 分析 <br>SELECT user_name from user_info ORDER BY user_name LIMIT 300; 没有走索引。<br>显示 filesort","like_count":0,"discussions":[{"author":{"id":1135593,"avatar":"https://static001.geekbang.org/account/avatar/00/11/53/e9/f244988e.jpg","nickname":"NIRVANA","note":"","ucode":"F3A979679AA44E","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":292013,"discussion_content":"是走了全表扫描吗？","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1595051403,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":165191,"user_name":"杨松","can_delete":false,"product_type":"c1","uid":1512517,"ip_address":"","ucode":"FB3C73BC44C94D","user_header":"https://static001.geekbang.org/account/avatar/00/17/14/45/adf079ae.jpg","comment_is_top":false,"comment_ctime":1577177910,"is_pvip":false,"discussion_count":1,"race_medal":0,"score":"1577177910","product_id":100020801,"comment_content":"老师您好，我遇到个问题，和这节课没什么关系，但困扰很久，不知道老师和一起学习的同学们是否有好的建议。问题如下：<br>我单位有俩个网段：132.XX.XX.XX和10.XX.XX.XX，我现在有一台centos7的服务器，里面部署着基于springboot开发的一个小系统，我现在想在该服务器上配置俩块网卡，132.XX.XX.101和10.XX.XX.101，想让两个网段的用户都可以访问，但配置过程中发现我只能在一块网卡的配置文件中添加网关，这样现在造成只能是网关的那个网段可以访问系统，另一个网段的用户根本平ping不通，请问大家有什么好办法吗？","like_count":0,"discussions":[{"author":{"id":1453053,"avatar":"https://static001.geekbang.org/account/avatar/00/16/2b/fd/7013289d.jpg","nickname":"温故而知新可以为师矣","note":"","ucode":"FADCDFA9F9E5E8","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":131078,"discussion_content":"https://www.jianshu.com/p/796c3411f8eb","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1578824574,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":153135,"user_name":"乘风","can_delete":false,"product_type":"c1","uid":1115724,"ip_address":"","ucode":"0420C5535DACB7","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTLwSoTjHPX5tm4whBSfoZLX6toZxrZGUaLABQywKNf4MDc9toK3QSV7Z99ATcGicFCysoleQ5ISzmw/132","comment_is_top":false,"comment_ctime":1574165526,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1574165526","product_id":100020801,"comment_content":"这个语句执行的时候会有排序过程吗，为什么？<br>  会有排序的过程。因为在构建覆盖索引树时，首先通过第一个字段排序，再通过第二个字段排序，所以在第一个字段采用or查询时，就无法利用索引树本身的顺序特性，所以需要额外的<br>排序动作。<br><br>如果业务端代码由你来开发，需要实现一个在数据库端不需要排序的方案，你会怎么实现呢？<br>  分类取出杭州 、苏州前一百条，在业务代码中排序。<br><br>如果有分页需求，要显示第 101 页，也就是说语句最后要改成 “limit 10000,100”， 你的实现方法又会是什么呢？<br>  通过辅助索引树定位第100页末位置的位置，从该位置开始取100条，从而避免全排序。<br><br>","like_count":0},{"had_liked":false,"id":144390,"user_name":"fred 🐒","can_delete":false,"product_type":"c1","uid":1057311,"ip_address":"","ucode":"442245FE43131D","user_header":"https://static001.geekbang.org/account/avatar/00/10/22/1f/1c0a78cc.jpg","comment_is_top":false,"comment_ctime":1571909467,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1571909467","product_id":100020801,"comment_content":"老师，在上面的描述字提到，创建alter table t add index city_user(city, name);<br>联合索引在执行：select city,name,age from t where city=&#39;杭州&#39;  limit 3;<br>是在索引中就排序好的。<br>但是我测试下来发现：<br>2条语句：<br>1.select * from t where city=&#39;杭州&#39;  limit 3;<br>2.select city,name from t where city=&#39;杭州&#39;  limit 3;<br>只有语句2返回的结果是根据name排好序的，<br>而语句1select 所有（或者select除了索引包含的字段外还有其它字段），就无法达到结果是排序的效果<br>这个是为什么？不是很理解","like_count":0},{"had_liked":false,"id":142867,"user_name":"零落","can_delete":false,"product_type":"c1","uid":1152368,"ip_address":"","ucode":"BE085142D54AEB","user_header":"https://static001.geekbang.org/account/avatar/00/11/95/70/1fa01d6f.jpg","comment_is_top":false,"comment_ctime":1571569086,"is_pvip":true,"discussion_count":0,"race_medal":0,"score":"1571569086","product_id":100020801,"comment_content":"画图工具是什么","like_count":0},{"had_liked":false,"id":142235,"user_name":"黄鹤","can_delete":false,"product_type":"c1","uid":1029141,"ip_address":"","ucode":"2EFDA4DA2223DB","user_header":"https://static001.geekbang.org/account/avatar/00/0f/b4/15/47fe087a.jpg","comment_is_top":false,"comment_ctime":1571317352,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1571317352","product_id":100020801,"comment_content":"跑了一遍可见性实验，两个发现<br><br>1. session A中的当前读，如果没有发生修改，不影响后面一致读的 select * ...<br>2.session A中执行了update语句后，再次select，返回的是（1,2），不是（1,3），跟老师跑出来的结果不同。晕菜中~<br>环境，MySQL服务器是阿里云上的RDS，version: 5.7.20-log<br>客户端是 MySQL workbench 8.0.16 Community版<br><br>具体可见性试验：（A for session A）<br><br>A: begin;<br>A: select * from t where id=1; (1,2)<br>      =&gt; 此时session B 执行 update t set a=3 where id=1;<br>A: select * from t where id=1; (1,2)<br>A: select * from t where id=1 for update; (1,3)<br>A: select * from t where id=1; (1,2)<br>A: update t set a=3 where id=1;<br>      =&gt; 0 row(s) affected Rows matched: 1  Changed: 0  Warnings: 0<br>A: select * from t where id=1; (1,2)<br>A: commit;<br>A: select * from t where id=1; (1,3)<br><br>ps：我前面的留言应该是在这一篇底下的，看起来被选为精选留言之前自己是看不到的。","like_count":0},{"had_liked":false,"id":142198,"user_name":"黄鹤","can_delete":false,"product_type":"c1","uid":1029141,"ip_address":"","ucode":"2EFDA4DA2223DB","user_header":"https://static001.geekbang.org/account/avatar/00/0f/b4/15/47fe087a.jpg","comment_is_top":false,"comment_ctime":1571308710,"is_pvip":false,"discussion_count":1,"race_medal":0,"score":"1571308710","product_id":100020801,"comment_content":"老师，上期问题时间里面，<br><br>“session A 的第二个 select 语句是一致性读（快照读)，它是不能看见 session B 的更新的。”<br><br>这句，我的理解有些不同：session A里面，虽然第二个select是一致读，但在它之前的update语句，是先读后写，当前读，这样就看到了session B的更新，从而影响了之后的select读到的内容。<br>按照这个理解，可见性实验不能说明实际发生的是第三个选项。需要通过查redo log&#47;bin log，或者查源码来验证。<br><br>另外，我在表中增加了一个 timestamp 字段，发现update是新的值和现有值相等是，timestamp 字段不会变化。如果是前面问题的答案是选项三的话，那意味着timestamp字段的更新是另一次操作。这个理解是否正确呢？<br><br>谢谢林老师~","like_count":0,"discussions":[{"author":{"id":1029141,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/b4/15/47fe087a.jpg","nickname":"黄鹤","note":"","ucode":"2EFDA4DA2223DB","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":77053,"discussion_content":"更新一下。\n根据一致性读的原理，本事务中只要发生了update，那么就能看到新的值。\n如果只是做了当前读，但没有进行修改，不影响一致性读视图。\nupdate语句是否需要先读后写，这个要根据具体sql来判断。set k=k+1 这种方式，需要先读，当前读。但 set k=3 这种方式，应不需要先读，否则 change buffer 机制就无法适用了。","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1575884504,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":138509,"user_name":"张德","can_delete":false,"product_type":"c1","uid":1101929,"ip_address":"","ucode":"31FE63E8725EFC","user_header":"https://static001.geekbang.org/account/avatar/00/10/d0/69/5dbdc245.jpg","comment_is_top":false,"comment_ctime":1570284952,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1570284952","product_id":100020801,"comment_content":"是原先的索引不能删除吗？","like_count":0},{"had_liked":false,"id":138508,"user_name":"张德","can_delete":false,"product_type":"c1","uid":1101929,"ip_address":"","ucode":"31FE63E8725EFC","user_header":"https://static001.geekbang.org/account/avatar/00/10/d0/69/5dbdc245.jpg","comment_is_top":false,"comment_ctime":1570284913,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1570284913","product_id":100020801,"comment_content":"alter table t add index city_user(city, name);<br> 我为啥加上这个索引  看执行计划  还是用到了filesort","like_count":0},{"had_liked":false,"id":137722,"user_name":"常文龙","can_delete":false,"product_type":"c1","uid":1204525,"ip_address":"","ucode":"4A126159D24766","user_header":"https://static001.geekbang.org/account/avatar/00/12/61/2d/5ca0a3da.jpg","comment_is_top":false,"comment_ctime":1569830508,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1569830508","product_id":100020801,"comment_content":"select * from t where city in (&#39;杭州&#39;,&quot; 苏州 &quot;) order by name limit 10000,100;<br>这个语句在sql层面和业务层面都没有想到好办法<br>但是可以通过加一个字段用来标识city为杭州或苏州比如unioncity，然后建立unioncity,name的联合索引<br><br>","like_count":0},{"had_liked":false,"id":135126,"user_name":"Geek_8354ec","can_delete":false,"product_type":"c1","uid":1603270,"ip_address":"","ucode":"520DF9A874169D","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/dgox0m94vr6w2Vxk0N665ibibenV2a5axmNXGg7cib5QaiatW1Sp25tfMniaD0scaibwZSNKiaOMX2Kpo7H5CIl7f4yyQ/132","comment_is_top":false,"comment_ctime":1569034135,"is_pvip":false,"discussion_count":2,"race_medal":0,"score":"1569034135","product_id":100020801,"comment_content":"老师好，我不清楚为什么给city、name做了个联合索引之后，city就变成有序的了？","like_count":0,"discussions":[{"author":{"id":1473358,"avatar":"https://static001.geekbang.org/account/avatar/00/16/7b/4e/73a9deec.jpg","nickname":"一只独立特行的猪","note":"","ucode":"52263607CCBE6F","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":221041,"discussion_content":"我也有这个疑问，请问你想明白了吗？","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1585967554,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1453053,"avatar":"https://static001.geekbang.org/account/avatar/00/16/2b/fd/7013289d.jpg","nickname":"温故而知新可以为师矣","note":"","ucode":"FADCDFA9F9E5E8","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":131079,"discussion_content":"city+name整体排序，也就是都有序啊！","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1578824724,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":134915,"user_name":"nicklos","can_delete":false,"product_type":"c1","uid":1198461,"ip_address":"","ucode":"2673D71077B946","user_header":"https://static001.geekbang.org/account/avatar/00/12/49/7d/6d9675da.jpg","comment_is_top":false,"comment_ctime":1568951515,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1568951515","product_id":100020801,"comment_content":"请问老师，上期问题还有点不太明白？在binlog_format=row的配置下，sessionA无论在任何时刻得到的都是(1,1)的值。哪怕sessionA自己也执行update语句将a设置成3.得到的也是(1,1)。这该如何理解呢？","like_count":0},{"had_liked":false,"id":134462,"user_name":"丁丁历险记","can_delete":false,"product_type":"c1","uid":1661704,"ip_address":"","ucode":"A43829E454C067","user_header":"https://static001.geekbang.org/account/avatar/00/19/5b/08/b0b0db05.jpg","comment_is_top":false,"comment_ctime":1568851989,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1568851989","product_id":100020801,"comment_content":"基本功  limit  1000000, 100 时  需要把查询调整下   inner join  (select id  from  xxx  where yy order z limit  1000000,100)  t2  on t.id =t2.id<br>","like_count":0},{"had_liked":false,"id":132568,"user_name":"鱼筱雨","can_delete":false,"product_type":"c1","uid":1597257,"ip_address":"","ucode":"17B11B3CF81153","user_header":"https://static001.geekbang.org/account/avatar/00/18/5f/49/115a8f4c.jpg","comment_is_top":false,"comment_ctime":1568167265,"is_pvip":false,"discussion_count":1,"race_medal":0,"score":"1568167265","product_id":100020801,"comment_content":"林老师，我在你的文章中经常提到了索引还是有维护代价的。关于索引的维护代价，有哪几个方面？代价是什么？你能讲解下吗","like_count":0,"discussions":[{"author":{"id":1453053,"avatar":"https://static001.geekbang.org/account/avatar/00/16/2b/fd/7013289d.jpg","nickname":"温故而知新可以为师矣","note":"","ucode":"FADCDFA9F9E5E8","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":131080,"discussion_content":"索引就是B+🌲，数据更新维护B+🌲的状态不就是维护吗，另外索引也占用额外磁盘空间。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1578824835,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":126026,"user_name":"马以","can_delete":false,"product_type":"c1","uid":1344431,"ip_address":"","ucode":"3FEA06CA14DE28","user_header":"https://static001.geekbang.org/account/avatar/00/14/83/af/1cb42cd3.jpg","comment_is_top":false,"comment_ctime":1566296029,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1566296029","product_id":100020801,"comment_content":"课后疑问这部分，sessionA在更新的时候不是当前读吗？按理说它是能够感知到sessionB的修改的啊，为什么update t set a=3 where id=1 and a=3会找不到这条更新数据呢？","like_count":0},{"had_liked":false,"id":123374,"user_name":"Jary","can_delete":false,"product_type":"c1","uid":1302829,"ip_address":"","ucode":"3D21F6EDDBBC6C","user_header":"https://static001.geekbang.org/account/avatar/00/13/e1/2d/cd7901da.jpg","comment_is_top":false,"comment_ctime":1565663928,"is_pvip":false,"discussion_count":1,"race_medal":0,"score":"1565663928","product_id":100020801,"comment_content":"max（date）和order by date desc limit 执行逻辑一样吗","like_count":0,"discussions":[{"author":{"id":1453053,"avatar":"https://static001.geekbang.org/account/avatar/00/16/2b/fd/7013289d.jpg","nickname":"温故而知新可以为师矣","note":"","ucode":"FADCDFA9F9E5E8","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":131081,"discussion_content":"如果有索引的话，我觉的max(data)基本就是order by date desc limit 1，没有索引的话都要全表扫描了。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1578824932,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":120309,"user_name":"Mq","can_delete":false,"product_type":"c1","uid":1178359,"ip_address":"","ucode":"041F572AFAB275","user_header":"https://static001.geekbang.org/account/avatar/00/11/fa/f7/91ac44c5.jpg","comment_is_top":false,"comment_ctime":1564824644,"is_pvip":false,"discussion_count":1,"race_medal":0,"score":"1564824644","product_id":100020801,"comment_content":"丁老师好，请教个问题，排序后一次取第50000-55000，一次5000，还是分10次每次取500的效率高。我理解的是排序肯定是要对满足条件的行做一次查找，数据如果在内存了应该是要比做10次查询高，如果数据在临时表空间也应该比做10次查询高，不知道我理解的对不。因为最近在做一个大表同步的功能，跟同事有点分歧。<br>        另外关于数据库分页越往后分页越慢的问题，我的理解是有排序的分页应该区别不大，没排序的分页因为后面扫描的数据块越多，所以越来越慢，不知道我理解的对不。          希望老师说下原理。","like_count":0,"discussions":[{"author":{"id":1453053,"avatar":"https://static001.geekbang.org/account/avatar/00/16/2b/fd/7013289d.jpg","nickname":"温故而知新可以为师矣","note":"","ucode":"FADCDFA9F9E5E8","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":131083,"discussion_content":"考虑服务内存压力情况数据自然是多多益善了","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1578825171,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":120284,"user_name":"David.cui","can_delete":false,"product_type":"c1","uid":1302228,"ip_address":"","ucode":"AB46F310403612","user_header":"https://static001.geekbang.org/account/avatar/00/13/de/d4/b83c4185.jpg","comment_is_top":false,"comment_ctime":1564820099,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1564820099","product_id":100020801,"comment_content":"到主键 id 索引取出整行，取name、city、age三个字段的值，存入 sort_buffer 中；<br><br>我的理解和问题如下：<br>1.到主键 id 索引取出整行~~~~我的理解应该是读入满足条件的主键ID所在的数据页，而不是只读入满足ID条件的某行；<br>2.这些数据页读入innodb_buffer_pool后，才能把符合条件的行取出来，放入sort_buffer中；<br>3.在sort_buffer中排序之后，才能显示到前端<br>4、我的问题是从innodb_buffer_pool到sort_buffer中去的时候，是整行复制过去，还是指复制name、city、age三个字段？<br>","like_count":0},{"had_liked":false,"id":119093,"user_name":"一袋大虾","can_delete":false,"product_type":"c1","uid":1469366,"ip_address":"","ucode":"8E4FED94405475","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/wwDhoIeIqMZiaLLCLmCsuiaeEt7rEQMqdTVjjTicic0Pz9HHpgzboaia1hxu3H0IHovqEa6pJ8e1UQn1gqeUr3ibIdrA/132","comment_is_top":false,"comment_ctime":1564502356,"is_pvip":false,"discussion_count":1,"race_medal":0,"score":"1564502356","product_id":100020801,"comment_content":"林老师，请教您一个问题啊。order by 字段值相同的时候，排序结果是不确定的，因而导致分页数据出错。我查了下资料，是说5.6以后排序做了点优化，加了个priority queue，然后使用的是堆排序，因为堆排序是不稳定的，所以才有这样的问题。<br>1. 可是我试过当offset增大之后，排序的结果似乎是确定的，这是为什么呢？<br>2. 当order by字段加上索引后，每次排序的结果又变成确定的，这个不太理解。我看解析计划，用的是file sort啊，不是直接按顺序读索引。<br>mysql -version 5.7<br>create_table_sql:<br><br>\tCREATE TABLE learning.`people` (<br>  `id` int(10) NOT NULL AUTO_INCREMENT COMMENT &#39;主键&#39;,<br>  `age` int(11) DEFAULT NULL comment &#39;年龄&#39;,<br>  `name` varchar(11)  COMMENT &#39;姓名&#39;,<br>  PRIMARY KEY (`id`),<br>  KEY `idx_age` (`age`)<br>) ENGINE=InnoDB AUTO_INCREMENT=1 DEFAULT CHARSET=utf8","like_count":0,"discussions":[{"author":{"id":1453053,"avatar":"https://static001.geekbang.org/account/avatar/00/16/2b/fd/7013289d.jpg","nickname":"温故而知新可以为师矣","note":"","ucode":"FADCDFA9F9E5E8","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":131087,"discussion_content":"1：没索引，因为数据会通过非稳定排序算法排序，所以导致结果不确定\n2：有索引，数据已经是在索引树中确定，所以结果确定","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1578825548,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":114941,"user_name":"shinee_x_X","can_delete":false,"product_type":"c1","uid":1605962,"ip_address":"","ucode":"98529C77B052AC","user_header":"https://static001.geekbang.org/account/avatar/00/18/81/4a/dcc563fb.jpg","comment_is_top":false,"comment_ctime":1563436674,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1563436674","product_id":100020801,"comment_content":"老师说的第三种情况，有联合索引并且倒序取数据的情况下还会走索引码","like_count":0},{"had_liked":false,"id":114546,"user_name":"baoxin","can_delete":false,"product_type":"c1","uid":1106343,"ip_address":"","ucode":"9CAE39985EF676","user_header":"https://static001.geekbang.org/account/avatar/00/10/e1/a7/86ea68a0.jpg","comment_is_top":false,"comment_ctime":1563332663,"is_pvip":false,"discussion_count":1,"race_medal":0,"score":"1563332663","product_id":100020801,"comment_content":"老师好，B+树的叶节点存储的是页，页中有多行，这多行本身是无序的，针对某一字段建索引后，怎么保证页中数据也有序了呢？","like_count":0,"discussions":[{"author":{"id":1106343,"avatar":"https://static001.geekbang.org/account/avatar/00/10/e1/a7/86ea68a0.jpg","nickname":"baoxin","note":"","ucode":"9CAE39985EF676","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":12670,"discussion_content":"b+树的平衡性针对的就是行了，建索引后，有序性是针对行变动的，这个页大小只是影响了单个页中行数的上限，就是b+树的平衡性","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1568559979,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":113555,"user_name":"看不到de颜色","can_delete":false,"product_type":"c1","uid":1162714,"ip_address":"","ucode":"88348CCAE81931","user_header":"https://static001.geekbang.org/account/avatar/00/11/bd/da/3d76ea74.jpg","comment_is_top":false,"comment_ctime":1563076055,"is_pvip":false,"discussion_count":1,"race_medal":0,"score":"1563076055","product_id":100020801,"comment_content":"有个疑问，不知道老师能不能看到了😅。在最后用覆盖索引代替排序的语句中，既然不需要再排序，那么为什么explain中rows还是4000，不是只需要取1000条就够了吗？","like_count":0,"discussions":[{"author":{"id":1453053,"avatar":"https://static001.geekbang.org/account/avatar/00/16/2b/fd/7013289d.jpg","nickname":"温故而知新可以为师矣","note":"","ucode":"FADCDFA9F9E5E8","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":131091,"discussion_content":"可能是先where在limit的原因吧，感觉可以优化。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1578825816,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":112738,"user_name":"阿卧","can_delete":false,"product_type":"c1","uid":1229566,"ip_address":"","ucode":"68C0CC25E57707","user_header":"https://static001.geekbang.org/account/avatar/00/12/c2/fe/038a076e.jpg","comment_is_top":false,"comment_ctime":1562812148,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1562812148","product_id":100020801,"comment_content":"老师，请教你一个问题。sale_type和top_sort是联合索引。<br>执行语句1<br>explain select sale_type,top_sort from auction_goods where sale_type = &#39;A&#39; order by top_sort<br>用到了内存排序<br>1\tSIMPLE\tauction_goods\tref\tidx_sort\tidx_sort\t43\tconst\t432\tUsing where; Using index<br>执行语句2<br>explain select * from auction_goods where sale_type = &#39;A&#39; order by top_sort<br>用到文件排序<br>1\tSIMPLE\tauction_goods\tALL\tidx_sort\tNULL\tNULL\tNULL\t467\tUsing where; Using filesort<br>这个是什么原因啊？该如何去分析？","like_count":0},{"had_liked":false,"id":112047,"user_name":"见＆不见","can_delete":false,"product_type":"c1","uid":1342533,"ip_address":"","ucode":"53C6167BB03424","user_header":"https://static001.geekbang.org/account/avatar/00/14/7c/45/19e24f98.jpg","comment_is_top":false,"comment_ctime":1562660045,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1562660045","product_id":100020801,"comment_content":"老师  SELECT `city`,`name`,`age` from t where city = &#39;杭州&#39; order by `city` limit 1000; SQL语句改成这样的话 explain 为什么还是需要排序呢  city不是本来就是有序的吗？？还请老师解答下！","like_count":0},{"had_liked":false,"id":111409,"user_name":"残天噬魂","can_delete":false,"product_type":"c1","uid":1506609,"ip_address":"","ucode":"A2AD8303A4518D","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/q2HwchogzNiavKhIB4GfAxH6B88NhSoC7B7keVEUqiaP6JPokDUNJLYehocOyqYqrhA3iaxywyRXLYkYJjDUQESZw/132","comment_is_top":false,"comment_ctime":1562553821,"is_pvip":false,"discussion_count":1,"race_medal":0,"score":"1562553821","product_id":100020801,"comment_content":"这里应该有两种情况，如果杭州和苏州两个城市的人是混排的，那应该是需要排序的，如果两个城市的人是分开的，比如，前面放的是杭州的，杭州完了是苏州的，这样的放，是不需要排序的","like_count":0,"discussions":[{"author":{"id":1812970,"avatar":"https://static001.geekbang.org/account/avatar/00/1b/a9/ea/5bfce6c5.jpg","nickname":"mgs2002","note":"","ucode":"F5931108BD509B","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":282664,"discussion_content":"实测，确实是这样，数据混排执行计划有 Using filesort ，说明还是有排序","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1592040880,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":109841,"user_name":"noone","can_delete":false,"product_type":"c1","uid":1171517,"ip_address":"","ucode":"21F0A795CA52A9","user_header":"https://static001.geekbang.org/account/avatar/00/11/e0/3d/c5795d68.jpg","comment_is_top":false,"comment_ctime":1562119161,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1562119161","product_id":100020801,"comment_content":"老师，帮忙解答个问题<br>person表包含字段username和phone，其中username有普通索引，phone字段没有索引（表测试数据量超过1千万）<br><br>问题:<br>explain select * from person order by username,phone limit 1；<br><br>没有使用username索引走了全表扫描<br><br>","like_count":0},{"had_liked":false,"id":104766,"user_name":"Aaron","can_delete":false,"product_type":"c1","uid":1066251,"ip_address":"","ucode":"B0C504A76297C7","user_header":"https://thirdwx.qlogo.cn/mmopen/vi_32/0Qp9pxHBvgdZAveKzsvUFFUicCJfe7ONzhC7jSNFQDNFvg0jRMXuqqZOdxG1qKosylUYrpIHUR2Q76w5m4HtVkg/132","comment_is_top":false,"comment_ctime":1560829991,"is_pvip":true,"discussion_count":1,"race_medal":0,"score":"1560829991","product_id":100020801,"comment_content":"如果能够保证从 city 这个索引上取出来的行，天然就是按照name 递增排序的话，是不是就可以不用再排序了呢？<br>alter table t add index city_user(city, name);<br>-------------------------------------------<br>为什么city_user这个联合索引，name就是有序的呢？","like_count":0,"discussions":[{"author":{"id":1065351,"avatar":"https://static001.geekbang.org/account/avatar/00/10/41/87/d26efb2e.jpg","nickname":"SuperSnow","note":"","ucode":"84C89AA8083E6A","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":159072,"discussion_content":"因为B+树算法要求是递增有序的。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1580651831,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":101655,"user_name":"Hidden","can_delete":false,"product_type":"c1","uid":1114462,"ip_address":"","ucode":"6323E5D32A3190","user_header":"https://static001.geekbang.org/account/avatar/00/11/01/5e/95f7d928.jpg","comment_is_top":false,"comment_ctime":1559902186,"is_pvip":false,"discussion_count":1,"race_medal":0,"score":"1559902186","product_id":100020801,"comment_content":"select * from t where a=? and b&gt;? order by c limit 0,100 如何加索引 效率高","like_count":0,"discussions":[{"author":{"id":1065351,"avatar":"https://static001.geekbang.org/account/avatar/00/10/41/87/d26efb2e.jpg","nickname":"SuperSnow","note":"","ucode":"84C89AA8083E6A","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":159076,"discussion_content":"如果可以，搞成ab联合索引，c再建立一个索引。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1580652009,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":95408,"user_name":"jacy","can_delete":false,"product_type":"c1","uid":1103456,"ip_address":"","ucode":"0022A8759DDCE6","user_header":"https://static001.geekbang.org/account/avatar/00/10/d6/60/f21b2164.jpg","comment_is_top":false,"comment_ctime":1558053973,"is_pvip":false,"discussion_count":1,"race_medal":1,"score":"1558053973","product_id":100020801,"comment_content":"为什么覆盖索引的执行计划显示的是4000行？","like_count":0,"discussions":[{"author":{"id":1065351,"avatar":"https://static001.geekbang.org/account/avatar/00/10/41/87/d26efb2e.jpg","nickname":"SuperSnow","note":"","ucode":"84C89AA8083E6A","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":159077,"discussion_content":"因为属于杭州的数据有4000行","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1580652102,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":91243,"user_name":"Michael","can_delete":false,"product_type":"c1","uid":1118976,"ip_address":"","ucode":"35F4FFAC4A4B15","user_header":"https://static001.geekbang.org/account/avatar/00/11/13/00/a4a2065f.jpg","comment_is_top":false,"comment_ctime":1556945687,"is_pvip":false,"discussion_count":1,"race_medal":0,"score":"1556945687","product_id":100020801,"comment_content":"这节课程中，遇到的 explain 查询计划 Extra 字段出现了不同字样？<br><br>Using filesort： 表示需要排序；<br><br>Using index： 表示使用了覆盖索引;<br><br>Using where 和 Using index condition 呢？","like_count":0,"discussions":[{"author":{"id":1065351,"avatar":"https://static001.geekbang.org/account/avatar/00/10/41/87/d26efb2e.jpg","nickname":"SuperSnow","note":"","ucode":"84C89AA8083E6A","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":159081,"discussion_content":"using index condition说明用的是索引条件","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1580652258,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":90289,"user_name":"readme","can_delete":false,"product_type":"c1","uid":1099378,"ip_address":"","ucode":"750F692222DD8F","user_header":"https://static001.geekbang.org/account/avatar/00/10/c6/72/eb40011e.jpg","comment_is_top":false,"comment_ctime":1556467015,"is_pvip":false,"discussion_count":1,"race_medal":0,"score":"1556467015","product_id":100020801,"comment_content":"图 14 可见性验证方式 -- 对照中<br><br>session A 的 update t set a = 3 where id = 1 and a = 3 <br><br>会不会有当前读？如果当前读的话，那是不是会读到session B的更新的值？<br><br>请老师帮忙分析下。","like_count":0,"discussions":[{"author":{"id":1065351,"avatar":"https://static001.geekbang.org/account/avatar/00/10/41/87/d26efb2e.jpg","nickname":"SuperSnow","note":"","ucode":"84C89AA8083E6A","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":159083,"discussion_content":"会有当前读，但是当前视图a的值是2，不是3，所以无法执行更新语句。当前读是针对的更新语句中的set，不是针对where条件中的a。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1580652333,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":86981,"user_name":"多格","can_delete":false,"product_type":"c1","uid":1222021,"ip_address":"","ucode":"122195F3D90EA1","user_header":"https://static001.geekbang.org/account/avatar/00/12/a5/85/eeb5b42f.jpg","comment_is_top":false,"comment_ctime":1555491901,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1555491901","product_id":100020801,"comment_content":"无序-&gt;有序<br>1、利用索引（B+Tree）将排序工作分散到日常的维护重<br>2、利用内存排（全排、索引排然后回表、逐行排）","like_count":0},{"had_liked":false,"id":85217,"user_name":"Arvin","can_delete":false,"product_type":"c1","uid":1197346,"ip_address":"","ucode":"F632FBBA1B0D32","user_header":"https://static001.geekbang.org/account/avatar/00/12/45/22/137874a6.jpg","comment_is_top":false,"comment_ctime":1555009223,"is_pvip":false,"discussion_count":1,"race_medal":0,"score":"1555009223","product_id":100020801,"comment_content":"问题：<br>我想了下。如果不排序的话，有没有可能加一个 name,city的索引。<br>优化器 会选择这个索引吗？<br>我的思路就是 name 排好序了。然后 从name 一个一个取之后满足的情况<br>如果可以的话 可以考虑加上 覆盖索引<br>【这里不针对于 维护一个索引的成本】<br>","like_count":0,"discussions":[{"author":{"id":1065351,"avatar":"https://static001.geekbang.org/account/avatar/00/10/41/87/d26efb2e.jpg","nickname":"SuperSnow","note":"","ucode":"84C89AA8083E6A","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":159093,"discussion_content":"你这样就变成全索引扫描了。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1580652699,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":77694,"user_name":"shawn","can_delete":false,"product_type":"c1","uid":1010221,"ip_address":"","ucode":"8F6A8C7920996E","user_header":"https://static001.geekbang.org/account/avatar/00/0f/6a/2d/ec4ed8ce.jpg","comment_is_top":false,"comment_ctime":1552982439,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1552982439","product_id":100020801,"comment_content":"老师我遇到了一个问题：<br>SELECT<br>\t\t\t\t\tid,<br>          order_id,<br>          order_item_id,<br>          create_time,<br>          sign_status<br>\t\t\t\tFROM<br>\t\t\t\t\tt_contract<br>\t\t\t\tWHERE<br>\t\t\t\t\tcontract_type = 2 <br>\t\t\t\tAND sign_status &lt;&gt; 0 <br>\t\t\t\tORDER BY<br>\t\t\t\t\tcreate_time DESC<br><br>我建立了关于(`contract_type`,`sign_status`,`create_time`) 索引，但是当我执行explain的时候还是有filesort：<br>如下是explain的结果：<br>extra :  Using index condition; Using where; Using filesort<br>","like_count":0},{"had_liked":false,"id":75313,"user_name":"omg_boy","can_delete":false,"product_type":"c1","uid":1302067,"ip_address":"","ucode":"A17EF75041A40A","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/ctI2ictkuicWkyLWNZWFrDyErzWyHZ2c8iaY3UgJSyIbWbsHT5iaBeWxvg75vZhTgAEBoiacQojN6PiaQMDMiaia29z1qQ/132","comment_is_top":false,"comment_ctime":1552377332,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1552377332","product_id":100020801,"comment_content":"老师好，后面自己又测试了上期问题在不同条件下。发现这样一个场景：<br>RR级别，binlog_format=row  &amp;&amp; binlog_row_image = minimal。<br>1. 当测试的表存在主键。无论where条件的列是不是主键列，第二次select是能够看到修改的。<br>2. 当测试的表不存在主键。第二次select看不到修改。<br><br>老师能解释下什么原因吗？","like_count":0},{"had_liked":false,"id":74902,"user_name":"omg_boy","can_delete":false,"product_type":"c1","uid":1302067,"ip_address":"","ucode":"A17EF75041A40A","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/ctI2ictkuicWkyLWNZWFrDyErzWyHZ2c8iaY3UgJSyIbWbsHT5iaBeWxvg75vZhTgAEBoiacQojN6PiaQMDMiaia29z1qQ/132","comment_is_top":false,"comment_ctime":1552311171,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1552311171","product_id":100020801,"comment_content":"老师好，能解释一下binlog-row-image=minimal并且字段有timestamp为什么第二次select会看不到变更吗？","like_count":0},{"had_liked":false,"id":74682,"user_name":"Sam","can_delete":false,"product_type":"c1","uid":1309087,"ip_address":"","ucode":"AE9044BE8BD2B9","user_header":"https://static001.geekbang.org/account/avatar/00/13/f9/9f/515d1686.jpg","comment_is_top":false,"comment_ctime":1552281098,"is_pvip":false,"discussion_count":1,"race_medal":0,"score":"1552281098","product_id":100020801,"comment_content":"老师，当sort_buffer不够用的时候，是用磁盘临时文件来辅助排序，还是所有数据都放在文件上排序？","like_count":0,"discussions":[{"author":{"id":1065351,"avatar":"https://static001.geekbang.org/account/avatar/00/10/41/87/d26efb2e.jpg","nickname":"SuperSnow","note":"","ucode":"84C89AA8083E6A","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":159107,"discussion_content":"磁盘临时文件辅助排序。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1580652880,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":73327,"user_name":"风萧雨瑟","can_delete":false,"product_type":"c1","uid":1317323,"ip_address":"","ucode":"5E832ABE126393","user_header":"https://static001.geekbang.org/account/avatar/00/14/19/cb/70a2b47e.jpg","comment_is_top":false,"comment_ctime":1551861758,"is_pvip":false,"replies":[{"id":"28009","content":"1. 其实就是“要放到sort_buffer中的字段们”<br>2. 对，要*3<br>3. 按顺序看。第一个jion是a.*, 第二个join是a.*+b.c1&#47;c2&#47;c3","user_name":"作者回复","user_name_real":"林晓斌","uid":"1264162","ctime":1552724313,"ip_address":"","comment_id":73327,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1551861758","product_id":100020801,"comment_content":"老师，这两天碰到一个慢SQL，在优化中发现对于max_length_for_sort_data这个值有点疑问，在文章中是说所有select字段的长度。但在官方文档中的说法是：The cutoff on the size of index values that determines which filesort algorithm to use。<br>1.这里的index values不怎么理解。<br>2.在SQL中，我通过计算select中的字段长度累加算下来只有4500左右(字段中的Int、decimal、timestamp类型为4，varchar根据括号中字符计算，datetime算8)。但是直到我把max_length_for_sort_data这个值调整到16192后才能走packed_additional_fields算法。为什么需要设置这么大。是我计算有问题吗？varchar的是计算的时候是不是需要乘以3？varchar(16) utf8的话，应该是16*3<br>3.如果有多个LEFT JOIN的情况下计算长度还是根据select中的字段来计算吗？<br>sql如下：<br>select <br>       a.*<br>       b.c1<br>       b.c2<br>       b.c3<br>       c.c1<br>   from a<br>   LEFT JOIN b on a.id and b.id<br>   LEFT JOIN c on a.id and c.id<br>   where a.c1 !=0 and a.c2 =0 and a.c3=1 order by c4 desc,id limit 10;<br>a表部分ddl如下：<br>c1 decimal(10,2) NOT NULL DEFAULT &#39;0.00&#39;,<br>c2 int(11) NOT NULL DEFAULT &#39;0&#39;<br>c3 int(11) NOT NULL DEFAULT &#39;0&#39; COMMENT &#39;1,0&#39;<br>PRIMARY KEY (`id`)<br>key idx_c1(c1)<br>key idx_c4(c4)<br><br>","like_count":0,"discussions":[{"author":{"id":1264162,"avatar":"https://static001.geekbang.org/account/avatar/00/13/4a/22/2681d602.jpg","nickname":"林晓斌","note":"","ucode":"CDE42D44F26240","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":442025,"discussion_content":"1. 其实就是“要放到sort_buffer中的字段们”\n2. 对，要*3\n3. 按顺序看。第一个jion是a.*, 第二个join是a.*+b.c1/c2/c3","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1552724313,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":70838,"user_name":"黄明恩","can_delete":false,"product_type":"c1","uid":1119409,"ip_address":"","ucode":"EF75C8BFA14D17","user_header":"https://static001.geekbang.org/account/avatar/00/11/14/b1/7d974f0a.jpg","comment_is_top":false,"comment_ctime":1551192411,"is_pvip":false,"replies":[{"id":"25336","content":"因为要改成3，而且值刚好也是3，认为没有“改变”值","user_name":"作者回复","user_name_real":"林晓斌","uid":"1264162","ctime":1551194157,"ip_address":"","comment_id":70838,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1551192411","product_id":100020801,"comment_content":"老师，为什么图13里面的session a里执行了update之后显示row affect是0呢，既然它做了更新操作，影响行数不应该是1吗","like_count":0,"discussions":[{"author":{"id":1264162,"avatar":"https://static001.geekbang.org/account/avatar/00/13/4a/22/2681d602.jpg","nickname":"林晓斌","note":"","ucode":"CDE42D44F26240","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":440855,"discussion_content":"因为要改成3，而且值刚好也是3，认为没有“改变”值","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1551194157,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":68523,"user_name":"大神仙","can_delete":false,"product_type":"c1","uid":1151944,"ip_address":"","ucode":"8179D170A97936","user_header":"https://static001.geekbang.org/account/avatar/00/11/93/c8/9eb6c644.jpg","comment_is_top":false,"comment_ctime":1550538749,"is_pvip":false,"replies":[{"id":"24403","content":"这个问题我get不到点，要具体一点哈","user_name":"作者回复","user_name_real":"林晓斌","uid":"1264162","ctime":1550580010,"ip_address":"","comment_id":68523,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1550538749","product_id":100020801,"comment_content":"老师，mysql5.6分页时，因堆排序问题造成的数据重复。我看阿里的mysql数据库内核月报里讲要按照索引排序，那么只要分页以后都是要加order by index么？","like_count":0,"discussions":[{"author":{"id":1264162,"avatar":"https://static001.geekbang.org/account/avatar/00/13/4a/22/2681d602.jpg","nickname":"林晓斌","note":"","ucode":"CDE42D44F26240","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":439718,"discussion_content":"这个问题我get不到点，要具体一点哈","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1550580010,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":65273,"user_name":"frogman","can_delete":false,"product_type":"c1","uid":1217671,"ip_address":"","ucode":"7FD604453F3D80","user_header":"https://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTIMbD2JxmlwPeibyCJUu8AthDu8Ze7ABibWTBRya5qibLcqrfEWOpo7j8iclyIT9CqowribV8ewQ0XausQ/132","comment_is_top":false,"comment_ctime":1549182335,"is_pvip":false,"replies":[{"id":"23162","content":"你的理解对的。<br><br>我们后面有一篇会讲到group by ","user_name":"作者回复","user_name_real":"林晓斌","uid":"1264162","ctime":1549202650,"ip_address":"","comment_id":65273,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1549182335","product_id":100020801,"comment_content":"你好，不知道可否讲一下 Group By 怎样运用索引来优化呢？文档说只有 MIN 和 MAX 的情况下索引才能提高效率，但是我认为 COUNT 应该也行吧。如 select name count(*) from table where name=$name group by address; 如果建立 id 和 name 的联合索引，效率会提高吗。","like_count":0,"discussions":[{"author":{"id":1264162,"avatar":"https://static001.geekbang.org/account/avatar/00/13/4a/22/2681d602.jpg","nickname":"林晓斌","note":"","ucode":"CDE42D44F26240","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":438382,"discussion_content":"你的理解对的。\n\n我们后面有一篇会讲到group by ","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1549202650,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":64597,"user_name":"Crayon","can_delete":false,"product_type":"c1","uid":1391055,"ip_address":"","ucode":"C15C899DF34B85","user_header":"","comment_is_top":false,"comment_ctime":1548832831,"is_pvip":false,"replies":[{"id":"22876","content":"试下，是不是其实你不加limit反而会用索引","user_name":"作者回复","user_name_real":"林晓斌","uid":"1264162","ctime":1548834277,"ip_address":"","comment_id":64597,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1548832831","product_id":100020801,"comment_content":"老师，您好，我想问一下对于评论区中的无条件排序问题，知道了走索引和不走索引的两种情况。<br><br>在我的测试中，无条件多字段排序，即使加了LIMIT，也会走全表扫描，这是为什么呢。排序的字段们都加了普通索引","like_count":0,"discussions":[{"author":{"id":1264162,"avatar":"https://static001.geekbang.org/account/avatar/00/13/4a/22/2681d602.jpg","nickname":"林晓斌","note":"","ucode":"CDE42D44F26240","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":438091,"discussion_content":"试下，是不是其实你不加limit反而会用索引","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1548834277,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":63925,"user_name":"过去、今日","can_delete":false,"product_type":"c1","uid":1097197,"ip_address":"","ucode":"8E171203B06513","user_header":"https://static001.geekbang.org/account/avatar/00/10/bd/ed/95e8a314.jpg","comment_is_top":false,"comment_ctime":1548598466,"is_pvip":false,"replies":[{"id":"22625","content":"api_form索引为app_key、modified <br>是联合索引吗，如果是可以force一下这个索引<br><br>你还是两个表（脱敏后）发一下表结构，还有这个语句explain的结果","user_name":"作者回复","user_name_real":"林晓斌","uid":"1264162","ctime":1548636484,"ip_address":"","comment_id":63925,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1548598466","product_id":100020801,"comment_content":"老师，您好！大概是这样子的，app表的数据量是10w，api_form的数据量大概50w以后还是增加，app表的索引为app_key,api_form索引为app_key、modified。但是从执行计划上看Extra的值为Using where Using fileSort<br>    select * from app t1,api_form t2 where t1.app_key=t2.app_key and t2.status=1 order by t2.modified","like_count":0,"discussions":[{"author":{"id":1264162,"avatar":"https://static001.geekbang.org/account/avatar/00/13/4a/22/2681d602.jpg","nickname":"林晓斌","note":"","ucode":"CDE42D44F26240","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":437764,"discussion_content":"api_form索引为app_key、modified \n是联合索引吗，如果是可以force一下这个索引\n\n你还是两个表（脱敏后）发一下表结构，还有这个语句explain的结果","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1548636484,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":63891,"user_name":"过去、今日","can_delete":false,"product_type":"c1","uid":1097197,"ip_address":"","ucode":"8E171203B06513","user_header":"https://static001.geekbang.org/account/avatar/00/10/bd/ed/95e8a314.jpg","comment_is_top":false,"comment_ctime":1548580595,"is_pvip":false,"replies":[{"id":"22601","content":"贴一下你这两个表的表结构，和explain的结果。<br>这个语句要没有filesort的话，需要t1当驱动表，并且t1 有（id, created）联合索引","user_name":"作者回复","user_name_real":"林晓斌","uid":"1264162","ctime":1548594016,"ip_address":"","comment_id":63891,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1548580595","product_id":100020801,"comment_content":"老师有个问题<br>select * from a t1,b t2 where t1.id = t2.id order by t1.created <br>即时a表和b表都创建了索引，但是通过执行计划看都是using filesort","like_count":0,"discussions":[{"author":{"id":1264162,"avatar":"https://static001.geekbang.org/account/avatar/00/13/4a/22/2681d602.jpg","nickname":"林晓斌","note":"","ucode":"CDE42D44F26240","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":437751,"discussion_content":"贴一下你这两个表的表结构，和explain的结果。\n这个语句要没有filesort的话，需要t1当驱动表，并且t1 有（id, created）联合索引","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1548594016,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":62926,"user_name":"Wesley","can_delete":false,"product_type":"c1","uid":1359325,"ip_address":"","ucode":"187A0185A2D3FD","user_header":"https://static001.geekbang.org/account/avatar/00/14/bd/dd/4620ba79.jpg","comment_is_top":false,"comment_ctime":1548208402,"is_pvip":false,"replies":[{"id":"22259","content":"给一下你的复现步骤哈，不太可能“永远一样的”","user_name":"作者回复","user_name_real":"林晓斌","uid":"1264162","ctime":1548225185,"ip_address":"","comment_id":62926,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1548208402","product_id":100020801,"comment_content":"表T有id name city age 三列，对name，city两列做联合索引。<br>执行explain select name，city from T where name like ‘%’ and city =‘BJ’ order by name limit 10；rows的值永远都和limit的值一样。虽然rows是预估的值，但是也不会每次和要limit的值一样吧","like_count":0,"discussions":[{"author":{"id":1264162,"avatar":"https://static001.geekbang.org/account/avatar/00/13/4a/22/2681d602.jpg","nickname":"林晓斌","note":"","ucode":"CDE42D44F26240","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":437405,"discussion_content":"给一下你的复现步骤哈，不太可能“永远一样的”","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1548225185,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":56818,"user_name":"felix","can_delete":false,"product_type":"c1","uid":1086157,"ip_address":"","ucode":"DF514D0BB9B508","user_header":"https://static001.geekbang.org/account/avatar/00/10/92/cd/d39e568c.jpg","comment_is_top":false,"comment_ctime":1546564163,"is_pvip":false,"replies":[{"id":"20478","content":"没有一定要配合索引哦<br><br>下一篇有讲到一个limit 排序优化","user_name":"作者回复","user_name_real":"林晓斌","uid":"1264162","ctime":1546565919,"ip_address":"","comment_id":56818,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1546564163","product_id":100020801,"comment_content":"MySQL对limit有什么优化吗？是只能配合索引使用吗？谢谢","like_count":0,"discussions":[{"author":{"id":1264162,"avatar":"https://static001.geekbang.org/account/avatar/00/13/4a/22/2681d602.jpg","nickname":"林晓斌","note":"","ucode":"CDE42D44F26240","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":435254,"discussion_content":"没有一定要配合索引哦\n\n下一篇有讲到一个limit 排序优化","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1546565919,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":56479,"user_name":"刘会俊","can_delete":false,"product_type":"c1","uid":1065775,"ip_address":"","ucode":"DFC7B41EA6AF57","user_header":"https://static001.geekbang.org/account/avatar/00/10/43/2f/4ff46e78.jpg","comment_is_top":false,"comment_ctime":1546475900,"is_pvip":false,"replies":[{"id":"20363","content":"<br>把问题描述清楚大家就共同学习到啦😄<br>🤝","user_name":"作者回复","user_name_real":"林晓斌","uid":"1264162","ctime":1546481025,"ip_address":"","comment_id":56479,"utype":1}],"discussion_count":2,"race_medal":2,"score":"1546475900","product_id":100020801,"comment_content":"接上一次的留言。谢谢老师的回复，昨天找到原因了，因为我造的总数据只有6条，使用select city,name,age from t where city=&#39;杭州&#39; order by name limit 1000的时候，使用explain分析的结果中，type为ALL，优化器认为6条数据走全表扫描比用city索引再回表的方式快，所以没有走city索引，看到的结果里examined_rows就是总的6条数据了，我用了force index(city)结果就跟您的一样了。不好意思老师，我是个开发，数据库的一些参数和知识不太熟悉，提了一些弱智问题请您见谅。","like_count":0,"discussions":[{"author":{"id":1264162,"avatar":"https://static001.geekbang.org/account/avatar/00/13/4a/22/2681d602.jpg","nickname":"林晓斌","note":"","ucode":"CDE42D44F26240","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":435061,"discussion_content":"\n把问题描述清楚大家就共同学习到啦😄\n🤝","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1546481025,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1386818,"avatar":"https://static001.geekbang.org/account/avatar/00/15/29/42/43d4b1a8.jpg","nickname":"烫烫烫","note":"","ucode":"C06018670DE76A","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":319112,"discussion_content":"没事，大家都是弱智������","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1603945103,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":56289,"user_name":"刘会俊","can_delete":false,"product_type":"c1","uid":1065775,"ip_address":"","ucode":"DFC7B41EA6AF57","user_header":"https://static001.geekbang.org/account/avatar/00/10/43/2f/4ff46e78.jpg","comment_is_top":false,"comment_ctime":1546416649,"is_pvip":false,"replies":[{"id":"20261","content":"哪个查询语句…","user_name":"作者回复","user_name_real":"林晓斌","uid":"1264162","ctime":1546421928,"ip_address":"","comment_id":56289,"utype":1}],"discussion_count":1,"race_medal":2,"score":"1546416649","product_id":100020801,"comment_content":"老师，我使用那一条建表语句和查询语句，最后使用explain得出的结果是using where；using filesort，然后我发现select * from information_schema.optimizer_trace\\G;得到的结果是 <br>&quot;filesort_summary&quot;: {<br>              &quot;rows&quot;: 4,<br>              &quot;examined_rows&quot;: 6,<br>              &quot;number_of_tmp_files&quot;: 0,<br>              &quot;sort_buffer_size&quot;: 71880,<br>              &quot;sort_mode&quot;: &quot;&lt;sort_key, packed_additional_fields&gt;&quot;<br>            }<br>表里只有4条符合的数据，我没搞懂为什么examined_rows是6，因为6是总数据量为6条。","like_count":0,"discussions":[{"author":{"id":1264162,"avatar":"https://static001.geekbang.org/account/avatar/00/13/4a/22/2681d602.jpg","nickname":"林晓斌","note":"","ucode":"CDE42D44F26240","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":434976,"discussion_content":"哪个查询语句…","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1546421928,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":55646,"user_name":"过去、今日","can_delete":false,"product_type":"c1","uid":1097197,"ip_address":"","ucode":"8E171203B06513","user_header":"https://static001.geekbang.org/account/avatar/00/10/bd/ed/95e8a314.jpg","comment_is_top":false,"comment_ctime":1546251939,"is_pvip":false,"replies":[{"id":"20086","content":"好问题<br><br>不能哦，并发起来的时候内存占用过大，会到自己系统OOM的","user_name":"作者回复","user_name_real":"林晓斌","uid":"1264162","ctime":1546259376,"ip_address":"","comment_id":55646,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1546251939","product_id":100020801,"comment_content":"进行排序后的临时文件分成几份是和sort_buffer_size有关，那数据库设置这个值会不会越大越好？","like_count":0,"discussions":[{"author":{"id":1264162,"avatar":"https://static001.geekbang.org/account/avatar/00/13/4a/22/2681d602.jpg","nickname":"林晓斌","note":"","ucode":"CDE42D44F26240","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":434820,"discussion_content":"好问题\n\n不能哦，并发起来的时候内存占用过大，会到自己系统OOM的","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1546259376,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":55032,"user_name":"吴鸿达","can_delete":false,"product_type":"c1","uid":1306185,"ip_address":"","ucode":"5C4C39C212103D","user_header":"https://static001.geekbang.org/account/avatar/00/13/ee/49/8c1e831f.jpg","comment_is_top":false,"comment_ctime":1546005731,"is_pvip":false,"replies":[{"id":"19960","content":"额感觉你知道些什么😄","user_name":"作者回复","user_name_real":"林晓斌","uid":"1264162","ctime":1546008246,"ip_address":"","comment_id":55032,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1546005731","product_id":100020801,"comment_content":"波波可是百度dba😁","like_count":0,"discussions":[{"author":{"id":1264162,"avatar":"https://static001.geekbang.org/account/avatar/00/13/4a/22/2681d602.jpg","nickname":"林晓斌","note":"","ucode":"CDE42D44F26240","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":434655,"discussion_content":"额感觉你知道些什么😄","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1546008246,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":54621,"user_name":"J!","can_delete":false,"product_type":"c1","uid":1305003,"ip_address":"","ucode":"71C946119B59D1","user_header":"https://static001.geekbang.org/account/avatar/00/13/e9/ab/37903736.jpg","comment_is_top":false,"comment_ctime":1545916592,"is_pvip":false,"replies":[{"id":"19820","content":"索引全表是什么意思","user_name":"作者回复","user_name_real":"林晓斌","uid":"1264162","ctime":1545919908,"ip_address":"","comment_id":54621,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1545916592","product_id":100020801,"comment_content":"order by 主键 desc limit 1也会索引全表？","like_count":0,"discussions":[{"author":{"id":1264162,"avatar":"https://static001.geekbang.org/account/avatar/00/13/4a/22/2681d602.jpg","nickname":"林晓斌","note":"","ucode":"CDE42D44F26240","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":434515,"discussion_content":"索引全表是什么意思","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1545919908,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":52893,"user_name":"Ivan","can_delete":false,"product_type":"c1","uid":1302381,"ip_address":"","ucode":"57090A053A247F","user_header":"https://static001.geekbang.org/account/avatar/00/13/df/6d/44cf0de4.jpg","comment_is_top":false,"comment_ctime":1545548349,"is_pvip":false,"replies":[{"id":"19202","content":"对，要改成riw","user_name":"作者回复","user_name_real":"林晓斌","uid":"1264162","ctime":1545561245,"ip_address":"","comment_id":52893,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1545548349","product_id":100020801,"comment_content":"老师，你的解答上期疑问的例子里，事务隔离级别是什么？我的是 READ COMMITTED，BINLOG_FORMAT = STATEMENT 这样设置后报错ERROR 1665 ","like_count":0,"discussions":[{"author":{"id":1264162,"avatar":"https://static001.geekbang.org/account/avatar/00/13/4a/22/2681d602.jpg","nickname":"林晓斌","note":"","ucode":"CDE42D44F26240","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":433996,"discussion_content":"对，要改成riw","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1545561245,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":52703,"user_name":"TiTi","can_delete":false,"product_type":"c1","uid":1127343,"ip_address":"","ucode":"58F19596A1EF4C","user_header":"https://static001.geekbang.org/account/avatar/00/11/33/af/dda311cf.jpg","comment_is_top":false,"comment_ctime":1545481705,"is_pvip":false,"replies":[{"id":"19170","content":"第二种方法一般用得很少，除非说业务明确，就是这个请求就是特别高频","user_name":"作者回复","user_name_real":"林晓斌","uid":"1264162","ctime":1545489797,"ip_address":"","comment_id":52703,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1545481705","product_id":100020801,"comment_content":"个人本小节学习总结：<br>当需要排序的字段无法通过索引查找直接完成时，MySQL会为排序分配一块内存(sort buffer)。该buffer的大小可以通过参数sort_buffer_size来设置。MySQL遵循“多利用内存，尽量减少磁盘访问”的设计原则。当sort buffer不足以完成需要的排序时，MySQL会利用磁盘临时文件来辅助排序(使用归并排序算法)。<br>通过设置max_length_for_sort_data参数可以让MySQL调整排序时所用的算法：<br><br>1） 当需要返回的字段组的大小小于设定的max_length_for_sort_data参数时，MySQL执行的是全字段排序。也就是说，MySQL会先找到满足条件的、包含所有select字段的所有记录，将它们放到sort buffer(或是磁盘临时辅助文件)中，然后执行排序，再返回排序后的结果；<br><br>2） 当需要返回的字段组的大小大于设定的max_length_for_sort_data参数时，MySQL执行的是rowid排序。也就是说，放到sort buffer(或磁盘临时辅助文件)中的数据记录只包含row id和需要排序的字段，排完序后，再根据排序后的结果row id回到主表取出相应的其它要求返回的字段值，再返回给调用方。这种情况下会多出回主表查其它字段数据的过程。<br><br>思考题的想法：<br>1) 可以在业务端分别做两次查询，查出杭州和苏州的各100条记录，然后再在业务端排序，得到这200条记录中的前100条；<br>2) 由于有分页需求，加上市民表不会频繁更新，我会单独创一张表存放杭州和苏州的市民信息，给这张表建立name列上的索引，来满足分页的业务需求。方法笨是笨了点，但是简单、高效。但是如果业务上还有很多种其它不同城市的组合需求时，这种方法就不太灵活了。<br><br>望老师赐教!","like_count":0,"discussions":[{"author":{"id":1264162,"avatar":"https://static001.geekbang.org/account/avatar/00/13/4a/22/2681d602.jpg","nickname":"林晓斌","note":"","ucode":"CDE42D44F26240","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":433952,"discussion_content":"第二种方法一般用得很少，除非说业务明确，就是这个请求就是特别高频","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1545489797,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":52606,"user_name":"不二","can_delete":false,"product_type":"c1","uid":1140951,"ip_address":"","ucode":"1E1527C71FD9DB","user_header":"https://static001.geekbang.org/account/avatar/00/11/68/d7/714c3d89.jpg","comment_is_top":false,"comment_ctime":1545451651,"is_pvip":false,"replies":[{"id":"19159","content":"估算值没考虑limit ","user_name":"作者回复","user_name_real":"林晓斌","uid":"1264162","ctime":1545459007,"ip_address":"","comment_id":52606,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1545451651","product_id":100020801,"comment_content":"为啥图9和图10的rows还是4000，不是只扫描1000行吗","like_count":0,"discussions":[{"author":{"id":1264162,"avatar":"https://static001.geekbang.org/account/avatar/00/13/4a/22/2681d602.jpg","nickname":"林晓斌","note":"","ucode":"CDE42D44F26240","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":433919,"discussion_content":"估算值没考虑limit ","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1545459007,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":52530,"user_name":"hlong0001","can_delete":false,"product_type":"c1","uid":1303016,"ip_address":"","ucode":"68834B187860EF","user_header":"https://static001.geekbang.org/account/avatar/00/13/e1/e8/b1f5675d.jpg","comment_is_top":false,"comment_ctime":1545407196,"is_pvip":false,"replies":[{"id":"19150","content":"好，记下了😄","user_name":"作者回复","user_name_real":"林晓斌","uid":"1264162","ctime":1545410405,"ip_address":"","comment_id":52530,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1545407196","product_id":100020801,"comment_content":"很希望老师讲讲group by原理","like_count":0,"discussions":[{"author":{"id":1264162,"avatar":"https://static001.geekbang.org/account/avatar/00/13/4a/22/2681d602.jpg","nickname":"林晓斌","note":"","ucode":"CDE42D44F26240","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":433901,"discussion_content":"好，记下了😄","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1545410405,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":52439,"user_name":"HuaMax","can_delete":false,"product_type":"c1","uid":1118488,"ip_address":"","ucode":"2E78DE1AF098AF","user_header":"https://static001.geekbang.org/account/avatar/00/11/11/18/8cee35f9.jpg","comment_is_top":false,"comment_ctime":1545382588,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1545382588","product_id":100020801,"comment_content":"前两个问题我和大家的思路差不多。对于分页的情况，我的理解是从两个有序的长度为10100的数组中取出第10001～10100顺序位的数据，引擎层在内存里应该就可以完成，从索引树里分别取出杭州和苏州的前10100条的name和id，比较name找到第10001～10100顺序位的id再回表即可","like_count":0},{"had_liked":false,"id":52432,"user_name":"HuaMax","can_delete":false,"product_type":"c1","uid":1118488,"ip_address":"","ucode":"2E78DE1AF098AF","user_header":"https://static001.geekbang.org/account/avatar/00/11/11/18/8cee35f9.jpg","comment_is_top":false,"comment_ctime":1545381655,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1545381655","product_id":100020801,"comment_content":"@老杨同志 你的2b的方案感觉不太对，里面两个子查询limit 100并不是按照name字段排序取的前100条吧","like_count":0},{"had_liked":false,"id":52403,"user_name":"力挽狂澜爆炸输出的臭臭宁","can_delete":false,"product_type":"c1","uid":1155904,"ip_address":"","ucode":"E8D26181129BCA","user_header":"https://static001.geekbang.org/account/avatar/00/11/a3/40/e0df3b84.jpg","comment_is_top":false,"comment_ctime":1545376171,"is_pvip":false,"replies":[{"id":"19063","content":"嗯，有道理，好的","user_name":"作者回复","user_name_real":"林晓斌","uid":"1264162","ctime":1545380022,"ip_address":"","comment_id":52403,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1545376171","product_id":100020801,"comment_content":"老师下次可不可以把测试用的数据也发出来，这样我们在本地验证的时候不需要自己构造数据了：）","like_count":0,"discussions":[{"author":{"id":1264162,"avatar":"https://static001.geekbang.org/account/avatar/00/13/4a/22/2681d602.jpg","nickname":"林晓斌","note":"","ucode":"CDE42D44F26240","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":433861,"discussion_content":"嗯，有道理，好的","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1545380022,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":52305,"user_name":"Leon📷","can_delete":false,"product_type":"c1","uid":1219496,"ip_address":"","ucode":"B9BBD1EFAAE5A2","user_header":"https://static001.geekbang.org/account/avatar/00/12/9b/a8/6a391c66.jpg","comment_is_top":false,"comment_ctime":1545360589,"is_pvip":false,"replies":[{"id":"19019","content":"额，这个rows是“满足条件的行”，实际执行就扫到1000就停了","user_name":"作者回复","user_name_real":"林晓斌","uid":"1264162","ctime":1545364566,"ip_address":"","comment_id":52305,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1545360589","product_id":100020801,"comment_content":"老师，加了索引为什么还要扫描4000行，不应该是1000行吗<br>mysql&gt; alter table t add index city_user_age(city, name, age);<br>Query OK, 0 rows affected (1.60 sec)<br>Records: 0  Duplicates: 0  Warnings: 0<br><br>mysql&gt; explain select city,name,age from t where city=&#39;杭州&#39; order by name limit 1000  ;<br>+----+-------------+-------+------------+------+------------------------------+---------------+---------+-------+------+----------+--------------------------+<br>| id | select_type | table | partitions | type | possible_keys                | key           | key_len | ref   | rows | filtered | Extra                    |<br>+----+-------------+-------+------------+------+------------------------------+---------------+---------+-------+------+----------+--------------------------+<br>|  1 | SIMPLE      | t     | NULL       | ref  | city,city_user,city_user_age | city_user_age | 50      | const | 4000 |   100.00 | Using where; Using index |<br>+----+-------------+-------+------------+------+------------------------------+---------------+---------+-------+------+----------+--------------------------+<br>","like_count":0,"discussions":[{"author":{"id":1264162,"avatar":"https://static001.geekbang.org/account/avatar/00/13/4a/22/2681d602.jpg","nickname":"林晓斌","note":"","ucode":"CDE42D44F26240","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":433827,"discussion_content":"额，这个rows是“满足条件的行”，实际执行就扫到1000就停了","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1545364566,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":52108,"user_name":"古娜拉黑暗之神·巴啦啦能量·堕落达","can_delete":false,"product_type":"c1","uid":1185642,"ip_address":"","ucode":"080BBCEF7DE985","user_header":"https://static001.geekbang.org/account/avatar/00/12/17/6a/c979163e.jpg","comment_is_top":false,"comment_ctime":1545310817,"is_pvip":false,"replies":[{"id":"18911","content":"Explain 发来看看<br><br>","user_name":"作者回复","user_name_real":"林晓斌","uid":"1264162","ctime":1545314903,"ip_address":"","comment_id":52108,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1545310817","product_id":100020801,"comment_content":"老师，您好。<br>请问：建立了city、name、age的联合索引之后，执行  “select city,name,age from t where city=&#39;杭州&#39; order by name limit 1000  ;” 语句，显示的rows（影响行数）依旧是4000呢？不应该是1000吗？","like_count":0,"discussions":[{"author":{"id":1264162,"avatar":"https://static001.geekbang.org/account/avatar/00/13/4a/22/2681d602.jpg","nickname":"林晓斌","note":"","ucode":"CDE42D44F26240","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":433744,"discussion_content":"Explain 发来看看\n\n","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1545314903,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":52043,"user_name":"Goal","can_delete":false,"product_type":"c1","uid":1307012,"ip_address":"","ucode":"C337CD4C7E07B0","user_header":"https://static001.geekbang.org/account/avatar/00/13/f1/84/7d21bd9e.jpg","comment_is_top":false,"comment_ctime":1545299184,"is_pvip":false,"replies":[{"id":"18828","content":"没有，使用change buffer的时候，是完全没有操作到这个普通索引的页面的<br><br>操作的只是change buffer .<br><br>当然，如果你指的“两次”一次是主键索引的更新，一次是普通索引（这里是change buffer), 那这个是有两次的，但是这不算重复。","user_name":"作者回复","user_name_real":"林晓斌","uid":"1264162","ctime":1545299689,"ip_address":"","comment_id":52043,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1545299184","product_id":100020801,"comment_content":"老师好：<br>请问一个：前面 redo log 和 change buffer的问题<br>如果是更新：引擎将这行新数据更新到内存中，同时将这个更新操作记录到 redo log 里面，然后进入prepare 状态，后续就是binlog，commit啦；<br><br>而，如果是普通索引的更新“虽然是只更新内存，但是在事务提交的时候，我们把 change buffer 的操作也记录到 redo log 里了，所以崩溃恢复的时候，change buffer 也能找回来。”<br><br>那么这样，redo log 不就重复记录了同一个更新的俩次操作吗？","like_count":0,"discussions":[{"author":{"id":1264162,"avatar":"https://static001.geekbang.org/account/avatar/00/13/4a/22/2681d602.jpg","nickname":"林晓斌","note":"","ucode":"CDE42D44F26240","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":433718,"discussion_content":"没有，使用change buffer的时候，是完全没有操作到这个普通索引的页面的\n\n操作的只是change buffer .\n\n当然，如果你指的“两次”一次是主键索引的更新，一次是普通索引（这里是change buffer), 那这个是有两次的，但是这不算重复。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1545299689,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":52033,"user_name":"还一棵树","can_delete":false,"product_type":"c1","uid":1317709,"ip_address":"","ucode":"C187F2A141D60E","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/DYAIOgq83eop9WylZJicLQxlvXukXUgPp39zJHyyReK5s1C9VhA6rric7GiarbfQMuWhdCCDdxdfL610Hc4cNkn9Q/132","comment_is_top":false,"comment_ctime":1545298075,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1545298075","product_id":100020801,"comment_content":"课后问题：<br>1、排序是肯定要排序的：<br>key:KEY `iii` (`tag_id`,`puid`)<br>explain select puid  from t where tag_id in(227,228) order by puid limit 5;<br>----&gt;&gt; Using where; Using index; Using filesort<br>2、执行的过程是把tag_id in(227,228)的全部数据取出来 再排序 ，再limit<br><br>为啥mysql的执行过程不是各取 前100条， 然后对这200条结果集 再排序取前100，求老师指点<br>","like_count":0},{"had_liked":false,"id":52018,"user_name":"还一棵树","can_delete":false,"product_type":"c1","uid":1317709,"ip_address":"","ucode":"C187F2A141D60E","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/DYAIOgq83eop9WylZJicLQxlvXukXUgPp39zJHyyReK5s1C9VhA6rric7GiarbfQMuWhdCCDdxdfL610Hc4cNkn9Q/132","comment_is_top":false,"comment_ctime":1545295380,"is_pvip":false,"replies":[{"id":"18843","content":"1. 给一下你的复现例子<br><br>2. 文中也是这么说的哦","user_name":"作者回复","user_name_real":"林晓斌","uid":"1264162","ctime":1545307180,"ip_address":"","comment_id":52018,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1545295380","product_id":100020801,"comment_content":"1，文档中“MySQL 调用了 InnoDB 引擎提供的接口”验证这个结论的图片是贴错了（READ-COMMITTED、REPEATABLE-READ分别在这两个事物隔离级别下都对不上图片的结果）<br>MySQL 调用了 InnoDB 引擎提供的接<br>2、select ... from ... for update和update一样，都是当前读。而select ... from ...是一致性读，这个一致性读读到的内容取决于事物的隔离级别，不同的隔离级别select ... from .的结果也是不一样的","like_count":0,"discussions":[{"author":{"id":1264162,"avatar":"https://static001.geekbang.org/account/avatar/00/13/4a/22/2681d602.jpg","nickname":"林晓斌","note":"","ucode":"CDE42D44F26240","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":433700,"discussion_content":"1. 给一下你的复现例子\n\n2. 文中也是这么说的哦","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1545307180,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":52016,"user_name":"肖鹏","can_delete":false,"product_type":"c1","uid":1302602,"ip_address":"","ucode":"BE1B8BD7053B9A","user_header":"https://static001.geekbang.org/account/avatar/00/13/e0/4a/c0a3cb3f.jpg","comment_is_top":false,"comment_ctime":1545294245,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1545294245","product_id":100020801,"comment_content":" select * from t where city in (&#39;杭州&#39;,&quot; 苏州 &quot;) order by name limit 100;<br>这里in了两个城市，是一个range操作，这种情况下order by name，是走不了city,name的索引的。可以拆成union all就可以利用索引排序。","like_count":0},{"had_liked":false,"id":51893,"user_name":"约书亚","can_delete":false,"product_type":"c1","uid":1046714,"ip_address":"","ucode":"81EA27ADD9EC1A","user_header":"https://static001.geekbang.org/account/avatar/00/0f/f8/ba/14e05601.jpg","comment_is_top":false,"comment_ctime":1545274344,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1545274344","product_id":100020801,"comment_content":"回老师的留言，这个算法也是别处看来的，我的理解是， 先查询limt N&#47;K, M并不是说结果一定在这个区间里，只是由于大概率是均匀分布的，所以这样取到的S，可能比较接近实际全局offset是N+1的那个数。后面第二次查询会对S的实际offset做纠正。<br>","like_count":0},{"had_liked":false,"id":51851,"user_name":"约书亚","can_delete":false,"product_type":"c1","uid":1046714,"ip_address":"","ucode":"81EA27ADD9EC1A","user_header":"https://static001.geekbang.org/account/avatar/00/0f/f8/ba/14e05601.jpg","comment_is_top":false,"comment_ctime":1545270390,"is_pvip":false,"replies":[{"id":"18793","content":"我感觉第一步取 limit N&#47;K,M 好像不太对…","user_name":"作者回复","user_name_real":"林晓斌","uid":"1264162","ctime":1545271825,"ip_address":"","comment_id":51851,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1545270390","product_id":100020801,"comment_content":"课后题第三问，让我感觉有些像分库模式下的精确分页方案。假设查询limit N, M。步骤大概是：<br>1. 先按照分库数量K均分N。让每个库都查询limt N&#47;K, M。（N&#47;K不整就向下取整）<br>2. 找到所有分库K * M个结果中最小的那个值S，以及每个分库对应的M个结果中最大值Lk, 每个分库执行limit S, Lk。<br>3. 将所有这些值汇总，能得到L值在整体排序中的offset，这个位置一定小于等于要全局查询limit N, M的第一个值的offset，根据这个offset结合第二次查询的所有结果，进行一次类似的归并排序操作直到找到第M个的结果。<br>这种需要两次(2 * K次)查询。而且过程如此复杂，想想就恐怖，步骤2极端情况可能会查出海量数据。可能在一个库里查询能简化某几步？<br>最好还是业务解决...","like_count":0,"discussions":[{"author":{"id":1264162,"avatar":"https://static001.geekbang.org/account/avatar/00/13/4a/22/2681d602.jpg","nickname":"林晓斌","note":"","ucode":"CDE42D44F26240","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":433649,"discussion_content":"我感觉第一步取 limit N/K,M 好像不太对…","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1545271825,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":51829,"user_name":"天王","can_delete":false,"product_type":"c1","uid":1239337,"ip_address":"","ucode":"C074B2F9A5F007","user_header":"https://static001.geekbang.org/account/avatar/00/12/e9/29/629d9bb0.jpg","comment_is_top":false,"comment_ctime":1545267881,"is_pvip":false,"replies":[{"id":"18778","content":"这个不是innodb切换到，是优化器选择的，就是根据max_length_for_sort_data跟单行大小判断的","user_name":"作者回复","user_name_real":"林晓斌","uid":"1264162","ctime":1545270981,"ip_address":"","comment_id":51829,"utype":1}],"discussion_count":0,"race_medal":0,"score":"1545267881","product_id":100020801,"comment_content":"请教个问题 innodb会自动切换rowid和全字段排序吗，如果有，什么时候会触发？","like_count":0},{"had_liked":false,"id":51813,"user_name":"天王","can_delete":false,"product_type":"c1","uid":1239337,"ip_address":"","ucode":"C074B2F9A5F007","user_header":"https://static001.geekbang.org/account/avatar/00/12/e9/29/629d9bb0.jpg","comment_is_top":false,"comment_ctime":1545266450,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1545266450","product_id":100020801,"comment_content":"sort排序执行过程1初始化sort_buffer ，确定把哪几个字段放入2从非聚集索引树上找到id 3 从id去聚集索引找到行数据，放到sort_biffer 4重复操作2和3，把查询到的结果放入soft_buffer 5如果内存够大，内存中快速排序返回，如果内存不够大，借助临时文件，归并排序。6如果行数据太多，可以启用rowid排序，相对于全字段排序，rowid排序，有回表操作，如果内存够大，尽量用全字段排序。","like_count":0},{"had_liked":false,"id":51806,"user_name":"天王","can_delete":false,"product_type":"c1","uid":1239337,"ip_address":"","ucode":"C074B2F9A5F007","user_header":"https://static001.geekbang.org/account/avatar/00/12/e9/29/629d9bb0.jpg","comment_is_top":false,"comment_ctime":1545265769,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1545265769","product_id":100020801,"comment_content":"order by排序，先把查到的字段放到sort_buffer，1 如果字段长度没有超过sort_buffer_size,在内存里面排序，2 如果排序的数据量超过了sort_buffer_size,需要借助临时文件，外部文件排序用的归并排序，分成多个小文件，小文件排完之后，合成一个大文件。3如果在命中的索引树上有排序，则不需要排序，直接获取到数据。4 rowid排序，会限制排序的字段，如果sort_buffer_size小的时候启用，足够大，不建议使用，因为涉及，排序以后数据要回表。","like_count":0},{"had_liked":false,"id":51753,"user_name":"王子鹏","can_delete":false,"product_type":"c1","uid":1296763,"ip_address":"","ucode":"2B0494362E68A8","user_header":"https://static001.geekbang.org/account/avatar/00/13/c9/7b/a89761ce.jpg","comment_is_top":false,"comment_ctime":1545231639,"is_pvip":false,"discussion_count":1,"race_medal":0,"score":"1545231639","product_id":100020801,"comment_content":"请问多表关联排序，如果用rowid算法排序，order by 的字段没有走索引，也是一样的流程吗？先排好序再去取要select的所有字段？","like_count":0,"discussions":[{"author":{"id":1065351,"avatar":"https://static001.geekbang.org/account/avatar/00/10/41/87/d26efb2e.jpg","nickname":"SuperSnow","note":"","ucode":"84C89AA8083E6A","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":159125,"discussion_content":"没走索引，那就是全表扫描了。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1580653477,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":51701,"user_name":"way","can_delete":false,"product_type":"c1","uid":1302713,"ip_address":"","ucode":"AD1CBEBA5FDBA9","user_header":"https://static001.geekbang.org/account/avatar/00/13/e0/b9/bca7ff9a.jpg","comment_is_top":false,"comment_ctime":1545225596,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1545225596","product_id":100020801,"comment_content":"我之前测试过。percona Server 5.7.18以下update之后如果没有更改不更新read view。但是以上版本会更新。是个bug吧。","like_count":0},{"had_liked":false,"id":51700,"user_name":"way","can_delete":false,"product_type":"c1","uid":1302713,"ip_address":"","ucode":"AD1CBEBA5FDBA9","user_header":"https://static001.geekbang.org/account/avatar/00/13/e0/b9/bca7ff9a.jpg","comment_is_top":false,"comment_ctime":1545225395,"is_pvip":false,"replies":[{"id":"18717","content":"没办法，它自己没更新，最后一个语句是快照读，<br>那就只能判断视图创建的时间和数据版本的关系<br><br>这时候的（1，3）是session B生成的，sessionA看不到，只能看上一个（1，2）","user_name":"作者回复","user_name_real":"林晓斌","uid":"1264162","ctime":1545230042,"ip_address":"","comment_id":51700,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1545225395","product_id":100020801,"comment_content":"老师好。上期问题中。session A的update虽然没有修改match 1change 0,但是在rr下不应该是做一次当前读更新read view么？此时还读到历史值。是不是有问题？","like_count":0,"discussions":[{"author":{"id":1264162,"avatar":"https://static001.geekbang.org/account/avatar/00/13/4a/22/2681d602.jpg","nickname":"林晓斌","note":"","ucode":"CDE42D44F26240","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":433582,"discussion_content":"没办法，它自己没更新，最后一个语句是快照读，\n那就只能判断视图创建的时间和数据版本的关系\n\n这时候的（1，3）是session B生成的，sessionA看不到，只能看上一个（1，2）","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1545230042,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":51668,"user_name":"gether","can_delete":false,"product_type":"c1","uid":1015780,"ip_address":"","ucode":"224698C2C609EA","user_header":"https://static001.geekbang.org/account/avatar/00/0f/7f/e4/990dcd8e.jpg","comment_is_top":false,"comment_ctime":1545220936,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1545220936","product_id":100020801,"comment_content":"第一个问题，会进行排序，因为联合索引只保证了city和name联合有序，如果改成order by city,name那就不需要额外的排序；<br><br>第二个问题，可以只提供上一页下一页的功能，让业务将上一次的分页最大id传入，然后where id&gt;maxid and city in(&#39;杭州&#39;,&#39;苏州&#39;) order by name limit 100","like_count":0},{"had_liked":false,"id":51630,"user_name":"joseph","can_delete":false,"product_type":"c1","uid":1305358,"ip_address":"","ucode":"FE85D68678AB4E","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/5C2aE3Lwhz7vpoUhuUa9MzmtEDH8O7oYslu7iabYIY3v5XxJEQJYyFiaXhjBXMpmDmW1AOGvFJ1cx26jqwQ9tKkQ/132","comment_is_top":false,"comment_ctime":1545211371,"is_pvip":false,"replies":[{"id":"18695","content":"所以这里的结论是，其实会话1根本没去修改…","user_name":"作者回复","user_name_real":"林晓斌","uid":"1264162","ctime":1545223216,"ip_address":"","comment_id":51630,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1545211371","product_id":100020801,"comment_content":"老师：可见性验证方式这里，没明白，虽然事务章节的理解，应该是可以看到自己的更新版本才对，在5.6.28下面实验没有出来(1,3)，还是(1,2)，隔离级别rr<br>如：<br>会话一：<br>mysql&gt; show variables like &#39;tx_iso%&#39;;<br>+---------------+-----------------+<br>| Variable_name | Value           |<br>+---------------+-----------------+<br>| tx_isolation  | REPEATABLE-READ |<br>+---------------+-----------------+<br>1 row in set (0.00 sec)<br><br>mysql&gt; begin;<br>Query OK, 0 rows affected (0.00 sec)<br><br>mysql&gt; select * from t where id =1;<br>+----+------+<br>| id | a    |<br>+----+------+<br>|  1 |    2 |<br>+----+------+<br>1 row in set (0.00 sec)<br><br>mysql&gt; <br>mysql&gt; <br>mysql&gt; update t set a =3 where id =1;<br>Query OK, 0 rows affected (0.00 sec)<br>Rows matched: 1  Changed: 0  Warnings: 0<br><br>mysql&gt; select * from t where id =1;<br>+----+------+<br>| id | a    |<br>+----+------+<br>|  1 |    2 |<br>+----+------+<br>1 row in set (0.00 sec)<br><br>会话二：<br>mysql&gt; show variables like &#39;tx_iso%&#39;;<br>+---------------+-----------------+<br>| Variable_name | Value           |<br>+---------------+-----------------+<br>| tx_isolation  | REPEATABLE-READ |<br>+---------------+-----------------+<br>1 row in set (0.01 sec)<br><br>mysql&gt; show create table t\\G;<br>*************************** 1. row ***************************<br>       Table: t<br>Create Table: CREATE TABLE `t` (<br>  `id` int(11) NOT NULL AUTO_INCREMENT,<br>  `a` int(11) DEFAULT NULL,<br>  PRIMARY KEY (`id`)<br>) ENGINE=InnoDB AUTO_INCREMENT=2 DEFAULT CHARSET=utf8mb4<br>1 row in set (0.00 sec)<br><br>ERROR: <br>No query specified<br><br>mysql&gt; update t set a =3 where id =1;<br>Query OK, 1 row affected (0.01 sec)<br>Rows matched: 1  Changed: 1  Warnings: 0<br>","like_count":0,"discussions":[{"author":{"id":1264162,"avatar":"https://static001.geekbang.org/account/avatar/00/13/4a/22/2681d602.jpg","nickname":"林晓斌","note":"","ucode":"CDE42D44F26240","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":433541,"discussion_content":"所以这里的结论是，其实会话1根本没去修改…","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1545223216,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":51626,"user_name":"everyok22","can_delete":false,"product_type":"c1","uid":1213878,"ip_address":"","ucode":"3A3304CCDC5C5C","user_header":"","comment_is_top":false,"comment_ctime":1545210852,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1545210852","product_id":100020801,"comment_content":"1： select * from t where city in (&#39;杭州&#39;,&quot; 苏州 &quot;) order by name limit 100; 这个语句执行的时候应该是要排序的。<br>2：我想到的是改成这样：<br>SELECT * FROM <br> (<br>\t(SELECT * FROM t WHERE city = &#39;杭州&#39; ORDER BY NAME LIMIT 100)  UNION ALL <br>\t(SELECT * FROM t WHERE city = &#39;苏州&#39; ORDER BY NAME LIMIT 100)<br> ) AS temp <br> ORDER BY NAME LIMIT 100; <br>3：limit这个分页我就不知道怎么优化了<br><br>","like_count":0},{"had_liked":false,"id":51602,"user_name":"铁皮","can_delete":false,"product_type":"c1","uid":1013200,"ip_address":"","ucode":"E20FB02D9ABD20","user_header":"https://static001.geekbang.org/account/avatar/00/0f/75/d0/0053c9ba.jpg","comment_is_top":false,"comment_ctime":1545206575,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1545206575","product_id":100020801,"comment_content":"课后解答：<br> select * from t where city in (&#39;杭州&#39;,&quot; 苏州 &quot;) order by name limit 100;<br>这条SQL语句会有排序。<br><br>避免排序的解决方案：<br>将SQL语句拆分成两条SQL语句<br>  1.select * from t where city = &#39;杭州&#39; order by name limit 100;<br>  2.select * from t where city = &#39;苏州&#39; order by name limit 100;<br>然后对这两个结果集进行归并排序，取前100条既可。不够100条有多少就返回多少条。<br><br>分页需求的实现<br>  没想出来。必需得Using filesort, 而且需要join。性能更差。。。<br>select a.* from t a inner join (select id from t where city in (&#39;杭州&#39;,&quot; 苏州 &quot;) order by name limit 10000, 100) b on a.id = b.id;","like_count":0},{"had_liked":false,"id":51599,"user_name":"en","can_delete":false,"product_type":"c1","uid":1157417,"ip_address":"","ucode":"C14EDEED543AC8","user_header":"https://static001.geekbang.org/account/avatar/00/11/a9/29/dad1f942.jpg","comment_is_top":false,"comment_ctime":1545205952,"is_pvip":false,"replies":[{"id":"18682","content":"前面可以使用覆盖索引，mysql认为选这个好，<br><br>后面的语句是不行的了，优化器认为还不如全表扫描😓","user_name":"作者回复","user_name_real":"林晓斌","uid":"1264162","ctime":1545215306,"ip_address":"","comment_id":51599,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1545205952","product_id":100020801,"comment_content":"explain select  city,name from t  where city=&#39;杭州&#39; order by name;<br>+------+-------------+-------+------+----------------+-----------+---------+-------+------+--------------------------+<br>| id   | select_type | table | type | possible_keys  | key       | key_len | ref   | rows | Extra                    |<br>+------+-------------+-------+------+----------------+-----------+---------+-------+------+--------------------------+<br>|    1 | SIMPLE      | t     | ref  | city,city_user | city_user | 50      | const |    3 | Using where; Using index |<br>+------+-------------+-------+------+----------------+-----------+---------+-------+------+--------------------------+<br>请问老师为什么检索字段的不同，会影响索引的使用与否呢？<br>explain select  age,city,name from t  where city=&#39;杭州&#39; order by name;<br>+------+-------------+-------+------+----------------+------+---------+------+------+-----------------------------+<br>| id   | select_type | table | type | possible_keys  | key  | key_len | ref  | rows | Extra                       |<br>+------+-------------+-------+------+----------------+------+---------+------+------+-----------------------------+<br>|    1 | SIMPLE      | t     | ALL  | city,city_user | NULL | NULL    | NULL |    3 | Using where; Using filesort |<br>","like_count":0,"discussions":[{"author":{"id":1264162,"avatar":"https://static001.geekbang.org/account/avatar/00/13/4a/22/2681d602.jpg","nickname":"林晓斌","note":"","ucode":"CDE42D44F26240","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":433532,"discussion_content":"前面可以使用覆盖索引，mysql认为选这个好，\n\n后面的语句是不行的了，优化器认为还不如全表扫描😓","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1545215306,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":51598,"user_name":"爱学习的好孩子","can_delete":false,"product_type":"c1","uid":1331195,"ip_address":"","ucode":"C51EA3E529BE0B","user_header":"https://static001.geekbang.org/account/avatar/00/14/4f/fb/3eb917f1.jpg","comment_is_top":false,"comment_ctime":1545205894,"is_pvip":false,"replies":[{"id":"18681","content":"贴一下你的表结构，SQL语句，optimizer_trace最后部分的截图哦","user_name":"作者回复","user_name_real":"林晓斌","uid":"1264162","ctime":1545215134,"ip_address":"","comment_id":51598,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1545205894","product_id":100020801,"comment_content":"老师你好，全字段排序那一节，我做了实验，我的排序缓存大小是1M， examined rows 是800万，三个字段都有数据，三个字段分别是  int.  bigint  bigint那么如果这些数据都放到缓存应该需要（4+8+8）*800万等于160M，但是我看了都没有用到临时表，这是为什么？","like_count":0,"discussions":[{"author":{"id":1264162,"avatar":"https://static001.geekbang.org/account/avatar/00/13/4a/22/2681d602.jpg","nickname":"林晓斌","note":"","ucode":"CDE42D44F26240","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":433531,"discussion_content":"贴一下你的表结构，SQL语句，optimizer_trace最后部分的截图哦","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1545215134,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":51575,"user_name":"☞","can_delete":false,"product_type":"c1","uid":1302793,"ip_address":"","ucode":"6FAEF05F234D2A","user_header":"https://static001.geekbang.org/account/avatar/00/13/e1/09/9483f537.jpg","comment_is_top":false,"comment_ctime":1545202079,"is_pvip":false,"replies":[{"id":"18962","content":"因为要排序的是name字段呀😓","user_name":"作者回复","user_name_real":"林晓斌","uid":"1264162","ctime":1545333162,"ip_address":"","comment_id":51575,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1545202079","product_id":100020801,"comment_content":"老师您好：<br>       每行列数据较多的情况，为什么不能直接从二级索引中拿city和id去sort buffer进行排序，而是要去主键索引再去拿到这两个列，再去sort buffer排序呢？","like_count":0,"discussions":[{"author":{"id":1264162,"avatar":"https://static001.geekbang.org/account/avatar/00/13/4a/22/2681d602.jpg","nickname":"林晓斌","note":"","ucode":"CDE42D44F26240","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":433519,"discussion_content":"因为要排序的是name字段呀😓","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1545333162,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":51568,"user_name":"Realm","can_delete":false,"product_type":"c1","uid":1081299,"ip_address":"","ucode":"30CBEBE619D1A2","user_header":"https://static001.geekbang.org/account/avatar/00/10/7f/d3/b5896293.jpg","comment_is_top":false,"comment_ctime":1545201078,"is_pvip":true,"replies":[{"id":"19036","content":"对的，你看的很细致👍🏿<br><br><br>我发一个堪误","user_name":"作者回复","user_name_real":"林晓斌","uid":"1264162","ctime":1545372668,"ip_address":"","comment_id":51568,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1545201078","product_id":100020801,"comment_content":"老师：<br>alter table t add index city_user(city, name);<br>1，<br>2，<br>3，从索引 city 取下一个记录主键 id；<br>4，<br>这里的3  是不是从索引(city,name)取下一个记录主键id ?","like_count":0,"discussions":[{"author":{"id":1264162,"avatar":"https://static001.geekbang.org/account/avatar/00/13/4a/22/2681d602.jpg","nickname":"林晓斌","note":"","ucode":"CDE42D44F26240","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":433516,"discussion_content":"对的，你看的很细致👍🏿\n\n\n我发一个堪误","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1545372668,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":51559,"user_name":"柚子","can_delete":false,"product_type":"c1","uid":1002136,"ip_address":"","ucode":"7641A699DA0CFD","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/NhbRicjvf8v3K6D3v1FtOicxOciaPZQsCjCmuGCqea4vJeRVaLicKLpAcFQlcTgLvczBWY7SYDkeOtibxXj1PGl7Nug/132","comment_is_top":false,"comment_ctime":1545199852,"is_pvip":true,"discussion_count":0,"race_medal":0,"score":"1545199852","product_id":100020801,"comment_content":"您好，基于rowid排序的方式，是没有主键或者复合主键的时候用的是rowid， 如果有单字段主键的时候使用主键么？还是和主键无关，都是用系统分配的rowid呢","like_count":0},{"had_liked":false,"id":51529,"user_name":"Ryoma","can_delete":false,"product_type":"c1","uid":1130590,"ip_address":"","ucode":"7F692369239692","user_header":"https://static001.geekbang.org/account/avatar/00/11/40/5e/b8fada94.jpg","comment_is_top":false,"comment_ctime":1545194481,"is_pvip":true,"discussion_count":0,"race_medal":2,"score":"1545194481","product_id":100020801,"comment_content":"关于联合索引的问题，还有一个问题：<br>我使用col0 及 col1字段建立联合唯一索引，如果只是简单拼接的话，比如有两行数据如下所示：<br>col0  col1<br>1       11<br>11      1<br><br>拼接后的数据都是111，此时不就与唯一索引的前提冲突了么","like_count":0},{"had_liked":false,"id":51519,"user_name":"包包up","can_delete":false,"product_type":"c1","uid":1073495,"ip_address":"","ucode":"A6F51A62A8B362","user_header":"https://static001.geekbang.org/account/avatar/00/10/61/57/6f3c81dd.jpg","comment_is_top":false,"comment_ctime":1545193064,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1545193064","product_id":100020801,"comment_content":"1.语句执行的时候会有排序过程，city_name(city, name) 这个联合索引，因为索引里的顺序是先city再name，多个city的时候取出来的顺序就跟name没有关系了。<br>这里想确认一个问题，where city in (&#39;杭州&#39;,&quot; 苏州 &quot;)这个操作，mysql会按照in里面key的字典序依次去索引里找对应的id吗？<br>2.为了避免mysql做排序，可以通过两个sql去mysql里取数据。<br>mysql&gt; select * from t where city = &quot;杭州&quot; order by name limit 100;<br>mysql&gt; select * from t where city = &quot;苏州&quot; order by name limit 100;<br>这两个sql，mysql都不需要进行排序，city_name(city, name) 这个联合索引足够满足查询要求的数据了。最后再由业务程序对两个结果合并和排序。<br>3.最后一个问题就不太清楚了，感觉上是要建立name字段的索引。<br><br>","like_count":0},{"had_liked":false,"id":51508,"user_name":"梁中华","can_delete":false,"product_type":"c1","uid":1006789,"ip_address":"","ucode":"52FE40242CBAD0","user_header":"https://static001.geekbang.org/account/avatar/00/0f/5c/c5/1231d633.jpg","comment_is_top":false,"comment_ctime":1545191259,"is_pvip":true,"discussion_count":0,"race_medal":1,"score":"1545191259","product_id":100020801,"comment_content":"应该不需要全排序，理想情况下，应该是两个索引下各取1000条，然后这两千再排序，不知道引擎有没有这么智能","like_count":0},{"had_liked":false,"id":51507,"user_name":"梁中华","can_delete":false,"product_type":"c1","uid":1006789,"ip_address":"","ucode":"52FE40242CBAD0","user_header":"https://static001.geekbang.org/account/avatar/00/0f/5c/c5/1231d633.jpg","comment_is_top":false,"comment_ctime":1545191258,"is_pvip":true,"replies":[{"id":"18636","content":"不智能😓","user_name":"作者回复","user_name_real":"林晓斌","uid":"1264162","ctime":1545194646,"ip_address":"","comment_id":51507,"utype":1}],"discussion_count":2,"race_medal":1,"score":"1545191258","product_id":100020801,"comment_content":"应该不需要全排序，理想情况下，应该是两个索引下各取1000条，然后这两千再排序，不知道引擎有没有这么智能","like_count":0,"discussions":[{"author":{"id":1264162,"avatar":"https://static001.geekbang.org/account/avatar/00/13/4a/22/2681d602.jpg","nickname":"林晓斌","note":"","ucode":"CDE42D44F26240","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":433486,"discussion_content":"不智能😓","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1545194646,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1186467,"avatar":"https://static001.geekbang.org/account/avatar/00/12/1a/a3/a7da014c.jpg","nickname":"Zp","note":"","ucode":"A15C8753F2D3AA","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":577803,"discussion_content":"这里是指会把两个城市的所有数据全部取出来排序 ，取前1000吗 ？","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1656342639,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":51497,"user_name":"didiren","can_delete":false,"product_type":"c1","uid":1305376,"ip_address":"","ucode":"8341F02F2ABA60","user_header":"https://static001.geekbang.org/account/avatar/00/13/eb/20/a02c4f61.jpg","comment_is_top":false,"comment_ctime":1545189863,"is_pvip":false,"replies":[{"id":"18617","content":"表结构和SQL语句发出来看下","user_name":"作者回复","user_name_real":"林晓斌","uid":"1264162","ctime":1545191245,"ip_address":"","comment_id":51497,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1545189863","product_id":100020801,"comment_content":"老师，关于上一节的课后问题我又做了一次实验，在RR隔离级别下与你说的结论不同，sessionA的第二次查询读到的仍然是老数据，而不是更新后的值，说明更新并没有发生在引擎层，sessionA没有生成新的数据版本。<br>只有在RC隔离级别下第二次查询才和你的实验结果相同，读到更新后的数据，因为RC用的是当前读<br>不知道我理解的对不对，能为我解答一下吗？","like_count":0,"discussions":[{"author":{"id":1264162,"avatar":"https://static001.geekbang.org/account/avatar/00/13/4a/22/2681d602.jpg","nickname":"林晓斌","note":"","ucode":"CDE42D44F26240","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":433482,"discussion_content":"表结构和SQL语句发出来看下","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1545191245,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":51488,"user_name":"Geek_02538c","can_delete":false,"product_type":"c1","uid":1336903,"ip_address":"","ucode":"26E208B5AB7D7F","user_header":"","comment_is_top":false,"comment_ctime":1545189279,"is_pvip":true,"replies":[{"id":"18630","content":"1. 这要看你主库上的读写模式<br>2. 一般看日志盘<br>3. 其实从库如果考虑切换以后有可能当主库，一般大家会设置成一样的。 纯读备库可以考虑关掉像trx_commit、sync_binlog这样的参数","user_name":"作者回复","user_name_real":"林晓斌","uid":"1264162","ctime":1545192848,"ip_address":"","comment_id":51488,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1545189279","product_id":100020801,"comment_content":"请教3个问题1.将日志文件和数据文件分配到多个磁盘上是否能提升性能，提升空间多大？2.如果日志文件和数据文件分配到多个磁盘上，磁盘的性能又不同，Mysql 里的innodb_io_capacity 该如何设置？3。对于主从架构，其场景明显不同，Mysql 的系统参数该如何调整？","like_count":0,"discussions":[{"author":{"id":1264162,"avatar":"https://static001.geekbang.org/account/avatar/00/13/4a/22/2681d602.jpg","nickname":"林晓斌","note":"","ucode":"CDE42D44F26240","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":433479,"discussion_content":"1. 这要看你主库上的读写模式\n2. 一般看日志盘\n3. 其实从库如果考虑切换以后有可能当主库，一般大家会设置成一样的。 纯读备库可以考虑关掉像trx_commit、sync_binlog这样的参数","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1545192848,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":51472,"user_name":"令狐少侠","can_delete":false,"product_type":"c1","uid":1334516,"ip_address":"","ucode":"36390E67AF0779","user_header":"https://static001.geekbang.org/account/avatar/00/14/5c/f4/88f107d9.jpg","comment_is_top":false,"comment_ctime":1545186913,"is_pvip":false,"replies":[{"id":"18619","content":"第20篇会提到这个，但是我不确定能不能完全解决你的疑惑，看完那篇，有问题你再留言哈","user_name":"作者回复","user_name_real":"林晓斌","uid":"1264162","ctime":1545191400,"ip_address":"","comment_id":51472,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1545186913","product_id":100020801,"comment_content":"老师，接上一篇回答，主要想了解函数执行原理，以及为什么有的函数会使索引失效","like_count":0,"discussions":[{"author":{"id":1264162,"avatar":"https://static001.geekbang.org/account/avatar/00/13/4a/22/2681d602.jpg","nickname":"林晓斌","note":"","ucode":"CDE42D44F26240","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":433470,"discussion_content":"第20篇会提到这个，但是我不确定能不能完全解决你的疑惑，看完那篇，有问题你再留言哈","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1545191400,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":51470,"user_name":"帆帆帆帆帆帆帆帆","can_delete":false,"product_type":"c1","uid":1304645,"ip_address":"","ucode":"0CB732FFD07463","user_header":"https://static001.geekbang.org/account/avatar/00/13/e8/45/c58cb283.jpg","comment_is_top":false,"comment_ctime":1545186795,"is_pvip":false,"replies":[{"id":"18620","content":"嗯，50不够用100看看😄","user_name":"作者回复","user_name_real":"林晓斌","uid":"1264162","ctime":1545191450,"ip_address":"","comment_id":51470,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1545186795","product_id":100020801,"comment_content":"(name,city)索引不太好，这样会全索引扫描。<br>select * from t where city = &#39;杭州&#39; order by name limit 50<br>union<br>select * from  t where city = &#39; 苏州&#39; order by name limit 50;<br>最后客户端把100记录按name排序。这个方案也有点问题，它和原语句的SQL含义并非完全一致的。<br>显示每一页的时候，把当前页的最后一条记录的name保存下来，点击下一页的时候，把这个值传给sql。<br>","like_count":0,"discussions":[{"author":{"id":1264162,"avatar":"https://static001.geekbang.org/account/avatar/00/13/4a/22/2681d602.jpg","nickname":"林晓斌","note":"","ucode":"CDE42D44F26240","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":433469,"discussion_content":"嗯，50不够用100看看😄","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1545191450,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":51464,"user_name":"帆帆帆帆帆帆帆帆","can_delete":false,"product_type":"c1","uid":1304645,"ip_address":"","ucode":"0CB732FFD07463","user_header":"https://static001.geekbang.org/account/avatar/00/13/e8/45/c58cb283.jpg","comment_is_top":false,"comment_ctime":1545186055,"is_pvip":false,"replies":[{"id":"18631","content":"额图贴错了，更新了哈<br><br>我们的结论是一致的哦，都是update以后能看到c=3了<br><br>","user_name":"作者回复","user_name_real":"林晓斌","uid":"1264162","ctime":1545193137,"ip_address":"","comment_id":51464,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1545186055","product_id":100020801,"comment_content":"答案中的内容我验证的情况不一样。<br>mysql&gt; begin;<br>Query OK, 0 rows affected (0.00 sec)<br><br>mysql&gt; <br>mysql&gt; select * from t where id=1;<br>+----+------+<br>| id | a    |<br>+----+------+<br>|  1 |    2 |<br>+----+------+<br>1 row in set (0.00 sec)<br><br>mysql&gt; update t set a=3 where id=1;<br>Query OK, 0 rows affected (0.00 sec)<br>Rows matched: 1  Changed: 0  Warnings: 0<br><br>mysql&gt; select * from t where id=1;<br>+----+------+<br>| id | a    |<br>+----+------+<br>|  1 |    3 |<br>+----+------+<br>1 row in set (0.00 sec)<br>可以看到我在执行update语句的时候Changed: 0 ，而不是作者截图中的Changed: 1 （这里我没有贴另一个会话的update）。实验中mysql版本是5.7.18。另外作者在”日志和索引相关问题“的文章中，提出这个问题的截图也是Changed: 0，只是当时没有第二个会话去update。<br><br>select ... from ... for update和update一样，都是当前读。而select ... from ...是一致性读，故两个语句返回的结果不一样。所以innodb在执行update的时候，是能够确定(id=1)和(a=3)的。<br><br>","like_count":0,"discussions":[{"author":{"id":1264162,"avatar":"https://static001.geekbang.org/account/avatar/00/13/4a/22/2681d602.jpg","nickname":"林晓斌","note":"","ucode":"CDE42D44F26240","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":433466,"discussion_content":"额图贴错了，更新了哈\n\n我们的结论是一致的哦，都是update以后能看到c=3了\n\n","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1545193137,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":51453,"user_name":"泰格杨","can_delete":false,"product_type":"c1","uid":1182151,"ip_address":"","ucode":"DF23BD9D31B536","user_header":"https://static001.geekbang.org/account/avatar/00/12/09/c7/861b4a70.jpg","comment_is_top":false,"comment_ctime":1545184657,"is_pvip":false,"replies":[{"id":"18633","content":"复杂度是O(n)哈<br><br>取ID这个想法很好","user_name":"作者回复","user_name_real":"林晓斌","uid":"1264162","ctime":1545193500,"ip_address":"","comment_id":51453,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1545184657","product_id":100020801,"comment_content":"会排序。<br>可以业务拆成2条语句执行，然后在代码里做2个有序集合的合并，时间复杂度是O1。<br>有limit的情况会拆成2个语句查出limit 10100的id，然后union并查出所需的id，最后join查出所有的字段。","like_count":0,"discussions":[{"author":{"id":1264162,"avatar":"https://static001.geekbang.org/account/avatar/00/13/4a/22/2681d602.jpg","nickname":"林晓斌","note":"","ucode":"CDE42D44F26240","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":433458,"discussion_content":"复杂度是O(n)哈\n\n取ID这个想法很好","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1545193500,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":51447,"user_name":"Ryoma","can_delete":false,"product_type":"c1","uid":1130590,"ip_address":"","ucode":"7F692369239692","user_header":"https://static001.geekbang.org/account/avatar/00/11/40/5e/b8fada94.jpg","comment_is_top":false,"comment_ctime":1545183508,"is_pvip":true,"replies":[{"id":"18634","content":"嗯，city字段改了哈<br><br>0. 是，我们这个主要是举例😄<br>1. 还是rowid排序，没别的算法可选了🤷‍♂️<br>2.就是拼接😓<br><br>👍🏿","user_name":"作者回复","user_name_real":"林晓斌","uid":"1264162","ctime":1545193646,"ip_address":"","comment_id":51447,"utype":1}],"discussion_count":1,"race_medal":2,"score":"1545183508","product_id":100020801,"comment_content":"老师，建表语句中city是int型是不是弄错了？另外，还有几个问题问老师：<br><br>0：一般来说，city这个字段区分度应该不是很高，比如统计一个省的居民情况时，这个时候city字段有必要建索引么，比如一个省几千万居民数据，但是city只有几十个<br>1：比如设置了sort_data 为16，但是city我使用char(32)来存储，此时排序会采用什么算法呢<br>2：联合索引是怎么存储的，应该不是简单将两个字段拼接起来的，可能内部使用一个hash存储？<br><br>老师能讲解一下么？","like_count":0,"discussions":[{"author":{"id":1264162,"avatar":"https://static001.geekbang.org/account/avatar/00/13/4a/22/2681d602.jpg","nickname":"林晓斌","note":"","ucode":"CDE42D44F26240","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":433455,"discussion_content":"嗯，city字段改了哈\n\n0. 是，我们这个主要是举例😄\n1. 还是rowid排序，没别的算法可选了🤷‍♂️\n2.就是拼接😓\n\n👍🏿","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1545193646,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":51433,"user_name":"稳","can_delete":false,"product_type":"c1","uid":1207298,"ip_address":"","ucode":"11D3604DADD31F","user_header":"https://static001.geekbang.org/account/avatar/00/12/6c/02/cdeeea90.jpg","comment_is_top":false,"comment_ctime":1545182803,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1545182803","product_id":100020801,"comment_content":" select t1.* from t as t1 join(select id from t where city in(&#39;杭州&#39;,&#39;苏州&#39;) order by name limit 10,10) as t2 on t1.id=t2.id","like_count":0},{"had_liked":false,"id":51412,"user_name":"天王","can_delete":false,"product_type":"c1","uid":1239337,"ip_address":"","ucode":"C074B2F9A5F007","user_header":"https://static001.geekbang.org/account/avatar/00/12/e9/29/629d9bb0.jpg","comment_is_top":false,"comment_ctime":1545181194,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1545181194","product_id":100020801,"comment_content":"会有排序过程，联合索引里面姓名在同一个城市内部是有序的，不同城市之间姓名是无序的，排序要重新排。","like_count":0},{"had_liked":false,"id":51382,"user_name":"booker","can_delete":false,"product_type":"c1","uid":1205865,"ip_address":"","ucode":"950860DD77413D","user_header":"https://static001.geekbang.org/account/avatar/00/12/66/69/110f35c1.jpg","comment_is_top":false,"comment_ctime":1545179925,"is_pvip":false,"replies":[{"id":"18538","content":"默认是升序的，<br><br>在这个前提下你再分析看看","user_name":"作者回复","user_name_real":"林晓斌","uid":"1264162","ctime":1545182857,"ip_address":"","comment_id":51382,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1545179925","product_id":100020801,"comment_content":"会有排序过程，因为在创索引是没有指定是升序还是降序默认为升序，在城市字段里会按杭州和苏州先排序，然后再按姓名排序，放入sort_buffer中，然而最终取出的排序只有name字段，所以需要重新排序，不知理解是否正确，还望老师指正！","like_count":0,"discussions":[{"author":{"id":1264162,"avatar":"https://static001.geekbang.org/account/avatar/00/13/4a/22/2681d602.jpg","nickname":"林晓斌","note":"","ucode":"CDE42D44F26240","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":433436,"discussion_content":"默认是升序的，\n\n在这个前提下你再分析看看","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1545182857,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":51370,"user_name":"Survivor","can_delete":false,"product_type":"c1","uid":1016872,"ip_address":"","ucode":"06EF9BDBD90F32","user_header":"https://static001.geekbang.org/account/avatar/00/0f/84/28/1175240c.jpg","comment_is_top":false,"comment_ctime":1545179301,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1545179301","product_id":100020801,"comment_content":"因为是根据 name 字段排序的，city_name 索引只会保证在同一个 city 下 name 的顺序。所以需要内存排序。方案的话，可以 杭州、苏州各查 100 条，在代码中排序。","like_count":0},{"had_liked":false,"id":51353,"user_name":"Richie","can_delete":false,"product_type":"c1","uid":1111377,"ip_address":"","ucode":"1426E1B2E82A43","user_header":"https://static001.geekbang.org/account/avatar/00/10/f5/51/60e91438.jpg","comment_is_top":false,"comment_ctime":1545177650,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1545177650","product_id":100020801,"comment_content":"会有排序操作，但只做索引排序，并取得前100个id回表取数据","like_count":0},{"had_liked":false,"id":51331,"user_name":"北天魔狼","can_delete":false,"product_type":"c1","uid":1188144,"ip_address":"","ucode":"C22623ECEB8DBA","user_header":"https://static001.geekbang.org/account/avatar/00/12/21/30/8ecce1e1.jpg","comment_is_top":false,"comment_ctime":1545174025,"is_pvip":true,"replies":[{"id":"18540","content":"这个过程是对的。<br><br>问题是问，有没有方案避免数据库端排序，也能达到相同的业务效果","user_name":"作者回复","user_name_real":"林晓斌","uid":"1264162","ctime":1545183454,"ip_address":"","comment_id":51331,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1545174025","product_id":100020801,"comment_content":"我认为因为有select *，是先字段排序，再按照排序结果取回整条数据。进一步问题没看懂","like_count":0,"discussions":[{"author":{"id":1264162,"avatar":"https://static001.geekbang.org/account/avatar/00/13/4a/22/2681d602.jpg","nickname":"林晓斌","note":"","ucode":"CDE42D44F26240","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":433413,"discussion_content":"这个过程是对的。\n\n问题是问，有没有方案避免数据库端排序，也能达到相同的业务效果","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1545183454,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]}]}