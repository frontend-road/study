{"id":95660,"title":"10 | 输入和输出设备：交互的演进","content":"<p>你好，我是七牛云许式伟。</p><p>前面我们已经介绍了操作系统的存储管理：内存和外存。今天，让我们来聊一聊操作系统是如何管理输入和输出设备的。</p><p>输入和输出设备有非常非常多。例如输入设备除了你常见的键盘、鼠标、触摸屏外，还有一些采集信息的传感器，如GPS位置、脉搏、心电图、温度、湿度等。我们会把关注点收敛在人机交互相关的设备管理上。</p><h2>交互的演进</h2><p>在计算机外部设备的演进上，人机交互设备的演进毫无疑问是最为剧烈的部分。</p><p>计算机刚出现的时候，人们使用“<strong>打孔卡+打印机</strong>”作为人机交互方式。这个时期还没有操作系统，表达意图非常痛苦，只能在打孔卡上打孔来发送指令。</p><p>但很快，人们找到了 “<strong>键盘+显示器</strong>”， 这对最为经典的人机交互设备。而随着计算机使用人群越来越多，以及使用场景的变化，人机交互的方式也相应地发生了一次又一次的改变。</p><p><img src=\"https://static001.geekbang.org/resource/image/b6/49/b6df127839174d6a1d524a2efa243049.jpg?wh=1050*357\" alt=\"\"></p><p>总结这些改变，我们会发现，人机交互在往越来越自然的方向发展。所谓自然，就是越来越接近于两个人直接的面对面沟通。</p><p>那么，这些人机交互的改变，对于操作系统来说又意味着什么呢？</p><h2>输入设备</h2><p>我们先看输入设备：键盘、鼠标、麦克风、摄像头。</p><h3>键盘</h3><p>键盘输入的管理机制和窗口系统的设计密切相关。为了让用户清楚键盘输入的目的地，窗口系统往往会有一个焦点窗口。</p><!-- [[[read_end]]] --><p>在窗口系统里面，窗口间还有父子关系，焦点窗口还会有父窗口，还有父窗口的父窗口，这些窗口属于活动窗口。</p><p>大部分情况下，键盘输入的事件会先发给焦点窗口，焦点窗口不处理则发给其父窗口，按此传递，直到有人处理了该按键事件，或者直到顶层窗口。</p><p>键盘从功能上来说，<strong>有两个不同的能力：其一是输入文本，其二是触发命令。</strong>从输入文本的角度来说，要有一个输入光标（在Windows里面叫Caret）来指示输入的目的窗口。目的窗口也必然是焦点窗口，否则就会显得很不自然。</p><p>这个交互的呈现方式非常稳定，从 DOS到Windows/Mac，到iOS/Android 都是如此。但是从触发命令的角度来说，命令的响应并不一定是在焦点窗口，甚至不一定在活跃窗口。</p><p>比如Windows下就有热键（HotKey）的概念，能够让非活跃窗口（Inactive Window）也获得响应键盘命令的机会。一个常见的例子是截屏软件，往往需要一个热键来触发截屏。</p><p>到了移动时代，键盘不再是交互主体，但是，键盘作为输入文本的能力很难被替代（虽然有语音输入法），于是它便自然而然地保留下来。</p><p>不过移动设备不太会有人会基于键盘来触发命令，只有常见的热键需求比如截屏、调大或调小音量、拍照等等，被设计为系统功能（对应的，这些功能的热键也被设计为系统按键）保留下来。</p><h3>鼠标</h3><p>鼠标输入的管理机制和键盘一样，和窗口系统的设计密切相关。但鼠标因为有位置，确定鼠标事件的目的地相比键盘事件要简单的多，大部分情况下，鼠标事件总是交给鼠标位置所属的窗口来处理，但也会有一些例外的场景，比如拖放。</p><p>为了支持拖放，Windows操作系统引入了鼠标捕获（Mouse Capture）的概念，一旦鼠标被某个窗口捕获，哪怕鼠标已经移出该窗口，鼠标事件仍然会继续发往该窗口。</p><p>到了移动时代，鼠标已经完全消失（虽然在智能手机之前还是出现过WinCE这样的支持鼠标的移动操作系统），取而代之的是触摸屏。窗口系统也和PC时期完全不同，在屏幕可见范围内只有单个应用程序占满整个屏幕，这让交互的目的地确认不再是个问题。</p><h3>麦克风</h3><p>麦克风是一个非常有潜力的下一代输入设备。今天 IoT 领域如汽车、智能音箱都是很好的发展语音交互能力的场景。包括今天大行其道的手机，语音交互也是一个很好的补充。</p><p>交互方式不管怎么变化，其核心需要实现的都是这样的两大能力：输入文本和触发命令，这一点是不变的。</p><p>语音交互今天仍然还很不成熟，究其原因，语音交互在 IoT 领域还停留在触发命令为主，且哪怕是触发命令这一件事情，也还有重重关卡需要去突破。</p><p>在手机软件中，语音输入文本在部分软件中已经有较多应用，但是主要优势还在日常用语和长文本，在个性化场景如“输入人名之类”，较难达到好的结果。</p><p>从更本源的角度看，语音交互今天仍然在相对封闭的应用技术场景里面发展为主，而作为操作系统的主体交互手段，其能力必须是开放的。因为操作系统是开放的，场景是开放的。</p><h3>摄像头</h3><p>摄像头作为交互设备，除了引入语音，也引入了手势、表情。从表达能力来说，这是最为丰富也是最为自然的一种表达方法。但是技术所限，这种交互方式还只在萌芽阶段。微软的 Kinect 是一个非常经典的案例，它能够让玩家通过语音和手势发指令来玩游戏。</p><h3>输出设备</h3><p>输出设备主要负责向用户反馈信息。比如：显示器（显卡）、音箱（声卡）、打印机。输出设备的演化并不大，最主要的输出设备还是以显示器为主。</p><h3>显示器</h3><p>显示器虽然经历了 CRT 到液晶屏多代更新，但也只是支持的色彩更多（从黑白到彩色到真彩色），分辨率越来越高。实际上，从操作系统的软件治理角度来看，显示器并没有发生过实质性的变化。</p><p>为了让不同软件可以在同一显示器屏幕上呈现，操作系统引入了窗口系统的概念。每个软件有一个或多个窗口（Window，有时候也叫视图，即View）。在 PC 操作系统中，不同窗口还可以层叠（Cascade）或平铺（Tile）。</p><p>通过引入窗口，操作系统在逻辑上把显示器屏幕这个有限的设备资源，分配给了多个软件。和 PC 不同的是，移动设备由于屏幕过小，所以操作系统选择了让软件的顶层窗口全屏占据整个屏幕。这让显示器屏幕的管理变得更为简单。</p><p>除了窗口系统，显示设备管理的另一大挑战是绘制子系统。窗口里面的内容是什么，呈现成什么样子，完全是软件来决定的，这就意味着软件需要绘制能力。</p><p>绘制能力牵涉面非常之广，在操作系统里面，往往有一个独立的子系统（通常叫GDI）与之对应。这里我们简单罗列一下GDI子系统会涉及哪些东西。</p><ul>\n<li><strong>2D图形相关。</strong>包含 Path(路径)、Brush(画刷)、Pen(画笔) 等概念。</li>\n<li><strong>3D图形相关。</strong>包含 Model(模型)、Material(材质)、Lighting(光照) 等概念。</li>\n<li><strong>文本相关。</strong>包含 Font(字体) 等概念。而字体又分点阵字体和 TrueType 字体。TrueType 字体的优势是可以自由缩放。今天我们见到的大部分字体都是 TrueType 字体。</li>\n<li><strong>图像处理相关。</strong>包含 Bitmap(位图) 对象及常见图像格式的编解码器(Encoder/Decoder)。</li>\n</ul><p>窗口系统结合输入设备对应的事件管理系统、绘制(GDI)系统，我们就可以随心所欲地实现各类用户体验非常友好的视窗软件了。</p><p>但是，为了进一步简化开发过程，操作系统往往还提供了一些通用的界面元素，通常我们称之为控件(Control)。常见的控件有如下这些：</p><ul>\n<li>静态文本 (Label)；</li>\n<li>按钮 (Button)；</li>\n<li>单选框 (RadioBox)；</li>\n<li>复选框 (CheckBox)；</li>\n<li>输入框 (Input，也叫EditBox/EditText)；</li>\n<li>进度条 (ProgressBar)；</li>\n<li>……</li>\n</ul><p>不同操作系统提供的基础控件大同小异。不过一些处理细节上的差异往往会成为跨平台开发的坑，如果你希望一份代码多平台使用，在这方面就需要谨慎处理。</p><h3>音箱</h3><p>相比显示器的管理，音箱的设备管理要简单得多。我们很容易做到多个软件同时操作设备，而有合理的结果。</p><p>例如，调整音量我们遵循覆盖原则即可，谁后设置音量就听谁的。而声音的播放则可进行混音处理，多个软件播放的声音同时播放出来，让人听起来像是同时有多个人在说话。</p><p>当然，特定情况下要允许某个软件禁止其他软件播放出来的声音，比如接听电话的软件，需要在电话接通的时候屏蔽掉所有其他软件播放的声音。</p><h3>打印机</h3><p>打印机的管理方式又很不一样，软件使用打印机的过程基本上是互斥的。一个软件在打印文档的时候，其他的软件只能等待它打印完毕后，才能进行打印。</p><p>打印机的使用是以文档为互斥的单位。为了避免软件之间出现长时间的相互等待，操作系统往往在打印机的管理程序中引入很大的打印缓冲。</p><p>软件操作打印机的时候，并不是等待打印机真把内容打印出来，而是把文档打印到打印缓冲中就完成打印。这样，在大部分情况下多个软件不需要因为使用打印机而出现相互等待。</p><h2>结语</h2><p>后面我们在谈“桌面开发”一章中，还会涉及人机交互的更多细节，这一章侧重点在于领域无关的通用操作系统相关的问题域，相关的内容这里仅做概要性的阐述。</p><p>但是，仅通过简单对比所有输入和输出设备的管理方式，我们就可以看出，不同输入和输出设备的管理方法差异非常大，没有太大的共性可言。</p><p>尽管对 CPU 而言，所有外部设备有着相同的抽象，但这些设备的业务逻辑却如此不同，并不能统一抽象它们。正是因为有了操作系统这样的基础软件，这些设备业务逻辑的复杂性才从我们的软件开发过程中解放出来。</p><p>人机交互演化的核心变化是输入设备的变化。我们看到，输入手段的变化是非常剧烈的，且每一次演变都是颠覆性的变化。</p><p>事实上输入意图的理解越来越难了，<strong>因为交互在朝着自然（Nature）和智能（Intelligence）的方向发展。</strong>我们不可能让每一个软件都自己去做输入意图的理解（今天的现状是每个软件自己做），<strong>在未来，必然将由操作系统来实现智能交互的基础架构。</strong></p><p>今天的内容就到这里。你对今天的内容有什么思考与解读，欢迎给我留言，我们一起讨论。如果你觉得有所收获，也欢迎把文章分享给你的朋友。感谢你的收听，我们下期再见。</p>","neighbors":{"left":{"article_title":"09 | 外存管理与文件系统","id":94991},"right":{"article_title":"11 | 多任务：进程、线程与协程","id":96324}},"comments":[{"had_liked":false,"id":95452,"user_name":"jueyoq","can_delete":false,"product_type":"c1","uid":1129625,"ip_address":"","ucode":"5CD5A9CF9B5B1C","user_header":"https://static001.geekbang.org/account/avatar/00/11/3c/99/6080d269.jpg","comment_is_top":false,"comment_ctime":1558057923,"is_pvip":false,"replies":[{"id":"34086","content":"👍","user_name":"作者回复","user_name_real":"许式伟-七牛云(已满)","uid":"1228022","ctime":1558065232,"ip_address":"","comment_id":95452,"utype":1}],"discussion_count":1,"race_medal":0,"score":"138997011395","product_id":100025201,"comment_content":"交互即人机交流。<br>对于交流，人们更趋向于使用更自然更本能的方式。<br>人做为中心，我们就更加注重输入设备的优化。<br>从使用上来说，本质上输入设备要解决的问题就是文本的输入与命令的解析 命令的解释 是离散化的，而未来 会逐渐过度到连续化的意图的识别。<br>输出设备 要解决的问题是 如何保证多个程序共享或互斥的使用输出设备资源。对于显示器我们通过虚拟化窗口的设计来解决多个程序的共享，设计焦点窗口实现用户目的的识别。<br><br><br>最终 其设计原则就是 对于计算机要让其理解什么是输入的数据 什么是命令。对于人 要让其理解 输出的信息，并知道下一步该做什么。","like_count":33,"discussions":[{"author":{"id":1228022,"avatar":"https://static001.geekbang.org/account/avatar/00/12/bc/f6/e61d4b8f.jpg","nickname":"许式伟-七牛云(已满)","note":"","ucode":"1A2F8AA6F6DB54","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":450461,"discussion_content":"👍","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1558065232,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":95522,"user_name":"苟范儿","can_delete":false,"product_type":"c1","uid":1364883,"ip_address":"","ucode":"B06B86765512FA","user_header":"https://static001.geekbang.org/account/avatar/00/14/d3/93/bef5a186.jpg","comment_is_top":false,"comment_ctime":1558075600,"is_pvip":false,"replies":[{"id":"34175","content":"&gt; 对于开发者而言，一般理解的架构更多的是服务端架构、后台架构<br><br>这个是错误的理解。桌面端软件也是需要架构的。如果你定位自己是后台开发人员，那么理解交互确实意义不大，但是如果希望自己是一个优秀的架构师，还是需要关注交互对我们架构的影响的。","user_name":"作者回复","user_name_real":"许式伟-七牛云(已满)","uid":"1228022","ctime":1558095818,"ip_address":"","comment_id":95522,"utype":1}],"discussion_count":1,"race_medal":0,"score":"48802715856","product_id":100025201,"comment_content":"老师今天讲的输入、输出设备交互的变化也是针对终端设备的。而对于开发者而言，一般理解的架构更多的是服务端架构、后台架构，掌握这些人机交互对我们这些后台开发人员所理解的架构设计有什么影响呢？","like_count":12,"discussions":[{"author":{"id":1228022,"avatar":"https://static001.geekbang.org/account/avatar/00/12/bc/f6/e61d4b8f.jpg","nickname":"许式伟-七牛云(已满)","note":"","ucode":"1A2F8AA6F6DB54","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":450495,"discussion_content":"&amp;gt; 对于开发者而言，一般理解的架构更多的是服务端架构、后台架构\n\n这个是错误的理解。桌面端软件也是需要架构的。如果你定位自己是后台开发人员，那么理解交互确实意义不大，但是如果希望自己是一个优秀的架构师，还是需要关注交互对我们架构的影响的。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1558095818,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":95826,"user_name":"我在你的视线里","can_delete":false,"product_type":"c1","uid":1480312,"ip_address":"","ucode":"5373F30E75C07E","user_header":"https://static001.geekbang.org/account/avatar/00/16/96/78/eb86673c.jpg","comment_is_top":false,"comment_ctime":1558192729,"is_pvip":false,"replies":[{"id":"34274","content":"嗯","user_name":"作者回复","user_name_real":"许式伟-七牛云(已满)","uid":"1228022","ctime":1558225559,"ip_address":"","comment_id":95826,"utype":1}],"discussion_count":1,"race_medal":0,"score":"40212898393","product_id":100025201,"comment_content":"越来越nature，意味着越来越artifiacl。估计设备最好的交互就是类人，而不是代替人。","like_count":9,"discussions":[{"author":{"id":1228022,"avatar":"https://static001.geekbang.org/account/avatar/00/12/bc/f6/e61d4b8f.jpg","nickname":"许式伟-七牛云(已满)","note":"","ucode":"1A2F8AA6F6DB54","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":450608,"discussion_content":"嗯","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1558225559,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":95364,"user_name":"涵","can_delete":false,"product_type":"c1","uid":1502742,"ip_address":"","ucode":"BB8575DB13F1E0","user_header":"https://static001.geekbang.org/account/avatar/00/16/ee/16/742956ac.jpg","comment_is_top":false,"comment_ctime":1558043043,"is_pvip":false,"replies":[{"id":"34066","content":"人机交互肯定需要统一的交互范式设计。从这个角度来说，把意图理解放到芯片层并不划算，因为迭代反而慢了。","user_name":"作者回复","user_name_real":"许式伟-七牛云(已满)","uid":"1228022","ctime":1558049743,"ip_address":"","comment_id":95364,"utype":1}],"discussion_count":1,"race_medal":0,"score":"35917781411","product_id":100025201,"comment_content":"老师好，现在输入设备越来越多样化，意图理解越来越复杂，甚至需要专用的芯片，而如果人机交互意图理解放在操作系统层，会否每一种输入设备都需要一套操作系统?如果是这样，那么会否人机交互意图理解的架构下沉到硬件也就是芯片层，例如人脸识别?谢谢。","like_count":9,"discussions":[{"author":{"id":1228022,"avatar":"https://static001.geekbang.org/account/avatar/00/12/bc/f6/e61d4b8f.jpg","nickname":"许式伟-七牛云(已满)","note":"","ucode":"1A2F8AA6F6DB54","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":450426,"discussion_content":"人机交互肯定需要统一的交互范式设计。从这个角度来说，把意图理解放到芯片层并不划算，因为迭代反而慢了。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1558049743,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":180686,"user_name":"业余爱好者","can_delete":false,"product_type":"c1","uid":1482915,"ip_address":"","ucode":"A890935A982988","user_header":"https://static001.geekbang.org/account/avatar/00/16/a0/a3/8da99bb0.jpg","comment_is_top":false,"comment_ctime":1582364404,"is_pvip":false,"replies":[{"id":"70138","content":"裸io应该是指direct io。有两种绕过文件系统的方法：<br>1、禁止掉文件系统的io缓存。这种做法实际上不是绕过文件系统，而是不采纳文件系统的io缓存算法。因为数据库可能自己有自己的缓存算法，如果文件系统也有缓存，就比较累赘，浪费了宝贵的内存空间，同样的内存空间给数据库扩大缓存空间更好。<br>2、直接裸写磁盘分区。这时不存在文件系统，也就是说磁盘分区不需要格式化。这种做法在对象存储系统中用得更多一点，在数据库中用得不多。","user_name":"作者回复","user_name_real":"许式伟-七牛云(已满)","uid":"1228022","ctime":1582392214,"ip_address":"","comment_id":180686,"utype":1}],"discussion_count":1,"race_medal":0,"score":"14467266292","product_id":100025201,"comment_content":"外置存储也是一种io设备，那它又有何特殊之处呢？在硬件层面，确实外置存储的操作是属于io,和其它设备的操作一样，需要提供相应的驱动，这是在硬件层面。外置存储的特殊之处在于，其在驱动程序之上覆盖了一层文件系统的软件，操作外存通过这个文件系统软件进行，而不是直接操作驱动。据说在数据库中的某些io操作就是绕过文件系统，直接进行的所谓“裸io”。","like_count":4,"discussions":[{"author":{"id":1228022,"avatar":"https://static001.geekbang.org/account/avatar/00/12/bc/f6/e61d4b8f.jpg","nickname":"许式伟-七牛云(已满)","note":"","ucode":"1A2F8AA6F6DB54","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":484758,"discussion_content":"裸io应该是指direct io。有两种绕过文件系统的方法：\n1、禁止掉文件系统的io缓存。这种做法实际上不是绕过文件系统，而是不采纳文件系统的io缓存算法。因为数据库可能自己有自己的缓存算法，如果文件系统也有缓存，就比较累赘，浪费了宝贵的内存空间，同样的内存空间给数据库扩大缓存空间更好。\n2、直接裸写磁盘分区。这时不存在文件系统，也就是说磁盘分区不需要格式化。这种做法在对象存储系统中用得更多一点，在数据库中用得不多。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1582392214,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":95747,"user_name":"Adoy","can_delete":false,"product_type":"c1","uid":1029966,"ip_address":"","ucode":"6D11EBAD640E6D","user_header":"https://static001.geekbang.org/account/avatar/00/0f/b7/4e/d71e8d2f.jpg","comment_is_top":false,"comment_ctime":1558163913,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"14443065801","product_id":100025201,"comment_content":"让我想到了罗永浩的TNT（狗头护体）","like_count":4},{"had_liked":false,"id":95471,"user_name":"有铭","can_delete":false,"product_type":"c1","uid":1046302,"ip_address":"","ucode":"2C7CB36CA5C04C","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/3XbCueYYVWTiclv8T5tFpwiblOxLphvSZxL4ujMdqVMibZnOiaFK2C5nKRGv407iaAsrI0CDICYVQJtiaITzkjfjbvrQ/132","comment_is_top":false,"comment_ctime":1558060584,"is_pvip":false,"discussion_count":1,"race_medal":0,"score":"10147995176","product_id":100025201,"comment_content":"我认为人机交互其实就是所谓的大前端","like_count":2,"discussions":[{"author":{"id":1605747,"avatar":"https://static001.geekbang.org/account/avatar/00/18/80/73/7a939bbc.jpg","nickname":"瞳孔","note":"","ucode":"8A32CADBDA125E","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":161336,"discussion_content":"BSP工程师觉得是GPIO","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1580890572,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":95425,"user_name":"Tesla","can_delete":false,"product_type":"c1","uid":1500742,"ip_address":"","ucode":"98629AFD9861EE","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTKUcSLVV6ia3dibe7qvTu8Vic1PVs2EibxoUdx930MC7j2Q9A6s4eibMDZlcicMFY0D0icd3RrDorMChu0zw/132","comment_is_top":false,"comment_ctime":1558055497,"is_pvip":false,"replies":[{"id":"34085","content":"这有一定的可能性。人机交互范式目前是确定性交互，但是越来越模糊是趋势，最终如何我觉得还不太好判断。","user_name":"作者回复","user_name_real":"许式伟-七牛云(已满)","uid":"1228022","ctime":1558065182,"ip_address":"","comment_id":95425,"utype":1}],"discussion_count":0,"race_medal":0,"score":"10147990089","product_id":100025201,"comment_content":"老师好。人机交互智能化，更趋近于人与人的交流。但是就算人类面对面沟通，也有很多的理解歧义 还会受限于表达能力。这样是不是意味着，除非有其他学科领悟的理论算法支持，如心理学这类，否则智能交互很难在交互效率和交互准确性上做到平衡取舍？","like_count":2},{"had_liked":false,"id":260264,"user_name":"刘匿名","can_delete":false,"product_type":"c1","uid":1319157,"ip_address":"","ucode":"CB4C1DC8C1BB31","user_header":"https://static001.geekbang.org/account/avatar/00/14/20/f5/6cdbfa90.jpg","comment_is_top":false,"comment_ctime":1604971969,"is_pvip":true,"replies":[{"id":"94563","content":"认同","user_name":"作者回复","user_name_real":"许式伟-七牛云(已满)","uid":"1228022","ctime":1605004897,"ip_address":"","comment_id":260264,"utype":1}],"discussion_count":1,"race_medal":0,"score":"5899939265","product_id":100025201,"comment_content":"大学时做过kinect的应用开发，它从硬件上提供了图像的空间深度，通过色彩图像和深度图像构建了空间模型，进行物体和姿态识别，相比于当下手机上的单镜头静态图像识别，走的是另一条道路。<br>不过个人觉得以后麦克风矩阵，图像摄像头矩阵或者空间深度摄像头，应该都是标配。<br>对比人的感知来说，声音和图像都是通过一对耳朵或一双眼睛，再通过大脑的加工获得空间感的。如果空间这一信息在很多场景下是必须的。","like_count":2,"discussions":[{"author":{"id":1228022,"avatar":"https://static001.geekbang.org/account/avatar/00/12/bc/f6/e61d4b8f.jpg","nickname":"许式伟-七牛云(已满)","note":"","ucode":"1A2F8AA6F6DB54","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":509149,"discussion_content":"认同","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1605004897,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":125575,"user_name":"Gopher","can_delete":false,"product_type":"c1","uid":1200589,"ip_address":"","ucode":"CF98ACFB8BFD6F","user_header":"https://static001.geekbang.org/account/avatar/00/12/51/cd/d6fe851f.jpg","comment_is_top":false,"comment_ctime":1566205849,"is_pvip":false,"replies":[{"id":"47049","content":"缓冲区是os维护的。<br>关于资料，你可以看看这个：https:&#47;&#47;github.com&#47;gizak&#47;termui","user_name":"作者回复","user_name_real":"许式伟-七牛云(已满)","uid":"1228022","ctime":1566575386,"ip_address":"","comment_id":125575,"utype":1}],"discussion_count":1,"race_medal":0,"score":"5861173145","product_id":100025201,"comment_content":"关于键盘输入需要请教一下。键盘自身是不带缓冲区的吧？当编程时，我们所说的键盘输入缓冲区是指什么（在哪里，大小，行模式？）？它由OS统一管理（猜测只能由OS管理）还是当前程序自己维护缓冲区？在CLI编程中，当我们需要无缓冲输入时要怎样操作（机制）？（例如在C语言中可以调用getch()函数）—— 特别的，在Go语言里该怎样实现这样的功能？此外，键盘功能键又是怎样的机制呢？（例如方向键）<br><br>总之，请教许老师键盘⌨的原理是什么，有没有比较好的资料可以推荐一下呢？十分感谢！","like_count":1,"discussions":[{"author":{"id":1228022,"avatar":"https://static001.geekbang.org/account/avatar/00/12/bc/f6/e61d4b8f.jpg","nickname":"许式伟-七牛云(已满)","note":"","ucode":"1A2F8AA6F6DB54","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":463614,"discussion_content":"缓冲区是os维护的。\n关于资料，你可以看看这个：https://github.com/gizak/termui","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1566575386,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":117594,"user_name":"Jaising","can_delete":false,"product_type":"c1","uid":1037630,"ip_address":"","ucode":"F68830B7B90F96","user_header":"https://static001.geekbang.org/account/avatar/00/0f/d5/3e/7f3a9c2b.jpg","comment_is_top":false,"comment_ctime":1564100528,"is_pvip":false,"replies":[{"id":"43141","content":"是这样","user_name":"作者回复","user_name_real":"许式伟-七牛云(已满)","uid":"1228022","ctime":1564135512,"ip_address":"","comment_id":117594,"utype":1}],"discussion_count":1,"race_medal":0,"score":"5859067824","product_id":100025201,"comment_content":"许sir上一节所说unix“一切皆文件”是过度设计的原因是不是一方面就有输入输出设备管理的巨大差异性","like_count":2,"discussions":[{"author":{"id":1228022,"avatar":"https://static001.geekbang.org/account/avatar/00/12/bc/f6/e61d4b8f.jpg","nickname":"许式伟-七牛云(已满)","note":"","ucode":"1A2F8AA6F6DB54","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":460042,"discussion_content":"是这样","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1564135512,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":99627,"user_name":"Mr_杨","can_delete":false,"product_type":"c1","uid":1008065,"ip_address":"","ucode":"AD31C2320DF6A2","user_header":"https://static001.geekbang.org/account/avatar/00/0f/61/c1/9ad88d67.jpg","comment_is_top":false,"comment_ctime":1559269239,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"5854236535","product_id":100025201,"comment_content":"操作系统识别语音，动作还是有一定难度，毕竟不像文字等有标准的字符集，应该还是有专业的软件做这些解析。","like_count":1},{"had_liked":false,"id":98504,"user_name":"Being","can_delete":false,"product_type":"c1","uid":1152227,"ip_address":"","ucode":"80A8783927B650","user_header":"https://static001.geekbang.org/account/avatar/00/11/94/e3/ed118550.jpg","comment_is_top":false,"comment_ctime":1559013654,"is_pvip":false,"replies":[{"id":"35240","content":"是的","user_name":"作者回复","user_name_real":"许式伟-七牛云(已满)","uid":"1228022","ctime":1559018120,"ip_address":"","comment_id":98504,"utype":1}],"discussion_count":1,"race_medal":0,"score":"5853980950","product_id":100025201,"comment_content":"老师，您说的由操作系统来实现智能交互的基础架构，可不可以理解为，对于智能处理，在操作系统抽象出一套标准作为一大模块，为以智能为核心的交互提供统一处理，让交互则更聚焦于场景。","like_count":1,"discussions":[{"author":{"id":1228022,"avatar":"https://static001.geekbang.org/account/avatar/00/12/bc/f6/e61d4b8f.jpg","nickname":"许式伟-七牛云(已满)","note":"","ucode":"1A2F8AA6F6DB54","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":451715,"discussion_content":"是的","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1559018120,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":98108,"user_name":"williamcai","can_delete":false,"product_type":"c1","uid":1158294,"ip_address":"","ucode":"B158F52C2D39BC","user_header":"https://static001.geekbang.org/account/avatar/00/11/ac/96/46b13896.jpg","comment_is_top":false,"comment_ctime":1558916961,"is_pvip":false,"replies":[{"id":"35153","content":"现在还只是萌芽阶段","user_name":"作者回复","user_name_real":"许式伟-七牛云(已满)","uid":"1228022","ctime":1558936518,"ip_address":"","comment_id":98108,"utype":1}],"discussion_count":1,"race_medal":0,"score":"5853884257","product_id":100025201,"comment_content":"许老师，操作系统层面支持智能交互，当前现状是咋样的","like_count":1,"discussions":[{"author":{"id":1228022,"avatar":"https://static001.geekbang.org/account/avatar/00/12/bc/f6/e61d4b8f.jpg","nickname":"许式伟-七牛云(已满)","note":"","ucode":"1A2F8AA6F6DB54","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":451559,"discussion_content":"现在还只是萌芽阶段","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1558936518,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":96402,"user_name":"Geek_dxm","can_delete":false,"product_type":"c1","uid":1505505,"ip_address":"","ucode":"C6C94218C8C130","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTJ2EN4oqKlaehjAYibbVjk52wBF8CXcLquwIZAAFLrGfLAaoicKeRnibcVrZDW3hwiafVuoT1lrdibpfAA/132","comment_is_top":false,"comment_ctime":1558409579,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"5853376875","product_id":100025201,"comment_content":"在未来，必然将由操作系统来实现智能交互的基础架构。未来是这样，是不是也意味着，如果只能交互的应用，会逐渐被系统公司所吞并，商业模式也会有问题","like_count":1},{"had_liked":false,"id":95711,"user_name":"Aaron Cheung","can_delete":false,"product_type":"c1","uid":1079816,"ip_address":"","ucode":"03972759C53667","user_header":"https://static001.geekbang.org/account/avatar/00/10/7a/08/4d3e47dd.jpg","comment_is_top":false,"comment_ctime":1558146886,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"5853114182","product_id":100025201,"comment_content":"补打卡10 交互是非常重要的一环","like_count":1},{"had_liked":false,"id":95434,"user_name":"觉","can_delete":false,"product_type":"c1","uid":1503600,"ip_address":"","ucode":"95E85D30E92170","user_header":"https://static001.geekbang.org/account/avatar/00/16/f1/70/bca09d2d.jpg","comment_is_top":false,"comment_ctime":1558056293,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"5853023589","product_id":100025201,"comment_content":"感恩大佬分享 随喜大佬","like_count":1},{"had_liked":false,"id":287831,"user_name":"景南鑫 Rock.J","can_delete":false,"product_type":"c1","uid":2313071,"ip_address":"","ucode":"C611E784D391F5","user_header":"https://static001.geekbang.org/account/avatar/00/23/4b/6f/50be543b.jpg","comment_is_top":false,"comment_ctime":1618189346,"is_pvip":false,"replies":[{"id":"104531","content":"想过，但是感觉脑机接口做垂直领域可以 通用操作系统的交互还是科幻了一点","user_name":"作者回复","user_name_real":"许式伟-七牛云(已满)","uid":"1228022","ctime":1618200014,"ip_address":"","comment_id":287831,"utype":1}],"discussion_count":1,"race_medal":1,"score":"1618189346","product_id":100025201,"comment_content":"嗯嗯，居然没有人提到脑机接口，即大脑与计算机的接口。这种有创的链接方式是否会改变人机交互的方式呢？当然，最好的方式就如同阿凡达里面展示的，睡梦中与设备交互，甚至人与不同生物的交互","like_count":0,"discussions":[{"author":{"id":1228022,"avatar":"https://static001.geekbang.org/account/avatar/00/12/bc/f6/e61d4b8f.jpg","nickname":"许式伟-七牛云(已满)","note":"","ucode":"1A2F8AA6F6DB54","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":518431,"discussion_content":"想过，但是感觉脑机接口做垂直领域可以 通用操作系统的交互还是科幻了一点","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1618200014,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":285532,"user_name":"不温暖啊不纯良","can_delete":false,"product_type":"c1","uid":2079117,"ip_address":"","ucode":"204474A214E00C","user_header":"https://static001.geekbang.org/account/avatar/00/1f/b9/8d/00bded19.jpg","comment_is_top":false,"comment_ctime":1616859262,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1616859262","product_id":100025201,"comment_content":"在输入设备管理中有俩个设计架构--窗口系统,事件管理子系统,通过用焦点事件来管理多个软件的输入,也可以说,所有应用软件的输入都是依赖于这个窗口系统和事物管理子系统来完成的.而且为了更好的满足人机交互,窗口系统还引入了图形绘制子系统,<br><br>在输出设备打印机上,操作系统使用的缓存机制,让使用打印机的应用软件减少等待时间.设个设计在开发的程序设计中也随处可见,只是以前没有在意,现在突然明白为什么很对软件开发中都要用到缓存框架.如在业务场景中,当某个处理比较费时的时候,就可以采用缓存机制来缓解.这样就能带来更好的用户体验.<br><br>由此引入,人机交互中,是以用户体验为核心的,如输出设备处黑白显示器到高分辨率彩色显示,是为了让人看的更清晰更舒服,如在输入设备中除了现在都在努力减少用户使用键盘的次数,从手动输出身份证号码到上传身份证照片,自动识别出生日期和性别.所以,在架构设计中,我们不仅要考虑系统的可维护性&#47;可扩展行&#47;还要更方便人的使用,","like_count":0},{"had_liked":false,"id":219541,"user_name":"亢（知行合一的路上）","can_delete":false,"product_type":"c1","uid":1347013,"ip_address":"","ucode":"958AF7C96EB9E8","user_header":"https://static001.geekbang.org/account/avatar/00/14/8d/c5/898b13b4.jpg","comment_is_top":false,"comment_ctime":1590039324,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1590039324","product_id":100025201,"comment_content":"通过语音与小爱同学交互，感觉更流畅了，平时给孩子们播放音乐更多了，方便啊","like_count":0},{"had_liked":false,"id":194733,"user_name":"学习学习学习学习学习学习学习","can_delete":false,"product_type":"c1","uid":1243322,"ip_address":"","ucode":"FBEF1575658620","user_header":"https://static001.geekbang.org/account/avatar/00/12/f8/ba/37c24a08.jpg","comment_is_top":false,"comment_ctime":1585100413,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1585100413","product_id":100025201,"comment_content":"明白了什么是输入输出设备。","like_count":0},{"had_liked":false,"id":178192,"user_name":"幻灰龙","can_delete":false,"product_type":"c1","uid":1046202,"ip_address":"","ucode":"AFEDCC997C2FF6","user_header":"https://static001.geekbang.org/account/avatar/00/0f/f6/ba/09ab72d2.jpg","comment_is_top":false,"comment_ctime":1581604629,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1581604629","product_id":100025201,"comment_content":"命令行输入和GUI输入，一个重机器效率，一个重交互效率。开发需要跟机器打交道，所以命令行优先，办公和娱乐需要跟人打交道，所以GUI优先。这两者又同时是输入，也是输出，对于系统而言，可以定义全功能的预定义输入，也可以只是把输入正确路由和转发给输出系统去处理。另一方面，每个输出设备，都可能有编程管道，可编程管道的每个编程点，实际上是开放了中间环节的输入，便于由人来控制策略，系统则只提供机制。","like_count":0},{"had_liked":false,"id":119155,"user_name":"Eric","can_delete":false,"product_type":"c1","uid":1497700,"ip_address":"","ucode":"69354E97A69100","user_header":"https://static001.geekbang.org/account/avatar/00/16/da/64/dca90383.jpg","comment_is_top":false,"comment_ctime":1564532624,"is_pvip":false,"replies":[{"id":"43673","content":"sorry","user_name":"作者回复","user_name_real":"许式伟-七牛云(已满)","uid":"1228022","ctime":1564533933,"ip_address":"","comment_id":119155,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1564532624","product_id":100025201,"comment_content":"iot发音lot字体的重要性","like_count":0,"discussions":[{"author":{"id":1228022,"avatar":"https://static001.geekbang.org/account/avatar/00/12/bc/f6/e61d4b8f.jpg","nickname":"许式伟-七牛云(已满)","note":"","ucode":"1A2F8AA6F6DB54","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":460764,"discussion_content":"sorry","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1564533933,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":115677,"user_name":"Eternal","can_delete":false,"product_type":"c1","uid":1188023,"ip_address":"","ucode":"EA6FE7CC98F740","user_header":"https://static001.geekbang.org/account/avatar/00/12/20/b7/bdb3bcf0.jpg","comment_is_top":false,"comment_ctime":1563694354,"is_pvip":false,"replies":[{"id":"42257","content":"不一定，边界现在还不好说","user_name":"作者回复","user_name_real":"许式伟-七牛云(已满)","uid":"1228022","ctime":1563704646,"ip_address":"","comment_id":115677,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1563694354","product_id":100025201,"comment_content":"“在未来，必然将由操作系统来实现智能交互的基础架构”，按照这样的思路，以后的信息科技发展更加头部集中了，操作系统负责接受用户的输入数据并做处理，分析出用户的本质意图，然后将 需求分发给具体的软件去执行。人与人之间相互理解对方已经很难了，计算机理解成千上万的用户需求是一个多么难的事情。","like_count":0,"discussions":[{"author":{"id":1228022,"avatar":"https://static001.geekbang.org/account/avatar/00/12/bc/f6/e61d4b8f.jpg","nickname":"许式伟-七牛云(已满)","note":"","ucode":"1A2F8AA6F6DB54","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":459224,"discussion_content":"不一定，边界现在还不好说","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1563704646,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":109599,"user_name":"南山","can_delete":false,"product_type":"c1","uid":1119593,"ip_address":"","ucode":"94656FE4A6C378","user_header":"https://static001.geekbang.org/account/avatar/00/11/15/69/187b9968.jpg","comment_is_top":false,"comment_ctime":1562064512,"is_pvip":true,"discussion_count":0,"race_medal":0,"score":"1562064512","product_id":100025201,"comment_content":"想请教下老师，对于 头号玩家 这种科幻电影中构造出来的人的思想可以置身其中的虚拟网络世界，像但是又不局限于现实世界一样的交互方式在未来真的有可能实现吗？","like_count":0},{"had_liked":false,"id":109417,"user_name":"zero","can_delete":false,"product_type":"c1","uid":1070027,"ip_address":"","ucode":"72D2B4661681F7","user_header":"https://static001.geekbang.org/account/avatar/00/10/53/cb/d3e98e49.jpg","comment_is_top":false,"comment_ctime":1562030885,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1562030885","product_id":100025201,"comment_content":"“我们不可能让每一个软件都自己去做输入意图的理解。在未来，必然将由操作系统来实现智能交互的基础架构。”<br>一句话说清楚未来操作系统的模样，许多人的描述像画饼，而许老师已经知道饼是啥馅的。","like_count":0},{"had_liked":false,"id":99789,"user_name":"wucx","can_delete":false,"product_type":"c1","uid":1053274,"ip_address":"","ucode":"4D889D3722CB0B","user_header":"https://static001.geekbang.org/account/avatar/00/10/12/5a/a148af8b.jpg","comment_is_top":false,"comment_ctime":1559301206,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1559301206","product_id":100025201,"comment_content":"通用能力在未来会下沉来提高上层的效率及建立标准。<br>多样的输入处理能力、标准范式会在未来操作系统上，这个和微服务中的service mesh是一样的感觉，让软件&#47;应用更关注提供的服务，而非基础的能力需要，这个找底层拿来用就好了。","like_count":0},{"had_liked":false,"id":98492,"user_name":"Luke","can_delete":false,"product_type":"c1","uid":1216016,"ip_address":"","ucode":"C34D4C44DBCE03","user_header":"https://static001.geekbang.org/account/avatar/00/12/8e/10/10092bb1.jpg","comment_is_top":false,"comment_ctime":1559011161,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1559011161","product_id":100025201,"comment_content":"我感觉出老师的一个意图或者观点：无论未来的交互形式如何变迁，从系统架构的角度考虑，本质上还是在做输入输出的角色，输入输出都应该放在系统层面统一处理，提供服务给外围软件或者上层。<br><br>老师列举了输入输出设备的变迁，是否也是想说明过去的发展一直是遵循这个规律的，将来也是。","like_count":0},{"had_liked":false,"id":96518,"user_name":"ༀ醉里挑灯看剑༄","can_delete":false,"product_type":"c1","uid":1480372,"ip_address":"","ucode":"B92442B91F0290","user_header":"https://static001.geekbang.org/account/avatar/00/16/96/b4/040110ac.jpg","comment_is_top":false,"comment_ctime":1558439586,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1558439586","product_id":100025201,"comment_content":"目前输入设备的操作，鼠标键盘，麦克风，摄像头，而输出其实更常见的就是显示器窗口，架构迭代的话，可能就是ai人工智能，立体投影交互，就跟科幻大片中的那种操作吧，对于将输入放在操作系统层来统一，只需要开启系统通过某一种形式输入指令操作系统进一步做我们想要做的事情，指令处理完成，立体展现，是不是输入输出都可以统一处理了，这样就不需要不同的规范了！","like_count":0},{"had_liked":false,"id":95916,"user_name":"Geek_88604f","can_delete":false,"product_type":"c1","uid":1501234,"ip_address":"","ucode":"33DD1318E53814","user_header":"","comment_is_top":false,"comment_ctime":1558255861,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1558255861","product_id":100025201,"comment_content":"在洋葱架构和整洁架构中平等地看待输入和输出，不知道许老师是什么看法？","like_count":0},{"had_liked":false,"id":95771,"user_name":"Fz","can_delete":false,"product_type":"c1","uid":1493757,"ip_address":"","ucode":"E7FBED11A1C6AF","user_header":"https://static001.geekbang.org/account/avatar/00/16/ca/fd/4346c87b.jpg","comment_is_top":false,"comment_ctime":1558170322,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1558170322","product_id":100025201,"comment_content":"操作系统作为软件运行的必要基础。小软件要智能。这个管家更需要智能，才能更好和应用软件配合，服务人类","like_count":0},{"had_liked":false,"id":95688,"user_name":"八哥","can_delete":false,"product_type":"c1","uid":1012205,"ip_address":"","ucode":"ED2E09CBBFC060","user_header":"https://static001.geekbang.org/account/avatar/00/0f/71/ed/45ab9f03.jpg","comment_is_top":false,"comment_ctime":1558143535,"is_pvip":false,"discussion_count":0,"race_medal":1,"score":"1558143535","product_id":100025201,"comment_content":"语音输入要能解决两个问题就好很多，1.识别正确率，2.能在边缘端自己处理大多数。即离线处理能力。VR输出最开始大规模应用估计会在游戏，教学和医疗诊断。","like_count":0}]}