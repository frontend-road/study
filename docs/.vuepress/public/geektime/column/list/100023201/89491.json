{"id":89491,"title":"HTML替换型元素：为什么link一个CSS要用href，而引入js要用src呢？","content":"<p>你好，我是winter。我们今天来讲讲替换型元素。</p><p>我们都知道一个常识，一个网页，它是由多个文件构成的，我们在之前的课程中，已经学过了一种引入文件的方案：链接。</p><p>这节课我们要讲的替换型元素，就是另一种引入文件的方式了。替换型元素是把文件的内容引入，替换掉自身位置的一类标签。</p><p>我们首先来看一种比较熟悉的标签：script标签。</p><h2>script</h2><p>我们之所以选择先讲解script标签，是因为script标签是为数不多的既可以作为替换型标签，又可以不作为替换型标签的元素。</p><p>我们先来看看script标签的两种用法：</p><pre><code class=\"language-HTML\">\n&lt;script type=\"text/javascript\"&gt;\nconsole.log(\"Hello world!\");\n&lt;/script&gt;\n\n\n&lt;script type=\"text/javascript\" src=\"my.js\"&gt;&lt;/script&gt;\n\n</code></pre><p>这个例子中，我们展示了两种script标签的写法，一种是直接把脚本代码写在script标签之间，另一种是把代码放到独立的js文件中，用src属性引入。</p><p>这两种写法是等效的。我想这种等效性可以帮助你理解替换型元素的“替换”是怎么一回事。</p><p>这里我们就可以回答标题中的问题了：凡是替换型元素，都是使用src属性来引用文件的，而我们之前的课程中已经讲过，链接型元素是使用href标签的。</p><!-- [[[read_end]]] --><p>虽然我不知道当初是怎么设计的，但是style标签并非替换型元素，不能使用src属性，这样，我们用link标签引入CSS文件，当然就是用href标签啦。</p><p>接下来我们再看看别的替换型元素，先来了解一下img标签。</p><h2>img</h2><p>毫无疑问我们最熟悉的替换型标签就是img标签了，几乎每个前端都会日常使用img标签。</p><p>img标签的作用是引入一张图片。这个标签是没有办法像script标签那样作为非替换型标签来使用的，它必须有src属性才有意义。</p><p>如果一定不想要引入独立文件，可以使用data uri，我们来看个实际的例子：</p><pre><code class=\"language-HTML\"> &lt;img src='data:image/svg+xml;charset=utf8,&lt;svg version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\"&gt;&lt;rect width=\"300\" height=\"100\" style=\"fill:rgb(0,0,255);stroke-width:1;stroke:rgb(0,0,0)\"/&gt;&lt;/svg&gt;'/&gt;\n</code></pre><p>这个例子中我们使用了data uri作为图片的src，这样，并没有产生独立的文件，客观上做到了和内联相同的结果，这是一个常用的技巧。</p><p>img标签可以使用width和height指定宽度和高度。也可以只指定其中之一。我们看个例子：</p><pre><code class=\"language-HTML\"> &lt;img src='data:image/svg+xml;charset=utf8,&lt;svg width=\"600\" height=\"400\" version=\"1.1\"\nxmlns=\"http://www.w3.org/2000/svg\"&gt;&lt;ellipse cx=\"300\" cy=\"150\" rx=\"200\" ry=\"80\"\nstyle=\"fill:rgb(200,100,50);\nstroke:rgb(0,0,100);stroke-width:2\"/&gt;&lt;/svg&gt;' width=\"100\"/&gt;\n</code></pre><p>这个例子中，为了方便你理解，我们把图片换成了椭圆，我们可以看到，当我们指定了宽度后，图片被<strong>等比例缩放了</strong>。这个特性非常重要，适用于那种我们既要限制图片尺寸，又要保持图片比例的场景。</p><p>如果从性能的角度考虑，建议你同时给出图片的宽高，因为替换型元素加载完文件后，如果尺寸发生变换，会触发重排版（这个概念我们在浏览器原理部分已经讲过，可以复习一下）。</p><p>此处要重点提到一个属性，alt属性，这个属性很难被普通用户感知，对于视障用户非常重要，可以毫不夸张地讲，给img加上alt属性，已经做完了可访问性的一半。</p><p>img标签还有一组重要的属性，那就是srcset和sizes，它们是src属性的升级版（所以我们前面讲img标签必须有src属性，这是不严谨的说法）。</p><p>这两个属性的作用是在不同的屏幕大小和特性下，使用不同的图片源。下面一个例子也来自MDN，它展示了srcset和sizes的用法</p><pre><code class=\"language-JavaScript\">&lt;img srcset=\"elva-fairy-320w.jpg 320w,\n             elva-fairy-480w.jpg 480w,\n             elva-fairy-800w.jpg 800w\"\n     sizes=\"(max-width: 320px) 280px,\n            (max-width: 480px) 440px,\n            800px\"\n     src=\"elva-fairy-800w.jpg\" alt=\"Elva dressed as a fairy\"&gt;\n</code></pre><p>srcset提供了根据屏幕条件选取图片的能力，但是其实更好的做法，是使用picture元素。</p><h2>picture</h2><p>picture元素可以根据屏幕的条件为其中的img元素提供不同的源，它的基本用法如下：</p><pre><code class=\"language-HTML\">&lt;picture&gt;\n  &lt;source srcset=\"image-wide.png\" media=\"(min-width: 600px)\"&gt;\n  &lt;img src=\"image-narrow.png\"&gt;\n&lt;/picture&gt;\n</code></pre><p>picture元素的设计跟audio和video保持了一致（稍后我会为你讲解这两个元素），它跟img搭配srcset和sizes不同，它使用source元素来指定图片源，并且支持多个。</p><p>这里的media属性是media query，跟CSS的@media规则一致。</p><h2>video</h2><p>在HTML5早期的设计中，video标签跟img标签类似，也是使用src属性来引入源文件的，不过，我想应该是考虑到了各家浏览器支持的视频格式不同，现在的video标签跟picture元素一样，也是提倡使用source的。</p><p>下面例子是一个古典的video用法：</p><pre><code class=\"language-HTML\">&lt;video controls=\"controls\" src=\"movie.ogg\"&gt;\n&lt;/video&gt;\n</code></pre><p>这个例子中的代码用src来指定视频的源文件。但是因为一些历史原因，浏览器对视频的编码格式兼容问题分成了几个派系，这样，对于一些兼容性要求高的网站，我们使用单一的视频格式是不合适的。</p><p>现在的video标签可以使用source标签来指定接入多个视频源。</p><pre><code class=\"language-HTML\">&lt;video controls=\"controls\" &gt;\n  &lt;source src=\"movie.webm\" type=\"video/webm\" &gt;\n  &lt;source src=\"movie.ogg\" type=\"video/ogg\" &gt;\n  &lt;source src=\"movie.mp4\" type=\"video/mp4\"&gt;\n  You browser does not support video.\n&lt;/video&gt;\n</code></pre><p>从这个例子中，我们可以看到，source标签除了支持media之外，还可以使用type来区分源文件的使用场景。</p><p>video标签的内容默认会被当做不支持video的浏览器显示的内容吗，因此，如果要支持更古老的浏览器，还可以在其中加入object或者embed标签，这里就不详细展开了。</p><p>video中还支持一种标签：track。</p><p>track是一种播放时序相关的标签，它最常见的用途就是字幕。track标签中，必须使用 srclang 来指定语言，此外，track具有kind属性，共有五种。</p><ul>\n<li>subtitles：就是字幕了，不一定是翻译，也可能是补充性说明。</li>\n<li>captions：报幕内容，可能包含演职员表等元信息，适合听障人士或者没有打开声音的人了解音频内容。</li>\n<li>descriptions：视频描述信息，适合视障人士或者没有视频播放功能的终端打开视频时了解视频内容。</li>\n<li>chapters：用于浏览器视频内容。</li>\n<li>metadata：给代码提供的元信息，对普通用户不可见。</li>\n</ul><p>一个完整的video标签可能会包含多种track和多个source，这些共同构成了一个视频播放所需的全部信息。</p><h2>audio</h2><p>接下来我们来讲讲audio，跟picture和video两种标签一样，audio也可以使用source元素来指定源文件。我们看一下例子：</p><pre><code class=\"language-HTML\">&lt;audio controls&gt;\n  &lt;source src=\"song.mp3\" type=\"audio/mpeg\"&gt;\n  &lt;source src=\"song.ogg\" type=\"audio/ogg\"&gt;\n  &lt;p&gt;You browser does not support audio.&lt;/p&gt;\n&lt;/audio&gt;\n</code></pre><p>但比起video，audio元素的历史问题并不严重，所以使用src也是没有问题的。</p><h2>iframe</h2><p>最后我们来讲一下iframe，这个标签能够嵌入一个完整的网页。</p><p>不过，在移动端，iframe受到了相当多的限制，它无法指定大小，里面的内容会被完全平铺到父级页面上。</p><p>同时很多网页也会通过http协议头禁止自己被放入iframe中。</p><p>iframe标签也是各种安全问题的重灾区。opener、window.name、甚至css的opacity都是黑客可以利用的漏洞。</p><p>因此，在2019年，当下这个时间点，任何情况下我都不推荐在实际开发中用以前的iframe。</p><p>当然，不推荐使用是一回事，因为没人能保证不遇到历史代码，我们还是应该了解一下iframe的基本用法：</p><pre><code class=\"language-HTML\">&lt;iframe src=\"http://time.geekbang.org\"&gt;&lt;/iframe&gt;\n</code></pre><p>这个例子展示了古典的iframe用法。</p><p>在新标准中，为iframe加入了sandbox模式和srcdoc属性，这样，给iframe带来了一定的新场景。我们来看看例子：</p><pre><code class=\"language-HTML\">&lt;iframe sandbox srcdoc=\"&lt;p&gt;Yeah, you can see it &lt;a href=\"/gallery?mode=cover&amp;amp;amp;page=1\"&gt;in my gallery&lt;/a&gt;.\"&gt;&lt;/iframe&gt;\n</code></pre><p>这个例子中，使用srcdoc属性创建了一个新的文档，嵌入在iframe中展示，并且使用了sandbox来隔离。</p><p>这样，这个iframe就不涉及任何跨域问题了。</p><h2>总结</h2><p>这节课，我们又认识了一组HTML元素：替换型元素。它们的特点是，引入一个外部资源来进入页面，替换掉自身的位置。</p><p>我们通过对script、img、picture、audio、video、iframe几个标签的讲解，了解了不同的资源引入方式：</p><ul>\n<li>src属性；</li>\n<li>srcset属性；</li>\n<li>source标签；</li>\n<li>srcdoc属性。</li>\n</ul><p>这中间，我们也介绍了一些小技巧，比如src属性的好朋友：data uri，这在实际开发中非常有用。</p><p>最后，留给你一个小问题，请查资料总结一下，在多数现代浏览器兼容的范围内，src属性支持哪些协议的uri（如http和我们提到的data）。</p><p></p>","comments":[{"had_liked":false,"id":84308,"user_name":"赵健","can_delete":false,"product_type":"c1","uid":1260246,"ip_address":"","ucode":"553E417EE92EFB","user_header":"https://static001.geekbang.org/account/avatar/00/13/3a/d6/485590bd.jpg","comment_is_top":false,"comment_ctime":1554823720,"is_pvip":false,"discussion_count":5,"race_medal":0,"score":"78864235048","product_id":100023201,"comment_content":"老师好，想请问下，业务场景中需要嵌入公司其他行业线的页面，这种不使用iframe该咋办？","like_count":19,"discussions":[{"author":{"id":2243082,"avatar":"https://static001.geekbang.org/account/avatar/00/22/3a/0a/fa52ef39.jpg","nickname":"momo","note":"","ucode":"BFF54AA70BB165","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":383210,"discussion_content":"可以用qiankun替代","likes_number":2,"is_delete":false,"is_hidden":false,"ctime":1625992180,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":2288150,"avatar":"","nickname":"Geek_920664","note":"","ucode":"42A32EFD7863FF","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":403157,"discussion_content":"发现<object>比<iframe>好用","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1634020857,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1230301,"avatar":"https://static001.geekbang.org/account/avatar/00/12/c5/dd/5a482cab.jpg","nickname":"杜森垚","note":"","ucode":"71DEA59348CE09","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":322973,"discussion_content":"说的是不建议使用以前的 iframe。可以用新标准的。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1604848897,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1028395,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/b1/2b/79b81df8.jpg","nickname":"iamcxc","note":"","ucode":"C519F51552DC12","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":206630,"discussion_content":"为啥不用iframe？适合的场景就尽量用啊","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1584423228,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1485706,"avatar":"https://static001.geekbang.org/account/avatar/00/16/ab/8a/e1a8b835.jpg","nickname":"窗外明月","note":"","ucode":"D4C0BA5CC496CA","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":6249,"discussion_content":"看来这个问题比较普遍..有没有试过直接跳转","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1566810965,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":83983,"user_name":"favorlm","can_delete":false,"product_type":"c1","uid":1120997,"ip_address":"","ucode":"CFD52127AA6E1D","user_header":"https://static001.geekbang.org/account/avatar/00/11/1a/e5/6899701e.jpg","comment_is_top":false,"comment_ctime":1554765505,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"40209471169","product_id":100023201,"comment_content":"早起第一件事，学习","like_count":10},{"had_liked":false,"id":84396,"user_name":"Geeker1992","can_delete":false,"product_type":"c1","uid":1003475,"ip_address":"","ucode":"459F3CEB0491A1","user_header":"https://static001.geekbang.org/account/avatar/00/0f/4f/d3/897fc6df.jpg","comment_is_top":false,"comment_ctime":1554857451,"is_pvip":false,"discussion_count":2,"race_medal":0,"score":"35914595819","product_id":100023201,"comment_content":"老师，style 既然也可以这么用<br>&lt;style&gt;css 规则&lt;&#47;style&gt;，<br>为什么没有 &lt;style src=“”&gt;&lt;&#47;style&gt;？<br>","like_count":9,"discussions":[{"author":{"id":1382676,"avatar":"https://static001.geekbang.org/account/avatar/00/15/19/14/71cfa677.jpg","nickname":"宅神king","note":"","ucode":"9BFE977278D9F2","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":89448,"discussion_content":"文章中有说到，style 标签并非替换型元素，不能使用 src 属性","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1576754863,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1260277,"avatar":"https://static001.geekbang.org/account/avatar/00/13/3a/f5/1fa34f88.jpg","nickname":"润曦","note":"","ucode":"21D36F7DEEB43D","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":203104,"discussion_content":"说明官方并没有把style设计成替换元素啦","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1583998115,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":218102,"user_name":"草剑","can_delete":false,"product_type":"c1","uid":1026310,"ip_address":"","ucode":"C6DA55E7E1B701","user_header":"https://static001.geekbang.org/account/avatar/00/0f/a9/06/9811fb65.jpg","comment_is_top":false,"comment_ctime":1589715355,"is_pvip":true,"discussion_count":0,"race_medal":0,"score":"23064551835","product_id":100023201,"comment_content":"src 属性支持 http、data、 ftp、file、mailto、smtp、pop、dns、whois、finger、daytime、news、urn 等协议","like_count":6},{"had_liked":false,"id":84054,"user_name":"阿成","can_delete":false,"product_type":"c1","uid":1390032,"ip_address":"","ucode":"CEC3CD65FB9333","user_header":"https://static001.geekbang.org/account/avatar/00/15/35/d0/f2ac6d91.jpg","comment_is_top":false,"comment_ctime":1554775836,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"23029612316","product_id":100023201,"comment_content":"常见的有：http:&#47;&#47;,https:&#47;&#47;,file:&#47;&#47;,data...","like_count":6},{"had_liked":false,"id":89319,"user_name":"南墙的树","can_delete":false,"product_type":"c1","uid":1384130,"ip_address":"","ucode":"289B98CA489C09","user_header":"https://static001.geekbang.org/account/avatar/00/15/1e/c2/edf5dfcb.jpg","comment_is_top":false,"comment_ctime":1556154246,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"18736023430","product_id":100023201,"comment_content":"h5的设计稿，完全照办app设计稿，页面顶部的title导航（包括返回按钮），页面主体部分引入外部资源，这种需求，不使用iframe，请问老师该怎么处理？或者说，从一个不懂技术的产品那里开始，这种方案就有问题？","like_count":5},{"had_liked":false,"id":87638,"user_name":"Geek_0bb537","can_delete":false,"product_type":"c1","uid":1488361,"ip_address":"","ucode":"BE1A16372FC814","user_header":"https://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTJDSY5xBJ2PH4lqNtWJqhe1HcYkP7S9ibAXChONgCBX5pJ2gaU3icXhltQgqhzDyML3EzFicxPeE4Tiag/132","comment_is_top":false,"comment_ctime":1555646370,"is_pvip":false,"discussion_count":2,"race_medal":0,"score":"10145580962","product_id":100023201,"comment_content":"iframe有没有什么好的替代方案 那个导航栏一般都是通用的 我看到淘宝也有iframe","like_count":3,"discussions":[{"author":{"id":1071909,"avatar":"https://static001.geekbang.org/account/avatar/00/10/5b/25/d78cc1fe.jpg","nickname":"都市夜归人","note":"","ucode":"DFF59BE3D80B42","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":309619,"discussion_content":"微前端也非万能，如果要集成第三方非单页面应用，微前端也无能为力，另外即使是单页面应用也需要干燥微前端的规范进行修改才能够集成。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1601366345,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1011586,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/6f/82/abb7bfe3.jpg","nickname":"阿虎","note":"","ucode":"30DCFB6BD2F528","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":93083,"discussion_content":"关注下微前端","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1576905812,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":84393,"user_name":"umaru","can_delete":false,"product_type":"c1","uid":1383609,"ip_address":"","ucode":"08BA373CB32698","user_header":"https://static001.geekbang.org/account/avatar/00/15/1c/b9/392b94ee.jpg","comment_is_top":false,"comment_ctime":1554857281,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"10144791873","product_id":100023201,"comment_content":"Style元素不能使用css属性，这句话没看懂","like_count":2},{"had_liked":false,"id":121907,"user_name":"宗麒麟","can_delete":false,"product_type":"c1","uid":1385772,"ip_address":"","ucode":"AC15E3AFAECE3B","user_header":"https://static001.geekbang.org/account/avatar/00/15/25/2c/8f61089f.jpg","comment_is_top":false,"comment_ctime":1565246867,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"5860214163","product_id":100023201,"comment_content":"老师还是承接刚才那个问题，<br>js里  .优先级高于  =，因此:<br>1、先计算a.x，此时内存地址1多了x<br>2、计算最右边  =  ，此时a指向了新地址2<br>3、最后计算左边的=，此时内存地址1的x指向了a<br>应该是这样的原理，但是我感觉少了一个东西，就是第2步里，a已经指向新地址2了，为什么第三步执行a.x时，a.x还能指向地址1里的x呢？","like_count":1},{"had_liked":false,"id":92281,"user_name":"🐳李小博🐳","can_delete":false,"product_type":"c1","uid":1463337,"ip_address":"","ucode":"DCA1AE4DC793EC","user_header":"https://static001.geekbang.org/account/avatar/00/16/54/29/59663398.jpg","comment_is_top":false,"comment_ctime":1557220411,"is_pvip":false,"discussion_count":2,"race_medal":0,"score":"5852187707","product_id":100023201,"comment_content":"@Geeker1992<br>回答你的问题，只有可替换型元素才能用src，元素就是实实在在有内容的东西，不管有没有样式文档都会存在，而css是样式文档，他不是可替换型元素。","like_count":1,"discussions":[{"author":{"id":1379449,"avatar":"","nickname":"满天星","note":"","ucode":"594543467F02D6","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":3284,"discussion_content":"script替换了什麽？","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1564375360,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":1,"child_discussions":[{"author":{"id":1485706,"avatar":"https://static001.geekbang.org/account/avatar/00/16/ab/8a/e1a8b835.jpg","nickname":"窗外明月","note":"","ucode":"D4C0BA5CC496CA","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1379449,"avatar":"","nickname":"满天星","note":"","ucode":"594543467F02D6","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":6251,"discussion_content":"--‘我们之所以选择先讲解 script 标签，是因为 script标签是为数不多的既可以作为替换型标签，又可以不作为替换型标签的元素’","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1566811143,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":3284,"ip_address":""},"score":6251,"extra":""}]}]},{"had_liked":false,"id":89625,"user_name":"一步","can_delete":false,"product_type":"c1","uid":1005391,"ip_address":"","ucode":"73CEA468CE70C3","user_header":"https://static001.geekbang.org/account/avatar/00/0f/57/4f/6fb51ff1.jpg","comment_is_top":false,"comment_ctime":1556237999,"is_pvip":true,"discussion_count":0,"race_medal":1,"score":"5851205295","product_id":100023201,"comment_content":"就说一个经常见到的： blob","like_count":1},{"had_liked":false,"id":263665,"user_name":"Geek_de3c35","can_delete":false,"product_type":"c1","uid":1596053,"ip_address":"","ucode":"A9CC0049392BF3","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/dgVrmQBbMel7v6mBCm6oWvttx9BGQsCDpbMOhm9Hh8gj8k0NRbo4mmoDZrpuaqxQMIkHSUgq15L83ficyY8leVg/132","comment_is_top":false,"comment_ctime":1606211661,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1606211661","product_id":100023201,"comment_content":"https:&#47;&#47;developer.mozilla.org&#47;zh-CN&#47;docs&#47;Web&#47;HTTP&#47;Headers&#47;Content-Security-Policy&#47;img-src","like_count":1},{"had_liked":false,"id":254780,"user_name":"ZaKing","can_delete":false,"product_type":"c1","uid":1298925,"ip_address":"","ucode":"3887AC22E72A4F","user_header":"https://static001.geekbang.org/account/avatar/00/13/d1/ed/19bf4713.jpg","comment_is_top":false,"comment_ctime":1603185961,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1603185961","product_id":100023201,"comment_content":"winter老师您好，我想问下，表单属于替换元素么？","like_count":0},{"had_liked":false,"id":157476,"user_name":"稚鸿同学","can_delete":false,"product_type":"c1","uid":1212581,"ip_address":"","ucode":"989804DB990385","user_header":"https://static001.geekbang.org/account/avatar/00/12/80/a5/83b424bc.jpg","comment_is_top":false,"comment_ctime":1575171766,"is_pvip":true,"discussion_count":0,"race_medal":0,"score":"1575171766","product_id":100023201,"comment_content":"winter你好，如果当前页面需要有个区域是当前系统其他页面或者其他系统的，可以不用iframe，还也可以怎么处理？因为可能还有和子页面的交互","like_count":0},{"had_liked":false,"id":121897,"user_name":"宗麒麟","can_delete":false,"product_type":"c1","uid":1385772,"ip_address":"","ucode":"AC15E3AFAECE3B","user_header":"https://static001.geekbang.org/account/avatar/00/15/25/2c/8f61089f.jpg","comment_is_top":false,"comment_ctime":1565245952,"is_pvip":false,"replies":[{"id":"54062","content":"这个分析是可以分析，但是连等这个用法我觉得是语言的糟粕，所以不太想讲。<br><br>具体来说，等号的语法是先求左边的引用，再执行右边的表达式，然后再做赋值操作的。所以你这个代码的结果特别奇怪。<br><br>参考 https:&#47;&#47;www.ecma-international.org&#47;ecma-262&#47;10.0&#47;index.html#prod-AssignmentExpression","user_name":"作者回复","user_name_real":"winter","uid":"1268524","ctime":1570774437,"ip_address":"","comment_id":121897,"utype":1}],"discussion_count":3,"race_medal":0,"score":"1565245952","product_id":100023201,"comment_content":"var a = {n: 1}; <br>var b = a; <br>a.x = a = {n: 2};<br>a.x  b.x 分别是什么？<br>老师，能不能把a.x这块的赋值讲一下？","like_count":0,"discussions":[{"author":{"id":1268524,"avatar":"https://static001.geekbang.org/account/avatar/00/13/5b/2c/12bfd3cd.jpg","nickname":"winter","note":"","ucode":"2B068EDEAFEB56","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":461996,"discussion_content":"这个分析是可以分析，但是连等这个用法我觉得是语言的糟粕，所以不太想讲。\n\n具体来说，等号的语法是先求左边的引用，再执行右边的表达式，然后再做赋值操作的。所以你这个代码的结果特别奇怪。\n\n参考 https://www.ecma-international.org/ecma-262/10.0/index.html#prod-AssignmentExpression","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1570774437,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1617036,"avatar":"","nickname":"Geek_d3c7a1","note":"","ucode":"3C9DBF8CA209CB","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":212865,"discussion_content":"我大致看了一下：\n第一步a引用{n:1}的地址；\n第二步b也引用{n:1}地址；\n第三步的a执行前先被解析为{n:1}地址的引用，我觉得就这儿需要稍微注意下。\n连等操作，执行时从右到左，先获取对象{n:2},然后改变变量a的指向为{n:2}，然后将{n:2}地址赋值给之前a变量解析的对象（即{n:1}）的x属性，所以{n:1}被赋值后为{n:1,x:{n:2}},\n而b正是赋值之前{n:1}的引用，所以赋值后b为{n:1,x:{n:2}},a最后一步引用的是b的x属性，即{n:2}.\n结果：b :  {n:1,x:{n:2}}\n       a：{n:2}","likes_number":2,"is_delete":false,"is_hidden":false,"ctime":1585025608,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1438740,"avatar":"https://static001.geekbang.org/account/avatar/00/15/f4/14/4599c47e.jpg","nickname":"Jia添！","note":"","ucode":"25E6BD81287EB9","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":545850,"discussion_content":"简单来说，赋值操作实际上有两步：\n从左到右解析变量地址；从右到左进行赋值","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1642066025,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":85110,"user_name":"AbyssKR","can_delete":false,"product_type":"c1","uid":1025948,"ip_address":"","ucode":"6ADAC021039110","user_header":"https://static001.geekbang.org/account/avatar/00/0f/a7/9c/be5dffb6.jpg","comment_is_top":false,"comment_ctime":1554983058,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1554983058","product_id":100023201,"comment_content":"style 标签不在替换中元素中，所以不使用 src 属性。&lt;style src=&quot;&quot;&gt; W3C 的回答是从未讨论过，而且看到貌似以前还出现过 link 引入 JavaScript 的想法。","like_count":0}]}