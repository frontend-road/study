{"id":85158,"title":"38丨数据可视化实战：如何给毛不易的歌曲做词云展示？","content":"<p>今天我们做一个数据可视化的项目。</p><p>我们经常需要对分析的数据提取常用词，做词云展示。比如一些互联网公司会抓取用户的画像，或者每日讨论话题的关键词，形成词云并进行展示。再或者，假如你喜欢某个歌手，想了解这个歌手创作的歌曲中经常用到哪些词语，词云就是个很好的工具。最后，只需要将词云生成一张图片就可以直观地看到结果。</p><p>那么在今天的实战项目里，有3个目标需要掌握：</p><ol>\n<li>\n<p>掌握词云分析工具，并进行可视化呈现；</p>\n</li>\n<li>\n<p>掌握Python爬虫，对网页的数据进行爬取；</p>\n</li>\n<li>\n<p>掌握XPath工具，分析提取想要的元素 。</p>\n</li>\n</ol><h2>如何制作词云</h2><p>首先我们需要了解什么是词云。词云也叫文字云，它帮助我们统计文本中高频出现的词，过滤掉某些常用词（比如“作曲”“作词”），将文本中的重要关键词进行可视化，方便分析者更好更快地了解文本的重点，同时还具有一定的美观度。</p><p>Python提供了词云工具WordCloud，使用pip install wordcloud安装后，就可以创建一个词云，构造方法如下：</p><pre><code>wc = WordCloud(\n    background_color='white',# 设置背景颜色\n    mask=backgroud_Image,# 设置背景图片\n    font_path='./SimHei.ttf',  # 设置字体，针对中文的情况需要设置中文字体，否则显示乱码\n    max_words=100, # 设置最大的字数\n    stopwords=STOPWORDS,# 设置停用词\n\tmax_font_size=150,# 设置字体最大值\n\twidth=2000,# 设置画布的宽度\n\theight=1200,# 设置画布的高度\n    random_state=30# 设置多少种随机状态，即多少种颜色\n)\n</code></pre><p>实际上WordCloud还有更多的构造参数，代码里展示的是一些主要参数，我在代码中都有注释，你可以自己看下。</p><p>创建好WordCloud类之后，就可以使用wordcloud=generate(text)方法生成词云，传入的参数text代表你要分析的文本，最后使用wordcloud.tofile(“a.jpg”)函数，将得到的词云图像直接保存为图片格式文件。</p><!-- [[[read_end]]] --><p>你也可以使用Python的可视化工具Matplotlib进行显示，方法如下：</p><pre><code>import matplotlib.pyplot as plt\nplt.imshow(wordcloud)\nplt.axis(&quot;off&quot;)\nplt.show()\n</code></pre><p>需要注意的是，我们不需要显示X轴和Y轴的坐标，使用plt.axis(“off”)可以将坐标轴关闭。</p><p>了解了如何使用词云工具WordCloud之后，我们将专栏前15节的标题进行词云可视化，具体的代码如下：</p><pre><code>#-*- coding:utf-8 -*-\nfrom wordcloud import WordCloud\nimport matplotlib.pyplot as plt\nimport jieba\nfrom PIL import Image\nimport numpy as np\n# 生成词云\ndef create_word_cloud(f):\n     print('根据词频计算词云')\n     text = &quot; &quot;.join(jieba.cut(f,cut_all=False, HMM=True))\n     wc = WordCloud(\n           font_path=&quot;./SimHei.ttf&quot;,\n           max_words=100,\n           width=2000,\n           height=1200,\n    )\n     wordcloud = wc.generate(text)\n     # 写词云图片\n     wordcloud.to_file(&quot;wordcloud.jpg&quot;)\n     # 显示词云文件\n     plt.imshow(wordcloud)\n     plt.axis(&quot;off&quot;)\n     plt.show()\n\nf = '数据分析全景图及修炼指南\\\n学习数据挖掘的最佳学习路径是什么？\\\nPython基础语法：开始你的Python之旅\\\nPython科学计算：NumPy\\\nPython科学计算：Pandas\\\n学习数据分析要掌握哪些基本概念？\\\n用户画像：标签化就是数据的抽象能力\\\n数据采集：如何自动化采集数据？\\\n数据采集：如何用八爪鱼采集微博上的“D&amp;G”评论？\\\nPython爬虫：如何自动化下载王祖贤海报？\\\n数据清洗：数据科学家80%时间都花费在了这里？\\\n数据集成：这些大号一共20亿粉丝？\\\n数据变换：大学成绩要求正态分布合理么？\\\n数据可视化：掌握数据领域的万金油技能\\\n一次学会Python数据可视化的10种技能'\n</code></pre><p>运行结果：<br>\n<img src=\"https://static001.geekbang.org/resource/image/49/34/49b2c6a27345777922db4b6e31110434.png?wh=1725*1035\" alt=\"\"><br>\n你能从结果中看出，还是有一些常用词显示出来了，比如“什么”“要求”“这些”等，我们可以把这些词设置为停用词，编写remove_stop_words函数，从文本中去掉：</p><pre><code># 去掉停用词\ndef remove_stop_words(f):\n     stop_words = ['学会', '就是', '什么']\n     for stop_word in stop_words:\n           f = f.replace(stop_word, '')\n     return f\n</code></pre><p>然后在结算词云前调用f = remove_stop_words(f)方法，最后运行可以得到如下的结果：</p><p><img src=\"https://static001.geekbang.org/resource/image/d0/ed/d0bd9cde1e1c0638976cef26b519fded.png?wh=1725*1035\" alt=\"\"><br>\n你能看出，去掉停用词之后的词云更加清晰，更能体现前15章的主要内容。</p><h2>给毛不易的歌词制作词云</h2><p>假设我们现在要给毛不易的歌词做个词云，那么需要怎么做呢？我们先把整个项目的流程梳理下：</p><p><img src=\"https://static001.geekbang.org/resource/image/7c/97/7cff33b392cec653ca2e68fbecd4ef97.jpg?wh=2337*776\" alt=\"\"></p><ol>\n<li>\n<p>在准备阶段：我们主要使用Python爬虫获取HTML，用XPath对歌曲的ID、名称进行解析，然后通过网易云音乐的API接口获取每首歌的歌词，最后将所有的歌词合并得到一个变量。</p>\n</li>\n<li>\n<p>在词云分析阶段，我们需要创建WordCloud词云类，分析得到的歌词文本，最后可视化。</p>\n</li>\n</ol><p>基于上面的流程，编写代码如下：</p><pre><code># -*- coding:utf-8 -*-\n# 网易云音乐 通过歌手ID，生成该歌手的词云\nimport requests\nimport sys\nimport re\nimport os\nfrom wordcloud import WordCloud\nimport matplotlib.pyplot as plt\nimport jieba\nfrom PIL import Image\nimport numpy as np\nfrom lxml import etree\n \nheaders = {\n       'Referer'  :'http://music.163.com',\n       'Host'     :'music.163.com',\n       'Accept'   :'text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,image/apng,*/*;q=0.8',\n       'User-Agent':'Chrome/10'\n    }\n \n# 得到某一首歌的歌词\ndef get_song_lyric(headers,lyric_url):\n    res = requests.request('GET', lyric_url, headers=headers)\n    if 'lrc' in res.json():\n       lyric = res.json()['lrc']['lyric']\n       new_lyric = re.sub(r'[\\d:.[\\]]','',lyric)\n       return new_lyric\n    else:\n       return ''\n       print(res.json())\n# 去掉停用词\ndef remove_stop_words(f):\n    stop_words = ['作词', '作曲', '编曲', 'Arranger', '录音', '混音', '人声', 'Vocal', '弦乐', 'Keyboard', '键盘', '编辑', '助理', 'Assistants', 'Mixing', 'Editing', 'Recording', '音乐', '制作', 'Producer', '发行', 'produced', 'and', 'distributed']\n    for stop_word in stop_words:\n       f = f.replace(stop_word, '')\n    return f\n# 生成词云\ndef create_word_cloud(f):\n    print('根据词频，开始生成词云!')\n    f = remove_stop_words(f)\n    cut_text = &quot; &quot;.join(jieba.cut(f,cut_all=False, HMM=True))\n    wc = WordCloud(\n       font_path=&quot;./wc.ttf&quot;,\n       max_words=100,\n       width=2000,\n       height=1200,\n    )\n    print(cut_text)\n    wordcloud = wc.generate(cut_text)\n    # 写词云图片\n    wordcloud.to_file(&quot;wordcloud.jpg&quot;)\n    # 显示词云文件\n    plt.imshow(wordcloud)\n    plt.axis(&quot;off&quot;)\n    plt.show()\n# 得到指定歌手页面 热门前50的歌曲ID，歌曲名\ndef get_songs(artist_id):\n    page_url = 'https://music.163.com/artist?id=' + artist_id\n    # 获取网页HTML\n    res = requests.request('GET', page_url, headers=headers)\n    # 用XPath解析 前50首热门歌曲\n    html = etree.HTML(res.text)\n    href_xpath = &quot;//*[@id='hotsong-list']//a/@href&quot;\n    name_xpath = &quot;//*[@id='hotsong-list']//a/text()&quot;\n    hrefs = html.xpath(href_xpath)\n    names = html.xpath(name_xpath)\n    # 设置热门歌曲的ID，歌曲名称\n    song_ids = []\n    song_names = []\n    for href, name in zip(hrefs, names):\n       song_ids.append(href[9:])\n       song_names.append(name)\n       print(href, '  ', name)\n    return song_ids, song_names\n# 设置歌手ID，毛不易为12138269\nartist_id = '12138269'\n[song_ids, song_names] = get_songs(artist_id)\n# 所有歌词\nall_word = ''\n# 获取每首歌歌词\nfor (song_id, song_name) in zip(song_ids, song_names):\n    # 歌词API URL\n    lyric_url = 'http://music.163.com/api/song/lyric?os=pc&amp;id=' + song_id + '&amp;lv=-1&amp;kv=-1&amp;tv=-1'\n    lyric = get_song_lyric(headers, lyric_url)\n    all_word = all_word + ' ' + lyric\n    print(song_name)\n#根据词频 生成词云\ncreate_word_cloud(all_word)\n</code></pre><p>运行结果：</p><p><img src=\"https://static001.geekbang.org/resource/image/ee/2c/ee24610141c2722660f2e4cb5824802c.png?wh=1725*1035\" alt=\"\"><br>\n这个过程里有一些模块，我需要说明下。</p><p>首先我编写get_songs函数，可以得到指定歌手页面中热门前50的歌曲ID，歌曲名。在这个函数里，我使用requests.request函数获取毛不易歌手页面的HTML。这里需要传入指定的请求头（headers），否则获取不到完整的信息。然后用XPath解析并获取指定的内容，这个模块中，我想获取的是歌曲的链接和名称。</p><p>其中歌曲的链接类似 /song?id=536099160 这种形式，你能看到字符串第9位之后，就是歌曲的ID。</p><p>有关XPath解析的内容，我在<a href=\"https://time.geekbang.org/column/article/76001\">第10节</a>讲到过，如果你忘记了，可以看一下。一般来说，XPath解析 99%的可能都是以//开头，因为你需要获取所有符合这个XPath的内容。我们通过分析HTML代码，能看到一个关键的部分：id=‘hotsong-list’。这个代表热门歌曲列表，也正是我们想要解析的内容。我们想要获取这个热门歌曲列表下面所有的链接，XPath解析就可以写成//*[@id=‘hotsong-list’]//a。然后你能看到歌曲链接是href属性，歌曲名称是这个链接的文本。</p><p>获得歌曲ID之后，我们还需要知道这个歌曲的歌词，对应代码中的get_song_lyric函数，在这个函数里调用了网易云的歌词API接口，比如<a href=\"http://music.163.com/api/song/lyric?os=pc&amp;id=536099160&amp;lv=-1&amp;kv=-1&amp;tv=-1\">http://music.163.com/api/song/lyric?os=pc&amp;id=536099160&amp;lv=-1&amp;kv=-1&amp;tv=-1</a>。</p><p>你能看到歌词文件里面还保存了时间信息，我们需要去掉这部分。因此我使用了re.sub函数，通过正则表达式匹配，将[]中数字信息去掉，方法为re.sub(r’[\\d:.[]]’,’’,lyric)。</p><p>最后我们还需要设置一些歌词中常用的停用词，比如“作词”“作曲”“编曲”等，编写remove_stop_words函数，将歌词文本中的停用词去掉。</p><p>最后编写create_word_cloud函数，通过歌词文本生成词云文件。</p><h2>总结</h2><p>今天我给你讲了词云的可视化。在这个实战中，你能看到前期的数据准备在整个过程中占了很大一部分。如果你用Python作为数据采集工具，就需要掌握Python爬虫和XPath解析，掌握这两个工具最好的方式就是多做练习。</p><p>我们今天讲到了词云工具WordCloud，它是一个很好用的Python工具，可以将复杂的文本通过词云图的方式呈现。需要注意的是，当我们需要使用中文字体的时候，比如黑体SimHei，就可以将WordCloud中的font_path属性设置为SimHei.ttf，你也可以设置其他艺术字体，在给毛不易的歌词做词云展示的时候，我们就用到了艺术字体。</p><p>你可以从GitHub上下载字体和代码：<a href=\"https://github.com/cystanford/word_cloud\">https://github.com/cystanford/word_cloud</a>。</p><p><img src=\"https://static001.geekbang.org/resource/image/0c/6d/0cbc5f3e4ecd41af9a872fd9b4aed06d.png?wh=1728*939\" alt=\"\"><br>\n最后给你留一道思考题吧。我抓取了毛不易主页的歌词，是以歌手主页为粒度进行的词云可视化。实际上网易云音乐也有歌单的API，比如<a href=\"http://music.163.com/api/playlist/detail?id=753776811\">http://music.163.com/api/playlist/detail?id=753776811</a>。你能不能编写代码对歌单做个词云展示（比如歌单ID为753776811）呢？</p><p>欢迎你在评论区与我分享你的答案，也欢迎点击“请朋友读”，把这篇文章分享给你的朋友或者同事。</p><p></p>","neighbors":{"left":{"article_title":"37丨数据采集实战：如何自动化运营微博？","id":84933},"right":{"article_title":"39丨数据挖掘实战（1）：信用卡违约率分析","id":85577}},"comments":[{"had_liked":false,"id":78033,"user_name":"third","can_delete":false,"product_type":"c1","uid":1025114,"ip_address":"","ucode":"9A37408A834F0B","user_header":"https://static001.geekbang.org/account/avatar/00/0f/a4/5a/e708e423.jpg","comment_is_top":false,"comment_ctime":1553059101,"is_pvip":false,"replies":[{"id":"64392","content":"Good Job","user_name":"作者回复","comment_id":78033,"uid":"1306094","ip_address":"","utype":1,"ctime":1577618226,"user_name_real":"cy"}],"discussion_count":2,"race_medal":0,"score":"14437960989","product_id":100021701,"comment_content":"from wordcloud import WordCloud<br>import matplotlib.pyplot as plt<br>import requests<br><br>headers = {<br>    &#39;Referer&#39;: &#39;http:&#47;&#47;music.163.com&#39;,<br>    &#39;Host&#39;: &#39;music.163.com&#39;,<br>    &#39;Accept&#39;: &#39;text&#47;html,application&#47;xhtml+xml,application&#47;xml;q=0.9,image&#47;webp,image&#47;apng,*&#47;*;q=0.8&#39;,<br>    &#39;User-Agent&#39;: &#39;Chrome&#47;10&#39;<br>}<br><br><br>def getsong(headers):<br>    url = &#39;http:&#47;&#47;music.163.com&#47;api&#47;playlist&#47;detail?id=753776811&#39;<br>    res = requests.request(&#39;GET&#39;, url, headers=headers)<br>    page = res.json()<br>    tracks=page[&#39;result&#39;][&#39;tracks&#39;]<br>    list = []<br>    for i in range(len(tracks)):<br>        Name = tracks[i][&quot;name&quot;]<br>        list.append(Name)<br>    return list<br><br><br>def create_WordCloud(list):<br>    print(&quot;根源词频计算词云&quot;)<br><br>    wc = WordCloud(<br>        font_path=&quot;simhei.ttf&quot;,<br>        max_words=100,  # 设置最大字数<br>        width=2000,  # 设置画布宽度<br>        height=1200,  # 设置画布高度<br>        random_state=100<br>    )<br>    wordcloud = wc.generate(list)<br>    # 写词云图片<br>    wordcloud.to_file(&quot;作业.jpg&quot;)<br>    # 显示词云文件<br>    plt.imshow(wordcloud)<br>    # 不需要显示X&#47;Y轴，用off将坐标轴关闭<br>    plt.axis(&quot;off&quot;)<br>    plt.show()<br><br><br># 去掉停用词以及中英文混合的词<br>def remove_stop_words(f):<br>    stop_words = [&#39;(伴奏)&#39;, &#39;(Demo版)&#39;, &#39;(必胜客新春版)&#39;]<br>    mixed_words = [&#39;Bonus Track：一荤一素&#39;, &#39;Bonus Track：给你给我&#39;]<br>    for stop_word in stop_words:<br>        f = f.replace(stop_word, &#39;&#39;)<br>    for mixed_word in mixed_words:<br>        f = f.replace(mixed_word, mixed_word[12:])<br>    return f<br><br>gerlists = getsong(headers)<br># 获取歌单是list类型直接转化为转换为str<br>lists_str = &quot; &quot;.join(gerlists)<br><br>lists = remove_stop_words(lists_str)<br>create_WordCloud(lists)","like_count":3,"discussions":[{"author":{"id":1306094,"avatar":"https://static001.geekbang.org/account/avatar/00/13/ed/ee/c4779b67.jpg","nickname":"cy","note":"","ucode":"50D653399A31F6","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":443942,"discussion_content":"Good Job","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1577618226,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1217329,"avatar":"https://static001.geekbang.org/account/avatar/00/12/93/31/abb7bfe3.jpg","nickname":"picoasis","note":"","ucode":"D5113416FF2B14","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":406173,"discussion_content":"# -*- coding:utf-8 -*-\n# 网易云音乐 通过歌单ID，生成歌单中歌名的词云\n# url 来自网页版的网易云音乐, 控制台 \nimport requests\nfrom wordcloud import WordCloud\nimport matplotlib.pyplot as plt\nimport jieba\nfrom lxml import etree\nimport re\n#import pdb\nheaders = {\n    &#39;Referer&#39;: &#39;http://music.163.com&#39;,\n    &#39;Host&#39;: &#39;music.163.com&#39;,\n    &#39;Accept&#39;: &#39;text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,image/apng,*/*;q=0.8&#39;,\n    &#39;User-Agent&#39;: &#39;Chrome/10&#39;\n}\n\n# 获取到歌单\ndef get_song_list(headers,song_list_url):\n    res = requests.request(&#34;GET&#34;,song_list_url,headers=headers, verify=False)\n    if res.status_code == 200:\n        xpathObj = etree.HTML(res.text)\n        href_xpath=&#39;//*[@id=&#34;song-list-pre-cache&#34;]//a/@href&#39;\n        name_xpath=&#39;//*[@id=&#34;song-list-pre-cache&#34;]//a/text()&#39;\n        #pdb.set_trace()\n        hrefs = xpathObj.xpath(href_xpath)\n        names = xpathObj.xpath(name_xpath)\n        #pdb.set_trace()\n        songs_id = []\n        songs_name = []\n        for href,name in zip(hrefs,names):\n            songs_id.append(re.sub(r&#39;\\D&#39;,&#39;&#39;,href))\n            songs_name.append(re.sub(r&#39;\\s&#39;,&#39;&#39;,name))\n        return songs_id,songs_name\n    else:\n        print(res.text)\n \n        \n# 创建词云展示\ndef createWordcloud(f):\n    print(&#34;根据词频结果进行词云展示！&#34;)\n    cut_text = &#34; &#34;.join(jieba.cut(f,cut_all=False,HMM=True))\n    wc = WordCloud(\n        font_path=&#34;STHeiti Light.ttc&#34;,\n        max_words=100,\n        width=2000,\n        height=1200,\n    )\n    wordcloud = wc.generate(cut_text)\n    wordcloud.to_file(&#34;song_list_wordcloud.jpg&#34;)\n    # 词云展示\n    plt.imshow(wordcloud)\n    plt.axis(&#34;off&#34;)\n    plt.show()\n\n# 开始\nsong_list_id = &#39;2829883282&#39;\nsong_list_url = &#39;https://music.163.com/playlist?id=&#39; + song_list_id\n[songs_id,songs_name]= get_song_list(headers,song_list_url)\nall_songs_name = &#39;&#39;\nfor name in songs_name:\n    all_songs_name += name\n","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1634716986,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":75747,"user_name":"王彬成","can_delete":false,"product_type":"c1","uid":1015045,"ip_address":"","ucode":"386803B8FC2DD5","user_header":"https://static001.geekbang.org/account/avatar/00/0f/7d/05/4bad0c7c.jpg","comment_is_top":false,"comment_ctime":1552462791,"is_pvip":false,"replies":[{"id":"64429","content":"Good Job","user_name":"作者回复","comment_id":75747,"uid":"1306094","ip_address":"","utype":1,"ctime":1577619058,"user_name_real":"cy"}],"discussion_count":1,"race_medal":0,"score":"14437364679","product_id":100021701,"comment_content":"<br>（2）将歌单的歌曲对应的歌词作词云展示<br>import requests<br>import jieba<br>from wordcloud import WordCloud<br>import matplotlib.pyplot as plt<br><br><br>#得到指定歌单页面的 全部歌曲的歌曲ID，歌曲名<br>def get_songs(playlist_id):<br>    page_url=&#39;http:&#47;&#47;music.163.com&#47;api&#47;playlist&#47;detail?id=&#39;+playlist_id<br>    #获取网页HTML<br>    res=requests.request(&#39;GET&#39;,page_url,headers=headers)<br>    # 输出歌单中歌曲数量<br>    print(len(res.json()[&#39;result&#39;][&#39;tracks&#39;]))<br><br>    # 设置热门歌曲的ID，歌曲名称<br>    song_ids=[]<br>    song_names=[]<br><br>    for i in range(len(res.json()[&#39;result&#39;][&#39;tracks&#39;])):<br>        names=res.json()[&#39;result&#39;][&#39;tracks&#39;][i][&#39;name&#39;]<br>        ids=res.json()[&#39;result&#39;][&#39;tracks&#39;][i][&#39;id&#39;]<br>        song_names.append(names)<br>        song_ids.append(ids)<br>        print(names,&#39; &#39;,ids)<br>    return song_names,song_ids<br> <br># 得到某一首歌的歌词<br>def get_song_lyric(headers,lyric_url):<br>    res = requests.request(&#39;GET&#39;, lyric_url, headers=headers)<br>    if &#39;lrc&#39; in res.json():<br>       lyric = res.json()[&#39;lrc&#39;][&#39;lyric&#39;]<br>       new_lyric = re.sub(r&#39;[\\d:.[\\]]&#39;,&#39;&#39;,lyric)<br>       return new_lyric<br>    else:<br>       return &#39;&#39;<br>       print(res.json())<br><br><br><br>#生成词云<br>def create_word_cloud(f):<br>    print(&#39;根据词频 生成词云&#39;)<br>    f=remove_stop_words(f)<br>    cut_text=&#39; &#39;.join(jieba.cut(f,cut_all=False,HMM=True))<br>    wc = WordCloud(<br>       font_path=&quot;.&#47;wc.ttf&quot;,<br>       max_words=100,<br>       width=2000,<br>       height=1200,<br>    )<br>    print(cut_text)<br>    wordcloud = wc.generate(cut_text)<br>    # 写词云图片<br>    wordcloud.to_file(&quot;wordcloud.jpg&quot;)<br>    # 显示词云文件<br>    plt.imshow(wordcloud)<br>    plt.axis(&quot;off&quot;)<br>    plt.show()<br>    <br><br># 设置歌单ID，【毛不易 | 不善言辞的深情】为753776811<br>playlist_id=&#39;753776811&#39;<br>[song_names,song_ids]=get_songs(playlist_id)<br><br>#所有歌词<br>all_word=&#39;&#39;<br># 获取每首歌歌词<br>for (song_id, song_name) in zip(song_ids, song_names):<br>    # 歌词 API URL<br>    lyric_url = &#39;http:&#47;&#47;music.163.com&#47;api&#47;song&#47;lyric?os=pc&amp;id=&#39; + str(song_id) + &#39;&amp;lv=-1&amp;kv=-1&amp;tv=-1&#39;<br>    lyric = get_song_lyric(headers, lyric_url)<br>    all_word = all_word + &#39; &#39; + lyric<br>    print(song_name)<br><br>#根据词频，生成词云<br>create_word_cloud(all_word)<br>","like_count":3,"discussions":[{"author":{"id":1306094,"avatar":"https://static001.geekbang.org/account/avatar/00/13/ed/ee/c4779b67.jpg","nickname":"cy","note":"","ucode":"50D653399A31F6","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":443012,"discussion_content":"Good Job","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1577619058,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":75646,"user_name":"跳跳","can_delete":false,"product_type":"c1","uid":1172803,"ip_address":"","ucode":"80B697B89E1A0B","user_header":"https://static001.geekbang.org/account/avatar/00/11/e5/43/7bc7cfe3.jpg","comment_is_top":false,"comment_ctime":1552443626,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"10142378218","product_id":100021701,"comment_content":"#需要注意的有两点<br>#1.歌单返回的是json文件，get_songs需要参考get_songs_lyri获取<br>#2.list_url中间是str类型，注意类型转换<br>#emmm，代码太长放不下了，删除了一部分和老师一样的函数<br># -*- coding:utf-8 -*-<br># 网易云音乐 通过歌单ID，生成该歌单的词云<br>import requests<br>import sys<br>import re<br>import os<br>from wordcloud import WordCloud<br>import matplotlib.pyplot as plt<br>import jieba<br>from PIL import Image<br>import numpy as np<br>from lxml import etree<br>def get_songs(songlist):<br>    list_url=&#39;https:&#47;&#47;music.163.com&#47;api&#47;playlist&#47;detail?id=&#39;+songlist<br>    res = requests.request(&#39;GET&#39;, list_url, headers=headers)<br>    if &#39;result&#39; in res.json():<br>        for item in res.json()[&#39;result&#39;][&#39;tracks&#39;]: # 读取json数据中的每一个ID和name<br>            song_ids.append(item[&#39;id&#39;]) <br>            song_names.append(item[&#39;name&#39;])<br>            print(item[&#39;id&#39;],&quot; &quot;,item[&#39;name&#39;])<br>            time.sleep(1) # 设置停留时间，防止“bad handshake”<br>        return song_ids,song_names<br>    else:<br>        return &#39;&#39;<br>        print(res.json())<br># 设置歌单<br>songlist = &#39;753776811&#39;<br>[song_ids, song_names] = get_songs(songlist)<br># 所有歌词<br>all_word = &#39;&#39;<br># 获取每首歌歌词<br>for (song_id, song_name) in zip(song_ids, song_names):<br>    # 歌词 API URL<br>    list_url = &#39;http:&#47;&#47;music.163.com&#47;api&#47;song&#47;lyric?os=pc&amp;id=&#39; + str(song_id) + &#39;&amp;lv=-1&amp;kv=-1&amp;tv=-1&#39;<br>    lyric = get_song_lyric(headers, list_url)<br>    all_word = all_word + &#39; &#39; + lyric<br>    print(song_name)<br># 根据词频 生成词云<br>create_word_cloud(all_word)","like_count":2},{"had_liked":false,"id":74786,"user_name":"一语中的","can_delete":false,"product_type":"c1","uid":1320112,"ip_address":"","ucode":"E1A0EFCEAD83B4","user_header":"https://static001.geekbang.org/account/avatar/00/14/24/b0/a6e0b03a.jpg","comment_is_top":false,"comment_ctime":1552298382,"is_pvip":false,"replies":[{"id":"64440","content":"Good Job","user_name":"作者回复","comment_id":74786,"uid":"1306094","ip_address":"","utype":1,"ctime":1577619302,"user_name_real":"cy"}],"discussion_count":1,"race_medal":0,"score":"10142232974","product_id":100021701,"comment_content":"以http:&#47;&#47;music.163.com&#47;api&#47;playlist&#47;detail?id=753776811中歌单为例做词云展示<br>#-*- coding:utf-8 -*-<br>from wordcloud import WordCloud<br>import matplotlib.pyplot as plt<br>import requests<br><br>def getSonglists(url, headers):<br>    #根据歌单API获取歌曲列表<br>\t#将页面信息转换为json格式便于通过字典取值<br>    r = requests.get(url, headers=headers)<br>    page_json = r.json()<br>    tracks = page_json[&quot;result&quot;][&quot;tracks&quot;]<br>    lists = []<br>    for i in  range(len(tracks)):<br>        listName = tracks[i][&quot;name&quot;]<br>        lists.append(listName)<br>    return lists<br><br>#生成词云<br>def create_WordCloud(lists):<br>    print(&quot;根源词频计算词云&quot;)<br> <br>    wc = WordCloud(<br>        font_path = &quot;C:\\Windows\\Fonts\\simhei.ttf&quot;,  #设置中文字体<br>        max_words = 100,             #设置最大字数<br>        width = 2000,                #设置画布宽度<br>        height = 1200,                #设置画布高度<br>        random_state = 100<br>    )<br>    wordcloud = wc.generate(lists)<br>    #写词云图片<br>    wordcloud.to_file(&quot;wordcloud.jpg&quot;)<br>    #显示词云文件<br>    plt.imshow(wordcloud)<br>    #不需要显示X&#47;Y轴，用off将坐标轴关闭<br>    plt.axis(&quot;off&quot;)<br>    plt.show()<br><br>#去掉停用词以及中英文混合的词<br>def remove_stop_words(f):<br>    stop_words = [&#39;(伴奏)&#39;, &#39;(Demo版)&#39;, &#39;(必胜客新春版)&#39;]<br>    mixed_words = [&#39;Bonus Track：一荤一素&#39;, &#39;Bonus Track：给你给我&#39;]<br>    for stop_word in stop_words:<br>        f = f.replace(stop_word, &#39;&#39;)<br>    for mixed_word in mixed_words:<br>        f = f.replace(mixed_word, mixed_word[12:])<br>    return  f<br><br>if __name__ == &quot;__main__&quot;:<br><br>    headers = {<br>        &#39;Referer&#39;: &#39;http:&#47;&#47;music.163.com&#39;,<br>        &#39;Host&#39;: &#39;music.163.com&#39;,<br>        &#39;Accept&#39;: &#39;text&#47;html,application&#47;xhtml+xml,application&#47;xml;q=0.9,image&#47;webp,image&#47;apng,*&#47;*;q=0.8&#39;,<br>        &#39;User-Agent&#39;: &#39;Chrome&#47;10&#39;<br>    }<br>    url = &quot;http:&#47;&#47;music.163.com&#47;api&#47;playlist&#47;detail?id=753776811&quot;<br>    gerLists = getSonglists(url, headers)<br>\t#获取歌单是list类型，转换为str，那么就不再需要用jieba分词<br>    lists_str = &quot; &quot;.join(gerLists)<br>\t<br>    lists = remove_stop_words(lists_str)<br>    create_WordCloud(lists)","like_count":2,"discussions":[{"author":{"id":1306094,"avatar":"https://static001.geekbang.org/account/avatar/00/13/ed/ee/c4779b67.jpg","nickname":"cy","note":"","ucode":"50D653399A31F6","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":442681,"discussion_content":"Good Job","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1577619302,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":185281,"user_name":"建强","can_delete":false,"product_type":"c1","uid":1397126,"ip_address":"","ucode":"62B03D0E0C64EC","user_header":"https://static001.geekbang.org/account/avatar/00/15/51/86/b5fd8dd8.jpg","comment_is_top":false,"comment_ctime":1583551663,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"5878518959","product_id":100021701,"comment_content":"# 网易云歌单词云图<br>import requests<br>import sys<br>import re<br>import os<br>from wordcloud import WordCloud<br>import matplotlib.pyplot as plt<br>import jieba<br>from PIL import Image<br>import numpy as np<br>from lxml import etree<br> <br>headers = {<br>       &#39;Referer&#39;  :&#39;http:&#47;&#47;music.163.com&#39;,<br>       &#39;Host&#39;     :&#39;music.163.com&#39;,<br>       &#39;Accept&#39;   :&#39;text&#47;html,application&#47;xhtml+xml,application&#47;xml;q=0.9,image&#47;webp,image&#47;apng,*&#47;*;q=0.8&#39;,<br>       &#39;User-Agent&#39;:&#39;Chrome&#47;10&#39;<br>    }<br><br># 获取歌单<br>def get_songlist(artist_id):<br>#BEGIN<br>    page_url = &#39;https:&#47;&#47;music.163.com&#47;playlist?id=&#39; + artist_id<br>    # 获取网页HTML<br>    res = requests.request(&#39;GET&#39;, page_url, headers=headers)<br><br>    # 用XPath从网页中解析歌单<br>    html = etree.HTML(res.text)<br>    href_xpath = &quot;&#47;&#47;*[@id=&#39;song-list-pre-cache&#39;]&#47;&#47;a&#47;@href&quot;<br>    name_xpath = &quot;&#47;&#47;*[@id=&#39;song-list-pre-cache&#39;]&#47;&#47;a&#47;text()&quot;<br>    hrefs = html.xpath(href_xpath)<br>    names = html.xpath(name_xpath)<br><br>    # 获取歌曲的ID，歌曲名称<br>    song_ids = []<br>    song_names = []<br>    for href, name in zip(hrefs, names):<br>       song_ids.append(href[9:])<br>       song_names.append(name)<br>       <br>    return song_ids, song_names<br>#END<br><br># 制作词云图<br>def create_word_cloud(f):<br>#BEGIN<br>    print(&#39;根据词频，开始生成词云!&#39;)<br>    #f = remove_stop_words(f)<br>    cut_text = &quot; &quot;.join(jieba.cut(f,cut_all=False, HMM=True))<br>    wc = WordCloud(<br>       font_path=&quot;G:&#47;开发实验区&#47;实验数据&#47;毛不易歌单词云图&#47;simhei.ttf&quot;,<br>       max_words=100,<br>       width=2000,<br>       height=1200,<br>    )<br>    print(cut_text)<br>    wordcloud = wc.generate(cut_text)<br>    # 写词云图片<br>    wordcloud.to_file(&quot;G:&#47;开发实验区&#47;实验数据&#47;毛不易歌单词云图&#47;wordcloud.jpg&quot;)<br>    # 显示词云文件<br>    plt.imshow(wordcloud)<br>    plt.axis(&quot;off&quot;)<br>    plt.show()<br>#END<br><br># 主程序<br>def main():<br>#BEGIN<br>    song_ids, song_names = get_songlist(&#39;753776811&#39;)<br><br>    all_song_name = &#39;&#39;<br>    for song_id, song_name in zip(song_ids, song_names):<br>        all_song_name = all_song_name + &#39; &#39; + song_name<br><br>    create_word_cloud(all_song_name)<br>    <br>#END<br><br>if __name__ == &#39;__main__&#39;:<br>    main()<br>","like_count":1},{"had_liked":false,"id":135364,"user_name":"Kyle","can_delete":false,"product_type":"c1","uid":1258042,"ip_address":"","ucode":"96DE706AAC9D97","user_header":"https://static001.geekbang.org/account/avatar/00/13/32/3a/2d8a2c67.jpg","comment_is_top":false,"comment_ctime":1569138800,"is_pvip":false,"replies":[{"id":"63779","content":"Good Job","user_name":"作者回复","comment_id":135364,"uid":"1306094","ip_address":"","utype":1,"ctime":1577541271,"user_name_real":"cy"}],"discussion_count":1,"race_medal":0,"score":"5864106096","product_id":100021701,"comment_content":"# -*- coding:utf-8 -*-<br># 网易云音乐 通过歌手ID，生成该歌手的词云<br>import requests<br>import os<br>import re<br>import sys<br>from wordcloud import WordCloud<br>import matplotlib.pyplot as plt<br>from PIL import Image<br>import numpy as np<br>import jieba<br>from lxml import etree<br><br>headers = {<br>    &#39;Referer&#39;: &#39;http:&#47;&#47;music.163.com&#39;,<br>    &#39;Host&#39;: &#39;music.163.com&#39;,<br>    &#39;Accept&#39;: &#39;text&#47;html,application&#47;xhtml+xml,application&#47;xml;q=0.9,image&#47;webp,image&#47;apng,*&#47;*;q=0.8&#39;,<br>    &#39;User-Agent&#39;: &#39;Chrome&#47;10&#39;<br>}<br><br># 获取到歌单的信息<br>def get_song_list(headers,song_list_url):<br>    res = requests.request(&quot;GET&quot;,song_list_url,headers=headers)<br>    if &#39;result&#39; in res.json():<br>        all_song_list = &quot;&quot;<br>        for song_list in res.json()[&#39;result&#39;][&#39;tracks&#39;]:<br>            all_song_list = all_song_list + song_list[&#39;name&#39;]<br>            print(all_song_list)<br>        return all_song_list<br>    else:<br>        return &#39;&#39;<br><br># 创建词云展示<br>def wordcloud(f):<br>    print(&quot;根据词频结果进行词云展示！&quot;)<br>    cut_text = &quot; &quot;.join(jieba.cut(f,cut_all=False,HMM=True))<br>    wc = WordCloud(<br>        font_path=&quot;.&#47;wc.ttf&quot;,<br>        max_words=100,<br>        width=2000,<br>        height=1200,<br>    )<br>    wordcloud = wc.generate(cut_text)<br>    wordcloud.to_file(&quot;song_list_wordcloud.jpg&quot;)<br>    # 词云展示<br>    plt.imshow(wordcloud)<br>    plt.axis(&quot;off&quot;)<br>    plt.show()<br><br># 获取歌单<br>song_list_id = &#39;753776811&#39;<br>song_list_url = &#39;http:&#47;&#47;music.163.com&#47;api&#47;playlist&#47;detail?id=&#39; + song_list_id<br>all_song_list_new = get_song_list(headers,song_list_url)<br>wordcloud(all_song_list_new)","like_count":1,"discussions":[{"author":{"id":1306094,"avatar":"https://static001.geekbang.org/account/avatar/00/13/ed/ee/c4779b67.jpg","nickname":"cy","note":"","ucode":"50D653399A31F6","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":468156,"discussion_content":"Good Job","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1577541271,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":89167,"user_name":"滢","can_delete":false,"product_type":"c1","uid":1221511,"ip_address":"","ucode":"971A6F20AF3F9A","user_header":"https://static001.geekbang.org/account/avatar/00/12/a3/87/c415e370.jpg","comment_is_top":false,"comment_ctime":1556096173,"is_pvip":false,"replies":[{"id":"64220","content":"滢同学不错啊~ 经常做作业，Good Job","user_name":"作者回复","comment_id":89167,"uid":"1306094","ip_address":"","utype":1,"ctime":1577614572,"user_name_real":"cy"}],"discussion_count":1,"race_medal":0,"score":"5851063469","product_id":100021701,"comment_content":"课后作业：语言Python3.6<br>import requests<br>import matplotlib.pyplot as plt<br>from wordcloud import WordCloud<br><br>#创建请求头<br>headers = {<br>    &#39;Referer&#39;:&#39;http:&#47;&#47;music.163.com&#39;,<br>    &#39;Host&#39;:&#39;music.163.com&#39;,<br>    &#39;Accept&#39;:&#39;text&#47;html,application&#47;xhtml+xml,application&#47;xml;q=0.9,image&#47;Webp,image&#47;apng,*&#47;*;q=0.8&#39;,<br>    &#39;User-Agent&#39;:&#39;Chrome&#47;10&#39;<br>}<br><br>#获取歌单<br>def get_song_name(req_url):<br>    res = requests.request(&#39;GET&#39;,req_url,headers=headers)<br>    if &#39;tracks&#39; in res.json()[&#39;result&#39;]:<br>        tracks = res.json()[&#39;result&#39;][&#39;tracks&#39;]<br>        names = []<br>        for i in  range(len(tracks)):<br>            name = tracks[i][&#39;name&#39;]<br>            names.append(name)<br>        return names<br>    else:<br>        return &#39;&#39;<br><br>#过滤停用词<br>def remove_stop_words(text):<br>    stop_words = [&#39;(伴奏)&#39;,&#39;Bonus Track：&#39;,&#39;(Demo版)&#39;]<br>    for stop_word in stop_words:<br>        text = text.replace(stop_word,&#39;&#39;)<br>    return text<br><br>path = &#39;&#47;Users&#47;apple&#47;Desktop&#47;GitHubProject&#47;Read mark&#47;数据分析&#47;geekTime&#47;data&#47;&#39;<br>#获得词云<br>def create_wordcloud(text):<br>    #移除过滤词<br>    text = remove_stop_words(text)<br>    wc = WordCloud(<br>        font_path = &quot;&#47;Library&#47;Fonts&#47;Arial Unicode.ttf&quot;,<br>        max_words = 100,<br>        width = 2000,<br>        height = 1200<br>    )<br>    wordcloud = wc.generate(text)<br>    wordcloud.to_file(path + &#39;wordcloud_homework.jpg&#39;)<br>    plt.imshow(wordcloud)<br>    plt.axis(&#39;off&#39;)<br>    plt.show()<br><br>#处理歌单，形成词云<br>request_url = &#39;http:&#47;&#47;music.163.com&#47;api&#47;playlist&#47;detail?id=753776811&#39;<br>content_list = get_song_name(request_url)<br>content = &quot; &quot;.join(content_list)<br>print(&#39;歌单信息---&#39;,content)<br>create_wordcloud(content)<br><br>--------------<br>歌单信息--- 别再闹了 在无风时 那时的我们 从无到有 一江水 借 消愁 不染 盛夏 哎哟 无问 一荤一素 南一道街 芬芳一生 请记住我 项羽虞姬 给你给我 想你想你 意料之中 平凡的一天 像我这样的人 感觉自己是巨星 如果有一天我变得很有钱 借 (伴奏) 消愁 (伴奏) 盛夏 (伴奏) 哎哟 (伴奏) 想你想你 (伴奏) 南一道街 (伴奏) 给你给我 (伴奏) 芬芳一生 (伴奏) 一荤一素 (伴奏) 平凡的一天 (伴奏) 像我这样的人 (伴奏) 如果有一天我变得很有钱 (伴奏) 如果有一天我变得很有钱 (必胜客新春版) Bonus Track：一荤一素 (Demo版) Bonus Track：给你给我 (Demo版)<br>---------------<br>图片无法展示，希望极客实践的PM能提出改进方案，前端和后台实现一下（😂😂），祝专栏越做越好","like_count":1,"discussions":[{"author":{"id":1306094,"avatar":"https://static001.geekbang.org/account/avatar/00/13/ed/ee/c4779b67.jpg","nickname":"cy","note":"","ucode":"50D653399A31F6","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":448041,"discussion_content":"滢同学不错啊~ 经常做作业，Good Job","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1577614572,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":329294,"user_name":"piboye","can_delete":false,"product_type":"c1","uid":1066752,"ip_address":"","ucode":"7CFD8712857A85","user_header":"https://static001.geekbang.org/account/avatar/00/10/47/00/3202bdf0.jpg","comment_is_top":false,"comment_ctime":1641271943,"is_pvip":true,"discussion_count":0,"race_medal":0,"score":"1641271943","product_id":100021701,"comment_content":"有停用词的库吗？","like_count":0},{"had_liked":false,"id":316858,"user_name":"picoasis","can_delete":false,"product_type":"c1","uid":1217329,"ip_address":"","ucode":"D5113416FF2B14","user_header":"https://static001.geekbang.org/account/avatar/00/12/93/31/abb7bfe3.jpg","comment_is_top":false,"comment_ctime":1634570146,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1634570146","product_id":100021701,"comment_content":"在制作歌词云的程序中，get_song_lyric函数，增加了一个正则修改，去除大部分的工作人员的信息。<br>new_lyric1 = re.sub(r&#39;[\\d:.[\\]]&#39;,&#39;&#39;,lyric) #去除时间<br>new_lyric = re.sub(r&#39;\\s?.*[(by：)：:【】@]+.*\\n?&#39;,&#39;&#39;,new_lyric1) #去除工作人员<br><br>因为打印歌词可以发现，有大量的工作人员信息，区别于歌词信息，符合某种模式，而且工作人员信息对歌词云展示影响也很大。<br><br>工作人员的信息示例如下：<br>             鼓Drums by：荒井十一<br>             贝斯 Bass by：许钧<br>             吉他 Guitars by  许钧<br>             键盘＆合成器 Keys＆Synth by 许钧<br>             弦乐编写 Strings Arranged by：胡静成、许钧<br>             弦乐监制 Strings Directed by：胡静成<br>         ","like_count":0},{"had_liked":false,"id":307406,"user_name":"Siyige2727","can_delete":false,"product_type":"c1","uid":2723937,"ip_address":"","ucode":"59169A2250DD55","user_header":"https://thirdwx.qlogo.cn/mmopen/vi_32/rZ4LbfVYHpVxdibIvO5EyLwHDicm3R8EkjeibXTv91kMGP7hkNFbZ7NibPjEibVqRO2rXWkTLB96jNUM70RhuyD15GA/132","comment_is_top":false,"comment_ctime":1629085487,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1629085487","product_id":100021701,"comment_content":"Traceback (most recent call last):<br>  File &quot;&lt;input&gt;&quot;, line 58, in &lt;module&gt;<br>  File &quot;&lt;input&gt;&quot;, line 17, in get_song_name<br>KeyError: &#39;result&#39;","like_count":0},{"had_liked":false,"id":282872,"user_name":"陈炫宏","can_delete":false,"product_type":"c1","uid":2452447,"ip_address":"","ucode":"A64E64108735C3","user_header":"","comment_is_top":false,"comment_ctime":1615449603,"is_pvip":false,"replies":[{"id":"103524","content":"网上搜索网易云API可以查到","user_name":"作者回复","comment_id":282872,"uid":"1306094","ip_address":"","utype":1,"ctime":1616695234,"user_name_real":"cy"}],"discussion_count":1,"race_medal":0,"score":"1615449603","product_id":100021701,"comment_content":"API是怎么找到的？","like_count":0,"discussions":[{"author":{"id":1306094,"avatar":"https://static001.geekbang.org/account/avatar/00/13/ed/ee/c4779b67.jpg","nickname":"cy","note":"","ucode":"50D653399A31F6","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":516863,"discussion_content":"网上搜索网易云API可以查到","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1616695234,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":257452,"user_name":"进击的矮子","can_delete":false,"product_type":"c1","uid":2218372,"ip_address":"","ucode":"39173CF9584C51","user_header":"https://static001.geekbang.org/account/avatar/00/21/d9/84/f1b10393.jpg","comment_is_top":false,"comment_ctime":1603976091,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1603976091","product_id":100021701,"comment_content":"不错,虽然这些知识点都会,但复用较强,改个id就是另一个歌手了,只是stopwords也需要改变","like_count":0},{"had_liked":false,"id":239830,"user_name":"Geeky_Ben","can_delete":false,"product_type":"c1","uid":1981878,"ip_address":"","ucode":"4889BFC8BF6EB3","user_header":"https://static001.geekbang.org/account/avatar/00/1e/3d/b6/e4a72acc.jpg","comment_is_top":false,"comment_ctime":1596674442,"is_pvip":false,"replies":[{"id":"103503","content":"wc = WordCloud(<br>       font_path=&quot;.&#47;wc.ttf&quot;,<br>       max_words=100,<br>       width=2000,<br>       height=1200,<br>    )<br>其中font_path对应的字体路径，改成你电脑上的路径即可","user_name":"作者回复","comment_id":239830,"uid":"1306094","ip_address":"","utype":1,"ctime":1616690132,"user_name_real":"cy"}],"discussion_count":3,"race_medal":0,"score":"1596674442","product_id":100021701,"comment_content":"老师，为什么我的结果显示 cannot open resource","like_count":1,"discussions":[{"author":{"id":1306094,"avatar":"https://static001.geekbang.org/account/avatar/00/13/ed/ee/c4779b67.jpg","nickname":"cy","note":"","ucode":"50D653399A31F6","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":503240,"discussion_content":"wc = WordCloud(\n       font_path=&amp;quot;./wc.ttf&amp;quot;,\n       max_words=100,\n       width=2000,\n       height=1200,\n    )\n其中font_path对应的字体路径，改成你电脑上的路径即可","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1616690132,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":2273809,"avatar":"https://static001.geekbang.org/account/avatar/00/22/b2/11/455601cc.jpg","nickname":"Brown_W","note":"","ucode":"B2B5A98552BE47","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":324837,"discussion_content":"字体换一下就好了","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1605179421,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1914963,"avatar":"https://static001.geekbang.org/account/avatar/00/1d/38/53/738fa9b2.jpg","nickname":"7Color_李康龙","note":"","ucode":"0BCB00135C3F79","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":299984,"discussion_content":"我也是\n","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1597897597,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":225899,"user_name":"如果","can_delete":false,"product_type":"c1","uid":1903660,"ip_address":"","ucode":"B34F3C5F304B4E","user_header":"https://static001.geekbang.org/account/avatar/00/1d/0c/2c/e905e970.jpg","comment_is_top":false,"comment_ctime":1591885068,"is_pvip":false,"replies":[{"id":"103736","content":"打开开发者工具——找到https:&#47;&#47;music.163.com&#47;#&#47;artist?id=12138269对应的DOC文件，在Requests Headers中可以找到accept对应的值。","user_name":"作者回复","comment_id":225899,"uid":"1306094","ip_address":"","utype":1,"ctime":1617039309,"user_name_real":"cy"}],"discussion_count":1,"race_medal":0,"score":"1591885068","product_id":100021701,"comment_content":"老师你好，请问下header里的Accept参数是怎么来的","like_count":0,"discussions":[{"author":{"id":1306094,"avatar":"https://static001.geekbang.org/account/avatar/00/13/ed/ee/c4779b67.jpg","nickname":"cy","note":"","ucode":"50D653399A31F6","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":498033,"discussion_content":"打开开发者工具——找到https://music.163.com/#/artist?id=12138269对应的DOC文件，在Requests Headers中可以找到accept对应的值。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1617039309,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":205684,"user_name":"JustDoDT","can_delete":false,"product_type":"c1","uid":1127175,"ip_address":"","ucode":"6AF0B80F00EAEF","user_header":"https://static001.geekbang.org/account/avatar/00/11/33/07/8f351609.jpg","comment_is_top":false,"comment_ctime":1586702015,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1586702015","product_id":100021701,"comment_content":"交作业：<br>https:&#47;&#47;github.com&#47;LearningChanging&#47;Data-analysis-in-action&#47;tree&#47;master&#47;38-%E6%95%B0%E6%8D%AE%E5%8F%AF%E8%A7%86%E5%8C%96%E5%AE%9E%E6%88%98%EF%BC%9A%E5%A6%82%E4%BD%95%E7%BB%99%E6%AF%9B%E4%B8%8D%E6%98%93%E7%9A%84%E6%AD%8C%E6%9B%B2%E5%81%9A%E8%AF%8D%E4%BA%91%E5%B1%95%E7%A4%BA%EF%BC%9F","like_count":0},{"had_liked":false,"id":196690,"user_name":"张贺","can_delete":false,"product_type":"c1","uid":1283181,"ip_address":"","ucode":"0254E40FB3EB5F","user_header":"https://static001.geekbang.org/account/avatar/00/13/94/6d/5cd6e8c7.jpg","comment_is_top":false,"comment_ctime":1585303093,"is_pvip":true,"discussion_count":0,"race_medal":0,"score":"1585303093","product_id":100021701,"comment_content":"浅显易懂","like_count":0},{"had_liked":false,"id":161967,"user_name":"GS","can_delete":false,"product_type":"c1","uid":1042618,"ip_address":"","ucode":"21C73A8CBD8093","user_header":"https://static001.geekbang.org/account/avatar/00/0f/e8/ba/6d318c08.jpg","comment_is_top":false,"comment_ctime":1576418593,"is_pvip":false,"replies":[{"id":"62581","content":"赞 认真做作业的GS同学","user_name":"作者回复","comment_id":161967,"uid":"1306094","ip_address":"","utype":1,"ctime":1577070857,"user_name_real":"cy"}],"discussion_count":1,"race_medal":0,"score":"1576418593","product_id":100021701,"comment_content":"https:&#47;&#47;github.com&#47;leledada&#47;jupyter&#47;tree&#47;master&#47;wordcloud","like_count":0,"discussions":[{"author":{"id":1306094,"avatar":"https://static001.geekbang.org/account/avatar/00/13/ed/ee/c4779b67.jpg","nickname":"cy","note":"","ucode":"50D653399A31F6","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":477929,"discussion_content":"赞 认真做作业的GS同学","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1577070857,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":161568,"user_name":"GS","can_delete":false,"product_type":"c1","uid":1042618,"ip_address":"","ucode":"21C73A8CBD8093","user_header":"https://static001.geekbang.org/account/avatar/00/0f/e8/ba/6d318c08.jpg","comment_is_top":false,"comment_ctime":1576234425,"is_pvip":false,"replies":[{"id":"62595","content":"有异常处理，很好","user_name":"作者回复","comment_id":161568,"uid":"1306094","ip_address":"","utype":1,"ctime":1577072761,"user_name_real":"cy"}],"discussion_count":1,"race_medal":0,"score":"1576234425","product_id":100021701,"comment_content":" if &#39;lrc&#39; in res.json():<br>        try:<br>            lyric = res.json()[&#39;lrc&#39;][&#39;lyric&#39;]<br>            new_lyric = re.sub(r&#39;[\\d:.[\\]]&#39;,&#39;&#39;,lyric)<br>            return new_lyric<br>        except:<br>            print(&#39;发生了异常-----------------------------------&#39;,lyric_url)<br>            return &#39;&#39;<br>    else:<br>        return &#39;&#39;","like_count":0,"discussions":[{"author":{"id":1306094,"avatar":"https://static001.geekbang.org/account/avatar/00/13/ed/ee/c4779b67.jpg","nickname":"cy","note":"","ucode":"50D653399A31F6","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":477765,"discussion_content":"有异常处理，很好","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1577072761,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":161567,"user_name":"GS","can_delete":false,"product_type":"c1","uid":1042618,"ip_address":"","ucode":"21C73A8CBD8093","user_header":"https://static001.geekbang.org/account/avatar/00/0f/e8/ba/6d318c08.jpg","comment_is_top":false,"comment_ctime":1576233892,"is_pvip":false,"replies":[{"id":"62584","content":"对的 很好的建议","user_name":"作者回复","comment_id":161567,"uid":"1306094","ip_address":"","utype":1,"ctime":1577070934,"user_name_real":"cy"}],"discussion_count":1,"race_medal":0,"score":"1576233892","product_id":100021701,"comment_content":"解析歌词的时候最好是用try except 包起来，不然遇到异常就不走了","like_count":0,"discussions":[{"author":{"id":1306094,"avatar":"https://static001.geekbang.org/account/avatar/00/13/ed/ee/c4779b67.jpg","nickname":"cy","note":"","ucode":"50D653399A31F6","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":477764,"discussion_content":"对的 很好的建议","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1577070934,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":161178,"user_name":"#Yema","can_delete":false,"product_type":"c1","uid":1356100,"ip_address":"","ucode":"DEB70927BCC792","user_header":"https://static001.geekbang.org/account/avatar/00/14/b1/44/a0ccff54.jpg","comment_is_top":false,"comment_ctime":1576137918,"is_pvip":false,"replies":[{"id":"62640","content":"网易云音乐有一些API接口，比如歌词，歌曲信息，关键词搜索","user_name":"作者回复","comment_id":161178,"uid":"1306094","ip_address":"","utype":1,"ctime":1577080038,"user_name_real":"cy"}],"discussion_count":2,"race_medal":0,"score":"1576137918","product_id":100021701,"comment_content":"lyric_url = &#39;http:&#47;&#47;music.163.com&#47;api&#47;song&#47;lyric?os=pc&amp;id=&#39; + str(song_id) + &#39;&amp;lv=-1&amp;kv=-1<br>老师能解释一下这个url是从哪找到的吗？为什么在浏览器抓包里面没有找到这个api，我找到的api是一个异步需要向api传csrf_token才能拿到歌词","like_count":0,"discussions":[{"author":{"id":1306094,"avatar":"https://static001.geekbang.org/account/avatar/00/13/ed/ee/c4779b67.jpg","nickname":"cy","note":"","ucode":"50D653399A31F6","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":477628,"discussion_content":"网易云音乐有一些API接口，比如歌词，歌曲信息，关键词搜索","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1577080038,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1303362,"avatar":"https://static001.geekbang.org/account/avatar/00/13/e3/42/bcab280f.jpg","nickname":"🐳Echo","note":"","ucode":"9FB56F144F1C57","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":337593,"discussion_content":"我也是有同样的问题，我百度搜了下文档，也没找到老师用的接口- -\n","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1608985027,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":97254,"user_name":"挠头侠","can_delete":false,"product_type":"c1","uid":1150474,"ip_address":"","ucode":"F96966832E2252","user_header":"https://static001.geekbang.org/account/avatar/00/11/8e/0a/31ec5392.jpg","comment_is_top":false,"comment_ctime":1558620722,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1558620722","product_id":100021701,"comment_content":"老師 這個歌曲頁面不是动态加载的吗，怎么可以直接用requests呀","like_count":0},{"had_liked":false,"id":97200,"user_name":"挠头侠","can_delete":false,"product_type":"c1","uid":1150474,"ip_address":"","ucode":"F96966832E2252","user_header":"https://static001.geekbang.org/account/avatar/00/11/8e/0a/31ec5392.jpg","comment_is_top":false,"comment_ctime":1558608107,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1558608107","product_id":100021701,"comment_content":"老师可以介绍一下jieba中HMM参数的作用吗","like_count":0},{"had_liked":false,"id":79536,"user_name":"上官","can_delete":false,"product_type":"c1","uid":1353145,"ip_address":"","ucode":"037968A8E0C566","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTJAeZ2VCia2y3bW9N7EMfgBqX8WClXUydwaXDPcK7Bm3XaMnMKx7q5ffA0UuTeJmEusxtQAibf8djCA/132","comment_is_top":false,"comment_ctime":1553505877,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1553505877","product_id":100021701,"comment_content":"Traceback (most recent call last):<br>  File &quot;&#47;Users&#47;shangguan&#47;PycharmProjects&#47;LicenseRecognition&#47;geci.py&quot;, line 85, in &lt;module&gt;<br>    [song_ids, song_names] = get_songs(artist_id)<br>TypeError: &#39;NoneType&#39; object is not iterable<br><br>为什么报nonetype？<br>","like_count":0},{"had_liked":false,"id":75734,"user_name":"王彬成","can_delete":false,"product_type":"c1","uid":1015045,"ip_address":"","ucode":"386803B8FC2DD5","user_header":"https://static001.geekbang.org/account/avatar/00/0f/7d/05/4bad0c7c.jpg","comment_is_top":false,"comment_ctime":1552460905,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1552460905","product_id":100021701,"comment_content":"题目理解（1）：将歌单的歌曲名称作词云展示<br>-------<br>import requests<br>import jieba<br>from wordcloud import WordCloud<br>import matplotlib.pyplot as plt<br><br>headers = {<br>       &#39;Referer&#39;  :&#39;http:&#47;&#47;music.163.com&#39;,<br>       &#39;Host&#39;     :&#39;music.163.com&#39;,<br>       &#39;Accept&#39;   :&#39;text&#47;html,application&#47;xhtml+xml,application&#47;xml;q=0.9,image&#47;webp,image&#47;apng,*&#47;*;q=0.8&#39;,<br>       &#39;User-Agent&#39;:&#39;Chrome&#47;10&#39;<br>    }<br><br>#得到指定歌单页面的 全部歌曲的歌曲ID，歌曲名<br>def get_songs(playlist_id):<br>    page_url=&#39;http:&#47;&#47;music.163.com&#47;api&#47;playlist&#47;detail?id=&#39;+playlist_id<br>    #获取网页HTML<br>    res=requests.request(&#39;GET&#39;,page_url,headers=headers)<br>    # 输出歌单中歌曲数量<br>    print(len(res.json()[&#39;result&#39;][&#39;tracks&#39;]))<br><br>    # 设置热门歌曲的ID，歌曲名称<br>    song_ids=[]<br>    song_names=[]<br><br>    for i in range(len(res.json()[&#39;result&#39;][&#39;tracks&#39;])):<br>        names=res.json()[&#39;result&#39;][&#39;tracks&#39;][i][&#39;name&#39;]<br>        ids=res.json()[&#39;result&#39;][&#39;tracks&#39;][i][&#39;id&#39;]<br>        song_names.append(names)<br>        song_ids.append(ids)<br>        print(names,&#39; &#39;,ids)<br>    return song_names,song_ids<br><br>#去掉停用词<br>def remove_stop_words(f):<br>    stop_words=[&#39;Demo&#39;,&#39;伴奏&#39;,&#39;版&#39;,&#39;必胜客&#39;,&#39;Bonus&#39;,&#39;Track&#39;]<br>    for stop_word in stop_words:<br>        f=f.replace(stop_word,&#39;&#39;)<br>    return f<br><br>#生成词云<br>def create_word_cloud(f):<br>    print(&#39;根据词频 生成词云&#39;)<br>    f=remove_stop_words(f)<br>    cut_text=&#39; &#39;.join(jieba.cut(f,cut_all=False,HMM=True))<br>    wc = WordCloud(<br>       font_path=&quot;.&#47;wc.ttf&quot;,<br>       max_words=100,<br>       width=2000,<br>       height=1200,<br>    )<br>    print(cut_text)<br>    wordcloud = wc.generate(cut_text)<br>    # 写词云图片<br>    wordcloud.to_file(&quot;wordcloud.jpg&quot;)<br>    # 显示词云文件<br>    plt.imshow(wordcloud)<br>    plt.axis(&quot;off&quot;)<br>    plt.show()<br>    <br><br># 设置歌单ID，【毛不易 | 不善言辞的深情】为753776811<br>playlist_id=&#39;753776811&#39;<br>[song_names,song_ids]=get_songs(playlist_id)<br><br># 将列表song_names生成字符串<br>song_names_text=&quot; &quot;.join(song_names)<br><br>#根据词频，生成词云<br>create_word_cloud(song_names_text)","like_count":0},{"had_liked":false,"id":74915,"user_name":"志","can_delete":false,"product_type":"c1","uid":1307922,"ip_address":"","ucode":"805696CC72A0E2","user_header":"https://static001.geekbang.org/account/avatar/00/13/f5/12/a5383fff.jpg","comment_is_top":false,"comment_ctime":1552312973,"is_pvip":false,"replies":[{"id":"64438","content":"Good Job","user_name":"作者回复","user_name_real":"cy","uid":"1306094","ctime":1577619290,"ip_address":"","comment_id":74915,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1552312973","product_id":100021701,"comment_content":"思考题关键代码部分：<br><br>import time<br>id_list = []<br>name_list = []<br># 得到某一歌单里的每一首歌ID和歌名<br>def get_song_list(headers,list_url):<br>    res = requests.request(&#39;GET&#39;, list_url, headers=headers)<br>    if &#39;result&#39; in res.json():<br>        for item in res.json()[&#39;result&#39;][&#39;tracks&#39;]:   # 读取json数据中的每一个ID和name<br>            id_list.append(item[&#39;id&#39;]) <br>            name_list.append(item[&#39;name&#39;])<br>            print(item[&#39;id&#39;],&quot; &quot;,item[&#39;name&#39;])<br>            time.sleep(1)      # 设置停留时间，防止“bad handshake”<br>        return id_list,name_list<br>    else:<br>        return &#39;&#39;<br>        print(res.json())<br>        <br># 设置歌单链接<br>list_url = &#39;https:&#47;&#47;music.163.com&#47;api&#47;playlist&#47;detail?id=753776811&#39;<br># 获得歌单每一首歌的ID和name<br>get_song_list(headers,list_url)   <br>     <br>all_word_list = &#39;&#39;<br># 获取每首歌歌词<br>for (song_id, song_name) in zip(id_list, name_list):<br>    # 歌词 API URL<br>    lyric_url = &#39;http:&#47;&#47;music.163.com&#47;api&#47;song&#47;lyric?os=pc&amp;id=&#39; + str(song_id) + &#39;&amp;lv=-1&amp;kv=-1&amp;tv=-1&#39;<br>    lyric = get_song_lyric(headers, lyric_url)<br>    all_word_list = all_word_list + &#39; &#39; + lyric<br>    print(song_name)<br>    <br># 去掉停用词<br>remove_stop_words(all_word_list)<br><br># 根据词频 生成词云<br>create_word_cloud(all_word_list)   ","like_count":0,"discussions":[{"author":{"id":1306094,"avatar":"https://static001.geekbang.org/account/avatar/00/13/ed/ee/c4779b67.jpg","nickname":"cy","note":"","ucode":"50D653399A31F6","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":442736,"discussion_content":"Good Job","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1577619290,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":74732,"user_name":"上善若水","can_delete":false,"product_type":"c1","uid":1432353,"ip_address":"","ucode":"FEECBBA65AC0CD","user_header":"https://static001.geekbang.org/account/avatar/00/15/db/21/26ff0240.jpg","comment_is_top":false,"comment_ctime":1552288349,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1552288349","product_id":100021701,"comment_content":"Traceback (most recent call last):<br>  File &quot;C:\\Program Files\\Python37\\lib\\site-packages\\IPython\\core\\interactiveshell.py&quot;, line 3267, in run_code<br>    exec(code_obj, self.user_global_ns, self.user_ns)<br>  File &quot;&lt;ipython-input-2-d883ef070907&gt;&quot;, line 1, in &lt;module&gt;<br>运行报错，请问是什么原因？","like_count":0}]}