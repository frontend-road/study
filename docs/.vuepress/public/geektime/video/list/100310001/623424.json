{"id":623424,"title":"91｜如何获取网页上的数据并存储到文件？","content":"<p><strong>课后习题</strong><br>\n请你编写程序，将课程演示的表结构（ID，城市，日期，温度）改为：ID, 城市，日期温度三个字段，并将原有表中的数据按照新的格式存放到新的表中。</p><p>原格式:<br>\n1，北京，20220620，30<br>\n2，北京，20220621，28<br>\n新格式：<br>\n1，北京，{“20220620”:30, “20220621”:28 }</p><p><strong>课程代码、课件及其他相关资料地址</strong><br>\n<a href=\"https://gitee.com/wilsonyin/zero-basics-python\">https://gitee.com/wilsonyin/zero-basics-python</a></p>","comments":[{"had_liked":false,"id":367003,"user_name":"Matthew","can_delete":false,"product_type":"c3","uid":2843865,"ip_address":"江苏","ucode":"96093089773740","user_header":"https://thirdwx.qlogo.cn/mmopen/vi_32/PiajxSqBRaEKSVuNarJuDhBSvHY0giaq6yriceEBKiaKuc04wCYWOuso50noqDexaPJJibJN7PHwvcQppnzsDia1icZkw/132","comment_is_top":false,"comment_ctime":1674793051,"is_pvip":false,"replies":[{"id":134110,"content":"我们先明确定义以下几个概念，再来回答你的问题：\n1 库、包、模块\n库： 泛指通过import 和 from import 方式导入的 包和模块，python自带的是标准库，不是python自带的是第三方库\n模块： .py  扩展名的文件，文件中的类、函数可以在当前文件调用\n包： 一个文件夹，早期python规范要求文件夹中必须包含__init__.py文件，文件中的 .py里面 的 类、函数 可以被当前文件调用\n\n2 回到问题\npymysql 是个文件夹， 所以它是包名， 包pymysql文件夹下有__init__.py文件，在导入包的时候，会自动加载.py 文件， 因此没有导入中间的模块名，直接就能使用里面的类和函数了\n\n更详细的信息你可以参考python文件夹下的 site-packages文件夹，如果是windows它的路径应该为C:\\Python文件夹\\Lib\\site-packages\\pymysql","user_name":"作者回复","user_name_real":"编辑","uid":1056235,"ctime":1676181788,"ip_address":"广东","comment_id":367003,"utype":1}],"discussion_count":1,"race_medal":0,"score":2,"product_id":100310001,"comment_content":"有个问题希望老师帮解答下：\npymysql 是一个包名，但是如下的这条语句调用 connect 函数时，使用的是 “包名.方法名”，中间没有模块名，这个怎么理解？\n# 连接数据库\nconnection = pymysql.connect(host=&#39;localhost&#39;,\n                             user=&#39;root&#39;,\n                             password=&#39;admin123&#39;,\n                             database=&#39;db&#39;,\n                             cursorclass=pymysql.cursors.DictCursor)","like_count":0,"discussions":[{"author":{"id":1056235,"avatar":"https://static001.geekbang.org/account/avatar/00/10/1d/eb/b2123759.jpg","nickname":"尹会生","note":"","ucode":"D1093DBD093617","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":603387,"discussion_content":"我们先明确定义以下几个概念，再来回答你的问题：\n1 库、包、模块\n库： 泛指通过import 和 from import 方式导入的 包和模块，python自带的是标准库，不是python自带的是第三方库\n模块： .py  扩展名的文件，文件中的类、函数可以在当前文件调用\n包： 一个文件夹，早期python规范要求文件夹中必须包含__init__.py文件，文件中的 .py里面 的 类、函数 可以被当前文件调用\n\n2 回到问题\npymysql 是个文件夹， 所以它是包名， 包pymysql文件夹下有__init__.py文件，在导入包的时候，会自动加载.py 文件， 因此没有导入中间的模块名，直接就能使用里面的类和函数了\n\n更详细的信息你可以参考python文件夹下的 site-packages文件夹，如果是windows它的路径应该为C:\\Python文件夹\\Lib\\site-packages\\pymysql","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1676181788,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"广东","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":385223,"user_name":"Geek_631607","can_delete":false,"product_type":"c3","uid":3789991,"ip_address":"广东","ucode":"EAF874838F0BE4","user_header":"","comment_is_top":false,"comment_ctime":1702290283,"is_pvip":false,"replies":null,"discussion_count":0,"race_medal":0,"score":2,"product_id":100310001,"comment_content":"你可以使用 Python 的字典来存储日期和温度的对应关系，然后将这个字典作为一个字段存储在新的表中。以下是一个示例代码：\n\n```python\n# 原始数据\ndata = [\n    (1, &#39;北京&#39;, &#39;20220620&#39;, 30),\n    (2, &#39;北京&#39;, &#39;20220621&#39;, 28),\n]\n\n# 创建一个空的字典来存储新的数据\nnew_data = {}\n\n# 遍历原始数据\nfor row in data:\n    id, city, date, temp = row\n\n    # 如果这个城市还没有在新的数据中，就添加一个新的条目\n    if city not in new_data:\n        new_data[city] = {}\n\n    # 将日期和温度添加到这个城市的字典中\n    new_data[city][date] = temp\n\n# 创建一个空的列表来存储新的表格数据\nnew_table = []\n\n# 遍历新的数据\nfor city, dates in new_data.items():\n    # 将 ID，城市，和日期温度字典添加到新的表格数据中\n    new_table.append((id, city, dates))\n\n# 打印新的表格数据\nfor row in new_table:\n    print(row)\n```\n\n这段代码会在终端输出 `[(1, &#39;北京&#39;, {&#39;20220620&#39;: 30, &#39;20220621&#39;: 28})]`。这就是你想要的结果。希望这个答案对你有所帮助！","like_count":0},{"had_liked":false,"id":382251,"user_name":"Geek_Mike","can_delete":false,"product_type":"c3","uid":3196376,"ip_address":"云南","ucode":"CFA942192C3B74","user_header":"https://static001.geekbang.org/account/avatar/00/30/c5/d8/c5509b9c.jpg","comment_is_top":false,"comment_ctime":1696935375,"is_pvip":false,"replies":null,"discussion_count":1,"race_medal":0,"score":2,"product_id":100310001,"comment_content":"import pymysql\nimport json\n\nconn = pymysql.connect(host=&#39;localhost&#39;, user=&#39;root&#39;, \n                       password=&#39;123123123&#39;, database=&#39;db&#39;,\n                       cursorclass=pymysql.cursors.DictCursor)\n# print(conn)\n\nwith conn:\n    with conn.cursor() as cursor:\n        sql = &#39;INSERT INTO weather (city, date, temp) VALUES (%s, %s, %s)&#39;\n        cursor.execute(sql, (&#39;北京&#39;, &#39;20220620&#39;, 302))\n        cursor.execute(sql, (&#39;北京&#39;, &#39;20220621&#39;, 28))\n    conn.commit()\n\n    with conn.cursor() as cursor:\n        sql = &#39;SELECT * FROM weather&#39;\n        cursor.execute(sql)\n        results = cursor.fetchall()\n\n        city_data = {}\n        date_temp = {}\n        for result in results:\n           date_temp[result[&#39;date&#39;]] = int(result[&#39;temp&#39;])\n           city_data[result[&#39;city&#39;]] = date_temp\n\n        # print(results)\n        # print(city_data)\n    conn.commit()\n\n    with conn.cursor() as cursor:\n        sql = &#39;INSERT INTO weather_new (city, date_temp) VALUES (%s, %s)&#39;\n        \n        for city, datetemp in city_data.items():\n            value = json.dumps(datetemp)\n            cursor.execute(sql, (city, value))\n    conn.commit()","like_count":0,"discussions":[{"author":{"id":3196376,"avatar":"https://static001.geekbang.org/account/avatar/00/30/c5/d8/c5509b9c.jpg","nickname":"Geek_Mike","note":"","ucode":"CFA942192C3B74","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":629374,"discussion_content":"# CREATE TABLE `weather_new` (\n#     `id` int(11) NOT NULL AUTO_INCREMENT,\n#     `city` varchar(255) COLLATE utf8_bin NOT NULL,\n#     `date_temp` varchar(255) COLLATE utf8_bin NOT NULL,\n#     PRIMARY KEY (`id`)\n# ) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_bin\n# AUTO_INCREMENT=1 ;\n\n\nimport pymysql\nimport json\n\nconn = pymysql.connect(host=&#39;localhost&#39;, user=&#39;root&#39;, \n                       password=&#39;123123123&#39;, database=&#39;db&#39;,\n                       cursorclass=pymysql.cursors.DictCursor)\n# print(conn)\n\nwith conn:\n    with conn.cursor() as cursor:\n        sql = &#39;INSERT INTO weather (city, date, temp) VALUES (%s, %s, %s)&#39;\n        cursor.execute(sql, (&#39;北京&#39;, &#39;20220620&#39;, 302))\n        cursor.execute(sql, (&#39;北京&#39;, &#39;20220621&#39;, 28))\n    conn.commit()\n\n    with conn.cursor() as cursor:\n        sql = &#39;SELECT * FROM weather&#39;\n        cursor.execute(sql)\n        results = cursor.fetchall()\n\n        city_data = {}\n        for result in results:\n            \n            if result[&#39;city&#39;] in city_data.keys():\n                city_data[result[&#39;city&#39;]][result[&#39;date&#39;]] = int(result[&#39;temp&#39;])\n            \n            else:\n                city_data[result[&#39;city&#39;]] = {result[&#39;date&#39;]:int(result[&#39;temp&#39;])}\n\n        # print(results)\n        # print(city_data)\n    conn.commit()\n\n    with conn.cursor() as cursor:\n        sql = &#39;INSERT INTO weather_new (city, date_temp) VALUES (%s, %s)&#39;\n        \n        for city, datetemp in city_data.items():\n            value = json.dumps(datetemp)\n            cursor.execute(sql, (city, value))\n    conn.commit()\n\n    with conn.cursor() as cursor:\n        sql = &#39;SELECT * FROM weather_new&#39;\n        cursor.execute(sql)\n        result = cursor.fetchall()\n        print(result)\n    conn.commit()","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1696994283,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":"云南","group_id":0},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":378508,"user_name":"Greenery","can_delete":false,"product_type":"c3","uid":3566765,"ip_address":"新加坡","ucode":"16111129C9EBA2","user_header":"https://static001.geekbang.org/account/avatar/00/36/6c/ad/0a694b50.jpg","comment_is_top":false,"comment_ctime":1690355269,"is_pvip":false,"replies":null,"discussion_count":0,"race_medal":0,"score":2,"product_id":100310001,"comment_content":"# %%\nimport json\nimport pymysql.cursors\n\nconnection = pymysql.connect(\n    host=&#39;localhost&#39;,\n    user=&#39;root&#39;,\n    password=&#39;root&#39;,\n    database=&#39;db&#39;,\n    cursorclass=pymysql.cursors.DictCursor\n)\n# %%\nwith connection:\n    with connection.cursor() as cursor:\n        sql = &quot;INSERT INTO `weather1` (`city`,`date`,`temp`) VALUES (%s,%s,%s)&quot;\n        cursor.execute(sql, (&#39;ningbo&#39;, &#39;20230709&#39;, &#39;29&#39;))\n        cursor.execute(sql, (&#39;ningbo&#39;, &#39;20230710&#39;, &#39;31&#39;))\n        cursor.execute(sql, (&#39;ningbo&#39;, &#39;20230711&#39;, &#39;32&#39;))\n        cursor.execute(sql, (&#39;ningbo&#39;, &#39;20230712&#39;, &#39;30&#39;))\n        cursor.execute(sql, (&#39;hangzhou&#39;, &#39;20230709&#39;, &#39;35&#39;))\n        cursor.execute(sql, (&#39;hangzhou&#39;, &#39;20230710&#39;, &#39;36&#39;))\n        cursor.execute(sql, (&#39;hangzhou&#39;, &#39;20230711&#39;, &#39;37&#39;))\n    connection.commit()\n\n    with connection.cursor() as cursor:\n        sql = &#39;SELECT `city`,`date`,`temp` FROM `weather1`&#39;\n        cursor.execute(sql)\n        result = cursor.fetchall()\n        city_to_date_temp = {}\n        for d in result:\n            if d[&#39;city&#39;] in city_to_date_temp:\n                city_to_date_temp[d[&#39;city&#39;]][d[&#39;date&#39;]] = d[&#39;temp&#39;]\n            else:\n                city_to_date_temp[d[&#39;city&#39;]] = {}\n                city_to_date_temp[d[&#39;city&#39;]][d[&#39;date&#39;]] = d[&#39;temp&#39;]\n    \n    with connection.cursor() as cursor:\n        sql = &#39;INSERT INTO `weather2` (`city`,`date_temp`) VALUES (%s,%s)&#39;\n        for city, date_temp in city_to_date_temp.items():\n            print(city, json.dumps(date_temp))\n            cursor.execute(sql, (city, json.dumps(date_temp)))\n    connection.commit()","like_count":0},{"had_liked":false,"id":367331,"user_name":"Cy23","can_delete":false,"product_type":"c3","uid":1591293,"ip_address":"辽宁","ucode":"8DC561C5151758","user_header":"https://static001.geekbang.org/account/avatar/00/18/47/fd/895f0c27.jpg","comment_is_top":false,"comment_ctime":1675146013,"is_pvip":false,"replies":null,"discussion_count":0,"race_medal":0,"score":2,"product_id":100310001,"comment_content":"import pymysql.cursors\nfrom collections import UserDict\nclass MyDict(UserDict):\n  def __setitem__(self, key, value) -&gt; None:\n    if key in self.data.keys():\n      self.data[key].update(value)\n    else:\n      self.data[key] = value\n\nmyDict = MyDict();\nconn = pymysql.connect(host=&#39;localhost&#39;,\n                      user=&#39;root&#39;,\n                      password=&#39;&#39;,\n                      database=&#39;pydb&#39;,\n                      cursorclass=pymysql.cursors.DictCursor)\nwith conn:\n  with conn.cursor() as cursor:\n    sql = &quot;SELECT * FROM `weather`&quot;\n    cursor.execute(sql)\n    result = cursor.fetchall()\n    for res in result:\n      myDict[res[&quot;city&quot;]] = {\n        res[&quot;date&quot;] : res[&quot;temp&quot;]\n      }\n    print(myDict)\n    for myCity,myDateTemp in myDict.items():\n      sql = &quot;INSERT INTO `weather_new` (`city`, `date_temp`) VALUES (%s, %s)&quot;\n      cursor.execute(sql, (myCity, str(myDateTemp)))\n\n    # conn 不能自动提交数据，必须手动提交\n    conn.commit()","like_count":0},{"had_liked":false,"id":367009,"user_name":"Matthew","can_delete":false,"product_type":"c3","uid":2843865,"ip_address":"江苏","ucode":"96093089773740","user_header":"https://thirdwx.qlogo.cn/mmopen/vi_32/PiajxSqBRaEKSVuNarJuDhBSvHY0giaq6yriceEBKiaKuc04wCYWOuso50noqDexaPJJibJN7PHwvcQppnzsDia1icZkw/132","comment_is_top":false,"comment_ctime":1674799922,"is_pvip":false,"replies":null,"discussion_count":0,"race_medal":0,"score":2,"product_id":100310001,"comment_content":"# 函数：将关于 date 和 temp 的【字典】结果，保存到数据库     \ndef save_to_newtb(city, result_dict):\n    conn = pymysql.connect(host=&#39;localhost&#39;,\n                             user=&#39;root&#39;,\n                             password=&#39;admin123&#39;,\n                             database=&#39;db&#39;,\n                             cursorclass=pymysql.cursors.DictCursor)\n    with conn:\n        with conn.cursor() as cursor:\n            sql = &quot;INSERT INTO `weather_clob` (`city`, `date_temp`) VALUES (%s, %s)&quot;\n            cursor.execute(sql, (city, str(result_dict)))\n\n        # conn 不能自动提交数据，必须手动提交\n        conn.commit()\n\n# 主函数：\ndef main():\n    city_list = city_list = find_all_cities()\n\n    for i in city_list:\n        city_temp = i[&quot;city&quot;]\n\n        result_list = find_clob_by_city(city_temp)\n\n        result_dict = transform_list_to_dict(result_list)\n\n        save_to_newtb(city_temp, result_dict)\n    \n# 测试\nif __name__ == &#39;__main__&#39;:\n    main()","like_count":0},{"had_liked":false,"id":367008,"user_name":"Matthew","can_delete":false,"product_type":"c3","uid":2843865,"ip_address":"江苏","ucode":"96093089773740","user_header":"https://thirdwx.qlogo.cn/mmopen/vi_32/PiajxSqBRaEKSVuNarJuDhBSvHY0giaq6yriceEBKiaKuc04wCYWOuso50noqDexaPJJibJN7PHwvcQppnzsDia1icZkw/132","comment_is_top":false,"comment_ctime":1674799902,"is_pvip":false,"replies":null,"discussion_count":0,"race_medal":0,"score":2,"product_id":100310001,"comment_content":"import pymysql.cursors\n\n# 函数：找到 weather 表中所有的 city\ndef find_all_cities():\n    conn = pymysql.connect(host=&#39;localhost&#39;,\n                             user=&#39;root&#39;,\n                             password=&#39;admin123&#39;,\n                             database=&#39;db&#39;,\n                             cursorclass=pymysql.cursors.DictCursor)\n    \n    with conn:\n        with conn.cursor() as cursor:\n            sql = &quot;SELECT distinct `city` FROM `weather`&quot;\n            cursor.execute(sql)\n            result = cursor.fetchall()\n            \n        return result\n\n# 函数：根据 city_name, 从 weather 表中找到对应的 date 和 temp，并返回结果列表\ndef find_clob_by_city(city_name):\n    conn = pymysql.connect(host=&#39;localhost&#39;,\n                             user=&#39;root&#39;,\n                             password=&#39;admin123&#39;,\n                             database=&#39;db&#39;,\n                             cursorclass=pymysql.cursors.DictCursor)\n\n    with conn:\n        with conn.cursor() as cursor:\n            sql = &quot;SELECT `date`, `temp`  FROM `weather` WHERE `city`=%s&quot;\n            cursor.execute(sql, (city_name))\n            result = cursor.fetchall()\n            \n        return result\n\n# 函数：将关于 date 和 temp 的【列表】结果，转化成【字典】结果\ndef transform_list_to_dict(result_list):\n    result_dict = {}\n    for i in result_list:\n        data_key = i[&quot;date&quot;]\n        data_value = int(i[&quot;temp&quot;])\n        result_dict[data_key] = data_value\n    return result_dict","like_count":0}]}