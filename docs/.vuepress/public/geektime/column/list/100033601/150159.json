{"id":150159,"title":"31｜HTTP/3：甩掉TCP、TLS 的包袱，构建高效网络","content":"<p>前面两篇文章我们分析了HTTP/1和HTTP/2，在HTTP/2出现之前，开发者需要采取很多变通的方式来解决HTTP/1所存在的问题，不过HTTP/2在2018年就开始得到了大规模的应用，HTTP/1中存在的一大堆缺陷都得到了解决。</p><p>HTTP/2的一个核心特性是使用了多路复用技术，因此它可以通过一个TCP连接来发送多个URL请求。多路复用技术能充分利用带宽，最大限度规避了TCP的慢启动所带来的问题，同时还实现了头部压缩、服务器推送等功能，使得页面资源的传输速度得到了大幅提升。在HTTP/1.1时代，为了提升并行下载效率，浏览器为每个域名维护了6个TCP连接；而采用HTTP/2之后，浏览器只需要为每个域名维护1个TCP持久连接，同时还解决了HTTP/1.1队头阻塞的问题。</p><p>从目前的情况来看，HTTP/2似乎可以完美取代HTTP/1了，不过HTTP/2依然存在一些缺陷，于是就有了HTTP/3。和通常一样，介绍HTTP/3之前，我们先来看看HTTP/2到底有什么缺陷。</p><h2>TCP的队头阻塞</h2><p>虽然HTTP/2解决了应用层面的队头阻塞问题，不过和HTTP/1.1一样，HTTP/2依然是基于TCP协议的，而TCP最初就是为了单连接而设计的。你可以把TCP连接看成是两台计算机之前的一个虚拟管道，计算机的一端将要传输的数据按照顺序放入管道，最终数据会以相同的顺序出现在管道的另外一头。</p><!-- [[[read_end]]] --><p>接下来我们就来分析下HTTP/1.1协议栈中TCP是如何传输数据的。为直观理解，你可以参考下图：</p><p><img src=\"https://static001.geekbang.org/resource/image/c2/f0/c231ab4b825df8b6f730f484fce596f0.png?wh=1142*232\" alt=\"\"></p><center><span class=\"reference\">正常情况下的TCP传输数据过程</span></center><p>通过上图你会发现，从一端发送给另外一端的数据会被拆分为一个个按照顺序排列的数据包，这些数据包通过网络传输到了接收端，接收端再按照顺序将这些数据包组合成原始数据，这样就完成了数据传输。</p><p>不过，如果在数据传输的过程中，有一个数据因为网络故障或者其他原因而丢包了，那么整个TCP的连接就会处于暂停状态，需要等待丢失的数据包被重新传输过来。你可以把TCP连接看成是一个按照顺序传输数据的管道，管道中的任意一个数据丢失了，那之后的数据都需要等待该数据的重新传输。为了直观理解，你可以参考下图：</p><p><img src=\"https://static001.geekbang.org/resource/image/33/96/33d2b4c14a7a2f19ef6677696b67de96.png?wh=1142*288\" alt=\"\"></p><center><span class=\"reference\">TCP丢包状态</span></center><p>我们就把<strong>在TCP传输过程中，由于单个数据包的丢失而造成的阻塞称为TCP上的队头阻塞</strong>。</p><p>那队头阻塞是怎么影响HTTP/2传输的呢？首先我们来看正常情况下HTTP/2是怎么传输多路请求的，为了直观理解，你可以参考下图：</p><p><img src=\"https://static001.geekbang.org/resource/image/48/d1/4837434655a6d87f1bf5e3d899a698d1.png?wh=1142*231\" alt=\"\"></p><center><span class=\"reference\">HTTP/2 多路复用</span></center><p>通过该图，我们知道在HTTP/2中，多个请求是跑在一个TCP管道中的，如果其中任意一路数据流中出现了丢包的情况，那么就会阻塞该TCP连接中的所有请求。这不同于HTTP/1.1，使用HTTP/1.1时，浏览器为每个域名开启了6个TCP连接，如果其中的1个TCP连接发生了队头阻塞，那么其他的5个连接依然可以继续传输数据。</p><p>所以随着丢包率的增加，HTTP/2的传输效率也会越来越差。有测试数据表明，当系统达到了2%的丢包率时，HTTP/1.1的传输效率反而比HTTP/2表现得更好。</p><h2>TCP建立连接的延时</h2><p>除了TCP队头阻塞之外，TCP的握手过程也是影响传输效率的一个重要因素。</p><p>为了搞清楚TCP协议建立连接的延迟问题，我们还是先来回顾下网络延迟的概念，这会有助于你对后面内容的理解。网络延迟又称为RTT（Round Trip Time）。我们把从浏览器发送一个数据包到服务器，再从服务器返回数据包到浏览器的整个往返时间称为RTT（如下图）。RTT是反映网络性能的一个重要指标。</p><p><img src=\"https://static001.geekbang.org/resource/image/e9/4f/e98927e19b20349815fb8f499067cb4f.png?wh=1142*615\" alt=\"\"></p><center><span class=\"reference\">网络延时</span></center><p>那建立TCP连接时，需要花费多少个RTT呢？下面我们来计算下。</p><p>我们知道HTTP/1和HTTP/2都是使用TCP协议来传输的，而如果使用HTTPS的话，还需要使用TLS协议进行安全传输，而使用TLS也需要一个握手过程，这样就需要有两个握手延迟过程。</p><ol>\n<li>在建立TCP连接的时候，需要和服务器进行三次握手来确认连接成功，也就是说需要在消耗完1.5个RTT之后才能进行数据传输。</li>\n<li>进行TLS连接，TLS有两个版本——TLS1.2和TLS1.3，每个版本建立连接所花的时间不同，大致是需要1～2个RTT，关于HTTPS我们到后面到安全模块再做详细介绍。</li>\n</ol><p>总之，在传输数据之前，我们需要花掉3～4个RTT。如果浏览器和服务器的物理距离较近，那么1个RTT的时间可能在10毫秒以内，也就是说总共要消耗掉30～40毫秒。这个时间也许用户还可以接受，但如果服务器相隔较远，那么1个RTT就可能需要100毫秒以上了，这种情况下整个握手过程需要300～400毫秒，这时用户就能明显地感受到“慢”了。</p><h2>TCP协议僵化</h2><p>现在我们知道了TCP协议存在队头阻塞和建立连接延迟等缺点，那我们是不是可以通过改进TCP协议来解决这些问题呢？</p><p>答案是：<strong>非常困难</strong>。之所以这样，主要有两个原因。</p><p>第一个是<strong>中间设备的僵化</strong>。要搞清楚什么是中间设备僵化，我们先要弄明白什么是中间设备。我们知道互联网是由多个网络互联的网状结构，为了能够保障互联网的正常工作，我们需要在互联网的各处搭建各种设备，这些设备就被称为中间设备。</p><p>这些中间设备有很多种类型，并且每种设备都有自己的目的，这些设备包括了路由器、防火墙、NAT、交换机等。它们通常依赖一些很少升级的软件，这些软件使用了大量的TCP特性，这些功能被设置之后就很少更新了。</p><p>所以，如果我们在客户端升级了TCP协议，但是当新协议的数据包经过这些中间设备时，它们可能不理解包的内容，于是这些数据就会被丢弃掉。这就是中间设备僵化，它是阻碍TCP更新的一大障碍。</p><p>除了中间设备僵化外，<strong>操作系统也是导致TCP协议僵化的另外一个原因</strong>。因为TCP协议都是通过操作系统内核来实现的，应用程序只能使用不能修改。通常操作系统的更新都滞后于软件的更新，因此要想自由地更新内核中的TCP协议也是非常困难的。</p><h2>QUIC协议</h2><p>HTTP/2存在一些比较严重的与TCP协议相关的缺陷，但由于TCP协议僵化，我们几乎不可能通过修改TCP协议自身来解决这些问题，那么解决问题的思路是绕过TCP协议，发明一个TCP和UDP之外的新的传输协议。但是这也面临着和修改TCP一样的挑战，因为中间设备的僵化，这些设备只认TCP和UDP，如果采用了新的协议，新协议在这些设备同样不被很好地支持。</p><p>因此，HTTP/3选择了一个折衷的方法——UDP协议，基于UDP实现了类似于 TCP的多路数据流、传输可靠性等功能，我们把这套功能称为<strong>QUIC协议</strong>。关于HTTP/2和HTTP/3协议栈的比较，你可以参考下图：</p><p><img src=\"https://static001.geekbang.org/resource/image/0b/c6/0bae470bb49747b9a59f9f4bb496a9c6.png?wh=1142*729\" alt=\"\"></p><center><span class=\"reference\">HTTP/2和HTTP/3协议栈</span></center><p>通过上图我们可以看出，HTTP/3中的QUIC协议集合了以下几点功能。</p><ul>\n<li><strong>实现了类似TCP的流量控制、传输可靠性的功能</strong>。虽然UDP不提供可靠性的传输，但QUIC在UDP的基础之上增加了一层来保证数据可靠性传输。它提供了数据包重传、拥塞控制以及其他一些TCP中存在的特性。</li>\n<li><strong>集成了TLS加密功能</strong>。目前QUIC使用的是TLS1.3，相较于早期版本TLS1.3有更多的优点，其中最重要的一点是减少了握手所花费的RTT个数。</li>\n<li><strong>实现了HTTP/2中的多路复用功能</strong>。和TCP不同，QUIC实现了在同一物理连接上可以有多个独立的逻辑数据流（如下图）。实现了数据流的单独传输，就解决了TCP中队头阻塞的问题。</li>\n</ul><p><img src=\"https://static001.geekbang.org/resource/image/05/9a/05cc5720989aec75730ee4cb7e7c149a.png?wh=1142*266\" alt=\"\"></p><center><span class=\"reference\">QUIC协议的多路复用</span></center><ul>\n<li><strong>实现了快速握手功能</strong>。由于QUIC是基于UDP的，所以QUIC可以实现使用0-RTT或者1-RTT来建立连接，这意味着QUIC可以用最快的速度来发送和接收数据，这样可以大大提升首次打开页面的速度。</li>\n</ul><h2>HTTP/3的挑战</h2><p>通过上面的分析，我们相信在技术层面，HTTP/3是个完美的协议。不过要将HTTP/3应用到实际环境中依然面临着诸多严峻的挑战，这些挑战主要来自于以下三个方面。</p><p>第一，从目前的情况来看，服务器和浏览器端都没有对HTTP/3提供比较完整的支持。Chrome虽然在数年前就开始支持Google版本的QUIC，但是这个版本的QUIC和官方的QUIC存在着非常大的差异。</p><p>第二，部署HTTP/3也存在着非常大的问题。因为系统内核对UDP的优化远远没有达到TCP的优化程度，这也是阻碍QUIC的一个重要原因。</p><p>第三，中间设备僵化的问题。这些设备对UDP的优化程度远远低于TCP，据统计使用QUIC协议时，大约有3%～7%的丢包率。</p><h2>总结</h2><p>好了，今天就介绍到这里，下面我来总结下本文的主要内容。</p><p>我们首先分析了HTTP/2中所存在的一些问题，主要包括了TCP的队头阻塞、建立TCP连接的延时、TCP协议僵化等问题。</p><p>这些问题都是TCP的内部问题，因此要解决这些问题就要优化TCP或者“另起炉灶”创造新的协议。由于优化TCP协议存在着诸多挑战，所以官方选择了创建新的QUIC协议。</p><p>HTTP/3正是基于QUIC协议的，你可以把QUIC看成是集成了“TCP+HTTP/2的多路复用+TLS等功能”的一套协议。这是集众家所长的一个协议，从协议最底层对Web的文件传输做了比较彻底的优化，所以等生态相对成熟时，可以用来打造比现在的HTTP/2还更加高效的网络。</p><p>虽说这套协议解决了HTTP/2中因TCP而带来的问题，不过由于是改动了底层协议，所以推广起来还会面临着巨大的挑战。</p><p>关于HTTP/3的未来，我有下面两点判断：</p><ol>\n<li>从标准制定到实践再到协议优化还需要走很长一段路；</li>\n<li>因为动了底层协议，所以HTTP/3的增长会比较缓慢，这和HTTP/2有着本质的区别。</li>\n</ol><h2>思考时间</h2><p>那你来总结一下，HTTP/3都做了哪些性能上的改进？它所面临的挑战又是什么？</p><p>欢迎在留言区与我分享你的想法，也欢迎你在留言区记录你的思考过程。感谢阅读，如果你觉得这篇文章对你有帮助的话，也欢迎把它分享给更多的朋友。</p><p></p>","comments":[{"had_liked":false,"id":142143,"user_name":"有铭","can_delete":false,"product_type":"c1","uid":1046302,"ip_address":"","ucode":"2C7CB36CA5C04C","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/3XbCueYYVWTiclv8T5tFpwiblOxLphvSZxL4ujMdqVMibZnOiaFK2C5nKRGv407iaAsrI0CDICYVQJtiaITzkjfjbvrQ/132","comment_is_top":false,"comment_ctime":1571299888,"is_pvip":false,"discussion_count":3,"race_medal":0,"score":"65995809328","product_id":100033601,"comment_content":"我的看法：这些年但凡觉得TCP不满足自己需求的人，基本都是在UDP上重新“发明”一套自己的流控和包顺序控制算法。说白了吧，就是重新造轮子再做一个（自己认为）更好的TCP。只是这类型的协议，目前没有一个能真的威胁到TCP的，固然有老师说的TCP协议僵化存在的原因，但是我也在想：TCP就真的这么不堪吗","like_count":16,"discussions":[{"author":{"id":1620143,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/ExHHyMiauDKhjmy4n8rgA1e3IVRd8vegMAnOFC7u6p9aiaefEJEZKa2Pu5rARLbeNicuz9NFicpF5YXEFf35gNn2vQ/132","nickname":"阿段","note":"","ucode":"D9EA14A0BE1B69","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":260735,"discussion_content":"首先我认可TCP是很牛的发明。但是我理解为时代在进步，技术在革新。很多年前定的规则已经渐渐不在适用于现在。市场上还是有很多人觉得优化也就能提高那么几秒？有意义吗？但是我觉得技术就是一点点的触顶，再一点点的突破。进步先要质疑…","likes_number":32,"is_delete":false,"is_hidden":false,"ctime":1588898543,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1441876,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTI2vn8hyjICTCletGs0omz28lhriaZKX2XX9icYzAEon2IEoRnlXqyOia2bEPP0j7T6xexTnr77JJic8w/132","nickname":"Geek_c22199","note":"","ucode":"1CE5B65513E360","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":283244,"discussion_content":"物理条件不一样了，以前带宽、芯片跟现在没发比，设计的背景就不一样了","likes_number":6,"is_delete":false,"is_hidden":false,"ctime":1592221580,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1487584,"avatar":"https://static001.geekbang.org/account/avatar/00/16/b2/e0/d856f5a4.jpg","nickname":"鱼","note":"","ucode":"89EC9CE3AD0281","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":341981,"discussion_content":"你说得对，UDP很轻基本直接继承IP层的特点，TCP很重对连接各种治理（顺序、ACK、流控、拥控）。很多时候我们不需要TCP那么多的功能就在UDP上自己开发实现一少部分TCP连接治理，以提升性能；或者觉得自己特牛逼TCP的实现不如自己重新实现好也在UDP上开发了。","likes_number":5,"is_delete":false,"is_hidden":false,"ctime":1610552815,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":144333,"user_name":"splm","can_delete":false,"product_type":"c1","uid":1338601,"ip_address":"","ucode":"2216332252CEA7","user_header":"https://static001.geekbang.org/account/avatar/00/14/6c/e9/072b33b9.jpg","comment_is_top":false,"comment_ctime":1571899770,"is_pvip":false,"discussion_count":2,"race_medal":0,"score":"44521572730","product_id":100033601,"comment_content":"意思是H1.1到H2解决的队头阻塞，只是形式上的。因为这个问题本质上依旧没有解决，因为TCP特性就是这样的，是不是只要不摆脱TCP就意味着一直会有阻塞的问题？这个版本升级感觉更多的应该是减少长连接的个数，减少了带宽抢占，增加了资源优先级。而从H2到H3，骨子里就不想依赖TCP，使用UDP，并附上了TCP一些优秀特性，减少握手和增加可靠性。这是我对这几个版本迭代过程的理解。","like_count":11,"discussions":[{"author":{"id":1272789,"avatar":"https://static001.geekbang.org/account/avatar/00/13/6b/d5/0e4b70a2.jpg","nickname":"Sean","note":"","ucode":"BC0715BF423613","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":54526,"discussion_content":"H1.1到H2解决的是Http层面上的队首阻塞，是同一个长链接上的多个http请求之间的队首阻塞，只有前面的请求完事儿才轮到后面的请求；并不等同于TCP层面的队首阻塞， tcp的队首阻塞是数据包层面的，一个请求被分成有序的多个小的数据包，只有序号靠前的包确认完整接收，后续的包才能被处理；否则就不处理一直等这个包重传。这个机制导致的TCP层面 的队首阻塞。 ","likes_number":16,"is_delete":false,"is_hidden":false,"ctime":1574301814,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1406834,"avatar":"https://static001.geekbang.org/account/avatar/00/15/77/72/ad7056f9.jpg","nickname":"hb","note":"","ucode":"DCFA6CECF64E37","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":378123,"discussion_content":"应该是说解决了应用层的对头阻塞，传输层由于使用的还是tcp，tcp本身有队头阻塞","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1623060201,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":141040,"user_name":"Geek_f74777","can_delete":false,"product_type":"c1","uid":1626734,"ip_address":"","ucode":"8B512972A145A7","user_header":"","comment_is_top":false,"comment_ctime":1571105073,"is_pvip":false,"discussion_count":1,"race_medal":0,"score":"40225810737","product_id":100033601,"comment_content":"能翻墙的同学推荐可以看看Revisiting HTTP2 https:&#47;&#47;youtu.be&#47;wR1gF5Lhcq0","like_count":10,"discussions":[{"author":{"id":1374715,"avatar":"https://static001.geekbang.org/account/avatar/00/14/f9/fb/04faa152.jpg","nickname":"上海彭鱼晏","note":"","ucode":"F21C391263DA23","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":321949,"discussion_content":"听不懂英语。嘤嘤嘤","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1604652493,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":229774,"user_name":"Jack.Huang","can_delete":false,"product_type":"c1","uid":1959211,"ip_address":"","ucode":"FD089E25D93A26","user_header":"https://static001.geekbang.org/account/avatar/00/1d/e5/2b/59bde898.jpg","comment_is_top":false,"comment_ctime":1593142116,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"35952880484","product_id":100033601,"comment_content":"腾讯这篇文章讲http3，也讲的不错。https:&#47;&#47;mp.weixin.qq.com&#47;s&#47;iF0wbV5o7HVjGG_Cb-RcOg","like_count":9},{"had_liked":false,"id":227426,"user_name":"HucerF","can_delete":false,"product_type":"c1","uid":1991463,"ip_address":"","ucode":"68F847741F8D8D","user_header":"https://static001.geekbang.org/account/avatar/00/1e/63/27/deefd03f.jpg","comment_is_top":false,"comment_ctime":1592378129,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"31657149201","product_id":100033601,"comment_content":"非科班的看起来都比较舒服，讲解的不错","like_count":8},{"had_liked":false,"id":223166,"user_name":"刹那","can_delete":false,"product_type":"c1","uid":1620237,"ip_address":"","ucode":"E0B1C29EB07754","user_header":"https://static001.geekbang.org/account/avatar/00/18/b9/0d/ae745ec0.jpg","comment_is_top":false,"comment_ctime":1591014473,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"14475916361","product_id":100033601,"comment_content":"之前看的一知半解，现在把tcp协议学习了之后发现看起来轻轻好多，果然基础很重要啊","like_count":3},{"had_liked":false,"id":216488,"user_name":"LearnAndTry","can_delete":false,"product_type":"c1","uid":1512860,"ip_address":"","ucode":"0ECF4398C870DC","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/Rr8ABLicfgJHZ3xs3bXNjHdicwVN0zBiaFtIEXw4D1licedSuia3zicxJC4lqtrNwPmCeAW5UR2Ugia0dNfcvtXYnpOwQ/132","comment_is_top":false,"comment_ctime":1589270585,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"14474172473","product_id":100033601,"comment_content":"从http发展历程中也看到我们项目迭代的影子。 有好的优化方案往往因为历史包袱久久不能落地。改动越接近底层推动难度越大。  渐进式改动比较容易推行。<br>","like_count":3},{"had_liked":false,"id":215090,"user_name":"Geek_28d96d","can_delete":false,"product_type":"c1","uid":1449848,"ip_address":"","ucode":"D12D80B55DD534","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/noTIfbBmzicH6oZaBqycVzKTLN5ibWWrDleVgnaQYCHJAAhUhNmgSCdFzrr1VRABwUQ7hROU7BgGVwHiaaHeHAiaVQ/132","comment_is_top":false,"comment_ctime":1588902664,"is_pvip":false,"discussion_count":2,"race_medal":0,"score":"5883869960","product_id":100033601,"comment_content":"在建立 TCP 连接的时候，需要和服务器进行三次握手来确认连接成功，也就是说需要在消耗完 1.5 个 RTT 之后才能进行数据传输。这里为什么是1.5个RTT，而不是三个RTT ","like_count":1,"discussions":[{"author":{"id":1610967,"avatar":"https://static001.geekbang.org/account/avatar/00/18/94/d7/b522f36e.jpg","nickname":"庭阶","note":"","ucode":"30E59DBCC7F99A","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":262379,"discussion_content":"我的理解是：因为从浏览器到服务器+服务器到浏览器这种一来一回才是一个RTT,建立TCP连接是3次，所以是1.5RTT","likes_number":6,"is_delete":false,"is_hidden":false,"ctime":1589083824,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1445936,"avatar":"https://static001.geekbang.org/account/avatar/00/16/10/30/c07d419c.jpg","nickname":"卡尔","note":"","ucode":"BD6F76BC18FF8F","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":279497,"discussion_content":"单边发送一个包所用时间为半个RTT。一来一回才是一个RTT","likes_number":3,"is_delete":false,"is_hidden":false,"ctime":1591357119,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":167414,"user_name":"关山楂","can_delete":false,"product_type":"c1","uid":1499244,"ip_address":"","ucode":"C32E201FA33045","user_header":"https://static001.geekbang.org/account/avatar/00/16/e0/6c/ef405cc1.jpg","comment_is_top":false,"comment_ctime":1577787360,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"5872754656","product_id":100033601,"comment_content":"有个问题，UDP本身是不保证可靠传输，因此有时候丢包率很高，您说HTTP&#47;3在此基础上封装了一层QUIC保证了数据的可靠性，那这个也需要类似于TCP的可靠性校验吧，那这个数据包丢失，就不需要等待校验吗？这不阻塞吗？如果说是多链路，那这个是多少条链路呢？是有多少请求就有多少吗？","like_count":1},{"had_liked":false,"id":331607,"user_name":"xh","can_delete":false,"product_type":"c1","uid":1475912,"ip_address":"","ucode":"D5FF709B93CEDF","user_header":"https://static001.geekbang.org/account/avatar/00/16/85/48/efbffe7e.jpg","comment_is_top":false,"comment_ctime":1642669430,"is_pvip":true,"discussion_count":0,"race_medal":0,"score":"1642669430","product_id":100033601,"comment_content":"tcp2会使用二进制分针层将请求分成一个一个帧，它和tcp将请求分成一个一个包有什么区别？帧还会分成多个包吗","like_count":1},{"had_liked":false,"id":321594,"user_name":"撒哈拉","can_delete":false,"product_type":"c1","uid":1608406,"ip_address":"","ucode":"2F64B26543D772","user_header":"https://static001.geekbang.org/account/avatar/00/18/8a/d6/00cf9218.jpg","comment_is_top":false,"comment_ctime":1636960924,"is_pvip":false,"discussion_count":1,"race_medal":0,"score":"1636960924","product_id":100033601,"comment_content":"http3 核心是要解决 TCP 数据包丢包严重时带来的性能问题。<br><br>基于 UDP，添加一个 QUICK 层，实现 TCP 所拥有的优点，流量控制，拥塞控制，数据包重传等特性；集成TLS加密，能更快的握手，支持多路复用，一个连接传送多路数据，缩短握手时间<br>","like_count":1,"discussions":[{"author":{"id":1288733,"avatar":"https://static001.geekbang.org/account/avatar/00/13/aa/1d/b8fdd622.jpg","nickname":"laoergege","note":"","ucode":"559CCF36805A04","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":560465,"discussion_content":"丢包问题是网络问题，这不是 quic 也能彻底解决的，他主要是解决了 tcp 阻塞问题，握手消耗","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1649338962,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":309564,"user_name":"曼珠沙华","can_delete":false,"product_type":"c1","uid":1702806,"ip_address":"","ucode":"3C7C3318625BD4","user_header":"https://static001.geekbang.org/account/avatar/00/19/fb/96/72c9c095.jpg","comment_is_top":false,"comment_ctime":1630233641,"is_pvip":false,"discussion_count":1,"race_medal":0,"score":"1630233641","product_id":100033601,"comment_content":"TLS1.3已经花了一个RTT,QUIC包含了TLS1.3,为何说它建立连接只花了0-1个RTT呢","like_count":0,"discussions":[{"author":{"id":1273044,"avatar":"https://static001.geekbang.org/account/avatar/00/13/6c/d4/85ef1463.jpg","nickname":"路漫漫","note":"","ucode":"F70F1DC612DE9D","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":534289,"discussion_content":"udp不需要连接，另外TLS1.3最快可以达到0RTT","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1638156328,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":302836,"user_name":"李响","can_delete":false,"product_type":"c1","uid":2662721,"ip_address":"","ucode":"A73F0DAE12F617","user_header":"https://static001.geekbang.org/account/avatar/00/28/a1/41/ed8f8c37.jpg","comment_is_top":false,"comment_ctime":1626403309,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1626403309","product_id":100033601,"comment_content":"tcp这样的设计也是为了数据的准确性。想问下什么情况使用http2优于http1.1呢","like_count":0},{"had_liked":false,"id":289851,"user_name":"闷倒驴","can_delete":false,"product_type":"c1","uid":1622753,"ip_address":"","ucode":"3DFE7B03D1DA46","user_header":"https://static001.geekbang.org/account/avatar/00/18/c2/e1/db127301.jpg","comment_is_top":false,"comment_ctime":1619231115,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1619231115","product_id":100033601,"comment_content":"http协议的版本使用1.1还是2.0是谁控制的，通过什么方式控制的","like_count":0},{"had_liked":false,"id":262595,"user_name":"wu","can_delete":false,"product_type":"c1","uid":2204529,"ip_address":"","ucode":"CED13C06FC54F6","user_header":"https://static001.geekbang.org/account/avatar/00/21/a3/71/649104fe.jpg","comment_is_top":false,"comment_ctime":1605775624,"is_pvip":false,"discussion_count":1,"race_medal":0,"score":"1605775624","product_id":100033601,"comment_content":"可以介绍下TLS协议吗。我看图中有出现","like_count":0,"discussions":[{"author":{"id":2042503,"avatar":"","nickname":"Geek_ef2827","note":"","ucode":"F8A1A02A1E0D33","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":361213,"discussion_content":"一个套接层，做认证和加密用的，可以看下 https","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1616604442,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":255860,"user_name":"小炭","can_delete":false,"product_type":"c1","uid":1109544,"ip_address":"","ucode":"E20E3958CAF06C","user_header":"https://static001.geekbang.org/account/avatar/00/10/ee/28/c04a0c83.jpg","comment_is_top":false,"comment_ctime":1603445066,"is_pvip":true,"discussion_count":0,"race_medal":0,"score":"1603445066","product_id":100033601,"comment_content":"TCP的设计很好，只是网络层面拖后腿了。现在似乎更多是在网络层面的突破，比如5G。","like_count":0},{"had_liked":false,"id":235080,"user_name":"neohope","can_delete":false,"product_type":"c1","uid":1043475,"ip_address":"","ucode":"C0268F6E7E2B6E","user_header":"https://static001.geekbang.org/account/avatar/00/0f/ec/13/49e98289.jpg","comment_is_top":false,"comment_ctime":1594886364,"is_pvip":true,"discussion_count":0,"race_medal":0,"score":"1594886364","product_id":100033601,"comment_content":"很多时候，重新设计，比在现有设计上做优化，更容易，也会更优雅。<br>但现实中经常遇到的是，推到重来的代价付不起，只能不断优化。<br>希望最终可以推动TCP-IP整个协议族的进步，逐步从根源上解决问题。","like_count":0},{"had_liked":false,"id":184395,"user_name":"七月有风","can_delete":false,"product_type":"c1","uid":1439990,"ip_address":"","ucode":"B3F82397347C5B","user_header":"https://static001.geekbang.org/account/avatar/00/15/f8/f6/3e2db176.jpg","comment_is_top":false,"comment_ctime":1583307097,"is_pvip":false,"discussion_count":2,"race_medal":0,"score":"1583307097","product_id":100033601,"comment_content":"UDP有慢启动的问题吗？","like_count":0,"discussions":[{"author":{"id":1196864,"avatar":"https://static001.geekbang.org/account/avatar/00/12/43/40/e7ef18de.jpg","nickname":"嘉一","note":"","ucode":"8D16BD0B75B019","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":270769,"discussion_content":"慢启动主要是由于TCP的拥塞控制机制导致的，因为UDP没有拥塞控制机制，所以自然就没有慢启动这个问题","likes_number":2,"is_delete":false,"is_hidden":false,"ctime":1590051441,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1162123,"avatar":"https://static001.geekbang.org/account/avatar/00/11/bb/8b/028bbe52.jpg","nickname":"戡玉","note":"","ucode":"398F0C0367E795","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":207776,"discussion_content":"应该没有啦，它不用校对数据完整性，不用对序号","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1584513602,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":175770,"user_name":"雯欣","can_delete":false,"product_type":"c1","uid":1624533,"ip_address":"","ucode":"7789B6222D7BD4","user_header":"https://static001.geekbang.org/account/avatar/00/18/c9/d5/08139264.jpg","comment_is_top":false,"comment_ctime":1580825619,"is_pvip":false,"discussion_count":2,"race_medal":0,"score":"1580825619","product_id":100033601,"comment_content":"老师你好 ，你在上一节说http2通过多路复用解决队头阻塞，我不是很明白，既然http2还是基tcp协议，并且只有一条tcp链接，那么一旦出现丢包的情况，不是效果比http1.1还差吗（至少http1.1支持六条tcp链接），如果http2只是为了解决慢启动的问题而将http1.1的六条链接合成一条，会不会有种丢西瓜捡芝麻的感觉","like_count":0,"discussions":[{"author":{"id":1910075,"avatar":"https://static001.geekbang.org/account/avatar/00/1d/25/3b/a971fc8e.jpg","nickname":"阿感","note":"","ucode":"7BCB7E44A832D1","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":280601,"discussion_content":"弱网时较差","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1591576931,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1391354,"avatar":"https://static001.geekbang.org/account/avatar/00/15/3a/fa/21f64eaa.jpg","nickname":"mimof9","note":"","ucode":"C83B3E2CD62BBD","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":230514,"discussion_content":"你的观点是HTTP2一个域名只使用一个TCP连接的做法是捡了芝麻丢了西瓜。但实际上升级到HTTP2在性能表现上比HTTP1.1要高出20%到60%，只有当丢包率达到2%以上时，才会出现弱于HTTP1.1的情况，而不是一旦丢包就会表现的非常差。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1586749860,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":167559,"user_name":"Geek_185c7d","can_delete":false,"product_type":"c1","uid":1698771,"ip_address":"","ucode":"CDA0FCBF99D54B","user_header":"https://static001.geekbang.org/account/avatar/00/19/eb/d3/92573feb.jpg","comment_is_top":false,"comment_ctime":1577859483,"is_pvip":false,"discussion_count":4,"race_medal":0,"score":"1577859483","product_id":100033601,"comment_content":"Network面板看到的请求条数是tcp连接个数吗","like_count":0,"discussions":[{"author":{"id":2033513,"avatar":"https://static001.geekbang.org/account/avatar/00/1f/07/69/43cf2251.jpg","nickname":"Alan He","note":"","ucode":"A0780F4619D388","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":351587,"discussion_content":"Connection ID的个数，我理解就是TCP连接的个数","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1614336919,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1201350,"avatar":"https://static001.geekbang.org/account/avatar/00/12/54/c6/c2481790.jpg","nickname":"lisiur","note":"","ucode":"CEB2DBCE29CAA7","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":245837,"discussion_content":"不是的，你可以打开Network下的Connection ID，那个代表不同的TCP","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1587703801,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":2,"child_discussions":[{"author":{"id":1296602,"avatar":"https://static001.geekbang.org/account/avatar/00/13/c8/da/f4704fb9.jpg","nickname":"甜甜","note":"","ucode":"D6E8B7D9E35C55","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1201350,"avatar":"https://static001.geekbang.org/account/avatar/00/12/54/c6/c2481790.jpg","nickname":"lisiur","note":"","ucode":"CEB2DBCE29CAA7","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":289658,"discussion_content":"没有找到 Network下的Connection ID，具体是怎么查看的？","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1594173324,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":245837,"ip_address":""},"score":289658,"extra":""},{"author":{"id":1201350,"avatar":"https://static001.geekbang.org/account/avatar/00/12/54/c6/c2481790.jpg","nickname":"lisiur","note":"","ucode":"CEB2DBCE29CAA7","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1296602,"avatar":"https://static001.geekbang.org/account/avatar/00/13/c8/da/f4704fb9.jpg","nickname":"甜甜","note":"","ucode":"D6E8B7D9E35C55","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":291495,"discussion_content":"你在network面板下的name/status那一栏上右键可以启用显示connection id","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1594856761,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":289658,"ip_address":""},"score":291495,"extra":""}]}]},{"had_liked":false,"id":162543,"user_name":"-_-|||","can_delete":false,"product_type":"c1","uid":1328142,"ip_address":"","ucode":"94B21594658BF9","user_header":"https://static001.geekbang.org/account/avatar/00/14/44/0e/ce14b7d3.jpg","comment_is_top":false,"comment_ctime":1576551939,"is_pvip":false,"discussion_count":0,"race_medal":1,"score":"1576551939","product_id":100033601,"comment_content":"“实现了快速握手功能。由于 QUIC 是基于 UDP 的，所以 QUIC 可以实现使用 0-RTT 或者 1-RTT 来建立连接.......”，由于是基于UDP的，所以实现0～1个RTT，那我感觉就面临一个问题，相比于TCP的三次握手，它的准确性就有问题了，搞不好还有极小的概率“串台“。","like_count":0},{"had_liked":false,"id":162540,"user_name":"-_-|||","can_delete":false,"product_type":"c1","uid":1328142,"ip_address":"","ucode":"94B21594658BF9","user_header":"https://static001.geekbang.org/account/avatar/00/14/44/0e/ce14b7d3.jpg","comment_is_top":false,"comment_ctime":1576551748,"is_pvip":false,"discussion_count":1,"race_medal":1,"score":"1576551748","product_id":100033601,"comment_content":"&quot;实现了 HTTP&#47;2 中的多路复用功能。和 TCP 不同，QUIC 实现了在同一物理连接上可以有多个独立的逻辑数据流（如下图）。实现了数据流的单独传输，就解决了 TCP 中队头阻塞的问题。&quot;,个人感觉不管怎么传输，还待保证数据包不会丢失，丢了还是要重新传输，重新传就会有队头阻塞问题，所以，文中说“数据流的单独传输，就解决了 TCP 中队头阻塞的问题”，感到疑惑，单独传就不阻塞了吗，丢了一堆包也不管了。","like_count":0,"discussions":[{"author":{"id":1499244,"avatar":"https://static001.geekbang.org/account/avatar/00/16/e0/6c/ef405cc1.jpg","nickname":"关山楂","note":"","ucode":"C32E201FA33045","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":111230,"discussion_content":"会阻塞，但是只会阻塞丢包的那条链路，因为可以连接多个数据流链路，所以一个阻塞了，其他的不会阻塞。而http2.0中TCP只有一条链路，只要这些数据包中一个阻塞了，后面的其他包就得等待。所以说是解决了TCP队头阻塞的问题。因为不管是什么协议都不能保证不丢包，只不过是不要影响其他的数据流包就可以了。","likes_number":3,"is_delete":false,"is_hidden":false,"ctime":1577786616,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":141096,"user_name":"蔡孟泳","can_delete":false,"product_type":"c1","uid":1550692,"ip_address":"","ucode":"898007381B5C83","user_header":"https://static001.geekbang.org/account/avatar/00/17/a9/64/819fccec.jpg","comment_is_top":false,"comment_ctime":1571113990,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1571113990","product_id":100033601,"comment_content":"老师您好，我想请问就是因为UDP本身是不保证可靠传输，因此有时候丢包率很高，您说HTTP&#47;3在此基础上封装了一层，那封装后的丢包率和TCP封装的相比较相差多少？有数据对比吗","like_count":0},{"had_liked":false,"id":141046,"user_name":"伪装","can_delete":false,"product_type":"c1","uid":1614884,"ip_address":"","ucode":"F484F3ADFEB060","user_header":"https://static001.geekbang.org/account/avatar/00/18/a4/24/0f4a9157.jpg","comment_is_top":false,"comment_ctime":1571106013,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1571106013","product_id":100033601,"comment_content":"这章的概念都比较新 学习了","like_count":0}]}