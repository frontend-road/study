{"id":149943,"title":"01 | 领域驱动设计：微服务设计为什么要选择DDD？","content":"<p>你好，我是欧创新。</p><p>我们知道，微服务设计过程中往往会面临边界如何划定的问题，我经常看到项目团队为微服务到底应该拆多小而争得面红耳赤。不同的人会根据自己对微服务的理解而拆分出不同的微服务，于是大家各执一词，谁也说服不了谁，都觉得自己很有道理。</p><p>那在实际落地过程中，我也确实见过不少项目在面临这种微服务设计困惑时，是靠拍脑袋硬完成的，上线后运维的压力就可想而知了。那是否有合适的理论或设计方法来指导微服务设计呢？当你看到这一讲的题目时，我想你已经知道答案了。</p><p>没错，就是DDD。那么今天我就给你详细讲解下：“微服务设计为什么要选择领域驱动设计？”</p><h2>软件架构模式的演进</h2><p>在进入今天的主题之前，我们先来了解下背景。</p><p>我们知道，这些年来随着设备和新技术的发展，软件的架构模式发生了很大的变化。软件架构模式大体来说经历了从单机、集中式到分布式微服务架构三个阶段的演进。随着分布式技术的快速兴起，我们已经进入到了微服务架构时代。</p><p><img src=\"https://static001.geekbang.org/resource/image/8a/f8/8a859915250ffcab04675fb02fdf34f8.jpg?wh=2388*1255\" alt=\"\"></p><p>我们先来分析一下软件架构模式演进的三个阶段。</p><p><strong>第一阶段是单机架构：</strong>采用面向过程的设计方法，系统包括客户端UI层和数据库两层，采用C/S架构模式，整个系统围绕数据库驱动设计和开发，并且总是从设计数据库和字段开始。</p><!-- [[[read_end]]] --><p><strong>第二阶段是集中式架构：</strong>采用面向对象的设计方法，系统包括业务接入层、业务逻辑层和数据库层，采用经典的三层架构，也有部分应用采用传统的SOA架构。这种架构容易使系统变得臃肿，可扩展性和弹性伸缩性差。</p><p><strong>第三阶段是分布式微服务架构：</strong>随着微服务架构理念的提出，集中式架构正向分布式微服务架构演进。微服务架构可以很好地实现应用之间的解耦，解决单体应用扩展性和弹性伸缩能力不足的问题。</p><p>我们知道，在单机和集中式架构时代，系统分析、设计和开发往往是独立、分阶段割裂进行的。</p><p>比如，在系统建设过程中，我们经常会看到这样的情形：A负责提出需求，B负责需求分析，C负责系统设计，D负责代码实现，这样的流程很长，经手的人也很多，很容易导致信息丢失。最后，就很容易导致需求、设计与代码实现的不一致，往往到了软件上线后，我们才发现很多功能并不是自己想要的，或者做出来的功能跟自己提出的需求偏差太大。</p><p>而且<span class=\"orange\">在单机和集中式架构这两种模式下，软件无法快速响应需求和业务的迅速变化，最终错失发展良机。</span>此时，分布式微服务的出现就有点恰逢其时的意思了。</p><h2>微服务设计和拆分的困境</h2><p>那进入微服务架构时代以后，微服务确实也解决了原来采用集中式架构的单体应用的很多问题，比如扩展性、弹性伸缩能力、小规模团队的敏捷开发等等。</p><p>但在看到这些好处的同时，微服务实践过程中也产生了不少的争论和疑惑：微服务的粒度应该多大呀？微服务到底应该如何拆分和设计呢？微服务的边界应该在哪里？</p><p>可以说，很久以来都没有一套系统的理论和方法可以指导微服务的拆分，包括微服务架构模式的提出者Martin Fowler在提出微服务架构的时候，也没有告诉我们究竟应该如何拆分微服务。</p><p>于是，在这段较长的时间里，就有不少人对微服务的理解产生了一些曲解。有人认为：“微服务很简单，不过就是把原来一个单体包拆分为多个部署包，或者将原来的单体应用架构替换为一套支持微服务架构的技术框架，就算是微服务了。” 还有人说：“微服务嘛，就是要微要小，拆得越小效果越好。”</p><p>但我想，这两年，你在技术圈中一定听说过一些项目因为前期微服务拆分过度，导致项目复杂度过高，无法上线和运维。</p><p>综合来看，<span class=\"orange\">我认为微服务拆分困境产生的根本原因就是不知道业务或者微服务的边界到底在什么地方。</span>换句话说，确定了业务边界和应用边界，这个困境也就迎刃而解了。</p><p>那如何确定，是否有相关理论或知识体系支持呢？在回答这些问题之前，我们先来了解一下领域驱动设计与微服务的前世今生。</p><p>2004年埃里克·埃文斯（Eric Evans）发表了《领域驱动设计》（Domain-Driven Design –Tackling Complexity in the Heart of Software）这本书，从此领域驱动设计（Domain Driven Design，简称DDD）诞生。<span class=\"orange\">DDD核心思想是通过领域驱动设计方法定义领域模型，从而确定业务和应用边界，保证业务模型与代码模型的一致性。</span></p><p>但DDD提出后在软件开发领域一直都是“雷声大，雨点小”！直到Martin Fowler提出微服务架构，DDD才真正迎来了自己的时代。</p><p>有些熟悉DDD设计方法的软件工程师在进行微服务设计时，发现可以利用DDD设计方法来建立领域模型，划分领域边界，再根据这些领域边界从业务视角来划分微服务边界。而按照DDD方法设计出的微服务的业务和应用边界都非常合理，可以很好地实现微服务内部和外部的“高内聚、低耦合”。于是越来越多的人开始把DDD作为微服务设计的指导思想。</p><p>现在，很多大型互联网企业已经将DDD设计方法作为微服务的主流设计方法了。DDD也从过去“雷声大，雨点小”，开始真正火爆起来。</p><h2>为什么DDD适合微服务？</h2><p>“众里寻他千百度。蓦然回首，那人却在灯火阑珊处。”在经历了多年的迷茫和争论后，微服务终于寻到了他的心上人。</p><p>那DDD到底是何方神圣，拥有什么神器呢？</p><p>DDD是一种处理高度复杂领域的设计思想，它试图分离技术实现的复杂性，并围绕业务概念构建领域模型来控制业务的复杂性，以解决软件难以理解，难以演进的问题。DDD不是架构，而是一种架构设计方法论，它通过边界划分将复杂业务领域简单化，帮我们设计出清晰的领域和应用边界，可以很容易地实现架构演进。</p><p><strong>DDD包括战略设计和战术设计两部分。</strong></p><p>战略设计主要从业务视角出发，建立业务领域模型，划分领域边界，建立通用语言的限界上下文，限界上下文可以作为微服务设计的参考边界。</p><p>战术设计则从技术视角出发，侧重于领域模型的技术实现，完成软件开发和落地，包括：聚合根、实体、值对象、领域服务、应用服务和资源库等代码逻辑的设计和实现。</p><p>我们不妨来看看DDD是如何进行战略设计的。</p><p>DDD战略设计会建立领域模型，领域模型可以用于指导微服务的设计和拆分。事件风暴是建立领域模型的主要方法，它是一个从发散到收敛的过程。它通常采用用例分析、场景分析和用户旅程分析，尽可能全面不遗漏地分解业务领域，并梳理领域对象之间的关系，这是一个发散的过程。事件风暴过程会产生很多的实体、命令、事件等领域对象，我们将这些领域对象从不同的维度进行聚类，形成如聚合、限界上下文等边界，建立领域模型，这就是一个收敛的过程。</p><p><img src=\"https://static001.geekbang.org/resource/image/3b/73/3bb8915fd6e880d64e9029a1f8677473.jpg?wh=2234*1532\" alt=\"\"></p><p><strong>我们可以用三步来划定领域模型和微服务的边界。</strong></p><p>第一步：在事件风暴中梳理业务过程中的用户操作、事件以及外部依赖关系等，根据这些要素梳理出领域实体等领域对象。</p><p>第二步：根据领域实体之间的业务关联性，将业务紧密相关的实体进行组合形成聚合，同时确定聚合中的聚合根、值对象和实体。在这个图里，聚合之间的边界是第一层边界，它们在同一个微服务实例中运行，这个边界是逻辑边界，所以用虚线表示。</p><p>第三步：根据业务及语义边界等因素，将一个或者多个聚合划定在一个限界上下文内，形成领域模型。在这个图里，限界上下文之间的边界是第二层边界，这一层边界可能就是未来微服务的边界，不同限界上下文内的领域逻辑被隔离在不同的微服务实例中运行，物理上相互隔离，所以是物理边界，边界之间用实线来表示。</p><p><span class=\"orange\">有了这两层边界，微服务的设计就不是什么难事了。</span></p><p>在战略设计中我们建立了领域模型，划定了业务领域的边界，建立了通用语言和限界上下文，确定了领域模型中各个领域对象的关系。到这儿，业务端领域模型的设计工作基本就完成了，这个过程同时也基本确定了应用端的微服务边界。</p><p>在从业务模型向微服务落地的过程中，也就是从战略设计向战术设计的实施过程中，我们会将领域模型中的领域对象与代码模型中的代码对象建立映射关系，将业务架构和系统架构进行绑定。当我们去响应业务变化调整业务架构和领域模型时，系统架构也会同时发生调整，并同步建立新的映射关系。</p><h2>DDD与微服务的关系</h2><p>有了上面的讲解，现在我们不妨再次总结下DDD与微服务的关系。</p><p>DDD是一种架构设计方法，微服务是一种架构风格，两者从本质上都是为了追求高响应力，而从业务视角去分离应用系统建设复杂度的手段。两者都强调从业务出发，其核心要义是强调根据业务发展，合理划分领域边界，持续调整现有架构，优化现有代码，以保持架构和代码的生命力，也就是我们常说的演进式架构。</p><p>DDD主要关注：从业务领域视角划分领域边界，构建通用语言进行高效沟通，通过业务抽象，建立领域模型，维持业务和代码的逻辑一致性。</p><p>微服务主要关注：运行时的进程间通信、容错和故障隔离，实现去中心化数据管理和去中心化服务治理，关注微服务的独立开发、测试、构建和部署。</p><h2>总结</h2><p>今天我们主要讨论了微服务设计和拆分的难题。通过DDD战略设计可以建立领域模型，划定领域边界，解决微服务设计过程中，边界难以划定的难题。如果你的业务焦点在领域和领域逻辑，那么你就可以选择DDD作为微服务的设计方法！</p><p>更关键的一点是，<span class=\"orange\">DDD不仅可以用于微服务设计，还可以很好地应用于企业中台的设计。</span>如果你的企业正在做中台转型，DDD将会是一把利器，它可以帮你建立一个非常好的企业级中台业务模型。有关这点你还会在后面的文章中见到详解。</p><p>除此之外，DDD战术设计对设计和开发人员的要求相对较高，实现起来相对复杂。不同企业的研发管理能力和个人开发水平可能会存在差异。尤其对于传统企业而言，在战术设计落地的过程中，可能会存在一定挑战和困难，我建议你和你的公司如果有这方面的想法，就一定要谨慎评估自己的能力，选择最合适的方法落地DDD。</p><p>也不妨根据收获权衡一下，<strong>总体来说，DDD可以给你带来以下收获：</strong></p><ol>\n<li>DDD是一套完整而系统的设计方法，它能带给你从战略设计到战术设计的标准设计过程，使得你的设计思路能够更加清晰，设计过程更加规范。</li>\n<li>DDD善于处理与领域相关的拥有高复杂度业务的产品开发，通过它可以建立一个核心而稳定的领域模型，有利于领域知识的传递与传承。</li>\n<li>DDD强调团队与领域专家的合作，能够帮助你的团队建立一个沟通良好的氛围，构建一致的架构体系。</li>\n<li>DDD的设计思想、原则与模式有助于提高你的架构设计能力。</li>\n<li>无论是在新项目中设计微服务，还是将系统从单体架构演进到微服务，都可以遵循DDD的架构原则。</li>\n<li>DDD不仅适用于微服务，也适用于传统的单体应用。</li>\n</ol><h2>思考题</h2><p>你的公司是否在实施微服务架构，你在微服务设计过程中面临的最大问题是什么？</p><p>欢迎留言和我分享你的思考和疑惑，你也可以把今天所学分享给身边的朋友，邀请他加入探讨，共同进步。</p><p></p>","comments":[{"had_liked":false,"id":143070,"user_name":"Geek_a91670","can_delete":false,"product_type":"c1","uid":1705156,"ip_address":"","ucode":"6CAA9FF890F8EA","user_header":"https://static001.geekbang.org/account/avatar/00/1a/04/c4/ef4bd241.jpg","comment_is_top":true,"comment_ctime":1571625756,"is_pvip":false,"replies":[{"id":"55270","content":"后面章节会有一章专门讲，会有一个案例。跟头脑风暴类似，通过它设计领域模型。","user_name":"作者回复","comment_id":143070,"uid":"1316268","ip_address":"","utype":1,"ctime":1571626954,"user_name_real":"渔"}],"discussion_count":7,"race_medal":0,"score":"9.2233720899660001e+18","product_id":100037301,"comment_content":"事件风暴到底是什么啊?","like_count":12,"discussions":[{"author":{"id":1316268,"avatar":"https://static001.geekbang.org/account/avatar/00/14/15/ac/ba1f2494.jpg","nickname":"欧创新","note":"","ucode":"1F5AF0A327197A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":471373,"discussion_content":"后面章节会有一章专门讲，会有一个案例。跟头脑风暴类似，通过它设计领域模型。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1571626954,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1618328,"avatar":"https://static001.geekbang.org/account/avatar/00/18/b1/98/11b22d79.jpg","nickname":"絆","note":"","ucode":"52D965461314DB","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":374869,"discussion_content":"我理解的事件风暴就是,公司一群人在一起讨论的业务操作,某个业务的改变是否会影响其它业务.把这个&#34;改变&#34;记录为业务事件.然后把所有的事件放在一起,进行分析,划分服务边界.","likes_number":3,"is_delete":false,"is_hidden":false,"ctime":1621395028,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":1,"child_discussions":[{"author":{"id":2329181,"avatar":"https://static001.geekbang.org/account/avatar/00/23/8a/5d/9f146e48.jpg","nickname":"Monday","note":"","ucode":"33C597731B7AFA","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1618328,"avatar":"https://static001.geekbang.org/account/avatar/00/18/b1/98/11b22d79.jpg","nickname":"絆","note":"","ucode":"52D965461314DB","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":403976,"discussion_content":"感觉应该是领域事件吧？","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1634202557,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":374869,"ip_address":""},"score":403976,"extra":""}]},{"author":{"id":1752513,"avatar":"https://static001.geekbang.org/account/avatar/00/1a/bd/c1/e10c4014.jpg","nickname":"andy","note":"","ucode":"A1D3C7C9DCCB89","race_medal":1,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":567695,"discussion_content":"本质上和头脑风暴一个意思，只是侧重于事件驱动","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1650977048,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1955671,"avatar":"https://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTLALXb4ceugZ5YRalzW9FMXMR40icg4eDNFYxzFLtOkpdibg6AqzWgoHH9fIwMbm7O7eTdvNhAnYgGg/132","nickname":"申春磊","note":"","ucode":"C3D6E50D69D61F","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":548844,"discussion_content":"课代表坐下，回答很好","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1643422507,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1119490,"avatar":"https://static001.geekbang.org/account/avatar/00/11/15/02/66f65388.jpg","nickname":"雷霹雳的爸爸","note":"","ucode":"99BBA6D83DD11F","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":41655,"discussion_content":"一听风暴我就想到广播风暴，udp风暴...后来才知道人这是一好词，大概的意思好像就是一伙人沿着领域事件为线索搞一个头脑风暴...我瞎掰的啊，还是等着老师讲吧","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1572484794,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1705156,"avatar":"https://static001.geekbang.org/account/avatar/00/1a/04/c4/ef4bd241.jpg","nickname":"Geek_a91670","note":"","ucode":"6CAA9FF890F8EA","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":37508,"discussion_content":"好的，期待…","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1571627838,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":161724,"user_name":"吴建中","can_delete":false,"product_type":"c1","uid":1090512,"ip_address":"","ucode":"4C6D46E5EC17CF","user_header":"https://static001.geekbang.org/account/avatar/00/10/a3/d0/882b5388.jpg","comment_is_top":false,"comment_ctime":1576308530,"is_pvip":false,"replies":[{"id":"61605","content":"👍高手，每节的总结可以交给你来做了😀。","user_name":"作者回复","comment_id":161724,"uid":"1316268","ip_address":"","utype":1,"ctime":1576316872,"user_name_real":"渔"}],"discussion_count":13,"race_medal":0,"score":"796145258290","product_id":100037301,"comment_content":"面对复杂问题，解决办法通常是拆分，模块化，化整为零。领域驱动建模DDD是面向业务，对业务领域的划分和整合，是逻辑层面。微服务是面向物理落地，是对应用的物理形态进行拆分和整合。从软件工程过程角度看，DDD的战略设计输出物，领域模型及划分的区域，是微服务的输入，一个区域对应一个微服务，微服务运行框架、平台可以承载所有的微服务，提供微服务统一的运行框架，也就是承载所有的业务领域。可见领域驱动与微服务是在软件不同阶段使用的工具，技术或方法论，围绕一个共同的目标，搭建企业业务中台，企业级业务复用，快速的需求响应能力。DDD战略设计得输出，是微服务的输入。","like_count":185,"discussions":[{"author":{"id":1316268,"avatar":"https://static001.geekbang.org/account/avatar/00/14/15/ac/ba1f2494.jpg","nickname":"欧创新","note":"","ucode":"1F5AF0A327197A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":477828,"discussion_content":"👍高手，每节的总结可以交给你来做了😀。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1576316872,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1054108,"avatar":"https://static001.geekbang.org/account/avatar/00/10/15/9c/310c902c.jpg","nickname":"e^x","note":"","ucode":"29B56E0DF4EF48","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":382519,"discussion_content":"从实践的角度说，看起来是这么个流程，但是很容易让人误解。\n现在主流的做法是用DDD来指导微服务落地，不代表DDD的产出就应该是微服务的输入。\n个人理解：\n1. DDD和微服务两者没有关联性。单体架构，依然可以用DDD作为建模指导。\n2.DDD并不是只在软件的设计阶段才用的，而是需要贯穿软件的整个生命周期的。","likes_number":4,"is_delete":false,"is_hidden":false,"ctime":1625623647,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":2,"child_discussions":[{"author":{"id":1078280,"avatar":"https://static001.geekbang.org/account/avatar/00/10/74/08/aa2a9f36.jpg","nickname":"tomcat","note":"","ucode":"1929E1028414F6","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1054108,"avatar":"https://static001.geekbang.org/account/avatar/00/10/15/9c/310c902c.jpg","nickname":"e^x","note":"","ucode":"29B56E0DF4EF48","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":390281,"discussion_content":"赞同这个观点","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1629760789,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":382519,"ip_address":""},"score":390281,"extra":""},{"author":{"id":1336475,"avatar":"https://static001.geekbang.org/account/avatar/00/14/64/9b/0b578b08.jpg","nickname":"J.Smile","note":"","ucode":"C4D98DFDBF7584","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1054108,"avatar":"https://static001.geekbang.org/account/avatar/00/10/15/9c/310c902c.jpg","nickname":"e^x","note":"","ucode":"29B56E0DF4EF48","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":390794,"discussion_content":"他说的没错，你说的更严谨。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1630048562,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":382519,"ip_address":""},"score":390794,"extra":""}]},{"author":{"id":1090512,"avatar":"https://static001.geekbang.org/account/avatar/00/10/a3/d0/882b5388.jpg","nickname":"吴建中","note":"","ucode":"4C6D46E5EC17CF","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":82082,"discussion_content":"小学生一枚，多跟老师好好学习，发现总结一下，能加深印象。刚实施了一个类似的项目，磕磕碰碰的，想总结此类经验，固化下来 ，老师的课程正逢其时😄。","likes_number":4,"is_delete":false,"is_hidden":false,"ctime":1576318006,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":1,"child_discussions":[{"author":{"id":2028955,"avatar":"","nickname":"勿更改任何信息","note":"","ucode":"B4949BEB8B2AFD","race_medal":1,"user_type":1,"is_pvip":false},"reply_author":{"id":1090512,"avatar":"https://static001.geekbang.org/account/avatar/00/10/a3/d0/882b5388.jpg","nickname":"吴建中","note":"","ucode":"4C6D46E5EC17CF","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":305682,"discussion_content":"话术简练老道，很有水平","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1600055020,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":82082,"ip_address":""},"score":305682,"extra":""}]},{"author":{"id":1683924,"avatar":"https://static001.geekbang.org/account/avatar/00/19/b1/d4/629da4d4.jpg","nickname":"史迪仔","note":"","ucode":"650A3CA12DFB12","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":318846,"discussion_content":"DDD战略设计得输出，是微服务的输入。这句话是精髓","likes_number":2,"is_delete":false,"is_hidden":false,"ctime":1603864606,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1019332,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/8d/c4/6f97daea.jpg","nickname":"长期规划","note":"","ucode":"5EF65E9115834B","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":556465,"discussion_content":"有水平","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1647394662,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1213325,"avatar":"https://static001.geekbang.org/account/avatar/00/12/83/8d/03cac826.jpg","nickname":"徐李","note":"","ucode":"41550F6CA1E112","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":535890,"discussion_content":"这个总结真的是一语中的，DDD进行领域设计的结果就是微服务设计的输入，来指导微服务的设计。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1638593415,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1507024,"avatar":"https://static001.geekbang.org/account/avatar/00/16/fe/d0/e80e4a7e.jpg","nickname":"zhangyi","note":"","ucode":"0C4CAE9DA878F3","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":386811,"discussion_content":"强啊","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1627813345,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":2586162,"avatar":"https://static001.geekbang.org/account/avatar/00/27/76/32/a50b79e5.jpg","nickname":"richard","note":"","ucode":"17C3AFA5669FEA","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":380776,"discussion_content":"学到了。对抗复杂的方法是划分领域，明确边界。ddd领域驱动设计的输出是领域模型，实现业务能力复用。ddd是分布式微服务的输入，通过微服务承载领域模型。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1624694809,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":2046490,"avatar":"https://static001.geekbang.org/account/avatar/00/1f/3a/1a/ae3c1492.jpg","nickname":"🌾🌾🌾小麦🌾🌾🌾","note":"","ucode":"ECB0CE18D5B49A","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":325671,"discussion_content":"DDD战略设计的输出，是微服务的输入。������","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1605403250,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1063124,"avatar":"https://static001.geekbang.org/account/avatar/00/10/38/d4/f15ab4a3.jpg","nickname":"刘小龙","note":"","ucode":"E2887ADCAD1F2E","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":215566,"discussion_content":"总结很棒","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1585357690,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":274602,"user_name":"CHEN川","can_delete":false,"product_type":"c1","uid":1001694,"ip_address":"","ucode":"4B4D11141A68B9","user_header":"https://static001.geekbang.org/account/avatar/00/0f/48/de/d9a88304.jpg","comment_is_top":false,"comment_ctime":1611100036,"is_pvip":false,"replies":[{"id":"101048","content":"彩！","user_name":"作者回复","comment_id":274602,"uid":"1316268","ip_address":"","utype":1,"ctime":1612857002,"user_name_real":"欧创新"}],"discussion_count":8,"race_medal":0,"score":"422517895044","product_id":100037301,"comment_content":"翻了挺多留言，有一个感觉就是大家的容忍度特别低，总想把DDD的思想或者微服务架构一下子就在项目中完整的落地。就比如，只要使用DDD，在代码层面就不能使用MVC；只要使用微服务架构，就一定要基础设施完善，不然就是垃圾，这可能也是DDD一直推动不下去的原因之一。<br><br>人需要不断的学习，团队的认知也需要逐步的完善，是需要时间的。现在的代码是MVC的，没必要推翻，可以先在业务端多与市场、客户成功、产品等角色沟通，尝试用DDD的设计思想来建立合适的模型，等到团队都有这个sense的时候，再去慢慢搞定战术层面的东西。我认为，当业务领域模型足够健壮的时候，即使使用MVC模式，产品的健壮性和可维护性也会高很多。<br><br>只有让团队体会到领域设计的好处，才有可能继续推动DDD的落地。<br><br>另外一方面，微服务的基础设施也是逐步去构建完善，完全没有必要一开始就大而全。在业务初期，未必要建设庞大的监控系统，通过在代码中打印接口耗时、手动收集业务中的错误日志等方式来监控，也未尝不可，只要适合当前团队就好。<br><br>再者，也不用刻意去追求单元测试的覆盖率，能够保证重点业务接口的单元测试覆盖率即可。如果你真的有深入理解TDD的话，你就明白，TDD完全没有要求单元测试覆盖率这种指标，有些接口写单元测试真的只是浪费时间。<br><br>最后总结一下，饭是一口一口吃的，路也是一步一步走出来的，多给自己一点耐心，也多给团队一点时间。","like_count":99,"discussions":[{"author":{"id":1316268,"avatar":"https://static001.geekbang.org/account/avatar/00/14/15/ac/ba1f2494.jpg","nickname":"欧创新","note":"","ucode":"1F5AF0A327197A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":514066,"discussion_content":"彩！","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1612857002,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1002201,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/4a/d9/75dd7cf9.jpg","nickname":"Mew151","note":"","ucode":"D4793F5874F345","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":410984,"discussion_content":"很认同","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1635821488,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1307316,"avatar":"https://static001.geekbang.org/account/avatar/00/13/f2/b4/791d0f5e.jpg","nickname":"扬帆起航","note":"","ucode":"24F6103C249F01","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":559302,"discussion_content":"已有的架构只要能跑起来其实没必要考虑重构，但是从0开始的架构站的越高，后期带来的好处也就越多。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1648695666,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1238646,"avatar":"https://static001.geekbang.org/account/avatar/00/12/e6/76/26f555ce.jpg","nickname":"上沅同学","note":"","ucode":"CDE043A508E4EA","race_medal":1,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":542732,"discussion_content":"为什么「只要使用DDD，在代码层面就不能使用MVC」？这两者并不冲突啊","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1640830875,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":1,"child_discussions":[{"author":{"id":1518535,"avatar":"https://static001.geekbang.org/account/avatar/00/17/2b/c7/9c8647c8.jpg","nickname":"鐘","note":"","ucode":"0106652D5F7BD9","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":1238646,"avatar":"https://static001.geekbang.org/account/avatar/00/12/e6/76/26f555ce.jpg","nickname":"上沅同学","note":"","ucode":"CDE043A508E4EA","race_medal":1,"user_type":1,"is_pvip":false},"discussion":{"id":581850,"discussion_content":"感覺業務邏輯是分散在各個領域中, 而不是全部集中在 controller 層","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1659021458,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":542732,"ip_address":"北京"},"score":581850,"extra":""}]},{"author":{"id":1292669,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTIaaDFHiag4sFcO7JUn028Mtk1YvFpibIibLzcTE7Qak0icJklMpqh7k5dSK27dibicMuNgYMozgaibeYppA/132","nickname":"Bball","note":"","ucode":"E483CAFE50CB99","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":538801,"discussion_content":"同意，持续学习修炼内功，成事是迟早的事","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1639527093,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":2865215,"avatar":"","nickname":"周大仙","note":"","ucode":"4C165FF97D7AF4","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":537501,"discussion_content":"时间不等人啊","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1639070557,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1507024,"avatar":"https://static001.geekbang.org/account/avatar/00/16/fe/d0/e80e4a7e.jpg","nickname":"zhangyi","note":"","ucode":"0C4CAE9DA878F3","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":391063,"discussion_content":"m","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1630255370,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":144726,"user_name":"Geek_9695b4","can_delete":false,"product_type":"c1","uid":1134153,"ip_address":"","ucode":"E196700C069A9C","user_header":"https://static001.geekbang.org/account/avatar/00/11/4e/49/20a4b82d.jpg","comment_is_top":false,"comment_ctime":1572011737,"is_pvip":false,"replies":[{"id":"55789","content":"第一个问题，我想知道不同工厂软件需求的差异主要在什么地方？如果差异在流程和服务编排，DDD的分层架构应用服务很合适。如果领域层业务逻辑差异不大的话，就比较好解决。个人感觉领域层的核心逻辑差异应该不会大。<br>第二个问题，DDD数据库方面采用依赖倒置的方式，实现业务逻辑的时候，不会有数据库方面的逻辑，都是领域对象的行为，数据库相关代码在仓储实现中实现。也就是说业务实现与数据库是松耦合的，换数据库的时候，只需要换仓储逻辑就可以了，不会影响核心业务逻辑。<br>第三方问题，你说的这几个子域相对清晰，直接在子域做事件风暴，建立领域模型，设计微服务就可以了。<br>第四个问题，见以上三条。总之，保持领域层领域模型的稳定，用应用层去适配外部需求的变化，用户接口层面向不同渠道提供个性数据服务。<br><br>","user_name":"作者回复","comment_id":144726,"uid":"1316268","ip_address":"","utype":1,"ctime":1572016327,"user_name_real":"渔"}],"discussion_count":5,"race_medal":0,"score":"199140507353","product_id":100037301,"comment_content":"我们公司现在也有这方面的想法，但是一直无从下手，主要原因是，<br>1、我们是给工厂做软件的，不同的工厂相同的功能需求会有有差异，这个怎么解决？显然一个工厂一个版本是不好的<br>2、不同工厂需要使用不同的数据库<br>3、功能模块主要有物料管理、订单管理、计划管理、出入库管理、库存管理等，里面功能模块较多<br>4、DDD怎么更好的去解决SAAS化的产品研发问题","like_count":46,"discussions":[{"author":{"id":1316268,"avatar":"https://static001.geekbang.org/account/avatar/00/14/15/ac/ba1f2494.jpg","nickname":"欧创新","note":"","ucode":"1F5AF0A327197A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":472086,"discussion_content":"第一个问题，我想知道不同工厂软件需求的差异主要在什么地方？如果差异在流程和服务编排，DDD的分层架构应用服务很合适。如果领域层业务逻辑差异不大的话，就比较好解决。个人感觉领域层的核心逻辑差异应该不会大。\n第二个问题，DDD数据库方面采用依赖倒置的方式，实现业务逻辑的时候，不会有数据库方面的逻辑，都是领域对象的行为，数据库相关代码在仓储实现中实现。也就是说业务实现与数据库是松耦合的，换数据库的时候，只需要换仓储逻辑就可以了，不会影响核心业务逻辑。\n第三方问题，你说的这几个子域相对清晰，直接在子域做事件风暴，建立领域模型，设计微服务就可以了。\n第四个问题，见以上三条。总之，保持领域层领域模型的稳定，用应用层去适配外部需求的变化，用户接口层面向不同渠道提供个性数据服务。\n\n","likes_number":3,"is_delete":false,"is_hidden":false,"ctime":1572016327,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1316268,"avatar":"https://static001.geekbang.org/account/avatar/00/14/15/ac/ba1f2494.jpg","nickname":"欧创新","note":"","ucode":"1F5AF0A327197A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":41066,"discussion_content":"如果领域模型的差异实在太大，我建议还是分开建模，要不为了兼容不同的模型，需要不断妥协，也会影响用户体验。不过能整合尽量整合。","likes_number":2,"is_delete":false,"is_hidden":false,"ctime":1572340465,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1134153,"avatar":"https://static001.geekbang.org/account/avatar/00/11/4e/49/20a4b82d.jpg","nickname":"Geek_9695b4","note":"","ucode":"E196700C069A9C","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":39923,"discussion_content":"谢谢老师的回复。第一个问题，拿订单模块来说，不同工厂订单数据字段不同，创建订单后处理业务逻辑也不同。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1572017473,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":2,"child_discussions":[{"author":{"id":1392924,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/rRCSdTPyqWcW6U8DO9xL55ictNPlbQ38VAcaBNgibqaAhcH7mn1W9ddxIJLlMiaA5sngBicMX02w2HP5pAWpBAJsag/132","nickname":"butterfly","note":"","ucode":"1B724973303FB0","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1134153,"avatar":"https://static001.geekbang.org/account/avatar/00/11/4e/49/20a4b82d.jpg","nickname":"Geek_9695b4","note":"","ucode":"E196700C069A9C","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":300714,"discussion_content":"这种字段不同的情况，是不是可以采用，不作为字段，而是作为记录，一个字段就是一条记录，该条记录同时保存该字段对应的值. 这样扩展行会好点 .  当然是牺牲了一部分性能的","likes_number":3,"is_delete":false,"is_hidden":false,"ctime":1598244553,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":39923,"ip_address":""},"score":300714,"extra":""},{"author":{"id":1444468,"avatar":"","nickname":"飞鱼湾","note":"","ucode":"23B17E44496E0B","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1134153,"avatar":"https://static001.geekbang.org/account/avatar/00/11/4e/49/20a4b82d.jpg","nickname":"Geek_9695b4","note":"","ucode":"E196700C069A9C","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":349019,"discussion_content":"阿里巴巴中间件里有篇文章，就是介绍如何用数据库元数据解决SAAS平台的业务模型差异问题，可以参考看看","likes_number":5,"is_delete":false,"is_hidden":false,"ctime":1612851998,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":39923,"ip_address":""},"score":349019,"extra":""}]}]},{"had_liked":false,"id":140770,"user_name":"YourSweetHeart","can_delete":false,"product_type":"c1","uid":1242122,"ip_address":"","ucode":"38843F447B03F2","user_header":"https://static001.geekbang.org/account/avatar/00/12/f4/0a/cf728857.jpg","comment_is_top":false,"comment_ctime":1571046025,"is_pvip":false,"replies":[{"id":"54500","content":"忠实老粉了啊～期待你的打卡！","user_name":"编辑回复","comment_id":140770,"uid":"1356014","ip_address":"","utype":2,"ctime":1571068979,"user_name_real":"王冬青"}],"discussion_count":8,"race_medal":0,"score":"147599934089","product_id":100037301,"comment_content":"我能说我等极客时间出这个等了1年吗？","like_count":34,"discussions":[{"author":{"id":1356014,"avatar":"https://static001.geekbang.org/account/avatar/00/14/b0/ee/d0871efd.jpg","nickname":"冬青","note":"","ucode":"14576781B499FB","race_medal":0,"user_type":8,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":470548,"discussion_content":"忠实老粉了啊～期待你的打卡！","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1571068979,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":4}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1110498,"avatar":"https://static001.geekbang.org/account/avatar/00/10/f1/e2/abb7bfe3.jpg","nickname":"潇洒的活着","note":"","ucode":"C3C132583F6F84","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":299857,"discussion_content":"+1","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1597840766,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1481439,"avatar":"https://static001.geekbang.org/account/avatar/00/16/9a/df/58f07489.jpg","nickname":"AlexHuang","note":"","ucode":"C359C1B9D3671A","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":42592,"discussion_content":"+1","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1572705386,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1172978,"avatar":"https://static001.geekbang.org/account/avatar/00/11/e5/f2/262a7364.jpg","nickname":"云中漫步","note":"","ucode":"7E3BE72888E307","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":38441,"discussion_content":"我也是，一直期待。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1571790447,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1188144,"avatar":"https://static001.geekbang.org/account/avatar/00/12/21/30/8ecce1e1.jpg","nickname":"北天魔狼","note":"","ucode":"C22623ECEB8DBA","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":34142,"discussion_content":"iddd的书我都看了400多页了，看的比较晕，看到开课那一瞬间激动啊","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1571179955,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1316268,"avatar":"https://static001.geekbang.org/account/avatar/00/14/15/ac/ba1f2494.jpg","nickname":"欧创新","note":"","ucode":"1F5AF0A327197A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":32808,"discussion_content":"让大家久等了哈。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1571062083,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1053934,"avatar":"https://static001.geekbang.org/account/avatar/00/10/14/ee/d72a8222.jpg","nickname":"攻城拔寨","note":"","ucode":"CBC37183DAB6B2","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":32748,"discussion_content":"我也是","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1571060100,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1055475,"avatar":"https://static001.geekbang.org/account/avatar/00/10/1a/f3/41d5ba7d.jpg","nickname":"iLeGeND","note":"","ucode":"4055A628A6E97C","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":32598,"discussion_content":"能说\n","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1571051179,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":146105,"user_name":"雷霹雳的爸爸","can_delete":false,"product_type":"c1","uid":1119490,"ip_address":"","ucode":"99BBA6D83DD11F","user_header":"https://static001.geekbang.org/account/avatar/00/11/15/02/66f65388.jpg","comment_is_top":false,"comment_ctime":1572433244,"is_pvip":true,"replies":[{"id":"56402","content":"其实你说的这种现象很普遍，很多企业都是业务的归业务，技术的归技术。不容易融合，这也是很多技术难以推行的原因。","user_name":"作者回复","comment_id":146105,"uid":"1316268","ip_address":"","utype":1,"ctime":1572444086,"user_name_real":"渔"}],"discussion_count":4,"race_medal":0,"score":"113241582940","product_id":100037301,"comment_content":"当然是微服务架构，不是也得跟投资人宣称是<br><br>要说最大的问题，就是业务拎不清；让我更进一步分析这种状况，应该是就没有事实上的领域专家，只有很多充其量是熟悉现有业务流程的人，而这些人站在自己的视角阐述问题都没有问题，但是缺少能捏合起来统筹考虑的人，在我们的组织中（我怀疑大多数组织中都是这样），在产品研发团队，关于业务的话语权特别是信息垄断权是掌握在产品（经理）部门手中的，而微服务、DDD的武器却是掌握在技术部门手中，如果技术人员不赶紧学好吃透这些招式，这就对微服务的实际落地，DDD的推广应用，带来了巨大的障碍和困难，我觉得也别无他法，只能忍着被误解和做好顶雷背锅的心态，像Carty说的那样，技术团队中有人挺身而出去承担本该产品经理的责任吧，这样才能给DDD，微服务落地准备足够的营养...我还记得在这个团队在成立初期，产品总监戏称应该定一个组织结构设计架构师的岗位，我估计他主要是说给我这个技术架构师听的，而我只能一脸严肃地表达，确实组织架构应该根据你系统演化的需要来变更的，我就差说你回去好好看看书去不行吗？","like_count":26,"discussions":[{"author":{"id":1316268,"avatar":"https://static001.geekbang.org/account/avatar/00/14/15/ac/ba1f2494.jpg","nickname":"欧创新","note":"","ucode":"1F5AF0A327197A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":472711,"discussion_content":"其实你说的这种现象很普遍，很多企业都是业务的归业务，技术的归技术。不容易融合，这也是很多技术难以推行的原因。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1572444086,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1019332,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/8d/c4/6f97daea.jpg","nickname":"长期规划","note":"","ucode":"5EF65E9115834B","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":556466,"discussion_content":"这个问题估计普遍存在，没有领域专家，实际中一般由架构师或开发人员担当。\n注：从评论也能学到好多东西啊","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1647395031,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":2225732,"avatar":"","nickname":"李炳岳","note":"","ucode":"F439D122B23335","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":359153,"discussion_content":"这时候需要的是一个业务架构师","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1616123358,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1307316,"avatar":"https://static001.geekbang.org/account/avatar/00/13/f2/b4/791d0f5e.jpg","nickname":"扬帆起航","note":"","ucode":"24F6103C249F01","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":559304,"discussion_content":"业技无法融合，那么一些边界可能会出现偏差吧","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1648695915,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":193128,"user_name":"忠厚","can_delete":false,"product_type":"c1","uid":1105648,"ip_address":"","ucode":"86ED2B630187C9","user_header":"https://static001.geekbang.org/account/avatar/00/10/de/f0/ccf46294.jpg","comment_is_top":false,"comment_ctime":1584884345,"is_pvip":true,"replies":[{"id":"73724","content":"是的，它们是整个中台体系的方法和技术框架。还缺少一个前端的设计：微前端。我在后面会讲到。","user_name":"作者回复","comment_id":193128,"uid":"1316268","ip_address":"","utype":1,"ctime":1584929728,"user_name_real":"渔"}],"discussion_count":3,"race_medal":0,"score":"87484230265","product_id":100037301,"comment_content":"中台是战略目标，DDD是设计思想，微服务是落地手段，云原生是落地基础....企业数字化转型四大核心知识体系，一个都不能少，哈哈哈哈...","like_count":20,"discussions":[{"author":{"id":1316268,"avatar":"https://static001.geekbang.org/account/avatar/00/14/15/ac/ba1f2494.jpg","nickname":"欧创新","note":"","ucode":"1F5AF0A327197A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":488509,"discussion_content":"是的，它们是整个中台体系的方法和技术框架。还缺少一个前端的设计：微前端。我在后面会讲到。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1584929728,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1507024,"avatar":"https://static001.geekbang.org/account/avatar/00/16/fe/d0/e80e4a7e.jpg","nickname":"zhangyi","note":"","ucode":"0C4CAE9DA878F3","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":391064,"discussion_content":"m","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1630255508,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1080050,"avatar":"https://static001.geekbang.org/account/avatar/00/10/7a/f2/6770d0a9.jpg","nickname":"张驰","note":"","ucode":"0ED97C2FCE6599","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":373375,"discussion_content":"我理解微服务架构必然要依赖DevOps","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1620709896,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":147189,"user_name":"huaweichen","can_delete":false,"product_type":"c1","uid":1249907,"ip_address":"","ucode":"974917DE2AE92E","user_header":"https://static001.geekbang.org/account/avatar/00/13/12/73/2183839d.jpg","comment_is_top":false,"comment_ctime":1572835147,"is_pvip":false,"replies":[{"id":"56873","content":"第一个问题，不清楚是设计的问题还是消息中间件组件选择的问题。<br>第二个问题，数据库之间的同步可以采用两种方式，第一种定时扫描源端数据库获取增量数据，但是这种方式会增加数据库的负担和需要单独编写取数代码逻辑。第二种是采用数据库日志捕获技术CDC，但是不知道你这种数据库是否有CDC，如果没有，就不太方便了。<br>第三个问题，不知道你的报表数据来源，如果是多个微服务，那建议你做一个数据平台，用于汇集各个微服务数据库的数据，所有的报表从这个数据平台获取。","user_name":"作者回复","comment_id":147189,"uid":"1316268","ip_address":"","utype":1,"ctime":1572838260,"user_name_real":"渔"}],"discussion_count":3,"race_medal":0,"score":"78882246475","product_id":100037301,"comment_content":"我之前的公司从legacy单体应用转型为DDD微服务，<br>最大的问题是：<br>1. 使用消息队列的过程中，有很多事件不同步、死循环问题。<br>2. legacy数据库和新数据库的同步。<br>3. 做reporting的时候，不知道有什么好的招术。","like_count":18,"discussions":[{"author":{"id":1316268,"avatar":"https://static001.geekbang.org/account/avatar/00/14/15/ac/ba1f2494.jpg","nickname":"欧创新","note":"","ucode":"1F5AF0A327197A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":473189,"discussion_content":"第一个问题，不清楚是设计的问题还是消息中间件组件选择的问题。\n第二个问题，数据库之间的同步可以采用两种方式，第一种定时扫描源端数据库获取增量数据，但是这种方式会增加数据库的负担和需要单独编写取数代码逻辑。第二种是采用数据库日志捕获技术CDC，但是不知道你这种数据库是否有CDC，如果没有，就不太方便了。\n第三个问题，不知道你的报表数据来源，如果是多个微服务，那建议你做一个数据平台，用于汇集各个微服务数据库的数据，所有的报表从这个数据平台获取。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1572838260,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1141676,"avatar":"https://static001.geekbang.org/account/avatar/00/11/6b/ac/cc187d8d.jpg","nickname":"向往而行","note":"","ucode":"AE01D637B946C5","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":302625,"discussion_content":"对第二个问题 不能做一次全量的数据迁移吗？","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1598972367,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1249907,"avatar":"https://static001.geekbang.org/account/avatar/00/13/12/73/2183839d.jpg","nickname":"huaweichen","note":"","ucode":"974917DE2AE92E","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":43057,"discussion_content":"1. 我们用的是PHP，但是选型的时候用的是kafka，似乎kafka当时（现在依然）对PHP的支持不是很多。\n2. 我们用的是mysql，但是使用的是您推荐的方法一，每次导入增量数据。\n3. 数据来源是多个微服务，所以我们确实准备做一个数据平台。\n\n老师的建议非常受用，谢谢老师。\n","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1572848351,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":140898,"user_name":"姚俊","can_delete":false,"product_type":"c1","uid":1364873,"ip_address":"","ucode":"2ABE42AC97B528","user_header":"https://static001.geekbang.org/account/avatar/00/14/d3/89/6f5c09bc.jpg","comment_is_top":false,"comment_ctime":1571069132,"is_pvip":false,"replies":[{"id":"54546","content":"您说的第一个问题，尤其是数据代码类应用场景下都是存在的，这种情况下需要考虑必要的数据冗余，可以采用小表广播的方式，源端数据变了后，可以考虑异步方式广播到数据使用的目的端。<br>第二个拆分需要考虑限界上下文，并且保证业务的高内聚，高内聚你可以理解为原来的模块的概念，具体大小根据你的业务来定。","user_name":"作者回复","comment_id":140898,"uid":"1316268","ip_address":"","utype":1,"ctime":1571101951,"user_name_real":"渔"}],"discussion_count":1,"race_medal":0,"score":"57405643980","product_id":100037301,"comment_content":"从2016年偶然间发现了springcloud springboot，于是开始带领团队玩起了微服务，在有一些技术积累之后，开始反过来看做过的项目，发现微服务的拆分并没有带来多少好好处，于是今年开始ddd试错。在拆分过程中，个人碰到的几大问题就是<br>1、数据库彻底拆分之后，带来的编码问题，和多服务调用的性能问题，举个例子，性别代码表，在n多个系统都需要的情况下，如果复制，也数据库没有彻底拆分，或者有冗余，彻底拆分的话，原来关联查询简单的sql，则变成服务之间的调用，可能存在性能问题。比较棘手<br>2、接触ddd有几个月吧，也在按照这个模式，重新构建项目，只是实体，聚合根在复杂的业务逻辑下，如何拆分和聚合，一直觉得没掌握到位。希望后续案例可以给我启发<br>","like_count":13,"discussions":[{"author":{"id":1316268,"avatar":"https://static001.geekbang.org/account/avatar/00/14/15/ac/ba1f2494.jpg","nickname":"欧创新","note":"","ucode":"1F5AF0A327197A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":470614,"discussion_content":"您说的第一个问题，尤其是数据代码类应用场景下都是存在的，这种情况下需要考虑必要的数据冗余，可以采用小表广播的方式，源端数据变了后，可以考虑异步方式广播到数据使用的目的端。\n第二个拆分需要考虑限界上下文，并且保证业务的高内聚，高内聚你可以理解为原来的模块的概念，具体大小根据你的业务来定。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1571101951,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":141720,"user_name":"肖大保健","can_delete":false,"product_type":"c1","uid":1306868,"ip_address":"","ucode":"E3209A00C1B954","user_header":"https://static001.geekbang.org/account/avatar/00/13/f0/f4/22dbe2d9.jpg","comment_is_top":false,"comment_ctime":1571214795,"is_pvip":false,"replies":[{"id":"54738","content":"你说的这几个问题我后面都会讲到，耐心等待哈。<br>第一个问题：会通过事件风暴来建立领域模型。<br>第二个问题：前后端分离后，可通过API网关调用后端微服务，或者对于复杂的业务场景可以考虑在前端与后端微服务之间增加一个BFF的微服务，可以对多个微服务进行服务组合和编排。<br>第三个问题：限界上下文边界理论上就是微服务的边界。","user_name":"作者回复","comment_id":141720,"uid":"1316268","ip_address":"","utype":1,"ctime":1571225394,"user_name_real":"渔"}],"discussion_count":1,"race_medal":0,"score":"53110822347","product_id":100037301,"comment_content":"目前公司用的是spring boot 框架，根据业务也做了明显得服务拆分（接单web，调度服务，订单服务，用户服务，资金服务，api服务 等），后期打算把数据层（mysql，mongo，redis）单独拆分出去，web层controller再单独拆分做HA 或者 ng，不知道算不算的上微服务架构，我们在做服务拆分，功能聚合这块是按业务模块来的<br>问题一：服务的功能界限该如何划定（按功能，还是按业务，有点矛盾）<br>问题二：服务调用，横向一个个调用，还是按web或者调度中转，比较好？（也存在争议）<br>问题三：文章中提到界定上下文，请问在服务中该如何体现，不是很明白","like_count":12,"discussions":[{"author":{"id":1316268,"avatar":"https://static001.geekbang.org/account/avatar/00/14/15/ac/ba1f2494.jpg","nickname":"欧创新","note":"","ucode":"1F5AF0A327197A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":470857,"discussion_content":"你说的这几个问题我后面都会讲到，耐心等待哈。\n第一个问题：会通过事件风暴来建立领域模型。\n第二个问题：前后端分离后，可通过API网关调用后端微服务，或者对于复杂的业务场景可以考虑在前端与后端微服务之间增加一个BFF的微服务，可以对多个微服务进行服务组合和编排。\n第三个问题：限界上下文边界理论上就是微服务的边界。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1571225394,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":140869,"user_name":"Dr","can_delete":false,"product_type":"c1","uid":1332015,"ip_address":"","ucode":"655F28A32E721E","user_header":"https://static001.geekbang.org/account/avatar/00/14/53/2f/9f3f2c5e.jpg","comment_is_top":false,"comment_ctime":1571064242,"is_pvip":true,"replies":[{"id":"54495","content":"选了一个企业级的中台设计，从领域建模到微服务设计选取了几个典型的中台，过程基本是完整的。最后的示例，源代码只到服务和实体类级别，里面具体业务实现代码没有。也就是说微服务整体架构的框架搭起来，但没有往里填肉。","user_name":"作者回复","comment_id":140869,"uid":"1316268","ip_address":"","utype":1,"ctime":1571064774,"user_name_real":"渔"}],"discussion_count":4,"race_medal":0,"score":"44520737202","product_id":100037301,"comment_content":"实战源代码，成体系吗？还是散落在文章里面？有的话，哪里可以下载？理论看了很多，缺一套代码，琢磨琢磨。","like_count":10,"discussions":[{"author":{"id":1316268,"avatar":"https://static001.geekbang.org/account/avatar/00/14/15/ac/ba1f2494.jpg","nickname":"欧创新","note":"","ucode":"1F5AF0A327197A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":470602,"discussion_content":"选了一个企业级的中台设计，从领域建模到微服务设计选取了几个典型的中台，过程基本是完整的。最后的示例，源代码只到服务和实体类级别，里面具体业务实现代码没有。也就是说微服务整体架构的框架搭起来，但没有往里填肉。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1571064774,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1119490,"avatar":"https://static001.geekbang.org/account/avatar/00/11/15/02/66f65388.jpg","nickname":"雷霹雳的爸爸","note":"","ucode":"99BBA6D83DD11F","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":41664,"discussion_content":"有代码有真相，我也很期待...但我估计太细节得代码或模式实现未必会有，比如event sourcing之类的，但我想那也不是大家来这里的目的，估计还是来捋思路的居多","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1572485614,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":1,"child_discussions":[{"author":{"id":2329181,"avatar":"https://static001.geekbang.org/account/avatar/00/23/8a/5d/9f146e48.jpg","nickname":"Monday","note":"","ucode":"33C597731B7AFA","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1119490,"avatar":"https://static001.geekbang.org/account/avatar/00/11/15/02/66f65388.jpg","nickname":"雷霹雳的爸爸","note":"","ucode":"99BBA6D83DD11F","race_medal":0,"user_type":1,"is_pvip":true},"discussion":{"id":404021,"discussion_content":"嗯","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1634211052,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":41664,"ip_address":""},"score":404021,"extra":""}]},{"author":{"id":1332015,"avatar":"https://static001.geekbang.org/account/avatar/00/14/53/2f/9f3f2c5e.jpg","nickname":"Dr","note":"","ucode":"655F28A32E721E","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":32941,"discussion_content":"期待！","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1571067521,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":140803,"user_name":"方堃","can_delete":false,"product_type":"c1","uid":1400179,"ip_address":"","ucode":"9410B467FBA75E","user_header":"https://static001.geekbang.org/account/avatar/00/15/5d/73/ffc3b06d.jpg","comment_is_top":false,"comment_ctime":1571050829,"is_pvip":true,"replies":[{"id":"54485","content":"您说的这些问题确实很常见，很多企业都是业务的归业务，技术的归技术。DDD其实也跟中台建设一样，也是一种企业和组织文化的变化，需要业务和技术融合在一起。","user_name":"作者回复","comment_id":140803,"uid":"1316268","ip_address":"","utype":1,"ctime":1571063826,"user_name_real":"渔"}],"discussion_count":1,"race_medal":0,"score":"44520723789","product_id":100037301,"comment_content":"我觉得微服务现在转型有个挺大的问题就是团队认识深度。因为现在好多项目都是先简单的以单机项目为基础开发，追求上线速度。后续发现项目越来越大才考虑进行架构方向的整理。导致很有可能出现早期只有开发产品没有架构师参与。这时候转型，架构师多久能吃透现有的业务就是转型速度的瓶颈了。毕竟产品不了解代码，开发人员又往往只盯着自己的模块缺少整体的了解","like_count":10,"discussions":[{"author":{"id":1316268,"avatar":"https://static001.geekbang.org/account/avatar/00/14/15/ac/ba1f2494.jpg","nickname":"欧创新","note":"","ucode":"1F5AF0A327197A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":470570,"discussion_content":"您说的这些问题确实很常见，很多企业都是业务的归业务，技术的归技术。DDD其实也跟中台建设一样，也是一种企业和组织文化的变化，需要业务和技术融合在一起。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1571063826,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":141622,"user_name":"Jxin","can_delete":false,"product_type":"c1","uid":1251111,"ip_address":"","ucode":"4C03928388C413","user_header":"https://static001.geekbang.org/account/avatar/00/13/17/27/ec30d30a.jpg","comment_is_top":false,"comment_ctime":1571202955,"is_pvip":false,"replies":[{"id":"54696","content":"微服务不只是微服务的事情。微服务的出现也不是偶然出现的，是技术和研发模式积累到一定阶段后才出现的。底层它与云计算平台、CICD、Devops等是离不开的，在研发模式上与敏捷也是关联非常紧密的。所以微服务的建设需要很多的积累，这些积累不够的话，对于企业级的微服务将会是很难的。","user_name":"作者回复","comment_id":141622,"uid":"1316268","ip_address":"","utype":1,"ctime":1571205202,"user_name_real":"渔"}],"discussion_count":1,"race_medal":0,"score":"40225908619","product_id":100037301,"comment_content":"1.一年前学的ddd，半年前学的重构，现如今项目从架构到核心业务都重构了。这个专栏，实在等了太久。<br><br>2.目前公司采用了微服务组件和框架。但绝对不是微服务，缺少合理的业务拆分，缺少对应的敏捷开发基建（没有cicd，没有测试用例，没有自动化回归测试，没有完善的监控平台，微服务技术的引入很可能弊大于利）。我将这架构认定为传统soa引入微服务组件和框架，依旧是传统soa。拆得再细都还是单体，因为每个服务不能自成体系，相互依赖严重。<br><br>3.难点很多。业务债高难还，员工（所有业务开发）在业务的架构抽象上认知太浅，基础架构平台从0搭建，效能工具平台从0搭建，最难的是，2b项目改造价值有限，如果没有升级为saas平台并带来额外利益的可能，那么一切改造都是空话，能用就行。<br>","like_count":9,"discussions":[{"author":{"id":1316268,"avatar":"https://static001.geekbang.org/account/avatar/00/14/15/ac/ba1f2494.jpg","nickname":"欧创新","note":"","ucode":"1F5AF0A327197A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":470821,"discussion_content":"微服务不只是微服务的事情。微服务的出现也不是偶然出现的，是技术和研发模式积累到一定阶段后才出现的。底层它与云计算平台、CICD、Devops等是离不开的，在研发模式上与敏捷也是关联非常紧密的。所以微服务的建设需要很多的积累，这些积累不够的话，对于企业级的微服务将会是很难的。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1571205202,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":141072,"user_name":"TH","can_delete":false,"product_type":"c1","uid":1053413,"ip_address":"","ucode":"C5EA20546DC09C","user_header":"https://static001.geekbang.org/account/avatar/00/10/12/e5/592d9324.jpg","comment_is_top":false,"comment_ctime":1571109597,"is_pvip":true,"replies":[{"id":"54575","content":"DDD包括战略设计和战术设计，战略设计主要面向业务完成领域建模，战术设计是根据领域模型完成微服务设计的过程。领域的概念应该包括您所说的代码部署系统或者配置管理系统，只要能在这些领域中能够提炼出领域模型就可以。","user_name":"作者回复","comment_id":141072,"uid":"1316268","ip_address":"","utype":1,"ctime":1571116662,"user_name_real":"渔"}],"discussion_count":5,"race_medal":0,"score":"35930847965","product_id":100037301,"comment_content":"DDD是针对业务的，那么到底怎么理解“业务”呢？什么属于业务，什么不属于业务呢？尤其是业务与技术、基础设施、中间件之间的关系怎么划分？<br><br>换句话说，DDD是否适合技术框架、技术平台甚至技术中台的建设呢？比如我要开发一个代码部署系统或者配置管理系统，这样的系统是否适用DDD呢？因为对整个公司来说它们应该属于基础设施层的东西吧。<br><br>DDD是否存在大系统套小系统的形式？比如整个公司业务用DDD来设计，然后业务中的某个子系统也用DDD来设计，它们可以嵌套吗？","like_count":8,"discussions":[{"author":{"id":1316268,"avatar":"https://static001.geekbang.org/account/avatar/00/14/15/ac/ba1f2494.jpg","nickname":"欧创新","note":"","ucode":"1F5AF0A327197A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":470663,"discussion_content":"DDD包括战略设计和战术设计，战略设计主要面向业务完成领域建模，战术设计是根据领域模型完成微服务设计的过程。领域的概念应该包括您所说的代码部署系统或者配置管理系统，只要能在这些领域中能够提炼出领域模型就可以。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1571116662,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1119490,"avatar":"https://static001.geekbang.org/account/avatar/00/11/15/02/66f65388.jpg","nickname":"雷霹雳的爸爸","note":"","ucode":"99BBA6D83DD11F","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":41661,"discussion_content":"嵌套什么的，我估计这哥们儿是想问，如果较大的组织和相对受管辖的较小的组织用不同的设计方法，有的用DDD，有的不用，会不会产生冲突...我觉得应该没有硬的冲突，好比一国两制，经济特区嘛，说到底系统还是为了实现交付用户价值，不同的方法锻造的系统总能找到合适的结合点，只是如果...大家遵循一套方法论，就更容易有一套近似的价值观，这时候沟通起来估计会更容易\n\n我觉得像代码部署系统，或者配置管理系统应该更适合使用DDD来进行设计；因为我觉得DDD最怕的就是鸡同鸭讲，没有领域专家，太多似是而非的概念则容易产生混淆，刚前面有一位兄台问什么是事件风暴，貌似[有观点](https://insights.thoughtworks.cn/recognize-domain-event/) 称就是因为没有领域专家，然后一臭皮匠在一起顶诸葛亮的一个手段吧；回到代码部署，配置管理等等，就是程序员、运维工程师每天都干的事情，有的浸淫领域数十年，对DDD的方法稍加学习，应该很快能从业务专家成长为领域专家，事半功倍\n\n当然上面都是我瞎喷的","likes_number":3,"is_delete":false,"is_hidden":false,"ctime":1572485393,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1808666,"avatar":"https://static001.geekbang.org/account/avatar/00/1b/99/1a/196ff5f8.jpg","nickname":"长空","note":"","ucode":"EFE7E08491849C","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":134724,"discussion_content":"前面一些老哥说了后面的，我说说我理解的“业务”。一个应用需要完成的功能，就是业务，对这些功能进行一些梳理，也是为了更好去响应变化，DDD中的方法是用来梳理业务的。  \n业务的概念对不同应用来说也是不同的，比如电商系统，它的业务是售前、售后、物流...  而对于基础设施应用来说，它的业务就是提供的功能，你提到的代码部署系统和配置管理系统，它的业务当然就是**代码部署相关的问题**和**配置管理的问题**了。","likes_number":2,"is_delete":false,"is_hidden":false,"ctime":1579048163,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1251111,"avatar":"https://static001.geekbang.org/account/avatar/00/13/17/27/ec30d30a.jpg","nickname":"Jxin","note":"","ucode":"4C03928388C413","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":34486,"discussion_content":"基础架构平台也是一系列业务的聚合，也需要需求分析，设计和权衡。","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1571202000,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1128136,"avatar":"https://static001.geekbang.org/account/avatar/00/11/36/c8/961e6267.jpg","nickname":"@倾杯","note":"","ucode":"FC718A923D214F","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":35218,"discussion_content":"我的理解哈，代码部署系统和配置管理系统，都属于基础支撑系统，它们的核心域应该是为各个业务系统提供自动化构建和一些配置的统一化管理，所以我认为，自动化和统一化应该是要完成的目标，在使用它们对业务系统的管理过程中，稳定和可控才是重点。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1571241950,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":163544,"user_name":"james.d","can_delete":false,"product_type":"c1","uid":1087225,"ip_address":"","ucode":"CEE241856AF3B7","user_header":"https://static001.geekbang.org/account/avatar/00/10/96/f9/3f976c91.jpg","comment_is_top":false,"comment_ctime":1576740302,"is_pvip":false,"replies":[{"id":"62181","content":"是的，单体向微服务架构演进过程中的数据拆分是难点。如果边界清晰就相对容易很多。","user_name":"作者回复","comment_id":163544,"uid":"1316268","ip_address":"","utype":1,"ctime":1576747286,"user_name_real":"渔"}],"discussion_count":1,"race_medal":0,"score":"31641511374","product_id":100037301,"comment_content":"微服务的关键不在服务的大小，在于边界是否清晰和有效隔离。单体应用向微服务架构演进的第一步是理清系统的领域架构，然后根据领域模型进行重构，每个领域都是“高内聚，低耦合”的模块，这样才能方便后期的拆分。至于服务拆分的大小，哪些需要拆，哪些不需要拆，哪些先拆，哪些后拆，还需要综合考量很多因素，比如团队的组织结构（小团队就不要拆分得太细了），性能，核心功能&#47;非核心功能等等，业务拆分只是其中一小部分，数据拆分才是难点，总之先做好模块化（确定边界，做好隔离）才能实现想拆就拆。","like_count":7,"discussions":[{"author":{"id":1316268,"avatar":"https://static001.geekbang.org/account/avatar/00/14/15/ac/ba1f2494.jpg","nickname":"欧创新","note":"","ucode":"1F5AF0A327197A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":478440,"discussion_content":"是的，单体向微服务架构演进过程中的数据拆分是难点。如果边界清晰就相对容易很多。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1576747286,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":142924,"user_name":"MaLu","can_delete":false,"product_type":"c1","uid":1083559,"ip_address":"","ucode":"A5E900B6B94FB9","user_header":"https://static001.geekbang.org/account/avatar/00/10/88/a7/fb383ef7.jpg","comment_is_top":false,"comment_ctime":1571587799,"is_pvip":false,"replies":[{"id":"55255","content":"边界清晰了，以后微服务的演进就相对简单。一般来说聚合内部的功能都是核心的领域逻辑，是一些相对原子化的业务功能，受外部影响比较小。所以在微服务演进时可以以聚合为单元来进行微服务重组。","user_name":"作者回复","comment_id":142924,"uid":"1316268","ip_address":"","utype":1,"ctime":1571620866,"user_name_real":"渔"}],"discussion_count":1,"race_medal":0,"score":"27341391575","product_id":100037301,"comment_content":"关于两层边界，聚合虚边界，限界物理实边界，很有启发，也给我一直困惑的，如果一个业务领域中，有多个聚合根的情形下，更加清晰与更好的理解。","like_count":6,"discussions":[{"author":{"id":1316268,"avatar":"https://static001.geekbang.org/account/avatar/00/14/15/ac/ba1f2494.jpg","nickname":"欧创新","note":"","ucode":"1F5AF0A327197A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":471328,"discussion_content":"边界清晰了，以后微服务的演进就相对简单。一般来说聚合内部的功能都是核心的领域逻辑，是一些相对原子化的业务功能，受外部影响比较小。所以在微服务演进时可以以聚合为单元来进行微服务重组。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1571620866,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":141381,"user_name":"斯图尔特","can_delete":false,"product_type":"c1","uid":1200683,"ip_address":"","ucode":"F0F15A5CC7FBD0","user_header":"https://static001.geekbang.org/account/avatar/00/12/52/2b/3e42686d.jpg","comment_is_top":false,"comment_ctime":1571146415,"is_pvip":false,"replies":[{"id":"54634","content":"斯图尔特，你好。<br>领域模型里面都是一些领域对象，这些领域对象是构成系统的一些业务行为。你说的这些角色不知道是不是指系统建设过程中的角色。其实DDD并不改变原来软件开发过程中的角色，只是工作模式发生了变化，大家一起设计领域模型，设计微服务。领域专家是熟悉并深刻理解这个领域的人，可能是业务人员，也可能会是产品经理，甚至可能是开发人员。传统企业一般有信息和业务一说。业务人员一般是指业务部门的人员。","user_name":"作者回复","comment_id":141381,"uid":"1316268","ip_address":"","utype":1,"ctime":1571181267,"user_name_real":"渔"}],"discussion_count":1,"race_medal":0,"score":"27340950191","product_id":100037301,"comment_content":"这里提到的业务人员是指？还有领域专家。套用公司场景，一个做企业服务，tob的公司，有自己的产品。这个过程中，有客户的需求，有项目经理的梳理客户需求。有产品经理对系统的规划，有客户成功提交的使用优化。这个过程中参与人，客户，项目经理，产品经理，客户成功。人员参与，那这些人在DDD领域模型的角色是？","like_count":6,"discussions":[{"author":{"id":1316268,"avatar":"https://static001.geekbang.org/account/avatar/00/14/15/ac/ba1f2494.jpg","nickname":"欧创新","note":"","ucode":"1F5AF0A327197A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":470740,"discussion_content":"斯图尔特，你好。\n领域模型里面都是一些领域对象，这些领域对象是构成系统的一些业务行为。你说的这些角色不知道是不是指系统建设过程中的角色。其实DDD并不改变原来软件开发过程中的角色，只是工作模式发生了变化，大家一起设计领域模型，设计微服务。领域专家是熟悉并深刻理解这个领域的人，可能是业务人员，也可能会是产品经理，甚至可能是开发人员。传统企业一般有信息和业务一说。业务人员一般是指业务部门的人员。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1571181267,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":140888,"user_name":"KimZing","can_delete":false,"product_type":"c1","uid":1126442,"ip_address":"","ucode":"2E6854614BD92C","user_header":"https://static001.geekbang.org/account/avatar/00/11/30/2a/30354f00.jpg","comment_is_top":false,"comment_ctime":1571067276,"is_pvip":false,"replies":[{"id":"54515","content":"非常赞同！","user_name":"作者回复","comment_id":140888,"uid":"1316268","ip_address":"","utype":1,"ctime":1571090603,"user_name_real":"渔"}],"discussion_count":1,"race_medal":0,"score":"27340871052","product_id":100037301,"comment_content":"没有DDD的微服务是没有灵魂的，新瓶装旧酒","like_count":6,"discussions":[{"author":{"id":1316268,"avatar":"https://static001.geekbang.org/account/avatar/00/14/15/ac/ba1f2494.jpg","nickname":"欧创新","note":"","ucode":"1F5AF0A327197A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":470610,"discussion_content":"非常赞同！","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1571090603,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":150277,"user_name":"Edward","can_delete":false,"product_type":"c1","uid":1700143,"ip_address":"","ucode":"5813B9C06CDA99","user_header":"","comment_is_top":false,"comment_ctime":1573489553,"is_pvip":false,"replies":[{"id":"57814","content":"其实也可以说微服务是SOA的延续和升华。但是他们中间的最大区别就是集中式和去中心化。传统的SOA通常是靠ESB之类的服务总线来管理服务，靠人肉来管理。而微服务架构下会有很多的配套的自动化的管理组件以保证能够去中心化，比如服务注册发现，熔断等等Spring Cloud的那些功能组件，这样的话可以更适合分布式的架构模式以及敏捷的开发模式，也更适合云环境下的部署。而SOA无法做到这些。微服务和SOA架构的对比，网上资料应该有很多。","user_name":"作者回复","comment_id":150277,"uid":"1316268","ip_address":"","utype":1,"ctime":1573520858,"user_name_real":"渔"}],"discussion_count":1,"race_medal":0,"score":"23048326033","product_id":100037301,"comment_content":"老师 如何能够用比较通俗的语言来解释soa与微服务的差别。尤其是针对企业IT部门的中高层，他们一般是懂一些计算机原理和编程技术，但是对什么是soa和微服务分不开，都以为是一个事情的不同阶段。","like_count":5,"discussions":[{"author":{"id":1316268,"avatar":"https://static001.geekbang.org/account/avatar/00/14/15/ac/ba1f2494.jpg","nickname":"欧创新","note":"","ucode":"1F5AF0A327197A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":474113,"discussion_content":"其实也可以说微服务是SOA的延续和升华。但是他们中间的最大区别就是集中式和去中心化。传统的SOA通常是靠ESB之类的服务总线来管理服务，靠人肉来管理。而微服务架构下会有很多的配套的自动化的管理组件以保证能够去中心化，比如服务注册发现，熔断等等Spring Cloud的那些功能组件，这样的话可以更适合分布式的架构模式以及敏捷的开发模式，也更适合云环境下的部署。而SOA无法做到这些。微服务和SOA架构的对比，网上资料应该有很多。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1573520858,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":141183,"user_name":"john_zhang","can_delete":false,"product_type":"c1","uid":1044118,"ip_address":"","ucode":"C125B2CAA3040A","user_header":"https://static001.geekbang.org/account/avatar/00/0f/ee/96/dae024ff.jpg","comment_is_top":false,"comment_ctime":1571128016,"is_pvip":false,"replies":[{"id":"54610","content":"很多企业刚开始转型微服务的时候可能都有一个这样的过程。由于没有方法指导，还是在按照传统三层架构的模式做微服务，结果只是换了一套支持微服务的技术框架而已。DDD它是一个知识体系，就像一杯好茶，慢慢品，你就能品出其中的味道来。","user_name":"作者回复","comment_id":141183,"uid":"1316268","ip_address":"","utype":1,"ctime":1571142698,"user_name_real":"渔"}],"discussion_count":1,"race_medal":0,"score":"23045964496","product_id":100037301,"comment_content":"toB的企业系统，用了微服务，但是还是采用传统的业务流程方式来开发的，感觉都是为了微服务而微服务，希望通过学习后能对DDD有一定的了解，并能对现有的系统进行优化。","like_count":5,"discussions":[{"author":{"id":1316268,"avatar":"https://static001.geekbang.org/account/avatar/00/14/15/ac/ba1f2494.jpg","nickname":"欧创新","note":"","ucode":"1F5AF0A327197A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":470692,"discussion_content":"很多企业刚开始转型微服务的时候可能都有一个这样的过程。由于没有方法指导，还是在按照传统三层架构的模式做微服务，结果只是换了一套支持微服务的技术框架而已。DDD它是一个知识体系，就像一杯好茶，慢慢品，你就能品出其中的味道来。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1571142698,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":141473,"user_name":"刘晓帆","can_delete":false,"product_type":"c1","uid":1159908,"ip_address":"","ucode":"988495B820D8CC","user_header":"https://static001.geekbang.org/account/avatar/00/11/b2/e4/2c593d2f.jpg","comment_is_top":false,"comment_ctime":1571175486,"is_pvip":true,"replies":[{"id":"54661","content":"你好，刘晓帆。事件风暴对于初创系统的建设是非常合适的。通过事件风暴项目团队可以将所有的可能考虑到，这比一个人思考肯定会更全面更能统一思想。在领域建模和微服务设计时基于现状和不远的将来设计就可以了，但在微服务设计时一定要架构演进的可能，这种架构演进可以很快适应将来的业务发展。如何架构演进，我认为关键在于聚合以及代码边界的设计，在进行功能演进时可以很容易的解耦和进行代码的分离。","user_name":"作者回复","user_name_real":"渔","uid":"1316268","ctime":1571189567,"ip_address":"","comment_id":141473,"utype":1}],"discussion_count":1,"race_medal":0,"score":"18751044670","product_id":100037301,"comment_content":"要进行事件风暴，可以想象是已知信息越多、越全、越准，则越好。<br>但比如正处于创业初期，存在信息少、未知性多、需求功能少、多领域等情况。<br>在这样的情况下，老师建议是：<br>基于现状和不远的以后（比如一年内）来做事件风暴？<br>还是，尽可能发散到更远的来做事件风暴？","like_count":4,"discussions":[{"author":{"id":1316268,"avatar":"https://static001.geekbang.org/account/avatar/00/14/15/ac/ba1f2494.jpg","nickname":"欧创新","note":"","ucode":"1F5AF0A327197A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":470760,"discussion_content":"你好，刘晓帆。事件风暴对于初创系统的建设是非常合适的。通过事件风暴项目团队可以将所有的可能考虑到，这比一个人思考肯定会更全面更能统一思想。在领域建模和微服务设计时基于现状和不远的将来设计就可以了，但在微服务设计时一定要架构演进的可能，这种架构演进可以很快适应将来的业务发展。如何架构演进，我认为关键在于聚合以及代码边界的设计，在进行功能演进时可以很容易的解耦和进行代码的分离。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1571189567,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":141108,"user_name":"南山","can_delete":false,"product_type":"c1","uid":1119593,"ip_address":"","ucode":"94656FE4A6C378","user_header":"https://static001.geekbang.org/account/avatar/00/11/15/69/187b9968.jpg","comment_is_top":false,"comment_ctime":1571115586,"is_pvip":true,"replies":[{"id":"54583","content":"一起学习和进步哈。","user_name":"作者回复","user_name_real":"渔","uid":"1316268","ctime":1571118173,"ip_address":"","comment_id":141108,"utype":1}],"discussion_count":1,"race_medal":0,"score":"18750984770","product_id":100037301,"comment_content":"第一个接触ddd的服务是在leader带领下及自己恶补啃ddd砖头书的情况下完成的，收获就是有了点ddd的思想，但是现在对整体和细节都存在理解不清的地方。后面多结合老师的课做回顾和请教~","like_count":4,"discussions":[{"author":{"id":1316268,"avatar":"https://static001.geekbang.org/account/avatar/00/14/15/ac/ba1f2494.jpg","nickname":"欧创新","note":"","ucode":"1F5AF0A327197A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":470672,"discussion_content":"一起学习和进步哈。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1571118173,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":141063,"user_name":"杨杰","can_delete":false,"product_type":"c1","uid":1131823,"ip_address":"","ucode":"74817EA9499843","user_header":"https://static001.geekbang.org/account/avatar/00/11/45/2f/b0b0dd74.jpg","comment_is_top":false,"comment_ctime":1571108265,"is_pvip":false,"replies":[{"id":"54574","content":"如果边界清晰的话，拆分后发现不合理，代码也可以很快重构和演进的。这个在建立代码目录的时候比较有技巧。","user_name":"作者回复","user_name_real":"渔","uid":"1316268","ctime":1571116270,"ip_address":"","comment_id":141063,"utype":1}],"discussion_count":2,"race_medal":0,"score":"18750977449","product_id":100037301,"comment_content":"最大的问题就是拆分没有固定标准，有的时候觉得这样分合理那样分也可以","like_count":4,"discussions":[{"author":{"id":1316268,"avatar":"https://static001.geekbang.org/account/avatar/00/14/15/ac/ba1f2494.jpg","nickname":"欧创新","note":"","ucode":"1F5AF0A327197A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":470660,"discussion_content":"如果边界清晰的话，拆分后发现不合理，代码也可以很快重构和演进的。这个在建立代码目录的时候比较有技巧。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1571116270,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1078280,"avatar":"https://static001.geekbang.org/account/avatar/00/10/74/08/aa2a9f36.jpg","nickname":"tomcat","note":"","ucode":"1929E1028414F6","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":390286,"discussion_content":"这个问题提的特别好，非常赞同","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1629763271,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":180233,"user_name":"谭方敏","can_delete":false,"product_type":"c1","uid":1710960,"ip_address":"","ucode":"728DC7ECB7C902","user_header":"https://static001.geekbang.org/account/avatar/00/1a/1b/70/547042ee.jpg","comment_is_top":false,"comment_ctime":1582214293,"is_pvip":false,"replies":[{"id":"70000","content":"你说的这种情况很普遍。其实中台建设更多的是偏业务和组织上的变化。技术只是支撑手段，很多公司可能还在按照三层集中式架构的方式在做微服务的开发，这样开发出来的应用还是紧耦合的架构，不太适应分布式架构的各种场景。所以做中台还需要在思想上有很多的变化，后面的章节我会讲如何来做中台的微服务设计，希望能对你有帮助。","user_name":"作者回复","user_name_real":"渔","uid":"1316268","ctime":1582247337,"ip_address":"","comment_id":180233,"utype":1}],"discussion_count":1,"race_medal":0,"score":"14467116181","product_id":100037301,"comment_content":"公司目前在实施微服务，最大的问题是公司没有针对业务流程进行梳理，更加谈不上用DDD，他们的关注点就没离开过spring cloud全家桶，他们把公司业务中台转型建设只理解为技术升级，而非业务流程，数据再融合，数据壁垒再打通。。。。","like_count":3,"discussions":[{"author":{"id":1316268,"avatar":"https://static001.geekbang.org/account/avatar/00/14/15/ac/ba1f2494.jpg","nickname":"欧创新","note":"","ucode":"1F5AF0A327197A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":484576,"discussion_content":"你说的这种情况很普遍。其实中台建设更多的是偏业务和组织上的变化。技术只是支撑手段，很多公司可能还在按照三层集中式架构的方式在做微服务的开发，这样开发出来的应用还是紧耦合的架构，不太适应分布式架构的各种场景。所以做中台还需要在思想上有很多的变化，后面的章节我会讲如何来做中台的微服务设计，希望能对你有帮助。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1582247337,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":145735,"user_name":"悟","can_delete":false,"product_type":"c1","uid":1085006,"ip_address":"","ucode":"9F56AD21CCC7E1","user_header":"https://static001.geekbang.org/account/avatar/00/10/8e/4e/985caf6b.jpg","comment_is_top":false,"comment_ctime":1572356686,"is_pvip":false,"replies":[{"id":"56275","content":"我感觉这些方面还存在短板，也谈不上劣势。<br>第一是不好量化，有些地方要凭领域经验。<br>第二是开发体系还缺少一些配套工具的支持，让开发人员不需要太理解DDD也可以快速完成开发，这样推广起来也容易一下。","user_name":"作者回复","user_name_real":"渔","uid":"1316268","ctime":1572391979,"ip_address":"","comment_id":145735,"utype":1}],"discussion_count":4,"race_medal":2,"score":"14457258574","product_id":100037301,"comment_content":"老师您好，DDD的劣势有哪些呢？","like_count":3,"discussions":[{"author":{"id":1316268,"avatar":"https://static001.geekbang.org/account/avatar/00/14/15/ac/ba1f2494.jpg","nickname":"欧创新","note":"","ucode":"1F5AF0A327197A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":472551,"discussion_content":"我感觉这些方面还存在短板，也谈不上劣势。\n第一是不好量化，有些地方要凭领域经验。\n第二是开发体系还缺少一些配套工具的支持，让开发人员不需要太理解DDD也可以快速完成开发，这样推广起来也容易一下。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1572391979,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1078280,"avatar":"https://static001.geekbang.org/account/avatar/00/10/74/08/aa2a9f36.jpg","nickname":"tomcat","note":"","ucode":"1929E1028414F6","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":390284,"discussion_content":"怎么判定产出的领域模型是合理的，这是一个问题","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1629762376,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1600042,"avatar":"https://static001.geekbang.org/account/avatar/00/18/6a/2a/ac8cba27.jpg","nickname":"Ethan","note":"","ucode":"4F0A8CDDB50F66","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":366974,"discussion_content":"目前关于DDD理论知识的最佳实践框架在.net这边已经有了（ASP.NET Core）；中小型ABP,高并发的国内大佬汤雪华写的ENode都是不错的，对于微服务了解不是很深所以还不清楚.","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1618228585,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1085006,"avatar":"https://static001.geekbang.org/account/avatar/00/10/8e/4e/985caf6b.jpg","nickname":"悟","note":"","ucode":"9F56AD21CCC7E1","race_medal":2,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":41618,"discussion_content":"谢谢老师解答","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1572480514,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":141158,"user_name":"蒋宇翔","can_delete":false,"product_type":"c1","uid":1665400,"ip_address":"","ucode":"46E1EC4A7CD1D3","user_header":"https://static001.geekbang.org/account/avatar/00/19/69/78/b75b68e5.jpg","comment_is_top":false,"comment_ctime":1571125581,"is_pvip":false,"replies":[{"id":"54587","content":"DDD的方式是项目团队和领域专家，一起来做事件风暴建立领域模型，然后再设计微服务。工作方式会有点不一样哦。","user_name":"作者回复","user_name_real":"渔","uid":"1316268","ctime":1571127898,"ip_address":"","comment_id":141158,"utype":1}],"discussion_count":2,"race_medal":0,"score":"14456027469","product_id":100037301,"comment_content":"“比如，在系统建设过程中，我们经常会看到这样的情形：A 负责提出需求，B 负责需求分析，C 负责系统设计，D 负责代码实现...”难道不是很正常的吗？莫非一个人能全搞定？","like_count":3,"discussions":[{"author":{"id":1316268,"avatar":"https://static001.geekbang.org/account/avatar/00/14/15/ac/ba1f2494.jpg","nickname":"欧创新","note":"","ucode":"1F5AF0A327197A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":470685,"discussion_content":"DDD的方式是项目团队和领域专家，一起来做事件风暴建立领域模型，然后再设计微服务。工作方式会有点不一样哦。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1571127898,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1437292,"avatar":"https://static001.geekbang.org/account/avatar/00/15/ee/6c/246fa0d1.jpg","nickname":"Mr.差不多","note":"","ucode":"946555FCAE710B","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":338786,"discussion_content":"我觉得A->B->C->D 这样串行下来，很有可能造成信息丢失，或者有人理解不一致，导致信息传输错误。所以我觉得事件风暴的唯一作用就是让大家一起讨论，达成共识。重要的是这个共识问题。","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1609381741,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":140788,"user_name":"瓜瓜","can_delete":false,"product_type":"c1","uid":1053853,"ip_address":"","ucode":"2E98377E48399E","user_header":"https://static001.geekbang.org/account/avatar/00/10/14/9d/19dcdd42.jpg","comment_is_top":false,"comment_ctime":1571049091,"is_pvip":false,"replies":[{"id":"54494","content":"希望能对你有帮助。","user_name":"作者回复","user_name_real":"渔","uid":"1316268","ctime":1571064241,"ip_address":"","comment_id":140788,"utype":1}],"discussion_count":1,"race_medal":0,"score":"14455950979","product_id":100037301,"comment_content":"如何用DDD解决复杂业务的架构问题，一直在等这方面的相关课题","like_count":3,"discussions":[{"author":{"id":1316268,"avatar":"https://static001.geekbang.org/account/avatar/00/14/15/ac/ba1f2494.jpg","nickname":"欧创新","note":"","ucode":"1F5AF0A327197A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":470557,"discussion_content":"希望能对你有帮助。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1571064241,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":257844,"user_name":"风","can_delete":false,"product_type":"c1","uid":1077538,"ip_address":"","ucode":"104638BF19B048","user_header":"https://static001.geekbang.org/account/avatar/00/10/71/22/b8c596b6.jpg","comment_is_top":false,"comment_ctime":1604153348,"is_pvip":false,"replies":[{"id":"94083","content":"推行DDD建议在整个企业内部考虑，至少是在一个完整的业务领域，如果在您的项目中早已经明确了应用功能范围，也就是确定了应用的业务领域边界，这样也就缺少了DDD战略设计。应用设计不是从业务领域边界划分开始，然后再进行微服务边界拆分和设计。<br>如果没有DDD战略设计，你们这种情况就只能从战术设计开始了，可以在应用中完成聚合和实体等设计，但是这种战术设计就没有业务整体的概念。<br>建议你们在企业内慢慢培养DDD文化，先从几个核心领域开始按照DDD方式进行应用设计，让领导看到价值后再慢慢推广到其它领域。","user_name":"作者回复","user_name_real":"欧创新","uid":"1316268","ctime":1604392913,"ip_address":"","comment_id":257844,"utype":1}],"discussion_count":1,"race_medal":0,"score":"10194087940","product_id":100037301,"comment_content":"我们是采用微服务模式进行系统的建设，我们现在是业务驱动开发，我们的每个服务都是独立的涉及业务的相关方面，存在重复性开发，这就是最大的问题。<br>在系统建设中出现工期紧的情况，没有多余的时间去划分业务域，抽象核心能力，分析之间的限界上下文怎么办？<br>我们是每个季度第一个月稍微轻松点，第二个月赶进度，第三个月上线如此往复，一个人负责多个系统，项目一般需求分析、系统设计、开发都是一个人，平时还要运维并开发新的功能需求，想要推行DDD，我们这种状况有什么好的建议吗？","like_count":2,"discussions":[{"author":{"id":1316268,"avatar":"https://static001.geekbang.org/account/avatar/00/14/15/ac/ba1f2494.jpg","nickname":"欧创新","note":"","ucode":"1F5AF0A327197A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":508470,"discussion_content":"推行DDD建议在整个企业内部考虑，至少是在一个完整的业务领域，如果在您的项目中早已经明确了应用功能范围，也就是确定了应用的业务领域边界，这样也就缺少了DDD战略设计。应用设计不是从业务领域边界划分开始，然后再进行微服务边界拆分和设计。\n如果没有DDD战略设计，你们这种情况就只能从战术设计开始了，可以在应用中完成聚合和实体等设计，但是这种战术设计就没有业务整体的概念。\n建议你们在企业内慢慢培养DDD文化，先从几个核心领域开始按照DDD方式进行应用设计，让领导看到价值后再慢慢推广到其它领域。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1604392913,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":252428,"user_name":"阿耿","can_delete":false,"product_type":"c1","uid":2136347,"ip_address":"","ucode":"4622A91F40533B","user_header":"https://static001.geekbang.org/account/avatar/00/20/99/1b/e924f17f.jpg","comment_is_top":false,"comment_ctime":1602298861,"is_pvip":false,"replies":[{"id":"92199","content":"软件系统的架构通常需要包含以下四类核心要素：<br>1、元素（elements）：将系统拆分为一组元素 - 模块、组件、结构体、子系统；<br>2、关系（relationships）：不同元素之间的关系 - 交互、依赖 、继承、组合、聚合；<br>3、属性（properties）：每个元素具备的属性 - 名称、职责、接口、实现限制等；<br>4、原理（principles）：为什么这么设计 - 拆分依据、设计原则、决策原因等。<br>组件属于架构的一部分，一般来说，组件内的功能相对固定也比较稳定，我们在做企业集成的时候可能并不关心这个功能相对闭合的组件。而是通过类似分层（如BFF等）或者接口等架构定义来实现企业级多组件应用的集成，构建企业级应用。","user_name":"作者回复","user_name_real":"欧创新","uid":"1316268","ctime":1602318869,"ip_address":"","comment_id":252428,"utype":1}],"discussion_count":1,"race_medal":0,"score":"10192233453","product_id":100037301,"comment_content":"复杂系统集成的关键，是基于架构（或体系）的集成，而不是基于部件（或组件）的集成，这句话老师是怎么理解的，我理解一个软件难道不是由各个组件构成的吗，基于架构的集成是什么概念","like_count":2,"discussions":[{"author":{"id":1316268,"avatar":"https://static001.geekbang.org/account/avatar/00/14/15/ac/ba1f2494.jpg","nickname":"欧创新","note":"","ucode":"1F5AF0A327197A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":506772,"discussion_content":"软件系统的架构通常需要包含以下四类核心要素：\n1、元素（elements）：将系统拆分为一组元素 - 模块、组件、结构体、子系统；\n2、关系（relationships）：不同元素之间的关系 - 交互、依赖 、继承、组合、聚合；\n3、属性（properties）：每个元素具备的属性 - 名称、职责、接口、实现限制等；\n4、原理（principles）：为什么这么设计 - 拆分依据、设计原则、决策原因等。\n组件属于架构的一部分，一般来说，组件内的功能相对固定也比较稳定，我们在做企业集成的时候可能并不关心这个功能相对闭合的组件。而是通过类似分层（如BFF等）或者接口等架构定义来实现企业级多组件应用的集成，构建企业级应用。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1602318869,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":199950,"user_name":"Geek_e7cb46","can_delete":false,"product_type":"c1","uid":1913211,"ip_address":"","ucode":"ABE875A37299EB","user_header":"","comment_is_top":false,"comment_ctime":1585508058,"is_pvip":false,"replies":[{"id":"74918","content":"同意。","user_name":"作者回复","user_name_real":"渔","uid":"1316268","ctime":1585549089,"ip_address":"","comment_id":199950,"utype":1}],"discussion_count":2,"race_medal":0,"score":"10175442650","product_id":100037301,"comment_content":"领域驱动设计理念在微服务大行其道的今天被再次提及，其实该设计理念在软件设计的远古时代就已经存在。架构设计方案在面向各规模企业时，基于业务的成熟度和公司的发展方向，着实应遵循康威定律的演进而进行选型。从孵化型到发展型再到成熟型的架构体系，领域驱动在架构演化道路上力求技术人员少走不必要的弯路，ORM层选型是，RPC的报文选型也是，前阵子炒得火热的中台依然是。再说说TDD，倘若没在DDD基础上，设计各系统层级的mock测试，“代码即服务”硬是架在贫血模型之上，可能也会不够稳当。DDD不是银弹，诚然，只是说这话时，大家都能感受到的心酸……","like_count":2,"discussions":[{"author":{"id":1316268,"avatar":"https://static001.geekbang.org/account/avatar/00/14/15/ac/ba1f2494.jpg","nickname":"欧创新","note":"","ucode":"1F5AF0A327197A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":489902,"discussion_content":"同意。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1585549089,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":2586162,"avatar":"https://static001.geekbang.org/account/avatar/00/27/76/32/a50b79e5.jpg","nickname":"richard","note":"","ucode":"17C3AFA5669FEA","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":380787,"discussion_content":"ddd不是银弹","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1624697321,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":146241,"user_name":"jaryoung","can_delete":false,"product_type":"c1","uid":1077406,"ip_address":"","ucode":"6E72D107DB7E51","user_header":"https://static001.geekbang.org/account/avatar/00/10/70/9e/5095f881.jpg","comment_is_top":false,"comment_ctime":1572482855,"is_pvip":false,"replies":[{"id":"56453","content":"单机和集中式架构由于系统庞大，同时大量的需求都会集中到这个系统，改一个地方就可能会影响到整个系统，整个系统的开发迭代周期很长，测试周期也长，很难实现敏捷开发。大型系统正常版本的发版周期多则三个月，最少也得一个月。而微服务架构的功能边界相对清晰，微服务之间的相互影响较小，可以快速迭代，快速发版。","user_name":"作者回复","user_name_real":"渔","uid":"1316268","ctime":1572485852,"ip_address":"","comment_id":146241,"utype":1}],"discussion_count":5,"race_medal":0,"score":"10162417447","product_id":100037301,"comment_content":"在单机和集中式架构这两种模式下，软件无法快速响应需求和业务的迅速变化，最终错失发展良机。我觉得响应需求和业务变化，没有关系吧。求解释一下。","like_count":2,"discussions":[{"author":{"id":1316268,"avatar":"https://static001.geekbang.org/account/avatar/00/14/15/ac/ba1f2494.jpg","nickname":"欧创新","note":"","ucode":"1F5AF0A327197A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":472765,"discussion_content":"单机和集中式架构由于系统庞大，同时大量的需求都会集中到这个系统，改一个地方就可能会影响到整个系统，整个系统的开发迭代周期很长，测试周期也长，很难实现敏捷开发。大型系统正常版本的发版周期多则三个月，最少也得一个月。而微服务架构的功能边界相对清晰，微服务之间的相互影响较小，可以快速迭代，快速发版。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1572485852,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1030118,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/b7/e6/50532ede.jpg","nickname":"阿金","note":"","ucode":"AA8B62C48DBD4C","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":334055,"discussion_content":"微服务的集成测试，ui测试，版本控制依赖，链路追踪，数据冗余，数据同步，跨部门团队交流，部署运维等都比集中式复杂度高。很多业务试错等不了基础设施完善就已经黄了。这个问题怎么解决或思考呢？","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1607710165,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1438475,"avatar":"https://static001.geekbang.org/account/avatar/00/15/f3/0b/4560079e.jpg","nickname":"王宇","note":"","ucode":"0E9BC3AD99C8E5","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":183592,"discussion_content":"我们一天好几个版本…当你觉得发版不方便时多多少少会思考点什么","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1582504058,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1316268,"avatar":"https://static001.geekbang.org/account/avatar/00/14/15/ac/ba1f2494.jpg","nickname":"欧创新","note":"","ucode":"1F5AF0A327197A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":43102,"discussion_content":"是的，适合自己的才是最好的。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1572855414,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1077406,"avatar":"https://static001.geekbang.org/account/avatar/00/10/70/9e/5095f881.jpg","nickname":"jaryoung","note":"","ucode":"6E72D107DB7E51","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":42550,"discussion_content":"单体应用是不是也可以通过其他方式隔离，例如模块隔离等。不过单体应用的确存在牵一发而动全身的。其实我觉得是否需要微服务，需要根据项目的本身的情况去考虑，例如场景单一，后期不打算平台化等等，也是可以先使用单体，后期再过渡到微服务对吧？","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1572695778,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":145678,"user_name":"acupple","can_delete":false,"product_type":"c1","uid":1086927,"ip_address":"","ucode":"D3E908E2EB59B1","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTJByKiaE1TUInTDdemFvJib3s1iahmYWGddf4R9bFRlPRI5hPP70DhqhNN2gJEKj2njIX7g0ULHg8Ojw/132","comment_is_top":false,"comment_ctime":1572342506,"is_pvip":false,"replies":[{"id":"56252","content":"我是用visio硬画的，😄","user_name":"作者回复","user_name_real":"渔","uid":"1316268","ctime":1572352762,"ip_address":"","comment_id":145678,"utype":1}],"discussion_count":2,"race_medal":0,"score":"10162277098","product_id":100037301,"comment_content":"老师你好，有什么比较好用的画图软件吗？推荐一下","like_count":2,"discussions":[{"author":{"id":1316268,"avatar":"https://static001.geekbang.org/account/avatar/00/14/15/ac/ba1f2494.jpg","nickname":"欧创新","note":"","ucode":"1F5AF0A327197A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":472524,"discussion_content":"我是用visio硬画的，😄","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1572352762,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1959822,"avatar":"https://static001.geekbang.org/account/avatar/00/1d/e7/8e/318cfde0.jpg","nickname":"Spoon","note":"","ucode":"2FF9193AD482C2","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":377841,"discussion_content":"plantuml","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1622901009,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":145026,"user_name":"Bug Killer","can_delete":false,"product_type":"c1","uid":1186089,"ip_address":"","ucode":"2741A206F504E1","user_header":"https://static001.geekbang.org/account/avatar/00/12/19/29/4a8214b7.jpg","comment_is_top":false,"comment_ctime":1572164434,"is_pvip":false,"replies":[{"id":"55901","content":"DDD讲究业务和技术的融合，领域专家和项目团队一起完成战略设计，也就是领域模型的设计，然后项目团队一起完成战术设计，也就是微服务的设计。设计过程会将领域模型和微服务的系统和代码模型建立映射关系。","user_name":"作者回复","user_name_real":"渔","uid":"1316268","ctime":1572165533,"ip_address":"","comment_id":145026,"utype":1}],"discussion_count":1,"race_medal":0,"score":"10162099026","product_id":100037301,"comment_content":"DDD主要包括战略设计和技术设计。战略设计主要从业务的角度出去，设计出领域模型。（这个是需求人员设计的吗？），技术设计就是技术人员根据这些领域模型进行相关的编码和业务逻辑的实现吧？","like_count":2,"discussions":[{"author":{"id":1316268,"avatar":"https://static001.geekbang.org/account/avatar/00/14/15/ac/ba1f2494.jpg","nickname":"欧创新","note":"","ucode":"1F5AF0A327197A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":472218,"discussion_content":"DDD讲究业务和技术的融合，领域专家和项目团队一起完成战略设计，也就是领域模型的设计，然后项目团队一起完成战术设计，也就是微服务的设计。设计过程会将领域模型和微服务的系统和代码模型建立映射关系。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1572165533,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":142997,"user_name":"白开水有三种味道","can_delete":false,"product_type":"c1","uid":1678696,"ip_address":"","ucode":"5706E8C4D284D6","user_header":"https://static001.geekbang.org/account/avatar/00/19/9d/68/75e6f912.jpg","comment_is_top":false,"comment_ctime":1571618012,"is_pvip":false,"replies":[{"id":"55244","content":"后面会有详细案例介绍的。还有专门的中台和微服务设计案例介绍，请耐心等待。","user_name":"作者回复","user_name_real":"渔","uid":"1316268","ctime":1571620083,"ip_address":"","comment_id":142997,"utype":1}],"discussion_count":1,"race_medal":0,"score":"10161552604","product_id":100037301,"comment_content":"不是技术人员听的有些干涩，如值，跟，聚合，再讲这些技术名词时如果能配合着案例讲就更好了","like_count":2,"discussions":[{"author":{"id":1316268,"avatar":"https://static001.geekbang.org/account/avatar/00/14/15/ac/ba1f2494.jpg","nickname":"欧创新","note":"","ucode":"1F5AF0A327197A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":471347,"discussion_content":"后面会有详细案例介绍的。还有专门的中台和微服务设计案例介绍，请耐心等待。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1571620083,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":142788,"user_name":"咸鱼大翻身","can_delete":false,"product_type":"c1","uid":1348979,"ip_address":"","ucode":"564B3A7E38F24D","user_header":"https://static001.geekbang.org/account/avatar/00/14/95/73/084e9794.jpg","comment_is_top":false,"comment_ctime":1571532101,"is_pvip":false,"replies":[{"id":"55188","content":"很快就到了，耐心等待哈。","user_name":"作者回复","user_name_real":"渔","uid":"1316268","ctime":1571537230,"ip_address":"","comment_id":142788,"utype":1}],"discussion_count":1,"race_medal":0,"score":"10161466693","product_id":100037301,"comment_content":"公司最近也在准备对已有的业务拆分业务领域，希望作者能早点讲实战，对于这块特别是事件风暴方法","like_count":2,"discussions":[{"author":{"id":1316268,"avatar":"https://static001.geekbang.org/account/avatar/00/14/15/ac/ba1f2494.jpg","nickname":"欧创新","note":"","ucode":"1F5AF0A327197A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":471270,"discussion_content":"很快就到了，耐心等待哈。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1571537230,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":141073,"user_name":"杨杰","can_delete":false,"product_type":"c1","uid":1131823,"ip_address":"","ucode":"74817EA9499843","user_header":"https://static001.geekbang.org/account/avatar/00/11/45/2f/b0b0dd74.jpg","comment_is_top":false,"comment_ctime":1571109686,"is_pvip":false,"replies":[{"id":"54573","content":"是的，有场景甚至找不到聚合根哈。有些原则可以坚持，最终以解决实际问题为最佳。","user_name":"作者回复","user_name_real":"渔","uid":"1316268","ctime":1571116021,"ip_address":"","comment_id":141073,"utype":1}],"discussion_count":2,"race_medal":0,"score":"10161044278","product_id":100037301,"comment_content":"在实际操作的时候感觉聚合根这个挺难控制的，虽然有延迟加载，但是在实际操作的过程中感觉还是担心性能或数据一致性的问题，团队对聚合跟的认识很难统一。我们在做微服务落地的时候，把聚合根给取消了","like_count":2,"discussions":[{"author":{"id":1316268,"avatar":"https://static001.geekbang.org/account/avatar/00/14/15/ac/ba1f2494.jpg","nickname":"欧创新","note":"","ucode":"1F5AF0A327197A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":470664,"discussion_content":"是的，有场景甚至找不到聚合根哈。有些原则可以坚持，最终以解决实际问题为最佳。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1571116021,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1438475,"avatar":"https://static001.geekbang.org/account/avatar/00/15/f3/0b/4560079e.jpg","nickname":"王宇","note":"","ucode":"0E9BC3AD99C8E5","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":183595,"discussion_content":"团队一致认同得概念作为边界，落地后不行就重构…","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1582504335,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":140862,"user_name":"酆友鹏","can_delete":false,"product_type":"c1","uid":1070648,"ip_address":"","ucode":"9E0D79E6383175","user_header":"https://static001.geekbang.org/account/avatar/00/10/56/38/86be51be.jpg","comment_is_top":false,"comment_ctime":1571062504,"is_pvip":false,"replies":[{"id":"54473","content":"专栏里面会有详细的过程介绍，先理解概念，然后学会怎么用事件风暴建立领域模型，根据领域模型来设计微服务。等着后面的实战篇哈。","user_name":"作者回复","user_name_real":"渔","uid":"1316268","ctime":1571063086,"ip_address":"","comment_id":140862,"utype":1}],"discussion_count":1,"race_medal":0,"score":"10160997096","product_id":100037301,"comment_content":"听说过，一直不知道怎么去实践DDD","like_count":2,"discussions":[{"author":{"id":1316268,"avatar":"https://static001.geekbang.org/account/avatar/00/14/15/ac/ba1f2494.jpg","nickname":"欧创新","note":"","ucode":"1F5AF0A327197A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":470599,"discussion_content":"专栏里面会有详细的过程介绍，先理解概念，然后学会怎么用事件风暴建立领域模型，根据领域模型来设计微服务。等着后面的实战篇哈。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1571063086,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":140812,"user_name":"Leiy","can_delete":false,"product_type":"c1","uid":1009001,"ip_address":"","ucode":"BE812F95D6089E","user_header":"https://static001.geekbang.org/account/avatar/00/0f/65/69/efb57b83.jpg","comment_is_top":false,"comment_ctime":1571052306,"is_pvip":true,"replies":[{"id":"54484","content":"很多的时候领域的细分会根据业务流程阶段或者模块功能，这两个方面业务有很好的内聚性，很可能就对应到了子域。如果领域实在太大，你可以考虑将它分成小的领域，然后在这小的领域中去做事件风暴，划分限界上下文，并确定哪些聚合放在哪个限界上下文里，这里领域专家会起到比较大的作用。不过建立领域模型后，你还需要看看其它子域是否有重叠的内容，如果有的话，还需要对领域模型重组。","user_name":"作者回复","user_name_real":"渔","uid":"1316268","ctime":1571063796,"ip_address":"","comment_id":140812,"utype":1}],"discussion_count":2,"race_medal":0,"score":"10160986898","product_id":100037301,"comment_content":"在开始微服务拆分的过程中，碰到两个问题:<br>1.项目组开发人员对业务的理解不同，对于有些聚合是放在哪个限界上下文中会产生分歧<br>2.对于一个庞大古老系统，拆分是开始时候就拆分的较细，还是先拆分两个核心业务域，后面再逐步拆分","like_count":2,"discussions":[{"author":{"id":1316268,"avatar":"https://static001.geekbang.org/account/avatar/00/14/15/ac/ba1f2494.jpg","nickname":"欧创新","note":"","ucode":"1F5AF0A327197A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":470573,"discussion_content":"很多的时候领域的细分会根据业务流程阶段或者模块功能，这两个方面业务有很好的内聚性，很可能就对应到了子域。如果领域实在太大，你可以考虑将它分成小的领域，然后在这小的领域中去做事件风暴，划分限界上下文，并确定哪些聚合放在哪个限界上下文里，这里领域专家会起到比较大的作用。不过建立领域模型后，你还需要看看其它子域是否有重叠的内容，如果有的话，还需要对领域模型重组。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1571063796,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1316268,"avatar":"https://static001.geekbang.org/account/avatar/00/14/15/ac/ba1f2494.jpg","nickname":"欧创新","note":"","ucode":"1F5AF0A327197A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":32820,"discussion_content":"很多的时候拆分可能会根据业务流程阶段或者模块功能，这两个方面很可能就对应到子域。如果领域实在太大，你可以考虑将它分成小的领域，然后在这小的领域中去做事件风暴，划分限界上下文，并确定哪些聚合放在哪个限界上下文里，这里领域专家会起到比较大的作用。不过建立领域模型后，你还需要看看其它子域是否有重叠的内容，如果有的话，还需要对领域模型重组。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1571062592,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":140797,"user_name":"Albert🐎","can_delete":false,"product_type":"c1","uid":1041879,"ip_address":"","ucode":"48CF4C1211A3E8","user_header":"https://static001.geekbang.org/account/avatar/00/0f/e5/d7/d48f6b04.jpg","comment_is_top":false,"comment_ctime":1571050190,"is_pvip":false,"replies":[{"id":"54489","content":"我们需要培育一个做DDD的环境，让更多的业务人员加入进来，让开发人员能理解DDD的设计理念。","user_name":"作者回复","user_name_real":"渔","uid":"1316268","ctime":1571064016,"ip_address":"","comment_id":140797,"utype":1}],"discussion_count":1,"race_medal":0,"score":"10160984782","product_id":100037301,"comment_content":"虽然我们知道，但是很多工程师不知道，很多产品经理也不知道。","like_count":2,"discussions":[{"author":{"id":1316268,"avatar":"https://static001.geekbang.org/account/avatar/00/14/15/ac/ba1f2494.jpg","nickname":"欧创新","note":"","ucode":"1F5AF0A327197A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":470565,"discussion_content":"我们需要培育一个做DDD的环境，让更多的业务人员加入进来，让开发人员能理解DDD的设计理念。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1571064016,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":140782,"user_name":"　素丶　　","can_delete":false,"product_type":"c1","uid":1081535,"ip_address":"","ucode":"883B7EDBE76104","user_header":"https://static001.geekbang.org/account/avatar/00/10/80/bf/3041138b.jpg","comment_is_top":false,"comment_ctime":1571048005,"is_pvip":false,"replies":[{"id":"54499","content":"姗姗来迟～莫怪莫怪！","user_name":"编辑回复","user_name_real":"王冬青","uid":"1356014","ctime":1571068923,"ip_address":"","comment_id":140782,"utype":2}],"discussion_count":1,"race_medal":0,"score":"10160982597","product_id":100037301,"comment_content":"同等一年","like_count":2,"discussions":[{"author":{"id":1356014,"avatar":"https://static001.geekbang.org/account/avatar/00/14/b0/ee/d0871efd.jpg","nickname":"冬青","note":"","ucode":"14576781B499FB","race_medal":0,"user_type":8,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":470554,"discussion_content":"姗姗来迟～莫怪莫怪！","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1571068923,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":4}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":272405,"user_name":"业余爱好者","can_delete":false,"product_type":"c1","uid":1482915,"ip_address":"","ucode":"A890935A982988","user_header":"https://static001.geekbang.org/account/avatar/00/16/a0/a3/8da99bb0.jpg","comment_is_top":false,"comment_ctime":1610081176,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"5905048472","product_id":100037301,"comment_content":"软件架构的演化动力是业务逻辑的日趋复杂化。对于复杂事物人类唯一的应对方式就是分而治之。ddd,分层，orm等各种架构或设计都是一种拆分手段，只是视角不同罢了。<br><br>有了这个抽象的解决方案，面临具体问题时的关注点就是--如何拆分?这是一个技术层面的问题。如果你给了拆分方案也并非万事大吉，你还要回答你为什么这么拆而不是以其它方式。不同的方式之间如果是互斥的话就需要取舍，取舍标准是你的系统的核心关注点。","like_count":1},{"had_liked":false,"id":271098,"user_name":"钟hao","can_delete":false,"product_type":"c1","uid":2399617,"ip_address":"","ucode":"3C7399C4DA52E9","user_header":"https://static001.geekbang.org/account/avatar/00/24/9d/81/085ae5fa.jpg","comment_is_top":false,"comment_ctime":1609399271,"is_pvip":false,"replies":[{"id":"98689","content":"其实DDD的核心还是在战略设计，划分限界上下文，完成领域建模，然后开始微服务设计。而在战术设计方面，最早的DDD并没有详细的落地方法，所以在落地的时候每个人的思路都不一样，有的采用DDD分层架构，有的采用端口适配器架构，有的采用整洁架构。不管采用什么样的方式来落地，其实抓住DDD的核心思想就可以了，将领域模型放在最重要的位置。当然建立领域模型的过程目前主流的方法是事件风暴，可能还需要有一个慢慢接受和适应的过程。","user_name":"作者回复","user_name_real":"欧创新","uid":"1316268","ctime":1609985426,"ip_address":"","comment_id":271098,"utype":1}],"discussion_count":2,"race_medal":0,"score":"5904366567","product_id":100037301,"comment_content":"事件风暴感觉很难实施落地，要打破常规的思维逻辑和流程，除非你是ld，不然还是太难了，倒是DDD可以应用到实际的开发模式中去，DDD是定义了一套完整的开发流程，微服务个人认为也是DDD的一种演变","like_count":1,"discussions":[{"author":{"id":1316268,"avatar":"https://static001.geekbang.org/account/avatar/00/14/15/ac/ba1f2494.jpg","nickname":"欧创新","note":"","ucode":"1F5AF0A327197A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":512840,"discussion_content":"其实DDD的核心还是在战略设计，划分限界上下文，完成领域建模，然后开始微服务设计。而在战术设计方面，最早的DDD并没有详细的落地方法，所以在落地的时候每个人的思路都不一样，有的采用DDD分层架构，有的采用端口适配器架构，有的采用整洁架构。不管采用什么样的方式来落地，其实抓住DDD的核心思想就可以了，将领域模型放在最重要的位置。当然建立领域模型的过程目前主流的方法是事件风暴，可能还需要有一个慢慢接受和适应的过程。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1609985426,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1078280,"avatar":"https://static001.geekbang.org/account/avatar/00/10/74/08/aa2a9f36.jpg","nickname":"tomcat","note":"","ucode":"1929E1028414F6","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":390287,"discussion_content":"舍本逐末，买椟还珠","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1629763513,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":190678,"user_name":"何磊","can_delete":false,"product_type":"c1","uid":1047604,"ip_address":"","ucode":"78934C3ED4A342","user_header":"https://static001.geekbang.org/account/avatar/00/0f/fc/34/c733b116.jpg","comment_is_top":false,"comment_ctime":1584680938,"is_pvip":false,"replies":[{"id":"73297","content":"其实在DDD的分层架构里面，应用层已经做了大部分的微服务内部不同聚合之间的服务的组合和编排，被BFF编排的服务主要是跨微服务的一些编排和调用，这种对接成本有，但是已经减轻了很多了。","user_name":"作者回复","user_name_real":"渔","uid":"1316268","ctime":1584689525,"ip_address":"","comment_id":190678,"utype":1}],"discussion_count":1,"race_medal":0,"score":"5879648234","product_id":100037301,"comment_content":"我很期待有没有通过DDD设计的系统，如何禁受住业务的考验。<br>天下系统分分合合，最终还是需要通过一层BFF对外输出接口。过多的服务又该如何减轻BFF的对接成本？","like_count":1,"discussions":[{"author":{"id":1316268,"avatar":"https://static001.geekbang.org/account/avatar/00/14/15/ac/ba1f2494.jpg","nickname":"欧创新","note":"","ucode":"1F5AF0A327197A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":488036,"discussion_content":"其实在DDD的分层架构里面，应用层已经做了大部分的微服务内部不同聚合之间的服务的组合和编排，被BFF编排的服务主要是跨微服务的一些编排和调用，这种对接成本有，但是已经减轻了很多了。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1584689525,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":179925,"user_name":"Tesla","can_delete":false,"product_type":"c1","uid":1500742,"ip_address":"","ucode":"98629AFD9861EE","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTKUcSLVV6ia3dibe7qvTu8Vic1PVs2EibxoUdx930MC7j2Q9A6s4eibMDZlcicMFY0D0icd3RrDorMChu0zw/132","comment_is_top":false,"comment_ctime":1582122133,"is_pvip":false,"replies":[{"id":"69876","content":"用visio画的。","user_name":"作者回复","user_name_real":"渔","uid":"1316268","ctime":1582161316,"ip_address":"","comment_id":179925,"utype":1}],"discussion_count":3,"race_medal":0,"score":"5877089429","product_id":100037301,"comment_content":"老师好，想问一下文稿中的图，您是用什么软件画的？","like_count":1,"discussions":[{"author":{"id":1316268,"avatar":"https://static001.geekbang.org/account/avatar/00/14/15/ac/ba1f2494.jpg","nickname":"欧创新","note":"","ucode":"1F5AF0A327197A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":484452,"discussion_content":"用visio画的。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1582161316,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1438475,"avatar":"https://static001.geekbang.org/account/avatar/00/15/f3/0b/4560079e.jpg","nickname":"王宇","note":"","ucode":"0E9BC3AD99C8E5","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":183600,"discussion_content":"我用mindmanager 还有processon ，完美的工具没有，不过适合的工具效率会更好吧 最近接触的ea也挺专业的","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1582504457,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":1,"child_discussions":[{"author":{"id":1500742,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTKUcSLVV6ia3dibe7qvTu8Vic1PVs2EibxoUdx930MC7j2Q9A6s4eibMDZlcicMFY0D0icd3RrDorMChu0zw/132","nickname":"Tesla","note":"","ucode":"98629AFD9861EE","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1438475,"avatar":"https://static001.geekbang.org/account/avatar/00/15/f3/0b/4560079e.jpg","nickname":"王宇","note":"","ucode":"0E9BC3AD99C8E5","race_medal":0,"user_type":1,"is_pvip":true},"discussion":{"id":185373,"discussion_content":"哦哦 谢谢分享","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1582621764,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":183600,"ip_address":""},"score":185373,"extra":""}]}]},{"had_liked":false,"id":166854,"user_name":"hk","can_delete":false,"product_type":"c1","uid":1057377,"ip_address":"","ucode":"92996CA0BCDD66","user_header":"https://static001.geekbang.org/account/avatar/00/10/22/61/580bb3c3.jpg","comment_is_top":false,"comment_ctime":1577615364,"is_pvip":false,"replies":[{"id":"64809","content":"可以用搜索引擎之类的工具把数据归拢到一起后对外提供查询。我在第20节有介绍。","user_name":"作者回复","user_name_real":"渔","uid":"1316268","ctime":1577662356,"ip_address":"","comment_id":166854,"utype":1}],"discussion_count":1,"race_medal":0,"score":"5872582660","product_id":100037301,"comment_content":"老师，如果分领域分库拆分了微服务，前台有一个聚合查询需求，这个聚合查询包含了有订单，商品，评论等领域的信息，对于这种横跨多领域的查询是需要采用搜索引擎还是其他的方法？","like_count":1,"discussions":[{"author":{"id":1316268,"avatar":"https://static001.geekbang.org/account/avatar/00/14/15/ac/ba1f2494.jpg","nickname":"欧创新","note":"","ucode":"1F5AF0A327197A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":479653,"discussion_content":"可以用搜索引擎之类的工具把数据归拢到一起后对外提供查询。我在第20节有介绍。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1577662356,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":160072,"user_name":"卡特","can_delete":false,"product_type":"c1","uid":1060491,"ip_address":"","ucode":"FF63677089E701","user_header":"https://static001.geekbang.org/account/avatar/00/10/2e/8b/32a8c5a0.jpg","comment_is_top":false,"comment_ctime":1575864112,"is_pvip":true,"replies":[{"id":"61087","content":"正好可以用上^_^。","user_name":"作者回复","user_name_real":"渔","uid":"1316268","ctime":1575868850,"ip_address":"","comment_id":160072,"utype":1}],"discussion_count":1,"race_medal":0,"score":"5870831408","product_id":100037301,"comment_content":"公司不停的在做市场探索，新项目基于微服务架构，基于业务建模，结合团队规模拆分微服务，正缺少相关领域设计理论支持。","like_count":1,"discussions":[{"author":{"id":1316268,"avatar":"https://static001.geekbang.org/account/avatar/00/14/15/ac/ba1f2494.jpg","nickname":"欧创新","note":"","ucode":"1F5AF0A327197A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":477249,"discussion_content":"正好可以用上^_^。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1575868850,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":154418,"user_name":"番茄炒西红柿","can_delete":false,"product_type":"c1","uid":1690242,"ip_address":"","ucode":"13F47BABAB2110","user_header":"https://static001.geekbang.org/account/avatar/00/19/ca/82/85f6a1a2.jpg","comment_is_top":false,"comment_ctime":1574425484,"is_pvip":false,"replies":[{"id":"59288","content":"DDD名词是很多，前后稍微多看几遍吧。","user_name":"作者回复","user_name_real":"渔","uid":"1316268","ctime":1574432840,"ip_address":"","comment_id":154418,"utype":1}],"discussion_count":1,"race_medal":0,"score":"5869392780","product_id":100037301,"comment_content":"第一章抛出好多名词感觉有点看不懂，希望后面会好点😭","like_count":1,"discussions":[{"author":{"id":1316268,"avatar":"https://static001.geekbang.org/account/avatar/00/14/15/ac/ba1f2494.jpg","nickname":"欧创新","note":"","ucode":"1F5AF0A327197A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":475463,"discussion_content":"DDD名词是很多，前后稍微多看几遍吧。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1574432840,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":152233,"user_name":"krugle","can_delete":false,"product_type":"c1","uid":1045770,"ip_address":"","ucode":"60A7D9189C01BE","user_header":"https://static001.geekbang.org/account/avatar/00/0f/f5/0a/077b9922.jpg","comment_is_top":false,"comment_ctime":1573927909,"is_pvip":false,"replies":[{"id":"58532","content":"每个企业都不太一样的，跟商业模式和战略定位有关。个人感觉在电商领域，订单和商品是比较通用的业务能力，偏通用会多一些。","user_name":"作者回复","user_name_real":"渔","uid":"1316268","ctime":1573951754,"ip_address":"","comment_id":152233,"utype":1}],"discussion_count":1,"race_medal":0,"score":"5868895205","product_id":100037301,"comment_content":"电商saas 那个是核心域 订单还是 商品","like_count":1,"discussions":[{"author":{"id":1316268,"avatar":"https://static001.geekbang.org/account/avatar/00/14/15/ac/ba1f2494.jpg","nickname":"欧创新","note":"","ucode":"1F5AF0A327197A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":474761,"discussion_content":"每个企业都不太一样的，跟商业模式和战略定位有关。个人感觉在电商领域，订单和商品是比较通用的业务能力，偏通用会多一些。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1573951754,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":151468,"user_name":"Moon","can_delete":false,"product_type":"c1","uid":1720232,"ip_address":"","ucode":"897F0F708355DD","user_header":"https://static001.geekbang.org/account/avatar/00/1a/3f/a8/4ef5bed4.jpg","comment_is_top":false,"comment_ctime":1573725845,"is_pvip":false,"replies":[{"id":"58263","content":"后面的章节会有详细的讲解哈，建议你看一下第7节，DDD分层架构。","user_name":"作者回复","user_name_real":"渔","uid":"1316268","ctime":1573736744,"ip_address":"","comment_id":151468,"utype":1}],"discussion_count":1,"race_medal":0,"score":"5868693141","product_id":100037301,"comment_content":"欧老师，你好，全文，看了一遍了，我想了解下， ——1、应用服务和领域服务的划分标准是什么，2、举个例子：麻烦帮我写一下运转流程（用户，前端，接口，应用服务，领域服务，数据库，+数据——完整的闭环是怎样？），望解答，谢谢","like_count":1,"discussions":[{"author":{"id":1316268,"avatar":"https://static001.geekbang.org/account/avatar/00/14/15/ac/ba1f2494.jpg","nickname":"欧创新","note":"","ucode":"1F5AF0A327197A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":474483,"discussion_content":"后面的章节会有详细的讲解哈，建议你看一下第7节，DDD分层架构。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1573736744,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":149914,"user_name":"Cutler","can_delete":false,"product_type":"c1","uid":1228136,"ip_address":"","ucode":"2EDECFE039845B","user_header":"https://static001.geekbang.org/account/avatar/00/12/bd/68/3fd6428d.jpg","comment_is_top":false,"comment_ctime":1573432203,"is_pvip":false,"replies":[{"id":"57669","content":"是的，业务需求是变化的，领域模型也会迭代更新，所以微服务肯定也需要演进。如果领域内外的边界清晰，微服务的演进也会容易的多。用DDD可以解决这些问题。","user_name":"作者回复","user_name_real":"渔","uid":"1316268","ctime":1573433067,"ip_address":"","comment_id":149914,"utype":1}],"discussion_count":1,"race_medal":0,"score":"5868399499","product_id":100037301,"comment_content":"最难的还是微服务的拆分吧，即使目前看拆的没问题，到后期随着业务的变化，也可能需要重新拆分，很难权衡，也没有找到比较好的方法论，希望DDD能解决服务拆分的问题。","like_count":1,"discussions":[{"author":{"id":1316268,"avatar":"https://static001.geekbang.org/account/avatar/00/14/15/ac/ba1f2494.jpg","nickname":"欧创新","note":"","ucode":"1F5AF0A327197A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":474009,"discussion_content":"是的，业务需求是变化的，领域模型也会迭代更新，所以微服务肯定也需要演进。如果领域内外的边界清晰，微服务的演进也会容易的多。用DDD可以解决这些问题。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1573433067,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":146842,"user_name":"冷杉","can_delete":false,"product_type":"c1","uid":1726960,"ip_address":"","ucode":"1EF82CC877A1D2","user_header":"https://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTLTY07lEypfLdVCUbRHHyWLc76H4wwrSYicxbo3HKdMf32r9gGsQNIEibPX6J1AcNBobdrNA8KJzia7Q/132","comment_is_top":false,"comment_ctime":1572673226,"is_pvip":false,"replies":[{"id":"56751","content":"微服务设计需要一种理念上的转变。尽量不要再用单体的设计方式来设计微服务了。希望这个课能对你有帮助。","user_name":"作者回复","user_name_real":"渔","uid":"1316268","ctime":1572697181,"ip_address":"","comment_id":146842,"utype":1}],"discussion_count":1,"race_medal":1,"score":"5867640522","product_id":100037301,"comment_content":"今天购买了课程，很感谢老师的分享。我所在的项目组一直在提这个微服务，但是设计思路还是之前的单体大应用，DDD的思想我感觉我的领导是很难理解的。因此我这边特别想自己去理解这个DDD的设计思路，还有就是代码如何拆分的方法。","like_count":1,"discussions":[{"author":{"id":1316268,"avatar":"https://static001.geekbang.org/account/avatar/00/14/15/ac/ba1f2494.jpg","nickname":"欧创新","note":"","ucode":"1F5AF0A327197A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":473028,"discussion_content":"微服务设计需要一种理念上的转变。尽量不要再用单体的设计方式来设计微服务了。希望这个课能对你有帮助。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1572697181,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":145716,"user_name":"小孩","can_delete":false,"product_type":"c1","uid":1112367,"ip_address":"","ucode":"A7F587FC641E63","user_header":"https://static001.geekbang.org/account/avatar/00/10/f9/2f/01b32495.jpg","comment_is_top":false,"comment_ctime":1572351311,"is_pvip":false,"replies":[{"id":"56282","content":"传统SOA架构基本是单体模式，也就是集中式架构。因为需求会越来越多，系统会越来越庞大。系统大了后就不太方便放到容器之类的环境上，只能用weblogic之类的中间件，靠手工来运维了。","user_name":"作者回复","user_name_real":"渔","uid":"1316268","ctime":1572392788,"ip_address":"","comment_id":145716,"utype":1}],"discussion_count":8,"race_medal":0,"score":"5867318607","product_id":100037301,"comment_content":"为什么soa架构会使得系统变得臃肿，可扩展性和弹性伸缩性差。我们公司以前是soa,也是拆了订单,活动,商品,拼团打折,仓储,物流,会员中心等等服务,我们也没用到总线,webapi包了一层,客户端(安卓,ios,pc)调用,api聚合服务,我想请教下1.这种设计跟微服务的区别.2.可扩展性为什么差了.","like_count":1,"discussions":[{"author":{"id":1316268,"avatar":"https://static001.geekbang.org/account/avatar/00/14/15/ac/ba1f2494.jpg","nickname":"欧创新","note":"","ucode":"1F5AF0A327197A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":472542,"discussion_content":"传统SOA架构基本是单体模式，也就是集中式架构。因为需求会越来越多，系统会越来越庞大。系统大了后就不太方便放到容器之类的环境上，只能用weblogic之类的中间件，靠手工来运维了。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1572392788,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1103602,"avatar":"https://static001.geekbang.org/account/avatar/00/10/d6/f2/0601a60e.jpg","nickname":"顾海","note":"","ucode":"13F4E0A21975CE","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":51857,"discussion_content":"作者的这个回答似乎有些勉强。SOA本来是为了做系统集成的，主要用于打通传统大型异构系统，一般会用服务总线。实际上在2014年左右，有些互联网公司其实就是按微服务的方式来做的，只不过那个时候微服务这一说法还不流行，于是这些公司就说自己是用面向服务的架构（SOA）来构建系统的。近几年，随着微服务说的流行，大家又都说自己是用微服务的方式来构建系统的。","likes_number":2,"is_delete":false,"is_hidden":false,"ctime":1573961507,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1100251,"avatar":"https://static001.geekbang.org/account/avatar/00/10/c9/db/04abe949.jpg","nickname":"Joker","note":"","ucode":"9BEEC9E38E8DBC","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":46700,"discussion_content":"关于 SOA 问题不能同意作者的看法，系统规模 和 手动运维也没有什么关系 。 ","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1573196338,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1089732,"avatar":"https://static001.geekbang.org/account/avatar/00/10/a0/c4/4ab49f4e.jpg","nickname":"孔祥鑫","note":"","ucode":"121EC48A798034","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":79780,"discussion_content":"面向服务的架构其实就是微服务，改了个名字和落地方式而已","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1576111617,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1112367,"avatar":"https://static001.geekbang.org/account/avatar/00/10/f9/2f/01b32495.jpg","nickname":"小孩","note":"","ucode":"A7F587FC641E63","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":41483,"discussion_content":"那老师意思是我们这种拆分了的soa架构应该算微服务了？","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1572438557,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":1,"child_discussions":[{"author":{"id":1119490,"avatar":"https://static001.geekbang.org/account/avatar/00/11/15/02/66f65388.jpg","nickname":"雷霹雳的爸爸","note":"","ucode":"99BBA6D83DD11F","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":1112367,"avatar":"https://static001.geekbang.org/account/avatar/00/10/f9/2f/01b32495.jpg","nickname":"小孩","note":"","ucode":"A7F587FC641E63","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":41677,"discussion_content":"我觉得老师回答是不是并不重要，甚至兄台你们那种SOA是不是算微服务都不重要，而是你觉得拆的哪里不好才重要，非要问是不是，可能是也可能不是，就一个名字，也不会变得更好或变得更坏，比如你就听chris的觉得共享存储就是微服务反模式，那你现在要是共享存储那你就当它不是，但这其实可能并不重要，如果非挑一样来判定的话，那就是得看拆出来那些服务，互相依赖关系具体都是什么样的，如果都是强依赖（没它不行，立刻瘫了，主要流程都走不通了）占主导，80%吧，拍个数，那就是叫微服务，不，就是叫宇宙飞船也没个卵用啊\n\n扩展性差...我也就不再乱喷同样的东西了","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1572486262,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":41483,"ip_address":""},"score":41677,"extra":""}]},{"author":{"id":1059166,"avatar":"https://static001.geekbang.org/account/avatar/00/10/29/5e/8d77584e.jpg","nickname":"Paul","note":"","ucode":"0D4D55AE9C1CB9","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":41475,"discussion_content":"回答的很牵强啊，不算精妙","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1572437281,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1209938,"avatar":"https://static001.geekbang.org/account/avatar/00/12/76/52/50231a5d.jpg","nickname":"就是我李超伟","note":"","ucode":"20E1ED1BE01610","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":41269,"discussion_content":"这也是一种划分业务，组合领域的体现吧","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1572392652,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":144821,"user_name":"金龟","can_delete":false,"product_type":"c1","uid":1228500,"ip_address":"","ucode":"1C7D35C8AE8D9D","user_header":"https://static001.geekbang.org/account/avatar/00/12/be/d4/ff1c1319.jpg","comment_is_top":false,"comment_ctime":1572064140,"is_pvip":false,"replies":[{"id":"55872","content":"这部分内容在聚合那一节会讲到。聚合是多个领域对象的集合，他不只是服务，这些领域对象包括：实体、值对象、领域服务等。<br>我们根据领域模型设计微服务的时候，会将领域模型的领域对象建立对应的代码模型的代码对象，它们会有一个映射关系。比如领域模型的聚合中有订单这个领域实体，我们会在微服务的聚合内建立order这个代码对象。","user_name":"作者回复","user_name_real":"渔","uid":"1316268","ctime":1572088687,"ip_address":"","comment_id":144821,"utype":1}],"discussion_count":1,"race_medal":0,"score":"5867031436","product_id":100037301,"comment_content":"几个问题求教:1.聚合划分的是一个服务，那限界上下文划分的是什么，这里有点不明白 2.文章中说到领域模型中的领域对象对应代码中的对象，这个领域对象到底是指什么呢?可以包括功能模块对象吗，比如对话管理模块，这是一个功能模块（而不是像订单这种是个实体模型），那是不是就不能把它作为一个服务了。","like_count":1,"discussions":[{"author":{"id":1316268,"avatar":"https://static001.geekbang.org/account/avatar/00/14/15/ac/ba1f2494.jpg","nickname":"欧创新","note":"","ucode":"1F5AF0A327197A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":472124,"discussion_content":"这部分内容在聚合那一节会讲到。聚合是多个领域对象的集合，他不只是服务，这些领域对象包括：实体、值对象、领域服务等。\n我们根据领域模型设计微服务的时候，会将领域模型的领域对象建立对应的代码模型的代码对象，它们会有一个映射关系。比如领域模型的聚合中有订单这个领域实体，我们会在微服务的聚合内建立order这个代码对象。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1572088687,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":144765,"user_name":"miniluo","can_delete":false,"product_type":"c1","uid":1397339,"ip_address":"","ucode":"5735B6DEE7902B","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/FheCgo4Ovibo0L1vAGgMdZkzQMm1GUMHMMqQ8aglufXaD2hW9z96DjQicAam723jOCZwXVmiaNiaaq4PLsf4COibZ5A/132","comment_is_top":false,"comment_ctime":1572052616,"is_pvip":false,"replies":[{"id":"55874","content":"需要跟好好宣导DDD的核心理念和带来的好处，感受到了，就容易推行。祝你好运！","user_name":"作者回复","user_name_real":"渔","uid":"1316268","ctime":1572089058,"ip_address":"","comment_id":144765,"utype":1}],"discussion_count":1,"race_medal":0,"score":"5867019912","product_id":100037301,"comment_content":"上一家公司就是基于ddd做，挺好，扩展性，可维护性都不错效果。新公司，刚去到了解后，我傻了，混杂，只能局部开始ddd，看能否慢慢拉回来。","like_count":1,"discussions":[{"author":{"id":1316268,"avatar":"https://static001.geekbang.org/account/avatar/00/14/15/ac/ba1f2494.jpg","nickname":"欧创新","note":"","ucode":"1F5AF0A327197A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":472105,"discussion_content":"需要跟好好宣导DDD的核心理念和带来的好处，感受到了，就容易推行。祝你好运！","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1572089058,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":143408,"user_name":"LuAndy","can_delete":false,"product_type":"c1","uid":1043010,"ip_address":"","ucode":"2E5115B7A04EED","user_header":"https://static001.geekbang.org/account/avatar/00/0f/ea/42/f3c1c201.jpg","comment_is_top":false,"comment_ctime":1571706314,"is_pvip":false,"replies":[{"id":"55392","content":"幸会幸会！难不成咱们还有些渊源。你能看到我的照片，我只能隔着屏幕猜猜你是谁？哈哈！","user_name":"作者回复","user_name_real":"渔","uid":"1316268","ctime":1571713081,"ip_address":"","comment_id":143408,"utype":1}],"discussion_count":3,"race_medal":0,"score":"5866673610","product_id":100037301,"comment_content":"才发现作者好眼熟呀😀，厉害厉害👍","like_count":1,"discussions":[{"author":{"id":1316268,"avatar":"https://static001.geekbang.org/account/avatar/00/14/15/ac/ba1f2494.jpg","nickname":"欧创新","note":"","ucode":"1F5AF0A327197A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":471521,"discussion_content":"幸会幸会！难不成咱们还有些渊源。你能看到我的照片，我只能隔着屏幕猜猜你是谁？哈哈！","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1571713081,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1316268,"avatar":"https://static001.geekbang.org/account/avatar/00/14/15/ac/ba1f2494.jpg","nickname":"欧创新","note":"","ucode":"1F5AF0A327197A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":39175,"discussion_content":"哦，原来是你。可以当面讨论了哈。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1571900767,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1043010,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/ea/42/f3c1c201.jpg","nickname":"LuAndy","note":"","ucode":"2E5115B7A04EED","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":38082,"discussion_content":"原来做定价系统的卢亚杰，跟着思涛一起做的😄","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1571721220,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":142859,"user_name":"切糕","can_delete":false,"product_type":"c1","uid":1185409,"ip_address":"","ucode":"DCD3C14CAC4ED3","user_header":"https://static001.geekbang.org/account/avatar/00/12/16/81/77f84354.jpg","comment_is_top":false,"comment_ctime":1571565913,"is_pvip":false,"replies":[{"id":"55198","content":"希望能够帮助到你。","user_name":"作者回复","user_name_real":"渔","uid":"1316268","ctime":1571582979,"ip_address":"","comment_id":142859,"utype":1}],"discussion_count":1,"race_medal":0,"score":"5866533209","product_id":100037301,"comment_content":"目前我们公司的一款产品正在做微服务的拆分。之前听说过DDD，一直没有完整的概念。期待老师的课程。","like_count":1,"discussions":[{"author":{"id":1316268,"avatar":"https://static001.geekbang.org/account/avatar/00/14/15/ac/ba1f2494.jpg","nickname":"欧创新","note":"","ucode":"1F5AF0A327197A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":471298,"discussion_content":"希望能够帮助到你。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1571582979,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":142656,"user_name":"like_jun","can_delete":false,"product_type":"c1","uid":1195771,"ip_address":"","ucode":"3D72B215774E1B","user_header":"https://static001.geekbang.org/account/avatar/00/12/3e/fb/51f8dfe7.jpg","comment_is_top":false,"comment_ctime":1571449496,"is_pvip":false,"replies":[{"id":"55133","content":"希望能对你有帮助。","user_name":"作者回复","user_name_real":"渔","uid":"1316268","ctime":1571462731,"ip_address":"","comment_id":142656,"utype":1}],"discussion_count":1,"race_medal":0,"score":"5866416792","product_id":100037301,"comment_content":"正在用DDD设计进行项目重构","like_count":1,"discussions":[{"author":{"id":1316268,"avatar":"https://static001.geekbang.org/account/avatar/00/14/15/ac/ba1f2494.jpg","nickname":"欧创新","note":"","ucode":"1F5AF0A327197A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":471215,"discussion_content":"希望能对你有帮助。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1571462731,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":142628,"user_name":"墨名次","can_delete":false,"product_type":"c1","uid":1330267,"ip_address":"","ucode":"926EDC57291C09","user_header":"https://static001.geekbang.org/account/avatar/00/14/4c/5b/5499d6e6.jpg","comment_is_top":false,"comment_ctime":1571421312,"is_pvip":false,"replies":[{"id":"55134","content":"这些后面都会讲到，敬请期待。","user_name":"作者回复","user_name_real":"渔","uid":"1316268","ctime":1571462771,"ip_address":"","comment_id":142628,"utype":1}],"discussion_count":1,"race_medal":0,"score":"5866388608","product_id":100037301,"comment_content":"学完第一章，回想之前在项目中遇到一些不明白的问题瞬间豁然开朗，对服务拆分的理解又深了一些，但是对一些词还比较难理解，比如“事件风暴，根聚合”之类的，很期待老师后面的课程","like_count":1,"discussions":[{"author":{"id":1316268,"avatar":"https://static001.geekbang.org/account/avatar/00/14/15/ac/ba1f2494.jpg","nickname":"欧创新","note":"","ucode":"1F5AF0A327197A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":471201,"discussion_content":"这些后面都会讲到，敬请期待。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1571462771,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":142162,"user_name":"骨汤鸡蛋面","can_delete":false,"product_type":"c1","uid":1050002,"ip_address":"","ucode":"2AC141A523E710","user_header":"https://static001.geekbang.org/account/avatar/00/10/05/92/b609f7e3.jpg","comment_is_top":false,"comment_ctime":1571302511,"is_pvip":true,"replies":[{"id":"54859","content":"是这样的。后面会有设计过程的详细介绍。","user_name":"作者回复","user_name_real":"渔","uid":"1316268","ctime":1571306093,"ip_address":"","comment_id":142162,"utype":1}],"discussion_count":1,"race_medal":0,"score":"5866269807","product_id":100037301,"comment_content":"从老师的表述，是否可以理解为：ddd是一个事件风暴 ==&gt; 分类划分，进而知道组织划分（也就是中台）、系统划分（微服务）、代码划分&#47;设计的思想方法","like_count":1,"discussions":[{"author":{"id":1316268,"avatar":"https://static001.geekbang.org/account/avatar/00/14/15/ac/ba1f2494.jpg","nickname":"欧创新","note":"","ucode":"1F5AF0A327197A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":471012,"discussion_content":"是这样的。后面会有设计过程的详细介绍。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1571306093,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":141651,"user_name":"FIGNT","can_delete":false,"product_type":"c1","uid":1540988,"ip_address":"","ucode":"D9DB185AE9E67C","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTKZ16iaIia0029oI1Qh5NicibpbTiaBAaCOPYXoLplKHr6uQ2rSVxPZanBvpMcL2NuhwKQYCFnaHP5tedQ/132","comment_is_top":false,"comment_ctime":1571207653,"is_pvip":false,"replies":[{"id":"54725","content":"希望这个专栏对你有帮助，进阶篇和实战篇里有比较详细的介绍。","user_name":"作者回复","user_name_real":"渔","uid":"1316268","ctime":1571216773,"ip_address":"","comment_id":141651,"utype":1}],"discussion_count":1,"race_medal":0,"score":"5866174949","product_id":100037301,"comment_content":"今年开始接触DDD,公司也是准备使用DDD设计方法来搞微服务，因为我们公司的3层架构的项目都很适合使用DDD。看了领域驱动设计的书籍，理解起来很困难,没有具体的案例作为参考，落地困难。","like_count":1,"discussions":[{"author":{"id":1316268,"avatar":"https://static001.geekbang.org/account/avatar/00/14/15/ac/ba1f2494.jpg","nickname":"欧创新","note":"","ucode":"1F5AF0A327197A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":470835,"discussion_content":"希望这个专栏对你有帮助，进阶篇和实战篇里有比较详细的介绍。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1571216773,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":141263,"user_name":"学习使我快乐","can_delete":false,"product_type":"c1","uid":1565651,"ip_address":"","ucode":"D03250F7FCFCF7","user_header":"https://static001.geekbang.org/account/avatar/00/17/e3/d3/60abede7.jpg","comment_is_top":false,"comment_ctime":1571132955,"is_pvip":true,"replies":[{"id":"54603","content":"您说的这个问题，我理解是微服务的演进。首先你需要保证聚合内业务的高内聚。由于聚合内部的业务逻辑内聚性相对较高，业务相对稳定。当业务功能在微服务之间需要重组的时候，我们可以以聚合为单位来进行代码重组。也就是说对聚合的整体功能进行迁移。所以在进行聚合代码目录结构设计的时候需要一些技巧。我在实战篇里会讲到。","user_name":"作者回复","user_name_real":"渔","uid":"1316268","ctime":1571142220,"ip_address":"","comment_id":141263,"utype":1}],"discussion_count":1,"race_medal":0,"score":"5866100251","product_id":100037301,"comment_content":"老师，我有个疑惑点。确认边界这块，第三步“根据业务及语义边界等因素，将一个或者多个聚合划定在一个限界上下文内，形成领域模型。”，而对于业务 会有以下问题<br>1、理解有差异。每个人的认知不同，导致划分边界不明确，偏离跑道<br>2、业务需求经常变动。刚开始划分明确的A、B微服务，后面变得划分不那么明确了<br>这两个问题怎么解决了？","like_count":1,"discussions":[{"author":{"id":1316268,"avatar":"https://static001.geekbang.org/account/avatar/00/14/15/ac/ba1f2494.jpg","nickname":"欧创新","note":"","ucode":"1F5AF0A327197A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":470705,"discussion_content":"您说的这个问题，我理解是微服务的演进。首先你需要保证聚合内业务的高内聚。由于聚合内部的业务逻辑内聚性相对较高，业务相对稳定。当业务功能在微服务之间需要重组的时候，我们可以以聚合为单位来进行代码重组。也就是说对聚合的整体功能进行迁移。所以在进行聚合代码目录结构设计的时候需要一些技巧。我在实战篇里会讲到。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1571142220,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":141262,"user_name":"阿卡牛","can_delete":false,"product_type":"c1","uid":1022247,"ip_address":"","ucode":"0BC43A904C3199","user_header":"https://static001.geekbang.org/account/avatar/00/0f/99/27/47aa9dea.jpg","comment_is_top":false,"comment_ctime":1571132946,"is_pvip":false,"replies":[{"id":"54605","content":"DDD是一个全新的模式，业务，设计和开发人员真正作为一个整体。但都需要理解DDD核心理念，所以实施DDD也需要尽量培养企业的这种DDD文化。","user_name":"作者回复","user_name_real":"渔","uid":"1316268","ctime":1571142311,"ip_address":"","comment_id":141262,"utype":1}],"discussion_count":2,"race_medal":0,"score":"5866100242","product_id":100037301,"comment_content":"DDD要求开发人员有很好的业务sense，要求开发人员主动改变，接触业务接触用户。这应该是最难的","like_count":1,"discussions":[{"author":{"id":1316268,"avatar":"https://static001.geekbang.org/account/avatar/00/14/15/ac/ba1f2494.jpg","nickname":"欧创新","note":"","ucode":"1F5AF0A327197A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":470704,"discussion_content":"DDD是一个全新的模式，业务，设计和开发人员真正作为一个整体。但都需要理解DDD核心理念，所以实施DDD也需要尽量培养企业的这种DDD文化。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1571142311,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1438475,"avatar":"https://static001.geekbang.org/account/avatar/00/15/f3/0b/4560079e.jpg","nickname":"王宇","note":"","ucode":"0E9BC3AD99C8E5","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":183593,"discussion_content":"Leader的责任和影响力做桥梁","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1582504202,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":141132,"user_name":"滑板小菜鸡","can_delete":false,"product_type":"c1","uid":1103584,"ip_address":"","ucode":"CCE2D6E32F95B5","user_header":"https://static001.geekbang.org/account/avatar/00/10/d6/e0/3b137e49.jpg","comment_is_top":false,"comment_ctime":1571120831,"is_pvip":false,"replies":[{"id":"54589","content":"你说的是不是repository控制反转？这样的目的是为了以后如果换数据库等底层资源的时候，你的业务逻辑不会受大的影响。耦合度过高的话，基本就被数据库绑死了。","user_name":"作者回复","user_name_real":"渔","uid":"1316268","ctime":1571128096,"ip_address":"","comment_id":141132,"utype":1}],"discussion_count":1,"race_medal":0,"score":"5866088127","product_id":100037301,"comment_content":"组里的框架是Senior的人定的，他们说是DDD，但是觉得好抽象。给我的感觉就是把业务逻辑和数据存取分开了。可能还没透彻理解什么是domain.","like_count":1,"discussions":[{"author":{"id":1316268,"avatar":"https://static001.geekbang.org/account/avatar/00/14/15/ac/ba1f2494.jpg","nickname":"欧创新","note":"","ucode":"1F5AF0A327197A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":470677,"discussion_content":"你说的是不是repository控制反转？这样的目的是为了以后如果换数据库等底层资源的时候，你的业务逻辑不会受大的影响。耦合度过高的话，基本就被数据库绑死了。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1571128096,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":141126,"user_name":"吃饭饭","can_delete":false,"product_type":"c1","uid":1231549,"ip_address":"","ucode":"95CFA07CDA2957","user_header":"https://static001.geekbang.org/account/avatar/00/12/ca/bd/a51ae4b2.jpg","comment_is_top":false,"comment_ctime":1571119511,"is_pvip":false,"replies":[{"id":"54588","content":"有的，在比较靠后的章节。","user_name":"作者回复","user_name_real":"渔","uid":"1316268","ctime":1571127945,"ip_address":"","comment_id":141126,"utype":1}],"discussion_count":1,"race_medal":0,"score":"5866086807","product_id":100037301,"comment_content":"接下来是不是会实战展示「战术设计」？","like_count":1,"discussions":[{"author":{"id":1316268,"avatar":"https://static001.geekbang.org/account/avatar/00/14/15/ac/ba1f2494.jpg","nickname":"欧创新","note":"","ucode":"1F5AF0A327197A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":470675,"discussion_content":"有的，在比较靠后的章节。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1571127945,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":141015,"user_name":"盲僧","can_delete":false,"product_type":"c1","uid":1617432,"ip_address":"","ucode":"8E29CF9A3045D0","user_header":"https://static001.geekbang.org/account/avatar/00/18/ae/18/b649c2c0.jpg","comment_is_top":false,"comment_ctime":1571102814,"is_pvip":false,"replies":[{"id":"54556","content":"微服务的粒度跟你划分的领域模型的限界上下文大小有关系，需要项目团队和领域专家一起来划定。中台本质上是业务模型，微服务是系统落地。","user_name":"作者回复","user_name_real":"渔","uid":"1316268","ctime":1571105014,"ip_address":"","comment_id":141015,"utype":1}],"discussion_count":1,"race_medal":0,"score":"5866070110","product_id":100037301,"comment_content":"服务的边界以及拆分的粒度如何把控，微服务和中台的区别是什么🤔","like_count":1,"discussions":[{"author":{"id":1316268,"avatar":"https://static001.geekbang.org/account/avatar/00/14/15/ac/ba1f2494.jpg","nickname":"欧创新","note":"","ucode":"1F5AF0A327197A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":470651,"discussion_content":"微服务的粒度跟你划分的领域模型的限界上下文大小有关系，需要项目团队和领域专家一起来划定。中台本质上是业务模型，微服务是系统落地。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1571105014,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":140985,"user_name":"lw","can_delete":false,"product_type":"c1","uid":1162641,"ip_address":"","ucode":"F7DBFA6A01C911","user_header":"https://static001.geekbang.org/account/avatar/00/11/bd/91/29c2a7fd.jpg","comment_is_top":false,"comment_ctime":1571101342,"is_pvip":false,"replies":[{"id":"54549","content":"我也读过哈。希望能对你有帮助。","user_name":"作者回复","user_name_real":"渔","uid":"1316268","ctime":1571102987,"ip_address":"","comment_id":140985,"utype":1}],"discussion_count":2,"race_medal":0,"score":"5866068638","product_id":100037301,"comment_content":"读过《领域驱动设计》一书，但是读的云里雾里。希望此专栏能让我真正掌握DDD。","like_count":1,"discussions":[{"author":{"id":1316268,"avatar":"https://static001.geekbang.org/account/avatar/00/14/15/ac/ba1f2494.jpg","nickname":"欧创新","note":"","ucode":"1F5AF0A327197A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":470643,"discussion_content":"我也读过哈。希望能对你有帮助。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1571102987,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1683896,"avatar":"https://static001.geekbang.org/account/avatar/00/19/b1/b8/9ff50118.jpg","nickname":"sswrock","note":"","ucode":"9D8DA794D7378D","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":45053,"discussion_content":"建议读VV的《实现领域驱动设计》，更落地的一本书","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1573001930,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":140932,"user_name":"Michael","can_delete":false,"product_type":"c1","uid":1274787,"ip_address":"","ucode":"C233DF1D224EC1","user_header":"https://static001.geekbang.org/account/avatar/00/13/73/a3/2b077607.jpg","comment_is_top":false,"comment_ctime":1571097290,"is_pvip":true,"replies":[{"id":"54543","content":"前期的领域建模很重要，领域建模的过程实际就是边界的划分过程，这样就能避免重复代码和重复建设的问题。","user_name":"作者回复","user_name_real":"渔","uid":"1316268","ctime":1571101650,"ip_address":"","comment_id":140932,"utype":1}],"discussion_count":1,"race_medal":0,"score":"5866064586","product_id":100037301,"comment_content":"如何尽可能避免微服务之间的依赖？和微服务之间的重复代码？我们前段时间做了个系统，四个微服务，每个人各自负责开发，然后上线后，发现微服务之间好多的重复代码，现在sonar扫描后，好多坏味道几乎重复的bean","like_count":1,"discussions":[{"author":{"id":1316268,"avatar":"https://static001.geekbang.org/account/avatar/00/14/15/ac/ba1f2494.jpg","nickname":"欧创新","note":"","ucode":"1F5AF0A327197A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":470625,"discussion_content":"前期的领域建模很重要，领域建模的过程实际就是边界的划分过程，这样就能避免重复代码和重复建设的问题。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1571101650,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":140889,"user_name":"六维","can_delete":false,"product_type":"c1","uid":1022887,"ip_address":"","ucode":"EB1C15AC06A8DF","user_header":"https://static001.geekbang.org/account/avatar/00/0f/9b/a7/440aff07.jpg","comment_is_top":false,"comment_ctime":1571067631,"is_pvip":false,"replies":[{"id":"54501","content":"相信这门课会给你很好的启发～期待你的打卡！","user_name":"编辑回复","user_name_real":"王冬青","uid":"1356014","ctime":1571069026,"ip_address":"","comment_id":140889,"utype":2}],"discussion_count":1,"race_medal":0,"score":"5866034927","product_id":100037301,"comment_content":"想做，但是不知道怎么落地，不知道从哪里下手比较好，所以迟迟未动。","like_count":1,"discussions":[{"author":{"id":1356014,"avatar":"https://static001.geekbang.org/account/avatar/00/14/b0/ee/d0871efd.jpg","nickname":"冬青","note":"","ucode":"14576781B499FB","race_medal":0,"user_type":8,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":470611,"discussion_content":"相信这门课会给你很好的启发～期待你的打卡！","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1571069026,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":4}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":140877,"user_name":"每天晒白牙","can_delete":false,"product_type":"c1","uid":1004698,"ip_address":"","ucode":"A1B102CD933DEA","user_header":"https://static001.geekbang.org/account/avatar/00/0f/54/9a/76c0af70.jpg","comment_is_top":false,"comment_ctime":1571065749,"is_pvip":false,"replies":[{"id":"54516","content":"希望能对你有帮助。","user_name":"作者回复","user_name_real":"渔","uid":"1316268","ctime":1571090652,"ip_address":"","comment_id":140877,"utype":1}],"discussion_count":1,"race_medal":1,"score":"5866033045","product_id":100037301,"comment_content":"一直听说DDD，确实不知道工作中如何做，希望跟着专栏可以学到并用到工作中","like_count":1,"discussions":[{"author":{"id":1316268,"avatar":"https://static001.geekbang.org/account/avatar/00/14/15/ac/ba1f2494.jpg","nickname":"欧创新","note":"","ucode":"1F5AF0A327197A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":470606,"discussion_content":"希望能对你有帮助。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1571090652,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":140859,"user_name":"滴流乱转小胖儿","can_delete":false,"product_type":"c1","uid":1231250,"ip_address":"","ucode":"4689236E65FE4E","user_header":"https://static001.geekbang.org/account/avatar/00/12/c9/92/6361802a.jpg","comment_is_top":false,"comment_ctime":1571061804,"is_pvip":false,"replies":[{"id":"54476","content":"这不，来了嘛。","user_name":"作者回复","user_name_real":"渔","uid":"1316268","ctime":1571063300,"ip_address":"","comment_id":140859,"utype":1}],"discussion_count":1,"race_medal":0,"score":"5866029100","product_id":100037301,"comment_content":"想你想的，睡不着觉","like_count":1,"discussions":[{"author":{"id":1316268,"avatar":"https://static001.geekbang.org/account/avatar/00/14/15/ac/ba1f2494.jpg","nickname":"欧创新","note":"","ucode":"1F5AF0A327197A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":470597,"discussion_content":"这不，来了嘛。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1571063300,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":140838,"user_name":"江河顺水","can_delete":false,"product_type":"c1","uid":1240807,"ip_address":"","ucode":"8FE80FB71DD63E","user_header":"https://static001.geekbang.org/account/avatar/00/12/ee/e7/450fe9eb.jpg","comment_is_top":false,"comment_ctime":1571057238,"is_pvip":false,"replies":[{"id":"54481","content":"后面很快会讲到哦。","user_name":"作者回复","user_name_real":"渔","uid":"1316268","ctime":1571063525,"ip_address":"","comment_id":140838,"utype":1}],"discussion_count":1,"race_medal":0,"score":"5866024534","product_id":100037301,"comment_content":"聚合根、实体、值对象、领域服务<br>这些概念是什么意思啊，有点模糊","like_count":1,"discussions":[{"author":{"id":1316268,"avatar":"https://static001.geekbang.org/account/avatar/00/14/15/ac/ba1f2494.jpg","nickname":"欧创新","note":"","ucode":"1F5AF0A327197A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":470585,"discussion_content":"后面很快会讲到哦。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1571063525,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":359561,"user_name":"🚦注意有车              ༽","can_delete":false,"product_type":"c1","uid":2113645,"ip_address":"江苏","ucode":"F638673227ECB1","user_header":"https://static001.geekbang.org/account/avatar/00/20/40/6d/61caf56b.jpg","comment_is_top":false,"comment_ctime":1665646098,"is_pvip":true,"discussion_count":0,"race_medal":0,"score":"1665646098","product_id":100037301,"comment_content":"微服务的拆分没有理论逻辑的支撑，都是根据业务在一个系统太大了，进而作微服务的拆分；后面拆的微服务越来越多，难以维护，而且微服务之间没有明显的界限，有些业务逻辑放在本不应该属于它的微服务里面，后面系统交接的时候，也难以割接","like_count":0},{"had_liked":false,"id":358055,"user_name":"哇咔咔","can_delete":false,"product_type":"c1","uid":1133036,"ip_address":"广东","ucode":"54BF877836C591","user_header":"https://static001.geekbang.org/account/avatar/00/11/49/ec/6bae1fd7.jpg","comment_is_top":false,"comment_ctime":1663856773,"is_pvip":true,"discussion_count":0,"race_medal":0,"score":"1663856773","product_id":100037301,"comment_content":"没看懂","like_count":0},{"had_liked":false,"id":351663,"user_name":"Geek_bdf27e","can_delete":false,"product_type":"c1","uid":1883022,"ip_address":"","ucode":"09837D6BD4DD35","user_header":"https://thirdwx.qlogo.cn/mmopen/vi_32/DYAIOgq83eosE8ic8Ky1HrTaD5mq0tq4DZH4er7zmAUwLd9yy2cUO9n0bddb3bqiat9ea3XzAicHqdp781ibtbAtlw/132","comment_is_top":false,"comment_ctime":1658067216,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1658067216","product_id":100037301,"comment_content":"准备从MVC模型转型成DDD，希望能有所帮助","like_count":0},{"had_liked":false,"id":350977,"user_name":"剑八","can_delete":false,"product_type":"c1","uid":1297630,"ip_address":"","ucode":"0A09F41DB8A4E7","user_header":"https://static001.geekbang.org/account/avatar/00/13/cc/de/e28c01e1.jpg","comment_is_top":false,"comment_ctime":1657436169,"is_pvip":true,"discussion_count":0,"race_medal":0,"score":"1657436169","product_id":100037301,"comment_content":"DDD是架构设计方法论，从业务视角出发划分子域，确定核心域与支撑域，落地领域模型，领域分层架构。<br>DDD最终的目标收益：<br>1.复杂业务场景能合理划分边界，区分核心域与支撑域，确保后续业务迭代职责单一，能力复用，建设演进式架构<br>2.沉淀领域模型，落地领域分层架构，保证业务迭代基于核心模型扩展","like_count":0},{"had_liked":false,"id":348265,"user_name":"他们都叫我雷哥","can_delete":false,"product_type":"c1","uid":1683548,"ip_address":"","ucode":"C24F920C28A93D","user_header":"https://static001.geekbang.org/account/avatar/00/19/b0/5c/b85b0748.jpg","comment_is_top":false,"comment_ctime":1654913809,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1654913809","product_id":100037301,"comment_content":"二刷了，回顾上一个项目的微服务设计，难点在于缺少业务领域专家一起进行事件风暴，从而很难判断划分的微服务的合理性","like_count":0},{"had_liked":false,"id":345637,"user_name":"Jump","can_delete":false,"product_type":"c1","uid":1139482,"ip_address":"","ucode":"6C229DD3AE29A8","user_header":"https://static001.geekbang.org/account/avatar/00/11/63/1a/367ebeac.jpg","comment_is_top":false,"comment_ctime":1652447912,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1652447912","product_id":100037301,"comment_content":"战略和战术设计，和传统概要设计，详细设计类似","like_count":0},{"had_liked":false,"id":342527,"user_name":"Jonny Jiang","can_delete":false,"product_type":"c1","uid":1992103,"ip_address":"","ucode":"F1D2073BDAAC08","user_header":"https://static001.geekbang.org/account/avatar/00/1e/65/a7/9405ab4c.jpg","comment_is_top":false,"comment_ctime":1650327270,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1650327270","product_id":100037301,"comment_content":"问题：<br>1. 战略设计战术设计是什么<br>2. 我们公司有个部门因为核心模块的业务层出不穷，就采用了DDD进行重构，请问一下这么做有什么好处<br>3. 自己的理解：事件风暴得出一个系统中可能出现的所有对象、所有的需求点，将耦合性强的都划分到一个域中。<br><br><br>不知道对不对，还请指正一下😹","like_count":0},{"had_liked":false,"id":342305,"user_name":"陶乐乐","can_delete":false,"product_type":"c1","uid":1943501,"ip_address":"","ucode":"2D4355A7498948","user_header":"https://thirdwx.qlogo.cn/mmopen/vi_32/DYAIOgq83epb9WYgYQJCMF3XrBbYxnzoXchW2DHfrXHeI2iasiasFdHzJ1XEMjKIN1WdqCgqIQqWU2ibQmYbCic6Gg/132","comment_is_top":false,"comment_ctime":1650182155,"is_pvip":true,"discussion_count":0,"race_medal":0,"score":"1650182155","product_id":100037301,"comment_content":"公司是大部分系统基于微服务架构设计，主要的问题是：<br>1. 基于现有系统的研发以及微服务系统拆分的排期人员的权衡<br>2. 没有特定某人都某一系统的全貌进行了解，导致系统拆分可能会有遗漏<br>3. 系统拆分成何种系统较为合适","like_count":0},{"had_liked":false,"id":339401,"user_name":"一滴水的波浪","can_delete":false,"product_type":"c1","uid":2882763,"ip_address":"","ucode":"B88A25C2C87B87","user_header":"https://static001.geekbang.org/account/avatar/00/2b/fc/cb/9e7f075c.jpg","comment_is_top":false,"comment_ctime":1648082288,"is_pvip":true,"discussion_count":0,"race_medal":0,"score":"1648082288","product_id":100037301,"comment_content":"读起来有些吃力，感觉还是很抽象。能理解成是根据业务不同领域进行划分吗？在实际工作中，在落地一个系统前，对业务的理解往往又不足，怎么解决这个问题呢？","like_count":0},{"had_liked":false,"id":337692,"user_name":"nero","can_delete":false,"product_type":"c1","uid":1078793,"ip_address":"","ucode":"038100ACA14B29","user_header":"https://static001.geekbang.org/account/avatar/00/10/76/09/cf7513c8.jpg","comment_is_top":false,"comment_ctime":1646978189,"is_pvip":true,"discussion_count":0,"race_medal":0,"score":"1646978189","product_id":100037301,"comment_content":"老师第一章节提了太多概念了，但是概念并没有备注，造成一些模糊理解。比如：聚合根、实体、值对象、资源库。希望老师可以备注一下。","like_count":0},{"had_liked":false,"id":332664,"user_name":"ljx","can_delete":false,"product_type":"c1","uid":2446982,"ip_address":"","ucode":"6133FC98C44498","user_header":"https://static001.geekbang.org/account/avatar/00/25/56/86/db4c0d1c.jpg","comment_is_top":false,"comment_ctime":1643444080,"is_pvip":true,"discussion_count":0,"race_medal":0,"score":"1643444080","product_id":100037301,"comment_content":"ddd的概念太多了。。。得好好记一记","like_count":0},{"had_liked":false,"id":328090,"user_name":"杨小曹","can_delete":false,"product_type":"c1","uid":1656848,"ip_address":"","ucode":"D266D0A11BC573","user_header":"https://thirdwx.qlogo.cn/mmopen/vi_32/fy2rpUzbSEeIAQHfbt0EkYkMIIuEPhWO6GFkjJNmLy5gbRp2UnNlrLh1fAAU52bQKfiahl17ZTOjhbYiatmrNibDg/132","comment_is_top":false,"comment_ctime":1640526363,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1640526363","product_id":100037301,"comment_content":"假设对存量系统重构，而没有足够资源（对系统足够了解的业务人员&#47;开发等）投入，只能几个人先通过界面跟代码熟悉系统，前期能否代替 “事件风暴” 对系统建立领域模型呢？","like_count":0},{"had_liked":false,"id":326655,"user_name":"不停息的狮子","can_delete":false,"product_type":"c1","uid":1229956,"ip_address":"","ucode":"AF008CB9270C6D","user_header":"https://static001.geekbang.org/account/avatar/00/12/c4/84/e299b50f.jpg","comment_is_top":false,"comment_ctime":1639619353,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1639619353","product_id":100037301,"comment_content":"说一个可能是不常见但在上一个团队里感受很深的问题：后台架构在形式上模仿了微服务，拥有几十个甚至更多个独立模块，而这些模块又部署在同一台机器上，然后如果有新需求，一般会涉及多个模块的同时修改，同时来多个需求的话，极大概率会出现修改冲突问题。给人的感觉是，服务拆分了，但又没有拆。","like_count":0},{"had_liked":false,"id":325824,"user_name":"埋葬","can_delete":false,"product_type":"c1","uid":1306646,"ip_address":"","ucode":"72BA350F06DAD0","user_header":"https://static001.geekbang.org/account/avatar/00/13/f0/16/3689aa6d.jpg","comment_is_top":false,"comment_ctime":1639154270,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1639154270","product_id":100037301,"comment_content":"领域拆分与功能拆分对比的话，领域拆分好在哪里哪？  功能拆分感觉边界挺清晰的那，求解答","like_count":0},{"had_liked":false,"id":325665,"user_name":"周大仙","can_delete":false,"product_type":"c1","uid":2865215,"ip_address":"","ucode":"4C165FF97D7AF4","user_header":"","comment_is_top":false,"comment_ctime":1639071698,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1639071698","product_id":100037301,"comment_content":"老师，您好<br>对于使用三步划定领域模型和微服务的边界法不是特别理解，请问能根据案例来结合说明吗？<br>比如说，我要设计一个rbac的权限管理系统，加一个文章发布的功能。<br>我应该如何划分呢？","like_count":0},{"had_liked":false,"id":324435,"user_name":"李梵松","can_delete":false,"product_type":"c1","uid":1335291,"ip_address":"","ucode":"D79F33876AE230","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/4RTKnq96jsQoEnUHhBBzVVpib5oNIPHiaLozyKlEH0oLk6D06TNtG6WHWZFiaCaaiac1ojtn5Q4NzZJYfn14vOvd8Q/132","comment_is_top":false,"comment_ctime":1638433364,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1638433364","product_id":100037301,"comment_content":"将庞大&amp;复杂的应用拆分为微服务，就是微服务架构的演进了吗","like_count":0},{"had_liked":false,"id":315184,"user_name":"俯瞰风景.","can_delete":false,"product_type":"c1","uid":1044166,"ip_address":"","ucode":"A6DB68B7B84AEE","user_header":"https://static001.geekbang.org/account/avatar/00/0f/ee/c6/bebcbcf0.jpg","comment_is_top":false,"comment_ctime":1633745424,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1633745424","product_id":100037301,"comment_content":"DDD是指导拆分和构建业务模型的思想，微服务是落地的技术架构。<br>DDD关注业务建模，微服务关注服务和服务之间正确高效地通信和服务治理。","like_count":0},{"had_liked":false,"id":312983,"user_name":"Mars","can_delete":false,"product_type":"c1","uid":1103640,"ip_address":"","ucode":"65DF3E2EC194FA","user_header":"https://static001.geekbang.org/account/avatar/00/10/d7/18/0d1447db.jpg","comment_is_top":false,"comment_ctime":1632187165,"is_pvip":true,"discussion_count":0,"race_medal":0,"score":"1632187165","product_id":100037301,"comment_content":"2年前听过DDD，一直没去研究，现如今项目面临重构，总监计划采用DDD来做指导设计（已经输出了领域建模），赶来补功课。","like_count":0},{"had_liked":false,"id":312377,"user_name":"怕什么，抱紧我","can_delete":false,"product_type":"c1","uid":1318633,"ip_address":"","ucode":"CBCEA76E9EF33B","user_header":"https://static001.geekbang.org/account/avatar/00/14/1e/e9/dcc63d8f.jpg","comment_is_top":false,"comment_ctime":1631779694,"is_pvip":true,"discussion_count":0,"race_medal":0,"score":"1631779694","product_id":100037301,"comment_content":"最大的问题！ 概念太多，有技术门槛，有业务门槛，也有设计和落地指导门槛","like_count":0},{"had_liked":false,"id":310922,"user_name":"吴小智","can_delete":false,"product_type":"c1","uid":1310798,"ip_address":"","ucode":"C7C9F58B5C9F7B","user_header":"https://static001.geekbang.org/account/avatar/00/14/00/4e/be2b206b.jpg","comment_is_top":false,"comment_ctime":1630985570,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1630985570","product_id":100037301,"comment_content":"微服务设计为什么要选择 DDD ？微服务设计面临边界划分难的问题，DDD 设计思想，可以通过事件风暴来梳理业务实体、命令、事件等领域对象，根据业务属性，划分到不同的聚合里，在聚合维度在划分限界上下文，得到边界清晰的领域模型，解决微服务设计边界划分难的问题。","like_count":0},{"had_liked":false,"id":310921,"user_name":"吴小智","can_delete":false,"product_type":"c1","uid":1310798,"ip_address":"","ucode":"C7C9F58B5C9F7B","user_header":"https://static001.geekbang.org/account/avatar/00/14/00/4e/be2b206b.jpg","comment_is_top":false,"comment_ctime":1630985023,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1630985023","product_id":100037301,"comment_content":"领域相关的拥有高度复杂业务的产品，老师能举一些例子吗？ From &quot;DDD 善于处理与领域相关的拥有高复杂度业务的产品开发&quot;","like_count":0},{"had_liked":false,"id":309134,"user_name":"Karson","can_delete":false,"product_type":"c1","uid":1008100,"ip_address":"","ucode":"E0286BF6CA7281","user_header":"https://static001.geekbang.org/account/avatar/00/0f/61/e4/db3f783b.jpg","comment_is_top":false,"comment_ctime":1629957429,"is_pvip":true,"discussion_count":0,"race_medal":0,"score":"1629957429","product_id":100037301,"comment_content":"目前公司在使用微服务架构。<br>遇到的困难：<br>1. 服务拆分困难，基本是按之前的业务模块来拆分微服务。<br>2. 业务演进困难，随着新需求的提出，业务代码难以跟随需求编码。往往需要进行大规模重构。<br>3. 随着时间的推移，某些微服务越来越大。正在向泥球单体演进。","like_count":0},{"had_liked":false,"id":308684,"user_name":"tomcat","can_delete":false,"product_type":"c1","uid":1078280,"ip_address":"","ucode":"1929E1028414F6","user_header":"https://static001.geekbang.org/account/avatar/00/10/74/08/aa2a9f36.jpg","comment_is_top":false,"comment_ctime":1629733761,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1629733761","product_id":100037301,"comment_content":"老师您好，当业务领域模型下服务的拆分结果和康威定律如何配合使用？如果二者的拆分结果不一致怎么办？","like_count":0},{"had_liked":false,"id":302383,"user_name":"对与错","can_delete":false,"product_type":"c1","uid":1682027,"ip_address":"","ucode":"EF55733E3BD78B","user_header":"https://static001.geekbang.org/account/avatar/00/19/aa/6b/ab9a072a.jpg","comment_is_top":false,"comment_ctime":1626185350,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1626185350","product_id":100037301,"comment_content":"开始DDD的系统性学习","like_count":0},{"had_liked":false,"id":301946,"user_name":"Quentin J.","can_delete":false,"product_type":"c1","uid":2693038,"ip_address":"","ucode":"50B980CBE6EBA3","user_header":"https://static001.geekbang.org/account/avatar/00/29/17/ae/f365efb0.jpg","comment_is_top":false,"comment_ctime":1625992219,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1625992219","product_id":100037301,"comment_content":"老师，请问采用ddd实施微服务或中台之后，研发团队还需要维护 《系统概要设计》和《系统详细设计》文件吗？产品经理还需要维护《需求规格说明书》吗？","like_count":0},{"had_liked":false,"id":299070,"user_name":"BennyTian","can_delete":false,"product_type":"c1","uid":1321903,"ip_address":"","ucode":"FF6835DF6ECFF5","user_header":"https://static001.geekbang.org/account/avatar/00/14/2b/af/c406a173.jpg","comment_is_top":false,"comment_ctime":1624448496,"is_pvip":true,"discussion_count":0,"race_medal":0,"score":"1624448496","product_id":100037301,"comment_content":"请问一下老师  如果我有一个下单业务 有一个规则是 ：等级是5的才可以下单 否则拒绝 这个等级检验 我是放在领域服务去做 还是放到调用领域服务的地方去做呢？ 有什么优缺点呢？","like_count":0},{"had_liked":false,"id":298394,"user_name":"Geek4329","can_delete":false,"product_type":"c1","uid":2028951,"ip_address":"","ucode":"D6FB8D1B2D5DAC","user_header":"https://static001.geekbang.org/account/avatar/00/1e/f5/97/9a7ee7b3.jpg","comment_is_top":false,"comment_ctime":1624076369,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1624076369","product_id":100037301,"comment_content":"对架构模式的演进有疑问，想跟老师探讨。<br>我认为，架构的演进模式应该为单机，集群，分布式。而单机和集群都是集中式的。感觉文中对架构模式演进的描述有点难以理解","like_count":0},{"had_liked":false,"id":290690,"user_name":"雾海上的流浪者","can_delete":false,"product_type":"c1","uid":2574882,"ip_address":"","ucode":"15CD5674FB720B","user_header":"https://static001.geekbang.org/account/avatar/00/27/4a/22/aa230967.jpg","comment_is_top":false,"comment_ctime":1619688093,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1619688093","product_id":100037301,"comment_content":"微服务有利有弊，和敏捷一样，需要组织、自动化运维、监控、平台等一系列配套和保障。没有配套，单纯的上微服务，只能说赶时髦了。所以何时用微服务，要结合具体的项目情况来取舍，有些项目，集中式的单体应用未必就比微服务架构差。不过DDD对于系统业务的设计、分解和沉淀还是大有裨益的。","like_count":0},{"had_liked":false,"id":288626,"user_name":"达叔灬","can_delete":false,"product_type":"c1","uid":2404887,"ip_address":"","ucode":"5CCBAF13548F02","user_header":"https://static001.geekbang.org/account/avatar/00/24/b2/17/3161b49c.jpg","comment_is_top":false,"comment_ctime":1618566380,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1618566380","product_id":100037301,"comment_content":"DDD 对开发人员要求太高了  而且 要协调产品部门 沟通成本也很高 前期周期太长 还是难落地，我目前就职的公司比较小 还是以分布式集群的方式部署","like_count":0},{"had_liked":false,"id":287880,"user_name":"赵学习","can_delete":false,"product_type":"c1","uid":1829065,"ip_address":"","ucode":"2B660A158C4C3E","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/x3cpRvAjkpyCiaibTJlvhlaE6g5XUgDYH24ZISWzZUO5mDkfW0fPJJDWnwa8V6c3FYxnVasFMTGc4xqaoWkuXXsA/132","comment_is_top":false,"comment_ctime":1618206057,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1618206057","product_id":100037301,"comment_content":"谁能被称作领域专家？","like_count":0},{"had_liked":false,"id":286082,"user_name":"Sunflower","can_delete":false,"product_type":"c1","uid":1206577,"ip_address":"","ucode":"B64B419FE8E52D","user_header":"","comment_is_top":false,"comment_ctime":1617153034,"is_pvip":true,"discussion_count":0,"race_medal":0,"score":"1617153034","product_id":100037301,"comment_content":"目前公司正在搞微服务，现在遇到的痛点有：<br>1、各个团队没有划分清楚负责哪个具体的服务，导致出现重复的代码<br>2、修改一个公用的服务有可能会影响多个业务线，导致修改了一处，但是需要测试同学回归多个业务线的逻辑","like_count":0},{"had_liked":false,"id":269099,"user_name":"InfoQ_e9479e115e4f","can_delete":false,"product_type":"c1","uid":1985301,"ip_address":"","ucode":"669967F1463BAC","user_header":"","comment_is_top":false,"comment_ctime":1608523027,"is_pvip":false,"replies":[{"id":"97751","content":"是的，业务边界清晰了，微服务的边界也跟着就清晰了，所以叫领域驱动设计。配合分层架构就可以完美完成微服务设计了。拆分完成后，其实还要考虑未来微服务和领域模型的演进，如果提前将微服务内的聚合边界定义清楚了，就会容易很多。","user_name":"作者回复","user_name_real":"欧创新","uid":"1316268","ctime":1608709369,"ip_address":"","comment_id":269099,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1608523027","product_id":100037301,"comment_content":"最大的难题就是服务的拆分问题","like_count":0,"discussions":[{"author":{"id":1316268,"avatar":"https://static001.geekbang.org/account/avatar/00/14/15/ac/ba1f2494.jpg","nickname":"欧创新","note":"","ucode":"1F5AF0A327197A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":512149,"discussion_content":"是的，业务边界清晰了，微服务的边界也跟着就清晰了，所以叫领域驱动设计。配合分层架构就可以完美完成微服务设计了。拆分完成后，其实还要考虑未来微服务和领域模型的演进，如果提前将微服务内的聚合边界定义清楚了，就会容易很多。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1608709369,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":268251,"user_name":"朗月清风","can_delete":false,"product_type":"c1","uid":1197515,"ip_address":"","ucode":"A7A3D6812A9D88","user_header":"https://static001.geekbang.org/account/avatar/00/12/45/cb/9bd23fe4.jpg","comment_is_top":false,"comment_ctime":1608114338,"is_pvip":false,"replies":[{"id":"97483","content":"有必要的。用DDD分层架构可以实现解耦，建立高内聚松耦合的领域模型和微服务，以后如果需要对微服务进行架构演进，也会相对容易。","user_name":"作者回复","user_name_real":"欧创新","uid":"1316268","ctime":1608280284,"ip_address":"","comment_id":268251,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1608114338","product_id":100037301,"comment_content":"老师，公司现在开始尝试ddd，我个人觉得ddd是服务拆分的方法论，不过我们这边现在将单个的服务也按ddd的这个模式去分层，您觉得这样有必要吗？","like_count":0,"discussions":[{"author":{"id":1316268,"avatar":"https://static001.geekbang.org/account/avatar/00/14/15/ac/ba1f2494.jpg","nickname":"欧创新","note":"","ucode":"1F5AF0A327197A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":511886,"discussion_content":"有必要的。用DDD分层架构可以实现解耦，建立高内聚松耦合的领域模型和微服务，以后如果需要对微服务进行架构演进，也会相对容易。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1608280284,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":260253,"user_name":"Geek_dc038d","can_delete":false,"product_type":"c1","uid":2249296,"ip_address":"","ucode":"42CD48A85C387A","user_header":"https://thirdwx.qlogo.cn/mmopen/vi_32/DYAIOgq83epTx3WM1A1hxgmmUqz28azBPIvOkskRxImmszp84iaXERMEWCEicHHx8dfbvG901fM7rIAJmh4QzmfQ/132","comment_is_top":false,"comment_ctime":1604970317,"is_pvip":false,"replies":[{"id":"94611","content":"您说的这种情况在专栏第15章有专门讲述。15 | 边界：微服务的各种边界在架构演进中的作用。<br>在分布式微服务架构下，应用的设计方式会有很大的不同，会更强调领域建模和应用的解耦，因此会有更多的设计思想。这方面的内容太多，我就不一一列举了，相信你慢慢看完专栏后，对微服务的设计会有更深的体会。","user_name":"作者回复","user_name_real":"欧创新","uid":"1316268","ctime":1605063791,"ip_address":"","comment_id":260253,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1604970317","product_id":100037301,"comment_content":"我们公司实施微服务，感觉就是将系统拆分了多个功能模块，不同服务模块中通信主要是用调用api方式。有种不知道怎么按领域驱动建模","like_count":0,"discussions":[{"author":{"id":1316268,"avatar":"https://static001.geekbang.org/account/avatar/00/14/15/ac/ba1f2494.jpg","nickname":"欧创新","note":"","ucode":"1F5AF0A327197A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":509147,"discussion_content":"您说的这种情况在专栏第15章有专门讲述。15 | 边界：微服务的各种边界在架构演进中的作用。\n在分布式微服务架构下，应用的设计方式会有很大的不同，会更强调领域建模和应用的解耦，因此会有更多的设计思想。这方面的内容太多，我就不一一列举了，相信你慢慢看完专栏后，对微服务的设计会有更深的体会。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1605063791,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":256559,"user_name":"Geek_2655db","can_delete":false,"product_type":"c1","uid":1809331,"ip_address":"","ucode":"3BC81783F791BD","user_header":"","comment_is_top":false,"comment_ctime":1603677780,"is_pvip":false,"replies":[{"id":"93390","content":"这个只是某一个子域或者较小领域的领域建模和分析过程。对于大型企业的业务领域，这之前还会有从领域到子域的划分过程，形成如核心域，通用域以及支撑域等，然后基于这些领域完成您说的这个战术设计过程。后面的章节会有介绍。","user_name":"作者回复","user_name_real":"欧创新","uid":"1316268","ctime":1603690564,"ip_address":"","comment_id":256559,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1603677780","product_id":100037301,"comment_content":"先通过事件风暴来梳理领域对象，再根据关联关系形成聚合或上下文，这种方法从头开始就错了。<br><br>这是典型的战术指导战略做法。","like_count":0,"discussions":[{"author":{"id":1316268,"avatar":"https://static001.geekbang.org/account/avatar/00/14/15/ac/ba1f2494.jpg","nickname":"欧创新","note":"","ucode":"1F5AF0A327197A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":508053,"discussion_content":"这个只是某一个子域或者较小领域的领域建模和分析过程。对于大型企业的业务领域，这之前还会有从领域到子域的划分过程，形成如核心域，通用域以及支撑域等，然后基于这些领域完成您说的这个战术设计过程。后面的章节会有介绍。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1603690564,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":256386,"user_name":"Benjamin","can_delete":false,"product_type":"c1","uid":1017263,"ip_address":"","ucode":"3F2B65EA6E73AC","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTKCYY5U2ibQkBzkZt9O365vEPiaibrVz8w8turFnHwnSTr7o2NUjzqnzj1eNJ9XDakicic08iawRlO3TWhQ/132","comment_is_top":false,"comment_ctime":1603616363,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1603616363","product_id":100037301,"comment_content":"1、随着软件架构的升级，微服务架构应运而生，而如何进行理论性的服务拆分成为了很多人的争论和疑惑。说白了就是如何把控粒度和边界。<br>而2004年埃里克·埃文斯发表的《领域驱动设计》很好的解决了微服务架构的很多问题。DDD（Domain Driven Design）核心思想是通过领域驱动设计方法定义领域模型，从而确定业务和应用的边界，保证业务模型与代码模型的一致性。它不是架构，而是一种架构设计方法论，它通过边界划分将复杂业务领域简单化，帮我们设计出清晰的领域和应用边界，可以很容易地实现架构演进。<br>2、DDD 是一种架构设计方法，微服务是一种架构风格。DDD 主要关注：从业务领域视角划分领域边界，构建通用语言进行高效沟通，通过业务抽象，建立领域模型，维持业务和代码的逻辑一致性。微服务主要关注：运行时的进程间通信、容错和故障隔离，实现去中心化数据管理和去中心化服务治理，关注微服务的独立开发、测试、构建和部署。<br>3、DDD包括战略设计（使用事件风暴来建立领域模型，划分领域边界）和战术设计（技术实现）两部分。","like_count":0},{"had_liked":false,"id":236644,"user_name":"sishen007","can_delete":false,"product_type":"c1","uid":1540812,"ip_address":"","ucode":"DF10E07CC87B8F","user_header":"https://static001.geekbang.org/account/avatar/00/17/82/cc/391af175.jpg","comment_is_top":false,"comment_ctime":1595488461,"is_pvip":false,"replies":[{"id":"87567","content":"DDD是一种设计思想，需要慢慢品，建议多看几遍。","user_name":"作者回复","user_name_real":"欧创新","uid":"1316268","ctime":1595643084,"ip_address":"","comment_id":236644,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1595488461","product_id":100037301,"comment_content":"细嚼慢咽，需要细品，才能品出含义","like_count":0,"discussions":[{"author":{"id":1316268,"avatar":"https://static001.geekbang.org/account/avatar/00/14/15/ac/ba1f2494.jpg","nickname":"欧创新","note":"","ucode":"1F5AF0A327197A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":502160,"discussion_content":"DDD是一种设计思想，需要慢慢品，建议多看几遍。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1595643084,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":232584,"user_name":"李圣悦","can_delete":false,"product_type":"c1","uid":1638427,"ip_address":"","ucode":"C1786C98824E50","user_header":"https://static001.geekbang.org/account/avatar/00/19/00/1b/eee13196.jpg","comment_is_top":false,"comment_ctime":1594044033,"is_pvip":false,"replies":[{"id":"85896","content":"好好学习，天天向上。即使不是微服务，DDD的设计思想也是很有价值的。","user_name":"作者回复","user_name_real":"欧创新","uid":"1316268","ctime":1594089385,"ip_address":"","comment_id":232584,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1594044033","product_id":100037301,"comment_content":"目前还没接触到微服务，再次学习该课程。学学课程，看看评论","like_count":0,"discussions":[{"author":{"id":1316268,"avatar":"https://static001.geekbang.org/account/avatar/00/14/15/ac/ba1f2494.jpg","nickname":"欧创新","note":"","ucode":"1F5AF0A327197A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":500700,"discussion_content":"好好学习，天天向上。即使不是微服务，DDD的设计思想也是很有价值的。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1594089385,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":223746,"user_name":"大表哥","can_delete":false,"product_type":"c1","uid":1165672,"ip_address":"","ucode":"B0A7CDD118CB00","user_header":"https://static001.geekbang.org/account/avatar/00/11/c9/68/1cf4dcf7.jpg","comment_is_top":false,"comment_ctime":1591171772,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1591171772","product_id":100037301,"comment_content":"DDD面向业务，为服务面向技术。他们都是一种架构方法论。DDD不是一般小鸟玩得转的。微服务基本上就在在技术领域玩不是很关心业务和战略。<br><br>DDD更多的是让技术能通过领域语言与领域专家良好高效沟通，DDD的领域模型可以帮助技术加深对业务的了解保持架构代码与业务模型的一致性。","like_count":0},{"had_liked":false,"id":222253,"user_name":"加勒比海带","can_delete":false,"product_type":"c1","uid":1180186,"ip_address":"","ucode":"129E060503085A","user_header":"https://static001.geekbang.org/account/avatar/00/12/02/1a/f7d899f2.jpg","comment_is_top":false,"comment_ctime":1590727557,"is_pvip":false,"replies":[{"id":"81950","content":"DDD的战略设计其实比战术设计更重要，领域模型建好后，微服务设计就很容易了。","user_name":"作者回复","user_name_real":"渔","uid":"1316268","ctime":1590740464,"ip_address":"","comment_id":222253,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1590727557","product_id":100037301,"comment_content":"之前在做DDD的过程中，没有合理的方法论。现在有了，通过事件风暴去把业务流程做一个沙盘演进，得出大而杂乱的事件、实体、命令、对象。然后通过聚合，开始有了聚合根、实体、值对象。最后再划分出限界上下文。","like_count":0,"discussions":[{"author":{"id":1316268,"avatar":"https://static001.geekbang.org/account/avatar/00/14/15/ac/ba1f2494.jpg","nickname":"欧创新","note":"","ucode":"1F5AF0A327197A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":496728,"discussion_content":"DDD的战略设计其实比战术设计更重要，领域模型建好后，微服务设计就很容易了。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1590740464,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":206074,"user_name":"秦伟","can_delete":false,"product_type":"c1","uid":1931692,"ip_address":"","ucode":"D47C1F57500FE1","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/VjomKNzfFiaIttqYMxbjAWTG7NL7P2UqC5fbSvg0JW80SLnoR2oH1G4U2eibmxbR4wPpoqZdDnjC8GqgShDOBRzA/132","comment_is_top":false,"comment_ctime":1586784180,"is_pvip":false,"replies":[{"id":"77322","content":"需要分析一下你的业务场景哈。不知道能不能稍微再描述一下。","user_name":"作者回复","user_name_real":"渔","uid":"1316268","ctime":1587003318,"ip_address":"","comment_id":206074,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1586784180","product_id":100037301,"comment_content":"老师，请问下，用户余额，和用户消费流水，是同一个域吗？","like_count":0,"discussions":[{"author":{"id":1316268,"avatar":"https://static001.geekbang.org/account/avatar/00/14/15/ac/ba1f2494.jpg","nickname":"欧创新","note":"","ucode":"1F5AF0A327197A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":491662,"discussion_content":"需要分析一下你的业务场景哈。不知道能不能稍微再描述一下。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1587003318,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":204354,"user_name":"歸壹","can_delete":false,"product_type":"c1","uid":1942291,"ip_address":"","ucode":"BAA38DB80A75DA","user_header":"https://static001.geekbang.org/account/avatar/00/1d/a3/13/0f4f6f3d.jpg","comment_is_top":false,"comment_ctime":1586390775,"is_pvip":false,"replies":[{"id":"76395","content":"可以这么理解。但是DDD还会考虑更多。","user_name":"作者回复","user_name_real":"渔","uid":"1316268","ctime":1586396323,"ip_address":"","comment_id":204354,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1586390775","product_id":100037301,"comment_content":"我是这样理解ddd对吗?架构与实现要与现实中业务有一个映射关系。建立了映射关系，就易沟通，好维护了。ddd提供了一套建立这种关系的方法论。","like_count":0,"discussions":[{"author":{"id":1316268,"avatar":"https://static001.geekbang.org/account/avatar/00/14/15/ac/ba1f2494.jpg","nickname":"欧创新","note":"","ucode":"1F5AF0A327197A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":491150,"discussion_content":"可以这么理解。但是DDD还会考虑更多。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1586396323,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":203683,"user_name":"StefanLiu","can_delete":false,"product_type":"c1","uid":1174400,"ip_address":"","ucode":"5FAA9835A2B276","user_header":"https://static001.geekbang.org/account/avatar/00/11/eb/80/f5c98e5f.jpg","comment_is_top":false,"comment_ctime":1586254378,"is_pvip":false,"replies":[{"id":"76136","content":"其实也不难。关键是要理解DDD的核心思想，做的过程有所取舍，先易后难，先从划分边界做起，这个边界有微服务之间的边界，也有微服务内的聚合边界。","user_name":"作者回复","user_name_real":"渔","uid":"1316268","ctime":1586263178,"ip_address":"","comment_id":203683,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1586254378","product_id":100037301,"comment_content":"只有几个人的团队，想做ddd是不是困难倍增…","like_count":0,"discussions":[{"author":{"id":1316268,"avatar":"https://static001.geekbang.org/account/avatar/00/14/15/ac/ba1f2494.jpg","nickname":"欧创新","note":"","ucode":"1F5AF0A327197A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":490933,"discussion_content":"其实也不难。关键是要理解DDD的核心思想，做的过程有所取舍，先易后难，先从划分边界做起，这个边界有微服务之间的边界，也有微服务内的聚合边界。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1586263178,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":194306,"user_name":"未来小娃","can_delete":false,"product_type":"c1","uid":1047329,"ip_address":"","ucode":"477D166EBB6B70","user_header":"https://static001.geekbang.org/account/avatar/00/0f/fb/21/d017438c.jpg","comment_is_top":false,"comment_ctime":1585047969,"is_pvip":true,"replies":[{"id":"74213","content":"限界上下文其实就是一种特殊的子域，就是业务边界，不过会基于这个边界完成领域建模和微服务设计和拆分。","user_name":"作者回复","user_name_real":"渔","uid":"1316268","ctime":1585146971,"ip_address":"","comment_id":194306,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1585047969","product_id":100037301,"comment_content":"限界上下文是不是可以理解为业务模块得门面，怎么对应有点迷惑","like_count":0,"discussions":[{"author":{"id":1316268,"avatar":"https://static001.geekbang.org/account/avatar/00/14/15/ac/ba1f2494.jpg","nickname":"欧创新","note":"","ucode":"1F5AF0A327197A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":488809,"discussion_content":"限界上下文其实就是一种特殊的子域，就是业务边界，不过会基于这个边界完成领域建模和微服务设计和拆分。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1585146971,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":192371,"user_name":"大橘为重","can_delete":false,"product_type":"c1","uid":1106152,"ip_address":"","ucode":"96479F205B8384","user_header":"https://static001.geekbang.org/account/avatar/00/10/e0/e8/66439469.jpg","comment_is_top":false,"comment_ctime":1584847913,"is_pvip":true,"discussion_count":0,"race_medal":0,"score":"1584847913","product_id":100037301,"comment_content":"开拓了视野☺","like_count":0},{"had_liked":false,"id":190338,"user_name":"rz-xhh","can_delete":false,"product_type":"c1","uid":1420025,"ip_address":"","ucode":"DCDB95EA418249","user_header":"https://static001.geekbang.org/account/avatar/00/15/aa/f9/7b1fb376.jpg","comment_is_top":false,"comment_ctime":1584630276,"is_pvip":false,"replies":[{"id":"73302","content":"理解的没问题。DDD除了划分领域边界，对中台进行分类外。还会在战术设计中明确领域对象，以及各个对象的依赖关系，在分层架构中的位置。","user_name":"作者回复","user_name_real":"渔","uid":"1316268","ctime":1584689783,"ip_address":"","comment_id":190338,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1584630276","product_id":100037301,"comment_content":"DDD最主要的划分好领域，做成业务中台或者通用中台，然后上层根据不同的情况做具体的处理，不知这样理解对吗","like_count":0,"discussions":[{"author":{"id":1316268,"avatar":"https://static001.geekbang.org/account/avatar/00/14/15/ac/ba1f2494.jpg","nickname":"欧创新","note":"","ucode":"1F5AF0A327197A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":487953,"discussion_content":"理解的没问题。DDD除了划分领域边界，对中台进行分类外。还会在战术设计中明确领域对象，以及各个对象的依赖关系，在分层架构中的位置。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1584689783,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":189991,"user_name":"我得儿意的笑","can_delete":false,"product_type":"c1","uid":1116344,"ip_address":"","ucode":"752E66C6AA96E2","user_header":"https://static001.geekbang.org/account/avatar/00/11/08/b8/ac8a778e.jpg","comment_is_top":false,"comment_ctime":1584589817,"is_pvip":false,"replies":[{"id":"73123","content":"希望能对你有帮助。","user_name":"作者回复","user_name_real":"渔","uid":"1316268","ctime":1584596716,"ip_address":"","comment_id":189991,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1584589817","product_id":100037301,"comment_content":"字字珠玑~~~ 相见恨晚~~~","like_count":0,"discussions":[{"author":{"id":1316268,"avatar":"https://static001.geekbang.org/account/avatar/00/14/15/ac/ba1f2494.jpg","nickname":"欧创新","note":"","ucode":"1F5AF0A327197A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":487848,"discussion_content":"希望能对你有帮助。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1584596716,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":181380,"user_name":"neohope","can_delete":false,"product_type":"c1","uid":1043475,"ip_address":"","ucode":"C0268F6E7E2B6E","user_header":"https://static001.geekbang.org/account/avatar/00/0f/ec/13/49e98289.jpg","comment_is_top":false,"comment_ctime":1582532124,"is_pvip":true,"replies":[{"id":"70378","content":"是的，微服务的实施需要很多的前提条件，在这些条件不具备的时候，不建议拆分出过多的微服务。可以按照DDD的设计方法划分好微服务的内外部边界，等条件具备后再拆也是可以的。","user_name":"作者回复","user_name_real":"渔","uid":"1316268","ctime":1582621030,"ip_address":"","comment_id":181380,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1582532124","product_id":100037301,"comment_content":"公司从四五年前就开始转型微服务架构，遇到最大的问题，是以下几个：1、内部脱节，我们的实施人员跟不上技术进步的脚步，遇到问题都要研发上，推行困难；2、服务治理做的不够好，加剧了问题1；3、配置中心、日志、监控等做的不够完善，新项目实施困难；4、很多用户机房里，对Linux的容器化支持不好，推广容器困难；5、服务一开始拆分的太细了，我们业务量没有那么大，但用了组件过多，从而部署维护更加困难。<br><br>后来，我们把部分服务合并，然后配置中心、日志、监控集成好，就好多了。","like_count":0,"discussions":[{"author":{"id":1316268,"avatar":"https://static001.geekbang.org/account/avatar/00/14/15/ac/ba1f2494.jpg","nickname":"欧创新","note":"","ucode":"1F5AF0A327197A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":484981,"discussion_content":"是的，微服务的实施需要很多的前提条件，在这些条件不具备的时候，不建议拆分出过多的微服务。可以按照DDD的设计方法划分好微服务的内外部边界，等条件具备后再拆也是可以的。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1582621030,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":174144,"user_name":"武勇_ 下一个十年","can_delete":false,"product_type":"c1","uid":1134406,"ip_address":"","ucode":"CF13503AA40882","user_header":"https://static001.geekbang.org/account/avatar/00/11/4f/46/9efa6a1c.jpg","comment_is_top":false,"comment_ctime":1580027190,"is_pvip":false,"replies":[{"id":"67721","content":"谢谢😜","user_name":"作者回复","user_name_real":"渔","uid":"1316268","ctime":1580113509,"ip_address":"","comment_id":174144,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1580027190","product_id":100037301,"comment_content":"您讲的太好了","like_count":0,"discussions":[{"author":{"id":1316268,"avatar":"https://static001.geekbang.org/account/avatar/00/14/15/ac/ba1f2494.jpg","nickname":"欧创新","note":"","ucode":"1F5AF0A327197A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":482305,"discussion_content":"谢谢😜","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1580113509,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":173287,"user_name":"很ok的火龙果","can_delete":false,"product_type":"c1","uid":1813273,"ip_address":"","ucode":"64D58FF8487F0D","user_header":"https://static001.geekbang.org/account/avatar/00/1b/ab/19/69e9f0fb.jpg","comment_is_top":false,"comment_ctime":1579494883,"is_pvip":false,"replies":[{"id":"67227","content":"除了技术和后勤之类的，差不多就是业务了吧😄。","user_name":"作者回复","user_name_real":"渔","uid":"1316268","ctime":1579529956,"ip_address":"","comment_id":173287,"utype":1}],"discussion_count":2,"race_medal":0,"score":"1579494883","product_id":100037301,"comment_content":"突然有些迷茫，我该怎么理解“业务”两个字？","like_count":0,"discussions":[{"author":{"id":1316268,"avatar":"https://static001.geekbang.org/account/avatar/00/14/15/ac/ba1f2494.jpg","nickname":"欧创新","note":"","ucode":"1F5AF0A327197A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":482023,"discussion_content":"除了技术和后勤之类的，差不多就是业务了吧😄。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1579529956,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1188023,"avatar":"https://static001.geekbang.org/account/avatar/00/12/20/b7/bdb3bcf0.jpg","nickname":"Eternal","note":"","ucode":"EA6FE7CC98F740","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":300826,"discussion_content":"业务和产品经理可以划等号嘛？","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1598276116,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":172776,"user_name":"Geek_d38f30","can_delete":false,"product_type":"c1","uid":1512147,"ip_address":"","ucode":"955D6480731336","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/ib1aca6ibMC3bcTZeVdTFalyyhdvy4DLQ7s4WBTWaw95k8IJNTUkZ5VwfB9rYwxVz3PAz4chBJhWcyMHib9KdEEnQ/132","comment_is_top":false,"comment_ctime":1579285962,"is_pvip":false,"replies":[{"id":"67069","content":"我见过的很多人在微服务拆分的时候是靠拍脑袋拆出了的。DDD主要是提供你一套方法论，让你拆出来的微服务是高内聚低耦合的，内外部有清晰的边界。","user_name":"作者回复","user_name_real":"渔","uid":"1316268","ctime":1579397033,"ip_address":"","comment_id":172776,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1579285962","product_id":100037301,"comment_content":"我们前期对业务不熟悉，对业务做了拆分微服务。后面发现一些业务是不应该拆分的。后期开发成本很高","like_count":0,"discussions":[{"author":{"id":1316268,"avatar":"https://static001.geekbang.org/account/avatar/00/14/15/ac/ba1f2494.jpg","nickname":"欧创新","note":"","ucode":"1F5AF0A327197A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":481849,"discussion_content":"我见过的很多人在微服务拆分的时候是靠拍脑袋拆出了的。DDD主要是提供你一套方法论，让你拆出来的微服务是高内聚低耦合的，内外部有清晰的边界。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1579397033,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":153500,"user_name":"caozhao","can_delete":false,"product_type":"c1","uid":1028201,"ip_address":"","ucode":"A4D6A7A42E7919","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTIh6ofbI5fJbYN0kYmOw8hK6GLg2AOl2DX3Tnk1dC7OQFoQw11OLomtjnMBgjPVCy6eCjaDE5X6icg/132","comment_is_top":false,"comment_ctime":1574248117,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1574248117","product_id":100037301,"comment_content":"DDD不但可以应用在微服务中，还可以使用在单体应用上，很期待","like_count":0},{"had_liked":false,"id":142928,"user_name":"探索无止境","can_delete":false,"product_type":"c1","uid":1044178,"ip_address":"","ucode":"91D2A9907DFA79","user_header":"https://static001.geekbang.org/account/avatar/00/0f/ee/d2/7024431c.jpg","comment_is_top":false,"comment_ctime":1571588319,"is_pvip":false,"replies":[{"id":"55206","content":"后面会有案例介绍，敬请等待。","user_name":"作者回复","user_name_real":"渔","uid":"1316268","ctime":1571608706,"ip_address":"","comment_id":142928,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1571588319","product_id":100037301,"comment_content":"好抽象，就是感觉有案例支撑理论会更好，更利于阅读下去","like_count":0,"discussions":[{"author":{"id":1316268,"avatar":"https://static001.geekbang.org/account/avatar/00/14/15/ac/ba1f2494.jpg","nickname":"欧创新","note":"","ucode":"1F5AF0A327197A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":471329,"discussion_content":"后面会有案例介绍，敬请等待。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1571608706,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":141439,"user_name":"赵小通","can_delete":false,"product_type":"c1","uid":1047266,"ip_address":"","ucode":"C19D395C2E8BA4","user_header":"https://static001.geekbang.org/account/avatar/00/0f/fa/e2/178bc954.jpg","comment_is_top":false,"comment_ctime":1571154392,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1571154392","product_id":100037301,"comment_content":"打卡","like_count":0},{"had_liked":false,"id":141435,"user_name":"　素丶　　","can_delete":false,"product_type":"c1","uid":1081535,"ip_address":"","ucode":"883B7EDBE76104","user_header":"https://static001.geekbang.org/account/avatar/00/10/80/bf/3041138b.jpg","comment_is_top":false,"comment_ctime":1571152982,"is_pvip":false,"replies":[{"id":"54662","content":"你好。不清楚你说的自定义的业务异常是指什么？能否举一个例子？","user_name":"作者回复","user_name_real":"渔","uid":"1316268","ctime":1571189808,"ip_address":"","comment_id":141435,"utype":1}],"discussion_count":2,"race_medal":0,"score":"1571152982","product_id":100037301,"comment_content":"老师您好，问一下。在 domain 层里，一些自定义的业务异常该怎么定义和处理？","like_count":0,"discussions":[{"author":{"id":1316268,"avatar":"https://static001.geekbang.org/account/avatar/00/14/15/ac/ba1f2494.jpg","nickname":"欧创新","note":"","ucode":"1F5AF0A327197A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":470752,"discussion_content":"你好。不清楚你说的自定义的业务异常是指什么？能否举一个例子？","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1571189808,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1081535,"avatar":"https://static001.geekbang.org/account/avatar/00/10/80/bf/3041138b.jpg","nickname":"　素丶　　","note":"","ucode":"883B7EDBE76104","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":34803,"discussion_content":"比如说我在聚合里面做一些数据更新或者数据状态校验的操作，但这条数据不存在或者状态不允许相关业务操作，这时候我需要抛出一个异常把错误消息传递给前端。这时候我异常该怎么定义，把它放在系统的哪一层?还有异常处理，我是直接定义一个全局异常处理器去捕捉这个异常，还是说把它抛给它上一层，比如说应用层。","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1571223001,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":141043,"user_name":"拙言","can_delete":false,"product_type":"c1","uid":1310192,"ip_address":"","ucode":"40179CFED35579","user_header":"https://static001.geekbang.org/account/avatar/00/13/fd/f0/67ed878c.jpg","comment_is_top":false,"comment_ctime":1571105399,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1571105399","product_id":100037301,"comment_content":"打卡学习","like_count":0},{"had_liked":false,"id":140868,"user_name":"阿神","can_delete":false,"product_type":"c1","uid":1014761,"ip_address":"","ucode":"E34BA27C101E9F","user_header":"https://static001.geekbang.org/account/avatar/00/0f/7b/e9/5955aa73.jpg","comment_is_top":false,"comment_ctime":1571064106,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1571064106","product_id":100037301,"comment_content":"已经在公司的中台建设中落地，期待专栏有更多新发现","like_count":0},{"had_liked":false,"id":140799,"user_name":"Albert🐎","can_delete":false,"product_type":"c1","uid":1041879,"ip_address":"","ucode":"48CF4C1211A3E8","user_header":"https://static001.geekbang.org/account/avatar/00/0f/e5/d7/d48f6b04.jpg","comment_is_top":false,"comment_ctime":1571050395,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1571050395","product_id":100037301,"comment_content":"1、微服务的切分和演化<br>2、微服务状态的一致性问题<br>3、微服务部署架构的问题<br>4、灰度环境下，微服务兼容性和服务路由选择","like_count":0},{"had_liked":false,"id":140790,"user_name":"一葉寒濤","can_delete":false,"product_type":"c1","uid":1077648,"ip_address":"","ucode":"1370FED5A59C99","user_header":"https://static001.geekbang.org/account/avatar/00/10/71/90/ebdd8b9d.jpg","comment_is_top":false,"comment_ctime":1571049707,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1571049707","product_id":100037301,"comment_content":"学习DDD","like_count":0}]}