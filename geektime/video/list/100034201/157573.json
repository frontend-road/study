{"id":157573,"title":"43 | Quorum模式下ZooKeeper节点的Request Processor Pipeline","content":"<p><strong>课件和Demo地址</strong></p><p><a href=\"https://gitee.com/geektime-geekbang/geekbang-zk-course\">https://gitee.com/geektime-geekbang/geekbang-zk-course</a></p>","comments":[{"had_liked":false,"id":174998,"user_name":"benny","can_delete":false,"product_type":"c3","uid":1123043,"ip_address":"","ucode":"E2F30AF0C808D9","user_header":"https://static001.geekbang.org/account/avatar/00/11/22/e3/510b69f9.jpg","comment_is_top":false,"comment_ctime":1580519337,"is_pvip":false,"replies":[{"id":79225,"content":"PreRequestProcessor要为写操作生成事务。standalone模式下，ZooKeeper节点也要处理写操作。","user_name":"作者回复","user_name_real":"Geek_215586","uid":1591870,"ctime":1588573932,"ip_address":"","comment_id":174998,"utype":1}],"discussion_count":2,"race_medal":0,"score":2,"product_id":100034201,"comment_content":"standalone模式下为啥还要在PreRequestProcessor里面入队 然后再出队处理？","like_count":2,"discussions":[{"author":{"id":1591870,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTJyDiaaDJrwRsdUia9HxA8EuWaDVLr4E1gMG5y2ZTxV7BNUhdNABCmH3GMZTzib796X5duibiaeuRmNXeg/132","nickname":"Geek_215586","note":"","ucode":"5916AC9CC5FBE2","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":482591,"discussion_content":"PreRequestProcessor要为写操作生成事务。standalone模式下，ZooKeeper节点也要处理写操作。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1588573932,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":2433927,"avatar":"","nickname":"Geek_94bc60","note":"","ucode":"6DA2D702F0D158","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":350084,"discussion_content":"ye","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1613703441,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":285985,"user_name":"Geek_c2b5d2","can_delete":false,"product_type":"c3","uid":2374594,"ip_address":"","ucode":"E281462B6C97D4","user_header":"","comment_is_top":false,"comment_ctime":1617093600,"is_pvip":false,"replies":null,"discussion_count":2,"race_medal":0,"score":2,"product_id":100034201,"comment_content":"老师好，有几个问题想咨询一下\n1.commiterProcesser中的commit动作做了什么具体的操作；看代码逻辑，就是允许request继续往下处理，可以走到finalRequestProcess回响应\n2.事务请求处理过程中，不管是leader还是follower，回复了ack说明已经落盘，但是回了ack却没有执行commit（不过半或者进程宕机），那这部分数据已经落盘了，该怎么处理\n3.syncRequestProcess中的append、flush操作 与 finalRequestProcesser中操作内存数据的关联性是什么，怎么保证的落盘与操作内存数据的原子性\n4.客户端发写事务到follower，服务端集群内部的处理是不是：follower将请求放入commiterProcesser，同时将请求发给leader，leader通过proposal处理后，通知follower执行commit；那commit执行后，是follower直接通过finalRequestProcesser回响应给客户端吗，leader收到的写事务处理完后，是不是会回请求给follower，这个响应起到了什么作用\n\n感谢！","like_count":3,"discussions":[{"author":{"id":2374594,"avatar":"","nickname":"Geek_c2b5d2","note":"","ucode":"E281462B6C97D4","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":364041,"discussion_content":"再加一个问题\n5.事务性请求处理失败，服务端给客户端回失败响应的机制流程是什么样的。在commit阶段一直不到半数，该事务请求是不是就一直在commitProcesser中等待，最后是怎么触发的失败接着往下处理该请求，是session超时触发吗","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1617356136,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":2374594,"avatar":"","nickname":"Geek_c2b5d2","note":"","ucode":"E281462B6C97D4","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":363345,"discussion_content":"4更正一下描述\n4.客户端发写事务到follower，服务端集群内部的处理是不是：follower将请求放入commiterProcesser，同时将请求发给leader，leader通过proposal处理后，通知follower执行commit；那commit执行后，是follower直接通过finalRequestProcesser回响应给客户端吗，leader收到follower转发的写事务处理完后，是不是会回 响应 给follower，这个响应起到了什么作用","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1617174219,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]}]}