{"id":171182,"title":"29 | Service Mesh：如何屏蔽服务化系统的服务治理细节？","content":"<p>你好，我是唐扬。</p><p>在分布式服务篇的前几节课程中，我带你了解了在微服务化过程中，要使用哪些中间件解决服务之间通信和服务治理的问题，其中就包括：</p><ul>\n<li>用RPC框架解决服务通信的问题；</li>\n<li>用注册中心解决服务注册和发现的问题；</li>\n<li>使用分布式Trace中间件，排查跨服务调用慢请求；</li>\n<li>使用负载均衡服务器，解决服务扩展性的问题；</li>\n<li>在API网关中植入服务熔断、降级和流控等服务治理的策略。</li>\n</ul><p>经历了这几环之后，你的垂直电商系统基本上已经完成了微服务化拆分的改造。不过目前来看，你的系统使用的语言还是以Java为主，之前提到的服务治理的策略，和服务之间通信协议也是使用Java语言来实现的。</p><p><strong>那么这会存在一个问题：</strong>一旦你的团队中，有若干个小团队开始尝试使用Go或者PHP来开发新的微服务，那么在微服务化过程中，一定会受到挑战。</p><h2>跨语言体系带来的挑战</h2><p>其实，一个公司的不同团队，使用不同的开发语言是比较常见的。比如，微博的主要开发语言是Java和PHP，近几年也有一些使用Go开发的系统。而使用不同的语言开发出来的微服务，<strong>在相互调用时会存在两方面的挑战：</strong></p><p>一方面，服务之间的通信协议上，要对多语言友好，要想实现跨语言调用，关键点是选择合适的序列化方式。<strong>我给你举一个例子。</strong></p><!-- [[[read_end]]] --><p>比如，你用Java开发一个RPC服务，使用的是Java原生的序列化方式。这种序列化方式对于其它语言并不友好，那么，你使用其它语言调用这个RPC服务时，就很难解析序列化之后的二进制流。<strong>所以我建议你，</strong>在选择序列化协议时，考虑序列化协议是否对多语言友好，比如，你可以选择Protobuf、Thrift，这样一来，跨语言服务调用的问题，就可以很容易地解决了。</p><p>另一方面，使用新语言开发的微服务，无法使用之前积累的服务治理的策略。比如说，RPC客户端在使用注册中心订阅服务的时候，为了避免每次RPC调用都要与注册中心交互，一般会在RPC客户端缓存节点的数据。如果注册中心中的服务节点发生了变更，那么RPC客户端的节点缓存会得到通知，并且变更缓存数据。</p><p>而且，为了减少注册中心的访问压力，我们在RPC客户端上一般会考虑使用多级缓存（内存缓存和文件缓存）来保证节点缓存的可用性。而这些策略在开始的时候，都是使用Java语言来实现的，并且封装在注册中心客户端里提供给RPC客户端使用。如果更换了新的语言，这些逻辑就都要使用新的语言实现一套。</p><p>除此之外，负载均衡、熔断降级、流量控制、打印分布式追踪日志等等，这些服务治理的策略都需要重新实现，而使用其它语言重新实现这些策略无疑会带来巨大的工作量，也是中间件研发中一个很大的痛点。</p><p>那么，你要如何屏蔽服务化架构中服务治理的细节，或者说，<strong>如何让服务治理的策略在多语言之间复用呢？</strong></p><p>可以考虑将服务治理的细节，从RPC客户端中拆分出来，形成一个代理层单独部署。这个代理层可以使用单一的语言实现，所有的流量都经过代理层来使用其中的服务治理策略。这是一种“关注点分离”的实现方式，<strong>也是Service Mesh的核心思想。</strong></p><h2>Service Mesh是如何工作的</h2><h3>1. 什么是Service Mesh</h3><p>Service Mesh主要处理服务之间的通信，它的主要实现形式就是在应用程序同主机上部署一个代理程序。一般来讲，我们将这个代理程序称为“Sidecar（边车）”，服务之间的通信也从之前的客户端和服务端直连，变成了下面这种形式：</p><p><img src=\"https://static001.geekbang.org/resource/image/83/1b/833f4c8daea04104dfa5566715642c1b.jpg?wh=1142*305\" alt=\"\"></p><p>在这种形式下，RPC客户端将数据包先发送给与自身同主机部署的Sidecar，在Sidecar中经过服务发现、负载均衡、服务路由、流量控制之后，再将数据发往指定服务节点的Sidecar，在服务节点的Sidecar中，经过记录访问日志、记录分布式追踪日志、限流之后，再将数据发送给RPC服务端。</p><p>这种方式可以把业务代码和服务治理的策略隔离开，将服务治理策略下沉，让它成为独立的基础模块。这样一来，不仅可以实现跨语言服务治理策略的复用，还能对这些Sidecar做统一的管理。</p><p><strong>目前，业界提及最多的Service Mesh方案当属<a href=\"https://istio.io\">Istio</a>，</strong> 它的玩法是这样的：</p><p><img src=\"https://static001.geekbang.org/resource/image/60/64/604415b5d99ca176baf1c628d0677c64.jpg?wh=1142*482\" alt=\"\"></p><p>它将组件分为数据平面和控制平面，数据平面就是我提到的Sidecar（Istio使用<a href=\"https://www.envoyproxy.io/\">Envoy</a>作为Sidecar的实现）。控制平面主要负责服务治理策略的执行，在Istio中，主要分为Mixer、Pilot和Istio-auth三部分。</p><p>你可以先不了解每一部分的作用，只知道它们共同构成了服务治理体系就可以了。</p><p>然而，在Istio中，每次请求都需要经过控制平面，也就是说，每次请求都需要跨网络地调用Mixer，这会极大地影响性能。</p><p>因此，国内大厂开源出来的Service Mesh方案中，一般只借鉴Istio的数据平面和控制平面的思路，然后将服务治理策略做到了Sidecar中，控制平面只负责策略的下发，这样就不需要每次请求都经过控制平面，性能上会改善很多。</p><h3>2. 如何将流量转发到Sidecar中</h3><p>在Service Mesh的实现中，一个主要的问题是如何尽量无感知地引入Sidecar作为网络代理。也就是说，无论是数据流入还是数据流出时，都要将数据包重定向到Sidecar的端口上。实现思路一般有两种：</p><p>第一种，使用iptables的方式来实现流量透明的转发，而Istio就默认了使用iptables来实现数据包的转发。为了能更清晰地说明流量转发的原理，我们先简单地回顾一下什么是iptables。</p><p>Iptables是 Linux 内核中，防火墙软件 Netfilter 的管理工具，它位于用户空间，可以控制Netfilter实现地址转换的功能。在iptables中默认有五条链，你可以把这五条链当作数据包流转过程中的五个步骤，依次为PREROUTING，INPUT，FORWARD，OUTPUT和POSTROUTING。数据包传输的大体流程如下：</p><p><img src=\"https://static001.geekbang.org/resource/image/0e/8e/0e432f5623f7c1528341d2459b949a8e.jpg?wh=1142*272\" alt=\"\"></p><p>从图中可以看到，数据包以PREROUTING链作为入口，当数据包目的地为本机时，它们也都会流经到OUTPUT链。所以，我们可以在这两个链上增加一些规则，将数据包重定向。我以Istio为例，带你看看如何使用iptables实现流量转发。</p><p>在Istio中，有一个叫做“istio-iptables.sh”的脚本，这个脚本在Sidecar被初始化的时候执行，主要是设置一些iptables规则。</p><p>我摘录了一些关键点来说明一下：</p><pre><code>//流出流量处理\niptables -t nat -N ISTIO_REDIRECT   //增加ISTIO_REDIRECT链处理流出流量\niptables -t nat -A ISTIO_REDIRECT -p tcp -j REDIRECT --to-port &quot;${PROXY_PORT}&quot; // 重定向流量到Sidecar的端口上\niptables -t nat -N ISTIO_OUTPUT // 增加ISTIO_OUTPUT链处理流出流量\niptables -t nat -A OUTPUT -p tcp -j ISTIO_OUTPUT// 将OUTPUT链的流量重定向到ISTIO_OUTPUT链上\nfor uid in ${PROXY_UID}; do\n\t  iptables -t nat -A ISTIO_OUTPUT -m owner --uid-owner &quot;${uid}&quot; -j RETURN //Sidecar本身的流量不转发\ndone\nfor gid in ${PROXY_GID}; do\n\t  iptables -t nat -A ISTIO_OUTPUT -m owner --gid-owner &quot;${gid}&quot; -j RETURN  //Sidecar本身的流量不转发\ndone\niptables -t nat -A ISTIO_OUTPUT -j ISTIO_REDIRECT //将ISTIO_OUTPUT链的流量转发到ISTIO_REDIRECT\n\n//流入流量处理\niptables -t nat -N ISTIO_IN_REDIRECT  //增加ISTIO_IN_REDIRECT链处理流入流量\niptables -t nat -A ISTIO_IN_REDIRECT -p tcp -j REDIRECT --to-port &quot;${PROXY_PORT}&quot; // 将流入流量重定向到Sidecar端口\niptables -t ${table} -N ISTIO_INBOUND //增加ISTIO_INBOUND链处理流入流量\niptables -t ${table} -A PREROUTING -p tcp -j ISTIO_INBOUND //将PREROUTING的流量重定向到ISTIO_INBOUND链\niptables -t nat -A ISTIO_INBOUND -p tcp --dport &quot;${port}&quot; -j ISTIO_IN_REDIRECT //将ISTIO_INBOUND链上指定目的端口的流量重定向到ISTIO_IN_REDIRECT链\n</code></pre><p>假设服务的节点部署在9080端口上，Sidecar开发的端口是15001，那么流入流量的流向如下：</p><p><img src=\"https://static001.geekbang.org/resource/image/01/24/014a530acbcac3f8b57635627a22e924.jpg?wh=1142*168\" alt=\"\"></p><p>流出流量的流量图如下：</p><p><img src=\"https://static001.geekbang.org/resource/image/43/55/43ee298a3f01c0de5d3ee0c5c96ea455.jpg?wh=1142*152\" alt=\"\"></p><p><strong>Iptables方式的优势在于对业务完全透明，</strong>业务甚至不知道有Sidecar存在，这样会减少业务接入的时间。不过它也有缺陷，那就是它是在高并发下，性能上会有损耗，因此国内大厂采用了另外一种方式：轻量级客户端。</p><p>在这种方式下，RPC客户端会通过配置的方式，知道Sidecar的部署端口，然后通过一个轻量级客户端，将调用服务的请求发送给Sidecar。Sidecar在转发请求之前，先执行一些服务治理的策略，比如，从注册中心中查询到服务节点信息并且缓存起来，然后从服务节点中，使用某种负载均衡的策略选出一个节点等等。</p><p>请求被发送到服务端的Sidecar上后，然后在服务端记录访问日志和分布式追踪日志，再把请求转发到真正的服务节点上。当然，服务节点在启动时，会委托服务端Sidecar向注册中心注册节点，Sidecar也就知道了真正服务节点部署的端口是多少。整个请求过程如图所示：</p><p><img src=\"https://static001.geekbang.org/resource/image/ea/1d/ea37c1e8374d2c67b3348b566fb8921d.jpg?wh=1142*426\" alt=\"\"></p><p>当然，除了iptables和轻量级客户端两种方式外，目前在探索的方案还有<a href=\"https://github.com/cilium/cilium\">Cilium</a>。这个方案可以从Socket层面实现请求的转发，也就可以避免iptables方式在性能上的损耗。<strong>在这几种方案中，我建议你使用轻量级客户端的方式，</strong>这样虽然会有一些改造成本，但是却在实现上最简单，可以快速让Service Mesh在你的项目中落地。</p><p>当然，无论采用哪种方式，你都可以实现将Sidecar部署到客户端和服务端的调用链路上，让它代理进出流量。这样，你就可以使用运行在Sidecar中的服务治理的策略了。至于这些策略我在前面的课程中都带你了解过（你可以回顾23至26讲的课程），这里就不再赘述了。</p><p>与此同时，我也建议你了解目前业界一些开源的Service Mesh框架，这样在选择方案时可以多一些选择。目前在开源领域比较成熟的Service Mesh框架有下面几个，你可以通过阅读它们的文档来深入了解，作为本节课的引申阅读。</p><ol>\n<li>\n<p><a href=\"https://istio.io/\">Istio</a> 这个框架在业界最为著名，它提出了数据平面和控制平面的概念，是Service Mesh的先驱，缺陷就是刚才提到的Mixer的性能问题。</p>\n</li>\n<li>\n<p><a href=\"https://linkerd.io/\">Linkerd</a> 是第一代的Service Mesh，使用Scala语言编写，其劣势就是内存的占用。</p>\n</li>\n<li>\n<p><a href=\"https://github.com/sofastack/sofa-mesh\">SOFAMesh</a> 是蚂蚁金服开源的Service Mesh组件，在蚂蚁金服已经有大规模落地的经验。</p>\n</li>\n</ol><h2>课程小结</h2><p>本节课，为了解决跨语言场景下服务治理策略的复用问题，我带你了解了什么是Service Mesh，以及如何在实际项目中落地，你需要的重点内容如下：</p><p>1.Service Mesh分为数据平面和控制平面。数据平面主要负责数据的传输；控制平面用来控制服务治理策略的植入。出于性能的考虑，一般会把服务治理策略植入到数据平面中，控制平面负责服务治理策略数据的下发。</p><p>2.Sidecar的植入方式目前主要有两种实现方式，一种是使用iptables实现流量的劫持；另一种是通过轻量级客户端来实现流量转发。</p><p>目前，在一些大厂中，比如微博、蚂蚁金服，Service Mesh已经开始在实际项目中大量的落地实践，而我建议你持续关注这项技术。它本身是一种将业务与通信基础设施分离的技术，如果你的业务上遇到多语言环境下服务治理的困境；如果你的遗留服务，需要快速植入服务治理策略；如果你想要将你在服务治理方面积累的经验快速地与其他团队共享，那么Service Mesh就是一个不错的选择。</p><h2>一课一思</h2><p>你在实际的工作中，是否使用过Service Mesh解决过跨语言的服务治理的问题呢？在使用的过程中是否踩到过坑呢？欢迎在留言区与我分享你的经验。</p><p>最后，感谢你的阅读，如果这篇文章让你有所收获，也欢迎你将它分享给更多的朋友。</p>","neighbors":{"left":{"article_title":"28 | 多机房部署：跨地域的分布式系统如何做？","id":171115},"right":{"article_title":"30 | 给系统加上眼睛：服务端监控要怎么做？","id":171328}},"comments":[{"had_liked":false,"id":156879,"user_name":"Corner","can_delete":false,"product_type":"c1","uid":1446316,"ip_address":"","ucode":"7862D593172536","user_header":"https://static001.geekbang.org/account/avatar/00/16/11/ac/9cc5e692.jpg","comment_is_top":false,"comment_ctime":1574991477,"is_pvip":false,"replies":[{"id":"60227","content":"据我了解微博和蚂蚁金服都采用了这种方案","user_name":"作者回复","user_name_real":"唐扬","uid":"1448977","ctime":1575014499,"ip_address":"","comment_id":156879,"utype":1}],"discussion_count":3,"race_medal":0,"score":"48819631733","product_id":100035801,"comment_content":"老师，您好。请问您在文中说的&quot;轻量级客户端&quot;目前有哪些开源的SeverMesh框架有实现呢？","like_count":11,"discussions":[{"author":{"id":1448977,"avatar":"https://static001.geekbang.org/account/avatar/00/16/1c/11/4b45993d.jpg","nickname":"唐扬","note":"","ucode":"1AF4C4A4DBC6EF","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":476261,"discussion_content":"据我了解微博和蚂蚁金服都采用了这种方案","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1575014499,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":2041396,"avatar":"https://static001.geekbang.org/account/avatar/00/1f/26/34/891dd45b.jpg","nickname":"宙斯","note":"","ucode":"80DF36BAD298AD","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":369442,"discussion_content":"小赢18年就完成了servermesh落地，实践方式是sidercar这种方式","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1619028084,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1078931,"avatar":"https://static001.geekbang.org/account/avatar/00/10/76/93/64ed7385.jpg","nickname":"arch","note":"","ucode":"A69EBFE0520B85","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":217948,"discussion_content":"motan mosn","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1585587512,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":159570,"user_name":"Keith","can_delete":false,"product_type":"c1","uid":1193337,"ip_address":"","ucode":"B40774090714D1","user_header":"https://static001.geekbang.org/account/avatar/00/12/35/79/21647da2.jpg","comment_is_top":false,"comment_ctime":1575689295,"is_pvip":false,"replies":[{"id":"61436","content":"标准答案是，API网关是南北向的，service mesh是东西向的<br>","user_name":"作者回复","user_name_real":"唐扬","uid":"1448977","ctime":1576131972,"ip_address":"","comment_id":159570,"utype":1}],"discussion_count":6,"race_medal":0,"score":"44525362255","product_id":100035801,"comment_content":"API网关和Service Mesh有什么区别与联系呢? (它们都可以植入了服务治理策略)","like_count":10,"discussions":[{"author":{"id":1448977,"avatar":"https://static001.geekbang.org/account/avatar/00/16/1c/11/4b45993d.jpg","nickname":"唐扬","note":"","ucode":"1AF4C4A4DBC6EF","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":477100,"discussion_content":"标准答案是，API网关是南北向的，service mesh是东西向的\n","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1576131972,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1175507,"avatar":"https://static001.geekbang.org/account/avatar/00/11/ef/d3/d4358103.jpg","nickname":"H-NL2724","note":"","ucode":"25DB114677EF58","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":551181,"discussion_content":"回忆一下“网商系统架构图”？","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1644919054,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1024294,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/PiajxSqBRaELZPnUAiajaR5C25EDLWeJURggyiaOP5GGPe2qlwpQcm5e3ybib8OsP4tvddFDLVRSNNGL5I3SFPJHsA/132","nickname":"null","note":"","ucode":"F9039EFED6B55D","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":314042,"discussion_content":"南北，东西向是啥意思？","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1603114266,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":3,"child_discussions":[{"author":{"id":1193337,"avatar":"https://static001.geekbang.org/account/avatar/00/12/35/79/21647da2.jpg","nickname":"Keith","note":"","ucode":"B40774090714D1","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1024294,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/PiajxSqBRaELZPnUAiajaR5C25EDLWeJURggyiaOP5GGPe2qlwpQcm5e3ybib8OsP4tvddFDLVRSNNGL5I3SFPJHsA/132","nickname":"null","note":"","ucode":"F9039EFED6B55D","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":322924,"discussion_content":"南北指服务间的同层级，东西指跨层级通信","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1604843634,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":314042,"ip_address":""},"score":322924,"extra":""},{"author":{"id":1886331,"avatar":"https://static001.geekbang.org/account/avatar/00/1c/c8/7b/153181d7.jpg","nickname":"夜辉","note":"","ucode":"9421385F51FF9E","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1193337,"avatar":"https://static001.geekbang.org/account/avatar/00/12/35/79/21647da2.jpg","nickname":"Keith","note":"","ucode":"B40774090714D1","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":364891,"discussion_content":"是不是说反了？\n南北指跨层级通信，东西指服务间的同层级","likes_number":2,"is_delete":false,"is_hidden":false,"ctime":1617636447,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":322924,"ip_address":""},"score":364891,"extra":""},{"author":{"id":1193337,"avatar":"https://static001.geekbang.org/account/avatar/00/12/35/79/21647da2.jpg","nickname":"Keith","note":"","ucode":"B40774090714D1","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1886331,"avatar":"https://static001.geekbang.org/account/avatar/00/1c/c8/7b/153181d7.jpg","nickname":"夜辉","note":"","ucode":"9421385F51FF9E","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":365018,"discussion_content":"对的，不好意思，我写错了","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1617686841,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":364891,"ip_address":""},"score":365018,"extra":""}]}]},{"had_liked":false,"id":159693,"user_name":"电光火石","can_delete":false,"product_type":"c1","uid":1013160,"ip_address":"","ucode":"3AD33BB4AA940F","user_header":"https://static001.geekbang.org/account/avatar/00/0f/75/a8/dfe4cade.jpg","comment_is_top":false,"comment_ctime":1575729408,"is_pvip":false,"replies":[{"id":"61434","content":"1. 也不是，service mesh还可以解决中间件升级难的问题<br>2. 不是的，高并发下iptables对性能还是有影响的，尤其规则比较多的时候","user_name":"作者回复","user_name_real":"唐扬","uid":"1448977","ctime":1576131909,"ip_address":"","comment_id":159693,"utype":1}],"discussion_count":1,"race_medal":0,"score":"35935467776","product_id":100035801,"comment_content":"老师，请问一下：<br>1. 如果全栈都是java，那么service mesh就不是那么重要，是吗？<br>2. 文中看到iptable的性能会比rpc框架的性能要查，我以为iptable是走第三层或者第四层协议，而且只是转发，性能会很高，而rpc框架走第四层协议，而且需要解析协议内容，性能会更差一些。不知道老师能否讲解一下我理解的错误<br>谢谢了","like_count":8,"discussions":[{"author":{"id":1448977,"avatar":"https://static001.geekbang.org/account/avatar/00/16/1c/11/4b45993d.jpg","nickname":"唐扬","note":"","ucode":"1AF4C4A4DBC6EF","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":477144,"discussion_content":"1. 也不是，service mesh还可以解决中间件升级难的问题\n2. 不是的，高并发下iptables对性能还是有影响的，尤其规则比较多的时候","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1576131909,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":158139,"user_name":"Jxin","can_delete":false,"product_type":"c1","uid":1251111,"ip_address":"","ucode":"4C03928388C413","user_header":"https://static001.geekbang.org/account/avatar/00/13/17/27/ec30d30a.jpg","comment_is_top":false,"comment_ctime":1575337206,"is_pvip":false,"discussion_count":1,"race_medal":0,"score":"31640108278","product_id":100035801,"comment_content":"嘿嘿，补课补到最新更新了。<br>1.k8s都没用明白，更别说服务网格了。<br>2.服务网格出现时k8s的容器编排已经出现，istio的实现也依托于k8s基础平台。所以这是不好分割的东西。Sidecar是容器编排里面一种&quot;组合&quot;发布服务的模式，实现了多个容器（进程）对外作为一个容器的发布方式。这是落地服务网格这种数据传输与业务解耦的第一个条件。接下来基于容器的overlay网络也降低了多一层多一条的开销，亦是利于服务网格落地的。<br><br>3.服务网格的相关技术，还可以看看微博的WeiboMesh 。毕竟极客有微课讲述，相对好理解。","like_count":7,"discussions":[{"author":{"id":1203563,"avatar":"https://static001.geekbang.org/account/avatar/00/12/5d/6b/3d42593f.jpg","nickname":"聪少","note":"","ucode":"AB8301B752AC30","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":285719,"discussion_content":"istio类似的服务据说快脱离k8s可以使用了。","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1592919695,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":156903,"user_name":"往事随风，顺其自然","can_delete":false,"product_type":"c1","uid":1235692,"ip_address":"","ucode":"F266EC6B143E38","user_header":"https://static001.geekbang.org/account/avatar/00/12/da/ec/779c1a78.jpg","comment_is_top":false,"comment_ctime":1574993969,"is_pvip":false,"replies":[{"id":"60225","content":"现在是的","user_name":"作者回复","user_name_real":"唐扬","uid":"1448977","ctime":1575012861,"ip_address":"","comment_id":156903,"utype":1}],"discussion_count":1,"race_medal":0,"score":"27344797745","product_id":100035801,"comment_content":"istio 中需要使用Kubernetes 这个，必须这样？","like_count":6,"discussions":[{"author":{"id":1448977,"avatar":"https://static001.geekbang.org/account/avatar/00/16/1c/11/4b45993d.jpg","nickname":"唐扬","note":"","ucode":"1AF4C4A4DBC6EF","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":476267,"discussion_content":"现在是的","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1575012861,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":214746,"user_name":"钱","can_delete":false,"product_type":"c1","uid":1009652,"ip_address":"","ucode":"2C92A243A463D4","user_header":"https://static001.geekbang.org/account/avatar/00/0f/67/f4/9a1feb59.jpg","comment_is_top":false,"comment_ctime":1588813644,"is_pvip":false,"replies":[{"id":"83126","content":"性能损耗实测可接受","user_name":"作者回复","user_name_real":"唐扬","uid":"1448977","ctime":1591803959,"ip_address":"","comment_id":214746,"utype":1}],"discussion_count":1,"race_medal":0,"score":"18768682828","product_id":100035801,"comment_content":"本质上感觉是又多了一层中间层，这个中间层来处理服务调用相关的事情，进一步的将业务逻辑和服务处理逻辑耦合的更松散一些，多加一层距离更远了一些，所以，性能上也会损耗更多一些。<br>目前还未接触实际方案，理解上大概这样。","like_count":4,"discussions":[{"author":{"id":1448977,"avatar":"https://static001.geekbang.org/account/avatar/00/16/1c/11/4b45993d.jpg","nickname":"唐扬","note":"","ucode":"1AF4C4A4DBC6EF","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":494192,"discussion_content":"性能损耗实测可接受","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1591803959,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":248739,"user_name":"@Dimples","can_delete":false,"product_type":"c1","uid":1520936,"ip_address":"","ucode":"91951FBFEB9B64","user_header":"https://static001.geekbang.org/account/avatar/00/17/35/28/c729d3ae.jpg","comment_is_top":false,"comment_ctime":1600279439,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"10190214031","product_id":100035801,"comment_content":"service mesh会淘汰springcloud吗","like_count":2},{"had_liked":false,"id":189858,"user_name":"芳菲菲兮满堂","can_delete":false,"product_type":"c1","uid":1000860,"ip_address":"","ucode":"C8D89999C201F1","user_header":"https://static001.geekbang.org/account/avatar/00/0f/45/9c/5b06d143.jpg","comment_is_top":false,"comment_ctime":1584577745,"is_pvip":true,"replies":[{"id":"73084","content":"现在是大趋势了","user_name":"作者回复","user_name_real":"唐扬","uid":"1448977","ctime":1584590364,"ip_address":"","comment_id":189858,"utype":1}],"discussion_count":1,"race_medal":1,"score":"10174512337","product_id":100035801,"comment_content":"涨姿势 envoy lisio之前都还是懵懵的","like_count":2,"discussions":[{"author":{"id":1448977,"avatar":"https://static001.geekbang.org/account/avatar/00/16/1c/11/4b45993d.jpg","nickname":"唐扬","note":"","ucode":"1AF4C4A4DBC6EF","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":487814,"discussion_content":"现在是大趋势了","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1584590364,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":157299,"user_name":"Keith","can_delete":false,"product_type":"c1","uid":1193337,"ip_address":"","ucode":"B40774090714D1","user_header":"https://static001.geekbang.org/account/avatar/00/12/35/79/21647da2.jpg","comment_is_top":false,"comment_ctime":1575105051,"is_pvip":false,"replies":[{"id":"60625","content":"1. 服务之间调用，治理策略是集成在客户端中的<br>2. 包括RPC之间互相访问","user_name":"作者回复","user_name_real":"唐扬","uid":"1448977","ctime":1575367801,"ip_address":"","comment_id":157299,"utype":1}],"discussion_count":1,"race_medal":0,"score":"10165039643","product_id":100035801,"comment_content":"关于服务治理策略, &quot;负载均衡、熔断降级、流量控制、打印分布式追踪日志等等，这些服务治理的策略都需要重新实现&quot;:<br>1. 熔断降级、流量控制这些不是在API网关中实现吗? 这些需要每个RPC客户端单独实现?<br>2. 服务治理策略是应用于外部客户端对系统的访问, 还是也包括内部RPC客户端之间的相互访问? ","like_count":2,"discussions":[{"author":{"id":1448977,"avatar":"https://static001.geekbang.org/account/avatar/00/16/1c/11/4b45993d.jpg","nickname":"唐扬","note":"","ucode":"1AF4C4A4DBC6EF","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":476389,"discussion_content":"1. 服务之间调用，治理策略是集成在客户端中的\n2. 包括RPC之间互相访问","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1575367801,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":258776,"user_name":"静心","can_delete":false,"product_type":"c1","uid":1335457,"ip_address":"","ucode":"EB264FA6519FDA","user_header":"https://static001.geekbang.org/account/avatar/00/14/60/a1/8f003697.jpg","comment_is_top":false,"comment_ctime":1604554125,"is_pvip":true,"discussion_count":3,"race_medal":5,"score":"5899521421","product_id":100035801,"comment_content":"SOFAMesh，github上说，这个项目已经补弃用了！改用了为istio贡献的方式了进行开发了。","like_count":1,"discussions":[{"author":{"id":1357311,"avatar":"https://static001.geekbang.org/account/avatar/00/14/b5/ff/d1f205b0.jpg","nickname":"L","note":"","ucode":"5B847B2378854E","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":331527,"discussion_content":"阿里的东西 没一个靠谱的！！！ 呵~ 阿里味","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1606893205,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1335457,"avatar":"https://static001.geekbang.org/account/avatar/00/14/60/a1/8f003697.jpg","nickname":"静心","note":"","ucode":"EB264FA6519FDA","race_medal":5,"user_type":1,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":331528,"discussion_content":"那哪家的靠谱呢？","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1606893397,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":1,"child_discussions":[{"author":{"id":1630243,"avatar":"https://static001.geekbang.org/account/avatar/00/18/e0/23/03d664fc.jpg","nickname":"MEGAMETAL","note":"","ucode":"122AAEC40E1A60","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1335457,"avatar":"https://static001.geekbang.org/account/avatar/00/14/60/a1/8f003697.jpg","nickname":"静心","note":"","ucode":"EB264FA6519FDA","race_medal":5,"user_type":1,"is_pvip":true},"discussion":{"id":571898,"discussion_content":"也就是说特性都回馈给Istio社区了，没啥问题啊，直接用Istio好了","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1652453740,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":331528,"ip_address":""},"score":571898,"extra":""}]}]},{"had_liked":false,"id":247160,"user_name":"永健_何","can_delete":false,"product_type":"c1","uid":1271918,"ip_address":"","ucode":"7746F1B2A7542A","user_header":"https://static001.geekbang.org/account/avatar/00/13/68/6e/eb079ed7.jpg","comment_is_top":false,"comment_ctime":1599621284,"is_pvip":false,"discussion_count":1,"race_medal":0,"score":"5894588580","product_id":100035801,"comment_content":"老师，service mesh这个概念好新颖，是不是就是一个微服务的概念啊，没接触过，挺难理解的","like_count":1,"discussions":[{"author":{"id":2041396,"avatar":"https://static001.geekbang.org/account/avatar/00/1f/26/34/891dd45b.jpg","nickname":"宙斯","note":"","ucode":"80DF36BAD298AD","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":369443,"discussion_content":"据说这是高阶微服务，也就是微服务的下一代","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1619028310,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":224468,"user_name":"L响","can_delete":false,"product_type":"c1","uid":1667491,"ip_address":"","ucode":"012AE7EE725911","user_header":"https://static001.geekbang.org/account/avatar/00/19/71/a3/b881f08c.jpg","comment_is_top":false,"comment_ctime":1591413056,"is_pvip":false,"replies":[{"id":"82711","content":"不需要得，sidecar的协议可以对于使用方是透明的","user_name":"作者回复","user_name_real":"唐扬","uid":"1448977","ctime":1591538253,"ip_address":"","comment_id":224468,"utype":1}],"discussion_count":1,"race_medal":0,"score":"5886380352","product_id":100035801,"comment_content":"老师，Sidecar收到iptables转发的消息后，是否还要理解rpc协议呢？如果理解，那么Sidecar能够处理不同rpc协议吗？如果不理解，是否我们在rpc客户端和服务端要使用Sidecar的协议？","like_count":1,"discussions":[{"author":{"id":1448977,"avatar":"https://static001.geekbang.org/account/avatar/00/16/1c/11/4b45993d.jpg","nickname":"唐扬","note":"","ucode":"1AF4C4A4DBC6EF","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":497486,"discussion_content":"不需要得，sidecar的协议可以对于使用方是透明的","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1591538253,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":158521,"user_name":"阿土","can_delete":false,"product_type":"c1","uid":1183019,"ip_address":"","ucode":"2DBEAD80B0CA3C","user_header":"https://static001.geekbang.org/account/avatar/00/12/0d/2b/4814d3db.jpg","comment_is_top":false,"comment_ctime":1575394106,"is_pvip":false,"replies":[{"id":"61447","content":"可以看看sofa mesh的代码","user_name":"作者回复","user_name_real":"唐扬","uid":"1448977","ctime":1576132870,"ip_address":"","comment_id":158521,"utype":1}],"discussion_count":1,"race_medal":0,"score":"5870361402","product_id":100035801,"comment_content":"轻量级客户端一般怎么实现？有现成例子可参考么？另外，少量改造是改造些什么地方呢？","like_count":1,"discussions":[{"author":{"id":1448977,"avatar":"https://static001.geekbang.org/account/avatar/00/16/1c/11/4b45993d.jpg","nickname":"唐扬","note":"","ucode":"1AF4C4A4DBC6EF","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":476755,"discussion_content":"可以看看sofa mesh的代码","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1576132870,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":157617,"user_name":"海罗沃德","can_delete":false,"product_type":"c1","uid":1165364,"ip_address":"","ucode":"8704F1D6980FA0","user_header":"https://static001.geekbang.org/account/avatar/00/11/c8/34/fb871b2c.jpg","comment_is_top":false,"comment_ctime":1575213498,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"5870180794","product_id":100035801,"comment_content":"AWS最近推出了AWS app mesh服务，用来对抗Google云上的Istio，要启用app mesh需要把系统部署在EKS，不过过程还是比较傻瓜式的","like_count":1},{"had_liked":false,"id":157613,"user_name":"海罗沃德","can_delete":false,"product_type":"c1","uid":1165364,"ip_address":"","ucode":"8704F1D6980FA0","user_header":"https://static001.geekbang.org/account/avatar/00/11/c8/34/fb871b2c.jpg","comment_is_top":false,"comment_ctime":1575212770,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"5870180066","product_id":100035801,"comment_content":"关于多语言的服务序列化，正好在李玥老师的课里听到了","like_count":1},{"had_liked":false,"id":156955,"user_name":"阿卡牛","can_delete":false,"product_type":"c1","uid":1022247,"ip_address":"","ucode":"0BC43A904C3199","user_header":"https://static001.geekbang.org/account/avatar/00/0f/99/27/47aa9dea.jpg","comment_is_top":false,"comment_ctime":1575000760,"is_pvip":false,"replies":[{"id":"60224","content":"他们应该不是一个东西，istio是service mesh的实现，spring boot是开发框架","user_name":"作者回复","user_name_real":"唐扬","uid":"1448977","ctime":1575012846,"ip_address":"","comment_id":156955,"utype":1}],"discussion_count":1,"race_medal":0,"score":"5869968056","product_id":100035801,"comment_content":"istio 和spring boot有联系和区别吗","like_count":1,"discussions":[{"author":{"id":1448977,"avatar":"https://static001.geekbang.org/account/avatar/00/16/1c/11/4b45993d.jpg","nickname":"唐扬","note":"","ucode":"1AF4C4A4DBC6EF","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":476283,"discussion_content":"他们应该不是一个东西，istio是service mesh的实现，spring boot是开发框架","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1575012846,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":355595,"user_name":"lllunaticer","can_delete":false,"product_type":"c1","uid":1254737,"ip_address":"北京","ucode":"A65DB02754D1F4","user_header":"https://static001.geekbang.org/account/avatar/00/13/25/51/e94e0e58.jpg","comment_is_top":false,"comment_ctime":1661519392,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1661519392","product_id":100035801,"comment_content":"iptables 的效率比&#39;轻量级客户端&#39;要低这点没有很明确的说服力","like_count":0},{"had_liked":false,"id":300910,"user_name":"悟空聊架构","can_delete":false,"product_type":"c1","uid":1123163,"ip_address":"","ucode":"C2F482A0CF8AF1","user_header":"https://static001.geekbang.org/account/avatar/00/11/23/5b/983408b9.jpg","comment_is_top":false,"comment_ctime":1625449738,"is_pvip":true,"discussion_count":0,"race_medal":0,"score":"1625449738","product_id":100035801,"comment_content":"打卡，这一块没用到。<br>思维导图笔记：https:&#47;&#47;www.processon.com&#47;view&#47;link&#47;60df13201e085359888f06fe","like_count":0},{"had_liked":false,"id":256775,"user_name":"地主家也没有余粮啊","can_delete":false,"product_type":"c1","uid":1058194,"ip_address":"","ucode":"672FC2017720E7","user_header":"https://static001.geekbang.org/account/avatar/00/10/25/92/7e2cae07.jpg","comment_is_top":false,"comment_ctime":1603726768,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1603726768","product_id":100035801,"comment_content":"自从进了分布式的课程，每一课都是知识扫盲篇","like_count":0},{"had_liked":false,"id":189815,"user_name":"sami","can_delete":false,"product_type":"c1","uid":1033240,"ip_address":"","ucode":"9A66FCA00D8A37","user_header":"https://wx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTJkwbyTYtSCx6Qc7cQPnnRWv38Jybh3etziaPmuP8gHcgS6FMxcdftrKgWiamH6fc2iciaicDKDVEwcEibQ/132","comment_is_top":false,"comment_ctime":1584569576,"is_pvip":true,"replies":[{"id":"73086","content":"不会的，它本身就是为了解决服务治理的问题而存在的<br>","user_name":"作者回复","user_name_real":"唐扬","uid":"1448977","ctime":1584590396,"ip_address":"","comment_id":189815,"utype":1}],"discussion_count":2,"race_medal":0,"score":"1584569576","product_id":100035801,"comment_content":"感觉service mesh的服务治理是个大麻烦","like_count":0,"discussions":[{"author":{"id":1448977,"avatar":"https://static001.geekbang.org/account/avatar/00/16/1c/11/4b45993d.jpg","nickname":"唐扬","note":"","ucode":"1AF4C4A4DBC6EF","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":487803,"discussion_content":"不会的，它本身就是为了解决服务治理的问题而存在的\n","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1584590396,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1033240,"avatar":"https://wx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTJkwbyTYtSCx6Qc7cQPnnRWv38Jybh3etziaPmuP8gHcgS6FMxcdftrKgWiamH6fc2iciaicDKDVEwcEibQ/132","nickname":"sami","note":"","ucode":"9A66FCA00D8A37","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":210722,"discussion_content":"我理解是需要比较强的运维能力，中小团队的话不一定需要用到","likes_number":2,"is_delete":false,"is_hidden":false,"ctime":1584764765,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":159662,"user_name":"longslee","can_delete":false,"product_type":"c1","uid":1465986,"ip_address":"","ucode":"C24E32E5B1B6F5","user_header":"https://static001.geekbang.org/account/avatar/00/16/5e/82/438c8534.jpg","comment_is_top":false,"comment_ctime":1575722758,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1575722758","product_id":100035801,"comment_content":"打卡。完全还没有涉及，哈哈。","like_count":0}]}