{"id":193616,"title":"42 | MongoDB典型案例（一）","content":"<p><strong>课件和Demo地址</strong><br>\n<a href=\"https://gitee.com/geektime-geekbang/geektime-mongodb-course\">https://gitee.com/geektime-geekbang/geektime-mongodb-course</a></p>","comments":[{"had_liked":false,"id":242337,"user_name":"polk","can_delete":false,"product_type":"c3","uid":1165455,"ip_address":"","ucode":"1B6E948BA4DFAF","user_header":"https://static001.geekbang.org/account/avatar/00/11/c8/8f/e13a6552.jpg","comment_is_top":false,"comment_ctime":1597674528,"is_pvip":false,"replies":[{"id":89747,"content":"首先，选型是重要的决策，这里面考虑的，不仅仅是技术一个因素。人才储备，技术栈简洁性，迁移成本等都会是考量。但是我就技术层面回复一下你\n\n关于第一个案例，你要关注没有注意到的两个点\n1） 子文档模型的灵活性。里面不同的保单子文档，可以有不相同的结构。这种异构建模，在关系型库里是比较困难的，你在设计的时候，难以对几十个不同系统的模型进行统一抽象，特别是没有哪个架构师对所有系统都熟悉，都是需要各个系统各自出一个人来参与设计的时候。\n2） 假设一个顶级的架构师可能真的可以用子表设计出来，这样复杂的系统，一个保单表少说都有可能是几十上百张表的节奏。想象下开发者的体验？他们能很容易明白这么复杂的数据关系？想象下多表关联下数亿数十亿的性能？\n\n第二个案例：\n\n基本定位：\n- Redis 的基本定位一个缓存\n- MongoDB的基本定位是一个OLTP数据库\n\n性能：\n- Redis 强在读\n- MongoDB 在给够内存的情况下，可以和Redis不相上下，特别是简单缓存读取\n- 如果Redis 采取和MongoDB接近的持久化策略，它的性能会一落千丈，都比不过RDMBS（根据它自己的官网）\n\n功能\n- Mongo的优势： 子文档更新能力，数组更新能力\n- Mongo的优势：聚合分析Aggregation能力\n\n集群能力\n- Redis 在集群模式下无法提供强一致（来自官网）\n- MongoDB在无论是在副本集还是分片集都能提供强一致\n- Redis 集群模式下不支持Multiple Key 操作、事务操作 \n\n有人会说如果是只读场景，更新能力可以忽略。但是他们忽略的是，缓存的数据也是需要实时去更新的。如果你只能更新整个文档，以及对更新的一致性保障不好，这些也会是技术选型中需要考虑到的重要因素。\n","user_name":"作者回复","user_name_real":"远航的TJ 唐建法","uid":1260017,"ctime":1598221874,"ip_address":"","comment_id":242337,"utype":1}],"discussion_count":2,"race_medal":0,"score":2,"product_id":100040001,"comment_content":"第一个案例mongo看结构就是用了子文档，那么传统数据库就是用子表，我不理解传统数据库为何会失败。第二个案例，百亿数据量，传统数据库肯定不适合，这无需多说，而业务都是只读的，查询消费记录，那为何不选redis呢？应该跟redis比啊。或者es啊，这几个分片集群都很方便。","like_count":20,"discussions":[{"author":{"id":1260017,"avatar":"https://static001.geekbang.org/account/avatar/00/13/39/f1/6d18a4d1.jpg","nickname":"远航的TJ 唐建法","note":"","ucode":"0719807390250A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":503984,"discussion_content":"首先，选型是重要的决策，这里面考虑的，不仅仅是技术一个因素。人才储备，技术栈简洁性，迁移成本等都会是考量。但是我就技术层面回复一下你\n\n关于第一个案例，你要关注没有注意到的两个点\n1） 子文档模型的灵活性。里面不同的保单子文档，可以有不相同的结构。这种异构建模，在关系型库里是比较困难的，你在设计的时候，难以对几十个不同系统的模型进行统一抽象，特别是没有哪个架构师对所有系统都熟悉，都是需要各个系统各自出一个人来参与设计的时候。\n2） 假设一个顶级的架构师可能真的可以用子表设计出来，这样复杂的系统，一个保单表少说都有可能是几十上百张表的节奏。想象下开发者的体验？他们能很容易明白这么复杂的数据关系？想象下多表关联下数亿数十亿的性能？\n\n第二个案例：\n\n基本定位：\n- Redis 的基本定位一个缓存\n- MongoDB的基本定位是一个OLTP数据库\n\n性能：\n- Redis 强在读\n- MongoDB 在给够内存的情况下，可以和Redis不相上下，特别是简单缓存读取\n- 如果Redis 采取和MongoDB接近的持久化策略，它的性能会一落千丈，都比不过RDMBS（根据它自己的官网）\n\n功能\n- Mongo的优势： 子文档更新能力，数组更新能力\n- Mongo的优势：聚合分析Aggregation能力\n\n集群能力\n- Redis 在集群模式下无法提供强一致（来自官网）\n- MongoDB在无论是在副本集还是分片集都能提供强一致\n- Redis 集群模式下不支持Multiple Key 操作、事务操作 \n\n有人会说如果是只读场景，更新能力可以忽略。但是他们忽略的是，缓存的数据也是需要实时去更新的。如果你只能更新整个文档，以及对更新的一致性保障不好，这些也会是技术选型中需要考虑到的重要因素。\n","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1598221874,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1227492,"avatar":"https://static001.geekbang.org/account/avatar/00/12/ba/e4/6df89add.jpg","nickname":"芋头","note":"","ucode":"A9C875548E4EE5","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":612947,"discussion_content":"老师可以分析一下和ElasticSearch 的对比吗？","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1681027582,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":"广东","group_id":0},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":178856,"user_name":"qbit","can_delete":false,"product_type":"c3","uid":1262927,"ip_address":"","ucode":"96C70A1E47B93D","user_header":"https://static001.geekbang.org/account/avatar/00/13/45/4f/f94caf47.jpg","comment_is_top":false,"comment_ctime":1581840991,"is_pvip":false,"replies":null,"discussion_count":0,"race_medal":0,"score":2,"product_id":100040001,"comment_content":"金融业的两个案例：大都会人寿（METLIFE）、四大行之一","like_count":3},{"had_liked":false,"id":177597,"user_name":"唐朝农民","can_delete":false,"product_type":"c3","uid":1133947,"ip_address":"","ucode":"6F8F43C6652225","user_header":"https://wx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTIaOAxRlZjFkGfRBn420LuAcyWkMrpq5iafGdqthX5icJPjql0ibZOAdafaqbfvw4ZpVzDmsaYglVXDw/132","comment_is_top":false,"comment_ctime":1581431528,"is_pvip":false,"replies":null,"discussion_count":0,"race_medal":0,"score":2,"product_id":100040001,"comment_content":"案列二有点类似数据集市&#47;数据仓库","like_count":1},{"had_liked":false,"id":364414,"user_name":"王周敬","can_delete":false,"product_type":"c3","uid":1989737,"ip_address":"北京","ucode":"ABAC941339CBED","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/qUHuge7oea6mA4bUTyJ4ro9RYsGNOrXe6XccO7fV90xyaC5HgjG2DwJvauQiavcuS0KQFq5U1JUFLHtH6gZULag/132","comment_is_top":false,"comment_ctime":1670938927,"is_pvip":false,"replies":null,"discussion_count":0,"race_medal":0,"score":2,"product_id":100040001,"comment_content":"在olap 方便，mongodb 不如clickhouse吧。 多少个分片才能使 单个数据集 百亿文档 ，用mongodb的聚合可以在2s内返回呢","like_count":0},{"had_liked":false,"id":185151,"user_name":"奔奔奔跑","can_delete":false,"product_type":"c3","uid":1210265,"ip_address":"","ucode":"F86EC205DCAACE","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/Gswh7ibY4tubXhp0BXOmV2pXZ3XsXic1d942ZMAEgWrRSF99bDskOTsG1g172ibORXxSCWTn9HWUX5vSSUVWU5I4A/132","comment_is_top":false,"comment_ctime":1583498840,"is_pvip":false,"replies":null,"discussion_count":2,"race_medal":0,"score":2,"product_id":100040001,"comment_content":"老师，这节课聊到schema，我想请问一下mongo开发的时候json schema非常不好写，数据库校验也不友好，不知道哪个字段有问题。所以一般用json schema的时候又会弄个忽略该字段，在代码参数检查的时候做校验，老师这个mongo数据库校验有啥文章或者资料分享吗？我是go语言开发者，我司all in MongoDB！o(*￣︶￣*)o","like_count":0,"discussions":[{"author":{"id":1438475,"avatar":"https://static001.geekbang.org/account/avatar/00/15/f3/0b/4560079e.jpg","nickname":"王宇","note":"","ucode":"0E9BC3AD99C8E5","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":220744,"discussion_content":"看场景的 all in是个什么情况 …","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1585922590,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"","child_discussion_number":1,"child_discussions":[{"author":{"id":1210265,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/Gswh7ibY4tubXhp0BXOmV2pXZ3XsXic1d942ZMAEgWrRSF99bDskOTsG1g172ibORXxSCWTn9HWUX5vSSUVWU5I4A/132","nickname":"奔奔奔跑","note":"","ucode":"F86EC205DCAACE","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1438475,"avatar":"https://static001.geekbang.org/account/avatar/00/15/f3/0b/4560079e.jpg","nickname":"王宇","note":"","ucode":"0E9BC3AD99C8E5","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":221071,"discussion_content":"哈哈，就是直接就上mongo了，电商业务","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1585971224,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":220744,"ip_address":"","group_id":0},"score":221071,"extra":""}]}]},{"had_liked":false,"id":182874,"user_name":"密码123456","can_delete":false,"product_type":"c3","uid":1126593,"ip_address":"","ucode":"9889463CC0EA71","user_header":"https://static001.geekbang.org/account/avatar/00/11/30/c1/2dde6700.jpg","comment_is_top":false,"comment_ctime":1582880896,"is_pvip":false,"replies":null,"discussion_count":0,"race_medal":0,"score":2,"product_id":100040001,"comment_content":"厉害","like_count":0}]}