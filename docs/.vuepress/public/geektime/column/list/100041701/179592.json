{"id":179592,"title":"06 | XSS：当你“被发送”了一条微博时，到底发生了什么？","content":"<p>你好，我是何为舟。</p><p>在前面的课程中，我们重点讲解了安全的一些基础知识，更多地是从宏观的层面上来谈论安全。但<strong>安全不是一个靠宏观指导就能够落地的东西</strong>。因此，接下来我会结合真实案例中的各种安全问题，来介绍具体的安全防护手段和工具。今天，我们就先从最基础的Web安全开始。</p><p>在Web安全这个模块中，我们所谈论的Web，是指所有基于HTTP或者其他超文本传输协议（RPC等）开发的应用，包括：网页、App、API接口等等。这类应用的共同点是：通过HTTP等文本协议，在客户端和服务端之间进行数据交换。客户端需要将服务端传出的数据展示渲染出来，服务端需要将客户端传入的数据进行对应的处理。而Web安全所涉及的正是这些应用中存在的各类安全问题。</p><p>背景介绍完了，下面我们进入今天的正题。</p><p>基于前面安全基础知识的学习，你现在通过了面试官的考核，成功进入了这家公司。某一天，公司的网页应用中发生了一件事。</p><p>有很多用户发送了同样类型的内容，而且这些内容都是一个带有诱惑性的问题和一个可以点击的链接。这些用户全部反馈说，这不是他们自己发的。前端开发表示，用户内容都是后端产生的，他不负责。后端开发表示，这些内容都是用户自己提交上来的，他也不负责。正当大家议论纷纷的时候，你作为学习过安全专栏的人，敏锐地发现了问题的原因：这是黑客发起了XSS攻击。</p><!-- [[[read_end]]] --><p>这个事情的原型，其实是2011年微博真实出现的一次安全事件。整个事件的核心问题，其实出在这个可以点击的链接上。在这个事件中，黑客并不需要入侵到微博服务器中，只要用户点击了这个链接，就会“被发送”这样的博文。</p><p>这就是著名的XSS攻击所能够实现的效果。那么，XSS攻击究竟是怎么产生的呢？我们究竟该如何防护呢？今天我就带你来了解这个网页中最经典的XSS攻击。</p><h2>XSS攻击是如何产生的？</h2><p>首先，我们来看，XSS攻击是如何产生的。作为最普遍的网页语言，HTML非常灵活，你可以在任意时候对HTML进行修改。但是，这种灵活性也给了黑客可趁之机：通过给定异常的输入，黑客可以在你的浏览器中，插入一段恶意的JavaScript脚本，从而窃取你的隐私信息或者仿冒你进行操作。这就是<strong>XSS攻击</strong>（Cross-Site Scripting，跨站脚本攻击）的原理。</p><p>你现在应该对XSS有了一个大致的了解，除此之外，你还需要了解三种XSS攻击，它们分别是：反射型XSS、基于DOM的XSS以及持久型XSS。下面我们一一来看。</p><h3>1.反射型XSS</h3><p>假设现在有一个搜索网页，当你输入任意一个关键词，并点击“搜索”按钮之后，这个网页就会给你展示“你搜索的结果内容是：XXX”。</p><p><img src=\"https://static001.geekbang.org/resource/image/a8/63/a80e92776bad0f35e8d7030806165163.jpg?wh=1081*312\" alt=\"\"></p><p>我们以PHP为例，这个网页的服务端实现逻辑如下所示：</p><pre><code>&lt;!DOCTYPE html&gt;\n&lt;html&gt;\n\t&lt;body&gt;\n\t\t&lt;form role=&quot;search&quot; action=&quot;&quot; method=&quot;GET&quot;&gt;\n\t\t\t&lt;input type=&quot;text&quot; name=&quot;search&quot; placeholder=&quot;请输入要搜索的内容&quot;&gt;\n\t        &lt;button type=&quot;submit&quot;&gt;搜索&lt;/button&gt;\n\t    &lt;/form&gt;\n\t\t&lt;?php\n\t\t\tif (isset($_GET['search']) &amp;&amp; !empty($_GET['search'])) {\n\t\t\t\t$search = $_GET['search'];\n\t\t\t\techo &quot;&lt;h3&gt;你搜索的结果内容是：&quot; . $search . &quot;&lt;/h3&gt;&quot;;\n\t\t\t}\n\t\t?&gt;\n\t&lt;/body&gt;\n&lt;/html&gt;\n\n</code></pre><p>我们可以看到，这段代码的逻辑是将搜索框输入的内容，拼接成字符串，然后填充到最终的HTML中。而且这个过程中没有任何的过滤措施，如果黑客想要对这个过程发起攻击，他会输入下面这行代码：</p><pre><code>&lt;/h3&gt;&lt;script&gt;alert('xss');&lt;/script&gt;&lt;h3&gt;\n</code></pre><p>黑客输入这段字符后，网页会弹出一个告警框（我自己测试的时候，发现部分浏览器，如Safari不会弹出告警框，这是因为浏览器自身提供了一定的XSS保护功能）。</p><p><img src=\"https://static001.geekbang.org/resource/image/f0/69/f0d2d16b482c9bbc5388250f2d34cc69.jpg?wh=1040*500\" alt=\"\"></p><p>通过查看网页的源码，可以发现，这中间多了一段JavaScript的脚本：</p><p><img src=\"https://static001.geekbang.org/resource/image/29/98/29cff8464c5dd7b88dafb377e0439b98.jpg?wh=1490*720\" alt=\"\"></p><p>这就是我们所说的反射型XSS攻击的过程。其实它攻击的原理很简单。我们可以总结一下，即通过开头的<code>&lt;/h3&gt;</code>和结尾的<code>&lt;h3&gt;</code>，将原本的<code>&lt;h3&gt;</code>标签进行闭合，然后中间通过<code>&lt;script&gt;</code>标签插入JavaScript代码并执行，就完成了整个反射型XSS的流程。</p><p>你可以注意一下浏览器的地址：<a href=\"http://localhost/index.php?search=%3C%2Fh3%3E%3Cscript%3Ealert%28%27xss%27%29%3B%3C%2Fscript%3E%3Ch3%3E\">http://localhost/index.php?search=&lt;%2Fh3&gt;&lt;script&gt;alert('xss')%3B&lt;%2Fscript&gt;&lt;h3&gt;</a> 。实际上，任何人只要点击了这个链接，就会执行一段黑客定义的JavaScript脚本。所以，我们经常说，不要点击任何未知的链接。</p><p>反射型XSS的总体流程我总结了一下，你可以看下面这张图。黑客诱导你点击了某个链接，这个链接提供的服务，可能就是上述的搜索功能。网页在解析到链接的参数后，执行正常的搜索逻辑，但是因为漏洞，网页中被填入了黑客定义的脚本。使得用户的浏览器，最终执行的是黑客的脚本。</p><p><img src=\"https://static001.geekbang.org/resource/image/b8/2c/b85f24cbc8243426fb270bcb74be682c.jpeg?wh=1920*1080\" alt=\"\"></p><h3>2.基于DOM的XSS</h3><p>在上面的例子中我们可以看到，反射型XSS产生在前后端一体的网页应用中，服务端逻辑会改变最终的网页代码。但是，目前更流行的其实是前后端分离，这样网页的代码不会受服务端影响。那么，这样是不是就安全了呢？</p><p>显然不是的。尽管服务端无法改变网页代码，但网页本身的JavaScript仍然可以改变。而黑客只要利用了这一点，同样能够在网页中插入自己的脚本。这也就是所谓的基于DOM的XSS漏洞。</p><p>对于上述搜索功能，通过前后端分离，它的源码就变成了下面这样：</p><pre><code>&lt;!DOCTYPE html&gt;\n&lt;html&gt;\n\t&lt;body&gt;\n\t\t&lt;form role=&quot;search&quot; action=&quot;&quot; method=&quot;GET&quot;&gt;\n\t\t\t&lt;input type=&quot;text&quot; name=&quot;search&quot; placeholder=&quot;请输入要搜索的内容&quot;&gt;\n\t        &lt;button type=&quot;submit&quot;&gt;搜索&lt;/button&gt;\n\t    &lt;/form&gt;\n\t    &lt;script&gt;\n\t    \tvar search = location.search.substring(8);\n\t    \tdocument.write('你搜索的结果内容是：' + decodeURIComponent(search));\n\t    &lt;/script&gt;\n\t&lt;/body&gt;\n&lt;/html&gt;\n</code></pre><p>这段代码能够实现和之前的PHP代码相同的逻辑：当你在搜索框点击搜索关键词之后，网页会展示你输入的关键词。只不过，HTML是通过JavaScript脚本修改<a href=\"https://baike.baidu.com/item/%E6%96%87%E6%A1%A3%E5%AF%B9%E8%B1%A1%E6%A8%A1%E5%9E%8B/1033822?fromtitle=DOM&amp;fromid=50288&amp;fr=aladdin\">DOM</a>来实现这个功能的。</p><p>那么和上述例子一样，在基于DOM的XSS中，黑客也可以通过插入一段<code>&lt;script&gt;alert('xss');&lt;/script&gt;</code>来执行指定的JavaScript脚本。基于DOM的XSS总体流程如下图所示。可以看到，这个流程其实和反射型XSS一致，只是不需要经过服务端了而已。</p><p><img src=\"https://static001.geekbang.org/resource/image/ac/bf/ac0ce9c0f42db7dd48cb155228b7b1bf.jpeg?wh=1920*1080\" alt=\"\"></p><h3>3.持久型XSS</h3><p>你可以回想一下，当你在网页中搜索一个关键词时，实际上与这个关键词相关的所有搜索结果都会被展示出来。一旦这些搜索结果中，包含黑客提供的某个恶意JavaScript脚本，那么只要我们浏览了这个网页，就有可能会执行这些脚本。这就是持久型XSS。因为这些恶意的搜索结果，会长期保存在服务端数据库中，所以它又叫作存储型XSS。在应用中，存储用户的输入并对它们进行展示的地方，都可能出现持久型XSS。比如：搜索结果、评论、博文等等。</p><p>有了前面的铺垫，持久型XSS的产生过程就很好理解了，具体我就不细说了，我还是把总体流程画了一张图，你可以仔细看看。</p><p><img src=\"https://static001.geekbang.org/resource/image/2e/75/2e8c429f46837b3f46a276e462c93175.jpeg?wh=1920*1080\" alt=\"\"></p><p>相比前面两种XSS攻击来说，持久型XSS往往具备更强的危害性。因为对于一个反射型或者基于DOM的XSS来说，需要黑客诱导用户点击恶意的URL，才能够成功地在用户浏览器上执行JavaScript脚本。这对黑客在诱导用户操作方面的能力提出了考验：并不是所有的用户都是小白，一些有经验的用户会在点击链接前进行一定的考虑。</p><p>而持久型XSS则不同，它是将恶意的JavaScript脚本写入到了正常的服务端数据库中，因此，只要用户正常的使用业务功能，就会被注入JavaScript脚本。所以说，持久型XSS在传播速度和传播范围上，会远远超出其他类型的XSS。</p><h2>通过XSS攻击，黑客能做什么？</h2><p>我们知道，这3种XSS攻击，都是因为黑客在用户的浏览器中执行了恶意的JavaScript脚本。那么执行这些JavaScript脚本有什么样的危害呢？我把这些危害总结了一下，可以分为下面几种。</p><h3>1.窃取Cookie</h3><p>从上面的例子中，我们可以看到，黑客可以窃取用户的Cookie。因为黑客注入的JavaScript代码是运行在server.com这个域名下的，因此，黑客可以在JavaScript中通过document.cookie获得Cookie信息。</p><p>另外，需要我们注意的是，受<a href=\"https://baike.baidu.com/item/%E5%90%8C%E6%BA%90%E7%AD%96%E7%95%A5/3927875?fr=aladdin\">SOP</a>（Same Origin Policy，同源策略）保护，我们在server.com中是无法直接向hacker.com发送GET或者POST请求的。这也是为什么，在上面的例子中，我们需要通过window.location来执行跳转操作，间接地将Cookie信息发送出去。除了window.location之外，我们还可以通过加载JavaScript文件、图片等方式，向attacker.com发送带有Cookie的GET请求。</p><h3>2.未授权操作</h3><p>除了窃取敏感信息以外，黑客还可以利用JavaScript的特性，直接代替用户在HTML进行各类操作。</p><p>在文章开头，我们提到的微博XSS攻击事件中，黑客就利用JavaScript脚本，让用户发送了一个微博，微博中同时还带有反射型XSS的链接。这样一来，每个点击链接的用户都会通过微博的形式，诱导更多的用户点击链接，一传十、十传百，造成大范围的传播。</p><h3>3.按键记录和钓鱼</h3><p>窃取Cookie和未授权操作都是我们很容易想到的危害，除此之外，JavaScript还能做什么呢？</p><p>JavaScript的功能十分强大，它还能够记录用户在浏览器中的大部分操作。比如：鼠标的轨迹、键盘输入的信息等。也就是说，你输入的账号名和密码，都可以被JavaScript记录下来，从而被黑客获取到。</p><p>另外，即使某个存在XSS漏洞的页面不具备任何输入框，黑客还可以通过修改DOM，伪造一个登录框，来诱导用户在本不需要登录的页面，去输入自己的用户名和密码。这也是“钓鱼”的一种形式，在这个过程中用户访问的域名是完全正常的，只是页面被篡改了，所以具备更高的迷惑性。</p><h2>如何进行XSS防护？</h2><p>认识到XSS的危害之后，作为开发人员，我们最应该掌握的是，如何避免在开发过程中出现XSS漏洞。接下来我们就来看一看，具体有哪些防护方法。</p><h3>1.验证输入OR验证输出</h3><p>防护的核心原则是：<strong>一切用户输入皆不可信</strong>。你的第一反应一定是，这很好实现啊，当接收到用户的输入时，我们就进行验证，这不就做到了吗？实际上并不是这么简单的，我们还是通过搜索这个例子来看。在用户点击“搜索”按钮之后，如果我们马上对他输入的内容进行验证，这样就会产生两个问题。</p><p>1.你将无法保存用户的原始输入信息。这样一来，当出现了Bug或者想要对黑客行为进行溯源时，你只能“推断”，而不能准确地获取用户的原始输入。</p><p>2.用户的内容可能会被多种语言获取和使用，提前编码或者处理，将产生未知的问题。比如，在旧版本的PHP中，就存在“<a href=\"https://www.php.net/manual/en/security.magicquotes.php\">magic quotes</a>”的漏洞，因为PHP无法处理某些编码的字符而导致崩溃。</p><p><strong>因此，我更推荐在需要输出的时候去进行验证</strong>，即当需要展示的时候，我们再对内容进行验证，这样我们就能够根据不同的环境去采取不同的保护方案了。</p><p>在HTML中，常见的XSS注入点我已经总结好了，你可以看下面这个表格：</p><p><img src=\"https://static001.geekbang.org/resource/image/7c/a0/7c1b9b3da33247963c2c1bf38ae184a0.jpeg?wh=1920*1080\" alt=\"\"></p><h3>2.编码</h3><p>现在，我们已经理解了，<strong>XSS防护的核心原则就是验证</strong>，那具体该怎么去做验证呢？我认为，我们可以优先采用编码的方式来完成。所谓编码，就是将部分浏览器识别的关键词进行转换（比如&lt;和&gt;），从而避免浏览器产生误解。对于客户端来说，编码意味着，使用JavaScript提供的功能对用户内容进行处理。具体的方法我也总结了一下，你可以看这个表格。</p><p><img src=\"https://static001.geekbang.org/resource/image/ca/1e/ca06351dcf763b86bb8bef554763bc1e.jpeg?wh=1920*1080\" alt=\"\"></p><p>对于最后一个注入点，即在JavaScript中进行注入，目前还没有内置的编码方式来对它提供保护。你当然可以通过诸如URL编码等方式进行编码，但这有可能对应用的自身逻辑产生影响。因此，JavaScript中的注入并不适合通过编码来进行保护。</p><h3>3.检测和过滤</h3><p>但是，在很多时候，编码会对网页实际的展现效果产生影响。比如，原本用户可能想展示一个1&gt;0，却被编码展示成了1&amp;gt0。尽管网络环境安全了，却对用户造成了困扰。那么，我们还可以采取哪些方法进行验证呢？接下来我就为你介绍一下检测和过滤。</p><p>首先，我们需要对用户的内容进行检测。在这里，我们可以采用黑名单和白名单的规则。黑名单往往是我们最直接想到的方法：既然黑客要插入<code>&lt;javascript&gt;</code>标签，那么我们就检测用户内容中是否存在<code>&lt;javascript&gt;</code>标签就好了。</p><p>但是，黑客的攻击方法是无穷无尽的。你检测了<code>&lt;javascript&gt;</code>，黑客就可以改成<code>&lt;JavaScript&gt;</code>（因为HTML标签对大小写不敏感），甚至有些时候还能够编码成<code>&amp;#106;avascript</code>等等。另外，HTML5的发展速度很快，总是有新的标签被开发出来，这些新标签中也可能包含新的注入点。因此，黑名单的更新和维护过程，是需要我们和黑客进行长期对抗的过程</p><p>所以，在检测中，<strong>我更推荐使用白名单的规则</strong>。因为白名单的规则比较简单，并且十分有效。比如，在只输入一个分数的地方，规定只有整型变量是合法的。这样一来，你就能够检测出99.99%的攻击行为了。</p><p>说完了检测，那当发现某个用户的内容可能存在XSS攻击脚本时，我们该怎么处理呢？这个时候，处理选项有两个：拒绝或者过滤。毫无疑问，拒绝是最安全的选项。一旦你发现可能的XSS攻击脚本，只要不将这段用户内容展现出来，就能避免可能的攻击行为。</p><p>但是，拒绝会阻碍用户的使用流程，从用户体验的角度上来考虑的话，过滤会更被用户所接受。上面提到的编码就属于一种过滤的方式。除此之外，我们也可以直接对敏感字符进行替换删除等。需要注意的是，在替换的时候，一定不能采取黑名单的形式（比如：将javascript进行删除，那黑客就可以通过JavaScript来绕过），而是<strong>应该采取白名单的形式</strong>（比如，除了div之外的标签全部删除）。</p><p>同样地，<strong>过滤的流程也必须彻底</strong>。比如，我看到过有人采用下面这行字符串来过滤javascript标签：</p><pre><code>$str=str_replace('&lt;javascript&gt;','',$str);\n</code></pre><p>但黑客只需要将str的值变成<code>&lt;java&lt;javascript&gt;script&gt;</code>就可以了，因为<code>str_replace('&lt;javascript&gt;','','&lt;java&lt;javascript&gt;script&gt;')</code>的结果就是<code>&lt;javascript&gt;</code>。</p><h3>4.CSP</h3><p>面对XSS这样一个很普遍的问题，W3C提出了CSP（Content Security Policy，内容安全策略）来提升Web的安全性。所谓CSP，就是在服务端返回的HTTP header里面添加一个Content-Security-Policy选项，然后定义资源的白名单域名。浏览器就会识别这个字段，并限制对非白名单资源的访问。</p><p>配置样例如下所示：</p><pre><code>Content-Security-Policy:default-src ‘none’; script-src ‘self’; \nconnect-src ‘self’; img-src ‘self’; style-src ‘self’;\n</code></pre><p>那我们为什么要限制外域资源的访问呢？这是因为XSS通常会受到长度的限制，导致黑客无法提交一段完整的JavaScript代码。为了解决这个问题，黑客会采取引用一个外域JavaScript资源的方式来进行注入。除此之外，限制了外域资源的访问，也就限制了黑客通过资源请求的方式，绕过SOP发送GET请求。目前，CSP还是受到了大部分浏览器支持的，只要用户使用的是最新的浏览器，基本都能够得到很好的保护。</p><h2>总结</h2><p>好了，我们讲了XSS的攻击类型、会产生的影响，以及如何对它进行防护。下面我来带你总结回顾一下，你要掌握的重点内容。</p><p>简单来说，XSS就是利用Web漏洞，在用户的浏览器中执行黑客定义的JavaScript脚本，这样一种攻击方式。根据攻击方式的不同，可以分为：反射型XSS、基于DOM的XSS和持久型XSS。通过在用户的浏览器中注入脚本，黑客可以通过各种方式，采集到用户的敏感信息，包括：Cookie、按键记录、密码等。</p><p>预防XSS主要通过对用户内容的验证来完成。首先，我推荐在需要展示用户内容的时候去进行验证，而不是当用户输入的时候就去验证。在验证过程中，我们优先采用编码的方式来完成。如果编码影响到了业务的正常功能，我们就可以采用白名单的检测和过滤方式来进行验证。除此之外，我们可以根据业务需要，配置合适的CSP规则，这也能在很大程度上降低XSS产生的影响。</p><p>另外，在这里，我把本节课的重点内容梳理了一个脑图。你可以根据它来查漏补缺，加深印象。</p><p><img src=\"https://static001.geekbang.org/resource/image/48/20/48a923998b80ad2f1c2a274704690e20.jpg?wh=1142*891\" alt=\"\"></p><h2>思考题</h2><p>好了，通过今天的学习，相信你已经了解了什么是XSS攻击。你可以试着分析一下，文章开头提到的事件中，黑客是利用哪种类型的XSS发起的攻击呢？我们应该怎么进行防御呢？</p><p>另外，在事件中我也描述了开发“甩锅”的场景：前端也好、后端也好，开发人员都不认为是自己的问题。那么，你认为出现这种安全事件，应该由谁来“背锅”呢？是开发、运维还是安全负责人呢？</p><p>欢迎留言和我分享你的思考和疑惑，也欢迎你把文章分享给你的朋友。我们下一讲再见！</p>","neighbors":{"left":{"article_title":"05 | 访问控制：如何选取一个合适的数据保护方案？","id":178528},"right":{"article_title":"07 | SQL注入：明明设置了强密码，为什么还会被别人登录？","id":181424}},"comments":[{"had_liked":false,"id":179207,"user_name":"GitHubGanKai","can_delete":false,"product_type":"c1","uid":1477351,"ip_address":"","ucode":"BF6D6F8F3EED31","user_header":"https://static001.geekbang.org/account/avatar/00/16/8a/e7/a6c603cf.jpg","comment_is_top":false,"comment_ctime":1581936149,"is_pvip":false,"replies":[{"id":"69768","content":"是的。","user_name":"作者回复","user_name_real":"captain","uid":"1012580","ctime":1582075508,"ip_address":"","comment_id":179207,"utype":1}],"discussion_count":1,"race_medal":0,"score":"44531609109","product_id":100041701,"comment_content":"老师  使用csp 如果前端使用了cdn 或者通过script标签加载其他的第三方库，如果这些域没有在白名单下，对于加载这些不同域的资源是不是也会限制呢 ？","like_count":11,"discussions":[{"author":{"id":1012580,"avatar":"","nickname":"captain","note":"","ucode":"471A8412D923EB","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":484143,"discussion_content":"是的。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1582075508,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":179190,"user_name":"GitHubGanKai","can_delete":false,"product_type":"c1","uid":1477351,"ip_address":"","ucode":"BF6D6F8F3EED31","user_header":"https://static001.geekbang.org/account/avatar/00/16/8a/e7/a6c603cf.jpg","comment_is_top":false,"comment_ctime":1581933935,"is_pvip":false,"replies":[{"id":"69766","content":"这其实是一种妥协吧。网页中经常需要引用一些外部的资源，比如说图片。如果一律禁止的话，那相当于每个网站都得自己维护一套完整的资源，会很麻烦。因此，对于静态资源的访问，是一律允许的。","user_name":"作者回复","user_name_real":"captain","uid":"1012580","ctime":1582075420,"ip_address":"","comment_id":179190,"utype":1}],"discussion_count":1,"race_medal":0,"score":"35941672303","product_id":100041701,"comment_content":"老师，前端请求中，出于安全问题，为什么浏览器会对ajax 请求有跨域安全限制，但是像&lt;script src=&#39;xxx&#39;&gt;&lt;img src=&#39;xxx&#39;&gt;这样的标签请求过来的数据，却没有跨域安全限制呢？","like_count":8,"discussions":[{"author":{"id":1012580,"avatar":"","nickname":"captain","note":"","ucode":"471A8412D923EB","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":484134,"discussion_content":"这其实是一种妥协吧。网页中经常需要引用一些外部的资源，比如说图片。如果一律禁止的话，那相当于每个网站都得自己维护一套完整的资源，会很麻烦。因此，对于静态资源的访问，是一律允许的。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1582075420,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":163879,"user_name":"return","can_delete":false,"product_type":"c1","uid":1135528,"ip_address":"","ucode":"42B8A3380DF04B","user_header":"https://static001.geekbang.org/account/avatar/00/11/53/a8/abc96f70.jpg","comment_is_top":false,"comment_ctime":1576817549,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"35936555917","product_id":100041701,"comment_content":"学到了，很透彻， 写代码的时候得注意啊。","like_count":8},{"had_liked":false,"id":234559,"user_name":"1.1","can_delete":false,"product_type":"c1","uid":1685457,"ip_address":"","ucode":"955730BDF9E13B","user_header":"https://static001.geekbang.org/account/avatar/00/19/b7/d1/94a0220b.jpg","comment_is_top":false,"comment_ctime":1594719606,"is_pvip":true,"replies":[{"id":"86938","content":"是的。如果h5本身不需要使用cookie的话，都建议这么设置。","user_name":"作者回复","user_name_real":"captain","uid":"1012580","ctime":1594983895,"ip_address":"","comment_id":234559,"utype":1}],"discussion_count":1,"race_medal":0,"score":"31659490678","product_id":100041701,"comment_content":"老师，像 XSS 盗 cookie 这种情况，我们只要在单点登录的应用认证成功后 Set-Cookie 时加上 HttpOnly 字段，避免 JS 用 document.cookie 读取(前端一般也不需要操作 cookie吧)，是不是很大程度降低用户凭证被盗取的危害？<br>","like_count":7,"discussions":[{"author":{"id":1012580,"avatar":"","nickname":"captain","note":"","ucode":"471A8412D923EB","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":501422,"discussion_content":"是的。如果h5本身不需要使用cookie的话，都建议这么设置。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1594983895,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":193596,"user_name":"半兽人","can_delete":false,"product_type":"c1","uid":1297619,"ip_address":"","ucode":"AEB09E0C0892EA","user_header":"https://static001.geekbang.org/account/avatar/00/13/cc/d3/bcb7a3fd.jpg","comment_is_top":false,"comment_ctime":1584931972,"is_pvip":false,"discussion_count":1,"race_medal":0,"score":"27354735748","product_id":100041701,"comment_content":"对&lt;java&lt;javascript&gt;script&gt;的替换，可以写一个循环while(1) { if notFind(...) then break; replace( ... ）} ，可以防止单次替换后又出现敏感词","like_count":6,"discussions":[{"author":{"id":1384254,"avatar":"https://static001.geekbang.org/account/avatar/00/15/1f/3e/861b6d4d.jpg","nickname":"豆浆油条蓝胖纸","note":"","ucode":"D2C49FC10B7ECE","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":583695,"discussion_content":"使用正则匹配过滤","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1660295240,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":"上海"},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":169884,"user_name":"肖大妞","can_delete":false,"product_type":"c1","uid":1426644,"ip_address":"","ucode":"2AD2F8684FDCF8","user_header":"https://static001.geekbang.org/account/avatar/00/15/c4/d4/5c8fb1cb.jpg","comment_is_top":false,"comment_ctime":1578468342,"is_pvip":false,"replies":[{"id":"65968","content":"实质都是一样的，在页面中植入了黑客的js脚本。区别就是在于位置不同，导致传播的方式不一样。比如反射型xss需要用户点击链接，存储型xss只需要用户正常浏览页面。最终植入了js脚本后，直接通过document.cookie就可以拿到cookie，然后发送到黑客的外部接口，就可以获取到了","user_name":"作者回复","user_name_real":"captain","uid":"1012580","ctime":1578491509,"ip_address":"","comment_id":169884,"utype":1}],"discussion_count":2,"race_medal":0,"score":"27348272118","product_id":100041701,"comment_content":"您这个讲解需要一定基础的人才能看吗<br>我研究了半天，各种xss攻击除了存储位置的不同，并没有看到实质的区别<br>能不能具体的讲讲黑客从开始攻击到获取服务器端cookie的一整个过程，我并没有看的太懂。。。","like_count":6,"discussions":[{"author":{"id":1012580,"avatar":"","nickname":"captain","note":"","ucode":"471A8412D923EB","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":480762,"discussion_content":"实质都是一样的，在页面中植入了黑客的js脚本。区别就是在于位置不同，导致传播的方式不一样。比如反射型xss需要用户点击链接，存储型xss只需要用户正常浏览页面。最终植入了js脚本后，直接通过document.cookie就可以拿到cookie，然后发送到黑客的外部接口，就可以获取到了","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1578491509,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1394030,"avatar":"https://static001.geekbang.org/account/avatar/00/15/45/6e/11cf22de.jpg","nickname":"普罗米修斯","note":"","ucode":"DDA7DE4DE371FC","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":322099,"discussion_content":"老师，您这个窃取cookie的xss攻击属于永久存储型的xss攻击吗，有没有一些在nginx防护的措施？现在还是有很多公司用这个nginx的，我们公司就是，还遇到了各种xss攻击，脑阔疼","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1604675124,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":194267,"user_name":"程序员二师兄","can_delete":false,"product_type":"c1","uid":1205697,"ip_address":"","ucode":"C9E3B5B3358BDF","user_header":"https://static001.geekbang.org/account/avatar/00/12/65/c1/afcd981b.jpg","comment_is_top":false,"comment_ctime":1585044335,"is_pvip":true,"replies":[{"id":"74454","content":"本质还是基于xss，使得浏览器执行黑客定义的js。而js是可以对页面元素进行任意的修改的。","user_name":"作者回复","user_name_real":"captain","uid":"1012580","ctime":1585312171,"ip_address":"","comment_id":194267,"utype":1}],"discussion_count":2,"race_medal":0,"score":"18764913519","product_id":100041701,"comment_content":"<br>有点不太明白，黑客怎么修改 DOM 伪造登录窗口呢？ 而且是正常的域名<br>","like_count":4,"discussions":[{"author":{"id":1012580,"avatar":"","nickname":"captain","note":"","ucode":"471A8412D923EB","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":488797,"discussion_content":"本质还是基于xss，使得浏览器执行黑客定义的js。而js是可以对页面元素进行任意的修改的。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1585312171,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1205697,"avatar":"https://static001.geekbang.org/account/avatar/00/12/65/c1/afcd981b.jpg","nickname":"程序员二师兄","note":"","ucode":"C9E3B5B3358BDF","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":215523,"discussion_content":"基于xss 的 js 脚本，明白了，谢谢老师的解答","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1585329890,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":193698,"user_name":"PyGeek","can_delete":false,"product_type":"c1","uid":1468586,"ip_address":"","ucode":"0B6467C5271BCB","user_header":"https://static001.geekbang.org/account/avatar/00/16/68/aa/6d5f2115.jpg","comment_is_top":false,"comment_ctime":1584950219,"is_pvip":false,"replies":[{"id":"73943","content":"各有各的区别。CSRF更多的强调跨站的攻击，即从A站点伪造用户向B站点发起请求，这样才能大大扩大传播范围。而XSS是本站内的攻击，扩散能力弱很多，但造成的危害通常会远高于CSRF。","user_name":"作者回复","user_name_real":"captain","uid":"1012580","ctime":1585031366,"ip_address":"","comment_id":193698,"utype":1}],"discussion_count":3,"race_medal":0,"score":"18764819403","product_id":100041701,"comment_content":"请问您觉得csrf和xss应该是一种包含关系，还是各有各的区别？","like_count":4,"discussions":[{"author":{"id":1012580,"avatar":"","nickname":"captain","note":"","ucode":"471A8412D923EB","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":488627,"discussion_content":"各有各的区别。CSRF更多的强调跨站的攻击，即从A站点伪造用户向B站点发起请求，这样才能大大扩大传播范围。而XSS是本站内的攻击，扩散能力弱很多，但造成的危害通常会远高于CSRF。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1585031366,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1468586,"avatar":"https://static001.geekbang.org/account/avatar/00/16/68/aa/6d5f2115.jpg","nickname":"PyGeek","note":"","ucode":"0B6467C5271BCB","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":213188,"discussion_content":"好滴 谢谢您的解答 赞👍","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1585058203,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":2704431,"avatar":"https://static001.geekbang.org/account/avatar/00/29/44/2f/67d8a9ee.jpg","nickname":"阿白","note":"","ucode":"1AA0E07921A380","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":387786,"discussion_content":"看到过一个不错的总结，分享一下：xss是前端过分信任后端（没有充分验证后端的返回），csrf是后端过分信任前端（没有充分验证前端的输入）。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1628413622,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":196596,"user_name":"大坏狐狸","can_delete":false,"product_type":"c1","uid":1325678,"ip_address":"","ucode":"5044F89A505C5B","user_header":"https://static001.geekbang.org/account/avatar/00/14/3a/6e/e39e90ca.jpg","comment_is_top":false,"comment_ctime":1585295999,"is_pvip":false,"replies":[{"id":"74983","content":"对于任何认证方式都一样，拿了客户端的信息，就能够盗用账号，除非要求每次操作都输入密码。因此，我们谈论认证的前提都是客户端安全的情况下。","user_name":"作者回复","user_name_real":"captain","uid":"1012580","ctime":1585575032,"ip_address":"","comment_id":196596,"utype":1}],"discussion_count":2,"race_medal":0,"score":"14470197887","product_id":100041701,"comment_content":"JWT 那个 岂不是 有人拿了客户端的东西 就能借用被人的名义干啥事了。","like_count":3,"discussions":[{"author":{"id":1012580,"avatar":"","nickname":"captain","note":"","ucode":"471A8412D923EB","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":489338,"discussion_content":"对于任何认证方式都一样，拿了客户端的信息，就能够盗用账号，除非要求每次操作都输入密码。因此，我们谈论认证的前提都是客户端安全的情况下。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1585575032,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1254252,"avatar":"https://static001.geekbang.org/account/avatar/00/13/23/6c/82ba5e1f.jpg","nickname":"LIKE","note":"","ucode":"9DAB7F9051648A","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":270252,"discussion_content":"除cookies外，通过校验访问前后的客户端ip是否一致，也可以增强一定的安全性。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1589987004,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":163834,"user_name":"小晏子","can_delete":false,"product_type":"c1","uid":1132337,"ip_address":"","ucode":"3AAA6FB5ACB6AE","user_header":"https://static001.geekbang.org/account/avatar/00/11/47/31/f35367c8.jpg","comment_is_top":false,"comment_ctime":1576809145,"is_pvip":false,"replies":[{"id":"62521","content":"责任肯定是都有的。问这个问题也是希望引导大家思考下安全在公司中的定位～","user_name":"作者回复","user_name_real":"captain","uid":"1012580","ctime":1577058238,"ip_address":"","comment_id":163834,"utype":1}],"discussion_count":1,"race_medal":0,"score":"14461711033","product_id":100041701,"comment_content":"是这分析一下这次攻击，用户点击了链接就自动发送微博了，那么整个链路就是前端—后端—前端，而要达到这样的目的，一定是有javascript脚本被执行了，伪装的js脚本获取本地cookie后直接调用后端接口来发送微博，正好符合反射XSS的定义。对于这个问题，感觉开发运维安全都有责任，开发为什么没做安全字符检验，运维安全为什么没有对这种突然爆发的转发信息没有意识到安全问题","like_count":3,"discussions":[{"author":{"id":1012580,"avatar":"","nickname":"captain","note":"","ucode":"471A8412D923EB","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":478547,"discussion_content":"责任肯定是都有的。问这个问题也是希望引导大家思考下安全在公司中的定位～","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1577058238,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":163786,"user_name":"宝仔","can_delete":false,"product_type":"c1","uid":1013493,"ip_address":"","ucode":"A0F17DFF99DB21","user_header":"https://static001.geekbang.org/account/avatar/00/0f/76/f5/e3f5bd8d.jpg","comment_is_top":false,"comment_ctime":1576803265,"is_pvip":true,"replies":[{"id":"62511","content":"责任肯定是各方都有的。但锅也得有人背。尤其是如果事件影响大到某个程度，比如损失了10%的用户或者好几百万，肯定是需要有人受到惩罚的。。。","user_name":"作者回复","user_name_real":"captain","uid":"1012580","ctime":1577028293,"ip_address":"","comment_id":163786,"utype":1}],"discussion_count":2,"race_medal":0,"score":"14461705153","product_id":100041701,"comment_content":"我觉得不应该去讨论背锅这个问题，问题核心在于怎么解决，以及各端明确未来的防范措施，下次再犯，再来定位锅的问题","like_count":3,"discussions":[{"author":{"id":1012580,"avatar":"","nickname":"captain","note":"","ucode":"471A8412D923EB","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":478534,"discussion_content":"责任肯定是各方都有的。但锅也得有人背。尤其是如果事件影响大到某个程度，比如损失了10%的用户或者好几百万，肯定是需要有人受到惩罚的。。。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1577028293,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1115057,"avatar":"https://static001.geekbang.org/account/avatar/00/11/03/b1/7c49c67e.jpg","nickname":"牧云小帅","note":"","ucode":"00982EAE287BDA","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":328514,"discussion_content":"安全背锅…不要问我为什么知道","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1606175902,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":193906,"user_name":"tardc","can_delete":false,"product_type":"c1","uid":1074057,"ip_address":"","ucode":"71142F0FD5B171","user_header":"https://static001.geekbang.org/account/avatar/00/10/63/89/f7d841c1.jpg","comment_is_top":false,"comment_ctime":1584978894,"is_pvip":false,"replies":[{"id":"73937","content":"如果是用户点击了那条微博的链接才”被发微博“。如果链接是发博接口，那就是CSRF；如果链接是其他另外一个页面，那通常是反射型XSS。","user_name":"作者回复","user_name_real":"captain","uid":"1012580","ctime":1585030994,"ip_address":"","comment_id":193906,"utype":1}],"discussion_count":1,"race_medal":0,"score":"10174913486","product_id":100041701,"comment_content":"如果是用户浏览了那条微博就”被发微博“应该算持久性XSS；如果是用户点击了那条微博的链接才”被发微博“应该算CSRF。<br>发生这种事情应该大家一起处理才好，也没锅可甩：对于开发人员来说，没有安全知识不算是一个合格的开发者；对于安全人员来说，未对开发人员做好安全知识培训或业务安全负责没做足。大家都有责任，一起处理问题才对。","like_count":2,"discussions":[{"author":{"id":1012580,"avatar":"","nickname":"captain","note":"","ucode":"471A8412D923EB","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":488697,"discussion_content":"如果是用户点击了那条微博的链接才”被发微博“。如果链接是发博接口，那就是CSRF；如果链接是其他另外一个页面，那通常是反射型XSS。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1585030994,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":165292,"user_name":"LEON","can_delete":false,"product_type":"c1","uid":1109922,"ip_address":"","ucode":"58F7AF5302FCAD","user_header":"https://static001.geekbang.org/account/avatar/00/10/ef/a2/6ea5bb9e.jpg","comment_is_top":false,"comment_ctime":1577194835,"is_pvip":true,"replies":[{"id":"63023","content":"存储型特点比较明确，就是攻击脚本会存储到服务器的数据库中。DOM和反射型其实比较类似，只不过一个是针对后端逻辑，一个是针对JS的前端逻辑。","user_name":"作者回复","user_name_real":"captain","uid":"1012580","ctime":1577230065,"ip_address":"","comment_id":165292,"utype":1}],"discussion_count":3,"race_medal":0,"score":"10167129427","product_id":100041701,"comment_content":"老师请教下，存储型XSS也能修改DOM进行XSS攻击吧？这种方法和传统的DOM XSS有什么区别？感谢","like_count":2,"discussions":[{"author":{"id":1012580,"avatar":"","nickname":"captain","note":"","ucode":"471A8412D923EB","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":479109,"discussion_content":"存储型特点比较明确，就是攻击脚本会存储到服务器的数据库中。DOM和反射型其实比较类似，只不过一个是针对后端逻辑，一个是针对JS的前端逻辑。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1577230065,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1109922,"avatar":"https://static001.geekbang.org/account/avatar/00/10/ef/a2/6ea5bb9e.jpg","nickname":"LEON","note":"","ucode":"58F7AF5302FCAD","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":100404,"discussion_content":"老师感谢您的恢复，DOM是针对后端逻辑是什么意思？能具体点吗？","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1577257406,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":1,"child_discussions":[{"author":{"id":1685457,"avatar":"https://static001.geekbang.org/account/avatar/00/19/b7/d1/94a0220b.jpg","nickname":"1.1","note":"","ucode":"955730BDF9E13B","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":1109922,"avatar":"https://static001.geekbang.org/account/avatar/00/10/ef/a2/6ea5bb9e.jpg","nickname":"LEON","note":"","ucode":"58F7AF5302FCAD","race_medal":0,"user_type":1,"is_pvip":true},"discussion":{"id":291143,"discussion_content":"老师说的 DOM --> 前端，反射型是指后端。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1594718224,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":100404,"ip_address":""},"score":291143,"extra":""}]}]},{"had_liked":false,"id":164059,"user_name":"我来也","can_delete":false,"product_type":"c1","uid":1205253,"ip_address":"","ucode":"773D6104F56767","user_header":"https://static001.geekbang.org/account/avatar/00/12/64/05/6989dce6.jpg","comment_is_top":false,"comment_ctime":1576852202,"is_pvip":false,"replies":[{"id":"62515","content":"也许是，不过最终的安全性，还是得看具体的场景。比如，万一替换了过后，还加了个strip呢。。","user_name":"作者回复","user_name_real":"captain","uid":"1012580","ctime":1577028607,"ip_address":"","comment_id":164059,"utype":1}],"discussion_count":1,"race_medal":0,"score":"10166786794","product_id":100041701,"comment_content":"字符串替换的那个，如果不是替换为空字符串，而是替换成一个空格，那是不是就安全了呢？","like_count":2,"discussions":[{"author":{"id":1012580,"avatar":"","nickname":"captain","note":"","ucode":"471A8412D923EB","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":478628,"discussion_content":"也许是，不过最终的安全性，还是得看具体的场景。比如，万一替换了过后，还加了个strip呢。。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1577028607,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":163923,"user_name":"tt","can_delete":false,"product_type":"c1","uid":1489957,"ip_address":"","ucode":"7753B79AD5A9AC","user_header":"https://static001.geekbang.org/account/avatar/00/16/bc/25/1c92a90c.jpg","comment_is_top":false,"comment_ctime":1576828715,"is_pvip":false,"replies":[{"id":"62510","content":"不算存储型XSS，因为传播是因为微博的内容是一个反射型XSS链接。而这个内容本身实际不会执行脚本，需要用户点击才能发起XSS。","user_name":"作者回复","user_name_real":"captain","uid":"1012580","ctime":1577028043,"ip_address":"","comment_id":163923,"utype":1}],"discussion_count":1,"race_medal":0,"score":"10166763307","product_id":100041701,"comment_content":"不要相信用户的输入。那么前端要处理自用户的输入么？要。后端要处理用户的输入么？也要。没有正确处理，就有责任。<br><br>微博的例子是不是存储行XSS攻击呢？A用户发送的微博中被嵌入了恶意脚本，另外一个用户B浏览此内容的时候，因为已经登陆了，可以直接用自己的身份（Token或cookes）直接发布到服务器上","like_count":2,"discussions":[{"author":{"id":1012580,"avatar":"","nickname":"captain","note":"","ucode":"471A8412D923EB","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":478583,"discussion_content":"不算存储型XSS，因为传播是因为微博的内容是一个反射型XSS链接。而这个内容本身实际不会执行脚本，需要用户点击才能发起XSS。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1577028043,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":183738,"user_name":"　　　　　　　鸟人","can_delete":false,"product_type":"c1","uid":1035165,"ip_address":"","ucode":"E504B22F336035","user_header":"https://static001.geekbang.org/account/avatar/00/0f/cb/9d/2bc85843.jpg","comment_is_top":false,"comment_ctime":1583122794,"is_pvip":false,"replies":[{"id":"71172","content":"也许吧，随着CSP越来越普遍，XSS确实越来越难了。","user_name":"作者回复","user_name_real":"captain","uid":"1012580","ctime":1583151070,"ip_address":"","comment_id":183738,"utype":1}],"discussion_count":1,"race_medal":0,"score":"5878090090","product_id":100041701,"comment_content":"现在很多浏览器都开始大量过滤xss  那么xss会不会死亡呢","like_count":1,"discussions":[{"author":{"id":1012580,"avatar":"","nickname":"captain","note":"","ucode":"471A8412D923EB","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":485765,"discussion_content":"也许吧，随着CSP越来越普遍，XSS确实越来越难了。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1583151070,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":165180,"user_name":"leslie","can_delete":false,"product_type":"c1","uid":1324255,"ip_address":"","ucode":"798E7C1CC98CC2","user_header":"https://static001.geekbang.org/account/avatar/00/14/34/df/64e3d533.jpg","comment_is_top":false,"comment_ctime":1577176356,"is_pvip":false,"replies":[{"id":"62938","content":"收到，感谢您的留言。我们会统一说法。","user_name":"作者回复","user_name_real":"时间","uid":"1743279","ctime":1577181492,"ip_address":"","comment_id":165180,"utype":1}],"discussion_count":1,"race_medal":0,"score":"5872143652","product_id":100041701,"comment_content":"  问题中应当是通过持久型 XSS&#47;存储型XSS进行攻击，解决方式应当是CSP进行防御。<br>  指出文章中老师同一个概念用了不一致不同名称的小问题，对于老手没影响，可能对于新手却会造成理解上的误区。在开始部分老师用了“三种 XSS 攻击，它们分别是：反射型 XSS、基于 DOM 的 XSS 以及持久型 XSS。”，总结部分却用了&quot;根据攻击方式的不同，可以分为：反射型 XSS、基于 DOM 的 XSS 和存储型 XSS。&quot;，名称不一致。<br>     感谢老师的分享：学习中还是扫除了不少误区，提升了自己对于安全方面的理解；谢谢。","like_count":1,"discussions":[{"author":{"id":1743279,"avatar":"https://static001.geekbang.org/account/avatar/00/1a/99/af/e4cc7374.jpg","nickname":"啊呜","note":"","ucode":"76E24AB808868D","race_medal":0,"user_type":4,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":479061,"discussion_content":"收到，感谢您的留言。我们会统一说法。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1577181492,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":4}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":165121,"user_name":"ZeroIce","can_delete":false,"product_type":"c1","uid":1305369,"ip_address":"","ucode":"30133BA83CE349","user_header":"https://static001.geekbang.org/account/avatar/00/13/eb/19/0d990b03.jpg","comment_is_top":false,"comment_ctime":1577166134,"is_pvip":false,"replies":[{"id":"63251","content":"我记得jwt是需要客户端自己带上去的？如果不是浏览器自动带上去的话，就无法发起csrf攻击。","user_name":"作者回复","user_name_real":"captain","uid":"1012580","ctime":1577346113,"ip_address":"","comment_id":165121,"utype":1}],"discussion_count":1,"race_medal":0,"score":"5872133430","product_id":100041701,"comment_content":"现在很多请求会带token 头部去请求（jwt）？单单点击一条链接，应该不可以发一条微博吧","like_count":1,"discussions":[{"author":{"id":1012580,"avatar":"","nickname":"captain","note":"","ucode":"471A8412D923EB","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":479035,"discussion_content":"我记得jwt是需要客户端自己带上去的？如果不是浏览器自动带上去的话，就无法发起csrf攻击。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1577346113,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":165111,"user_name":"ZeroIce","can_delete":false,"product_type":"c1","uid":1305369,"ip_address":"","ucode":"30133BA83CE349","user_header":"https://static001.geekbang.org/account/avatar/00/13/eb/19/0d990b03.jpg","comment_is_top":false,"comment_ctime":1577163737,"is_pvip":false,"replies":[{"id":"63252","content":"让用户点击一个链接，就相当于让用户输入了黑客定义的内容。","user_name":"作者回复","user_name_real":"captain","uid":"1012580","ctime":1577346267,"ip_address":"","comment_id":165111,"utype":1}],"discussion_count":1,"race_medal":0,"score":"5872131033","product_id":100041701,"comment_content":"还有个问题：黑客怎样去控制用户的输入？   控制不了的话，当然也注入不了脚本代码呀。","like_count":1,"discussions":[{"author":{"id":1012580,"avatar":"","nickname":"captain","note":"","ucode":"471A8412D923EB","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":479031,"discussion_content":"让用户点击一个链接，就相当于让用户输入了黑客定义的内容。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1577346267,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":165108,"user_name":"ZeroIce","can_delete":false,"product_type":"c1","uid":1305369,"ip_address":"","ucode":"30133BA83CE349","user_header":"https://static001.geekbang.org/account/avatar/00/13/eb/19/0d990b03.jpg","comment_is_top":false,"comment_ctime":1577163475,"is_pvip":false,"replies":[{"id":"63253","content":"跳转是可以的。不然怎么从百度搜索跳转到具体的页面。","user_name":"作者回复","user_name_real":"captain","uid":"1012580","ctime":1577346312,"ip_address":"","comment_id":165108,"utype":1}],"discussion_count":1,"race_medal":0,"score":"5872130771","product_id":100041701,"comment_content":"由于sop的影响，window.location不是也不可以跳转？怎么这个也会影响cookie泄漏了？","like_count":1,"discussions":[{"author":{"id":1012580,"avatar":"","nickname":"captain","note":"","ucode":"471A8412D923EB","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":479030,"discussion_content":"跳转是可以的。不然怎么从百度搜索跳转到具体的页面。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1577346312,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":163784,"user_name":"Cy23","can_delete":false,"product_type":"c1","uid":1591293,"ip_address":"","ucode":"8DC561C5151758","user_header":"https://static001.geekbang.org/account/avatar/00/18/47/fd/895f0c27.jpg","comment_is_top":false,"comment_ctime":1576803074,"is_pvip":false,"replies":[{"id":"62284","content":"同学，未经授权发起攻击有法律风险，建议不要冒险～","user_name":"作者回复","user_name_real":"captain","uid":"1012580","ctime":1576804270,"ip_address":"","comment_id":163784,"utype":1}],"discussion_count":2,"race_medal":0,"score":"5871770370","product_id":100041701,"comment_content":"我好像学到点怎么攻击别人，你们呢","like_count":1,"discussions":[{"author":{"id":1012580,"avatar":"","nickname":"captain","note":"","ucode":"471A8412D923EB","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":478533,"discussion_content":"同学，未经授权发起攻击有法律风险，建议不要冒险～","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1576804270,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1591293,"avatar":"https://static001.geekbang.org/account/avatar/00/18/47/fd/895f0c27.jpg","nickname":"Cy23","note":"","ucode":"8DC561C5151758","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":91017,"discussion_content":"好的，我自己攻击自己的","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1576805956,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":163771,"user_name":"冯玉鹏","can_delete":false,"product_type":"c1","uid":1442088,"ip_address":"","ucode":"BA4B53F072B82F","user_header":"https://static001.geekbang.org/account/avatar/00/16/01/28/134da154.jpg","comment_is_top":false,"comment_ctime":1576801695,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"5871768991","product_id":100041701,"comment_content":"关于问题，到底应该谁背锅，应该是一个系统架构层面的问题，而不是单纯的前后端，如果一定要定位到前后端我认为应该是都有问题。","like_count":1},{"had_liked":false,"id":354086,"user_name":"Sudouble","can_delete":false,"product_type":"c1","uid":1365574,"ip_address":"北京","ucode":"B369B09DAF8D20","user_header":"https://static001.geekbang.org/account/avatar/00/14/d6/46/5eb5261b.jpg","comment_is_top":false,"comment_ctime":1660091696,"is_pvip":true,"discussion_count":0,"race_medal":0,"score":"1660091696","product_id":100041701,"comment_content":"持久型XSS，需要在输出时进行验证和编码，避免造成安全问题。","like_count":0},{"had_liked":false,"id":346818,"user_name":"范特西","can_delete":false,"product_type":"c1","uid":2709222,"ip_address":"","ucode":"4BE8E24F80B736","user_header":"https://static001.geekbang.org/account/avatar/00/29/56/e6/c5c80c3e.jpg","comment_is_top":false,"comment_ctime":1653458025,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1653458025","product_id":100041701,"comment_content":"老师您好。你刚才提到现在基本都采用的前后端分离架构，xss越来越少了是因为什么？是不是只要不把用户的录入直接输出到html网页上就不存在xss攻击","like_count":0},{"had_liked":false,"id":302332,"user_name":"Roway","can_delete":false,"product_type":"c1","uid":1060967,"ip_address":"","ucode":"65AF589142AB6C","user_header":"https://static001.geekbang.org/account/avatar/00/10/30/67/a1e9aaba.jpg","comment_is_top":false,"comment_ctime":1626168367,"is_pvip":true,"discussion_count":0,"race_medal":0,"score":"1626168367","product_id":100041701,"comment_content":"前端也好、后端也好，开发人员都不认为是自己的问题。那么，你认为出现这种安全事件，应该由谁来“背锅”呢？是开发、运维还是安全负责人呢？  安全事情各个环节都需要警惕起来，需要从公司层面高度重视安全规范制度。说直白点，出了安全事故损失也是大家的损失","like_count":0},{"had_liked":false,"id":272018,"user_name":"LIKE","can_delete":false,"product_type":"c1","uid":1254252,"ip_address":"","ucode":"9DAB7F9051648A","user_header":"https://static001.geekbang.org/account/avatar/00/13/23/6c/82ba5e1f.jpg","comment_is_top":false,"comment_ctime":1609912666,"is_pvip":false,"replies":[{"id":"99770","content":"本质问题是前端解析有漏洞，所以改前端为主。当然也可以同时配合把存储过滤加上，双重防护。","user_name":"作者回复","user_name_real":"captain","uid":"1012580","ctime":1611283635,"ip_address":"","comment_id":272018,"utype":1}],"discussion_count":2,"race_medal":0,"score":"1609912666","product_id":100041701,"comment_content":"老师好，针对系统内已存在的存储型xss漏洞要如何修复？是需要前端修改页面解析漏洞？后端修改数据存储逻辑吗？","like_count":0,"discussions":[{"author":{"id":1012580,"avatar":"","nickname":"captain","note":"","ucode":"471A8412D923EB","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":513120,"discussion_content":"本质问题是前端解析有漏洞，所以改前端为主。当然也可以同时配合把存储过滤加上，双重防护。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1611283635,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1254252,"avatar":"https://static001.geekbang.org/account/avatar/00/13/23/6c/82ba5e1f.jpg","nickname":"LIKE","note":"","ucode":"9DAB7F9051648A","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":345915,"discussion_content":"存在漏洞的地方主要是富文本，前端说是就将内容做 HTML 渲染。把任务给到后端处理了…","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1611813746,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":259298,"user_name":"普罗米修斯","can_delete":false,"product_type":"c1","uid":1394030,"ip_address":"","ucode":"DDA7DE4DE371FC","user_header":"https://static001.geekbang.org/account/avatar/00/15/45/6e/11cf22de.jpg","comment_is_top":false,"comment_ctime":1604675148,"is_pvip":false,"replies":[{"id":"99775","content":"Csp就属于在nginx层的一种防护手段了。","user_name":"作者回复","user_name_real":"captain","uid":"1012580","ctime":1611284351,"ip_address":"","comment_id":259298,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1604675148","product_id":100041701,"comment_content":"老师，您这个窃取cookie的xss攻击属于永久存储型的xss攻击吗，有没有一些在nginx防护的措施？现在还是有很多公司用这个nginx的，我们公司就是，还遇到了各种xss攻击，脑阔疼","like_count":0,"discussions":[{"author":{"id":1012580,"avatar":"","nickname":"captain","note":"","ucode":"471A8412D923EB","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":508897,"discussion_content":"Csp就属于在nginx层的一种防护手段了。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1611284351,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":256511,"user_name":"JianXu","can_delete":false,"product_type":"c1","uid":1033219,"ip_address":"","ucode":"2A61BDBB573BDC","user_header":"https://static001.geekbang.org/account/avatar/00/0f/c4/03/f753fda7.jpg","comment_is_top":false,"comment_ctime":1603641945,"is_pvip":false,"replies":[{"id":"94882","content":"没有同源的概念，反射性xss相当于一次单链接访问，不涉及跳转","user_name":"作者回复","user_name_real":"captain","uid":"1012580","ctime":1605360672,"ip_address":"","comment_id":256511,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1603641945","product_id":100041701,"comment_content":"老师，对于反射型XSS 攻击，是不是只能去通过诱使客户点击我们准备的链接来实现，而且该链接所在的domain 必须和原来的系统UX 同源？<br><br>也就是说假设原来是http:&#47;&#47;www.abc.com , 那么诱导用户点击的链接也必须是 http:&#47;&#47;www.abc.com ?","like_count":0,"discussions":[{"author":{"id":1012580,"avatar":"","nickname":"captain","note":"","ucode":"471A8412D923EB","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":508038,"discussion_content":"没有同源的概念，反射性xss相当于一次单链接访问，不涉及跳转","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1605360672,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":235056,"user_name":"LIKE","can_delete":false,"product_type":"c1","uid":1254252,"ip_address":"","ucode":"9DAB7F9051648A","user_header":"https://static001.geekbang.org/account/avatar/00/13/23/6c/82ba5e1f.jpg","comment_is_top":false,"comment_ctime":1594880089,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1594880089","product_id":100041701,"comment_content":"Cooike等重要头信息，服务器新增返回HttpOnly，防止XSS读取Cookie。","like_count":0},{"had_liked":false,"id":231316,"user_name":"蓝魔丶","can_delete":false,"product_type":"c1","uid":1219438,"ip_address":"","ucode":"2AE4359E263558","user_header":"https://static001.geekbang.org/account/avatar/00/12/9b/6e/edd2da0c.jpg","comment_is_top":false,"comment_ctime":1593651324,"is_pvip":false,"replies":[{"id":"85953","content":"给用户发个链接，诱导点击即可。","user_name":"作者回复","user_name_real":"captain","uid":"1012580","ctime":1594172331,"ip_address":"","comment_id":231316,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1593651324","product_id":100041701,"comment_content":"老师，xss的前两种攻击方式黑客是如何在用户的当前网页植入带有恶意脚本的链接的？","like_count":0,"discussions":[{"author":{"id":1012580,"avatar":"","nickname":"captain","note":"","ucode":"471A8412D923EB","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":500255,"discussion_content":"给用户发个链接，诱导点击即可。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1594172331,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":223415,"user_name":"Roway","can_delete":false,"product_type":"c1","uid":1060967,"ip_address":"","ucode":"65AF589142AB6C","user_header":"https://static001.geekbang.org/account/avatar/00/10/30/67/a1e9aaba.jpg","comment_is_top":false,"comment_ctime":1591085812,"is_pvip":true,"replies":[{"id":"82496","content":"比如一个输入框只接收数字，那你在接受到输入后立即执行Interger.parseInt，基本所有的攻击脚本都会被过滤掉。其他类似的还有选项类的输入。","user_name":"作者回复","user_name_real":"captain","uid":"1012580","ctime":1591260224,"ip_address":"","comment_id":223415,"utype":1}],"discussion_count":3,"race_medal":0,"score":"1591085812","product_id":100041701,"comment_content":"请问老师，白名单的规则不太明白，数字框好理解，比如一个输入框怎么去使用白名单?","like_count":0,"discussions":[{"author":{"id":1012580,"avatar":"","nickname":"captain","note":"","ucode":"471A8412D923EB","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":497124,"discussion_content":"比如一个输入框只接收数字，那你在接受到输入后立即执行Interger.parseInt，基本所有的攻击脚本都会被过滤掉。其他类似的还有选项类的输入。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1591260224,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1439241,"avatar":"https://static001.geekbang.org/account/avatar/00/15/f6/09/89ac4fc1.jpg","nickname":"李夏彪","note":"","ucode":"10D6BF57E608AF","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":359154,"discussion_content":"使用正则校验","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1616123375,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1060967,"avatar":"https://static001.geekbang.org/account/avatar/00/10/30/67/a1e9aaba.jpg","nickname":"Roway","note":"","ucode":"65AF589142AB6C","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":280735,"discussion_content":"数字类的好控制，文本类的","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1591607372,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":219308,"user_name":"LIKE","can_delete":false,"product_type":"c1","uid":1254252,"ip_address":"","ucode":"9DAB7F9051648A","user_header":"https://static001.geekbang.org/account/avatar/00/13/23/6c/82ba5e1f.jpg","comment_is_top":false,"comment_ctime":1589987309,"is_pvip":false,"replies":[{"id":"81099","content":"各种编码就是为了实现这个效果：避免输入的关键词和语法关键词混淆。","user_name":"作者回复","user_name_real":"captain","uid":"1012580","ctime":1590060440,"ip_address":"","comment_id":219308,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1589987309","product_id":100041701,"comment_content":"针对输入框的，有什么技术可以使得用户输入什么就展示什么吗？<br>这样是不是就可以避免一部分的xss攻击？","like_count":0,"discussions":[{"author":{"id":1012580,"avatar":"","nickname":"captain","note":"","ucode":"471A8412D923EB","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":495758,"discussion_content":"各种编码就是为了实现这个效果：避免输入的关键词和语法关键词混淆。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1590060440,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":199173,"user_name":"COOK","can_delete":false,"product_type":"c1","uid":1233016,"ip_address":"","ucode":"0F1C0E7CA4F36B","user_header":"https://static001.geekbang.org/account/avatar/00/12/d0/78/a11a999d.jpg","comment_is_top":false,"comment_ctime":1585481406,"is_pvip":true,"discussion_count":0,"race_medal":0,"score":"1585481406","product_id":100041701,"comment_content":"预防xss要对输入内容过滤，在展现阶段过滤","like_count":0},{"had_liked":false,"id":198866,"user_name":"丁东","can_delete":false,"product_type":"c1","uid":1940553,"ip_address":"","ucode":"967FADB9EABFA8","user_header":"https://static001.geekbang.org/account/avatar/00/1d/9c/49/e5c18d86.jpg","comment_is_top":false,"comment_ctime":1585470779,"is_pvip":false,"replies":[{"id":"74980","content":"微博信息泄漏的根本原因应该是某个接口间接泄漏了用户的手机号，但是没有实施较严格的认证和授权措施。能够采取的行动包括，对敏感接口作盘点，对接口作强认证，对接口作频次限制等等。","user_name":"作者回复","user_name_real":"captain","uid":"1012580","ctime":1585574732,"ip_address":"","comment_id":198866,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1585470779","product_id":100041701,"comment_content":"老师，听说最近微博用户信息泄露，能作为个案例给讲讲有什么教训和经验？","like_count":0,"discussions":[{"author":{"id":1012580,"avatar":"","nickname":"captain","note":"","ucode":"471A8412D923EB","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":489757,"discussion_content":"微博信息泄漏的根本原因应该是某个接口间接泄漏了用户的手机号，但是没有实施较严格的认证和授权措施。能够采取的行动包括，对敏感接口作盘点，对接口作强认证，对接口作频次限制等等。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1585574732,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":188832,"user_name":"官","can_delete":false,"product_type":"c1","uid":1696727,"ip_address":"","ucode":"E3FF6D04B9846B","user_header":"https://static001.geekbang.org/account/avatar/00/19/e3/d7/d7b3505f.jpg","comment_is_top":false,"comment_ctime":1584423405,"is_pvip":false,"replies":[{"id":"72919","content":"靠安全意识肯定是不够的，哪怕只有万一的疏忽，对黑客来说，也是有利可图的。所以最终还是得从应用自身来进行强化。","user_name":"作者回复","user_name_real":"captain","uid":"1012580","ctime":1584452419,"ip_address":"","comment_id":188832,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1584423405","product_id":100041701,"comment_content":"反射型XSS，这个自己中招过，当时太忙了没有思考随手点击链接解锁了丢了的苹果手机的验证码，而之前苹果客服打来电话反复提醒不要打开陌生短信，但是忙到不可开交的时候如果正巧黑客抓住机会发来短信，那么确实可能会中招。后来反思了很久，首先从用户角度来讲因为用户的情况五花八门，就算平常有安全意识也会出现疏忽的时候，所以我觉得只从用户角度加强安全意识是不够的，还是需要从服务端预防。<br>至于说开头的问题，我认为安全负责人首先没有意识到漏洞的存在，如果安全负责人认识到这个问题，那么他会联系前后端开发人员，让他们采取必要的措施，比如引入CSP来防护XSS，这样能够一定程度上从源头上避免XSS攻击。","like_count":0,"discussions":[{"author":{"id":1012580,"avatar":"","nickname":"captain","note":"","ucode":"471A8412D923EB","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":487543,"discussion_content":"靠安全意识肯定是不够的，哪怕只有万一的疏忽，对黑客来说，也是有利可图的。所以最终还是得从应用自身来进行强化。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1584452419,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":182786,"user_name":"Geek_2c2d0e_saga","can_delete":false,"product_type":"c1","uid":1888242,"ip_address":"","ucode":"6C977BC2A8779B","user_header":"","comment_is_top":false,"comment_ctime":1582865979,"is_pvip":false,"replies":[{"id":"70750","content":"原因比较多，建议联系客服或者微博安全中心解决～","user_name":"作者回复","user_name_real":"captain","uid":"1012580","ctime":1582908487,"ip_address":"","comment_id":182786,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1582865979","product_id":100041701,"comment_content":"我的微博账号就遇到过被大批量发广告","like_count":0,"discussions":[{"author":{"id":1012580,"avatar":"","nickname":"captain","note":"","ucode":"471A8412D923EB","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":485450,"discussion_content":"原因比较多，建议联系客服或者微博安全中心解决～","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1582908487,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":170366,"user_name":"王凯","can_delete":false,"product_type":"c1","uid":1306753,"ip_address":"","ucode":"4F91D6F85B45D1","user_header":"https://static001.geekbang.org/account/avatar/00/13/f0/81/8d539cba.jpg","comment_is_top":false,"comment_ctime":1578580520,"is_pvip":false,"discussion_count":1,"race_medal":0,"score":"1578580520","product_id":100041701,"comment_content":"显然后端背锅呀","like_count":0,"discussions":[{"author":{"id":1254252,"avatar":"https://static001.geekbang.org/account/avatar/00/13/23/6c/82ba5e1f.jpg","nickname":"LIKE","note":"","ucode":"9DAB7F9051648A","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":270259,"discussion_content":"没有测试的锅不是好锅","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1589987177,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":167418,"user_name":"小老鼠","can_delete":false,"product_type":"c1","uid":1257460,"ip_address":"","ucode":"C663A0C863A515","user_header":"https://static001.geekbang.org/account/avatar/00/13/2f/f4/2dede51a.jpg","comment_is_top":false,"comment_ctime":1577788338,"is_pvip":false,"replies":[{"id":"65083","content":"有用。不过ESAPI只是提供了编码、验证等方法，还是需要你主动的去使用这些方法才能起作用。","user_name":"作者回复","user_name_real":"captain","uid":"1012580","ctime":1577930173,"ip_address":"","comment_id":167418,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1577788338","product_id":100041701,"comment_content":"反射XSS也可以不点击触发，比如：&lt;img src=# onerror=...&gt;。ESAPI对防御XSS作用大吗？","like_count":0,"discussions":[{"author":{"id":1012580,"avatar":"","nickname":"captain","note":"","ucode":"471A8412D923EB","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":479855,"discussion_content":"有用。不过ESAPI只是提供了编码、验证等方法，还是需要你主动的去使用这些方法才能起作用。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1577930173,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":167338,"user_name":"律飛","can_delete":false,"product_type":"c1","uid":1462608,"ip_address":"","ucode":"65394E437AD2DF","user_header":"https://static001.geekbang.org/account/avatar/00/16/51/50/f5f2a121.jpg","comment_is_top":false,"comment_ctime":1577769649,"is_pvip":false,"replies":[{"id":"64989","content":"1、参数化也是一种编码形式。其他的像urlencode，也是一种编码。<br>2、这应该是某个APP在发送短信吧。","user_name":"作者回复","user_name_real":"captain","uid":"1012580","ctime":1577800345,"ip_address":"","comment_id":167338,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1577769649","product_id":100041701,"comment_content":"问题1：哪种类型的XSS攻击，怎么预防？<br>文中有一段话：这个事情的原型，其实是 2011 年微博真实出现的一次安全事件。整个事件的核心问题，其实出在这个可以点击的链接上。在这个事件中，黑客并不需要入侵到微博服务器中，只要用户点击了这个链接，就会“被发送”这样的博文。<br>没有入侵到服务器，因此判断是反射型XSS或者基于DOM的XSS。<br>预防 XSS优先采用编码的方式，通过对用户内容的验证来完成。如果编码影响到了业务的正常功能，可以采用白名单的检测和过滤方式来进行验证。除此之外，还可以根据业务需要，配置合适的 CSP 规则。<br>问题2：出现问题由谁背锅？<br>如果有安全负责人，首先由他背锅。他应在软件需求分析、设计、测试各阶段关注安全问题以及解决落实情况。<br>没有安全负责人，开发人员背锅。开发人员应具备基本的安全意识，掌握基本的安全技术。<br>运维人员也要承担一定的责任，不能发现问题提出问题，也不是一名合格的运维人员。<br>当然如果黑客太厉害，吾等已尽力而为时，只能由公司背锅。通过交学费也能促使提升安全防护能力嘛！<br>另外请教老师：1、编码是不是常说的参数化？就是尽量将用户输入参数化？2、苹果手机经常无缘无故地提示，SIM卡发送一条文本信息。这个是被黑客攻击了吗？出现这种情况时，肯定没有点击任何链接。","like_count":0,"discussions":[{"author":{"id":1012580,"avatar":"","nickname":"captain","note":"","ucode":"471A8412D923EB","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":479831,"discussion_content":"1、参数化也是一种编码形式。其他的像urlencode，也是一种编码。\n2、这应该是某个APP在发送短信吧。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1577800345,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":167325,"user_name":"Roy Liang","can_delete":false,"product_type":"c1","uid":1098898,"ip_address":"","ucode":"1DF5FC831A35DA","user_header":"https://static001.geekbang.org/account/avatar/00/10/c4/92/338b5609.jpg","comment_is_top":false,"comment_ctime":1577764816,"is_pvip":false,"replies":[{"id":"65030","content":"也有可能是浏览器的保护，我在safari上测试，也是直接把script脚本展示了出来。","user_name":"作者回复","user_name_real":"captain","uid":"1012580","ctime":1577853463,"ip_address":"","comment_id":167325,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1577764816","product_id":100041701,"comment_content":"前端用了react + ant design开发，能够向数据库注入了一段脚本：&lt;script&gt;alert(&#39;hello, world!&#39;)&lt;&#47;script&gt;;。不过展示的时候也把上面全部脚本内容展示出来了，这是前端开发框架做了防护了吗？","like_count":0,"discussions":[{"author":{"id":1012580,"avatar":"","nickname":"captain","note":"","ucode":"471A8412D923EB","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":479825,"discussion_content":"也有可能是浏览器的保护，我在safari上测试，也是直接把script脚本展示了出来。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1577853463,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":165830,"user_name":"sunözil","can_delete":false,"product_type":"c1","uid":1447909,"ip_address":"","ucode":"8C57787EF32ECE","user_header":"https://static001.geekbang.org/account/avatar/00/16/17/e5/4939b0c6.jpg","comment_is_top":false,"comment_ctime":1577328808,"is_pvip":false,"replies":[{"id":"63264","content":"可以设置，是不是默认的，不太确定。","user_name":"作者回复","user_name_real":"captain","uid":"1012580","ctime":1577352290,"ip_address":"","comment_id":165830,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1577328808","product_id":100041701,"comment_content":"Tomcat的jsessionid默认是HttpOnly的吗？<br>","like_count":0,"discussions":[{"author":{"id":1012580,"avatar":"","nickname":"captain","note":"","ucode":"471A8412D923EB","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":479286,"discussion_content":"可以设置，是不是默认的，不太确定。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1577352290,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":165695,"user_name":"早起不吃虫","can_delete":false,"product_type":"c1","uid":1369757,"ip_address":"","ucode":"13CD3B5E1F9435","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/7WkTI1IicbKvsPJng5vQh5qlrf1smbfl2zb7icHZfzcAk1k4lr8w8IDEAdrqq1NHW5XZMPXiaa1h7Jn1LGOWOCkIA/132","comment_is_top":false,"comment_ctime":1577283977,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1577283977","product_id":100041701,"comment_content":"老是提示有敏感词，都不知道是啥原因，简单说就是heike网站允许跨域，就能发起请求了呀","like_count":0},{"had_liked":false,"id":165686,"user_name":"早起不吃虫","can_delete":false,"product_type":"c1","uid":1369757,"ip_address":"","ucode":"13CD3B5E1F9435","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/7WkTI1IicbKvsPJng5vQh5qlrf1smbfl2zb7icHZfzcAk1k4lr8w8IDEAdrqq1NHW5XZMPXiaa1h7Jn1LGOWOCkIA/132","comment_is_top":false,"comment_ctime":1577282607,"is_pvip":false,"replies":[{"id":"63166","content":"哪里有问题？麻烦具体说明一下，谢谢。","user_name":"作者回复","user_name_real":"captain","uid":"1012580","ctime":1577283706,"ip_address":"","comment_id":165686,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1577282607","product_id":100041701,"comment_content":"同源策略的表述有误吧？？？","like_count":0,"discussions":[{"author":{"id":1012580,"avatar":"","nickname":"captain","note":"","ucode":"471A8412D923EB","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":479257,"discussion_content":"哪里有问题？麻烦具体说明一下，谢谢。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1577283706,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":165186,"user_name":"朝伟","can_delete":false,"product_type":"c1","uid":1154580,"ip_address":"","ucode":"C804ACEB176D5E","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/8Zs7gEMVq90uejXZMvA409gcln7d9TJgvOW5GQPSfSN0eOTgibhmyKvWltOrtRxdODXGl9zg1eUbAAfliaTicUKqQ/132","comment_is_top":false,"comment_ctime":1577177285,"is_pvip":false,"replies":[{"id":"63025","content":"意思是google发现你的网站内含有恶意信息？这种情况，如果不是存储型XSS的话，其实更普遍的是网页劫持。即黑客监听了后端的网络流量，对返回的网页源码，在网络层直接进行了篡改。通过https可以解决。","user_name":"作者回复","user_name_real":"captain","uid":"1012580","ctime":1577230302,"ip_address":"","comment_id":165186,"utype":1}],"discussion_count":2,"race_medal":0,"score":"1577177285","product_id":100041701,"comment_content":"之前的网站、google收录发现网站的搜索商品页面、有一些彩票恶意的信息、这个一般是怎么实现的以及怎么预防？","like_count":0,"discussions":[{"author":{"id":1012580,"avatar":"","nickname":"captain","note":"","ucode":"471A8412D923EB","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":479063,"discussion_content":"意思是google发现你的网站内含有恶意信息？这种情况，如果不是存储型XSS的话，其实更普遍的是网页劫持。即黑客监听了后端的网络流量，对返回的网页源码，在网络层直接进行了篡改。通过https可以解决。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1577230302,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1154580,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/8Zs7gEMVq90uejXZMvA409gcln7d9TJgvOW5GQPSfSN0eOTgibhmyKvWltOrtRxdODXGl9zg1eUbAAfliaTicUKqQ/132","nickname":"朝伟","note":"","ucode":"C804ACEB176D5E","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":104702,"discussion_content":"不是劫持，是我通过Google查看网站收录发现的！","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1577447793,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":164426,"user_name":"qinsi","can_delete":false,"product_type":"c1","uid":1667175,"ip_address":"","ucode":"090D9C4068FF12","user_header":"https://static001.geekbang.org/account/avatar/00/19/70/67/0c1359c2.jpg","comment_is_top":false,"comment_ctime":1576986875,"is_pvip":true,"replies":[{"id":"62506","content":"这一讲只关注xss，sql注入是下一讲的内容哈～","user_name":"作者回复","user_name_real":"captain","uid":"1012580","ctime":1577027471,"ip_address":"","comment_id":164426,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1576986875","product_id":100041701,"comment_content":"不能只在输出时验证用户数据吧？比如攻击者提交了sql注入的数据，不去验证直接存数据库，然后就没有然后了","like_count":0,"discussions":[{"author":{"id":1012580,"avatar":"","nickname":"captain","note":"","ucode":"471A8412D923EB","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":478762,"discussion_content":"这一讲只关注xss，sql注入是下一讲的内容哈～","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1577027471,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":163942,"user_name":"makawoyi","can_delete":false,"product_type":"c1","uid":1310391,"ip_address":"","ucode":"702B172D90F210","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTITKv1C7HrokESrlFCVBp3wDTmr1iapBxLm3GMraGe7ww0CN6rInTLKu3bjTUoOsMibSujCb3yUSd6w/132","comment_is_top":false,"comment_ctime":1576832314,"is_pvip":false,"replies":[{"id":"62509","content":"是的，就是通过发微博的形式进行再次传播。","user_name":"作者回复","user_name_real":"captain","uid":"1012580","ctime":1577027947,"ip_address":"","comment_id":163942,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1576832314","product_id":100041701,"comment_content":"反射型XSS，老师我这里的疑问 最开始是如何进行传播的呢？由黑客本人编写一条URL诱使用户点击，之后获取到用户的Cookie后通过JavaScript脚本再自动发送一条微博进行传播吗<br><br>安全事件应当加强人员安全意识，之后时尽可能使用上述提出的安全防护方式进行防护","like_count":0,"discussions":[{"author":{"id":1012580,"avatar":"","nickname":"captain","note":"","ucode":"471A8412D923EB","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":478589,"discussion_content":"是的，就是通过发微博的形式进行再次传播。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1577027947,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]}]}