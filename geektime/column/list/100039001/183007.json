{"id":183007,"title":"24 | 实战一（下）：如何实现一个遵从设计原则的积分兑换系统？","content":"<p>上一节课中，我们讲了积分系统的需求分析和系统设计。今天，我们来讲它的代码实现。</p><p>上一节课中，我们把积分赚取和消费的渠道和规则的管理维护工作，划分到了上层系统中，所以，积分系统的功能变得非常简单。相应地，代码实现也比较简单。如果你有一定的项目开发经验，那实现这样一个系统，对你来说并不是件难事。</p><p>所以，我们今天讲解的重点，并不是教你如何来实现积分系统的每个功能、每个接口，更不是教你如何编写SQL语句来增删改查数据，而是给你展示一些更普适的开发思想。比如，为什么要分MVC三层来开发？为什么要针对每层定义不同的数据对象？最后，我还会总结这其中都蕴含哪些设计原则和思想，让你知其然知其所以然，做到真正地透彻理解。</p><p>话不多说，让我们正式开始今天的学习吧！</p><h2>业务开发包括哪些工作？</h2><p>实际上，我们平时做业务系统的设计与开发，无外乎有这样三方面的工作要做：接口设计、数据库设计和业务模型设计（也就是业务逻辑）。</p><p>数据库和接口的设计非常重要，一旦设计好并投入使用之后，这两部分都不能轻易改动。改动数据库表结构，需要涉及数据的迁移和适配；改动接口，需要推动接口的使用者作相应的代码修改。这两种情况，即便是微小的改动，执行起来都会非常麻烦。因此，我们在设计接口和数据库的时候，一定要多花点心思和时间，切不可过于随意。相反，业务逻辑代码侧重内部实现，不涉及被外部依赖的接口，也不包含持久化的数据，所以对改动的容忍性更大。</p><!-- [[[read_end]]] --><p><strong>针对积分系统，我们先来看，如何设计数据库。</strong></p><p>数据库的设计比较简单。实际上，我们只需要一张记录积分流水明细的表就可以了。表中记录积分的赚取和消费流水。用户积分的各种统计数据，比如总积分、总可用积分等，都可以通过这张表来计算得到。</p><p><img src=\"https://static001.geekbang.org/resource/image/e9/c4/e9562c46bcb8fc45634f0d870c4778c4.jpg?wh=1743*1173\" alt=\"\"></p><p><strong>接下来，我们再来看，如何设计积分系统的接口。</strong></p><p>接口设计要符合单一职责原则，粒度越小通用性就越好。但是，接口粒度太小也会带来一些问题。比如，一个功能的实现要调用多个小接口，一方面如果接口调用走网络（特别是公网），多次远程接口调用会影响性能；另一方面，本该在一个接口中完成的原子操作，现在分拆成多个小接口来完成，就可能会涉及分布式事务的数据一致性问题（一个接口执行成功了，但另一个接口执行失败了）。所以，为了兼顾易用性和性能，我们可以借鉴facade（外观）设计模式，在职责单一的细粒度接口之上，再封装一层粗粒度的接口给外部使用。</p><p>对于积分系统来说，我们需要设计如下这样几个接口。</p><p><img src=\"https://static001.geekbang.org/resource/image/7b/af/7b9008f6bc107add2b21d3dba901deaf.jpg?wh=2083*1033\" alt=\"\"></p><p><strong>最后，我们来看业务模型的设计。</strong></p><p>前面我们讲到，从代码实现角度来说，大部分业务系统的开发都可以分为Controller、Service、Repository三层。Controller层负责接口暴露，Repository层负责数据读写，Service层负责核心业务逻辑，也就是这里说的业务模型。</p><p>除此之外，前面我们还提到两种开发模式，基于贫血模型的传统开发模式和基于充血模型的DDD开发模式。前者是一种面向过程的编程风格，后者是一种面向对象的编程风格。不管是DDD还是OOP，高级开发模式的存在一般都是为了应对复杂系统，应对系统的复杂性。对于我们要开发的积分系统来说，因为业务相对比较简单，所以，选择简单的基于贫血模型的传统开发模式就足够了。</p><p>从开发的角度来说，我们可以把积分系统作为一个独立的项目，来独立开发，也可以跟其他业务代码（比如营销系统）放到同一个项目中进行开发。从运维的角度来说，我们可以将它跟其他业务一块部署，也可以作为一个微服务独立部署。具体选择哪种开发和部署方式，我们可以参考公司当前的技术架构来决定。</p><p>实际上，积分系统业务比较简单，代码量也不多，我更倾向于将它跟营销系统放到一个项目中开发部署。只要我们做好代码的模块化和解耦，让积分相关的业务代码跟其他业务代码之间边界清晰，没有太多耦合，后期如果需要将它拆分成独立的项目来开发部署，那也并不困难。</p><p>相信这样一个简单的业务功能的开发，对你来说并没有太大难度。所以，具体的代码实现我就不在专栏中给出了。感兴趣的话，你可以自己实现一下。接下来的内容，才是我们这一节的重点。</p><h2>为什么要分MVC三层开发？</h2><p>我们刚刚提到，大部分业务系统的开发都可以分为三层：\bContoller层、Service层、Repository层。对于这种分层方式，我相信大部分人都很认同，甚至成为了一种开发习惯，但你有没有想过，为什么我们要分层开发？很多业务都比较简单，一层代码搞定所有的数据读取、业务逻辑、接口暴露不好吗？你可以把它作为一道面试题，试着自己思考下，然后再看我下面的讲解。</p><p>对于这个问题，我总结了以下几点原因。</p><h3>1.分层能起到代码复用的作用</h3><p>同一个Repository可能会被多个Service来调用，同一个Service可能会被多个Controller调用。比如，UserService中的getUserById()接口封装了通过ID获取用户信息的逻辑，这部分逻辑可能会被UserController和AdminController等多个Controller使用。如果没有Service层，每个Controller都要重复实现这部分逻辑，显然会违反DRY原则。</p><h3>2.分层能起到隔离变化的作用</h3><p>分层体现了一种抽象和封装的设计思想。比如，Repository层封装了对数据库访问的操作，提供了抽象的数据访问接口。基于接口而非实现编程的设计思想，Service层使用Repository层提供的接口，并不关心其底层依赖的是哪种具体的数据库。当我们需要替换数据库的时候，比如从MySQL到Oracle，从Oracle到Redis，只需要改动Repository层的代码，Service层的代码完全不需要修改。</p><p>除此之外，Controller、Service、Repository三层代码的稳定程度不同、引起变化的原因不同，所以分成三层来组织代码，能有效地隔离变化。比如，Repository层基于数据库表，而数据库表改动的可能性很小，所以Repository层的代码最稳定，而Controller层提供适配给外部使用的接口，代码经常会变动。分层之后，Controller层中代码的频繁改动并不会影响到稳定的Repository层。</p><h3>3.分层能起到隔离关注点的作用</h3><p>Repository层只关注数据的读写。Service层只关注业务逻辑，不关注数据的来源。Controller层只关注与外界打交道，数据校验、封装、格式转换，并不关心业务逻辑。三层之间的关注点不同，分层之后，职责分明，更加符合单一职责原则，代码的内聚性更好。</p><h3>4.分层能提高代码的可测试性</h3><p>后面讲单元测试的时候，我们会讲到，单元测试不依赖不可控的外部组件，比如数据库。分层之后，Repsitory层的代码通过依赖注入的方式供Service层使用，当要测试包含核心业务逻辑的Service层代码的时候，我们可以用mock的数据源替代真实的数据库，注入到Service层代码中。代码的可测试性和单元测试我们后面会讲到，这里你稍微了解即可。</p><h3>5.分层能应对系统的复杂性</h3><p>所有的代码都放到一个类中，那这个类的代码就会因为需求的迭代而无限膨胀。我们知道，当一个类或一个函数的代码过多之后，可读性、可维护性就会变差。那我们就要想办法拆分。拆分有垂直和水平两个方向。水平方向基于业务来做拆分，就是模块化；垂直方向基于流程来做拆分，就是这里说的分层。</p><p>还是那句话，不管是分层、模块化，还是OOP、DDD，以及各种设计模式、原则和思想，都是为了应对复杂系统，应对系统的复杂性。对于简单系统来说，其实是发挥不了作用的，就是俗话说的“杀鸡焉用牛刀”。</p><h2>BO、VO、Entity存在的意义是什么？</h2><p>在前面的章节中，我们提到，针对Controller、Service、Repository三层，每层都会定义相应的数据对象，它们分别是VO（View Object）、BO（Business Object）、Entity，例如UserVo、UserBo、UserEntity。在实际的开发中，VO、BO、Entity可能存在大量的重复字段，甚至三者包含的字段完全一样。在开发的过程中，我们经常需要重复定义三个几乎一样的类，显然是一种重复劳动。</p><p><strong>相对于每层定义各自的数据对象来说，是不是定义一个公共的数据对象更好些呢？</strong></p><p>实际上，我更加推荐每层都定义各自的数据对象这种设计思路，主要有以下3个方面的原因。</p><ul>\n<li>VO、BO、Entity并非完全一样。比如，我们可以在UserEntity、UserBo中定义Password字段，但显然不能在UserVo中定义Password字段，否则就会将用户的密码暴露出去。</li>\n<li>VO、BO、Entity三个类虽然代码重复，但功能语义不重复，从职责上讲是不一样的。所以，也并不能算违背DRY原则。在前面讲到DRY原则的时候，针对这种情况，如果合并为同一个类，那也会存在后期因为需求的变化而需要再拆分的问题。</li>\n<li>为了尽量减少每层之间的耦合，把职责边界划分明确，每层都会维护自己的数据对象，层与层之间通过接口交互。数据从下一层传递到上一层的时候，将下一层的数据对象转化成上一层的数据对象，再继续处理。虽然这样的设计稍微有些繁琐，每层都需要定义各自的数据对象，需要做数据对象之间的转化，但是分层清晰。对于非常大的项目来说，结构清晰是第一位的！</li>\n</ul><p><strong>既然VO、BO、Entity不能合并，那如何解决代码重复的问题呢？</strong></p><p>从设计的角度来说，VO、BO、Entity的设计思路并不违反DRY原则，为了分层清晰、减少耦合，多维护几个类的成本也并不是不能接受的。但是，如果你真的有代码洁癖，对于代码重复的问题，我们也有一些办法来解决。</p><p>我们前面讲到，继承可以解决代码重复问题。我们可以将公共的字段定义在父类中，让VO、BO、Entity都继承这个父类，各自只定义特有的字段。因为这里的继承层次很浅，也不复杂，所以使用继承并不会影响代码的可读性和可维护性。后期如果因为业务的需要，有些字段需要从父类移动到子类，或者从子类提取到父类，代码改起来也并不复杂。</p><p>前面在讲“多用组合，少用继承”设计思想的时候，我们提到，组合也可以解决代码重复的问题，所以，这里我们还可以将公共的字段抽取到公共的类中，VO、BO、Entity通过组合关系来复用这个类的代码。</p><p><strong>代码重复问题解决了，那不同分层之间的数据对象该如何互相转化呢？</strong></p><p>当下一层的数据通过接口调用传递到上一层之后，我们需要将它转化成上一层对应的数据对象类型。比如，Service层从Repository层获取的Entity之后，将其转化成BO，再继续业务逻辑的处理。所以，整个开发的过程会涉及“Entity到BO”和“BO到VO”这两种转化。</p><p>最简单的转化方式是手动复制。自己写代码在两个对象之间，一个字段一个字段的赋值。但这样的做法显然是没有技术含量的低级劳动。Java中提供了多种数据对象转化工具，比如BeanUtils、Dozer等，可以大大简化繁琐的对象转化工作。如果你是用其他编程语言来做开发，也可以借鉴Java这些工具类的设计思路，自己在项目中实现对象转化工具类。</p><p><strong>VO、BO、Entity都是基于贫血模型的，而且为了兼容框架或开发库（比如MyBatis、Dozer、BeanUtils），我们还需要定义每个字段的set方法。这些都违背OOP的封装特性，会导致数据被随意修改。那到底该怎么办好呢？</strong></p><p>前面我们也提到过，Entity和VO的生命周期是有限的，都仅限在本层范围内。而对应的Repository层和Controller层也都不包含太多业务逻辑，所以也不会有太多代码随意修改数据，即便设计成贫血、定义每个字段的set方法，相对来说也是安全的。</p><p>不过，Service层包含比较多的业务逻辑代码，所以BO就存在被任意修改的风险了。但是，设计的问题本身就没有最优解，只有权衡。为了使用方便，我们只能做一些妥协，放弃BO的封装特性，由程序员自己来负责这些数据对象的不被错误使用。</p><h2>总结用到的设计原则和思想</h2><p>前面我们提到，很多人做业务开发，总感觉就是CRUD，翻译代码，根本用不到设计原则、思想和模式。实际上，只是你没有发现而已。现在，我就给你罗列一下，今天讲解的内容中，都用到了哪些设计原则、思想和模式。</p><p><img src=\"https://static001.geekbang.org/resource/image/33/61/3332071c82182e72518143d05b8eaa61.jpg?wh=1913*1703\" alt=\"\"></p><p>实际上，这两节课中还蕴含了很多其他的设计思想、原则、模式，你可以像我一样试着去总结一下，放在留言区说一说。</p><h2>重点回顾</h2><p>今天的内容到此就讲完了。我们一块来总结回顾一下，你需要掌握的重点内容。</p><p><strong>1.为什么要分MVC三层开发？</strong></p><p>对于这个问题，我总结了以下5点原因。</p><ul>\n<li>分层能起到代码复用的作用</li>\n<li>分层能起到隔离变化的作用</li>\n<li>分层能起到隔离关注点的作用</li>\n<li>分层能提高代码的可测试性</li>\n<li>分层能应对系统的复杂性</li>\n</ul><p><strong>2.BO、VO、Entity存在的意义是什么？</strong></p><p>从设计的角度来说，VO、BO、Entity的设计思路并不违反DRY原则，为了分层清晰、减少耦合，多维护几个类的成本也并不是不能接受的。但是，如果你真的有代码洁癖，对于代码重复的问题，我们可以通过继承或者组合来解决。</p><p>如何进行数据对象之间的转化？最简单的方式就是手动复制。当然，你也可以使用Java中提供了数据对象转化工具，比如BeanUtils、Dozer等，可以大大简化繁琐的对象转化工作。</p><p>尽管VO、BO、Entity的设计违背OOP的封装特性，有被随意修改的风险。但Entity和VO的生命周期是有限的，都仅限在本层范围内，相对来说是安全的。Service层包含比较多的业务逻辑代码，所以BO就存在被任意修改的风险了。为了使用方便，我们只能做一些妥协，放弃BO的封装特性，由程序员自己来负责这些数据对象的不被错误使用。</p><p><strong>3.总结用到的设计原则和思想</strong></p><p>从表面上看，做业务开发可能并不是特别有技术挑战，但是实际上，\b如果你要做到知其然知其所以然，做到透彻理解、真的懂，并不是件容易的事情。深挖一下，你会发现这其中还是蕴含了很多设计原则、思想和模式的。</p><h2>课堂讨论</h2><ol>\n<li>上节课中，我们讲到，下层系统不要包含太多上层系统的业务信息。但在今天的数据库设计中，积分明细表中credit_transaction中包含event_id，channel_id这些跟上层业务相关的字段，那这样的设计是否合理呢？</li>\n<li>我们经常说，修改和查询不要耦合在一个接口中，要分成两个接口来做。赚取积分和消费积分接口返回积分明细ID，这样的接口设计是否违背单一职责原则呢？是不是返回void或者boolean类型更合理呢？</li>\n</ol><p>欢迎在留言区写下你的答案，和同学一起交流和分享。如果有收获，也欢迎你把这篇文章分享给你的朋友。</p>","comments":[{"had_liked":false,"id":166121,"user_name":"桂城老托尼","can_delete":false,"product_type":"c1","uid":1306032,"ip_address":"","ucode":"139E4B8EE88B79","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTJcxSpNMqwqyicMvdOSr9ic0p1ABiauHnv7g7YQVSJuoHPoQbYDu3YzdpgmSAk2KricUBQ5yibWBWIq75w/132","comment_is_top":false,"comment_ctime":1577407256,"is_pvip":false,"discussion_count":13,"race_medal":0,"score":"834801062680","product_id":100039001,"comment_content":"感谢争哥分享。<br>个人觉得积分系统只有流水记录不太够，设想下消费积分场景，要完成扣积分的动作，没有积分余额表容易造成多扣，特别是针对羊毛党。当然上层系统，比如活动系统也可以做好幂等。<br>尝试回答下课后讨论<br>1. 保留上层应用id和channel完全符合设计原理，冗余业务信息方便日后做数据统计，沉淀数据资产反推营销策略迭代; 一次消费或赚取积分行为可能存在多次调用情况，方便幂等，不至于多次记账;方便业务系统查询某次赚取或消费的积分明细;暂时想到这么多。<br>2. 尽量不要返回void或boolean，有些业务需要反向关键积分流水id做单笔流水查询。<br>其实这两个讨论都类似于现实生活，去便利店买东西会给你小票，支付宝扫码付款会返回交易流水。都是为了方便真是场景解决“纠纷”(查询)用的。","like_count":195,"discussions":[{"author":{"id":1396951,"avatar":"https://static001.geekbang.org/account/avatar/00/15/50/d7/f82ed283.jpg","nickname":"辣么大","note":"","ucode":"AB308B6DCA0108","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":104224,"discussion_content":"针对一个问题：记录交易流水或者记录账户积分余额，我觉得是账户模型的两种设计方式：第一种类似Bitcoin的设计UXTO 模型 （Unspent Transaction output），第二种是类似我们银行账户，区块链里面ETH采用了这种设计方式。实际中都有普遍的应用，很难说哪种更好。","likes_number":15,"is_delete":false,"is_hidden":false,"ctime":1577417224,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":4,"child_discussions":[{"author":{"id":1334409,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTIjRETqRjvLESLDZkNTjIiaSibtNYBaS1o8WMUicOFn3ycF3Mgh6LRJibqSBjVBjiaO2ibW0gHkafATb21A/132","nickname":"lmdcx","note":"","ucode":"F2CDD0091ADFD7","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1396951,"avatar":"https://static001.geekbang.org/account/avatar/00/15/50/d7/f82ed283.jpg","nickname":"辣么大","note":"","ucode":"AB308B6DCA0108","race_medal":0,"user_type":1,"is_pvip":true},"discussion":{"id":106364,"discussion_content":"你为啥总是知道那么多，为什么？\n你不怕被枪毙吗？O(∩_∩)O~","likes_number":3,"is_delete":false,"is_hidden":false,"ctime":1577533754,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":104224,"ip_address":""},"score":106364,"extra":""},{"author":{"id":1396951,"avatar":"https://static001.geekbang.org/account/avatar/00/15/50/d7/f82ed283.jpg","nickname":"辣么大","note":"","ucode":"AB308B6DCA0108","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":1334409,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTIjRETqRjvLESLDZkNTjIiaSibtNYBaS1o8WMUicOFn3ycF3Mgh6LRJibqSBjVBjiaO2ibW0gHkafATb21A/132","nickname":"lmdcx","note":"","ucode":"F2CDD0091ADFD7","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":106440,"discussion_content":"biu~ biu~","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1577536868,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":106364,"ip_address":""},"score":106440,"extra":""},{"author":{"id":1831324,"avatar":"https://static001.geekbang.org/account/avatar/00/1b/f1/9c/cd12361d.jpg","nickname":"黑客时间","note":"","ucode":"7E22D76EECAC4D","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1396951,"avatar":"https://static001.geekbang.org/account/avatar/00/15/50/d7/f82ed283.jpg","nickname":"辣么大","note":"","ucode":"AB308B6DCA0108","race_medal":0,"user_type":1,"is_pvip":true},"discussion":{"id":215160,"discussion_content":"那在这个积分系统中哪个更好呢","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1585294739,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":104224,"ip_address":""},"score":215160,"extra":""}]},{"author":{"id":1507189,"avatar":"https://static001.geekbang.org/account/avatar/00/16/ff/75/9c1b2ece.jpg","nickname":"wind","note":"","ucode":"5EC77AEB18130E","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":106004,"discussion_content":"说得比较全了，插个楼：问题1，除了楼主列的几点，event_id，channel_id存在每一条流水中且不是多对多的，所以保存在同个表就OK。问题2：就算JDK提供的很多方法也这样用，所以肯定是合理的。修改和查询往往会同时使用，看成单一职责也OK的，不然也不好查询。另外表设计中是少了用户与积分的关联吗？","likes_number":4,"is_delete":false,"is_hidden":false,"ctime":1577505133,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1015754,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/7f/ca/ea85bfdd.jpg","nickname":"helloworld","note":"","ucode":"00DF2FEC58D2E6","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":587585,"discussion_content":"这个评论的答案简直稳的不要不要的","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1663157414,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":"北京"},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1392431,"avatar":"https://static001.geekbang.org/account/avatar/00/15/3f/2f/8513c4d3.jpg","nickname":"a(๑≖ิټ≖ิ)✌","note":"","ucode":"AEF9B5CA1605DF","race_medal":1,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":344512,"discussion_content":"沉淀数据资产反推营销策略迭代 是什么意思","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1611482265,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":1,"child_discussions":[{"author":{"id":1564544,"avatar":"https://static001.geekbang.org/account/avatar/00/17/df/80/5069bb27.jpg","nickname":"杨通","note":"","ucode":"C037B82EE04DBC","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1392431,"avatar":"https://static001.geekbang.org/account/avatar/00/15/3f/2f/8513c4d3.jpg","nickname":"a(๑≖ิټ≖ิ)✌","note":"","ucode":"AEF9B5CA1605DF","race_medal":1,"user_type":1,"is_pvip":false},"discussion":{"id":350691,"discussion_content":"有了数据就可以分析啊。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1613979828,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":344512,"ip_address":""},"score":350691,"extra":""}]},{"author":{"id":1905357,"avatar":"https://static001.geekbang.org/account/avatar/00/1d/12/cd/55e25527.jpg","nickname":"咕咕噜噜","note":"","ucode":"E9045BF11FAB7C","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":203120,"discussion_content":"我觉得应该满足目前业务的需求，追求最简单的设计。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1584000956,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":1,"child_discussions":[{"author":{"id":1306032,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTJcxSpNMqwqyicMvdOSr9ic0p1ABiauHnv7g7YQVSJuoHPoQbYDu3YzdpgmSAk2KricUBQ5yibWBWIq75w/132","nickname":"桂城老托尼","note":"","ucode":"139E4B8EE88B79","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1905357,"avatar":"https://static001.geekbang.org/account/avatar/00/1d/12/cd/55e25527.jpg","nickname":"咕咕噜噜","note":"","ucode":"E9045BF11FAB7C","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":203680,"discussion_content":"我个人认为技术同学眼光要领先业务一代半","likes_number":7,"is_delete":false,"is_hidden":false,"ctime":1584064880,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":203120,"ip_address":""},"score":203680,"extra":""}]},{"author":{"id":1715988,"avatar":"https://static001.geekbang.org/account/avatar/00/1a/2f/14/840d0925.jpg","nickname":"Varus","note":"","ucode":"B9CB88C248BD93","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":127176,"discussion_content":"第二个好像用到前面一个设计里面地数据一致性，因此得返回数据","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1578570193,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":1,"child_discussions":[{"author":{"id":1227840,"avatar":"https://static001.geekbang.org/account/avatar/00/12/bc/40/2279cfb5.jpg","nickname":"大力水手Jerry","note":"","ucode":"E4A6C71E275DB5","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1715988,"avatar":"https://static001.geekbang.org/account/avatar/00/1a/2f/14/840d0925.jpg","nickname":"Varus","note":"","ucode":"B9CB88C248BD93","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":311329,"discussion_content":"我的第一感觉也是如此，但实际不是，对共享数据的并发场景才是你说的情况，这里只是单个用户，并不存在并发修改共享资源的情况。关键还是场景就是如此。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1602310043,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":127176,"ip_address":""},"score":311329,"extra":""}]}]},{"had_liked":false,"id":166111,"user_name":"李朝辉","can_delete":false,"product_type":"c1","uid":1152951,"ip_address":"","ucode":"8E4A4469A77A88","user_header":"https://static001.geekbang.org/account/avatar/00/11/97/b7/d5a83264.jpg","comment_is_top":false,"comment_ctime":1577406263,"is_pvip":false,"replies":[{"id":"65156","content":"说的挺对的","user_name":"作者回复","comment_id":166111,"uid":"1190123","ip_address":"","utype":1,"ctime":1577951952,"user_name_real":"王争"}],"discussion_count":2,"race_medal":0,"score":"310815051575","product_id":100039001,"comment_content":"课堂讨论1:<br>业务驱动的系统还是应该从业务的角度出发去做设计，这两个字段在积分明细查询中是不可或缺的，所以我认为是合理的。既然是不可或缺的，如果不记录在这张表中，就要记录在其他表中，或者查询不便，或者破坏内聚。<br>2.根据个人经验，insert操作的都是返回记录id，原因的个人观点是为调用方提供便利。还请老师解答","like_count":73,"discussions":[{"author":{"id":1190123,"avatar":"https://static001.geekbang.org/account/avatar/00/12/28/eb/af064421.jpg","nickname":"王争","note":"","ucode":"2B611BE0E0EDD4","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":479400,"discussion_content":"说的挺对的","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1577951952,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":1,"child_discussions":[{"author":{"id":1162242,"avatar":"https://static001.geekbang.org/account/avatar/00/11/bc/02/3f7a7197.jpg","nickname":"跨江大桥","note":"","ucode":"4629B23F1BB9F0","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":1190123,"avatar":"https://static001.geekbang.org/account/avatar/00/12/28/eb/af064421.jpg","nickname":"王争","note":"","ucode":"2B611BE0E0EDD4","race_medal":0,"user_type":2,"is_pvip":false},"discussion":{"id":530426,"discussion_content":"真巧，同一天","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1637072124,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":479400,"ip_address":""},"score":530426,"extra":"{\"user_type\":1}"}]}]},{"had_liked":false,"id":166300,"user_name":"杨杰","can_delete":false,"product_type":"c1","uid":1131823,"ip_address":"","ucode":"74817EA9499843","user_header":"https://static001.geekbang.org/account/avatar/00/11/45/2f/b0b0dd74.jpg","comment_is_top":false,"comment_ctime":1577434573,"is_pvip":false,"replies":[{"id":"65158","content":"是的 主要是对象转json的格式问题","user_name":"作者回复","comment_id":166300,"uid":"1190123","ip_address":"","utype":1,"ctime":1577952280,"user_name_real":"王争"}],"discussion_count":4,"race_medal":0,"score":"160491224525","product_id":100039001,"comment_content":"个人感觉：VO、BO、Entity 通过组合关系来复用这个类的代码不是特别好，尤其是VO。因为用组合的方式会增加返回数据的层次，这对前端来说是不是不不太友好？","like_count":37,"discussions":[{"author":{"id":1190123,"avatar":"https://static001.geekbang.org/account/avatar/00/12/28/eb/af064421.jpg","nickname":"王争","note":"","ucode":"2B611BE0E0EDD4","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":479479,"discussion_content":"是的 主要是对象转json的格式问题","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1577952280,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1618328,"avatar":"https://static001.geekbang.org/account/avatar/00/18/b1/98/11b22d79.jpg","nickname":"絆","note":"","ucode":"52D965461314DB","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":531664,"discussion_content":"我喜欢在xxxVO,xxxBO,xxxTDO....这些对象上用一个xxxFactroy 来统一处理这些类型转换","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1637377500,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"user_type\":1}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1035243,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/cb/eb/2a51ba53.jpg","nickname":"Sunny Snow","note":"","ucode":"A7C5D3327FD3BD","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":293466,"discussion_content":"使用inline的组合方式这个问题不就解决了","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1595552810,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":1,"child_discussions":[{"author":{"id":1622696,"avatar":"https://static001.geekbang.org/account/avatar/00/18/c2/a8/f3f8f5d2.jpg","nickname":"一格状语","note":"","ucode":"EBA9ED5F97416D","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1035243,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/cb/eb/2a51ba53.jpg","nickname":"Sunny Snow","note":"","ucode":"A7C5D3327FD3BD","race_medal":0,"user_type":1,"is_pvip":true},"discussion":{"id":413663,"discussion_content":"有资料我看看吗inline组合方式，java的","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1636536938,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":293466,"ip_address":""},"score":413663,"extra":""}]}]},{"had_liked":false,"id":166299,"user_name":"辣么大","can_delete":false,"product_type":"c1","uid":1396951,"ip_address":"","ucode":"AB308B6DCA0108","user_header":"https://static001.geekbang.org/account/avatar/00/15/50/d7/f82ed283.jpg","comment_is_top":false,"comment_ctime":1577434402,"is_pvip":true,"replies":[{"id":"63418","content":"应该吹毛求疵，我们fix去","user_name":"编辑回复","comment_id":166299,"uid":"1000473","ip_address":"","utype":2,"ctime":1577446023,"user_name_real":"郭蕾"}],"discussion_count":7,"race_medal":0,"score":"139016387874","product_id":100039001,"comment_content":"反馈一个文章朗读的小问题：音频3:00左右 facade设计模式 应该读做&#47;fə&#39;sɑ:d&#47; ，冯老师读的不是很准确。 ”吹毛求疵“，希望专栏做的更专业。","like_count":33,"discussions":[{"author":{"id":1000473,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/44/19/17fadc62.jpg","nickname":"郭蕾","note":"","ucode":"34F4C07D1C5FE8","race_medal":0,"user_type":8,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":479478,"discussion_content":"应该吹毛求疵，我们fix去","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1577446023,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":4}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1698258,"avatar":"https://wx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTIx7FdRzUuQf4Fopr7DOXEHZyCFfH4GQViaqo7bymf1qaANcOvuEhHyTNwOOUFW7psxEeSQ5k9uXWw/132","nickname":"阿顺","note":"","ucode":"36F2AD6F980B11","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":128447,"discussion_content":"我觉得这个不是吹毛求疵， 而专栏应该去做的更好。技术人如果听到/fə&#39;sɑ:d/应该是很敏感的。当时如果我听到的是/fə&#39;sɑ:d/，就能马上联想到是门面（外观）模式，然后后面的内容会很好理解；听到/fə&#39;kei:d/时脑子里会产生疑惑，直至看到文稿才弄明白","likes_number":2,"is_delete":false,"is_hidden":false,"ctime":1578640746,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1026832,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/ab/10/b812ff3e.jpg","nickname":"Hesher","note":"","ucode":"99AB8B1704CB7E","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":386286,"discussion_content":"20210-07-29，这个读音问题还没有被修正。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1627513471,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1476490,"avatar":"https://static001.geekbang.org/account/avatar/00/16/87/8a/07ab933c.jpg","nickname":"璀璨星空","note":"","ucode":"CE6324C4261A52","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":376561,"discussion_content":"既然专栏都这么严谨，我们用户也需要严谨的态度去学习","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1622192608,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1922242,"avatar":"https://static001.geekbang.org/account/avatar/00/1d/54/c2/17512f7a.jpg","nickname":"banxiaobu","note":"","ucode":"0FC00E5E90ACB8","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":236365,"discussion_content":"我还以为我一直读错了呢，还特地Google了一下","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1587088623,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1134288,"avatar":"https://static001.geekbang.org/account/avatar/00/11/4e/d0/d8a5f720.jpg","nickname":"Ken张云忠","note":"","ucode":"D0BAC9FC17DE2B","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":109365,"discussion_content":"音频有读错概念内容的","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1577687993,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1334409,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTIjRETqRjvLESLDZkNTjIiaSibtNYBaS1o8WMUicOFn3ycF3Mgh6LRJibqSBjVBjiaO2ibW0gHkafATb21A/132","nickname":"lmdcx","note":"","ucode":"F2CDD0091ADFD7","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":106473,"discussion_content":"小编真是太难了...","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1577537697,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":166248,"user_name":"Jxin","can_delete":false,"product_type":"c1","uid":1251111,"ip_address":"","ucode":"4C03928388C413","user_header":"https://static001.geekbang.org/account/avatar/00/13/17/27/ec30d30a.jpg","comment_is_top":false,"comment_ctime":1577423548,"is_pvip":false,"discussion_count":6,"race_medal":0,"score":"91771736764","product_id":100039001,"comment_content":"1.不符合一对上下游系统的设计要求，但适合当下业务场景的需求。  下游积分核心系统设计上不该持有事件和渠道字段，因为它不该去关心上游业务，事件或渠道与对应积分明细的关联应该由上游系统来维护，或则在上游系统和积分系统之间再加一层积分系统的业务层，用于维护这层关系（关于易复用性的中台思想）。当下的业务场景，积分的管理系统是有必要维护一份  事件渠道的值对象的。因为带有这个值对象，积分系统管理员才能不需要再多个系统中寻找积分增减关系，进而可以独立满足管理积分这件事的整个业务域。（事件和渠道只能作为值对象冗余在积分系统）。<br><br>2.不符合单一职责的限制，但满足当前业务场景的诉求。该接口做了增减积分和返回积分id两件事，且语义上并没有返回积分id的相关字眼，所以方法名定义也不明确。但是上游系统在变更积分后，需要获取积分id以作为上游系统变更事件与积分记录的关联key。而这个key只有在当前变更操作获得，所以就只能写这种语义不明且违反单一职责的方法。（让我来设计，我会把积分id的生成作为积分系统的一个外放接口，上游业务调用该接口获取id，记录关联关系，然后走mq推积分系统实现最终扣减。这样就可以规避上述这种无奈的场景）。","like_count":22,"discussions":[{"author":{"id":1246707,"avatar":"https://static001.geekbang.org/account/avatar/00/13/05/f3/5488276f.jpg","nickname":"心雨鑫晴","note":"","ucode":"37A42C19B98F1D","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":311185,"discussion_content":"第二种方式感觉很不错","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1602246437,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1255918,"avatar":"https://static001.geekbang.org/account/avatar/00/13/29/ee/fba11edf.jpg","nickname":"        ","note":"","ucode":"21028A49D81B06","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":111111,"discussion_content":"明白了 谢谢","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1577781467,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1255918,"avatar":"https://static001.geekbang.org/account/avatar/00/13/29/ee/fba11edf.jpg","nickname":"        ","note":"","ucode":"21028A49D81B06","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":110860,"discussion_content":"赞！但是第二点你的设计可以说的更清晰一点吗，不是很能明白 这个生成id到后面推mq其中的逻辑，谢谢","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1577761270,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":3,"child_discussions":[{"author":{"id":1251111,"avatar":"https://static001.geekbang.org/account/avatar/00/13/17/27/ec30d30a.jpg","nickname":"Jxin","note":"","ucode":"4C03928388C413","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1255918,"avatar":"https://static001.geekbang.org/account/avatar/00/13/29/ee/fba11edf.jpg","nickname":"        ","note":"","ucode":"21028A49D81B06","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":110939,"discussion_content":"上游系统只需要拿到积分id，记录关联关系，并将积分id和来源 类型以及积分增减数量这些字段以消息的形式推往mq，即认为积分操作成功。积分系统消费mq消息，mq会失败重试，保证最终一致。积分id是唯一键可以去重保证消费幂等。这个是常用套路，比较简单的了。（不要用数据库唯一键异常做幂等，异常堆栈比较耗性能的。可以加redis或插入前线查询，以做重复消费的过滤）","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1577767094,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":110860,"ip_address":""},"score":110939,"extra":""},{"author":{"id":1227840,"avatar":"https://static001.geekbang.org/account/avatar/00/12/bc/40/2279cfb5.jpg","nickname":"大力水手Jerry","note":"","ucode":"E4A6C71E275DB5","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1251111,"avatar":"https://static001.geekbang.org/account/avatar/00/13/17/27/ec30d30a.jpg","nickname":"Jxin","note":"","ucode":"4C03928388C413","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":311331,"discussion_content":"上下游在这里用同步策略比较好，采用异步操作会显著增加实现的复杂度：比如上游要消费，先拿到积分id，然后推送消息到mq，积分消费mq后发现积分不足，则要通知上游（也通过mq？）。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1602310421,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":110939,"ip_address":""},"score":311331,"extra":""},{"author":{"id":1251111,"avatar":"https://static001.geekbang.org/account/avatar/00/13/17/27/ec30d30a.jpg","nickname":"Jxin","note":"","ucode":"4C03928388C413","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1227840,"avatar":"https://static001.geekbang.org/account/avatar/00/12/bc/40/2279cfb5.jpg","nickname":"大力水手Jerry","note":"","ucode":"E4A6C71E275DB5","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":311362,"discussion_content":"如果上有需要等待下有操作成功的场景。就不能这么玩。这么玩是建立在下游操作最终必定成功的前提条件下。有依赖的该用tcc或则其他分布式事务方案，就用。","likes_number":2,"is_delete":false,"is_hidden":false,"ctime":1602316739,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":311331,"ip_address":""},"score":311362,"extra":""}]}]},{"had_liked":false,"id":167347,"user_name":"斐波那契","can_delete":false,"product_type":"c1","uid":1464006,"ip_address":"","ucode":"85E2EBC01392B1","user_header":"https://static001.geekbang.org/account/avatar/00/16/56/c6/0b449bc6.jpg","comment_is_top":false,"comment_ctime":1577772884,"is_pvip":false,"replies":[{"id":"65133","content":"对于大部分业务系统来说 数据库是最耗时的 对象转化那点性能损失可以忽略","user_name":"作者回复","comment_id":167347,"uid":"1190123","ip_address":"","utype":1,"ctime":1577946130,"user_name_real":"王争"}],"discussion_count":12,"race_medal":0,"score":"83182151508","product_id":100039001,"comment_content":"老师 beanutils会不会性能不好 毕竟大量用到了反射 有没有代码不那么繁琐性能也比较好的方法","like_count":20,"discussions":[{"author":{"id":1190123,"avatar":"https://static001.geekbang.org/account/avatar/00/12/28/eb/af064421.jpg","nickname":"王争","note":"","ucode":"2B611BE0E0EDD4","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":479833,"discussion_content":"对于大部分业务系统来说 数据库是最耗时的 对象转化那点性能损失可以忽略","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1577946130,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1319759,"avatar":"https://static001.geekbang.org/account/avatar/00/14/23/4f/3ce24bed.jpg","nickname":"朱延云","note":"","ucode":"08E6EE2AB82DE9","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":114330,"discussion_content":"mapstruct.Mapper 可以了解下,性能方面应该比beanutils好很多","likes_number":7,"is_delete":false,"is_hidden":false,"ctime":1577968667,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":3,"child_discussions":[{"author":{"id":1464006,"avatar":"https://static001.geekbang.org/account/avatar/00/16/56/c6/0b449bc6.jpg","nickname":"斐波那契","note":"","ucode":"85E2EBC01392B1","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1319759,"avatar":"https://static001.geekbang.org/account/avatar/00/14/23/4f/3ce24bed.jpg","nickname":"朱延云","note":"","ucode":"08E6EE2AB82DE9","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":115294,"discussion_content":"好的 谢谢","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1578009764,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":114330,"ip_address":""},"score":115294,"extra":""},{"author":{"id":1104818,"avatar":"https://static001.geekbang.org/account/avatar/00/10/db/b2/29b4f22b.jpg","nickname":"JasonZ","note":"","ucode":"992193AE44C39C","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1319759,"avatar":"https://static001.geekbang.org/account/avatar/00/14/23/4f/3ce24bed.jpg","nickname":"朱延云","note":"","ucode":"08E6EE2AB82DE9","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":295506,"discussion_content":"推荐","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1596210611,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":114330,"ip_address":""},"score":295506,"extra":""},{"author":{"id":1266987,"avatar":"https://static001.geekbang.org/account/avatar/00/13/55/2b/b7927cc4.jpg","nickname":"超超超超超帅耶🌴","note":"","ucode":"931E23DC0ACB04","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1319759,"avatar":"https://static001.geekbang.org/account/avatar/00/14/23/4f/3ce24bed.jpg","nickname":"朱延云","note":"","ucode":"08E6EE2AB82DE9","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":351836,"discussion_content":"我就是用的这个","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1614485066,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":114330,"ip_address":""},"score":351836,"extra":""}]},{"author":{"id":1316926,"avatar":"https://static001.geekbang.org/account/avatar/00/14/18/3e/f8632713.jpg","nickname":"EveryDayIsNew","note":"","ucode":"776B81EF6830FA","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":391326,"discussion_content":"这个字段有差异或者类型不同的时候，转换会有问题，会带来复杂性","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1630400982,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1261052,"avatar":"https://static001.geekbang.org/account/avatar/00/13/3d/fc/f81d7847.jpg","nickname":"BATMAN","note":"","ucode":"414137A1074E62","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":352709,"discussion_content":"直接 get set性能最高吧\n","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1614825280,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1135528,"avatar":"https://static001.geekbang.org/account/avatar/00/11/53/a8/abc96f70.jpg","nickname":"return","note":"","ucode":"42B8A3380DF04B","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":342737,"discussion_content":"“对于大部分业务系统来说 数据库是最耗时的 对象转化那点性能损失可以忽略”\n\n","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1610801776,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":2041049,"avatar":"","nickname":"肆方海木","note":"","ucode":"5808923F83890B","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":293268,"discussion_content":"Dozer性能倒数第一","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1595495796,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1068819,"avatar":"https://static001.geekbang.org/account/avatar/00/10/4f/13/5197f8d2.jpg","nickname":"永旭","note":"","ucode":"C9C74BE32C8F46","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":213826,"discussion_content":"Apache的beanutils不建议使用, 但spring的beanutils性能不错","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1585125657,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":2,"child_discussions":[{"author":{"id":1464006,"avatar":"https://static001.geekbang.org/account/avatar/00/16/56/c6/0b449bc6.jpg","nickname":"斐波那契","note":"","ucode":"85E2EBC01392B1","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1068819,"avatar":"https://static001.geekbang.org/account/avatar/00/10/4f/13/5197f8d2.jpg","nickname":"永旭","note":"","ucode":"C9C74BE32C8F46","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":213916,"discussion_content":"这两个有什么区别！","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1585134711,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":213826,"ip_address":""},"score":213916,"extra":""},{"author":{"id":2034632,"avatar":"https://static001.geekbang.org/account/avatar/00/1f/0b/c8/15f055d3.jpg","nickname":"图灵机","note":"","ucode":"EB02DB653AD591","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":1464006,"avatar":"https://static001.geekbang.org/account/avatar/00/16/56/c6/0b449bc6.jpg","nickname":"斐波那契","note":"","ucode":"85E2EBC01392B1","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":541658,"discussion_content":"差别很大，apache的beanutils简直是性能杀手，生产禁止使用的，spring业务使用是可以的","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1640506022,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":213916,"ip_address":""},"score":541658,"extra":""}]}]},{"had_liked":false,"id":166114,"user_name":"黄林晴","can_delete":false,"product_type":"c1","uid":1362631,"ip_address":"","ucode":"B15C38AECDA88F","user_header":"https://static001.geekbang.org/account/avatar/00/14/ca/c7/00e544c2.jpg","comment_is_top":false,"comment_ctime":1577406469,"is_pvip":false,"replies":[{"id":"64839","content":"期望太高了 也不可能篇篇让你高潮 ","user_name":"作者回复","comment_id":166114,"uid":"1190123","ip_address":"","utype":1,"ctime":1577666950,"user_name_real":"王争"}],"discussion_count":5,"race_medal":0,"score":"61706948613","product_id":100039001,"comment_content":"打卡✔<br>难道是我膨胀了，实战的内容没有理论看的起劲","like_count":15,"discussions":[{"author":{"id":1905357,"avatar":"https://static001.geekbang.org/account/avatar/00/1d/12/cd/55e25527.jpg","nickname":"咕咕噜噜","note":"","ucode":"E9045BF11FAB7C","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":215637,"discussion_content":"不会吧，实战才是硬道理，理论再多也很空","likes_number":2,"is_delete":false,"is_hidden":false,"ctime":1585364154,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1190123,"avatar":"https://static001.geekbang.org/account/avatar/00/12/28/eb/af064421.jpg","nickname":"王争","note":"","ucode":"2B611BE0E0EDD4","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":479403,"discussion_content":"期望太高了 也不可能篇篇让你高潮 ","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1577666950,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1838042,"avatar":"https://static001.geekbang.org/account/avatar/00/1c/0b/da/34be57e8.jpg","nickname":"趣稚鬼👻","note":"","ucode":"8AE6776DCA8541","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":207171,"discussion_content":"灵魂同感","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1584461304,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1306032,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTJcxSpNMqwqyicMvdOSr9ic0p1ABiauHnv7g7YQVSJuoHPoQbYDu3YzdpgmSAk2KricUBQ5yibWBWIq75w/132","nickname":"桂城老托尼","note":"","ucode":"139E4B8EE88B79","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":104694,"discussion_content":"我最近才订阅，王争老师是不是没有在评论区和大家交流的习惯？","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1577447447,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":1,"child_discussions":[{"author":{"id":1334409,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTIjRETqRjvLESLDZkNTjIiaSibtNYBaS1o8WMUicOFn3ycF3Mgh6LRJibqSBjVBjiaO2ibW0gHkafATb21A/132","nickname":"lmdcx","note":"","ucode":"F2CDD0091ADFD7","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1306032,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTJcxSpNMqwqyicMvdOSr9ic0p1ABiauHnv7g7YQVSJuoHPoQbYDu3YzdpgmSAk2KricUBQ5yibWBWIq75w/132","nickname":"桂城老托尼","note":"","ucode":"139E4B8EE88B79","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":106469,"discussion_content":"有过交流，但是最近好像确实交流不多，估计是年底冲业绩呢吧O(∩_∩)O~（乱猜）","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1577537632,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":104694,"ip_address":""},"score":106469,"extra":""}]}]},{"had_liked":false,"id":166122,"user_name":"辣么大","can_delete":false,"product_type":"c1","uid":1396951,"ip_address":"","ucode":"AB308B6DCA0108","user_header":"https://static001.geekbang.org/account/avatar/00/15/50/d7/f82ed283.jpg","comment_is_top":false,"comment_ctime":1577407292,"is_pvip":true,"discussion_count":24,"race_medal":0,"score":"40232112956","product_id":100039001,"comment_content":"针对争哥的第一个问题，从设计角度来说不应该记录渠道和事件。从业务来说，必须记录交易的渠道和事件。基于这种妥协可以设计一张表。那是否也可以设计两张表？<br><br>积分交易表和明细表：<br>1、credit_transaction<br>trans_id<br>user_id<br>channel_id<br>event_id<br>create_time<br>2、积分明细表credit_detail，只记录积分加减<br>trans_id<br>credit (积分加减)<br>create_time<br>expire_time","like_count":9,"discussions":[{"author":{"id":1237399,"avatar":"https://static001.geekbang.org/account/avatar/00/12/e1/97/fec494f2.jpg","nickname":"大大。","note":"","ucode":"A6716E46264AC4","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":104081,"discussion_content":"要查看总积分，岂不是要全表查，然后计算，数据量大岂不是也是性能问题","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1577411475,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":2,"child_discussions":[{"author":{"id":1396951,"avatar":"https://static001.geekbang.org/account/avatar/00/15/50/d7/f82ed283.jpg","nickname":"辣么大","note":"","ucode":"AB308B6DCA0108","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":1237399,"avatar":"https://static001.geekbang.org/account/avatar/00/12/e1/97/fec494f2.jpg","nickname":"大大。","note":"","ucode":"A6716E46264AC4","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":104206,"discussion_content":"是的，你的担心有道理。什么时候该写成一个表，什么时候该拆成几张表，可否给些指导意见？","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1577416633,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":104081,"ip_address":""},"score":104206,"extra":""},{"author":{"id":1744116,"avatar":"https://static001.geekbang.org/account/avatar/00/1a/9c/f4/61b4876f.jpg","nickname":"兴","note":"","ucode":"B33F131FEED77F","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1396951,"avatar":"https://static001.geekbang.org/account/avatar/00/15/50/d7/f82ed283.jpg","nickname":"辣么大","note":"","ucode":"AB308B6DCA0108","race_medal":0,"user_type":1,"is_pvip":true},"discussion":{"id":107374,"discussion_content":"我所理解的和你差不多，上层业务记录event id等，底层积分只记录自己的变化，性能一般用缓存和水平切分来优化。\n1. 缓存，积分变更是则淘汰或更新缓存\n2. 按用户ID hash水平分表（大数据情况下）","likes_number":2,"is_delete":false,"is_hidden":false,"ctime":1577559687,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":104206,"ip_address":""},"score":107374,"extra":""}]},{"author":{"id":1256001,"avatar":"https://static001.geekbang.org/account/avatar/00/13/2a/41/6116db1b.jpg","nickname":"yz","note":"","ucode":"D646E3BDD795A2","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":104007,"discussion_content":"每期都有你 哈哈哈","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1577409263,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":1,"child_discussions":[{"author":{"id":1396951,"avatar":"https://static001.geekbang.org/account/avatar/00/15/50/d7/f82ed283.jpg","nickname":"辣么大","note":"","ucode":"AB308B6DCA0108","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":1256001,"avatar":"https://static001.geekbang.org/account/avatar/00/13/2a/41/6116db1b.jpg","nickname":"yz","note":"","ucode":"D646E3BDD795A2","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":104195,"discussion_content":"I am everywhere~","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1577416193,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":104007,"ip_address":""},"score":104195,"extra":""}]},{"author":{"id":1311236,"avatar":"https://static001.geekbang.org/account/avatar/00/14/02/04/a678be45.jpg","nickname":"batiwant","note":"","ucode":"F873D815CBC801","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":591880,"discussion_content":"个人觉得在一个表更合理一点：因为获取积分和消费积分 必定是需要某些操作才能触发；也就是eventid和channelid，积分明细表和eventid channelid是同频的操作，所以放在一张表里也是比较合理的。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1666886228,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":"广东"},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1095260,"avatar":"https://static001.geekbang.org/account/avatar/00/10/b6/5c/4e08e507.jpg","nickname":"长生殿","note":"","ucode":"9C00B6D3C437F6","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":369975,"discussion_content":"你的想法是对的，积分获取和兑换都是一种交易行为，需要分开处理的（具体可以看看置顶的解释）。至于拆分带来的数据库查询问题，是可以通过技术手段（比如分库分表）来解决的。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1619236925,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1323102,"avatar":"https://static001.geekbang.org/account/avatar/00/14/30/5e/c42bc33f.jpg","nickname":"Younger Ku","note":"","ucode":"D157DC38BDB515","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":305187,"discussion_content":"channelId:赚取或消费渠道ID\n这个字段该怎么理解呢？能否举个例子？\n消费积分接口传参expiredTime有什么意义呢？\n想看用户剩余积分岂不是要根据userId分组后对credit进行sum了？会不会出现结果是负值？","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1599811379,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1443663,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTIang00R9vkklnkFCLhzRysNfocr0sLnCdoZwOT3UkulAPefk5BDvd0PfIeQSODSQg1DjKWUmJOaA/132","nickname":"陈迎春","note":"","ucode":"2870BA6D6E5B1E","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":108619,"discussion_content":"大佬好，最近这两节关于mvc，我听的云里雾里，不知道没有代码可以配合着理解","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1577632606,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":5,"child_discussions":[{"author":{"id":1396951,"avatar":"https://static001.geekbang.org/account/avatar/00/15/50/d7/f82ed283.jpg","nickname":"辣么大","note":"","ucode":"AB308B6DCA0108","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":1443663,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTIang00R9vkklnkFCLhzRysNfocr0sLnCdoZwOT3UkulAPefk5BDvd0PfIeQSODSQg1DjKWUmJOaA/132","nickname":"陈迎春","note":"","ucode":"2870BA6D6E5B1E","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":108979,"discussion_content":"最近有点忙，看过几天有没有时间自己写一下。有时间的话python写原型能简单点。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1577661906,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":108619,"ip_address":""},"score":108979,"extra":""},{"author":{"id":1347955,"avatar":"https://static001.geekbang.org/account/avatar/00/14/91/73/c50fb3e8.jpg","nickname":"Jawn Weak","note":"","ucode":"15E4117A0C775D","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1396951,"avatar":"https://static001.geekbang.org/account/avatar/00/15/50/d7/f82ed283.jpg","nickname":"辣么大","note":"","ucode":"AB308B6DCA0108","race_medal":0,"user_type":1,"is_pvip":true},"discussion":{"id":109421,"discussion_content":"蹲点你的github了 ","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1577693081,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":108979,"ip_address":""},"score":109421,"extra":""},{"author":{"id":1443663,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTIang00R9vkklnkFCLhzRysNfocr0sLnCdoZwOT3UkulAPefk5BDvd0PfIeQSODSQg1DjKWUmJOaA/132","nickname":"陈迎春","note":"","ucode":"2870BA6D6E5B1E","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1396951,"avatar":"https://static001.geekbang.org/account/avatar/00/15/50/d7/f82ed283.jpg","nickname":"辣么大","note":"","ucode":"AB308B6DCA0108","race_medal":0,"user_type":1,"is_pvip":true},"discussion":{"id":111327,"discussion_content":"谢谢大佬","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1577791388,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":108979,"ip_address":""},"score":111327,"extra":""}]},{"author":{"id":1238221,"avatar":"https://static001.geekbang.org/account/avatar/00/12/e4/cd/5363c8fa.jpg","nickname":"Rain","note":"","ucode":"6A270D922A3B9D","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":104052,"discussion_content":"如果用户查询积分明细呢？两个表的设计就需要关键查询了。一旦数据量大，这个查询将会直接导致性能瓶颈。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1577410489,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":9,"child_discussions":[{"author":{"id":1396951,"avatar":"https://static001.geekbang.org/account/avatar/00/15/50/d7/f82ed283.jpg","nickname":"辣么大","note":"","ucode":"AB308B6DCA0108","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":1238221,"avatar":"https://static001.geekbang.org/account/avatar/00/12/e4/cd/5363c8fa.jpg","nickname":"Rain","note":"","ucode":"6A270D922A3B9D","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":104204,"discussion_content":"谢谢讨论！\n水平不行，没见过市面呀😂，没做过大系统，性能问题实际基本很少遇到过。你说的对，关联查询能少用就少用。一个表查询也会可能出现数量性能问题吧？","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1577416507,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":104052,"ip_address":""},"score":104204,"extra":""},{"author":{"id":1238221,"avatar":"https://static001.geekbang.org/account/avatar/00/12/e4/cd/5363c8fa.jpg","nickname":"Rain","note":"","ucode":"6A270D922A3B9D","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1396951,"avatar":"https://static001.geekbang.org/account/avatar/00/15/50/d7/f82ed283.jpg","nickname":"辣么大","note":"","ucode":"AB308B6DCA0108","race_medal":0,"user_type":1,"is_pvip":true},"discussion":{"id":104241,"discussion_content":"别这么说, 我们都是学习才来讨论的. 我觉得两个表格设计可能更符合数据库设计的范式要求, 但同时可能会影响到实际的性能. 举个例子, 系统共有 1 万个用户, 所有用户每天都来签到领积分, 然后每个用户每天都有一笔交易来赚取积分, 也就是说每个用户每天产生两条记录在 credit_transaction 表; 和两条记录在 credit_detail 表. 100 天后, 两表各有 200w 条记录. 假设我是其中一个用户, 我想查看我的积分变动情况, 我需要先去credit_transaction 找到所有跟我相关的行, 这个很快, 然后用每行中的 trans_id 去另外一个表的 200w 记录当中匹配 trans_id, 这个匹配的过程将是一个耗时操作, 尤其是多人同时对第二个表读取进行查询的时候; 相反, 如果设计到一个表中, 只需要保证 user_id 带上索引, 这个级别, 甚至 10w 用户产生的 2000w 条数据性能基本不会有问题, 而如果是两个表联合查询, 此时就变成了 从 2000 万条数据中进行匹配, 系统性能会随着运行时间以及用户量急剧下滑. 尤其是运行时间这个地方... 以上纯粹个人见解, 我是一个在目前做前台的曾经的后台小码农.","likes_number":15,"is_delete":false,"is_hidden":false,"ctime":1577418201,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":104204,"ip_address":""},"score":104241,"extra":""},{"author":{"id":1396951,"avatar":"https://static001.geekbang.org/account/avatar/00/15/50/d7/f82ed283.jpg","nickname":"辣么大","note":"","ucode":"AB308B6DCA0108","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":1238221,"avatar":"https://static001.geekbang.org/account/avatar/00/12/e4/cd/5363c8fa.jpg","nickname":"Rain","note":"","ucode":"6A270D922A3B9D","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":104254,"discussion_content":"优秀！太谦虚了，解释的很明白，仔细研究还有这么多门道，真是学习了。感谢🙏！","likes_number":2,"is_delete":false,"is_hidden":false,"ctime":1577419077,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":104241,"ip_address":""},"score":104254,"extra":""}]}]},{"had_liked":false,"id":169921,"user_name":"京京beaver","can_delete":false,"product_type":"c1","uid":1179056,"ip_address":"","ucode":"C21838D7CA7D6B","user_header":"https://static001.geekbang.org/account/avatar/00/11/fd/b0/e30fd916.jpg","comment_is_top":false,"comment_ctime":1578473455,"is_pvip":false,"discussion_count":1,"race_medal":0,"score":"35938211823","product_id":100039001,"comment_content":"第一个问题：合理。设计积分和金钱类的修改需要对账，不引入渠道id和事件id，无法与高层系统完成对账，是设计隐患，<br><br>第二个问题：不违反。积分明细 ID是本次事务执行成功的回执，是后续对账，发起重试，处理幂等的依据。属于正常返回值。如果只返回void或者boolean没有任何业务含义，存在安全隐患。","like_count":8,"discussions":[{"author":{"id":1951501,"avatar":"https://static001.geekbang.org/account/avatar/00/1d/c7/0d/0dab398b.jpg","nickname":"好名字","note":"","ucode":"E2BFD96F912A67","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":336871,"discussion_content":"第一个问题的回答不对，上层记录下积分记录id同样可以完成对账。我觉的就像是关系型数据库范式一样，有时候冗余字段是范式不建议的，但是场景应用非常合适，那就用呗。（比如这里渠道id和事件id是写入后就不会改动的，而且以后积分反向关联查询上层的时候更加方便，那就用呗 ）","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1608721217,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":166245,"user_name":"胖子","can_delete":false,"product_type":"c1","uid":1037760,"ip_address":"","ucode":"E6371346288A87","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTLIuRQaZX70dsBg6khub2VPM1eQAP9IWRWxgOFed3ia4kXyNJInFRicWJ0ibf2YmLsOvJa1sGygGpmJg/132","comment_is_top":false,"comment_ctime":1577422646,"is_pvip":false,"replies":[{"id":"64836","content":"接口 controller层<br>数据库 repository<br>业务 service","user_name":"作者回复","comment_id":166245,"uid":"1190123","ip_address":"","utype":1,"ctime":1577666754,"user_name_real":"王争"}],"discussion_count":1,"race_medal":0,"score":"31642193718","product_id":100039001,"comment_content":"我有一个疑问：接口设计、数据库设计和业务模型设计如何对应或过渡到MVC分层？","like_count":7,"discussions":[{"author":{"id":1190123,"avatar":"https://static001.geekbang.org/account/avatar/00/12/28/eb/af064421.jpg","nickname":"王争","note":"","ucode":"2B611BE0E0EDD4","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":479456,"discussion_content":"接口 controller层\n数据库 repository\n业务 service","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1577666754,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":247157,"user_name":"郑大钱","can_delete":false,"product_type":"c1","uid":1503067,"ip_address":"","ucode":"114CF48056880E","user_header":"https://static001.geekbang.org/account/avatar/00/16/ef/5b/ff28088f.jpg","comment_is_top":false,"comment_ctime":1599619961,"is_pvip":false,"discussion_count":1,"race_medal":0,"score":"27369423737","product_id":100039001,"comment_content":"设计模式太多，想一次就用好是不现实的，我认为关键是要形成自己可迭代的套路(依稀记得被《代码大全》支配的恐惧)。<br>开始接收需求的时候，所有代码都写在ViewController里面，导致VC异常杂乱庞大，为了解决这个问题，了解了MVVM架构。今后的需求全都走MVVM架构，代码风格也出来了。在学习设计模式过程中，逐步解释先前的架构中用到的设计模式，或者优化不足的地方。<br>将成熟的设计模式内化为大脑的自动驾驶模式，减少认知负担，为新的学习腾出空间，这是我实践过的一个有效的学习编程的方式。","like_count":7,"discussions":[{"author":{"id":1015754,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/7f/ca/ea85bfdd.jpg","nickname":"helloworld","note":"","ucode":"00DF2FEC58D2E6","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":587586,"discussion_content":"这样的评论都属于经纬打击，稳","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1663157877,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":"北京"},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":167746,"user_name":"杨陆伟","can_delete":false,"product_type":"c1","uid":1108457,"ip_address":"","ucode":"3BC968447406EB","user_header":"https://static001.geekbang.org/account/avatar/00/10/e9/e9/1f95e422.jpg","comment_is_top":false,"comment_ctime":1577927208,"is_pvip":true,"replies":[{"id":"65092","content":"虽然有性能损耗 但可以忽略 影响不大","user_name":"作者回复","comment_id":167746,"uid":"1190123","ip_address":"","utype":1,"ctime":1577931928,"user_name_real":"王争"}],"discussion_count":7,"race_medal":0,"score":"23052763688","product_id":100039001,"comment_content":"VO、BO、Entity频繁的克隆、拷贝会不会引入性能问题，这点是怎么考虑的？谢谢","like_count":5,"discussions":[{"author":{"id":1190123,"avatar":"https://static001.geekbang.org/account/avatar/00/12/28/eb/af064421.jpg","nickname":"王争","note":"","ucode":"2B611BE0E0EDD4","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":479972,"discussion_content":"虽然有性能损耗 但可以忽略 影响不大","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1577931928,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1285986,"avatar":"https://static001.geekbang.org/account/avatar/00/13/9f/62/960eecc3.jpg","nickname":"夏天","note":"","ucode":"F29D56F9265751","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":556248,"discussion_content":"有个 Convert工具框架 可以生成set 代码 避免BeanUtil工具带来的性能损失","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1647263124,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1121758,"avatar":"https://static001.geekbang.org/account/avatar/00/11/1d/de/62bfa83f.jpg","nickname":"aoe","note":"","ucode":"1C6201EDB4E954","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":166576,"discussion_content":"极客时间-Java性能调优实战-《28 | 原型模式与享元模式：提升系统性能的利器》介绍了Java如何高效拷贝https://time.geekbang.org/column/article/109980","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1581413637,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":4,"child_discussions":[{"author":{"id":1123049,"avatar":"https://static001.geekbang.org/account/avatar/00/11/22/e9/32f5fa34.jpg","nickname":"QuincySx","note":"","ucode":"F33848E1A4AF26","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1121758,"avatar":"https://static001.geekbang.org/account/avatar/00/11/1d/de/62bfa83f.jpg","nickname":"aoe","note":"","ucode":"1C6201EDB4E954","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":265940,"discussion_content":"诶呀突然发现没法复制","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1589457237,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":166576,"ip_address":""},"score":265940,"extra":""},{"author":{"id":1121758,"avatar":"https://static001.geekbang.org/account/avatar/00/11/1d/de/62bfa83f.jpg","nickname":"aoe","note":"","ucode":"1C6201EDB4E954","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1123049,"avatar":"https://static001.geekbang.org/account/avatar/00/11/22/e9/32f5fa34.jpg","nickname":"QuincySx","note":"","ucode":"F33848E1A4AF26","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":267290,"discussion_content":"app上可以复制啊","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1589625595,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":265940,"ip_address":""},"score":267290,"extra":""},{"author":{"id":1123049,"avatar":"https://static001.geekbang.org/account/avatar/00/11/22/e9/32f5fa34.jpg","nickname":"QuincySx","note":"","ucode":"F33848E1A4AF26","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1121758,"avatar":"https://static001.geekbang.org/account/avatar/00/11/1d/de/62bfa83f.jpg","nickname":"aoe","note":"","ucode":"1C6201EDB4E954","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":268259,"discussion_content":"我这没反应，是不是 iOS 的问题。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1589757537,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":267290,"ip_address":""},"score":268259,"extra":""}]}]},{"had_liked":false,"id":166160,"user_name":"J.Smile","can_delete":false,"product_type":"c1","uid":1336475,"ip_address":"","ucode":"C4D98DFDBF7584","user_header":"https://static001.geekbang.org/account/avatar/00/14/64/9b/0b578b08.jpg","comment_is_top":false,"comment_ctime":1577409952,"is_pvip":false,"discussion_count":6,"race_medal":0,"score":"18757279136","product_id":100039001,"comment_content":"实际中没见过同时定义vo  bo entity的","like_count":4,"discussions":[{"author":{"id":1540520,"avatar":"https://static001.geekbang.org/account/avatar/00/17/81/a8/4b6c61ce.jpg","nickname":"Angus","note":"","ucode":"C336521BD8BA64","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":106209,"discussion_content":"比较多的是VO DTO","likes_number":2,"is_delete":false,"is_hidden":false,"ctime":1577522725,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":1,"child_discussions":[{"author":{"id":1448126,"avatar":"https://static001.geekbang.org/account/avatar/00/16/18/be/ad3127e0.jpg","nickname":"慕高迪","note":"","ucode":"EB1CB5EA4E3A90","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1540520,"avatar":"https://static001.geekbang.org/account/avatar/00/17/81/a8/4b6c61ce.jpg","nickname":"Angus","note":"","ucode":"C336521BD8BA64","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":282520,"discussion_content":"有时dto被当作bo使用，有时dto又被当作vo使用","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1592008110,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":106209,"ip_address":""},"score":282520,"extra":""}]},{"author":{"id":1637228,"avatar":"https://static001.geekbang.org/account/avatar/00/18/fb/6c/12fdc372.jpg","nickname":"迈向架构师","note":"","ucode":"2476594CF76001","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":387236,"discussion_content":"我们DTO是数据层，DO是业务层，VO是视图层","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1628065592,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":2347137,"avatar":"https://static001.geekbang.org/account/avatar/00/23/d0/81/d5c8e46e.jpg","nickname":"snake","note":"","ucode":"47BFFE4D048156","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":339616,"discussion_content":"我用的就是DTO和entity","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1609747232,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1580358,"avatar":"https://wx.qlogo.cn/mmopen/vi_32/ZMALpD4bKCVdsx8ymCC5Oo0oxibxIFGQzT6fP2B8MEgLGLktQRX4ictobkbcNBDTQibjoQNKBmWCKomNibWqHZ5kpg/132","nickname":"Long","note":"","ucode":"D85B99FD0C4B76","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":261211,"discussion_content":"开发用php,Entity见的比较多,vo,bo也没有见过","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1588946916,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1133194,"avatar":"https://static001.geekbang.org/account/avatar/00/11/4a/8a/c1069412.jpg","nickname":"makermade","note":"","ucode":"03386B90CB8F20","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":228242,"discussion_content":"多跳槽，总有一天会见到","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1586528691,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":166104,"user_name":"aya","can_delete":false,"product_type":"c1","uid":1325690,"ip_address":"","ucode":"F50E350DCF72D6","user_header":"https://static001.geekbang.org/account/avatar/00/14/3a/7a/a68f0ff8.jpg","comment_is_top":false,"comment_ctime":1577404966,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"18757274150","product_id":100039001,"comment_content":"1增加上层相关字段有利于出现问题时的排查工作，并且ods等系统在抽数据时也可以提供完整数据。<br>2不违背单一指责原则，赚取积分和消费积分的业务逻辑必然会伴随积分余额查询，业务上应属同一逻辑，拆分反而shi程序复杂。","like_count":4},{"had_liked":false,"id":233621,"user_name":"永旭","can_delete":false,"product_type":"c1","uid":1068819,"ip_address":"","ucode":"C9C74BE32C8F46","user_header":"https://static001.geekbang.org/account/avatar/00/10/4f/13/5197f8d2.jpg","comment_is_top":false,"comment_ctime":1594368601,"is_pvip":false,"replies":[{"id":"86244","content":"表示层=view层吧 ，不过，现在后端的这种controller+service+repo 已经不能完全对应到mvc三层了","user_name":"作者回复","comment_id":233621,"uid":"1190123","ip_address":"","utype":1,"ctime":1594385296,"user_name_real":"王争"}],"discussion_count":2,"race_medal":0,"score":"14479270489","product_id":100039001,"comment_content":"3层架构 和 MVC 不是 2中概念吗 ? <br>3层架构: 表示层, 业务层 , 数据访问层<br>MVC: model , view , controller <br>3层架构.表示层 = MVC.controller  + MVC.view  ?? ","like_count":3,"discussions":[{"author":{"id":1190123,"avatar":"https://static001.geekbang.org/account/avatar/00/12/28/eb/af064421.jpg","nickname":"王争","note":"","ucode":"2B611BE0E0EDD4","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":501110,"discussion_content":"表示层=view层吧 ，不过，现在后端的这种controller+service+repo 已经不能完全对应到mvc三层了","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1594385296,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":2358764,"avatar":"https://static001.geekbang.org/account/avatar/00/23/fd/ec/b68ffe72.jpg","nickname":"Bin","note":"","ucode":"AA606CC51BB3CB","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":338382,"discussion_content":"我也认为这是两种概念，MVC都是表示层（即此文中的控制层）的东西，其中的M对应此文中的VO。此文中的三层是表示层，业务层（领域层？），持久层（或者叫仓储层）。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1609252278,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":167803,"user_name":"林","can_delete":false,"product_type":"c1","uid":1079783,"ip_address":"","ucode":"BFB14F03283C70","user_header":"https://wx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTKY0SBAOch2S7wadCRFKTT5fBtXCvsa46svoTj2MWoQ9YRrujZuq4wEHjS9dCEzPcrWHNSYgUkNVw/0","comment_is_top":false,"comment_ctime":1577937327,"is_pvip":false,"replies":[{"id":"65167","content":"是个问题 我改下","user_name":"作者回复","comment_id":167803,"uid":"1190123","ip_address":"","utype":1,"ctime":1577955443,"user_name_real":"王争"}],"discussion_count":1,"race_medal":0,"score":"14462839215","product_id":100039001,"comment_content":"为什么积分明细表没有user_id字段，如何查询用户的可用积分","like_count":3,"discussions":[{"author":{"id":1190123,"avatar":"https://static001.geekbang.org/account/avatar/00/12/28/eb/af064421.jpg","nickname":"王争","note":"","ucode":"2B611BE0E0EDD4","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":480002,"discussion_content":"是个问题 我改下","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1577955443,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":166232,"user_name":"知行合一","can_delete":false,"product_type":"c1","uid":1521486,"ip_address":"","ucode":"2B8E634FC4CFB7","user_header":"https://static001.geekbang.org/account/avatar/00/17/37/4e/5c3153b2.jpg","comment_is_top":false,"comment_ctime":1577420228,"is_pvip":false,"discussion_count":1,"race_medal":0,"score":"14462322116","product_id":100039001,"comment_content":"争哥给出的是一个基础的积分系统案例，主要是从设计的角度来分析我们用到哪些原则和模式。真实场景的话肯定需要考虑高并发和大数据量的问题，那样的话可能需要单独出来积分账户表，存储积分余额，明细表需要分库分表。<br>针对问题一，我觉的很有必要，毕竟业务需要查询积分的来源和做幂等性检验。<br>问题二，这个主要看业务系统是否需要，大部分情况下我觉得是不需要的，业务系统增加积分或者消费积分就成了。需要的话也是为了对账，我哪个动作增加的哪笔积分，对账意义大于业务意义。","like_count":3,"discussions":[{"author":{"id":1206229,"avatar":"https://static001.geekbang.org/account/avatar/00/12/67/d5/1b26b725.jpg","nickname":"Gopher","note":"","ucode":"3C1F9012BB486D","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":308315,"discussion_content":"课程只讲设计上的问题吧","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1600913560,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":166153,"user_name":"下雨天","can_delete":false,"product_type":"c1","uid":1008315,"ip_address":"","ucode":"816B3792ECC50A","user_header":"https://static001.geekbang.org/account/avatar/00/0f/62/bb/323a3133.jpg","comment_is_top":false,"comment_ctime":1577409383,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"14462311271","product_id":100039001,"comment_content":"说说第一个问题，系统设计跟数据库设计没必然联系，这样设计合理！<br>数据库设计中有点像服务器请求设计<br>1.数据库拆分过细，各表字段间关联变麻烦了，提高数据不一致性风险！<br>2.数据库中表多意味着访问可能性变大，数据库的连接，建立都是需要时间和消耗性能的！","like_count":3},{"had_liked":false,"id":251967,"user_name":"大仙儿","can_delete":false,"product_type":"c1","uid":2208317,"ip_address":"","ucode":"9F2987AE89834F","user_header":"https://static001.geekbang.org/account/avatar/00/21/b2/3d/13e3ad14.jpg","comment_is_top":false,"comment_ctime":1602006935,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"10191941527","product_id":100039001,"comment_content":"王争老师您好，对于这篇实战，我有两个疑问：<br>1、如果只有一张表，是否能满足用户查询目前可用积分需求？（https:&#47;&#47;my.oschina.net&#47;funcy&#47;blog&#47;1975523）这篇文章通过增加可用积分表来实现。<br>2、调用消费积分接口，是否要已用户ID为锁做分布式锁，否则同一个用户同时消费积分，会导致数据不一致问题。","like_count":2},{"had_liked":false,"id":193518,"user_name":"heyman","can_delete":false,"product_type":"c1","uid":1173894,"ip_address":"","ucode":"92EF9EF1B1B1B3","user_header":"https://static001.geekbang.org/account/avatar/00/11/e9/86/d34800a4.jpg","comment_is_top":false,"comment_ctime":1584922876,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"10174857468","product_id":100039001,"comment_content":"假如产品需求需要在获得的积分明细记录上展示不同渠道或者是不同规则的相关信息，例如购物获取积分，需要记录商品名称，支付金额等；签到获取积分，需要记录签到日期；活动获取积分，需要记录活动相关字段等等（不同的活动需要记录的可能不一样）。用户打开积分列表的时候，需要展示出这些信息。我个人感觉系统间的耦合度很高，而且有新规则的时候还要支持新的字段，很难维护。我一般是在credit_transaction上加一个扩展字段，往里面塞json。请教一下，有什么更好的方案吗？","like_count":2},{"had_liked":false,"id":166709,"user_name":"兴","can_delete":false,"product_type":"c1","uid":1744116,"ip_address":"","ucode":"B33F131FEED77F","user_header":"https://static001.geekbang.org/account/avatar/00/1a/9c/f4/61b4876f.jpg","comment_is_top":false,"comment_ctime":1577549635,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"10167484227","product_id":100039001,"comment_content":"第一次评论说的不对请指正<br><br>第一个问题分两种情况：<br>1. 如果是积分和营销业务分离的话，下层业务就不应该关注上层业务，积分系统只记录自己的流水，event_id和channel_id则应该由上层记录<br>2. 如果是积分和业务系统放在一起的话（就像争哥推荐的那样），这种方案就符合当前业务情景。<br><br>第二个问题：<br>这种虽不符合单一职责，但如果每次插入后业务需要ID的做其他事情的话（或者以后也需要），这种方案的成本最小。","like_count":2},{"had_liked":false,"id":166226,"user_name":"正在减肥的胖籽。","can_delete":false,"product_type":"c1","uid":1033728,"ip_address":"","ucode":"99E2E4DF599236","user_header":"https://static001.geekbang.org/account/avatar/00/0f/c6/00/683bb4f0.jpg","comment_is_top":false,"comment_ctime":1577418412,"is_pvip":false,"discussion_count":2,"race_medal":0,"score":"10167353004","product_id":100039001,"comment_content":"课堂讨论：<br>  1.第一个问题合理。1.积分流水表也需要展示积分从那个渠道赚取2.RPC接口失败超时补偿的时候也需要对应的字段来对应。3.业务对账也需要对应的业务字段，但是event_id和channel_id需要组成唯一索引。<br>   2.个人意见是不需要返回积分的ID，对上层业务来说只关注积分是否增加&#47;消费成功。返回boolean或者void就可以。如果需要查询积分情况，已经有event_id和channel_id就可以反向查询。","like_count":2,"discussions":[{"author":{"id":1087243,"avatar":"https://static001.geekbang.org/account/avatar/00/10/97/0b/a943bcb3.jpg","nickname":"zhou","note":"","ucode":"E1CE8575B3F106","race_medal":3,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":276611,"discussion_content":"返回积分ID可方便上游系统扩展，不然用户再次查询也无法定位到记录。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1590913941,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1318540,"avatar":"https://static001.geekbang.org/account/avatar/00/14/1e/8c/450fe5cb.jpg","nickname":"花儿少年","note":"","ucode":"CFE4F64243673B","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":106190,"discussion_content":"返回的积分明细应该就是自己再次查询得到的吧","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1577520850,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":166120,"user_name":"醉比","can_delete":false,"product_type":"c1","uid":1248399,"ip_address":"","ucode":"79E65F62BE7809","user_header":"https://static001.geekbang.org/account/avatar/00/13/0c/8f/4ebd303a.jpg","comment_is_top":false,"comment_ctime":1577407005,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"10167341597","product_id":100039001,"comment_content":"从工作开始一直遵从着三层分层的标准，也一直没有去深究原因，今天收获颇丰。","like_count":2},{"had_liked":false,"id":320884,"user_name":"一格状语","can_delete":false,"product_type":"c1","uid":1622696,"ip_address":"","ucode":"EBA9ED5F97416D","user_header":"https://static001.geekbang.org/account/avatar/00/18/c2/a8/f3f8f5d2.jpg","comment_is_top":false,"comment_ctime":1636538413,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"5931505709","product_id":100039001,"comment_content":"我只用VO和Entity行吗，不用BO，感觉好多啊，麻烦的","like_count":1},{"had_liked":false,"id":276715,"user_name":"柠檬水","can_delete":false,"product_type":"c1","uid":1133649,"ip_address":"","ucode":"B105855D7FF8FB","user_header":"https://static001.geekbang.org/account/avatar/00/11/4c/51/a339d363.jpg","comment_is_top":false,"comment_ctime":1612087248,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"5907054544","product_id":100039001,"comment_content":"作者和评论区看到主要是后端的同学的评价，其实前端也是一样的，对于APP的开发我们也会定义出VO，BO，Entity，这个正好和后端是反过来的，Entity 是对于服务返回的模型，BO 是对于业务模型，VO 是对自己UI 的模型，这种方式一开始我也是遇到类之间多个属性的复制，但是觉的职责不同，还是分开了，在设计时如果非常简单的Entity 就复用，复杂的对象自己会定义一套。这个原则看似麻烦一些，在前期后台设计能力偏弱的情况下，前端设计与后台模型松耦合了，在后来后台设计跟上来的时候，前端的调整很少。","like_count":1},{"had_liked":false,"id":261591,"user_name":"骆永良","can_delete":false,"product_type":"c1","uid":2285079,"ip_address":"","ucode":"E451391B9ABF13","user_header":"https://static001.geekbang.org/account/avatar/00/22/de/17/8c819cd7.jpg","comment_is_top":false,"comment_ctime":1605435119,"is_pvip":false,"replies":[{"id":"96140","content":"������","user_name":"作者回复","user_name_real":"王争","uid":"1190123","ctime":1606701396,"ip_address":"","comment_id":261591,"utype":1}],"discussion_count":1,"race_medal":0,"score":"5900402415","product_id":100039001,"comment_content":"目的：提高开发、维护效率。第一层原则：易维护、易扩展，第二层原则：高内聚、低耦合。第一层方法：SOLID原则。第二层方法：各种设计模式（经验）","like_count":1,"discussions":[{"author":{"id":1190123,"avatar":"https://static001.geekbang.org/account/avatar/00/12/28/eb/af064421.jpg","nickname":"王争","note":"","ucode":"2B611BE0E0EDD4","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":509532,"discussion_content":"������","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1606701396,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":261490,"user_name":"春山","can_delete":false,"product_type":"c1","uid":1578956,"ip_address":"","ucode":"435980BA26DF3D","user_header":"https://static001.geekbang.org/account/avatar/00/18/17/cc/e33bef77.jpg","comment_is_top":false,"comment_ctime":1605358237,"is_pvip":true,"replies":[{"id":"96143","content":"MVC也不全是关注的前端","user_name":"作者回复","user_name_real":"王争","uid":"1190123","ctime":1606701431,"ip_address":"","comment_id":261490,"utype":1}],"discussion_count":1,"race_medal":0,"score":"5900325533","product_id":100039001,"comment_content":"三层架构和MVC不能说是一个东西吧，MVC更多关注的是前端。","like_count":1,"discussions":[{"author":{"id":1190123,"avatar":"https://static001.geekbang.org/account/avatar/00/12/28/eb/af064421.jpg","nickname":"王争","note":"","ucode":"2B611BE0E0EDD4","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":509500,"discussion_content":"MVC也不全是关注的前端","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1606701431,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":228919,"user_name":"YsnowLove","can_delete":false,"product_type":"c1","uid":1439301,"ip_address":"","ucode":"70433D98592481","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/rMgAbbKiasa1qR35ht0GEfwsHXbusPZAe9JFgicDgVRy8vQET2hypuDgwtHoPVU23RUoMdK7qA7gibMlTExpYibtbw/132","comment_is_top":false,"comment_ctime":1592838967,"is_pvip":false,"replies":[{"id":"86378","content":"增加一个总余额，就要维护数据的一致性了。就变得复杂了。而计算余额并非太复杂。当然，如果积分表中的数据量很大，那增加余额也是可以的。这个具体来看，没有说非得选择哪个设计更好。","user_name":"作者回复","user_name_real":"王争","uid":"1190123","ctime":1594602451,"ip_address":"","comment_id":228919,"utype":1}],"discussion_count":1,"race_medal":0,"score":"5887806263","product_id":100039001,"comment_content":"这篇文章是实战篇，为啥没有说明积分余额的设计，作为一个用户，首先关心的是积分余额吧。不可能每次看积分余额都要查询所以积分明细，然后计算一遍。","like_count":1,"discussions":[{"author":{"id":1190123,"avatar":"https://static001.geekbang.org/account/avatar/00/12/28/eb/af064421.jpg","nickname":"王争","note":"","ucode":"2B611BE0E0EDD4","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":499256,"discussion_content":"增加一个总余额，就要维护数据的一致性了。就变得复杂了。而计算余额并非太复杂。当然，如果积分表中的数据量很大，那增加余额也是可以的。这个具体来看，没有说非得选择哪个设计更好。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1594602451,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":175126,"user_name":"翁晓峰","can_delete":false,"product_type":"c1","uid":1198283,"ip_address":"","ucode":"CD7B9B1F1711BB","user_header":"https://static001.geekbang.org/account/avatar/00/12/48/cb/0b7838e9.jpg","comment_is_top":false,"comment_ctime":1580564995,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"5875532291","product_id":100039001,"comment_content":"消费接口设计上是单个积分记录被消费<br>上层需要消费还要查哪些未被消费，哪些可以组合后正常消费，处理并发问题，如果不能组合怎么处理<br>比如消费积分15分，最老的未消费记录是2条10积分。第二条只能消费部分怎么处理？<br>","like_count":1},{"had_liked":false,"id":167860,"user_name":"番茄炒西红柿","can_delete":false,"product_type":"c1","uid":1690242,"ip_address":"","ucode":"13F47BABAB2110","user_header":"https://static001.geekbang.org/account/avatar/00/19/ca/82/85f6a1a2.jpg","comment_is_top":false,"comment_ctime":1577952115,"is_pvip":false,"replies":[{"id":"65263","content":"看校验什么 校验参数合法性 那就放在controller 校验参数的业务合法性 那就放到service","user_name":"作者回复","user_name_real":"王争","uid":"1190123","ctime":1578010142,"ip_address":"","comment_id":167860,"utype":1}],"discussion_count":1,"race_medal":0,"score":"5872919411","product_id":100039001,"comment_content":"想问一个问题关于设计业务逻辑的参数校验放在那里合适，我现在都放在controller里面和非业务的参数校验放在一起，因为这种校验一般都返回错误码，错误码感觉和service的关系不大。不过其实感觉放在service也合适，老师的看法是怎么样的？","like_count":1,"discussions":[{"author":{"id":1190123,"avatar":"https://static001.geekbang.org/account/avatar/00/12/28/eb/af064421.jpg","nickname":"王争","note":"","ucode":"2B611BE0E0EDD4","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":480027,"discussion_content":"看校验什么 校验参数合法性 那就放在controller 校验参数的业务合法性 那就放到service","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1578010142,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":167827,"user_name":"传说中的成大大","can_delete":false,"product_type":"c1","uid":1236766,"ip_address":"","ucode":"103543D6E706BF","user_header":"https://static001.geekbang.org/account/avatar/00/12/df/1e/cea897e8.jpg","comment_is_top":false,"comment_ctime":1577945289,"is_pvip":false,"replies":[{"id":"65264","content":"👍","user_name":"作者回复","user_name_real":"王争","uid":"1190123","ctime":1578010194,"ip_address":"","comment_id":167827,"utype":1}],"discussion_count":1,"race_medal":0,"score":"5872912585","product_id":100039001,"comment_content":"1. 是合理的 因为虽然数据库设计包含了上层的数据，但是绝大多数都是用来进行存数据库，存记录方便以后的维护和查询，比如像游戏开发 在数据库模块中总会设计到玩家角色id啊 名字啊等等 所以我觉得是合理的<br>2. 并没有违背单一职责原则，因为修改或者查询的接口里面做的事情是很单一的，返回一个id，还便于去查询验证","like_count":1,"discussions":[{"author":{"id":1190123,"avatar":"https://static001.geekbang.org/account/avatar/00/12/28/eb/af064421.jpg","nickname":"王争","note":"","ucode":"2B611BE0E0EDD4","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":480011,"discussion_content":"👍","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1578010194,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":167024,"user_name":"zk_207","can_delete":false,"product_type":"c1","uid":1183552,"ip_address":"","ucode":"196D92ECC8540D","user_header":"https://static001.geekbang.org/account/avatar/00/12/0f/40/e838871e.jpg","comment_is_top":false,"comment_ctime":1577672053,"is_pvip":false,"replies":[{"id":"65137","content":"vo放到controller层 bo放到service层","user_name":"作者回复","user_name_real":"王争","uid":"1190123","ctime":1577948772,"ip_address":"","comment_id":167024,"utype":1}],"discussion_count":2,"race_medal":0,"score":"5872639349","product_id":100039001,"comment_content":"争哥，<br>Vo和Bo应该分别放到Controller层、service层呢，还是统一放到domain层呢？","like_count":1,"discussions":[{"author":{"id":1190123,"avatar":"https://static001.geekbang.org/account/avatar/00/12/28/eb/af064421.jpg","nickname":"王争","note":"","ucode":"2B611BE0E0EDD4","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":479717,"discussion_content":"vo放到controller层 bo放到service层","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1577948772,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1730626,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTJvm1JYIDcS74s4cEYxA1PXMqjortVXEjUKyGQcPvibNJ4EAuksIa6uoHgr6G1yRqAM2KtP3yicKgTA/132","nickname":"小妖","note":"","ucode":"49C01DBFADF101","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":332121,"discussion_content":"我感觉应该吧Vo和Bo统一放到doman中比较合理，如果Vo放到controller、bo放到serviceceng不太符合类划分的习惯，统一放到doman中不仅更符合使用习惯，有时候会有在service层返回Vo类的需要（这个在真实的开发过程中是会出现的，比如某些复杂的分页需要在Service层拼装vo类）。除非是要不servcie抽离出单独的jar的需要，否则还是统一放到domain更合理\n","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1607069493,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":166928,"user_name":"陈迎春","can_delete":false,"product_type":"c1","uid":1443663,"ip_address":"","ucode":"2870BA6D6E5B1E","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTIang00R9vkklnkFCLhzRysNfocr0sLnCdoZwOT3UkulAPefk5BDvd0PfIeQSODSQg1DjKWUmJOaA/132","comment_is_top":false,"comment_ctime":1577632360,"is_pvip":false,"replies":[{"id":"64820","content":"估计你要自己下点功夫 毕竟讲的跟你现在做的有比较大距离","user_name":"作者回复","user_name_real":"王争","uid":"1190123","ctime":1577665809,"ip_address":"","comment_id":166928,"utype":1}],"discussion_count":3,"race_medal":0,"score":"5872599656","product_id":100039001,"comment_content":"各位大佬好，我主要是做嵌入式软件开发的，平常设计模式用的不多，所以相对差一些，最近的两偏实战，我听了好几遍，但还是云里雾里，可否给出一些实际的代码？结合代码理解，可能会更好些","like_count":1,"discussions":[{"author":{"id":1190123,"avatar":"https://static001.geekbang.org/account/avatar/00/12/28/eb/af064421.jpg","nickname":"王争","note":"","ucode":"2B611BE0E0EDD4","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":479680,"discussion_content":"估计你要自己下点功夫 毕竟讲的跟你现在做的有比较大距离","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1577665809,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1730626,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTJvm1JYIDcS74s4cEYxA1PXMqjortVXEjUKyGQcPvibNJ4EAuksIa6uoHgr6G1yRqAM2KtP3yicKgTA/132","nickname":"小妖","note":"","ucode":"49C01DBFADF101","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":332123,"discussion_content":"实际模式并不复杂，所有的设计模式都是面向对象特性的应用，综合利用封装继承特性，理解什么是多肽，设计模式就迎刃而解。再者，设计模式不能为了模式儿模式，实际使用中一般会进行相应的变型处理，使其更好的达到拓展和简单的目的。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1607069743,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1443663,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTIang00R9vkklnkFCLhzRysNfocr0sLnCdoZwOT3UkulAPefk5BDvd0PfIeQSODSQg1DjKWUmJOaA/132","nickname":"陈迎春","note":"","ucode":"2870BA6D6E5B1E","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":111325,"discussion_content":"好的，谢谢回复","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1577791342,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":166203,"user_name":"李小四","can_delete":false,"product_type":"c1","uid":1112747,"ip_address":"","ucode":"2A766BE16B276B","user_header":"https://static001.geekbang.org/account/avatar/00/10/fa/ab/0d39e745.jpg","comment_is_top":false,"comment_ctime":1577415273,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"5872382569","product_id":100039001,"comment_content":"设计模式_24<br># 作业<br>1. 下层系统中包含了上层系统的event_id, channel_id, 这个显然是包含了(不该有的)上层信息，这样的坏处是，上层如果需要增加信息，底层的数据库要跟着改动。<br>当然，这么做的原因与本项目使用贫血模式的原因一样，这个项目的业务相对简单，我们认为除了事件和渠道之外，长时间内不会有其他的属性加入。后面如果真的需要添加，最好做成关联表的形式，而不是再加属性了。<br>2. 如果把创建积分明细看做是一个原子操作，那么返回boolean是更合理的，因为这样就已经知道操作结果了。只是在业务上，常常需要同步地拿到刚刚创建的明细ID，如果接口不返回，再查询会非常麻烦，在这里返回是总成本最低的方式，当然，代价就是部分调用处并不需要这个返回值。<br><br># 感想<br>日常的工作中，我们常常也会考虑到各种做法是否违背某原则的情况，而且，这些场景总是两难的，刚开始的时候会死守某一条原则，硬着头皮把代码改成“明显有问题”的样子，后面会慢慢地做折中和妥协。","like_count":1},{"had_liked":false,"id":166179,"user_name":"William","can_delete":false,"product_type":"c1","uid":1346215,"ip_address":"","ucode":"55F5D9DEE485B1","user_header":"https://static001.geekbang.org/account/avatar/00/14/8a/a7/674c1864.jpg","comment_is_top":false,"comment_ctime":1577411467,"is_pvip":true,"discussion_count":0,"race_medal":0,"score":"5872378763","product_id":100039001,"comment_content":"不能为了设计而设计.<br><br>所以我认为以上两个问题都是与正常的业务设计，并不违反规则.<br><br><br>第一个：<br>     需要关联事件与积分的关系.<br><br>第二个： 为了后续的也许需要返回id字段无可厚非.","like_count":1},{"had_liked":false,"id":166133,"user_name":"失火的夏天","can_delete":false,"product_type":"c1","uid":1241770,"ip_address":"","ucode":"10C6E66EB2A65F","user_header":"https://static001.geekbang.org/account/avatar/00/12/f2/aa/32fc0d54.jpg","comment_is_top":false,"comment_ctime":1577408182,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"5872375478","product_id":100039001,"comment_content":"1.设计原则不是银弹，包含上层信息是因为业务上需要这些字段来获取信息，如果包装成一个类，依赖的内容就更多了，对调用方来说就不简介，不知道服务提供方到底需要什么。<br><br>2.单一原则也是取决于具体业务的，如果消费和赚取的积分在后续还有操作，就需要再度去查询一下这个积分。还要多操作一次数据库，如果服务端直接有提供，就可以避开这一次操作。任何服务都是为了业务实现的。大部分场景都是面向sql编程。当然，如果业务场景不需要后续操作，就不需要返回了，不过统一来说，多一个返回值，也没什么影响。","like_count":1},{"had_liked":false,"id":347971,"user_name":"周嘉治","can_delete":false,"product_type":"c1","uid":1154376,"ip_address":"","ucode":"9E2C8DB2DB0309","user_header":"https://static001.geekbang.org/account/avatar/00/11/9d/48/cb8d1922.jpg","comment_is_top":false,"comment_ctime":1654615740,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1654615740","product_id":100039001,"comment_content":"老师，repository层返回的Entity，在service中转换成BO，为什么转换这个操作是放在ervice中去做，实际开发中，我看到有很多同学是放在repository中把Entity转成BO再返回的，这里面有什么讲究吗？","like_count":0},{"had_liked":false,"id":343063,"user_name":"顺势而为","can_delete":false,"product_type":"c1","uid":2757858,"ip_address":"","ucode":"FE7D688D24823E","user_header":"https://static001.geekbang.org/account/avatar/00/2a/14/e2/f6f1627c.jpg","comment_is_top":false,"comment_ctime":1650614801,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1650614801","product_id":100039001,"comment_content":"1.学习这些设计原则的目的是为了解决设计带来的疑问。<br>2.要治理好这些类之间的关系，肯定要有一种规则来约束好的。<br>3.为什么非要这样约定呢，这样更加容易符合大多数的程序员的思维。","like_count":0},{"had_liked":false,"id":340633,"user_name":"酒醒何处","can_delete":false,"product_type":"c1","uid":2839701,"ip_address":"","ucode":"2F890DD0BEB0F0","user_header":"","comment_is_top":false,"comment_ctime":1648982481,"is_pvip":true,"discussion_count":0,"race_medal":0,"score":"1648982481","product_id":100039001,"comment_content":"业务场景决定的，需要对账，幂等","like_count":0},{"had_liked":false,"id":332686,"user_name":"建强","can_delete":false,"product_type":"c1","uid":1397126,"ip_address":"","ucode":"62B03D0E0C64EC","user_header":"https://static001.geekbang.org/account/avatar/00/15/51/86/b5fd8dd8.jpg","comment_is_top":false,"comment_ctime":1643473005,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1643473005","product_id":100039001,"comment_content":"1.积分明细表中含有event_id,channel_id，对于以后的积分溯源是有好处的，且这两个业务字段在上层业务中是比较抽象的，并没有特指某个具体业务的event_id和channel_id，因此这样设计是合理的；<br>2.赚取和消费积分两个接口返回积分明细ID，这个返回的明细ID，既可以作为成功的标志，又可以直接提供给调用者用于后续的业务处理，而查询积分明细肯定是不会调用这两个接口，即这两个接口主要功能并不是查询，而是改变积分，因此本质上它们是单一职责的。","like_count":0},{"had_liked":false,"id":330749,"user_name":"蝴蝶","can_delete":false,"product_type":"c1","uid":1193167,"ip_address":"","ucode":"8019924D99182F","user_header":"https://static001.geekbang.org/account/avatar/00/12/34/cf/0a316b48.jpg","comment_is_top":false,"comment_ctime":1642145115,"is_pvip":true,"discussion_count":0,"race_medal":0,"score":"1642145115","product_id":100039001,"comment_content":"现在在做内部积分相关需求,考虑一个问题,就是兑换的时候,到底是把一批记录置为删除,还是怎么处理?","like_count":0},{"had_liked":false,"id":318584,"user_name":"多学多看多记","can_delete":false,"product_type":"c1","uid":2276155,"ip_address":"","ucode":"0670C833007510","user_header":"https://static001.geekbang.org/account/avatar/00/22/bb/3b/6e020a32.jpg","comment_is_top":false,"comment_ctime":1635340526,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1635340526","product_id":100039001,"comment_content":"1. 是合理的，底层系统是要给多个上层系统使用的，因此底层系统要区分是哪一个上层系统在使用，否则容易使用混乱，使系统可扩展性低、可维护性差。因此底层系统都会预留一个或者多个字段，来区分不同的上层业务。<br>2. 合理。从可测试性的角度来讲，返回boolean或者void，看不出是成功还是失败，相反，返回ID可以通过ID查看成功或者失败，同时ID字段也可以供前端使用，比如挑战详情页。","like_count":0},{"had_liked":false,"id":314016,"user_name":"charmsongo","can_delete":false,"product_type":"c1","uid":1609051,"ip_address":"","ucode":"4FBEE716E93A1A","user_header":"https://static001.geekbang.org/account/avatar/00/18/8d/5b/383a49e4.jpg","comment_is_top":false,"comment_ctime":1632801618,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1632801618","product_id":100039001,"comment_content":"系统设计中，mvc优点有：业务代码复用、隔离易变化点、关注点、提高可测试性、可应对相对复杂性.<br>vo、bo、entity分层有必要，但是看具体公司业务吧，但是最好是用","like_count":0},{"had_liked":false,"id":301026,"user_name":"有生之年","can_delete":false,"product_type":"c1","uid":1020719,"ip_address":"","ucode":"B713335DE9D37F","user_header":"https://static001.geekbang.org/account/avatar/00/0f/93/2f/1e193dcc.jpg","comment_is_top":false,"comment_ctime":1625488682,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1625488682","product_id":100039001,"comment_content":"请问，数据校验属于业务逻辑么？比如某个字段只能为正数？不能超过多少之类的 . 放到controller还是domain中？","like_count":0},{"had_liked":false,"id":295404,"user_name":"Geek_5b7d28","can_delete":false,"product_type":"c1","uid":2057476,"ip_address":"","ucode":"BAA1CDD539C369","user_header":"","comment_is_top":false,"comment_ctime":1622418960,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1622418960","product_id":100039001,"comment_content":"课堂一<br>    我觉得对于计算分层来说是为了逻辑的复用性，上层中有下层的逻辑，不会破坏下层的通用性。而对于数据库来说，主要是为了关联查询，两者性质不一样，因此这么用没问题。","like_count":0},{"had_liked":false,"id":295331,"user_name":"小江爱学术","can_delete":false,"product_type":"c1","uid":2628601,"ip_address":"","ucode":"554F40C6627AF4","user_header":"https://static001.geekbang.org/account/avatar/00/28/1b/f9/018197f1.jpg","comment_is_top":false,"comment_ctime":1622370861,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1622370861","product_id":100039001,"comment_content":"有个问题是，在MVC中如果给BO，VO，Entity定义基类，或者利用组合类，那么基类&#47;组合类应该放哪一层呢","like_count":0},{"had_liked":false,"id":292295,"user_name":"栾~龟虽寿！","can_delete":false,"product_type":"c1","uid":1504671,"ip_address":"","ucode":"219B38C08979FE","user_header":"https://static001.geekbang.org/account/avatar/00/16/f5/9f/1509d389.jpg","comment_is_top":false,"comment_ctime":1620775900,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1620775900","product_id":100039001,"comment_content":"打卡吧 ，难度很大，似懂非懂","like_count":0},{"had_liked":false,"id":291948,"user_name":"JKwar","can_delete":false,"product_type":"c1","uid":1047466,"ip_address":"","ucode":"B733CA24D5701F","user_header":"https://static001.geekbang.org/account/avatar/00/0f/fb/aa/01fedf6c.jpg","comment_is_top":false,"comment_ctime":1620621619,"is_pvip":false,"discussion_count":0,"race_medal":1,"score":"1620621619","product_id":100039001,"comment_content":"课堂讨论二：不行，这里返回积分id是为了查询更加方便。","like_count":0},{"had_liked":false,"id":291946,"user_name":"JKwar","can_delete":false,"product_type":"c1","uid":1047466,"ip_address":"","ucode":"B733CA24D5701F","user_header":"https://static001.geekbang.org/account/avatar/00/0f/fb/aa/01fedf6c.jpg","comment_is_top":false,"comment_ctime":1620621485,"is_pvip":false,"discussion_count":0,"race_medal":1,"score":"1620621485","product_id":100039001,"comment_content":"课堂讨论1:合理，这2个字段在积分查询必须的，如果不记录在这张表上，记录在其他表上反而不方便查询。","like_count":0},{"had_liked":false,"id":291247,"user_name":"王泽","can_delete":false,"product_type":"c1","uid":1657304,"ip_address":"","ucode":"726A5F21BE7390","user_header":"https://static001.geekbang.org/account/avatar/00/19/49/d8/533b1968.jpg","comment_is_top":false,"comment_ctime":1620141622,"is_pvip":true,"discussion_count":0,"race_medal":0,"score":"1620141622","product_id":100039001,"comment_content":"emmm，有个问题想问一下争哥，在业务系统中，有三个不同客户端（web、app 等）都需要查订单列表，但是这个订单列表的功能是一样的，这种情况是只开放一个接口+判断权限来决定返回的数据呢，还是分成三个接口好（返回的订单信息基本一样，可能有个别字段不同），当前是后一种情况","like_count":0},{"had_liked":false,"id":278646,"user_name":"somenzz","can_delete":false,"product_type":"c1","uid":1187197,"ip_address":"","ucode":"EA59A170DF8910","user_header":"https://static001.geekbang.org/account/avatar/00/12/1d/7d/368df396.jpg","comment_is_top":false,"comment_ctime":1613170501,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1613170501","product_id":100039001,"comment_content":"1、积分明细表中 credit_transaction 中包含 event_id，channel_id 是非常必要的，如果没有这两个字段，用户无法查看积分明细时知道这些积分是通过什么渠道、什么事件获取的，平台也无法做相应的数据分析和统计。另外 event_id，channel_id 只是一业务信息的主键，一旦生成，基本不可能变化，因此 credit_transaction 并没有包含太多的业务信息。<br><br>2、赚取积分和消费积分接口返回积分明细 ID 并不违反接口的单一职责：赚取积分和消费积分。返回空或返回一个 ID 的成本是一样的，返回了 ID 却可以方便调用方查询或关联使用，实际上更好的做法不仅仅是返回一个 id，而是返回该笔明细的所有信息，这样用户界面就可以看到成功赚取或消费了多少积分。<br><br><br>","like_count":0},{"had_liked":false,"id":277459,"user_name":"朱月俊","can_delete":false,"product_type":"c1","uid":1017707,"ip_address":"","ucode":"4DA0728B862FBD","user_header":"https://static001.geekbang.org/account/avatar/00/0f/87/6b/0b6cd39a.jpg","comment_is_top":false,"comment_ctime":1612422192,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1612422192","product_id":100039001,"comment_content":"简单的积分系统也可以演变为复杂账务系统，甚至更复杂的财务系统。","like_count":0},{"had_liked":false,"id":276538,"user_name":"Flash","can_delete":false,"product_type":"c1","uid":1236163,"ip_address":"","ucode":"E285075C9E0B02","user_header":"https://static001.geekbang.org/account/avatar/00/12/dc/c3/e4ba51d5.jpg","comment_is_top":false,"comment_ctime":1611994236,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1611994236","product_id":100039001,"comment_content":"课后思考<br>1.这里的MVC分层，我觉得和之前说的下层不应该包含太多上层业务是两回事。这里的分层是针对技术架构上的分层，而不是针对业务架构上的分层，整个MVC三层在业务上是一个整体。<br>2.没有违背单一职责原则，是否单一职责，要看调用者，具体的场景。通常，保存更新会返回entity，对调用者来说，我就是想保存后看到更新后的数据。","like_count":0},{"had_liked":false,"id":276182,"user_name":"微末凡尘","can_delete":false,"product_type":"c1","uid":1099525,"ip_address":"","ucode":"25EDFD0914D0F4","user_header":"https://static001.geekbang.org/account/avatar/00/10/c7/05/19c5c255.jpg","comment_is_top":false,"comment_ctime":1611823416,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1611823416","product_id":100039001,"comment_content":"1、是合理的，从业务角度是需要这个两个字段的，设计原则也不是银弹，具体问题需要具体分析<br>2、返回id，和返回true很类似，调用方可能需要根据返回的id，进行其他的操作","like_count":0},{"had_liked":false,"id":272768,"user_name":"郑印","can_delete":false,"product_type":"c1","uid":1005282,"ip_address":"","ucode":"181B0FDE5E1532","user_header":"https://static001.geekbang.org/account/avatar/00/0f/56/e2/2dcab30d.jpg","comment_is_top":false,"comment_ctime":1610270866,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1610270866","product_id":100039001,"comment_content":"争哥，我想问问，二方接口通常如何处理呢，比如在同一个公司内订单服务依赖资金服务的查询资金余额接口？ <br><br>按照MVC，这个属于数据层(Repository)、还是业务层（service）, 目前我们是把它定义为业务层，二方接口封装统一放置在service包下的一个子包，这部分大多数文章也没有介绍，一直比较疑惑，想知道这部分在工程中的放置在哪怎么命名比较合理？","like_count":0},{"had_liked":false,"id":269719,"user_name":"慎独明强","can_delete":false,"product_type":"c1","uid":1965699,"ip_address":"","ucode":"DC2F7F2C0C8F60","user_header":"https://static001.geekbang.org/account/avatar/00/1d/fe/83/df562574.jpg","comment_is_top":false,"comment_ctime":1608770051,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1608770051","product_id":100039001,"comment_content":"问题一: 下层积分系统包含上层的一些业务字段为了，这些字段为冗余字段，可以方便我们后续查询统计。 也可以加一个中间关联表，将上层业务字段与积分流水表主键id关联起来，只是这样对于查询不怎么友好，应该是系统上一种取舍。   问题二: 我不习惯将更新和新增接口，返回对象，但确实也有一部分业务场景需要得到新增和修改后对象信息，看到评论区，下单会有一个小票，这个比喻很形象，我觉得都是合理。单一职责原则也要根据业务需要来定。","like_count":0},{"had_liked":false,"id":269708,"user_name":"江南一笑","can_delete":false,"product_type":"c1","uid":2234620,"ip_address":"","ucode":"E38938A1178827","user_header":"https://static001.geekbang.org/account/avatar/00/22/18/fc/4f92ee4e.jpg","comment_is_top":false,"comment_ctime":1608751154,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1608751154","product_id":100039001,"comment_content":"讨论问题回答：<br>1: 如果需要你的积分模块需要用到 event_id，channel_id，那就是合理的。用不到就不合理。<br>2. 想多了，不违背，而且也是从实用主义角度出发的。","like_count":0},{"had_liked":false,"id":269433,"user_name":"隆隆.ago","can_delete":false,"product_type":"c1","uid":1710528,"ip_address":"","ucode":"9EFE43F0A2C6BB","user_header":"https://static001.geekbang.org/account/avatar/00/1a/19/c0/693b946f.jpg","comment_is_top":false,"comment_ctime":1608644818,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1608644818","product_id":100039001,"comment_content":"作业：<br>1.是合理的。积分明细表中 中包含 event_id，channel_id这些是对上层业务的归纳，保留上层相应信息，没有太多的细节是一种抽象。而且数据库要全面，万一以后要用到这些上层信息也可以很好的适配。<br>2.修改和查询放一起挺好的。一般这种积分业务场景修改积分和返回积分ID像是一种原子化的操作。如果不返回ID就不便于后续的统计和分析等需求了。如果强行分开可能还是一种过度设计。如果实在感觉不好，可以参考老师这节课说的粗粒度包一层细粒度的设计套路。","like_count":0},{"had_liked":false,"id":260150,"user_name":"一万小时","can_delete":false,"product_type":"c1","uid":1297927,"ip_address":"","ucode":"D2D443595BB1ED","user_header":"","comment_is_top":false,"comment_ctime":1604931711,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1604931711","product_id":100039001,"comment_content":"作为C++开发应用工具的，看你举得例子，一头雾水，业务太不熟悉了","like_count":0},{"had_liked":false,"id":259232,"user_name":"Laughing","can_delete":false,"product_type":"c1","uid":1002134,"ip_address":"","ucode":"F68F1E000CA800","user_header":"https://static001.geekbang.org/account/avatar/00/0f/4a/96/99466a06.jpg","comment_is_top":false,"comment_ctime":1604657618,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1604657618","product_id":100039001,"comment_content":"回答如下：<br>1. 用于业务关联的必要字段是需要保留的，就像两个毫不相干的系统，想要有关系总要有东西是对应可查的，不然系统之间就没有什么关系。<br>2. 插入或修改返回具体业务相关的ID和明细，一般情况下是为了下一步操作做铺垫和联动，大多数情况下都是符合业务需求的，如果不返回的情况下。可能会再次造成IO，其实下一次IO是没有什么必要的。<br><br>很多时候设计还是要根据具体的场景做权衡，如果按规则生搬硬套系统可能也不会很好维护。","like_count":0},{"had_liked":false,"id":252461,"user_name":"大力水手Jerry","can_delete":false,"product_type":"c1","uid":1227840,"ip_address":"","ucode":"E4A6C71E275DB5","user_header":"https://static001.geekbang.org/account/avatar/00/12/bc/40/2279cfb5.jpg","comment_is_top":false,"comment_ctime":1602310857,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1602310857","product_id":100039001,"comment_content":"课后第一个习题答复：是合理的。底层不要包含上层的业务信息，意思是底层的业务逻辑不要混杂上层的业务逻辑，分层有助于隔离变化、隔离关注点、应对系统复杂性。但任何一个层面的业务逻辑都存在需要持久化的信息数据，这些信息数据**在本层**被处理，并被直接传递到最下面repository层进行持久化，从而支持状态、历史查询和系统灾难恢复，统计、预测和数据挖掘营销等扩展功能。","like_count":0},{"had_liked":false,"id":252163,"user_name":"Awake  Dreaming","can_delete":false,"product_type":"c1","uid":1658734,"ip_address":"","ucode":"D1A19933863FD6","user_header":"https://static001.geekbang.org/account/avatar/00/19/4f/6e/bff1e33e.jpg","comment_is_top":false,"comment_ctime":1602152503,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1602152503","product_id":100039001,"comment_content":"1.觉得下层表冗余上层业务相关的信息，要看荣誉了哪些信息，如果冗余了跟上层业务实现细节相关的信息肯定是不合适的，但如果是冗余了抽象的上层信息，还是可以接受的，因为这样保证了下层数据库表能够自如应对上层业务的扩展；另外，之前在钱包系统的设计中，那种明细表的设计方法是不是也可以考虑用在这里？<br>2.这个返不返回id，区别应该不大","like_count":0},{"had_liked":false,"id":251652,"user_name":"Ilearning99","can_delete":false,"product_type":"c1","uid":1989119,"ip_address":"","ucode":"7901836A2C47EF","user_header":"https://thirdwx.qlogo.cn/mmopen/vi_32/qOdqzmC507sibL6sichNSDaVmyoMKibEIqHWpic4CftgOQnoA3QKeRPwic9j1Ha8MLtzzqzfSRavR9GWMju09SMADUg/132","comment_is_top":false,"comment_ctime":1601763325,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1601763325","product_id":100039001,"comment_content":"1 eventid 和 channelid信息需要查询，另一种方式就需要新增一张表<br>2 返回id更常见，不是特别清楚原因","like_count":0},{"had_liked":false,"id":247733,"user_name":"Younger Ku","can_delete":false,"product_type":"c1","uid":1323102,"ip_address":"","ucode":"D157DC38BDB515","user_header":"https://static001.geekbang.org/account/avatar/00/14/30/5e/c42bc33f.jpg","comment_is_top":false,"comment_ctime":1599811347,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1599811347","product_id":100039001,"comment_content":"channelId:赚取或消费渠道ID<br>这个字段该怎么理解呢？能否举个例子？<br>消费积分接口传参expiredTime有什么意思呢？<br>想看用户剩余积分岂不是要根据userId分组后对credit进行sum了？会不会出现结果是负值？","like_count":0},{"had_liked":false,"id":246243,"user_name":"宇天飞","can_delete":false,"product_type":"c1","uid":1126444,"ip_address":"","ucode":"3FB37D1E2DAA61","user_header":"https://static001.geekbang.org/account/avatar/00/11/30/2c/06375913.jpg","comment_is_top":false,"comment_ctime":1599220326,"is_pvip":true,"discussion_count":0,"race_medal":0,"score":"1599220326","product_id":100039001,"comment_content":"问题1：<br>1、合理<br>2、业务需要<br>问题2：<br>1、内聚好、本身系统接口不多<br>","like_count":0},{"had_liked":false,"id":245974,"user_name":"Geek_35cfdd","can_delete":false,"product_type":"c1","uid":1792214,"ip_address":"","ucode":"AD9615ABB4CA25","user_header":"https://thirdwx.qlogo.cn/mmopen/vi_32/DYAIOgq83eoiaP1gptuBzj3AXMpY8yLTIkpuarouOVzLde4636UJ7zAgnOEZibiaAIRVAicFaO64ftH45YOn1pD3VA/132","comment_is_top":false,"comment_ctime":1599123434,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1599123434","product_id":100039001,"comment_content":"从单一职责的角度来说，确实可能不满足。但是在业务场景中，并不一定每个设计都要满足各个原则，很多时候还是要取舍。这种设计更满足业务场景。","like_count":0},{"had_liked":false,"id":245416,"user_name":"陈年之后是青葱","can_delete":false,"product_type":"c1","uid":1677464,"ip_address":"","ucode":"93099465D64545","user_header":"https://static001.geekbang.org/account/avatar/00/19/98/98/0aa03974.jpg","comment_is_top":false,"comment_ctime":1598940046,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1598940046","product_id":100039001,"comment_content":"1.个人认为事件产生积分的关系是上层业务依赖积分服务。但肯定也需要通过积分明细反查询是什么事件，这里又变成了积分服务依赖上层业务。所以个人认为把积分完全作为下层服务供其他业务来调用可能不是很恰当。应该是同级，那么根据最少知识原则，也根据DDD理论两个业务域只通过聚合根id来关联所以在积分明细实体中设计这事件id和渠道id是合理的。<br>2.赚取和消费积分返回id，在业务上来说这是必要的，这两个接口的职责定义就是赚取或消费积分并返回积分id,粒度度从场景上来说已经不能再细分，返回积分id不意味着提供了查询的职责，相反如果上游服务需要多返回一个查询字段或者多提供一个查询条件，在积分服务应该有一个专门的查询接口而变更，而不会影响我们的赚取和消费积分接口，所以我认为没有违反单一职责原则。","like_count":0},{"had_liked":false,"id":243129,"user_name":"超越自我","can_delete":false,"product_type":"c1","uid":2130462,"ip_address":"","ucode":"8A55D972EEFADA","user_header":"https://static001.geekbang.org/account/avatar/00/20/82/1e/f3cb3d57.jpg","comment_is_top":false,"comment_ctime":1597973538,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1597973538","product_id":100039001,"comment_content":"相互冗余信息便于流水对账，踪迹可追溯。","like_count":0},{"had_liked":false,"id":235482,"user_name":"御风","can_delete":false,"product_type":"c1","uid":1812807,"ip_address":"","ucode":"51C8212BE06364","user_header":"https://static001.geekbang.org/account/avatar/00/1b/a9/47/ded5da90.jpg","comment_is_top":false,"comment_ctime":1595059159,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1595059159","product_id":100039001,"comment_content":"现有项目中没有用mq，而是用轮询实现异步","like_count":0},{"had_liked":false,"id":233623,"user_name":"永旭","can_delete":false,"product_type":"c1","uid":1068819,"ip_address":"","ucode":"C9C74BE32C8F46","user_header":"https://static001.geekbang.org/account/avatar/00/10/4f/13/5197f8d2.jpg","comment_is_top":false,"comment_ctime":1594368701,"is_pvip":false,"replies":[{"id":"86243","content":"注册的vo，可以单独设计一个vo类，跟查询user信息的vo区分开","user_name":"作者回复","user_name_real":"王争","uid":"1190123","ctime":1594385087,"ip_address":"","comment_id":233623,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1594368701","product_id":100039001,"comment_content":"请问 VO 里不包含 密码, 那用户注册时 从前端获取的VO对象 转换成后端VO对象时 密码不会丢失吗 ??","like_count":0,"discussions":[{"author":{"id":1190123,"avatar":"https://static001.geekbang.org/account/avatar/00/12/28/eb/af064421.jpg","nickname":"王争","note":"","ucode":"2B611BE0E0EDD4","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":501111,"discussion_content":"注册的vo，可以单独设计一个vo类，跟查询user信息的vo区分开","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1594385087,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":229695,"user_name":"王瑞强","can_delete":false,"product_type":"c1","uid":1829090,"ip_address":"","ucode":"DEE4EB5E23433F","user_header":"https://static001.geekbang.org/account/avatar/00/1b/e8/e2/2bcaef68.jpg","comment_is_top":false,"comment_ctime":1593100925,"is_pvip":false,"replies":[{"id":"84962","content":"嗯嗯 可以<br>","user_name":"作者回复","user_name_real":"王争","uid":"1190123","ctime":1593309282,"ip_address":"","comment_id":229695,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1593100925","product_id":100039001,"comment_content":"积分明细表里面是不是需要记录一下积分兑换，扣除积分的规则id","like_count":0,"discussions":[{"author":{"id":1190123,"avatar":"https://static001.geekbang.org/account/avatar/00/12/28/eb/af064421.jpg","nickname":"王争","note":"","ucode":"2B611BE0E0EDD4","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":499595,"discussion_content":"嗯嗯 可以\n","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1593309282,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":224990,"user_name":"李德政","can_delete":false,"product_type":"c1","uid":1023885,"ip_address":"","ucode":"3AC49F5671485C","user_header":"https://static001.geekbang.org/account/avatar/00/0f/9f/8d/d725d32c.jpg","comment_is_top":false,"comment_ctime":1591610407,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1591610407","product_id":100039001,"comment_content":"老师对MVC的设计思想和优缺点阐释的非常清晰，深有体会！这是我看过介绍MVC的最全面的文章","like_count":0},{"had_liked":false,"id":222889,"user_name":"thinkmore","can_delete":false,"product_type":"c1","uid":1137647,"ip_address":"","ucode":"8FC3414685165C","user_header":"https://static001.geekbang.org/account/avatar/00/11/5b/ef/ab462610.jpg","comment_is_top":false,"comment_ctime":1590940278,"is_pvip":false,"replies":[{"id":"87060","content":"是的，都要转换","user_name":"作者回复","user_name_real":"王争","uid":"1190123","ctime":1595207247,"ip_address":"","comment_id":222889,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1590940278","product_id":100039001,"comment_content":"从下层往上层传递需要转换，那么上层往下层传递也用同样的转换吗？","like_count":0,"discussions":[{"author":{"id":1190123,"avatar":"https://static001.geekbang.org/account/avatar/00/12/28/eb/af064421.jpg","nickname":"王争","note":"","ucode":"2B611BE0E0EDD4","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":496947,"discussion_content":"是的，都要转换","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1595207247,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":222792,"user_name":"zhou","can_delete":false,"product_type":"c1","uid":1087243,"ip_address":"","ucode":"E1CE8575B3F106","user_header":"https://static001.geekbang.org/account/avatar/00/10/97/0b/a943bcb3.jpg","comment_is_top":false,"comment_ctime":1590913085,"is_pvip":false,"replies":[{"id":"87061","content":"type在另一个表中维护，event表中","user_name":"作者回复","user_name_real":"王争","uid":"1190123","ctime":1595207458,"ip_address":"","comment_id":222792,"utype":1}],"discussion_count":1,"race_medal":3,"score":"1590913085","product_id":100039001,"comment_content":"表中的event_id是否应该还要有个类型 不同的表如果用自增是否会通过event_id无法区分","like_count":0,"discussions":[{"author":{"id":1190123,"avatar":"https://static001.geekbang.org/account/avatar/00/12/28/eb/af064421.jpg","nickname":"王争","note":"","ucode":"2B611BE0E0EDD4","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":496919,"discussion_content":"type在另一个表中维护，event表中","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1595207458,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":222052,"user_name":"少年锦时","can_delete":false,"product_type":"c1","uid":1313379,"ip_address":"","ucode":"70E2CFF88A0ACB","user_header":"https://static001.geekbang.org/account/avatar/00/14/0a/63/165b0d40.jpg","comment_is_top":false,"comment_ctime":1590664409,"is_pvip":false,"replies":[{"id":"87063","content":"确实不需要，直接实现类就够了。","user_name":"作者回复","user_name_real":"王争","uid":"1190123","ctime":1595207497,"ip_address":"","comment_id":222052,"utype":1}],"discussion_count":2,"race_medal":0,"score":"1590664409","product_id":100039001,"comment_content":"如果Repository 层不写接口直接写一个实现类，Service直接使用该实现类。<br>这个实现类内部逻辑有改动（入参和返回值不变），Service也不会受到影响呀。<br>请问，这种情况为什么还要定义接口呢","like_count":0,"discussions":[{"author":{"id":1190123,"avatar":"https://static001.geekbang.org/account/avatar/00/12/28/eb/af064421.jpg","nickname":"王争","note":"","ucode":"2B611BE0E0EDD4","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":496649,"discussion_content":"确实不需要，直接实现类就够了。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1595207497,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1707561,"avatar":"https://static001.geekbang.org/account/avatar/00/1a/0e/29/6c8034e3.jpg","nickname":"double mu","note":"","ucode":"62F82999EDDA56","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":298383,"discussion_content":"service的单元测试，依赖repo的实现？repo抽象一个接口，可以基于这个接口规范mock一个供service测试。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1597285614,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":221682,"user_name":"王昊哲","can_delete":false,"product_type":"c1","uid":1698557,"ip_address":"","ucode":"AA2F4499BF6865","user_header":"https://static001.geekbang.org/account/avatar/00/19/ea/fd/89d3d0b5.jpg","comment_is_top":false,"comment_ctime":1590565940,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1590565940","product_id":100039001,"comment_content":"又重新复习了下，有个重要问题是这里的模块划分，数据库设计，接口设计应该属于系统设计，前面的13和14章的面向对象分析与设计应该属于 详细设计，应该是在系统设计之后进行，不知道这样理解是否正确呢？？","like_count":0},{"had_liked":false,"id":220059,"user_name":"张晋 🇨🇳","can_delete":false,"product_type":"c1","uid":2002268,"ip_address":"","ucode":"DC20FB284DB730","user_header":"https://static001.geekbang.org/account/avatar/00/1e/8d/5c/a3e67232.jpg","comment_is_top":false,"comment_ctime":1590145888,"is_pvip":true,"discussion_count":0,"race_medal":0,"score":"1590145888","product_id":100039001,"comment_content":"第一个问题我觉得要看channel和event是否有关联。如果有关联那就保存一个字段就好了，其次这个关联字段是必要的，因为不管是channel还是event都与积分存在1对多的关系，所以最佳实践就是在积分表中关联对应的字段。<br>第二个问题，我认为判定是否单一职责可以试试两个功能是否可以拆分开，可以发现查询新生成的id是没法单独实现的，既没有再次被调用的价值。所以查询新生成的id不是一个职责。所以不违背单一职责原则。","like_count":0},{"had_liked":false,"id":219863,"user_name":"Hurt","can_delete":false,"product_type":"c1","uid":1050946,"ip_address":"","ucode":"DCE7428CCF08EF","user_header":"https://static001.geekbang.org/account/avatar/00/10/09/42/1f762b72.jpg","comment_is_top":false,"comment_ctime":1590111759,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1590111759","product_id":100039001,"comment_content":"争哥 我想问问 积分兑换的规则 放在那里呢  是每个规则 自己定义自己的类 在于积分系统交互吗","like_count":0},{"had_liked":false,"id":218953,"user_name":"scmath","can_delete":false,"product_type":"c1","uid":1149022,"ip_address":"","ucode":"641023BB246C29","user_header":"https://static001.geekbang.org/account/avatar/00/11/88/5e/7c76f422.jpg","comment_is_top":false,"comment_ctime":1589902409,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1589902409","product_id":100039001,"comment_content":"VO、BO、Entity从减少耦合，层次清楚的角度考虑，是需要独立定义的。可以通过组合和继承来复用代码。<br>这篇实战感觉带回了现实，用数据和方法分开的贫血对象模式、","like_count":0},{"had_liked":false,"id":218615,"user_name":"scmath","can_delete":false,"product_type":"c1","uid":1149022,"ip_address":"","ucode":"641023BB246C29","user_header":"https://static001.geekbang.org/account/avatar/00/11/88/5e/7c76f422.jpg","comment_is_top":false,"comment_ctime":1589846082,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1589846082","product_id":100039001,"comment_content":"分层首先要确定每层的职责，<br>1.controller层是业务处理第一阶段，转换数据格式(JSON2entity)、校验权限、转换数据对象(跨领域实体拆分后调用service层的方法)，是简单的业务拆分和聚合层。<br>2.service层是repository的拆分聚合层，service层关注的业务粒度小于controller层的粒度，但不是提供单表的CRUD，是有业务规则的，比如HTTPpost时判断数据是否存在，是否允许删除，插入A表一条数据时还必须插入B表一条数据，都在service层拆分业务逻辑。HTTPget需要返回多个表的数据在service层调用多个repository层的多个对象聚合数据。也是业务组装层。<br>3.repository层提供对象的原子操作，对象是否存在，对象是否可以删除，把对象map到数据库表，不要受数据限制。<br>controller提供跨领域的装配(拆分聚合)，service提供领域内的装配(拆分)，repository提供对象的原子操作。<br><br>","like_count":0},{"had_liked":false,"id":215770,"user_name":"Magic","can_delete":false,"product_type":"c1","uid":1272047,"ip_address":"","ucode":"FD9CEDAA419EB0","user_header":"https://static001.geekbang.org/account/avatar/00/13/68/ef/6264ca3d.jpg","comment_is_top":false,"comment_ctime":1589100148,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1589100148","product_id":100039001,"comment_content":"思考题1：我认为合理。下层系统不要包含上层系统的业务逻辑是为了防止下层系统实现耦合业务，这里数据库表中包含了上层系统的event_id,channel_id仅仅只是落地保存而已，并不会用起参与积分系统的实现，因此我认为是合理的","like_count":0},{"had_liked":false,"id":213812,"user_name":"huanyehappy","can_delete":false,"product_type":"c1","uid":1603969,"ip_address":"","ucode":"0A5372104B7EBE","user_header":"https://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTLiaWKn5ibqO92ic7tzWrXEoZUuduaoRIiaf2icT7E1ia9ViaE2U8Tas9IgFhkpFXicKUHTdqVUPmHauS7XRg/132","comment_is_top":false,"comment_ctime":1588567198,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1588567198","product_id":100039001,"comment_content":"我们可以将公共的字段定义在父类中，让 VO、BO、Entity 都继承这个父类，各自只定义特有的字段。","like_count":0},{"had_liked":false,"id":209468,"user_name":"未来小娃","can_delete":false,"product_type":"c1","uid":1047329,"ip_address":"","ucode":"477D166EBB6B70","user_header":"https://static001.geekbang.org/account/avatar/00/0f/fb/21/d017438c.jpg","comment_is_top":false,"comment_ctime":1587554239,"is_pvip":true,"discussion_count":0,"race_medal":0,"score":"1587554239","product_id":100039001,"comment_content":"【设计模式笔记25】20200422<br>MVC分层我记得最重要的隔离关注点，每层就负责不同模块的事了，各司其责，面向接口编程，代码上满足高内聚松耦合的特点。进而联想到一个问题是，不要为了分层而分层，做业务做产品可以小步快跑，先实现一个MVP，然后逐步迭代，迭代过程中自然就会遇到代码复用问题、可读性、扩展性等问题，我们学习设计模式是术，设计原则和思想才是道，深入理解了道才能熟练运用术。工具和技巧都是可以现拿现用的，但是如果没有形成思维体系和意识就根本无法运用。因为你不知道你不知道的事物，自然就无法为你所用。","like_count":0},{"had_liked":false,"id":202889,"user_name":"KK","can_delete":false,"product_type":"c1","uid":1324863,"ip_address":"","ucode":"FFC31A3FE3A285","user_header":"https://static001.geekbang.org/account/avatar/00/14/37/3f/a9127a73.jpg","comment_is_top":false,"comment_ctime":1586080160,"is_pvip":false,"discussion_count":0,"race_medal":1,"score":"1586080160","product_id":100039001,"comment_content":"感觉作者把“基于接口而非实现编程”这个概念讲混了都。这里的“接口”到底是一个编程语言的中的语法特性接口还是实际的API接口？感觉这个概念在不同的文章中的含义不一样，都是都是在说“基于接口而非实现编程”的原则。","like_count":0},{"had_liked":false,"id":202012,"user_name":"小迪姐姐","can_delete":false,"product_type":"c1","uid":1806970,"ip_address":"","ucode":"9C4BDC625795E1","user_header":"https://static001.geekbang.org/account/avatar/00/1b/92/7a/189b17af.jpg","comment_is_top":false,"comment_ctime":1585887382,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1585887382","product_id":100039001,"comment_content":"课堂讨论个人看法：<br>1. 下层依赖了上层业务，但程度不严重，应该只是做了字段的存储&#47;透传，并没有在积分系统里理解&#47;解析event_id&#47;channel_id字段，所以没太大问题。如果想彻底摆脱依赖，其实可以拆成两个模块，一个积分模块&#47;表，一个积分id+订单id绑定模块&#47;表，但会为上层带来复杂度、性能、数据一致性的问题。<br>2. 违背了单一职责，目的是为了性能优化。<br><br>1与2本质是一件事，都是牺牲了一定的特性，来优化另一些特性。个人理解的架构设计，就是在各项指标当中寻求平衡。","like_count":0},{"had_liked":false,"id":201651,"user_name":"肖臧","can_delete":false,"product_type":"c1","uid":1047733,"ip_address":"","ucode":"4FAC9FF54DD6A0","user_header":"https://static001.geekbang.org/account/avatar/00/0f/fc/b5/ac717737.jpg","comment_is_top":false,"comment_ctime":1585816824,"is_pvip":false,"discussion_count":1,"race_medal":0,"score":"1585816824","product_id":100039001,"comment_content":"光有一个积分交易表不完整吧，每次消费积分的时候都得查一遍总积分够不够，这个交易一致性怎么保证，一个账号同时只能一个设备在线？对于这个账号而言，就没有并发交易了？","like_count":0,"discussions":[{"author":{"id":1744062,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/DYAIOgq83eq69BUSktQUY0dhQIoFxSAic0r3ElUUUL1uFtpFnKSpCAJYEsOfibU3Ja701L8UmbrPVS2ZAIreRLtA/132","nickname":"Liscoal","note":"","ucode":"8A6A0DBD60847F","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":262723,"discussion_content":"总积分可以基于明细表做缓存，比如存在Redis中. 并发交易即使同一个账号也可能存在啊，不只是多设备。这个得通过业务代码制定好策略再通过加事务锁等操作来保证一致性.","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1589122563,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":194974,"user_name":"永旭","can_delete":false,"product_type":"c1","uid":1068819,"ip_address":"","ucode":"C9C74BE32C8F46","user_header":"https://static001.geekbang.org/account/avatar/00/10/4f/13/5197f8d2.jpg","comment_is_top":false,"comment_ctime":1585125130,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1585125130","product_id":100039001,"comment_content":"能补充下DTO的存在价值和与vo,bo的区别吗 ?","like_count":0},{"had_liked":false,"id":189585,"user_name":"小明","can_delete":false,"product_type":"c1","uid":1625618,"ip_address":"","ucode":"5A0357E9849226","user_header":"https://static001.geekbang.org/account/avatar/00/18/ce/12/1488e361.jpg","comment_is_top":false,"comment_ctime":1584531872,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1584531872","product_id":100039001,"comment_content":"有种恍然大悟的感觉 平时在用的东西蕴含了这么多的原则 是得多思考呀","like_count":0},{"had_liked":false,"id":187051,"user_name":"咕咕噜噜","can_delete":false,"product_type":"c1","uid":1905357,"ip_address":"","ucode":"E9045BF11FAB7C","user_header":"https://static001.geekbang.org/account/avatar/00/1d/12/cd/55e25527.jpg","comment_is_top":false,"comment_ctime":1584001204,"is_pvip":false,"discussion_count":2,"race_medal":0,"score":"1584001204","product_id":100039001,"comment_content":"个人观点:1. Vo层可以完全用map代替，减少类创建，省去命名的麻烦。2. beanutil之类的工具是毒瘤，严重影响代码阅读性，还不如一个字段一个字段的copy。仅代表个人观点","like_count":0,"discussions":[{"author":{"id":2087237,"avatar":"","nickname":"王老师","note":"","ucode":"BD098F49CD3D15","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":295003,"discussion_content":"map可读性不高","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1596067840,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1622696,"avatar":"https://static001.geekbang.org/account/avatar/00/18/c2/a8/f3f8f5d2.jpg","nickname":"一格状语","note":"","ucode":"EBA9ED5F97416D","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":413667,"discussion_content":"一个一个copy不累吗？几十个字段","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1636538166,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":184030,"user_name":"一区","can_delete":false,"product_type":"c1","uid":1793770,"ip_address":"","ucode":"B5142A6276E490","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/a2mRI7BYncHCL6QWfibe7g7MWc70fSsqQibu7o9PcHjicYwo5dSnAoUN75HDDRz4GXWJdpWw59yJsMwFv3t7zSiaJQ/132","comment_is_top":false,"comment_ctime":1583208192,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1583208192","product_id":100039001,"comment_content":"仓储层调用数据库到底要不要用skect *? 如果用了，不符合数据库的原则。如果不用，又让仓储层带有业务属性了。该怎么解决这个问题呢？","like_count":0},{"had_liked":false,"id":181972,"user_name":"Heaven","can_delete":false,"product_type":"c1","uid":1694207,"ip_address":"","ucode":"FA33FBCC66C911","user_header":"https://static001.geekbang.org/account/avatar/00/19/d9/ff/b23018a6.jpg","comment_is_top":false,"comment_ctime":1582685870,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1582685870","product_id":100039001,"comment_content":"对于问题1,我认为 credit_transaction中包含上层模块的数据,虽然违背了下游系统不应该包含上游系统的设计思路.但是,如果我们不包含这个字段,很有可能在查询过程,需要查询各个消费事件的名称,详情等,需要我们反过来到各个模块中根据积分中的id查询事件,更加麻烦<br>对于问题2,我认为是违反了单一职责原则,但是无可厚非,因为原则的使用要贴合实际,比如在问题1中,上游模块需要记录积分明细的id,这就需要我们在新增后返回一个积分明细的id,虽然违反了单一职责原则,但是符合接口隔离原则,可以使用","like_count":0},{"had_liked":false,"id":180059,"user_name":"M","can_delete":false,"product_type":"c1","uid":1810576,"ip_address":"","ucode":"06F26E1D62E9C9","user_header":"https://wx.qlogo.cn/mmopen/vi_32/eLNeJNaEkwGSK7xvtamMibVLMy2MpbIqX3iaEhT7JtSnTRMRTwZ2j4HX7WAapiashbiaBDVriaXKSP0Oeic6ZAEVEXag/132","comment_is_top":false,"comment_ctime":1582176179,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1582176179","product_id":100039001,"comment_content":"1，event_id会记录订单id，评论id，那如果我根据明细id怎么查这条明细来自于订单、评论呢？这个要怎么区分呢？","like_count":0},{"had_liked":false,"id":180032,"user_name":"fomy","can_delete":false,"product_type":"c1","uid":1125834,"ip_address":"","ucode":"CD87EA03B1F327","user_header":"https://static001.geekbang.org/account/avatar/00/11/2d/ca/02b0e397.jpg","comment_is_top":false,"comment_ctime":1582168910,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1582168910","product_id":100039001,"comment_content":"老师，系统分为三层架构（Controller层、Service层和DAO层）是不是和传统MVC架构不同，是否可以认为三层架构就是MVC架构呢？","like_count":0},{"had_liked":false,"id":179734,"user_name":"DFighting","can_delete":false,"product_type":"c1","uid":1233193,"ip_address":"","ucode":"F3BA2426FF8582","user_header":"https://static001.geekbang.org/account/avatar/00/12/d1/29/1b1234ed.jpg","comment_is_top":false,"comment_ctime":1582085173,"is_pvip":true,"discussion_count":0,"race_medal":0,"score":"1582085173","product_id":100039001,"comment_content":"下层系统尽量不要涉及到太多的上层业务信息这个原则是没问题的，但像eventId这类只会存在于代码层次的业务信息，只能算是一种冗余，但我们可以用它来进行溯源，从数据的角度来查看业务的流转，当系统大了，那就会很有用处！","like_count":0},{"had_liked":false,"id":179365,"user_name":"不记年","can_delete":false,"product_type":"c1","uid":1045945,"ip_address":"","ucode":"287E40C68356DC","user_header":"https://static001.geekbang.org/account/avatar/00/0f/f5/b9/888fe350.jpg","comment_is_top":false,"comment_ctime":1581991082,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1581991082","product_id":100039001,"comment_content":"1. event_id 如果将语义换成增加&#47;减少 即可<br>   channel_id确实使得底层系统耦合上层系统，但是从业务角度上讲是强关联的，如果上层系统单独维护channel_id与积分明细的关系的话，会造成系统总体复杂度上升，性能下降等缺点，权衡之后还是将channel_id保留在积分明细表中为好。<br>2. 返回id并不违反最小知识原则，因为上层系统作为创建者可以知道积分明细的id","like_count":0},{"had_liked":false,"id":178063,"user_name":"逝水","can_delete":false,"product_type":"c1","uid":1005788,"ip_address":"","ucode":"33C269F158C652","user_header":"https://static001.geekbang.org/account/avatar/00/0f/58/dc/7334e6ef.jpg","comment_is_top":false,"comment_ctime":1581581050,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1581581050","product_id":100039001,"comment_content":"表的设计没问题，但就一张表使用起来不太方便。每次消费积分，就需要拉取该用户的大量记录进行计算。<br>如果增加用户余额表，消费积分的操作就会变得简单。但由于积分有效期的不同，就会带来余额表如何更新的问题。","like_count":0},{"had_liked":false,"id":177346,"user_name":"否极泰来","can_delete":false,"product_type":"c1","uid":1439355,"ip_address":"","ucode":"C249173266251A","user_header":"https://static001.geekbang.org/account/avatar/00/15/f6/7b/b6abcbbe.jpg","comment_is_top":false,"comment_ctime":1581350679,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1581350679","product_id":100039001,"comment_content":"一、我觉得不影响因为存的是ID是为了后期需要知道这条是从哪里来的，又是去什么地方的。<br>二、拆分两个接口是为了应对后期的复杂性，加积分不涉及到并发问题，但是减积分就涉及到了需要做一些处理，例如加锁来解决","like_count":0},{"had_liked":false,"id":173367,"user_name":"Geek_41d472","can_delete":false,"product_type":"c1","uid":1247965,"ip_address":"","ucode":"DEC2B6329460CF","user_header":"https://static001.geekbang.org/account/avatar/00/13/0a/dd/88fa7b52.jpg","comment_is_top":false,"comment_ctime":1579512450,"is_pvip":false,"replies":[{"id":"67730","content":"因为实战的代码稍微有点复杂，看代码本来就费劲，不认真看，肯定会吃力","user_name":"作者回复","user_name_real":"王争","uid":"1190123","ctime":1580115495,"ip_address":"","comment_id":173367,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1579512450","product_id":100039001,"comment_content":"为何感觉理论看的很明白，反而实战看的有点一脸懵逼了","like_count":0,"discussions":[{"author":{"id":1190123,"avatar":"https://static001.geekbang.org/account/avatar/00/12/28/eb/af064421.jpg","nickname":"王争","note":"","ucode":"2B611BE0E0EDD4","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":482049,"discussion_content":"因为实战的代码稍微有点复杂，看代码本来就费劲，不认真看，肯定会吃力","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1580115495,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":172625,"user_name":"刘学习来学习","can_delete":false,"product_type":"c1","uid":1464013,"ip_address":"","ucode":"5078B1EC8D8A66","user_header":"https://static001.geekbang.org/account/avatar/00/16/56/cd/0add8290.jpg","comment_is_top":false,"comment_ctime":1579237531,"is_pvip":false,"replies":[{"id":"67743","content":"我个人觉得没必要","user_name":"作者回复","user_name_real":"王争","uid":"1190123","ctime":1580118553,"ip_address":"","comment_id":172625,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1579237531","product_id":100039001,"comment_content":"service层接口设计时有必要对每个模型拆分为读写两个接口么","like_count":0,"discussions":[{"author":{"id":1190123,"avatar":"https://static001.geekbang.org/account/avatar/00/12/28/eb/af064421.jpg","nickname":"王争","note":"","ucode":"2B611BE0E0EDD4","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":481795,"discussion_content":"我个人觉得没必要","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1580118553,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":172618,"user_name":"刘学习来学习","can_delete":false,"product_type":"c1","uid":1464013,"ip_address":"","ucode":"5078B1EC8D8A66","user_header":"https://static001.geekbang.org/account/avatar/00/16/56/cd/0add8290.jpg","comment_is_top":false,"comment_ctime":1579236825,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1579236825","product_id":100039001,"comment_content":"争哥，最近迷惑一个场景，对于更新或者查询借口参数如何设计，如果封装成一个对象，调用房每次都要构建一个对象，如果拆成参数，那么更新接口如果不想更新该字段，调用方自己就要手动设置为null，纠结中，望指点","like_count":0},{"had_liked":false,"id":172493,"user_name":"Jessica","can_delete":false,"product_type":"c1","uid":1084877,"ip_address":"","ucode":"9FC7E9BD3FE9F1","user_header":"https://static001.geekbang.org/account/avatar/00/10/8d/cd/b6bdc1b2.jpg","comment_is_top":false,"comment_ctime":1579189969,"is_pvip":false,"discussion_count":1,"race_medal":0,"score":"1579189969","product_id":100039001,"comment_content":"老师，你好！<br>我们在项目中在使用MVC三层架构时遇到了问题，请老师帮忙解答一下。<br>1、MVC三层架构中，查询接口和修改接口都有请求参数和返回参数，我们目前项目中会分别定义查询的request和resonse，修改的request和response，这个和VO之间的关系是什么呢？在项目中直接用VO承担修改对象的request和查询对象的response角色可以吗？<br>2、MVC三层架构中每次有VO到BO，BO到entity的转化，因此写一个公共的类封装to方法，每个controller层和service层都调用这个方法，这种实现方式是否合理呢？或者更进一步，直接写一个BaseService类，把vo2bo和boFromEntity这两个方法封装一下，所有的service层的类继承这个BaseService类，这样所有的service层方法不需要关心转换逻辑，这种方式是否合理？<br>谢谢！","like_count":0,"discussions":[{"author":{"id":1744062,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/DYAIOgq83eq69BUSktQUY0dhQIoFxSAic0r3ElUUUL1uFtpFnKSpCAJYEsOfibU3Ja701L8UmbrPVS2ZAIreRLtA/132","nickname":"Liscoal","note":"","ucode":"8A6A0DBD60847F","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":262747,"discussion_content":"1.同一个接口Request和Response都可以定义自己的VO对象，输入和输出是两个不同的维度。VO对象存在的意义之一就是为了更方便的与第三方进行交互(比如前端).在request中，最终查询数据库必然是entity对象,而在response中则是返回VO对象。\n2.我个人不太推荐这种方式,因为本身就有各种工具(比如 BeanUtils、Dozer)可以对不同的对象间进行复制.这是松耦合的，你可以基于自己的需求再对工具进行进一步封装。如果放到BaseService通过继承来实现,耦合性会增强，对未来的维护和拓展不利","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1589123536,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":172031,"user_name":"helloworld","can_delete":false,"product_type":"c1","uid":1015754,"ip_address":"","ucode":"00DF2FEC58D2E6","user_header":"https://static001.geekbang.org/account/avatar/00/0f/7f/ca/ea85bfdd.jpg","comment_is_top":false,"comment_ctime":1579075071,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1579075071","product_id":100039001,"comment_content":"2. 在实际的开发中经常遇到文中所提到的问题：vo，bo，entity是否可以通用一个（个人倾向于分开定义，因为可以确保语义明确）、如果分开定义的话得用到工具类进行属性值的拷贝（一直担心这里的数据拷贝有损失性能，课程中老师已经说了这部分的性能损失可以忽略不计）<br>3. 老师列举出的分层的意思的5点可以作为面试时的标准回答：<br>分层能起到代码复用的作用<br>分层能起到隔离变化的作用<br>分层能起到隔离关注点的作用<br>分层能提高代码的可测试性<br>分层能应对系统的复杂性","like_count":0},{"had_liked":false,"id":170770,"user_name":"quietwater","can_delete":false,"product_type":"c1","uid":1055029,"ip_address":"","ucode":"C25E2CD356D3F9","user_header":"https://static001.geekbang.org/account/avatar/00/10/19/35/be8372be.jpg","comment_is_top":false,"comment_ctime":1578711064,"is_pvip":true,"discussion_count":0,"race_medal":0,"score":"1578711064","product_id":100039001,"comment_content":"上节课中，我们讲到，下层系统不要包含太多上层系统的业务信息。但在今天的数据库设计中，积分明细表中 credit_transaction 中包含 event_id，channel_id 这些跟上层业务相关的字段，那这样的设计是否合理呢？<br>也可以把event_id，channel_id这些跟上层业务相关的字段放到关系表中，关系表由上层业务维护，这样就符合设计原则了。至于如何取舍，感觉如果是业务访问跨进程要有关系表，进程内没有关系表比较好，毕竟还在一个进程中。<br>我们经常说，修改和查询不要耦合在一个接口中，要分成两个接口来做。赚取积分和消费积分接口返回积分明细 ID，这样的接口设计是否违背单一职责原则呢？是不是返回 void 或者 boolean 类型更合理呢？<br>必须返回id，很可能马上还要通过id查询详情。而且id是命令操作的结果，应该返回。","like_count":0},{"had_liked":false,"id":169643,"user_name":"Just do it","can_delete":false,"product_type":"c1","uid":1390286,"ip_address":"","ucode":"70C3F8F9707325","user_header":"https://static001.geekbang.org/account/avatar/00/15/36/ce/5c958ff9.jpg","comment_is_top":false,"comment_ctime":1578396434,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1578396434","product_id":100039001,"comment_content":"查询总积分明细，还是查询全部积分明细。 总积分应该是统计概念， 但是，从接口返回值看这个接口是查询全部积分明细。","like_count":0},{"had_liked":false,"id":169642,"user_name":"Just do it","can_delete":false,"product_type":"c1","uid":1390286,"ip_address":"","ucode":"70C3F8F9707325","user_header":"https://static001.geekbang.org/account/avatar/00/15/36/ce/5c958ff9.jpg","comment_is_top":false,"comment_ctime":1578396214,"is_pvip":false,"replies":[{"id":"65948","content":"是的，算是一个冗余字段吧，有个更好的设计思路吗？","user_name":"作者回复","user_name_real":"王争","uid":"1190123","ctime":1578489262,"ip_address":"","comment_id":169642,"utype":1}],"discussion_count":2,"race_medal":0,"score":"1578396214","product_id":100039001,"comment_content":"消费积分接口的参数中是不是可以不需要积分过去时间？","like_count":0,"discussions":[{"author":{"id":1190123,"avatar":"https://static001.geekbang.org/account/avatar/00/12/28/eb/af064421.jpg","nickname":"王争","note":"","ucode":"2B611BE0E0EDD4","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":480652,"discussion_content":"是的，算是一个冗余字段吧，有个更好的设计思路吗？","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1578489262,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1390286,"avatar":"https://static001.geekbang.org/account/avatar/00/15/36/ce/5c958ff9.jpg","nickname":"Just do it","note":"","ucode":"70C3F8F9707325","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":133546,"discussion_content":"老师，消费积分的过期时间应该是永不过期的。\n按照目前数据库表的设计，我觉的积分消费业务实现起来还有挺复杂。\n因为，这个表中引起用户积分值变化的字段有：积分过期时间。消费积分。\n消费时在数据库增加一条数据，只能体现总积分的变化。没体现出消费的是最近将要过期的积分.","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1578970835,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":168618,"user_name":"落叶飞逝的恋","can_delete":false,"product_type":"c1","uid":1046429,"ip_address":"","ucode":"F9A95DB28BCF1E","user_header":"https://static001.geekbang.org/account/avatar/00/0f/f7/9d/be04b331.jpg","comment_is_top":false,"comment_ctime":1578124772,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1578124772","product_id":100039001,"comment_content":"课堂讨论第一题：其实event_id，channel_id 相对于是下层与上层的枢纽带，可以通过这些字段进行正向、逆向推导出业务场景。<br>第二题：需要根据业务系统的需要，若系统只需要告知用户增加积分或者消费成功，也可以返回boolean","like_count":0},{"had_liked":false,"id":168162,"user_name":"ismind","can_delete":false,"product_type":"c1","uid":1138710,"ip_address":"","ucode":"7AADD673ED3BC4","user_header":"https://static001.geekbang.org/account/avatar/00/11/60/16/d1dd4972.jpg","comment_is_top":false,"comment_ctime":1578023184,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1578023184","product_id":100039001,"comment_content":"1、这样的设计是否合理呢？<br>答：下层系统不要包含太多上层的业务信息，但不代表不包含。<br>如果去掉event_id，channel_id ，那么这张表只能表示当前积分的剩余、何时发生了改变，<br>那么就很难知道积分是通过何种方式发生了改变。<br>后期如果需求变动，只有单一的id似乎很难满足，就可能考虑增加字段了。<br>所以这里的设计还是合理的。<br>2，答：<br>这里与第18讲里的课后思考题是一个类似的问题，java.util.concurent的AtomicInteger的getAndIncrement()，<br>所以，这里的设计并不违背，如果需要，再增加void或者boolean类型就可以了。<br>","like_count":0},{"had_liked":false,"id":168065,"user_name":"DigDeeply","can_delete":false,"product_type":"c1","uid":1239008,"ip_address":"","ucode":"113F4D755A1FEC","user_header":"https://static001.geekbang.org/account/avatar/00/12/e7/e0/33521e13.jpg","comment_is_top":false,"comment_ctime":1578010228,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1578010228","product_id":100039001,"comment_content":"作业：<br>1. 合理。虽然明细表包含了上层的内容，有一些冗余，但是包含的也仅仅是id，而不是具体的内容，业务的变化一般也不会导致这块跟着变化，还是比较稳定的。另外，争哥也说了，不要为了设计而设计，需要权衡，我们的目的是为了更好的应对业务需求，而不是炫技。<br>2. 从业务需求上来说，是符合单一职责的，上层业务做完积分的增减操作后，还是需要获取明细的id来做记录的。","like_count":0},{"had_liked":false,"id":167853,"user_name":"程序员人生","can_delete":false,"product_type":"c1","uid":1113668,"ip_address":"","ucode":"C5C5073D89AAA2","user_header":"https://static001.geekbang.org/account/avatar/00/10/fe/44/3e3040ac.jpg","comment_is_top":false,"comment_ctime":1577951219,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1577951219","product_id":100039001,"comment_content":"为什么要分mvc三层开发？这个面试题好，看起来简单，实则一点不简单。估计很多人会觉得，我们就是这么开发的呀，没有为什么","like_count":0},{"had_liked":false,"id":167780,"user_name":"zs阿帅","can_delete":false,"product_type":"c1","uid":1141173,"ip_address":"","ucode":"07A54AE7F1CAFF","user_header":"https://static001.geekbang.org/account/avatar/00/11/69/b5/1e1731cc.jpg","comment_is_top":false,"comment_ctime":1577933153,"is_pvip":false,"replies":[{"id":"65266","content":"没大看懂你说的😂","user_name":"作者回复","user_name_real":"王争","uid":"1190123","ctime":1578010334,"ip_address":"","comment_id":167780,"utype":1}],"discussion_count":2,"race_medal":0,"score":"1577933153","product_id":100039001,"comment_content":"如果是创建或者是更新需要传入的Object叫什么呢？ RequestO&#47;UpdateO吗","like_count":0,"discussions":[{"author":{"id":1190123,"avatar":"https://static001.geekbang.org/account/avatar/00/12/28/eb/af064421.jpg","nickname":"王争","note":"","ucode":"2B611BE0E0EDD4","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":479988,"discussion_content":"没大看懂你说的😂","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1578010334,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1611025,"avatar":"https://static001.geekbang.org/account/avatar/00/18/95/11/eb431e52.jpg","nickname":"沈康","note":"","ucode":"02AFA50738AB8E","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":115222,"discussion_content":"entity表对象","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1577984913,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":167514,"user_name":"番茄炒西红柿","can_delete":false,"product_type":"c1","uid":1690242,"ip_address":"","ucode":"13F47BABAB2110","user_header":"https://static001.geekbang.org/account/avatar/00/19/ca/82/85f6a1a2.jpg","comment_is_top":false,"comment_ctime":1577846756,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1577846756","product_id":100039001,"comment_content":"其实我还想问一mvc同层互调的问题，之前我有跟同事说竟让不要同层互调，一来调用链不清楚，二来可能有循环引用的风险。我同事反驳说同层互调是调用了另一个service中的服务，如果写在controller层则把业务逻辑放到controller上，不合适，如果在写在Repository层则变成复杂的操作，也不算合适。突然想到一个问题，假如一个domian是一个复杂类，他自生的service逻辑涉及很多其他domian类的逻辑，这样这个类的service我觉的调用同层service是很正常的，他自己其实又承当了聚合的工作，这样是否合适？","like_count":0},{"had_liked":false,"id":167310,"user_name":"小伟","can_delete":false,"product_type":"c1","uid":1359701,"ip_address":"","ucode":"124953423491E2","user_header":"https://static001.geekbang.org/account/avatar/00/14/bf/55/198c6104.jpg","comment_is_top":false,"comment_ctime":1577760623,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1577760623","product_id":100039001,"comment_content":"课后问题试答：<br>1. 低层数据包含高层数据有其合理性，可方便关联其他业务操作记录。如有洁癖，可用桥表，但会多join一次，特别是分布式或分库分表时的join更有性能和一致性问题，且冗余的字段都是主键，不会变更，故是更好的方式。综上，形式上违反了设计原则，但实际上好用。<br>个人观点，更好的办法是设置一个统一业务变更号，如bcn（business change number），可串联一组操作的业务记录。以课后问题一为例，credit_transaction记录bcn，单独有张表记录bcn与event_id、channel_id等的关系，这样上下层数据就解耦了，都只依赖bcn。<br>2. 积分修改后返回最新积分明细或余额是常见业务场景，实现中可分别定义积分修改接口和查询接口，在facade定义新方法组合这两个接口，这样就符合了原则并解耦了。repository层还是尽量不要互调或弄一个大方法，尽量职责单一。","like_count":0},{"had_liked":false,"id":167293,"user_name":"小建","can_delete":false,"product_type":"c1","uid":1647247,"ip_address":"","ucode":"C9781DF8F79112","user_header":"https://static001.geekbang.org/account/avatar/00/19/22/8f/22e9c74b.jpg","comment_is_top":false,"comment_ctime":1577757468,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1577757468","product_id":100039001,"comment_content":"面向对象设计的本质：将合适的代码放在合适的类中 系统设计的本质：将合适的功能放在合适的模块中","like_count":0},{"had_liked":false,"id":167098,"user_name":"Ken张云忠","can_delete":false,"product_type":"c1","uid":1134288,"ip_address":"","ucode":"D0BAC9FC17DE2B","user_header":"https://static001.geekbang.org/account/avatar/00/11/4e/d0/d8a5f720.jpg","comment_is_top":false,"comment_ctime":1577691181,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1577691181","product_id":100039001,"comment_content":"1.上节课中，我们讲到，下层系统不要包含太多上层系统的业务信息。但在今天的数据库设计中，积分明细表中 credit_transaction 中包含 event_id，channel_id 这些跟上层业务相关的字段，那这样的设计是否合理呢？<br>合理.这里只是包含了必要的上层系统的业务信息,没有包含太多,积分系统需要维护积分数据的变化记录信息,倘若没有记录积分变化的渠道id和事件id将无法找到该条数据对应的积分变动事件.<br>2.我们经常说，修改和查询不要耦合在一个接口中，要分成两个接口来做。赚取积分和消费积分接口返回积分明细 ID，这样的接口设计是否违背单一职责原则呢？是不是返回 void 或者 boolean 类型更合理呢？<br>如果只是简单的单体系统且不与外部进行交互,返回void或者boolean也是合理的,由积分系统维护积分明细列表的查询功能足够了.但如果是需要供外部系统使用的积分系统,上层系统配置了不同的积分规则,产生了不同规则的积分变化数据,为了方便该上层业务系统查询具体的积分明细就需要记录积分明细id,这时返回void或者boolean就不合适了.","like_count":0},{"had_liked":false,"id":166917,"user_name":"Frank","can_delete":false,"product_type":"c1","uid":1018370,"ip_address":"","ucode":"7A488CC6FE15E7","user_header":"https://static001.geekbang.org/account/avatar/00/0f/8a/02/828938c9.jpg","comment_is_top":false,"comment_ctime":1577630301,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1577630301","product_id":100039001,"comment_content":"今天通过代码简单实现了这篇文章的内容。针对课堂讨论，个人理解如下：<br>1. 积分明细表中 credit_transaction 中包含 event_id，channel_id 这些跟上层业务相关的字段。如果放在上层业务系统，那么业务系统需要自己维护积分信息，对于上层系统来说这好像是一个无关的东西，且是自己不可控的。另外如果积分系统需要做统计各个业务的积分数据，那就不好办了。我觉得部分上层系统的相关字段是放到积分系统比较合适的。虽然有一定的维护成本，但应该是可接受的。<br>2. 对于“修改和查询不要耦合在一个接口中”我觉得在业务比较简单的情况下放到一个接口中即可，这样体现了代码的内聚性。如果业务比较简单，将其拆分成两个接口，提高了维护成本。如果后期随着业务需求迭代，如修改的需求越来越多，可考虑将其拆分。“赚取积分和消费积分接口返回积分明细 ID，这样的接口设计是否违背单一职责原则呢？是不是返回 void 或者 boolean 类型更合理呢？”对于这个问题，我之前做接口是对于新增数据是返回一个boolean类型表示接口调用成功与否，此处返回id，个人理解为上层系统做业务铺垫，可能上层系统调用完接口后需要一个id做后续的业务逻辑处理。","like_count":0},{"had_liked":false,"id":166900,"user_name":"Geek_342489","can_delete":false,"product_type":"c1","uid":1477359,"ip_address":"","ucode":"40610664021607","user_header":"https://static001.geekbang.org/account/avatar/00/16/8a/ef/ac2937ac.jpg","comment_is_top":false,"comment_ctime":1577627310,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1577627310","product_id":100039001,"comment_content":"想到最近工作中遇到的一个外部 api 接口升级的问题，以后项目中在调用外部 api 的时候一定要对这个 api 接口中的方法重新建个 service 类封装一下，并将其参数和返回值封装，这样如果换了新的 api，我们只需要改这个封装的类，否则代码中全局一搜，几十个 service 类都用到了 api 中的方法，改起来真的很恶心，测试更是想吐","like_count":0},{"had_liked":false,"id":166856,"user_name":"逍遥思","can_delete":false,"product_type":"c1","uid":1015512,"ip_address":"","ucode":"340F05C786730F","user_header":"https://static001.geekbang.org/account/avatar/00/0f/7e/d8/92a98fb6.jpg","comment_is_top":false,"comment_ctime":1577615977,"is_pvip":false,"replies":[{"id":"64825","content":"三层中的repository就是处理数据持久化的 你的意思是客户端没有涉及数据持久化吧 那就不需要了","user_name":"作者回复","user_name_real":"王争","uid":"1190123","ctime":1577666089,"ip_address":"","comment_id":166856,"utype":1}],"discussion_count":2,"race_medal":0,"score":"1577615977","product_id":100039001,"comment_content":"如果是涉及到数据持久化的客户端，有一定的复杂度，是否有必要分三层呢？","like_count":0,"discussions":[{"author":{"id":1190123,"avatar":"https://static001.geekbang.org/account/avatar/00/12/28/eb/af064421.jpg","nickname":"王争","note":"","ucode":"2B611BE0E0EDD4","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":479654,"discussion_content":"三层中的repository就是处理数据持久化的 你的意思是客户端没有涉及数据持久化吧 那就不需要了","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1577666089,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1015512,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/7e/d8/92a98fb6.jpg","nickname":"逍遥思","note":"","ucode":"340F05C786730F","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":109186,"discussion_content":"（似乎没有用户回复作者的机制？）\n回复小争哥：客户端涉及数据持久化，所以也可以分三层吧？","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1577672622,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":166823,"user_name":"xuanyuan","can_delete":false,"product_type":"c1","uid":1113737,"ip_address":"","ucode":"1EC79B9372868F","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTI2icbib62icXtibTkThtyRksbuJLoTLMts7zook2S30MiaBtbz0f5JskwYicwqXkhpYfvCpuYkcvPTibEaQ/132","comment_is_top":false,"comment_ctime":1577606720,"is_pvip":false,"replies":[{"id":"64856","content":"可以直接放到repo层","user_name":"作者回复","user_name_real":"王争","uid":"1190123","ctime":1577669807,"ip_address":"","comment_id":166823,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1577606720","product_id":100039001,"comment_content":"如果要加缓存呢？如何对数据入库前要做加解密呢？是不是在service和repostory层之间加一个代理层，这样方便在入库前做一些处理。而这些不需要也不应该在service层做","like_count":0,"discussions":[{"author":{"id":1190123,"avatar":"https://static001.geekbang.org/account/avatar/00/12/28/eb/af064421.jpg","nickname":"王争","note":"","ucode":"2B611BE0E0EDD4","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":479639,"discussion_content":"可以直接放到repo层","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1577669807,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":166757,"user_name":"志振爱咋滴咋滴","can_delete":false,"product_type":"c1","uid":1237624,"ip_address":"","ucode":"E7A5049920C101","user_header":"https://static001.geekbang.org/account/avatar/00/12/e2/78/9241b7b2.jpg","comment_is_top":false,"comment_ctime":1577588951,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1577588951","product_id":100039001,"comment_content":"1.相关联的一些冗余数据是方便之后的数据统计和查询，是有必要的，否则又是要分表，有多余的统计消耗和一致性问题<br>2.大多数时候赚取和消费都伴随着再一次的数据查询，所以有必要返回对应的id方便后续的查询，所以说设计原则有时候也还是要遵循相对应的业务场景去考虑，而不是单纯的跟着设计原则走。","like_count":0},{"had_liked":false,"id":166727,"user_name":"Geek_cb0c9c","can_delete":false,"product_type":"c1","uid":1681908,"ip_address":"","ucode":"7DDF1030449534","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTJ5ib2OMvRrnG4bPzCTE28Ryvc0VpatV0rAoja1C6ymon0mgZPCQwFOda8ickd9Ghmk5Ik5ia57G2z3Q/132","comment_is_top":false,"comment_ctime":1577579114,"is_pvip":false,"replies":[{"id":"64828","content":"说的没错 也有反过来转化的情况","user_name":"作者回复","user_name_real":"王争","uid":"1190123","ctime":1577666402,"ip_address":"","comment_id":166727,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1577579114","product_id":100039001,"comment_content":"是不是除了entity到bo，bo到vo的转换，还有vo到bo，bo到entity的转换？比如在做商品新增的时候，我经常在controller中用商品类对象作为参数映射前端的表单数据，然后service和repository中同样用对象参数去操作，大家在做类似的功能的时候是怎么处理的呢？","like_count":0,"discussions":[{"author":{"id":1190123,"avatar":"https://static001.geekbang.org/account/avatar/00/12/28/eb/af064421.jpg","nickname":"王争","note":"","ucode":"2B611BE0E0EDD4","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":479604,"discussion_content":"说的没错 也有反过来转化的情况","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1577666402,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":166670,"user_name":"lmdcx","can_delete":false,"product_type":"c1","uid":1334409,"ip_address":"","ucode":"F2CDD0091ADFD7","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTIjRETqRjvLESLDZkNTjIiaSibtNYBaS1o8WMUicOFn3ycF3Mgh6LRJibqSBjVBjiaO2ibW0gHkafATb21A/132","comment_is_top":false,"comment_ctime":1577541032,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1577541032","product_id":100039001,"comment_content":"看大家留言都十分精彩，我就只能发表感慨了：<br>「如果一个功能的修改或添加，经常要跨团队、跨项目、跨系统才能完成，那说明模块划分的不够合理，职责不够清晰，耦合过于严重。」这是一个非常需要重视的点，因为微服务一个非常棒的优点就是系统划分与组织架构对齐<br>其实还有个观点可能和大家的不太一样哈：就是接口的稳定性其实是和重用程度相关的吧<br>此处的接口和Java的接口还不太一样，没有继承性","like_count":0},{"had_liked":false,"id":166606,"user_name":"小刀","can_delete":false,"product_type":"c1","uid":1351063,"ip_address":"","ucode":"94DF8C45E09E42","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/iaByN5IfYbE9jMtWrtTDXtPEIHeV77KW1p7ZkiasiaGgA50VXaibo4fbp5ib2JkFP3iaIe4AUudLibufkEIofu5euCNHg/132","comment_is_top":false,"comment_ctime":1577517960,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1577517960","product_id":100039001,"comment_content":"冗余业务字段<br>返回ID,方便查询","like_count":0},{"had_liked":false,"id":166522,"user_name":"东风吹梦丶易散","can_delete":false,"product_type":"c1","uid":1125909,"ip_address":"","ucode":"0CB8D4C04505D4","user_header":"https://static001.geekbang.org/account/avatar/00/11/2e/15/f1cd59c9.jpg","comment_is_top":false,"comment_ctime":1577463689,"is_pvip":false,"replies":[{"id":"64830","content":"根据业务来定呢 看业务含义 ","user_name":"作者回复","user_name_real":"王争","uid":"1190123","ctime":1577666476,"ip_address":"","comment_id":166522,"utype":1}],"discussion_count":2,"race_medal":0,"score":"1577463689","product_id":100039001,"comment_content":"请问下老师多表联合查询时Repository返回的对象应该定义为什么","like_count":0,"discussions":[{"author":{"id":1190123,"avatar":"https://static001.geekbang.org/account/avatar/00/12/28/eb/af064421.jpg","nickname":"王争","note":"","ucode":"2B611BE0E0EDD4","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":479525,"discussion_content":"根据业务来定呢 看业务含义 ","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1577666476,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1125909,"avatar":"https://static001.geekbang.org/account/avatar/00/11/2e/15/f1cd59c9.jpg","nickname":"东风吹梦丶易散","note":"","ucode":"0CB8D4C04505D4","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":109060,"discussion_content":"个人的认知是Entity应该对应一张表的字段，多表查询Entity无法满足时是不是可以直接返回BO","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1577666717,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":166435,"user_name":"桂城老托尼","can_delete":false,"product_type":"c1","uid":1306032,"ip_address":"","ucode":"139E4B8EE88B79","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTJcxSpNMqwqyicMvdOSr9ic0p1ABiauHnv7g7YQVSJuoHPoQbYDu3YzdpgmSAk2KricUBQ5yibWBWIq75w/132","comment_is_top":false,"comment_ctime":1577447414,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1577447414","product_id":100039001,"comment_content":"其实挺期待作者在评论区和大家交流的，通过交流才能理解更深入，也能举一反三。","like_count":0},{"had_liked":false,"id":166416,"user_name":"刘大明","can_delete":false,"product_type":"c1","uid":1035081,"ip_address":"","ucode":"83C063FBD9BF2B","user_header":"https://static001.geekbang.org/account/avatar/00/0f/cb/49/0b9ffc8e.jpg","comment_is_top":false,"comment_ctime":1577444492,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1577444492","product_id":100039001,"comment_content":"问题1.针对当前业务场景来说渠道id和事件id确实是有必要的。如其他同学的回答，要做幂等性。如果字段拆分过细的，sql查询效率可能会降低。<br>问题2.修改和查询放在一个接口里面确实不符合单一职业原则。但是对于当前的业务来说还是有必要的。就像其他同学说的，你付款之后有小票。","like_count":0},{"had_liked":false,"id":166257,"user_name":"一名小学生","can_delete":false,"product_type":"c1","uid":1137292,"ip_address":"","ucode":"5C73082E6B6370","user_header":"https://static001.geekbang.org/account/avatar/00/11/5a/8c/1fec5fa2.jpg","comment_is_top":false,"comment_ctime":1577425555,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1577425555","product_id":100039001,"comment_content":"打卡～<br>修改和查询不要耦合在一个接口这个“原则”也要看场景吧，说到底也是粒度的问题。对于赚取积分和消费积分下，往往修改和查询都是同时，比如你赚取和消费完积分，就需要把结果查询出来展示给用户，所以从我觉得它从功能上看不违反单一职责","like_count":0},{"had_liked":false,"id":166194,"user_name":"Fancier","can_delete":false,"product_type":"c1","uid":1450364,"ip_address":"","ucode":"04CBB84F4DC554","user_header":"https://static001.geekbang.org/account/avatar/00/16/21/7c/aae7abad.jpg","comment_is_top":false,"comment_ctime":1577414084,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1577414084","product_id":100039001,"comment_content":"都是合理的","like_count":0},{"had_liked":false,"id":166180,"user_name":"守拙","can_delete":false,"product_type":"c1","uid":1738326,"ip_address":"","ucode":"F594B2DA3F6D4F","user_header":"https://static001.geekbang.org/account/avatar/00/1a/86/56/509535da.jpg","comment_is_top":false,"comment_ctime":1577411570,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1577411570","product_id":100039001,"comment_content":"课堂讨论Answer:<br><br>1. 是合理的.如果credit_transaction表不包含event_id channel_id, 查询时下层系统(积分模块)和上层系统(营销模块)在业务上的交互就不可避免.<br><br><br><br>2. 接口返回明细id或boolean都不违背单一职责原则. 业务如果需要明细id,返回明细id是更好的做法.否则返回明细id,boolean都可以.","like_count":0},{"had_liked":false,"id":166175,"user_name":"Rain","can_delete":false,"product_type":"c1","uid":1238221,"ip_address":"","ucode":"6A270D922A3B9D","user_header":"https://static001.geekbang.org/account/avatar/00/12/e4/cd/5363c8fa.jpg","comment_is_top":false,"comment_ctime":1577410978,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1577410978","product_id":100039001,"comment_content":"两个问题的答案都是依实际使用场景而设计。<br><br>1. Trans id 和 channel id 在这个场景中不属于下层引用上层信息，积分是跟这两项息息相关的。重点在于你的业务，查询时是否需要这两项信息，如果需要那就没必要设计成两个表，相反，如果查询积分明细的时候需求就是只需要显示在什么时间点积分变动了多少，这样的话也是不需要存两个表，都不显示你存他干啥？<br><br>2. 这个绝对是跟实际使用场景相关的，如果每次积分变动都会有一个按钮，点击可以查看本次积分变动的详细情况，那么这个id 必须要返回，否则如果只是给个提示，可以是void.","like_count":0},{"had_liked":false,"id":166143,"user_name":"小晏子","can_delete":false,"product_type":"c1","uid":1132337,"ip_address":"","ucode":"3AAA6FB5ACB6AE","user_header":"https://static001.geekbang.org/account/avatar/00/11/47/31/f35367c8.jpg","comment_is_top":false,"comment_ctime":1577408925,"is_pvip":false,"discussion_count":0,"race_medal":1,"score":"1577408925","product_id":100039001,"comment_content":"课后思考：<br>1. 积分表包含event_id和channel_id是合理的，对于积分业务来讲，产生积分的事件和产生积分的渠道都是业务的一部分，都是需要根据积分表能查询到的。所以这种设计是合理的，是必须要这么做的。<br>2. 返回积分ID并不违反SRP，返回ID可以方便后面的查询。而且返回积分ID并没有给赚取积分消费积分增加额外的功能，没有破坏SRP。","like_count":0},{"had_liked":false,"id":166124,"user_name":"何妨","can_delete":false,"product_type":"c1","uid":1385377,"ip_address":"","ucode":"EC3983BFF7992A","user_header":"https://static001.geekbang.org/account/avatar/00/15/23/a1/b08f3ee7.jpg","comment_is_top":false,"comment_ctime":1577407590,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1577407590","product_id":100039001,"comment_content":"感谢王峥老师解答了我对 vo bo entity 的疑惑，系统做大之后这种分层的好处就显而易见了。对于接口耦合来说，接口本身是服务于业务的，设计原则指导代码设计，有时候刻板的完全遵守设计原则反而会增加系统的复杂性。","like_count":0},{"had_liked":false,"id":166119,"user_name":"再见孙悟空","can_delete":false,"product_type":"c1","uid":1025518,"ip_address":"","ucode":"57E12A2F9CD915","user_header":"https://static001.geekbang.org/account/avatar/00/0f/a5/ee/6bbac848.jpg","comment_is_top":false,"comment_ctime":1577406785,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1577406785","product_id":100039001,"comment_content":"第一个问题我觉得是合理的，如果不这么做，那么上层业务中每个赚取或者消费积分的地方都要关联积分的字段，会将积分的赚取和使用分散在各处，不方便维护，也违反了高内聚地耦合。<br><br>第二个问题，赚取或消费时返回 id 有一个好处是，可以立即使用，比如说赚取到积分后就可以不用刷新请求积分列表就能使用该积分。不知道理解对不对。","like_count":0},{"had_liked":false,"id":166121,"user_name":"桂城老托尼","can_delete":false,"product_type":"c1","uid":1306032,"ip_address":"","ucode":"139E4B8EE88B79","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTJcxSpNMqwqyicMvdOSr9ic0p1ABiauHnv7g7YQVSJuoHPoQbYDu3YzdpgmSAk2KricUBQ5yibWBWIq75w/132","comment_is_top":false,"comment_ctime":1577407256,"is_pvip":false,"discussion_count":13,"race_medal":0,"score":"834801062680","product_id":100039001,"comment_content":"感谢争哥分享。<br>个人觉得积分系统只有流水记录不太够，设想下消费积分场景，要完成扣积分的动作，没有积分余额表容易造成多扣，特别是针对羊毛党。当然上层系统，比如活动系统也可以做好幂等。<br>尝试回答下课后讨论<br>1. 保留上层应用id和channel完全符合设计原理，冗余业务信息方便日后做数据统计，沉淀数据资产反推营销策略迭代; 一次消费或赚取积分行为可能存在多次调用情况，方便幂等，不至于多次记账;方便业务系统查询某次赚取或消费的积分明细;暂时想到这么多。<br>2. 尽量不要返回void或boolean，有些业务需要反向关键积分流水id做单笔流水查询。<br>其实这两个讨论都类似于现实生活，去便利店买东西会给你小票，支付宝扫码付款会返回交易流水。都是为了方便真是场景解决“纠纷”(查询)用的。","like_count":195,"discussions":[{"author":{"id":1396951,"avatar":"https://static001.geekbang.org/account/avatar/00/15/50/d7/f82ed283.jpg","nickname":"辣么大","note":"","ucode":"AB308B6DCA0108","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":104224,"discussion_content":"针对一个问题：记录交易流水或者记录账户积分余额，我觉得是账户模型的两种设计方式：第一种类似Bitcoin的设计UXTO 模型 （Unspent Transaction output），第二种是类似我们银行账户，区块链里面ETH采用了这种设计方式。实际中都有普遍的应用，很难说哪种更好。","likes_number":15,"is_delete":false,"is_hidden":false,"ctime":1577417224,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":4,"child_discussions":[{"author":{"id":1334409,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTIjRETqRjvLESLDZkNTjIiaSibtNYBaS1o8WMUicOFn3ycF3Mgh6LRJibqSBjVBjiaO2ibW0gHkafATb21A/132","nickname":"lmdcx","note":"","ucode":"F2CDD0091ADFD7","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1396951,"avatar":"https://static001.geekbang.org/account/avatar/00/15/50/d7/f82ed283.jpg","nickname":"辣么大","note":"","ucode":"AB308B6DCA0108","race_medal":0,"user_type":1,"is_pvip":true},"discussion":{"id":106364,"discussion_content":"你为啥总是知道那么多，为什么？\n你不怕被枪毙吗？O(∩_∩)O~","likes_number":3,"is_delete":false,"is_hidden":false,"ctime":1577533754,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":104224,"ip_address":""},"score":106364,"extra":""},{"author":{"id":1396951,"avatar":"https://static001.geekbang.org/account/avatar/00/15/50/d7/f82ed283.jpg","nickname":"辣么大","note":"","ucode":"AB308B6DCA0108","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":1334409,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTIjRETqRjvLESLDZkNTjIiaSibtNYBaS1o8WMUicOFn3ycF3Mgh6LRJibqSBjVBjiaO2ibW0gHkafATb21A/132","nickname":"lmdcx","note":"","ucode":"F2CDD0091ADFD7","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":106440,"discussion_content":"biu~ biu~","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1577536868,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":106364,"ip_address":""},"score":106440,"extra":""},{"author":{"id":1831324,"avatar":"https://static001.geekbang.org/account/avatar/00/1b/f1/9c/cd12361d.jpg","nickname":"黑客时间","note":"","ucode":"7E22D76EECAC4D","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1396951,"avatar":"https://static001.geekbang.org/account/avatar/00/15/50/d7/f82ed283.jpg","nickname":"辣么大","note":"","ucode":"AB308B6DCA0108","race_medal":0,"user_type":1,"is_pvip":true},"discussion":{"id":215160,"discussion_content":"那在这个积分系统中哪个更好呢","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1585294739,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":104224,"ip_address":""},"score":215160,"extra":""}]},{"author":{"id":1507189,"avatar":"https://static001.geekbang.org/account/avatar/00/16/ff/75/9c1b2ece.jpg","nickname":"wind","note":"","ucode":"5EC77AEB18130E","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":106004,"discussion_content":"说得比较全了，插个楼：问题1，除了楼主列的几点，event_id，channel_id存在每一条流水中且不是多对多的，所以保存在同个表就OK。问题2：就算JDK提供的很多方法也这样用，所以肯定是合理的。修改和查询往往会同时使用，看成单一职责也OK的，不然也不好查询。另外表设计中是少了用户与积分的关联吗？","likes_number":4,"is_delete":false,"is_hidden":false,"ctime":1577505133,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1015754,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/7f/ca/ea85bfdd.jpg","nickname":"helloworld","note":"","ucode":"00DF2FEC58D2E6","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":587585,"discussion_content":"这个评论的答案简直稳的不要不要的","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1663157414,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":"北京"},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1392431,"avatar":"https://static001.geekbang.org/account/avatar/00/15/3f/2f/8513c4d3.jpg","nickname":"a(๑≖ิټ≖ิ)✌","note":"","ucode":"AEF9B5CA1605DF","race_medal":1,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":344512,"discussion_content":"沉淀数据资产反推营销策略迭代 是什么意思","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1611482265,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":1,"child_discussions":[{"author":{"id":1564544,"avatar":"https://static001.geekbang.org/account/avatar/00/17/df/80/5069bb27.jpg","nickname":"杨通","note":"","ucode":"C037B82EE04DBC","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1392431,"avatar":"https://static001.geekbang.org/account/avatar/00/15/3f/2f/8513c4d3.jpg","nickname":"a(๑≖ิټ≖ิ)✌","note":"","ucode":"AEF9B5CA1605DF","race_medal":1,"user_type":1,"is_pvip":false},"discussion":{"id":350691,"discussion_content":"有了数据就可以分析啊。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1613979828,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":344512,"ip_address":""},"score":350691,"extra":""}]},{"author":{"id":1905357,"avatar":"https://static001.geekbang.org/account/avatar/00/1d/12/cd/55e25527.jpg","nickname":"咕咕噜噜","note":"","ucode":"E9045BF11FAB7C","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":203120,"discussion_content":"我觉得应该满足目前业务的需求，追求最简单的设计。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1584000956,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":1,"child_discussions":[{"author":{"id":1306032,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTJcxSpNMqwqyicMvdOSr9ic0p1ABiauHnv7g7YQVSJuoHPoQbYDu3YzdpgmSAk2KricUBQ5yibWBWIq75w/132","nickname":"桂城老托尼","note":"","ucode":"139E4B8EE88B79","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1905357,"avatar":"https://static001.geekbang.org/account/avatar/00/1d/12/cd/55e25527.jpg","nickname":"咕咕噜噜","note":"","ucode":"E9045BF11FAB7C","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":203680,"discussion_content":"我个人认为技术同学眼光要领先业务一代半","likes_number":7,"is_delete":false,"is_hidden":false,"ctime":1584064880,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":203120,"ip_address":""},"score":203680,"extra":""}]},{"author":{"id":1715988,"avatar":"https://static001.geekbang.org/account/avatar/00/1a/2f/14/840d0925.jpg","nickname":"Varus","note":"","ucode":"B9CB88C248BD93","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":127176,"discussion_content":"第二个好像用到前面一个设计里面地数据一致性，因此得返回数据","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1578570193,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":1,"child_discussions":[{"author":{"id":1227840,"avatar":"https://static001.geekbang.org/account/avatar/00/12/bc/40/2279cfb5.jpg","nickname":"大力水手Jerry","note":"","ucode":"E4A6C71E275DB5","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1715988,"avatar":"https://static001.geekbang.org/account/avatar/00/1a/2f/14/840d0925.jpg","nickname":"Varus","note":"","ucode":"B9CB88C248BD93","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":311329,"discussion_content":"我的第一感觉也是如此，但实际不是，对共享数据的并发场景才是你说的情况，这里只是单个用户，并不存在并发修改共享资源的情况。关键还是场景就是如此。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1602310043,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":127176,"ip_address":""},"score":311329,"extra":""}]}]},{"had_liked":false,"id":166111,"user_name":"李朝辉","can_delete":false,"product_type":"c1","uid":1152951,"ip_address":"","ucode":"8E4A4469A77A88","user_header":"https://static001.geekbang.org/account/avatar/00/11/97/b7/d5a83264.jpg","comment_is_top":false,"comment_ctime":1577406263,"is_pvip":false,"replies":[{"id":"65156","content":"说的挺对的","user_name":"作者回复","comment_id":166111,"uid":"1190123","ip_address":"","utype":1,"ctime":1577951952,"user_name_real":"王争"}],"discussion_count":2,"race_medal":0,"score":"310815051575","product_id":100039001,"comment_content":"课堂讨论1:<br>业务驱动的系统还是应该从业务的角度出发去做设计，这两个字段在积分明细查询中是不可或缺的，所以我认为是合理的。既然是不可或缺的，如果不记录在这张表中，就要记录在其他表中，或者查询不便，或者破坏内聚。<br>2.根据个人经验，insert操作的都是返回记录id，原因的个人观点是为调用方提供便利。还请老师解答","like_count":73},{"had_liked":false,"id":166300,"user_name":"杨杰","can_delete":false,"product_type":"c1","uid":1131823,"ip_address":"","ucode":"74817EA9499843","user_header":"https://static001.geekbang.org/account/avatar/00/11/45/2f/b0b0dd74.jpg","comment_is_top":false,"comment_ctime":1577434573,"is_pvip":false,"replies":[{"id":"65158","content":"是的 主要是对象转json的格式问题","user_name":"作者回复","comment_id":166300,"uid":"1190123","ip_address":"","utype":1,"ctime":1577952280,"user_name_real":"王争"}],"discussion_count":4,"race_medal":0,"score":"160491224525","product_id":100039001,"comment_content":"个人感觉：VO、BO、Entity 通过组合关系来复用这个类的代码不是特别好，尤其是VO。因为用组合的方式会增加返回数据的层次，这对前端来说是不是不不太友好？","like_count":37,"discussions":[{"author":{"id":2159460,"avatar":"https://thirdwx.qlogo.cn/mmopen/vi_32/dsZ5CFV7mCIKEn7YcVFJXksO201eeqsJXoT4EYNvcibAKNSWSQVZPbbRgPKraWqg6YnaaRlVoywic9MEsflicRDibQ/132","nickname":"潜龙勿用","note":"","ucode":"EEB8A6F3E4A1B8","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":547523,"discussion_content":"分层只是纵向的的，横向的还要模块化。我觉得就是分层和模块化最有效","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1642732723,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1043098,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/ea/9a/c324a7de.jpg","nickname":"加肥猫","note":"","ucode":"C31B7CF54296A5","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":397571,"discussion_content":"啥是合理？啥又是不合理呢？","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1632641748,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":166299,"user_name":"辣么大","can_delete":false,"product_type":"c1","uid":1396951,"ip_address":"","ucode":"AB308B6DCA0108","user_header":"https://static001.geekbang.org/account/avatar/00/15/50/d7/f82ed283.jpg","comment_is_top":false,"comment_ctime":1577434402,"is_pvip":true,"replies":[{"id":"63418","content":"应该吹毛求疵，我们fix去","user_name":"编辑回复","comment_id":166299,"uid":"1000473","ip_address":"","utype":2,"ctime":1577446023,"user_name_real":"郭蕾"}],"discussion_count":7,"race_medal":0,"score":"139016387874","product_id":100039001,"comment_content":"反馈一个文章朗读的小问题：音频3:00左右 facade设计模式 应该读做&#47;fə&#39;sɑ:d&#47; ，冯老师读的不是很准确。 ”吹毛求疵“，希望专栏做的更专业。","like_count":33,"discussions":[{"author":{"id":1015483,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/7e/bb/947c329a.jpg","nickname":"程序员小跃","note":"","ucode":"25BB96E0791A60","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":293497,"discussion_content":"一个team的水平很能带动个人的水平，我现在自己写的，都在刻意练习，刻意设计中","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1595559610,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":166248,"user_name":"Jxin","can_delete":false,"product_type":"c1","uid":1251111,"ip_address":"","ucode":"4C03928388C413","user_header":"https://static001.geekbang.org/account/avatar/00/13/17/27/ec30d30a.jpg","comment_is_top":false,"comment_ctime":1577423548,"is_pvip":false,"discussion_count":6,"race_medal":0,"score":"91771736764","product_id":100039001,"comment_content":"1.不符合一对上下游系统的设计要求，但适合当下业务场景的需求。  下游积分核心系统设计上不该持有事件和渠道字段，因为它不该去关心上游业务，事件或渠道与对应积分明细的关联应该由上游系统来维护，或则在上游系统和积分系统之间再加一层积分系统的业务层，用于维护这层关系（关于易复用性的中台思想）。当下的业务场景，积分的管理系统是有必要维护一份  事件渠道的值对象的。因为带有这个值对象，积分系统管理员才能不需要再多个系统中寻找积分增减关系，进而可以独立满足管理积分这件事的整个业务域。（事件和渠道只能作为值对象冗余在积分系统）。<br><br>2.不符合单一职责的限制，但满足当前业务场景的诉求。该接口做了增减积分和返回积分id两件事，且语义上并没有返回积分id的相关字眼，所以方法名定义也不明确。但是上游系统在变更积分后，需要获取积分id以作为上游系统变更事件与积分记录的关联key。而这个key只有在当前变更操作获得，所以就只能写这种语义不明且违反单一职责的方法。（让我来设计，我会把积分id的生成作为积分系统的一个外放接口，上游业务调用该接口获取id，记录关联关系，然后走mq推积分系统实现最终扣减。这样就可以规避上述这种无奈的场景）。","like_count":22,"discussions":[{"author":{"id":1178235,"avatar":"https://static001.geekbang.org/account/avatar/00/11/fa/7b/f89a398b.jpg","nickname":"Charles | 姜海龙","note":"","ucode":"17BA74D1684184","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":337040,"discussion_content":"哈哈","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1608778925,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":167347,"user_name":"斐波那契","can_delete":false,"product_type":"c1","uid":1464006,"ip_address":"","ucode":"85E2EBC01392B1","user_header":"https://static001.geekbang.org/account/avatar/00/16/56/c6/0b449bc6.jpg","comment_is_top":false,"comment_ctime":1577772884,"is_pvip":false,"replies":[{"id":"65133","content":"对于大部分业务系统来说 数据库是最耗时的 对象转化那点性能损失可以忽略","user_name":"作者回复","comment_id":167347,"uid":"1190123","ip_address":"","utype":1,"ctime":1577946130,"user_name_real":"王争"}],"discussion_count":12,"race_medal":0,"score":"83182151508","product_id":100039001,"comment_content":"老师 beanutils会不会性能不好 毕竟大量用到了反射 有没有代码不那么繁琐性能也比较好的方法","like_count":20,"discussions":[{"author":{"id":1256001,"avatar":"https://static001.geekbang.org/account/avatar/00/13/2a/41/6116db1b.jpg","nickname":"yz","note":"","ucode":"D646E3BDD795A2","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":261855,"discussion_content":"还是真活学活用啊，神经记忆法（一个关联一个）","likes_number":3,"is_delete":false,"is_hidden":false,"ctime":1589015584,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":1,"child_discussions":[{"author":{"id":1396951,"avatar":"https://static001.geekbang.org/account/avatar/00/15/50/d7/f82ed283.jpg","nickname":"辣么大","note":"","ucode":"AB308B6DCA0108","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":1256001,"avatar":"https://static001.geekbang.org/account/avatar/00/13/2a/41/6116db1b.jpg","nickname":"yz","note":"","ucode":"D646E3BDD795A2","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":261881,"discussion_content":"是呀，也发现学了很多，忘的也快，类比和建立链接是很好的trick","likes_number":2,"is_delete":false,"is_hidden":false,"ctime":1589018191,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":261855,"ip_address":""},"score":261881,"extra":""}]},{"author":{"id":1133194,"avatar":"https://static001.geekbang.org/account/avatar/00/11/4a/8a/c1069412.jpg","nickname":"makermade","note":"","ucode":"03386B90CB8F20","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":557663,"discussion_content":"robot operation system？","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1647919364,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":166114,"user_name":"黄林晴","can_delete":false,"product_type":"c1","uid":1362631,"ip_address":"","ucode":"B15C38AECDA88F","user_header":"https://static001.geekbang.org/account/avatar/00/14/ca/c7/00e544c2.jpg","comment_is_top":false,"comment_ctime":1577406469,"is_pvip":false,"replies":[{"id":"64839","content":"期望太高了 也不可能篇篇让你高潮 ","user_name":"作者回复","comment_id":166114,"uid":"1190123","ip_address":"","utype":1,"ctime":1577666950,"user_name_real":"王争"}],"discussion_count":5,"race_medal":0,"score":"61706948613","product_id":100039001,"comment_content":"打卡✔<br>难道是我膨胀了，实战的内容没有理论看的起劲","like_count":15,"discussions":[{"author":{"id":1905357,"avatar":"https://static001.geekbang.org/account/avatar/00/1d/12/cd/55e25527.jpg","nickname":"咕咕噜噜","note":"","ucode":"E9045BF11FAB7C","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":215637,"discussion_content":"不会吧，实战才是硬道理，理论再多也很空","likes_number":2,"is_delete":false,"is_hidden":false,"ctime":1585364154,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1190123,"avatar":"https://static001.geekbang.org/account/avatar/00/12/28/eb/af064421.jpg","nickname":"王争","note":"","ucode":"2B611BE0E0EDD4","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":479403,"discussion_content":"期望太高了 也不可能篇篇让你高潮 ","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1577666950,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1838042,"avatar":"https://static001.geekbang.org/account/avatar/00/1c/0b/da/34be57e8.jpg","nickname":"趣稚鬼👻","note":"","ucode":"8AE6776DCA8541","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":207171,"discussion_content":"灵魂同感","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1584461304,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1306032,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTJcxSpNMqwqyicMvdOSr9ic0p1ABiauHnv7g7YQVSJuoHPoQbYDu3YzdpgmSAk2KricUBQ5yibWBWIq75w/132","nickname":"桂城老托尼","note":"","ucode":"139E4B8EE88B79","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":104694,"discussion_content":"我最近才订阅，王争老师是不是没有在评论区和大家交流的习惯？","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1577447447,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":1,"child_discussions":[{"author":{"id":1334409,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTIjRETqRjvLESLDZkNTjIiaSibtNYBaS1o8WMUicOFn3ycF3Mgh6LRJibqSBjVBjiaO2ibW0gHkafATb21A/132","nickname":"lmdcx","note":"","ucode":"F2CDD0091ADFD7","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1306032,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTJcxSpNMqwqyicMvdOSr9ic0p1ABiauHnv7g7YQVSJuoHPoQbYDu3YzdpgmSAk2KricUBQ5yibWBWIq75w/132","nickname":"桂城老托尼","note":"","ucode":"139E4B8EE88B79","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":106469,"discussion_content":"有过交流，但是最近好像确实交流不多，估计是年底冲业绩呢吧O(∩_∩)O~（乱猜）","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1577537632,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":104694,"ip_address":""},"score":106469,"extra":""}]}]},{"had_liked":false,"id":166122,"user_name":"辣么大","can_delete":false,"product_type":"c1","uid":1396951,"ip_address":"","ucode":"AB308B6DCA0108","user_header":"https://static001.geekbang.org/account/avatar/00/15/50/d7/f82ed283.jpg","comment_is_top":false,"comment_ctime":1577407292,"is_pvip":true,"discussion_count":24,"race_medal":0,"score":"40232112956","product_id":100039001,"comment_content":"针对争哥的第一个问题，从设计角度来说不应该记录渠道和事件。从业务来说，必须记录交易的渠道和事件。基于这种妥协可以设计一张表。那是否也可以设计两张表？<br><br>积分交易表和明细表：<br>1、credit_transaction<br>trans_id<br>user_id<br>channel_id<br>event_id<br>create_time<br>2、积分明细表credit_detail，只记录积分加减<br>trans_id<br>credit (积分加减)<br>create_time<br>expire_time","like_count":9,"discussions":[{"author":{"id":1237399,"avatar":"https://static001.geekbang.org/account/avatar/00/12/e1/97/fec494f2.jpg","nickname":"大大。","note":"","ucode":"A6716E46264AC4","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":104081,"discussion_content":"要查看总积分，岂不是要全表查，然后计算，数据量大岂不是也是性能问题","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1577411475,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":2,"child_discussions":[{"author":{"id":1396951,"avatar":"https://static001.geekbang.org/account/avatar/00/15/50/d7/f82ed283.jpg","nickname":"辣么大","note":"","ucode":"AB308B6DCA0108","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":1237399,"avatar":"https://static001.geekbang.org/account/avatar/00/12/e1/97/fec494f2.jpg","nickname":"大大。","note":"","ucode":"A6716E46264AC4","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":104206,"discussion_content":"是的，你的担心有道理。什么时候该写成一个表，什么时候该拆成几张表，可否给些指导意见？","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1577416633,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":104081,"ip_address":""},"score":104206,"extra":""},{"author":{"id":1744116,"avatar":"https://static001.geekbang.org/account/avatar/00/1a/9c/f4/61b4876f.jpg","nickname":"兴","note":"","ucode":"B33F131FEED77F","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1396951,"avatar":"https://static001.geekbang.org/account/avatar/00/15/50/d7/f82ed283.jpg","nickname":"辣么大","note":"","ucode":"AB308B6DCA0108","race_medal":0,"user_type":1,"is_pvip":true},"discussion":{"id":107374,"discussion_content":"我所理解的和你差不多，上层业务记录event id等，底层积分只记录自己的变化，性能一般用缓存和水平切分来优化。\n1. 缓存，积分变更是则淘汰或更新缓存\n2. 按用户ID hash水平分表（大数据情况下）","likes_number":2,"is_delete":false,"is_hidden":false,"ctime":1577559687,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":104206,"ip_address":""},"score":107374,"extra":""}]},{"author":{"id":1256001,"avatar":"https://static001.geekbang.org/account/avatar/00/13/2a/41/6116db1b.jpg","nickname":"yz","note":"","ucode":"D646E3BDD795A2","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":104007,"discussion_content":"每期都有你 哈哈哈","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1577409263,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":1,"child_discussions":[{"author":{"id":1396951,"avatar":"https://static001.geekbang.org/account/avatar/00/15/50/d7/f82ed283.jpg","nickname":"辣么大","note":"","ucode":"AB308B6DCA0108","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":1256001,"avatar":"https://static001.geekbang.org/account/avatar/00/13/2a/41/6116db1b.jpg","nickname":"yz","note":"","ucode":"D646E3BDD795A2","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":104195,"discussion_content":"I am everywhere~","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1577416193,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":104007,"ip_address":""},"score":104195,"extra":""}]},{"author":{"id":1311236,"avatar":"https://static001.geekbang.org/account/avatar/00/14/02/04/a678be45.jpg","nickname":"batiwant","note":"","ucode":"F873D815CBC801","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":591880,"discussion_content":"个人觉得在一个表更合理一点：因为获取积分和消费积分 必定是需要某些操作才能触发；也就是eventid和channelid，积分明细表和eventid channelid是同频的操作，所以放在一张表里也是比较合理的。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1666886228,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":"广东"},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1095260,"avatar":"https://static001.geekbang.org/account/avatar/00/10/b6/5c/4e08e507.jpg","nickname":"长生殿","note":"","ucode":"9C00B6D3C437F6","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":369975,"discussion_content":"你的想法是对的，积分获取和兑换都是一种交易行为，需要分开处理的（具体可以看看置顶的解释）。至于拆分带来的数据库查询问题，是可以通过技术手段（比如分库分表）来解决的。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1619236925,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1323102,"avatar":"https://static001.geekbang.org/account/avatar/00/14/30/5e/c42bc33f.jpg","nickname":"Younger Ku","note":"","ucode":"D157DC38BDB515","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":305187,"discussion_content":"channelId:赚取或消费渠道ID\n这个字段该怎么理解呢？能否举个例子？\n消费积分接口传参expiredTime有什么意义呢？\n想看用户剩余积分岂不是要根据userId分组后对credit进行sum了？会不会出现结果是负值？","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1599811379,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1443663,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTIang00R9vkklnkFCLhzRysNfocr0sLnCdoZwOT3UkulAPefk5BDvd0PfIeQSODSQg1DjKWUmJOaA/132","nickname":"陈迎春","note":"","ucode":"2870BA6D6E5B1E","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":108619,"discussion_content":"大佬好，最近这两节关于mvc，我听的云里雾里，不知道没有代码可以配合着理解","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1577632606,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":5,"child_discussions":[{"author":{"id":1396951,"avatar":"https://static001.geekbang.org/account/avatar/00/15/50/d7/f82ed283.jpg","nickname":"辣么大","note":"","ucode":"AB308B6DCA0108","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":1443663,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTIang00R9vkklnkFCLhzRysNfocr0sLnCdoZwOT3UkulAPefk5BDvd0PfIeQSODSQg1DjKWUmJOaA/132","nickname":"陈迎春","note":"","ucode":"2870BA6D6E5B1E","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":108979,"discussion_content":"最近有点忙，看过几天有没有时间自己写一下。有时间的话python写原型能简单点。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1577661906,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":108619,"ip_address":""},"score":108979,"extra":""},{"author":{"id":1347955,"avatar":"https://static001.geekbang.org/account/avatar/00/14/91/73/c50fb3e8.jpg","nickname":"Jawn Weak","note":"","ucode":"15E4117A0C775D","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1396951,"avatar":"https://static001.geekbang.org/account/avatar/00/15/50/d7/f82ed283.jpg","nickname":"辣么大","note":"","ucode":"AB308B6DCA0108","race_medal":0,"user_type":1,"is_pvip":true},"discussion":{"id":109421,"discussion_content":"蹲点你的github了 ","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1577693081,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":108979,"ip_address":""},"score":109421,"extra":""},{"author":{"id":1443663,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTIang00R9vkklnkFCLhzRysNfocr0sLnCdoZwOT3UkulAPefk5BDvd0PfIeQSODSQg1DjKWUmJOaA/132","nickname":"陈迎春","note":"","ucode":"2870BA6D6E5B1E","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1396951,"avatar":"https://static001.geekbang.org/account/avatar/00/15/50/d7/f82ed283.jpg","nickname":"辣么大","note":"","ucode":"AB308B6DCA0108","race_medal":0,"user_type":1,"is_pvip":true},"discussion":{"id":111327,"discussion_content":"谢谢大佬","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1577791388,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":108979,"ip_address":""},"score":111327,"extra":""}]},{"author":{"id":1238221,"avatar":"https://static001.geekbang.org/account/avatar/00/12/e4/cd/5363c8fa.jpg","nickname":"Rain","note":"","ucode":"6A270D922A3B9D","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":104052,"discussion_content":"如果用户查询积分明细呢？两个表的设计就需要关键查询了。一旦数据量大，这个查询将会直接导致性能瓶颈。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1577410489,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":9,"child_discussions":[{"author":{"id":1396951,"avatar":"https://static001.geekbang.org/account/avatar/00/15/50/d7/f82ed283.jpg","nickname":"辣么大","note":"","ucode":"AB308B6DCA0108","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":1238221,"avatar":"https://static001.geekbang.org/account/avatar/00/12/e4/cd/5363c8fa.jpg","nickname":"Rain","note":"","ucode":"6A270D922A3B9D","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":104204,"discussion_content":"谢谢讨论！\n水平不行，没见过市面呀😂，没做过大系统，性能问题实际基本很少遇到过。你说的对，关联查询能少用就少用。一个表查询也会可能出现数量性能问题吧？","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1577416507,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":104052,"ip_address":""},"score":104204,"extra":""},{"author":{"id":1238221,"avatar":"https://static001.geekbang.org/account/avatar/00/12/e4/cd/5363c8fa.jpg","nickname":"Rain","note":"","ucode":"6A270D922A3B9D","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1396951,"avatar":"https://static001.geekbang.org/account/avatar/00/15/50/d7/f82ed283.jpg","nickname":"辣么大","note":"","ucode":"AB308B6DCA0108","race_medal":0,"user_type":1,"is_pvip":true},"discussion":{"id":104241,"discussion_content":"别这么说, 我们都是学习才来讨论的. 我觉得两个表格设计可能更符合数据库设计的范式要求, 但同时可能会影响到实际的性能. 举个例子, 系统共有 1 万个用户, 所有用户每天都来签到领积分, 然后每个用户每天都有一笔交易来赚取积分, 也就是说每个用户每天产生两条记录在 credit_transaction 表; 和两条记录在 credit_detail 表. 100 天后, 两表各有 200w 条记录. 假设我是其中一个用户, 我想查看我的积分变动情况, 我需要先去credit_transaction 找到所有跟我相关的行, 这个很快, 然后用每行中的 trans_id 去另外一个表的 200w 记录当中匹配 trans_id, 这个匹配的过程将是一个耗时操作, 尤其是多人同时对第二个表读取进行查询的时候; 相反, 如果设计到一个表中, 只需要保证 user_id 带上索引, 这个级别, 甚至 10w 用户产生的 2000w 条数据性能基本不会有问题, 而如果是两个表联合查询, 此时就变成了 从 2000 万条数据中进行匹配, 系统性能会随着运行时间以及用户量急剧下滑. 尤其是运行时间这个地方... 以上纯粹个人见解, 我是一个在目前做前台的曾经的后台小码农.","likes_number":15,"is_delete":false,"is_hidden":false,"ctime":1577418201,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":104204,"ip_address":""},"score":104241,"extra":""},{"author":{"id":1396951,"avatar":"https://static001.geekbang.org/account/avatar/00/15/50/d7/f82ed283.jpg","nickname":"辣么大","note":"","ucode":"AB308B6DCA0108","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":1238221,"avatar":"https://static001.geekbang.org/account/avatar/00/12/e4/cd/5363c8fa.jpg","nickname":"Rain","note":"","ucode":"6A270D922A3B9D","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":104254,"discussion_content":"优秀！太谦虚了，解释的很明白，仔细研究还有这么多门道，真是学习了。感谢🙏！","likes_number":2,"is_delete":false,"is_hidden":false,"ctime":1577419077,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":104241,"ip_address":""},"score":104254,"extra":""}]}]},{"had_liked":false,"id":169921,"user_name":"京京beaver","can_delete":false,"product_type":"c1","uid":1179056,"ip_address":"","ucode":"C21838D7CA7D6B","user_header":"https://static001.geekbang.org/account/avatar/00/11/fd/b0/e30fd916.jpg","comment_is_top":false,"comment_ctime":1578473455,"is_pvip":false,"discussion_count":1,"race_medal":0,"score":"35938211823","product_id":100039001,"comment_content":"第一个问题：合理。设计积分和金钱类的修改需要对账，不引入渠道id和事件id，无法与高层系统完成对账，是设计隐患，<br><br>第二个问题：不违反。积分明细 ID是本次事务执行成功的回执，是后续对账，发起重试，处理幂等的依据。属于正常返回值。如果只返回void或者boolean没有任何业务含义，存在安全隐患。","like_count":8},{"had_liked":false,"id":166245,"user_name":"胖子","can_delete":false,"product_type":"c1","uid":1037760,"ip_address":"","ucode":"E6371346288A87","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTLIuRQaZX70dsBg6khub2VPM1eQAP9IWRWxgOFed3ia4kXyNJInFRicWJ0ibf2YmLsOvJa1sGygGpmJg/132","comment_is_top":false,"comment_ctime":1577422646,"is_pvip":false,"replies":[{"id":"64836","content":"接口 controller层<br>数据库 repository<br>业务 service","user_name":"作者回复","comment_id":166245,"uid":"1190123","ip_address":"","utype":1,"ctime":1577666754,"user_name_real":"王争"}],"discussion_count":1,"race_medal":0,"score":"31642193718","product_id":100039001,"comment_content":"我有一个疑问：接口设计、数据库设计和业务模型设计如何对应或过渡到MVC分层？","like_count":7,"discussions":[{"author":{"id":1190123,"avatar":"https://static001.geekbang.org/account/avatar/00/12/28/eb/af064421.jpg","nickname":"王争","note":"","ucode":"2B611BE0E0EDD4","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":479456,"discussion_content":"接口 controller层\n数据库 repository\n业务 service","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1577666754,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":247157,"user_name":"郑大钱","can_delete":false,"product_type":"c1","uid":1503067,"ip_address":"","ucode":"114CF48056880E","user_header":"https://static001.geekbang.org/account/avatar/00/16/ef/5b/ff28088f.jpg","comment_is_top":false,"comment_ctime":1599619961,"is_pvip":false,"discussion_count":1,"race_medal":0,"score":"27369423737","product_id":100039001,"comment_content":"设计模式太多，想一次就用好是不现实的，我认为关键是要形成自己可迭代的套路(依稀记得被《代码大全》支配的恐惧)。<br>开始接收需求的时候，所有代码都写在ViewController里面，导致VC异常杂乱庞大，为了解决这个问题，了解了MVVM架构。今后的需求全都走MVVM架构，代码风格也出来了。在学习设计模式过程中，逐步解释先前的架构中用到的设计模式，或者优化不足的地方。<br>将成熟的设计模式内化为大脑的自动驾驶模式，减少认知负担，为新的学习腾出空间，这是我实践过的一个有效的学习编程的方式。","like_count":7,"discussions":[{"author":{"id":1015754,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/7f/ca/ea85bfdd.jpg","nickname":"helloworld","note":"","ucode":"00DF2FEC58D2E6","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":587586,"discussion_content":"这样的评论都属于经纬打击，稳","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1663157877,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":"北京"},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":167746,"user_name":"杨陆伟","can_delete":false,"product_type":"c1","uid":1108457,"ip_address":"","ucode":"3BC968447406EB","user_header":"https://static001.geekbang.org/account/avatar/00/10/e9/e9/1f95e422.jpg","comment_is_top":false,"comment_ctime":1577927208,"is_pvip":true,"replies":[{"id":"65092","content":"虽然有性能损耗 但可以忽略 影响不大","user_name":"作者回复","comment_id":167746,"uid":"1190123","ip_address":"","utype":1,"ctime":1577931928,"user_name_real":"王争"}],"discussion_count":7,"race_medal":0,"score":"23052763688","product_id":100039001,"comment_content":"VO、BO、Entity频繁的克隆、拷贝会不会引入性能问题，这点是怎么考虑的？谢谢","like_count":5,"discussions":[{"author":{"id":1190123,"avatar":"https://static001.geekbang.org/account/avatar/00/12/28/eb/af064421.jpg","nickname":"王争","note":"","ucode":"2B611BE0E0EDD4","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":479972,"discussion_content":"虽然有性能损耗 但可以忽略 影响不大","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1577931928,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1285986,"avatar":"https://static001.geekbang.org/account/avatar/00/13/9f/62/960eecc3.jpg","nickname":"夏天","note":"","ucode":"F29D56F9265751","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":556248,"discussion_content":"有个 Convert工具框架 可以生成set 代码 避免BeanUtil工具带来的性能损失","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1647263124,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1121758,"avatar":"https://static001.geekbang.org/account/avatar/00/11/1d/de/62bfa83f.jpg","nickname":"aoe","note":"","ucode":"1C6201EDB4E954","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":166576,"discussion_content":"极客时间-Java性能调优实战-《28 | 原型模式与享元模式：提升系统性能的利器》介绍了Java如何高效拷贝https://time.geekbang.org/column/article/109980","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1581413637,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":4,"child_discussions":[{"author":{"id":1123049,"avatar":"https://static001.geekbang.org/account/avatar/00/11/22/e9/32f5fa34.jpg","nickname":"QuincySx","note":"","ucode":"F33848E1A4AF26","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1121758,"avatar":"https://static001.geekbang.org/account/avatar/00/11/1d/de/62bfa83f.jpg","nickname":"aoe","note":"","ucode":"1C6201EDB4E954","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":265940,"discussion_content":"诶呀突然发现没法复制","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1589457237,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":166576,"ip_address":""},"score":265940,"extra":""},{"author":{"id":1121758,"avatar":"https://static001.geekbang.org/account/avatar/00/11/1d/de/62bfa83f.jpg","nickname":"aoe","note":"","ucode":"1C6201EDB4E954","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1123049,"avatar":"https://static001.geekbang.org/account/avatar/00/11/22/e9/32f5fa34.jpg","nickname":"QuincySx","note":"","ucode":"F33848E1A4AF26","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":267290,"discussion_content":"app上可以复制啊","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1589625595,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":265940,"ip_address":""},"score":267290,"extra":""},{"author":{"id":1123049,"avatar":"https://static001.geekbang.org/account/avatar/00/11/22/e9/32f5fa34.jpg","nickname":"QuincySx","note":"","ucode":"F33848E1A4AF26","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1121758,"avatar":"https://static001.geekbang.org/account/avatar/00/11/1d/de/62bfa83f.jpg","nickname":"aoe","note":"","ucode":"1C6201EDB4E954","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":268259,"discussion_content":"我这没反应，是不是 iOS 的问题。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1589757537,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":267290,"ip_address":""},"score":268259,"extra":""}]}]},{"had_liked":false,"id":166160,"user_name":"J.Smile","can_delete":false,"product_type":"c1","uid":1336475,"ip_address":"","ucode":"C4D98DFDBF7584","user_header":"https://static001.geekbang.org/account/avatar/00/14/64/9b/0b578b08.jpg","comment_is_top":false,"comment_ctime":1577409952,"is_pvip":false,"discussion_count":6,"race_medal":0,"score":"18757279136","product_id":100039001,"comment_content":"实际中没见过同时定义vo  bo entity的","like_count":4,"discussions":[{"author":{"id":1540520,"avatar":"https://static001.geekbang.org/account/avatar/00/17/81/a8/4b6c61ce.jpg","nickname":"Angus","note":"","ucode":"C336521BD8BA64","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":106209,"discussion_content":"比较多的是VO DTO","likes_number":2,"is_delete":false,"is_hidden":false,"ctime":1577522725,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":1,"child_discussions":[{"author":{"id":1448126,"avatar":"https://static001.geekbang.org/account/avatar/00/16/18/be/ad3127e0.jpg","nickname":"慕高迪","note":"","ucode":"EB1CB5EA4E3A90","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1540520,"avatar":"https://static001.geekbang.org/account/avatar/00/17/81/a8/4b6c61ce.jpg","nickname":"Angus","note":"","ucode":"C336521BD8BA64","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":282520,"discussion_content":"有时dto被当作bo使用，有时dto又被当作vo使用","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1592008110,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":106209,"ip_address":""},"score":282520,"extra":""}]},{"author":{"id":1637228,"avatar":"https://static001.geekbang.org/account/avatar/00/18/fb/6c/12fdc372.jpg","nickname":"迈向架构师","note":"","ucode":"2476594CF76001","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":387236,"discussion_content":"我们DTO是数据层，DO是业务层，VO是视图层","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1628065592,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":2347137,"avatar":"https://static001.geekbang.org/account/avatar/00/23/d0/81/d5c8e46e.jpg","nickname":"snake","note":"","ucode":"47BFFE4D048156","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":339616,"discussion_content":"我用的就是DTO和entity","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1609747232,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1580358,"avatar":"https://wx.qlogo.cn/mmopen/vi_32/ZMALpD4bKCVdsx8ymCC5Oo0oxibxIFGQzT6fP2B8MEgLGLktQRX4ictobkbcNBDTQibjoQNKBmWCKomNibWqHZ5kpg/132","nickname":"Long","note":"","ucode":"D85B99FD0C4B76","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":261211,"discussion_content":"开发用php,Entity见的比较多,vo,bo也没有见过","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1588946916,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1133194,"avatar":"https://static001.geekbang.org/account/avatar/00/11/4a/8a/c1069412.jpg","nickname":"makermade","note":"","ucode":"03386B90CB8F20","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":228242,"discussion_content":"多跳槽，总有一天会见到","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1586528691,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":166104,"user_name":"aya","can_delete":false,"product_type":"c1","uid":1325690,"ip_address":"","ucode":"F50E350DCF72D6","user_header":"https://static001.geekbang.org/account/avatar/00/14/3a/7a/a68f0ff8.jpg","comment_is_top":false,"comment_ctime":1577404966,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"18757274150","product_id":100039001,"comment_content":"1增加上层相关字段有利于出现问题时的排查工作，并且ods等系统在抽数据时也可以提供完整数据。<br>2不违背单一指责原则，赚取积分和消费积分的业务逻辑必然会伴随积分余额查询，业务上应属同一逻辑，拆分反而shi程序复杂。","like_count":4},{"had_liked":false,"id":233621,"user_name":"永旭","can_delete":false,"product_type":"c1","uid":1068819,"ip_address":"","ucode":"C9C74BE32C8F46","user_header":"https://static001.geekbang.org/account/avatar/00/10/4f/13/5197f8d2.jpg","comment_is_top":false,"comment_ctime":1594368601,"is_pvip":false,"replies":[{"id":"86244","content":"表示层=view层吧 ，不过，现在后端的这种controller+service+repo 已经不能完全对应到mvc三层了","user_name":"作者回复","comment_id":233621,"uid":"1190123","ip_address":"","utype":1,"ctime":1594385296,"user_name_real":"王争"}],"discussion_count":2,"race_medal":0,"score":"14479270489","product_id":100039001,"comment_content":"3层架构 和 MVC 不是 2中概念吗 ? <br>3层架构: 表示层, 业务层 , 数据访问层<br>MVC: model , view , controller <br>3层架构.表示层 = MVC.controller  + MVC.view  ?? ","like_count":3,"discussions":[{"author":{"id":1190123,"avatar":"https://static001.geekbang.org/account/avatar/00/12/28/eb/af064421.jpg","nickname":"王争","note":"","ucode":"2B611BE0E0EDD4","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":501110,"discussion_content":"表示层=view层吧 ，不过，现在后端的这种controller+service+repo 已经不能完全对应到mvc三层了","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1594385296,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":2358764,"avatar":"https://static001.geekbang.org/account/avatar/00/23/fd/ec/b68ffe72.jpg","nickname":"Bin","note":"","ucode":"AA606CC51BB3CB","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":338382,"discussion_content":"我也认为这是两种概念，MVC都是表示层（即此文中的控制层）的东西，其中的M对应此文中的VO。此文中的三层是表示层，业务层（领域层？），持久层（或者叫仓储层）。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1609252278,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":167803,"user_name":"林","can_delete":false,"product_type":"c1","uid":1079783,"ip_address":"","ucode":"BFB14F03283C70","user_header":"https://wx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTKY0SBAOch2S7wadCRFKTT5fBtXCvsa46svoTj2MWoQ9YRrujZuq4wEHjS9dCEzPcrWHNSYgUkNVw/0","comment_is_top":false,"comment_ctime":1577937327,"is_pvip":false,"replies":[{"id":"65167","content":"是个问题 我改下","user_name":"作者回复","comment_id":167803,"uid":"1190123","ip_address":"","utype":1,"ctime":1577955443,"user_name_real":"王争"}],"discussion_count":1,"race_medal":0,"score":"14462839215","product_id":100039001,"comment_content":"为什么积分明细表没有user_id字段，如何查询用户的可用积分","like_count":3,"discussions":[{"author":{"id":1190123,"avatar":"https://static001.geekbang.org/account/avatar/00/12/28/eb/af064421.jpg","nickname":"王争","note":"","ucode":"2B611BE0E0EDD4","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":480002,"discussion_content":"是个问题 我改下","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1577955443,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":166232,"user_name":"知行合一","can_delete":false,"product_type":"c1","uid":1521486,"ip_address":"","ucode":"2B8E634FC4CFB7","user_header":"https://static001.geekbang.org/account/avatar/00/17/37/4e/5c3153b2.jpg","comment_is_top":false,"comment_ctime":1577420228,"is_pvip":false,"discussion_count":1,"race_medal":0,"score":"14462322116","product_id":100039001,"comment_content":"争哥给出的是一个基础的积分系统案例，主要是从设计的角度来分析我们用到哪些原则和模式。真实场景的话肯定需要考虑高并发和大数据量的问题，那样的话可能需要单独出来积分账户表，存储积分余额，明细表需要分库分表。<br>针对问题一，我觉的很有必要，毕竟业务需要查询积分的来源和做幂等性检验。<br>问题二，这个主要看业务系统是否需要，大部分情况下我觉得是不需要的，业务系统增加积分或者消费积分就成了。需要的话也是为了对账，我哪个动作增加的哪笔积分，对账意义大于业务意义。","like_count":3,"discussions":[{"author":{"id":1206229,"avatar":"https://static001.geekbang.org/account/avatar/00/12/67/d5/1b26b725.jpg","nickname":"Gopher","note":"","ucode":"3C1F9012BB486D","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":308315,"discussion_content":"课程只讲设计上的问题吧","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1600913560,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":166153,"user_name":"下雨天","can_delete":false,"product_type":"c1","uid":1008315,"ip_address":"","ucode":"816B3792ECC50A","user_header":"https://static001.geekbang.org/account/avatar/00/0f/62/bb/323a3133.jpg","comment_is_top":false,"comment_ctime":1577409383,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"14462311271","product_id":100039001,"comment_content":"说说第一个问题，系统设计跟数据库设计没必然联系，这样设计合理！<br>数据库设计中有点像服务器请求设计<br>1.数据库拆分过细，各表字段间关联变麻烦了，提高数据不一致性风险！<br>2.数据库中表多意味着访问可能性变大，数据库的连接，建立都是需要时间和消耗性能的！","like_count":3},{"had_liked":false,"id":251967,"user_name":"大仙儿","can_delete":false,"product_type":"c1","uid":2208317,"ip_address":"","ucode":"9F2987AE89834F","user_header":"https://static001.geekbang.org/account/avatar/00/21/b2/3d/13e3ad14.jpg","comment_is_top":false,"comment_ctime":1602006935,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"10191941527","product_id":100039001,"comment_content":"王争老师您好，对于这篇实战，我有两个疑问：<br>1、如果只有一张表，是否能满足用户查询目前可用积分需求？（https:&#47;&#47;my.oschina.net&#47;funcy&#47;blog&#47;1975523）这篇文章通过增加可用积分表来实现。<br>2、调用消费积分接口，是否要已用户ID为锁做分布式锁，否则同一个用户同时消费积分，会导致数据不一致问题。","like_count":2},{"had_liked":false,"id":193518,"user_name":"heyman","can_delete":false,"product_type":"c1","uid":1173894,"ip_address":"","ucode":"92EF9EF1B1B1B3","user_header":"https://static001.geekbang.org/account/avatar/00/11/e9/86/d34800a4.jpg","comment_is_top":false,"comment_ctime":1584922876,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"10174857468","product_id":100039001,"comment_content":"假如产品需求需要在获得的积分明细记录上展示不同渠道或者是不同规则的相关信息，例如购物获取积分，需要记录商品名称，支付金额等；签到获取积分，需要记录签到日期；活动获取积分，需要记录活动相关字段等等（不同的活动需要记录的可能不一样）。用户打开积分列表的时候，需要展示出这些信息。我个人感觉系统间的耦合度很高，而且有新规则的时候还要支持新的字段，很难维护。我一般是在credit_transaction上加一个扩展字段，往里面塞json。请教一下，有什么更好的方案吗？","like_count":2},{"had_liked":false,"id":166709,"user_name":"兴","can_delete":false,"product_type":"c1","uid":1744116,"ip_address":"","ucode":"B33F131FEED77F","user_header":"https://static001.geekbang.org/account/avatar/00/1a/9c/f4/61b4876f.jpg","comment_is_top":false,"comment_ctime":1577549635,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"10167484227","product_id":100039001,"comment_content":"第一次评论说的不对请指正<br><br>第一个问题分两种情况：<br>1. 如果是积分和营销业务分离的话，下层业务就不应该关注上层业务，积分系统只记录自己的流水，event_id和channel_id则应该由上层记录<br>2. 如果是积分和业务系统放在一起的话（就像争哥推荐的那样），这种方案就符合当前业务情景。<br><br>第二个问题：<br>这种虽不符合单一职责，但如果每次插入后业务需要ID的做其他事情的话（或者以后也需要），这种方案的成本最小。","like_count":2},{"had_liked":false,"id":166226,"user_name":"正在减肥的胖籽。","can_delete":false,"product_type":"c1","uid":1033728,"ip_address":"","ucode":"99E2E4DF599236","user_header":"https://static001.geekbang.org/account/avatar/00/0f/c6/00/683bb4f0.jpg","comment_is_top":false,"comment_ctime":1577418412,"is_pvip":false,"discussion_count":2,"race_medal":0,"score":"10167353004","product_id":100039001,"comment_content":"课堂讨论：<br>  1.第一个问题合理。1.积分流水表也需要展示积分从那个渠道赚取2.RPC接口失败超时补偿的时候也需要对应的字段来对应。3.业务对账也需要对应的业务字段，但是event_id和channel_id需要组成唯一索引。<br>   2.个人意见是不需要返回积分的ID，对上层业务来说只关注积分是否增加&#47;消费成功。返回boolean或者void就可以。如果需要查询积分情况，已经有event_id和channel_id就可以反向查询。","like_count":2,"discussions":[{"author":{"id":1087243,"avatar":"https://static001.geekbang.org/account/avatar/00/10/97/0b/a943bcb3.jpg","nickname":"zhou","note":"","ucode":"E1CE8575B3F106","race_medal":3,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":276611,"discussion_content":"返回积分ID可方便上游系统扩展，不然用户再次查询也无法定位到记录。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1590913941,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1318540,"avatar":"https://static001.geekbang.org/account/avatar/00/14/1e/8c/450fe5cb.jpg","nickname":"花儿少年","note":"","ucode":"CFE4F64243673B","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":106190,"discussion_content":"返回的积分明细应该就是自己再次查询得到的吧","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1577520850,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":166120,"user_name":"醉比","can_delete":false,"product_type":"c1","uid":1248399,"ip_address":"","ucode":"79E65F62BE7809","user_header":"https://static001.geekbang.org/account/avatar/00/13/0c/8f/4ebd303a.jpg","comment_is_top":false,"comment_ctime":1577407005,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"10167341597","product_id":100039001,"comment_content":"从工作开始一直遵从着三层分层的标准，也一直没有去深究原因，今天收获颇丰。","like_count":2},{"had_liked":false,"id":320884,"user_name":"一格状语","can_delete":false,"product_type":"c1","uid":1622696,"ip_address":"","ucode":"EBA9ED5F97416D","user_header":"https://static001.geekbang.org/account/avatar/00/18/c2/a8/f3f8f5d2.jpg","comment_is_top":false,"comment_ctime":1636538413,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"5931505709","product_id":100039001,"comment_content":"我只用VO和Entity行吗，不用BO，感觉好多啊，麻烦的","like_count":1},{"had_liked":false,"id":276715,"user_name":"柠檬水","can_delete":false,"product_type":"c1","uid":1133649,"ip_address":"","ucode":"B105855D7FF8FB","user_header":"https://static001.geekbang.org/account/avatar/00/11/4c/51/a339d363.jpg","comment_is_top":false,"comment_ctime":1612087248,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"5907054544","product_id":100039001,"comment_content":"作者和评论区看到主要是后端的同学的评价，其实前端也是一样的，对于APP的开发我们也会定义出VO，BO，Entity，这个正好和后端是反过来的，Entity 是对于服务返回的模型，BO 是对于业务模型，VO 是对自己UI 的模型，这种方式一开始我也是遇到类之间多个属性的复制，但是觉的职责不同，还是分开了，在设计时如果非常简单的Entity 就复用，复杂的对象自己会定义一套。这个原则看似麻烦一些，在前期后台设计能力偏弱的情况下，前端设计与后台模型松耦合了，在后来后台设计跟上来的时候，前端的调整很少。","like_count":1},{"had_liked":false,"id":261591,"user_name":"骆永良","can_delete":false,"product_type":"c1","uid":2285079,"ip_address":"","ucode":"E451391B9ABF13","user_header":"https://static001.geekbang.org/account/avatar/00/22/de/17/8c819cd7.jpg","comment_is_top":false,"comment_ctime":1605435119,"is_pvip":false,"replies":[{"id":"96140","content":"������","user_name":"作者回复","comment_id":261591,"uid":"1190123","ip_address":"","utype":1,"ctime":1606701396,"user_name_real":"王争"}],"discussion_count":1,"race_medal":0,"score":"5900402415","product_id":100039001,"comment_content":"目的：提高开发、维护效率。第一层原则：易维护、易扩展，第二层原则：高内聚、低耦合。第一层方法：SOLID原则。第二层方法：各种设计模式（经验）","like_count":1,"discussions":[{"author":{"id":1190123,"avatar":"https://static001.geekbang.org/account/avatar/00/12/28/eb/af064421.jpg","nickname":"王争","note":"","ucode":"2B611BE0E0EDD4","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":509532,"discussion_content":"������","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1606701396,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":261490,"user_name":"春山","can_delete":false,"product_type":"c1","uid":1578956,"ip_address":"","ucode":"435980BA26DF3D","user_header":"https://static001.geekbang.org/account/avatar/00/18/17/cc/e33bef77.jpg","comment_is_top":false,"comment_ctime":1605358237,"is_pvip":true,"replies":[{"id":"96143","content":"MVC也不全是关注的前端","user_name":"作者回复","comment_id":261490,"uid":"1190123","ip_address":"","utype":1,"ctime":1606701431,"user_name_real":"王争"}],"discussion_count":1,"race_medal":0,"score":"5900325533","product_id":100039001,"comment_content":"三层架构和MVC不能说是一个东西吧，MVC更多关注的是前端。","like_count":1,"discussions":[{"author":{"id":1190123,"avatar":"https://static001.geekbang.org/account/avatar/00/12/28/eb/af064421.jpg","nickname":"王争","note":"","ucode":"2B611BE0E0EDD4","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":509500,"discussion_content":"MVC也不全是关注的前端","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1606701431,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":228919,"user_name":"YsnowLove","can_delete":false,"product_type":"c1","uid":1439301,"ip_address":"","ucode":"70433D98592481","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/rMgAbbKiasa1qR35ht0GEfwsHXbusPZAe9JFgicDgVRy8vQET2hypuDgwtHoPVU23RUoMdK7qA7gibMlTExpYibtbw/132","comment_is_top":false,"comment_ctime":1592838967,"is_pvip":false,"replies":[{"id":"86378","content":"增加一个总余额，就要维护数据的一致性了。就变得复杂了。而计算余额并非太复杂。当然，如果积分表中的数据量很大，那增加余额也是可以的。这个具体来看，没有说非得选择哪个设计更好。","user_name":"作者回复","comment_id":228919,"uid":"1190123","ip_address":"","utype":1,"ctime":1594602451,"user_name_real":"王争"}],"discussion_count":1,"race_medal":0,"score":"5887806263","product_id":100039001,"comment_content":"这篇文章是实战篇，为啥没有说明积分余额的设计，作为一个用户，首先关心的是积分余额吧。不可能每次看积分余额都要查询所以积分明细，然后计算一遍。","like_count":1,"discussions":[{"author":{"id":1190123,"avatar":"https://static001.geekbang.org/account/avatar/00/12/28/eb/af064421.jpg","nickname":"王争","note":"","ucode":"2B611BE0E0EDD4","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":499256,"discussion_content":"增加一个总余额，就要维护数据的一致性了。就变得复杂了。而计算余额并非太复杂。当然，如果积分表中的数据量很大，那增加余额也是可以的。这个具体来看，没有说非得选择哪个设计更好。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1594602451,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":175126,"user_name":"翁晓峰","can_delete":false,"product_type":"c1","uid":1198283,"ip_address":"","ucode":"CD7B9B1F1711BB","user_header":"https://static001.geekbang.org/account/avatar/00/12/48/cb/0b7838e9.jpg","comment_is_top":false,"comment_ctime":1580564995,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"5875532291","product_id":100039001,"comment_content":"消费接口设计上是单个积分记录被消费<br>上层需要消费还要查哪些未被消费，哪些可以组合后正常消费，处理并发问题，如果不能组合怎么处理<br>比如消费积分15分，最老的未消费记录是2条10积分。第二条只能消费部分怎么处理？<br>","like_count":1},{"had_liked":false,"id":167860,"user_name":"番茄炒西红柿","can_delete":false,"product_type":"c1","uid":1690242,"ip_address":"","ucode":"13F47BABAB2110","user_header":"https://static001.geekbang.org/account/avatar/00/19/ca/82/85f6a1a2.jpg","comment_is_top":false,"comment_ctime":1577952115,"is_pvip":false,"replies":[{"id":"65263","content":"看校验什么 校验参数合法性 那就放在controller 校验参数的业务合法性 那就放到service","user_name":"作者回复","comment_id":167860,"uid":"1190123","ip_address":"","utype":1,"ctime":1578010142,"user_name_real":"王争"}],"discussion_count":1,"race_medal":0,"score":"5872919411","product_id":100039001,"comment_content":"想问一个问题关于设计业务逻辑的参数校验放在那里合适，我现在都放在controller里面和非业务的参数校验放在一起，因为这种校验一般都返回错误码，错误码感觉和service的关系不大。不过其实感觉放在service也合适，老师的看法是怎么样的？","like_count":1,"discussions":[{"author":{"id":1190123,"avatar":"https://static001.geekbang.org/account/avatar/00/12/28/eb/af064421.jpg","nickname":"王争","note":"","ucode":"2B611BE0E0EDD4","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":480027,"discussion_content":"看校验什么 校验参数合法性 那就放在controller 校验参数的业务合法性 那就放到service","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1578010142,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":167827,"user_name":"传说中的成大大","can_delete":false,"product_type":"c1","uid":1236766,"ip_address":"","ucode":"103543D6E706BF","user_header":"https://static001.geekbang.org/account/avatar/00/12/df/1e/cea897e8.jpg","comment_is_top":false,"comment_ctime":1577945289,"is_pvip":false,"replies":[{"id":"65264","content":"👍","user_name":"作者回复","comment_id":167827,"uid":"1190123","ip_address":"","utype":1,"ctime":1578010194,"user_name_real":"王争"}],"discussion_count":1,"race_medal":0,"score":"5872912585","product_id":100039001,"comment_content":"1. 是合理的 因为虽然数据库设计包含了上层的数据，但是绝大多数都是用来进行存数据库，存记录方便以后的维护和查询，比如像游戏开发 在数据库模块中总会设计到玩家角色id啊 名字啊等等 所以我觉得是合理的<br>2. 并没有违背单一职责原则，因为修改或者查询的接口里面做的事情是很单一的，返回一个id，还便于去查询验证","like_count":1,"discussions":[{"author":{"id":1190123,"avatar":"https://static001.geekbang.org/account/avatar/00/12/28/eb/af064421.jpg","nickname":"王争","note":"","ucode":"2B611BE0E0EDD4","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":480011,"discussion_content":"👍","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1578010194,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":167024,"user_name":"zk_207","can_delete":false,"product_type":"c1","uid":1183552,"ip_address":"","ucode":"196D92ECC8540D","user_header":"https://static001.geekbang.org/account/avatar/00/12/0f/40/e838871e.jpg","comment_is_top":false,"comment_ctime":1577672053,"is_pvip":false,"replies":[{"id":"65137","content":"vo放到controller层 bo放到service层","user_name":"作者回复","comment_id":167024,"uid":"1190123","ip_address":"","utype":1,"ctime":1577948772,"user_name_real":"王争"}],"discussion_count":2,"race_medal":0,"score":"5872639349","product_id":100039001,"comment_content":"争哥，<br>Vo和Bo应该分别放到Controller层、service层呢，还是统一放到domain层呢？","like_count":1,"discussions":[{"author":{"id":1190123,"avatar":"https://static001.geekbang.org/account/avatar/00/12/28/eb/af064421.jpg","nickname":"王争","note":"","ucode":"2B611BE0E0EDD4","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":479717,"discussion_content":"vo放到controller层 bo放到service层","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1577948772,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1730626,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTJvm1JYIDcS74s4cEYxA1PXMqjortVXEjUKyGQcPvibNJ4EAuksIa6uoHgr6G1yRqAM2KtP3yicKgTA/132","nickname":"小妖","note":"","ucode":"49C01DBFADF101","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":332121,"discussion_content":"我感觉应该吧Vo和Bo统一放到doman中比较合理，如果Vo放到controller、bo放到serviceceng不太符合类划分的习惯，统一放到doman中不仅更符合使用习惯，有时候会有在service层返回Vo类的需要（这个在真实的开发过程中是会出现的，比如某些复杂的分页需要在Service层拼装vo类）。除非是要不servcie抽离出单独的jar的需要，否则还是统一放到domain更合理\n","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1607069493,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":166928,"user_name":"陈迎春","can_delete":false,"product_type":"c1","uid":1443663,"ip_address":"","ucode":"2870BA6D6E5B1E","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTIang00R9vkklnkFCLhzRysNfocr0sLnCdoZwOT3UkulAPefk5BDvd0PfIeQSODSQg1DjKWUmJOaA/132","comment_is_top":false,"comment_ctime":1577632360,"is_pvip":false,"replies":[{"id":"64820","content":"估计你要自己下点功夫 毕竟讲的跟你现在做的有比较大距离","user_name":"作者回复","comment_id":166928,"uid":"1190123","ip_address":"","utype":1,"ctime":1577665809,"user_name_real":"王争"}],"discussion_count":3,"race_medal":0,"score":"5872599656","product_id":100039001,"comment_content":"各位大佬好，我主要是做嵌入式软件开发的，平常设计模式用的不多，所以相对差一些，最近的两偏实战，我听了好几遍，但还是云里雾里，可否给出一些实际的代码？结合代码理解，可能会更好些","like_count":1},{"had_liked":false,"id":166203,"user_name":"李小四","can_delete":false,"product_type":"c1","uid":1112747,"ip_address":"","ucode":"2A766BE16B276B","user_header":"https://static001.geekbang.org/account/avatar/00/10/fa/ab/0d39e745.jpg","comment_is_top":false,"comment_ctime":1577415273,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"5872382569","product_id":100039001,"comment_content":"设计模式_24<br># 作业<br>1. 下层系统中包含了上层系统的event_id, channel_id, 这个显然是包含了(不该有的)上层信息，这样的坏处是，上层如果需要增加信息，底层的数据库要跟着改动。<br>当然，这么做的原因与本项目使用贫血模式的原因一样，这个项目的业务相对简单，我们认为除了事件和渠道之外，长时间内不会有其他的属性加入。后面如果真的需要添加，最好做成关联表的形式，而不是再加属性了。<br>2. 如果把创建积分明细看做是一个原子操作，那么返回boolean是更合理的，因为这样就已经知道操作结果了。只是在业务上，常常需要同步地拿到刚刚创建的明细ID，如果接口不返回，再查询会非常麻烦，在这里返回是总成本最低的方式，当然，代价就是部分调用处并不需要这个返回值。<br><br># 感想<br>日常的工作中，我们常常也会考虑到各种做法是否违背某原则的情况，而且，这些场景总是两难的，刚开始的时候会死守某一条原则，硬着头皮把代码改成“明显有问题”的样子，后面会慢慢地做折中和妥协。","like_count":1},{"had_liked":false,"id":166179,"user_name":"William","can_delete":false,"product_type":"c1","uid":1346215,"ip_address":"","ucode":"55F5D9DEE485B1","user_header":"https://static001.geekbang.org/account/avatar/00/14/8a/a7/674c1864.jpg","comment_is_top":false,"comment_ctime":1577411467,"is_pvip":true,"discussion_count":0,"race_medal":0,"score":"5872378763","product_id":100039001,"comment_content":"不能为了设计而设计.<br><br>所以我认为以上两个问题都是与正常的业务设计，并不违反规则.<br><br><br>第一个：<br>     需要关联事件与积分的关系.<br><br>第二个： 为了后续的也许需要返回id字段无可厚非.","like_count":1},{"had_liked":false,"id":166133,"user_name":"失火的夏天","can_delete":false,"product_type":"c1","uid":1241770,"ip_address":"","ucode":"10C6E66EB2A65F","user_header":"https://static001.geekbang.org/account/avatar/00/12/f2/aa/32fc0d54.jpg","comment_is_top":false,"comment_ctime":1577408182,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"5872375478","product_id":100039001,"comment_content":"1.设计原则不是银弹，包含上层信息是因为业务上需要这些字段来获取信息，如果包装成一个类，依赖的内容就更多了，对调用方来说就不简介，不知道服务提供方到底需要什么。<br><br>2.单一原则也是取决于具体业务的，如果消费和赚取的积分在后续还有操作，就需要再度去查询一下这个积分。还要多操作一次数据库，如果服务端直接有提供，就可以避开这一次操作。任何服务都是为了业务实现的。大部分场景都是面向sql编程。当然，如果业务场景不需要后续操作，就不需要返回了，不过统一来说，多一个返回值，也没什么影响。","like_count":1},{"had_liked":false,"id":347971,"user_name":"周嘉治","can_delete":false,"product_type":"c1","uid":1154376,"ip_address":"","ucode":"9E2C8DB2DB0309","user_header":"https://static001.geekbang.org/account/avatar/00/11/9d/48/cb8d1922.jpg","comment_is_top":false,"comment_ctime":1654615740,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1654615740","product_id":100039001,"comment_content":"老师，repository层返回的Entity，在service中转换成BO，为什么转换这个操作是放在ervice中去做，实际开发中，我看到有很多同学是放在repository中把Entity转成BO再返回的，这里面有什么讲究吗？","like_count":0},{"had_liked":false,"id":343063,"user_name":"顺势而为","can_delete":false,"product_type":"c1","uid":2757858,"ip_address":"","ucode":"FE7D688D24823E","user_header":"https://static001.geekbang.org/account/avatar/00/2a/14/e2/f6f1627c.jpg","comment_is_top":false,"comment_ctime":1650614801,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1650614801","product_id":100039001,"comment_content":"1.学习这些设计原则的目的是为了解决设计带来的疑问。<br>2.要治理好这些类之间的关系，肯定要有一种规则来约束好的。<br>3.为什么非要这样约定呢，这样更加容易符合大多数的程序员的思维。","like_count":0},{"had_liked":false,"id":340633,"user_name":"酒醒何处","can_delete":false,"product_type":"c1","uid":2839701,"ip_address":"","ucode":"2F890DD0BEB0F0","user_header":"","comment_is_top":false,"comment_ctime":1648982481,"is_pvip":true,"discussion_count":0,"race_medal":0,"score":"1648982481","product_id":100039001,"comment_content":"业务场景决定的，需要对账，幂等","like_count":0},{"had_liked":false,"id":332686,"user_name":"建强","can_delete":false,"product_type":"c1","uid":1397126,"ip_address":"","ucode":"62B03D0E0C64EC","user_header":"https://static001.geekbang.org/account/avatar/00/15/51/86/b5fd8dd8.jpg","comment_is_top":false,"comment_ctime":1643473005,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1643473005","product_id":100039001,"comment_content":"1.积分明细表中含有event_id,channel_id，对于以后的积分溯源是有好处的，且这两个业务字段在上层业务中是比较抽象的，并没有特指某个具体业务的event_id和channel_id，因此这样设计是合理的；<br>2.赚取和消费积分两个接口返回积分明细ID，这个返回的明细ID，既可以作为成功的标志，又可以直接提供给调用者用于后续的业务处理，而查询积分明细肯定是不会调用这两个接口，即这两个接口主要功能并不是查询，而是改变积分，因此本质上它们是单一职责的。","like_count":0},{"had_liked":false,"id":330749,"user_name":"蝴蝶","can_delete":false,"product_type":"c1","uid":1193167,"ip_address":"","ucode":"8019924D99182F","user_header":"https://static001.geekbang.org/account/avatar/00/12/34/cf/0a316b48.jpg","comment_is_top":false,"comment_ctime":1642145115,"is_pvip":true,"discussion_count":0,"race_medal":0,"score":"1642145115","product_id":100039001,"comment_content":"现在在做内部积分相关需求,考虑一个问题,就是兑换的时候,到底是把一批记录置为删除,还是怎么处理?","like_count":0},{"had_liked":false,"id":318584,"user_name":"多学多看多记","can_delete":false,"product_type":"c1","uid":2276155,"ip_address":"","ucode":"0670C833007510","user_header":"https://static001.geekbang.org/account/avatar/00/22/bb/3b/6e020a32.jpg","comment_is_top":false,"comment_ctime":1635340526,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1635340526","product_id":100039001,"comment_content":"1. 是合理的，底层系统是要给多个上层系统使用的，因此底层系统要区分是哪一个上层系统在使用，否则容易使用混乱，使系统可扩展性低、可维护性差。因此底层系统都会预留一个或者多个字段，来区分不同的上层业务。<br>2. 合理。从可测试性的角度来讲，返回boolean或者void，看不出是成功还是失败，相反，返回ID可以通过ID查看成功或者失败，同时ID字段也可以供前端使用，比如挑战详情页。","like_count":0},{"had_liked":false,"id":314016,"user_name":"charmsongo","can_delete":false,"product_type":"c1","uid":1609051,"ip_address":"","ucode":"4FBEE716E93A1A","user_header":"https://static001.geekbang.org/account/avatar/00/18/8d/5b/383a49e4.jpg","comment_is_top":false,"comment_ctime":1632801618,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1632801618","product_id":100039001,"comment_content":"系统设计中，mvc优点有：业务代码复用、隔离易变化点、关注点、提高可测试性、可应对相对复杂性.<br>vo、bo、entity分层有必要，但是看具体公司业务吧，但是最好是用","like_count":0},{"had_liked":false,"id":301026,"user_name":"有生之年","can_delete":false,"product_type":"c1","uid":1020719,"ip_address":"","ucode":"B713335DE9D37F","user_header":"https://static001.geekbang.org/account/avatar/00/0f/93/2f/1e193dcc.jpg","comment_is_top":false,"comment_ctime":1625488682,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1625488682","product_id":100039001,"comment_content":"请问，数据校验属于业务逻辑么？比如某个字段只能为正数？不能超过多少之类的 . 放到controller还是domain中？","like_count":0},{"had_liked":false,"id":295404,"user_name":"Geek_5b7d28","can_delete":false,"product_type":"c1","uid":2057476,"ip_address":"","ucode":"BAA1CDD539C369","user_header":"","comment_is_top":false,"comment_ctime":1622418960,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1622418960","product_id":100039001,"comment_content":"课堂一<br>    我觉得对于计算分层来说是为了逻辑的复用性，上层中有下层的逻辑，不会破坏下层的通用性。而对于数据库来说，主要是为了关联查询，两者性质不一样，因此这么用没问题。","like_count":0},{"had_liked":false,"id":295331,"user_name":"小江爱学术","can_delete":false,"product_type":"c1","uid":2628601,"ip_address":"","ucode":"554F40C6627AF4","user_header":"https://static001.geekbang.org/account/avatar/00/28/1b/f9/018197f1.jpg","comment_is_top":false,"comment_ctime":1622370861,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1622370861","product_id":100039001,"comment_content":"有个问题是，在MVC中如果给BO，VO，Entity定义基类，或者利用组合类，那么基类&#47;组合类应该放哪一层呢","like_count":0},{"had_liked":false,"id":292295,"user_name":"栾~龟虽寿！","can_delete":false,"product_type":"c1","uid":1504671,"ip_address":"","ucode":"219B38C08979FE","user_header":"https://static001.geekbang.org/account/avatar/00/16/f5/9f/1509d389.jpg","comment_is_top":false,"comment_ctime":1620775900,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1620775900","product_id":100039001,"comment_content":"打卡吧 ，难度很大，似懂非懂","like_count":0},{"had_liked":false,"id":291948,"user_name":"JKwar","can_delete":false,"product_type":"c1","uid":1047466,"ip_address":"","ucode":"B733CA24D5701F","user_header":"https://static001.geekbang.org/account/avatar/00/0f/fb/aa/01fedf6c.jpg","comment_is_top":false,"comment_ctime":1620621619,"is_pvip":false,"discussion_count":0,"race_medal":1,"score":"1620621619","product_id":100039001,"comment_content":"课堂讨论二：不行，这里返回积分id是为了查询更加方便。","like_count":0},{"had_liked":false,"id":291946,"user_name":"JKwar","can_delete":false,"product_type":"c1","uid":1047466,"ip_address":"","ucode":"B733CA24D5701F","user_header":"https://static001.geekbang.org/account/avatar/00/0f/fb/aa/01fedf6c.jpg","comment_is_top":false,"comment_ctime":1620621485,"is_pvip":false,"discussion_count":0,"race_medal":1,"score":"1620621485","product_id":100039001,"comment_content":"课堂讨论1:合理，这2个字段在积分查询必须的，如果不记录在这张表上，记录在其他表上反而不方便查询。","like_count":0},{"had_liked":false,"id":291247,"user_name":"王泽","can_delete":false,"product_type":"c1","uid":1657304,"ip_address":"","ucode":"726A5F21BE7390","user_header":"https://static001.geekbang.org/account/avatar/00/19/49/d8/533b1968.jpg","comment_is_top":false,"comment_ctime":1620141622,"is_pvip":true,"discussion_count":0,"race_medal":0,"score":"1620141622","product_id":100039001,"comment_content":"emmm，有个问题想问一下争哥，在业务系统中，有三个不同客户端（web、app 等）都需要查订单列表，但是这个订单列表的功能是一样的，这种情况是只开放一个接口+判断权限来决定返回的数据呢，还是分成三个接口好（返回的订单信息基本一样，可能有个别字段不同），当前是后一种情况","like_count":0},{"had_liked":false,"id":278646,"user_name":"somenzz","can_delete":false,"product_type":"c1","uid":1187197,"ip_address":"","ucode":"EA59A170DF8910","user_header":"https://static001.geekbang.org/account/avatar/00/12/1d/7d/368df396.jpg","comment_is_top":false,"comment_ctime":1613170501,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1613170501","product_id":100039001,"comment_content":"1、积分明细表中 credit_transaction 中包含 event_id，channel_id 是非常必要的，如果没有这两个字段，用户无法查看积分明细时知道这些积分是通过什么渠道、什么事件获取的，平台也无法做相应的数据分析和统计。另外 event_id，channel_id 只是一业务信息的主键，一旦生成，基本不可能变化，因此 credit_transaction 并没有包含太多的业务信息。<br><br>2、赚取积分和消费积分接口返回积分明细 ID 并不违反接口的单一职责：赚取积分和消费积分。返回空或返回一个 ID 的成本是一样的，返回了 ID 却可以方便调用方查询或关联使用，实际上更好的做法不仅仅是返回一个 id，而是返回该笔明细的所有信息，这样用户界面就可以看到成功赚取或消费了多少积分。<br><br><br>","like_count":0},{"had_liked":false,"id":277459,"user_name":"朱月俊","can_delete":false,"product_type":"c1","uid":1017707,"ip_address":"","ucode":"4DA0728B862FBD","user_header":"https://static001.geekbang.org/account/avatar/00/0f/87/6b/0b6cd39a.jpg","comment_is_top":false,"comment_ctime":1612422192,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1612422192","product_id":100039001,"comment_content":"简单的积分系统也可以演变为复杂账务系统，甚至更复杂的财务系统。","like_count":0},{"had_liked":false,"id":276538,"user_name":"Flash","can_delete":false,"product_type":"c1","uid":1236163,"ip_address":"","ucode":"E285075C9E0B02","user_header":"https://static001.geekbang.org/account/avatar/00/12/dc/c3/e4ba51d5.jpg","comment_is_top":false,"comment_ctime":1611994236,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1611994236","product_id":100039001,"comment_content":"课后思考<br>1.这里的MVC分层，我觉得和之前说的下层不应该包含太多上层业务是两回事。这里的分层是针对技术架构上的分层，而不是针对业务架构上的分层，整个MVC三层在业务上是一个整体。<br>2.没有违背单一职责原则，是否单一职责，要看调用者，具体的场景。通常，保存更新会返回entity，对调用者来说，我就是想保存后看到更新后的数据。","like_count":0},{"had_liked":false,"id":276182,"user_name":"微末凡尘","can_delete":false,"product_type":"c1","uid":1099525,"ip_address":"","ucode":"25EDFD0914D0F4","user_header":"https://static001.geekbang.org/account/avatar/00/10/c7/05/19c5c255.jpg","comment_is_top":false,"comment_ctime":1611823416,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1611823416","product_id":100039001,"comment_content":"1、是合理的，从业务角度是需要这个两个字段的，设计原则也不是银弹，具体问题需要具体分析<br>2、返回id，和返回true很类似，调用方可能需要根据返回的id，进行其他的操作","like_count":0},{"had_liked":false,"id":272768,"user_name":"郑印","can_delete":false,"product_type":"c1","uid":1005282,"ip_address":"","ucode":"181B0FDE5E1532","user_header":"https://static001.geekbang.org/account/avatar/00/0f/56/e2/2dcab30d.jpg","comment_is_top":false,"comment_ctime":1610270866,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1610270866","product_id":100039001,"comment_content":"争哥，我想问问，二方接口通常如何处理呢，比如在同一个公司内订单服务依赖资金服务的查询资金余额接口？ <br><br>按照MVC，这个属于数据层(Repository)、还是业务层（service）, 目前我们是把它定义为业务层，二方接口封装统一放置在service包下的一个子包，这部分大多数文章也没有介绍，一直比较疑惑，想知道这部分在工程中的放置在哪怎么命名比较合理？","like_count":0},{"had_liked":false,"id":269719,"user_name":"慎独明强","can_delete":false,"product_type":"c1","uid":1965699,"ip_address":"","ucode":"DC2F7F2C0C8F60","user_header":"https://static001.geekbang.org/account/avatar/00/1d/fe/83/df562574.jpg","comment_is_top":false,"comment_ctime":1608770051,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1608770051","product_id":100039001,"comment_content":"问题一: 下层积分系统包含上层的一些业务字段为了，这些字段为冗余字段，可以方便我们后续查询统计。 也可以加一个中间关联表，将上层业务字段与积分流水表主键id关联起来，只是这样对于查询不怎么友好，应该是系统上一种取舍。   问题二: 我不习惯将更新和新增接口，返回对象，但确实也有一部分业务场景需要得到新增和修改后对象信息，看到评论区，下单会有一个小票，这个比喻很形象，我觉得都是合理。单一职责原则也要根据业务需要来定。","like_count":0},{"had_liked":false,"id":269708,"user_name":"江南一笑","can_delete":false,"product_type":"c1","uid":2234620,"ip_address":"","ucode":"E38938A1178827","user_header":"https://static001.geekbang.org/account/avatar/00/22/18/fc/4f92ee4e.jpg","comment_is_top":false,"comment_ctime":1608751154,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1608751154","product_id":100039001,"comment_content":"讨论问题回答：<br>1: 如果需要你的积分模块需要用到 event_id，channel_id，那就是合理的。用不到就不合理。<br>2. 想多了，不违背，而且也是从实用主义角度出发的。","like_count":0},{"had_liked":false,"id":269433,"user_name":"隆隆.ago","can_delete":false,"product_type":"c1","uid":1710528,"ip_address":"","ucode":"9EFE43F0A2C6BB","user_header":"https://static001.geekbang.org/account/avatar/00/1a/19/c0/693b946f.jpg","comment_is_top":false,"comment_ctime":1608644818,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1608644818","product_id":100039001,"comment_content":"作业：<br>1.是合理的。积分明细表中 中包含 event_id，channel_id这些是对上层业务的归纳，保留上层相应信息，没有太多的细节是一种抽象。而且数据库要全面，万一以后要用到这些上层信息也可以很好的适配。<br>2.修改和查询放一起挺好的。一般这种积分业务场景修改积分和返回积分ID像是一种原子化的操作。如果不返回ID就不便于后续的统计和分析等需求了。如果强行分开可能还是一种过度设计。如果实在感觉不好，可以参考老师这节课说的粗粒度包一层细粒度的设计套路。","like_count":0},{"had_liked":false,"id":260150,"user_name":"一万小时","can_delete":false,"product_type":"c1","uid":1297927,"ip_address":"","ucode":"D2D443595BB1ED","user_header":"","comment_is_top":false,"comment_ctime":1604931711,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1604931711","product_id":100039001,"comment_content":"作为C++开发应用工具的，看你举得例子，一头雾水，业务太不熟悉了","like_count":0},{"had_liked":false,"id":259232,"user_name":"Laughing","can_delete":false,"product_type":"c1","uid":1002134,"ip_address":"","ucode":"F68F1E000CA800","user_header":"https://static001.geekbang.org/account/avatar/00/0f/4a/96/99466a06.jpg","comment_is_top":false,"comment_ctime":1604657618,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1604657618","product_id":100039001,"comment_content":"回答如下：<br>1. 用于业务关联的必要字段是需要保留的，就像两个毫不相干的系统，想要有关系总要有东西是对应可查的，不然系统之间就没有什么关系。<br>2. 插入或修改返回具体业务相关的ID和明细，一般情况下是为了下一步操作做铺垫和联动，大多数情况下都是符合业务需求的，如果不返回的情况下。可能会再次造成IO，其实下一次IO是没有什么必要的。<br><br>很多时候设计还是要根据具体的场景做权衡，如果按规则生搬硬套系统可能也不会很好维护。","like_count":0,"discussions":[{"author":{"id":1236070,"avatar":"https://static001.geekbang.org/account/avatar/00/12/dc/66/5861451b.jpg","nickname":"杜","note":"","ucode":"E372639657C9AB","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":293802,"discussion_content":"阁下的回答真的是又红又专，赞了","likes_number":5,"is_delete":false,"is_hidden":false,"ctime":1595671214,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1415619,"avatar":"https://static001.geekbang.org/account/avatar/00/15/99/c3/e4f408d4.jpg","nickname":"陌兮","note":"","ucode":"00CE47CAECD5CD","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":575274,"discussion_content":"深有同感啊，这个东西需要领导重视起来，领导都不重视，靠程序员自己加班？谁爱干谁干，哈哈","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1654698491,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":2851194,"avatar":"https://static001.geekbang.org/account/avatar/00/2b/81/7a/80c0dd26.jpg","nickname":"张涛","note":"","ucode":"A187E6D3D64FF5","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":544634,"discussion_content":"深有同感。敌我一定要分清，这是一切工作的前提。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1641612120,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1015754,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/7f/ca/ea85bfdd.jpg","nickname":"helloworld","note":"","ucode":"00DF2FEC58D2E6","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":372555,"discussion_content":"基于第2点, 我感觉作者是架构师,哈哈","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1620375816,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1090199,"avatar":"https://static001.geekbang.org/account/avatar/00/10/a2/97/a8c24e80.jpg","nickname":"唠唠叨叨哟","note":"","ucode":"611F2E888E7013","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":334802,"discussion_content":"努力工作是为了更好的生活","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1607994971,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1375256,"avatar":"https://static001.geekbang.org/account/avatar/00/14/fc/18/8e69f7cf.jpg","nickname":"TANMIYOO","note":"","ucode":"BC3556131D4D61","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":326455,"discussion_content":"为了更高,更快,更强","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1605598238,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1005381,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/57/45/c418ea5c.jpg","nickname":"指尖流逝","note":"","ucode":"417009F674FAF1","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":319696,"discussion_content":"我最喜欢的评论了","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1604104702,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1252235,"avatar":"https://static001.geekbang.org/account/avatar/00/13/1b/8b/ca59be30.jpg","nickname":"向阳生","note":"","ucode":"C2E9E463CA9B38","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":312632,"discussion_content":"您这个总结真的是透彻，学到了","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1602753496,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":2086700,"avatar":"","nickname":"一剑东来","note":"","ucode":"9421EE3EAED2C0","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":306529,"discussion_content":"哈哈，统战工作要做好","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1600311579,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1112490,"avatar":"https://static001.geekbang.org/account/avatar/00/10/f9/aa/3e80212e.jpg","nickname":"龙猫","note":"","ucode":"FD726CC969EF9C","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":305406,"discussion_content":"这个无产阶级有那味了😂","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1599910907,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1015483,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/7e/bb/947c329a.jpg","nickname":"程序员小跃","note":"","ucode":"25BB96E0791A60","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":293510,"discussion_content":"后面两条，尤其是最有一条，真香。某些同事看到了，就应该好好反省下，哈哈","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1595561761,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":3,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":252461,"user_name":"大力水手Jerry","can_delete":false,"product_type":"c1","uid":1227840,"ip_address":"","ucode":"E4A6C71E275DB5","user_header":"https://static001.geekbang.org/account/avatar/00/12/bc/40/2279cfb5.jpg","comment_is_top":false,"comment_ctime":1602310857,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1602310857","product_id":100039001,"comment_content":"课后第一个习题答复：是合理的。底层不要包含上层的业务信息，意思是底层的业务逻辑不要混杂上层的业务逻辑，分层有助于隔离变化、隔离关注点、应对系统复杂性。但任何一个层面的业务逻辑都存在需要持久化的信息数据，这些信息数据**在本层**被处理，并被直接传递到最下面repository层进行持久化，从而支持状态、历史查询和系统灾难恢复，统计、预测和数据挖掘营销等扩展功能。","like_count":0},{"had_liked":false,"id":252163,"user_name":"Awake  Dreaming","can_delete":false,"product_type":"c1","uid":1658734,"ip_address":"","ucode":"D1A19933863FD6","user_header":"https://static001.geekbang.org/account/avatar/00/19/4f/6e/bff1e33e.jpg","comment_is_top":false,"comment_ctime":1602152503,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1602152503","product_id":100039001,"comment_content":"1.觉得下层表冗余上层业务相关的信息，要看荣誉了哪些信息，如果冗余了跟上层业务实现细节相关的信息肯定是不合适的，但如果是冗余了抽象的上层信息，还是可以接受的，因为这样保证了下层数据库表能够自如应对上层业务的扩展；另外，之前在钱包系统的设计中，那种明细表的设计方法是不是也可以考虑用在这里？<br>2.这个返不返回id，区别应该不大","like_count":0},{"had_liked":false,"id":251652,"user_name":"Ilearning99","can_delete":false,"product_type":"c1","uid":1989119,"ip_address":"","ucode":"7901836A2C47EF","user_header":"https://thirdwx.qlogo.cn/mmopen/vi_32/qOdqzmC507sibL6sichNSDaVmyoMKibEIqHWpic4CftgOQnoA3QKeRPwic9j1Ha8MLtzzqzfSRavR9GWMju09SMADUg/132","comment_is_top":false,"comment_ctime":1601763325,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1601763325","product_id":100039001,"comment_content":"1 eventid 和 channelid信息需要查询，另一种方式就需要新增一张表<br>2 返回id更常见，不是特别清楚原因","like_count":0},{"had_liked":false,"id":247733,"user_name":"Younger Ku","can_delete":false,"product_type":"c1","uid":1323102,"ip_address":"","ucode":"D157DC38BDB515","user_header":"https://static001.geekbang.org/account/avatar/00/14/30/5e/c42bc33f.jpg","comment_is_top":false,"comment_ctime":1599811347,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1599811347","product_id":100039001,"comment_content":"channelId:赚取或消费渠道ID<br>这个字段该怎么理解呢？能否举个例子？<br>消费积分接口传参expiredTime有什么意思呢？<br>想看用户剩余积分岂不是要根据userId分组后对credit进行sum了？会不会出现结果是负值？","like_count":0},{"had_liked":false,"id":246243,"user_name":"宇天飞","can_delete":false,"product_type":"c1","uid":1126444,"ip_address":"","ucode":"3FB37D1E2DAA61","user_header":"https://static001.geekbang.org/account/avatar/00/11/30/2c/06375913.jpg","comment_is_top":false,"comment_ctime":1599220326,"is_pvip":true,"discussion_count":0,"race_medal":0,"score":"1599220326","product_id":100039001,"comment_content":"问题1：<br>1、合理<br>2、业务需要<br>问题2：<br>1、内聚好、本身系统接口不多<br>","like_count":0},{"had_liked":false,"id":245974,"user_name":"Geek_35cfdd","can_delete":false,"product_type":"c1","uid":1792214,"ip_address":"","ucode":"AD9615ABB4CA25","user_header":"https://thirdwx.qlogo.cn/mmopen/vi_32/DYAIOgq83eoiaP1gptuBzj3AXMpY8yLTIkpuarouOVzLde4636UJ7zAgnOEZibiaAIRVAicFaO64ftH45YOn1pD3VA/132","comment_is_top":false,"comment_ctime":1599123434,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1599123434","product_id":100039001,"comment_content":"从单一职责的角度来说，确实可能不满足。但是在业务场景中，并不一定每个设计都要满足各个原则，很多时候还是要取舍。这种设计更满足业务场景。","like_count":0},{"had_liked":false,"id":245416,"user_name":"陈年之后是青葱","can_delete":false,"product_type":"c1","uid":1677464,"ip_address":"","ucode":"93099465D64545","user_header":"https://static001.geekbang.org/account/avatar/00/19/98/98/0aa03974.jpg","comment_is_top":false,"comment_ctime":1598940046,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1598940046","product_id":100039001,"comment_content":"1.个人认为事件产生积分的关系是上层业务依赖积分服务。但肯定也需要通过积分明细反查询是什么事件，这里又变成了积分服务依赖上层业务。所以个人认为把积分完全作为下层服务供其他业务来调用可能不是很恰当。应该是同级，那么根据最少知识原则，也根据DDD理论两个业务域只通过聚合根id来关联所以在积分明细实体中设计这事件id和渠道id是合理的。<br>2.赚取和消费积分返回id，在业务上来说这是必要的，这两个接口的职责定义就是赚取或消费积分并返回积分id,粒度度从场景上来说已经不能再细分，返回积分id不意味着提供了查询的职责，相反如果上游服务需要多返回一个查询字段或者多提供一个查询条件，在积分服务应该有一个专门的查询接口而变更，而不会影响我们的赚取和消费积分接口，所以我认为没有违反单一职责原则。","like_count":0},{"had_liked":false,"id":243129,"user_name":"超越自我","can_delete":false,"product_type":"c1","uid":2130462,"ip_address":"","ucode":"8A55D972EEFADA","user_header":"https://static001.geekbang.org/account/avatar/00/20/82/1e/f3cb3d57.jpg","comment_is_top":false,"comment_ctime":1597973538,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1597973538","product_id":100039001,"comment_content":"相互冗余信息便于流水对账，踪迹可追溯。","like_count":0},{"had_liked":false,"id":235482,"user_name":"御风","can_delete":false,"product_type":"c1","uid":1812807,"ip_address":"","ucode":"51C8212BE06364","user_header":"https://static001.geekbang.org/account/avatar/00/1b/a9/47/ded5da90.jpg","comment_is_top":false,"comment_ctime":1595059159,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1595059159","product_id":100039001,"comment_content":"现有项目中没有用mq，而是用轮询实现异步","like_count":0},{"had_liked":false,"id":233623,"user_name":"永旭","can_delete":false,"product_type":"c1","uid":1068819,"ip_address":"","ucode":"C9C74BE32C8F46","user_header":"https://static001.geekbang.org/account/avatar/00/10/4f/13/5197f8d2.jpg","comment_is_top":false,"comment_ctime":1594368701,"is_pvip":false,"replies":[{"id":"86243","content":"注册的vo，可以单独设计一个vo类，跟查询user信息的vo区分开","user_name":"作者回复","comment_id":233623,"uid":"1190123","ip_address":"","utype":1,"ctime":1594385087,"user_name_real":"王争"}],"discussion_count":1,"race_medal":0,"score":"1594368701","product_id":100039001,"comment_content":"请问 VO 里不包含 密码, 那用户注册时 从前端获取的VO对象 转换成后端VO对象时 密码不会丢失吗 ??","like_count":0,"discussions":[{"author":{"id":1002201,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/4a/d9/75dd7cf9.jpg","nickname":"Mew151","note":"","ucode":"D4793F5874F345","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":581196,"discussion_content":"不能再认同","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1658590146,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":229695,"user_name":"王瑞强","can_delete":false,"product_type":"c1","uid":1829090,"ip_address":"","ucode":"DEE4EB5E23433F","user_header":"https://static001.geekbang.org/account/avatar/00/1b/e8/e2/2bcaef68.jpg","comment_is_top":false,"comment_ctime":1593100925,"is_pvip":false,"replies":[{"id":"84962","content":"嗯嗯 可以<br>","user_name":"作者回复","comment_id":229695,"uid":"1190123","ip_address":"","utype":1,"ctime":1593309282,"user_name_real":"王争"}],"discussion_count":1,"race_medal":0,"score":"1593100925","product_id":100039001,"comment_content":"积分明细表里面是不是需要记录一下积分兑换，扣除积分的规则id","like_count":0,"discussions":[{"author":{"id":1190123,"avatar":"https://static001.geekbang.org/account/avatar/00/12/28/eb/af064421.jpg","nickname":"王争","note":"","ucode":"2B611BE0E0EDD4","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":499595,"discussion_content":"嗯嗯 可以\n","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1593309282,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":224990,"user_name":"李德政","can_delete":false,"product_type":"c1","uid":1023885,"ip_address":"","ucode":"3AC49F5671485C","user_header":"https://static001.geekbang.org/account/avatar/00/0f/9f/8d/d725d32c.jpg","comment_is_top":false,"comment_ctime":1591610407,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1591610407","product_id":100039001,"comment_content":"老师对MVC的设计思想和优缺点阐释的非常清晰，深有体会！这是我看过介绍MVC的最全面的文章","like_count":0},{"had_liked":false,"id":222889,"user_name":"thinkmore","can_delete":false,"product_type":"c1","uid":1137647,"ip_address":"","ucode":"8FC3414685165C","user_header":"https://static001.geekbang.org/account/avatar/00/11/5b/ef/ab462610.jpg","comment_is_top":false,"comment_ctime":1590940278,"is_pvip":false,"replies":[{"id":"87060","content":"是的，都要转换","user_name":"作者回复","comment_id":222889,"uid":"1190123","ip_address":"","utype":1,"ctime":1595207247,"user_name_real":"王争"}],"discussion_count":1,"race_medal":0,"score":"1590940278","product_id":100039001,"comment_content":"从下层往上层传递需要转换，那么上层往下层传递也用同样的转换吗？","like_count":0,"discussions":[{"author":{"id":1135900,"avatar":"https://static001.geekbang.org/account/avatar/00/11/55/1c/c76abe73.jpg","nickname":"大叶子","note":"","ucode":"31CCDE9E88C023","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":285676,"discussion_content":"技术氛围 是一个值得团队去打造的一件事！","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1592911899,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":1,"child_discussions":[{"author":{"id":1325816,"avatar":"https://static001.geekbang.org/account/avatar/00/14/3a/f8/c1a939e7.jpg","nickname":"君哥聊技术","note":"","ucode":"2C9A22BCE4C79E","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1135900,"avatar":"https://static001.geekbang.org/account/avatar/00/11/55/1c/c76abe73.jpg","nickname":"大叶子","note":"","ucode":"31CCDE9E88C023","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":285739,"discussion_content":"确实","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1592923394,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":285676,"ip_address":""},"score":285739,"extra":""}]}]},{"had_liked":false,"id":222792,"user_name":"zhou","can_delete":false,"product_type":"c1","uid":1087243,"ip_address":"","ucode":"E1CE8575B3F106","user_header":"https://static001.geekbang.org/account/avatar/00/10/97/0b/a943bcb3.jpg","comment_is_top":false,"comment_ctime":1590913085,"is_pvip":false,"replies":[{"id":"87061","content":"type在另一个表中维护，event表中","user_name":"作者回复","comment_id":222792,"uid":"1190123","ip_address":"","utype":1,"ctime":1595207458,"user_name_real":"王争"}],"discussion_count":1,"race_medal":3,"score":"1590913085","product_id":100039001,"comment_content":"表中的event_id是否应该还要有个类型 不同的表如果用自增是否会通过event_id无法区分","like_count":0,"discussions":[{"author":{"id":1190123,"avatar":"https://static001.geekbang.org/account/avatar/00/12/28/eb/af064421.jpg","nickname":"王争","note":"","ucode":"2B611BE0E0EDD4","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":493879,"discussion_content":"有些基础的审查工具，比如findbugs等，自动发现一些最基本的编码规范的问题。但是，替代不了人工审查。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1594632933,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":222052,"user_name":"少年锦时","can_delete":false,"product_type":"c1","uid":1313379,"ip_address":"","ucode":"70E2CFF88A0ACB","user_header":"https://static001.geekbang.org/account/avatar/00/14/0a/63/165b0d40.jpg","comment_is_top":false,"comment_ctime":1590664409,"is_pvip":false,"replies":[{"id":"87063","content":"确实不需要，直接实现类就够了。","user_name":"作者回复","comment_id":222052,"uid":"1190123","ip_address":"","utype":1,"ctime":1595207497,"user_name_real":"王争"}],"discussion_count":2,"race_medal":0,"score":"1590664409","product_id":100039001,"comment_content":"如果Repository 层不写接口直接写一个实现类，Service直接使用该实现类。<br>这个实现类内部逻辑有改动（入参和返回值不变），Service也不会受到影响呀。<br>请问，这种情况为什么还要定义接口呢","like_count":0,"discussions":[{"author":{"id":1015754,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/7f/ca/ea85bfdd.jpg","nickname":"helloworld","note":"","ucode":"00DF2FEC58D2E6","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":372561,"discussion_content":"遇到第1点的时候最多; 可以在类名上做一个约定, 利用IDE提供的快速查找功能就可以很快定位到到底有没有已经写好了通用的功能","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1620376345,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":221682,"user_name":"王昊哲","can_delete":false,"product_type":"c1","uid":1698557,"ip_address":"","ucode":"AA2F4499BF6865","user_header":"https://static001.geekbang.org/account/avatar/00/19/ea/fd/89d3d0b5.jpg","comment_is_top":false,"comment_ctime":1590565940,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1590565940","product_id":100039001,"comment_content":"又重新复习了下，有个重要问题是这里的模块划分，数据库设计，接口设计应该属于系统设计，前面的13和14章的面向对象分析与设计应该属于 详细设计，应该是在系统设计之后进行，不知道这样理解是否正确呢？？","like_count":0},{"had_liked":false,"id":220059,"user_name":"张晋 🇨🇳","can_delete":false,"product_type":"c1","uid":2002268,"ip_address":"","ucode":"DC20FB284DB730","user_header":"https://static001.geekbang.org/account/avatar/00/1e/8d/5c/a3e67232.jpg","comment_is_top":false,"comment_ctime":1590145888,"is_pvip":true,"discussion_count":0,"race_medal":0,"score":"1590145888","product_id":100039001,"comment_content":"第一个问题我觉得要看channel和event是否有关联。如果有关联那就保存一个字段就好了，其次这个关联字段是必要的，因为不管是channel还是event都与积分存在1对多的关系，所以最佳实践就是在积分表中关联对应的字段。<br>第二个问题，我认为判定是否单一职责可以试试两个功能是否可以拆分开，可以发现查询新生成的id是没法单独实现的，既没有再次被调用的价值。所以查询新生成的id不是一个职责。所以不违背单一职责原则。","like_count":0},{"had_liked":false,"id":219863,"user_name":"Hurt","can_delete":false,"product_type":"c1","uid":1050946,"ip_address":"","ucode":"DCE7428CCF08EF","user_header":"https://static001.geekbang.org/account/avatar/00/10/09/42/1f762b72.jpg","comment_is_top":false,"comment_ctime":1590111759,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1590111759","product_id":100039001,"comment_content":"争哥 我想问问 积分兑换的规则 放在那里呢  是每个规则 自己定义自己的类 在于积分系统交互吗","like_count":0},{"had_liked":false,"id":218953,"user_name":"scmath","can_delete":false,"product_type":"c1","uid":1149022,"ip_address":"","ucode":"641023BB246C29","user_header":"https://static001.geekbang.org/account/avatar/00/11/88/5e/7c76f422.jpg","comment_is_top":false,"comment_ctime":1589902409,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1589902409","product_id":100039001,"comment_content":"VO、BO、Entity从减少耦合，层次清楚的角度考虑，是需要独立定义的。可以通过组合和继承来复用代码。<br>这篇实战感觉带回了现实，用数据和方法分开的贫血对象模式、","like_count":0},{"had_liked":false,"id":218615,"user_name":"scmath","can_delete":false,"product_type":"c1","uid":1149022,"ip_address":"","ucode":"641023BB246C29","user_header":"https://static001.geekbang.org/account/avatar/00/11/88/5e/7c76f422.jpg","comment_is_top":false,"comment_ctime":1589846082,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1589846082","product_id":100039001,"comment_content":"分层首先要确定每层的职责，<br>1.controller层是业务处理第一阶段，转换数据格式(JSON2entity)、校验权限、转换数据对象(跨领域实体拆分后调用service层的方法)，是简单的业务拆分和聚合层。<br>2.service层是repository的拆分聚合层，service层关注的业务粒度小于controller层的粒度，但不是提供单表的CRUD，是有业务规则的，比如HTTPpost时判断数据是否存在，是否允许删除，插入A表一条数据时还必须插入B表一条数据，都在service层拆分业务逻辑。HTTPget需要返回多个表的数据在service层调用多个repository层的多个对象聚合数据。也是业务组装层。<br>3.repository层提供对象的原子操作，对象是否存在，对象是否可以删除，把对象map到数据库表，不要受数据限制。<br>controller提供跨领域的装配(拆分聚合)，service提供领域内的装配(拆分)，repository提供对象的原子操作。<br><br>","like_count":0,"discussions":[{"author":{"id":1086079,"avatar":"https://static001.geekbang.org/account/avatar/00/10/92/7f/e531ea14.jpg","nickname":"栗景树","note":"","ucode":"D2E88BBD0086CF","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":545258,"discussion_content":"没错，要看团队是个什么样的团队。比如我代码规范，代码质量高，但是考核时不会因为代码规范质量高给我高分。\n\n本来代码规范质量高bug少应该奖励，但是这个东西体现在领导眼里成了我活少干得少，实际上是我质量高bug很少，架构合理不需要经常调整变更，除了正常业务需求之外不需要频繁发版修复bug，所以也不用经常加班。\n\n而别人负责的组件一直在加班和发版，实际上是除了正常需求之外，不停的在修复之前开发引入的bug，但在领导眼中就是干的活很多。\n\n到了考核时，领导说，你看别人发了那么多版本，干的活比你多啊，所以别人考核结果比你好是应该的，反倒是你需要向别人（写bug的人）看齐学习努力进步啊。\n","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1641888883,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":215770,"user_name":"Magic","can_delete":false,"product_type":"c1","uid":1272047,"ip_address":"","ucode":"FD9CEDAA419EB0","user_header":"https://static001.geekbang.org/account/avatar/00/13/68/ef/6264ca3d.jpg","comment_is_top":false,"comment_ctime":1589100148,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1589100148","product_id":100039001,"comment_content":"思考题1：我认为合理。下层系统不要包含上层系统的业务逻辑是为了防止下层系统实现耦合业务，这里数据库表中包含了上层系统的event_id,channel_id仅仅只是落地保存而已，并不会用起参与积分系统的实现，因此我认为是合理的","like_count":0},{"had_liked":false,"id":213812,"user_name":"huanyehappy","can_delete":false,"product_type":"c1","uid":1603969,"ip_address":"","ucode":"0A5372104B7EBE","user_header":"https://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTLiaWKn5ibqO92ic7tzWrXEoZUuduaoRIiaf2icT7E1ia9ViaE2U8Tas9IgFhkpFXicKUHTdqVUPmHauS7XRg/132","comment_is_top":false,"comment_ctime":1588567198,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1588567198","product_id":100039001,"comment_content":"我们可以将公共的字段定义在父类中，让 VO、BO、Entity 都继承这个父类，各自只定义特有的字段。","like_count":0},{"had_liked":false,"id":209468,"user_name":"未来小娃","can_delete":false,"product_type":"c1","uid":1047329,"ip_address":"","ucode":"477D166EBB6B70","user_header":"https://static001.geekbang.org/account/avatar/00/0f/fb/21/d017438c.jpg","comment_is_top":false,"comment_ctime":1587554239,"is_pvip":true,"discussion_count":0,"race_medal":0,"score":"1587554239","product_id":100039001,"comment_content":"【设计模式笔记25】20200422<br>MVC分层我记得最重要的隔离关注点，每层就负责不同模块的事了，各司其责，面向接口编程，代码上满足高内聚松耦合的特点。进而联想到一个问题是，不要为了分层而分层，做业务做产品可以小步快跑，先实现一个MVP，然后逐步迭代，迭代过程中自然就会遇到代码复用问题、可读性、扩展性等问题，我们学习设计模式是术，设计原则和思想才是道，深入理解了道才能熟练运用术。工具和技巧都是可以现拿现用的，但是如果没有形成思维体系和意识就根本无法运用。因为你不知道你不知道的事物，自然就无法为你所用。","like_count":0},{"had_liked":false,"id":202889,"user_name":"KK","can_delete":false,"product_type":"c1","uid":1324863,"ip_address":"","ucode":"FFC31A3FE3A285","user_header":"https://static001.geekbang.org/account/avatar/00/14/37/3f/a9127a73.jpg","comment_is_top":false,"comment_ctime":1586080160,"is_pvip":false,"discussion_count":0,"race_medal":1,"score":"1586080160","product_id":100039001,"comment_content":"感觉作者把“基于接口而非实现编程”这个概念讲混了都。这里的“接口”到底是一个编程语言的中的语法特性接口还是实际的API接口？感觉这个概念在不同的文章中的含义不一样，都是都是在说“基于接口而非实现编程”的原则。","like_count":0},{"had_liked":false,"id":202012,"user_name":"小迪姐姐","can_delete":false,"product_type":"c1","uid":1806970,"ip_address":"","ucode":"9C4BDC625795E1","user_header":"https://static001.geekbang.org/account/avatar/00/1b/92/7a/189b17af.jpg","comment_is_top":false,"comment_ctime":1585887382,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1585887382","product_id":100039001,"comment_content":"课堂讨论个人看法：<br>1. 下层依赖了上层业务，但程度不严重，应该只是做了字段的存储&#47;透传，并没有在积分系统里理解&#47;解析event_id&#47;channel_id字段，所以没太大问题。如果想彻底摆脱依赖，其实可以拆成两个模块，一个积分模块&#47;表，一个积分id+订单id绑定模块&#47;表，但会为上层带来复杂度、性能、数据一致性的问题。<br>2. 违背了单一职责，目的是为了性能优化。<br><br>1与2本质是一件事，都是牺牲了一定的特性，来优化另一些特性。个人理解的架构设计，就是在各项指标当中寻求平衡。","like_count":0},{"had_liked":false,"id":201651,"user_name":"肖臧","can_delete":false,"product_type":"c1","uid":1047733,"ip_address":"","ucode":"4FAC9FF54DD6A0","user_header":"https://static001.geekbang.org/account/avatar/00/0f/fc/b5/ac717737.jpg","comment_is_top":false,"comment_ctime":1585816824,"is_pvip":false,"discussion_count":1,"race_medal":0,"score":"1585816824","product_id":100039001,"comment_content":"光有一个积分交易表不完整吧，每次消费积分的时候都得查一遍总积分够不够，这个交易一致性怎么保证，一个账号同时只能一个设备在线？对于这个账号而言，就没有并发交易了？","like_count":0},{"had_liked":false,"id":194974,"user_name":"永旭","can_delete":false,"product_type":"c1","uid":1068819,"ip_address":"","ucode":"C9C74BE32C8F46","user_header":"https://static001.geekbang.org/account/avatar/00/10/4f/13/5197f8d2.jpg","comment_is_top":false,"comment_ctime":1585125130,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1585125130","product_id":100039001,"comment_content":"能补充下DTO的存在价值和与vo,bo的区别吗 ?","like_count":0},{"had_liked":false,"id":189585,"user_name":"小明","can_delete":false,"product_type":"c1","uid":1625618,"ip_address":"","ucode":"5A0357E9849226","user_header":"https://static001.geekbang.org/account/avatar/00/18/ce/12/1488e361.jpg","comment_is_top":false,"comment_ctime":1584531872,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1584531872","product_id":100039001,"comment_content":"有种恍然大悟的感觉 平时在用的东西蕴含了这么多的原则 是得多思考呀","like_count":0},{"had_liked":false,"id":187051,"user_name":"咕咕噜噜","can_delete":false,"product_type":"c1","uid":1905357,"ip_address":"","ucode":"E9045BF11FAB7C","user_header":"https://static001.geekbang.org/account/avatar/00/1d/12/cd/55e25527.jpg","comment_is_top":false,"comment_ctime":1584001204,"is_pvip":false,"discussion_count":2,"race_medal":0,"score":"1584001204","product_id":100039001,"comment_content":"个人观点:1. Vo层可以完全用map代替，减少类创建，省去命名的麻烦。2. beanutil之类的工具是毒瘤，严重影响代码阅读性，还不如一个字段一个字段的copy。仅代表个人观点","like_count":0,"discussions":[{"author":{"id":1102194,"avatar":"https://static001.geekbang.org/account/avatar/00/10/d1/72/4cc8475c.jpg","nickname":"Leaf","note":"","ucode":"9AB56B7971237D","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":334450,"discussion_content":"这个是供需决定的，往IT行业涌的人增加太多，漂亮的说法叫行业的人口红利。这个要等过了刘易斯拐点，才能改变三十打工人的处境","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1607851100,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":184030,"user_name":"一区","can_delete":false,"product_type":"c1","uid":1793770,"ip_address":"","ucode":"B5142A6276E490","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/a2mRI7BYncHCL6QWfibe7g7MWc70fSsqQibu7o9PcHjicYwo5dSnAoUN75HDDRz4GXWJdpWw59yJsMwFv3t7zSiaJQ/132","comment_is_top":false,"comment_ctime":1583208192,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1583208192","product_id":100039001,"comment_content":"仓储层调用数据库到底要不要用skect *? 如果用了，不符合数据库的原则。如果不用，又让仓储层带有业务属性了。该怎么解决这个问题呢？","like_count":0},{"had_liked":false,"id":181972,"user_name":"Heaven","can_delete":false,"product_type":"c1","uid":1694207,"ip_address":"","ucode":"FA33FBCC66C911","user_header":"https://static001.geekbang.org/account/avatar/00/19/d9/ff/b23018a6.jpg","comment_is_top":false,"comment_ctime":1582685870,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1582685870","product_id":100039001,"comment_content":"对于问题1,我认为 credit_transaction中包含上层模块的数据,虽然违背了下游系统不应该包含上游系统的设计思路.但是,如果我们不包含这个字段,很有可能在查询过程,需要查询各个消费事件的名称,详情等,需要我们反过来到各个模块中根据积分中的id查询事件,更加麻烦<br>对于问题2,我认为是违反了单一职责原则,但是无可厚非,因为原则的使用要贴合实际,比如在问题1中,上游模块需要记录积分明细的id,这就需要我们在新增后返回一个积分明细的id,虽然违反了单一职责原则,但是符合接口隔离原则,可以使用","like_count":0},{"had_liked":false,"id":180059,"user_name":"M","can_delete":false,"product_type":"c1","uid":1810576,"ip_address":"","ucode":"06F26E1D62E9C9","user_header":"https://wx.qlogo.cn/mmopen/vi_32/eLNeJNaEkwGSK7xvtamMibVLMy2MpbIqX3iaEhT7JtSnTRMRTwZ2j4HX7WAapiashbiaBDVriaXKSP0Oeic6ZAEVEXag/132","comment_is_top":false,"comment_ctime":1582176179,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1582176179","product_id":100039001,"comment_content":"1，event_id会记录订单id，评论id，那如果我根据明细id怎么查这条明细来自于订单、评论呢？这个要怎么区分呢？","like_count":0},{"had_liked":false,"id":180032,"user_name":"fomy","can_delete":false,"product_type":"c1","uid":1125834,"ip_address":"","ucode":"CD87EA03B1F327","user_header":"https://static001.geekbang.org/account/avatar/00/11/2d/ca/02b0e397.jpg","comment_is_top":false,"comment_ctime":1582168910,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1582168910","product_id":100039001,"comment_content":"老师，系统分为三层架构（Controller层、Service层和DAO层）是不是和传统MVC架构不同，是否可以认为三层架构就是MVC架构呢？","like_count":0},{"had_liked":false,"id":179734,"user_name":"DFighting","can_delete":false,"product_type":"c1","uid":1233193,"ip_address":"","ucode":"F3BA2426FF8582","user_header":"https://static001.geekbang.org/account/avatar/00/12/d1/29/1b1234ed.jpg","comment_is_top":false,"comment_ctime":1582085173,"is_pvip":true,"discussion_count":0,"race_medal":0,"score":"1582085173","product_id":100039001,"comment_content":"下层系统尽量不要涉及到太多的上层业务信息这个原则是没问题的，但像eventId这类只会存在于代码层次的业务信息，只能算是一种冗余，但我们可以用它来进行溯源，从数据的角度来查看业务的流转，当系统大了，那就会很有用处！","like_count":0},{"had_liked":false,"id":179365,"user_name":"不记年","can_delete":false,"product_type":"c1","uid":1045945,"ip_address":"","ucode":"287E40C68356DC","user_header":"https://static001.geekbang.org/account/avatar/00/0f/f5/b9/888fe350.jpg","comment_is_top":false,"comment_ctime":1581991082,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1581991082","product_id":100039001,"comment_content":"1. event_id 如果将语义换成增加&#47;减少 即可<br>   channel_id确实使得底层系统耦合上层系统，但是从业务角度上讲是强关联的，如果上层系统单独维护channel_id与积分明细的关系的话，会造成系统总体复杂度上升，性能下降等缺点，权衡之后还是将channel_id保留在积分明细表中为好。<br>2. 返回id并不违反最小知识原则，因为上层系统作为创建者可以知道积分明细的id","like_count":0},{"had_liked":false,"id":178063,"user_name":"逝水","can_delete":false,"product_type":"c1","uid":1005788,"ip_address":"","ucode":"33C269F158C652","user_header":"https://static001.geekbang.org/account/avatar/00/0f/58/dc/7334e6ef.jpg","comment_is_top":false,"comment_ctime":1581581050,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1581581050","product_id":100039001,"comment_content":"表的设计没问题，但就一张表使用起来不太方便。每次消费积分，就需要拉取该用户的大量记录进行计算。<br>如果增加用户余额表，消费积分的操作就会变得简单。但由于积分有效期的不同，就会带来余额表如何更新的问题。","like_count":0},{"had_liked":false,"id":177346,"user_name":"否极泰来","can_delete":false,"product_type":"c1","uid":1439355,"ip_address":"","ucode":"C249173266251A","user_header":"https://static001.geekbang.org/account/avatar/00/15/f6/7b/b6abcbbe.jpg","comment_is_top":false,"comment_ctime":1581350679,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1581350679","product_id":100039001,"comment_content":"一、我觉得不影响因为存的是ID是为了后期需要知道这条是从哪里来的，又是去什么地方的。<br>二、拆分两个接口是为了应对后期的复杂性，加积分不涉及到并发问题，但是减积分就涉及到了需要做一些处理，例如加锁来解决","like_count":0},{"had_liked":false,"id":173367,"user_name":"Geek_41d472","can_delete":false,"product_type":"c1","uid":1247965,"ip_address":"","ucode":"DEC2B6329460CF","user_header":"https://static001.geekbang.org/account/avatar/00/13/0a/dd/88fa7b52.jpg","comment_is_top":false,"comment_ctime":1579512450,"is_pvip":false,"replies":[{"id":"67730","content":"因为实战的代码稍微有点复杂，看代码本来就费劲，不认真看，肯定会吃力","user_name":"作者回复","comment_id":173367,"uid":"1190123","ip_address":"","utype":1,"ctime":1580115495,"user_name_real":"王争"}],"discussion_count":1,"race_medal":0,"score":"1579512450","product_id":100039001,"comment_content":"为何感觉理论看的很明白，反而实战看的有点一脸懵逼了","like_count":0,"discussions":[{"author":{"id":1190123,"avatar":"https://static001.geekbang.org/account/avatar/00/12/28/eb/af064421.jpg","nickname":"王争","note":"","ucode":"2B611BE0E0EDD4","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":482049,"discussion_content":"因为实战的代码稍微有点复杂，看代码本来就费劲，不认真看，肯定会吃力","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1580115495,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":172625,"user_name":"刘学习来学习","can_delete":false,"product_type":"c1","uid":1464013,"ip_address":"","ucode":"5078B1EC8D8A66","user_header":"https://static001.geekbang.org/account/avatar/00/16/56/cd/0add8290.jpg","comment_is_top":false,"comment_ctime":1579237531,"is_pvip":false,"replies":[{"id":"67743","content":"我个人觉得没必要","user_name":"作者回复","comment_id":172625,"uid":"1190123","ip_address":"","utype":1,"ctime":1580118553,"user_name_real":"王争"}],"discussion_count":1,"race_medal":0,"score":"1579237531","product_id":100039001,"comment_content":"service层接口设计时有必要对每个模型拆分为读写两个接口么","like_count":0,"discussions":[{"author":{"id":1190123,"avatar":"https://static001.geekbang.org/account/avatar/00/12/28/eb/af064421.jpg","nickname":"王争","note":"","ucode":"2B611BE0E0EDD4","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":481795,"discussion_content":"我个人觉得没必要","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1580118553,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":172618,"user_name":"刘学习来学习","can_delete":false,"product_type":"c1","uid":1464013,"ip_address":"","ucode":"5078B1EC8D8A66","user_header":"https://static001.geekbang.org/account/avatar/00/16/56/cd/0add8290.jpg","comment_is_top":false,"comment_ctime":1579236825,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1579236825","product_id":100039001,"comment_content":"争哥，最近迷惑一个场景，对于更新或者查询借口参数如何设计，如果封装成一个对象，调用房每次都要构建一个对象，如果拆成参数，那么更新接口如果不想更新该字段，调用方自己就要手动设置为null，纠结中，望指点","like_count":0},{"had_liked":false,"id":172493,"user_name":"Jessica","can_delete":false,"product_type":"c1","uid":1084877,"ip_address":"","ucode":"9FC7E9BD3FE9F1","user_header":"https://static001.geekbang.org/account/avatar/00/10/8d/cd/b6bdc1b2.jpg","comment_is_top":false,"comment_ctime":1579189969,"is_pvip":false,"discussion_count":1,"race_medal":0,"score":"1579189969","product_id":100039001,"comment_content":"老师，你好！<br>我们在项目中在使用MVC三层架构时遇到了问题，请老师帮忙解答一下。<br>1、MVC三层架构中，查询接口和修改接口都有请求参数和返回参数，我们目前项目中会分别定义查询的request和resonse，修改的request和response，这个和VO之间的关系是什么呢？在项目中直接用VO承担修改对象的request和查询对象的response角色可以吗？<br>2、MVC三层架构中每次有VO到BO，BO到entity的转化，因此写一个公共的类封装to方法，每个controller层和service层都调用这个方法，这种实现方式是否合理呢？或者更进一步，直接写一个BaseService类，把vo2bo和boFromEntity这两个方法封装一下，所有的service层的类继承这个BaseService类，这样所有的service层方法不需要关心转换逻辑，这种方式是否合理？<br>谢谢！","like_count":0,"discussions":[{"author":{"id":1744062,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/DYAIOgq83eq69BUSktQUY0dhQIoFxSAic0r3ElUUUL1uFtpFnKSpCAJYEsOfibU3Ja701L8UmbrPVS2ZAIreRLtA/132","nickname":"Liscoal","note":"","ucode":"8A6A0DBD60847F","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":262747,"discussion_content":"1.同一个接口Request和Response都可以定义自己的VO对象，输入和输出是两个不同的维度。VO对象存在的意义之一就是为了更方便的与第三方进行交互(比如前端).在request中，最终查询数据库必然是entity对象,而在response中则是返回VO对象。\n2.我个人不太推荐这种方式,因为本身就有各种工具(比如 BeanUtils、Dozer)可以对不同的对象间进行复制.这是松耦合的，你可以基于自己的需求再对工具进行进一步封装。如果放到BaseService通过继承来实现,耦合性会增强，对未来的维护和拓展不利","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1589123536,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":172031,"user_name":"helloworld","can_delete":false,"product_type":"c1","uid":1015754,"ip_address":"","ucode":"00DF2FEC58D2E6","user_header":"https://static001.geekbang.org/account/avatar/00/0f/7f/ca/ea85bfdd.jpg","comment_is_top":false,"comment_ctime":1579075071,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1579075071","product_id":100039001,"comment_content":"2. 在实际的开发中经常遇到文中所提到的问题：vo，bo，entity是否可以通用一个（个人倾向于分开定义，因为可以确保语义明确）、如果分开定义的话得用到工具类进行属性值的拷贝（一直担心这里的数据拷贝有损失性能，课程中老师已经说了这部分的性能损失可以忽略不计）<br>3. 老师列举出的分层的意思的5点可以作为面试时的标准回答：<br>分层能起到代码复用的作用<br>分层能起到隔离变化的作用<br>分层能起到隔离关注点的作用<br>分层能提高代码的可测试性<br>分层能应对系统的复杂性","like_count":0},{"had_liked":false,"id":170770,"user_name":"quietwater","can_delete":false,"product_type":"c1","uid":1055029,"ip_address":"","ucode":"C25E2CD356D3F9","user_header":"https://static001.geekbang.org/account/avatar/00/10/19/35/be8372be.jpg","comment_is_top":false,"comment_ctime":1578711064,"is_pvip":true,"discussion_count":0,"race_medal":0,"score":"1578711064","product_id":100039001,"comment_content":"上节课中，我们讲到，下层系统不要包含太多上层系统的业务信息。但在今天的数据库设计中，积分明细表中 credit_transaction 中包含 event_id，channel_id 这些跟上层业务相关的字段，那这样的设计是否合理呢？<br>也可以把event_id，channel_id这些跟上层业务相关的字段放到关系表中，关系表由上层业务维护，这样就符合设计原则了。至于如何取舍，感觉如果是业务访问跨进程要有关系表，进程内没有关系表比较好，毕竟还在一个进程中。<br>我们经常说，修改和查询不要耦合在一个接口中，要分成两个接口来做。赚取积分和消费积分接口返回积分明细 ID，这样的接口设计是否违背单一职责原则呢？是不是返回 void 或者 boolean 类型更合理呢？<br>必须返回id，很可能马上还要通过id查询详情。而且id是命令操作的结果，应该返回。","like_count":0},{"had_liked":false,"id":169643,"user_name":"Just do it","can_delete":false,"product_type":"c1","uid":1390286,"ip_address":"","ucode":"70C3F8F9707325","user_header":"https://static001.geekbang.org/account/avatar/00/15/36/ce/5c958ff9.jpg","comment_is_top":false,"comment_ctime":1578396434,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1578396434","product_id":100039001,"comment_content":"查询总积分明细，还是查询全部积分明细。 总积分应该是统计概念， 但是，从接口返回值看这个接口是查询全部积分明细。","like_count":0},{"had_liked":false,"id":169642,"user_name":"Just do it","can_delete":false,"product_type":"c1","uid":1390286,"ip_address":"","ucode":"70C3F8F9707325","user_header":"https://static001.geekbang.org/account/avatar/00/15/36/ce/5c958ff9.jpg","comment_is_top":false,"comment_ctime":1578396214,"is_pvip":false,"replies":[{"id":"65948","content":"是的，算是一个冗余字段吧，有个更好的设计思路吗？","user_name":"作者回复","comment_id":169642,"uid":"1190123","ip_address":"","utype":1,"ctime":1578489262,"user_name_real":"王争"}],"discussion_count":2,"race_medal":0,"score":"1578396214","product_id":100039001,"comment_content":"消费积分接口的参数中是不是可以不需要积分过去时间？","like_count":0,"discussions":[{"author":{"id":1190123,"avatar":"https://static001.geekbang.org/account/avatar/00/12/28/eb/af064421.jpg","nickname":"王争","note":"","ucode":"2B611BE0E0EDD4","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":480652,"discussion_content":"是的，算是一个冗余字段吧，有个更好的设计思路吗？","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1578489262,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1390286,"avatar":"https://static001.geekbang.org/account/avatar/00/15/36/ce/5c958ff9.jpg","nickname":"Just do it","note":"","ucode":"70C3F8F9707325","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":133546,"discussion_content":"老师，消费积分的过期时间应该是永不过期的。\n按照目前数据库表的设计，我觉的积分消费业务实现起来还有挺复杂。\n因为，这个表中引起用户积分值变化的字段有：积分过期时间。消费积分。\n消费时在数据库增加一条数据，只能体现总积分的变化。没体现出消费的是最近将要过期的积分.","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1578970835,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":168618,"user_name":"落叶飞逝的恋","can_delete":false,"product_type":"c1","uid":1046429,"ip_address":"","ucode":"F9A95DB28BCF1E","user_header":"https://static001.geekbang.org/account/avatar/00/0f/f7/9d/be04b331.jpg","comment_is_top":false,"comment_ctime":1578124772,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1578124772","product_id":100039001,"comment_content":"课堂讨论第一题：其实event_id，channel_id 相对于是下层与上层的枢纽带，可以通过这些字段进行正向、逆向推导出业务场景。<br>第二题：需要根据业务系统的需要，若系统只需要告知用户增加积分或者消费成功，也可以返回boolean","like_count":0},{"had_liked":false,"id":168162,"user_name":"ismind","can_delete":false,"product_type":"c1","uid":1138710,"ip_address":"","ucode":"7AADD673ED3BC4","user_header":"https://static001.geekbang.org/account/avatar/00/11/60/16/d1dd4972.jpg","comment_is_top":false,"comment_ctime":1578023184,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1578023184","product_id":100039001,"comment_content":"1、这样的设计是否合理呢？<br>答：下层系统不要包含太多上层的业务信息，但不代表不包含。<br>如果去掉event_id，channel_id ，那么这张表只能表示当前积分的剩余、何时发生了改变，<br>那么就很难知道积分是通过何种方式发生了改变。<br>后期如果需求变动，只有单一的id似乎很难满足，就可能考虑增加字段了。<br>所以这里的设计还是合理的。<br>2，答：<br>这里与第18讲里的课后思考题是一个类似的问题，java.util.concurent的AtomicInteger的getAndIncrement()，<br>所以，这里的设计并不违背，如果需要，再增加void或者boolean类型就可以了。<br>","like_count":0},{"had_liked":false,"id":168065,"user_name":"DigDeeply","can_delete":false,"product_type":"c1","uid":1239008,"ip_address":"","ucode":"113F4D755A1FEC","user_header":"https://static001.geekbang.org/account/avatar/00/12/e7/e0/33521e13.jpg","comment_is_top":false,"comment_ctime":1578010228,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1578010228","product_id":100039001,"comment_content":"作业：<br>1. 合理。虽然明细表包含了上层的内容，有一些冗余，但是包含的也仅仅是id，而不是具体的内容，业务的变化一般也不会导致这块跟着变化，还是比较稳定的。另外，争哥也说了，不要为了设计而设计，需要权衡，我们的目的是为了更好的应对业务需求，而不是炫技。<br>2. 从业务需求上来说，是符合单一职责的，上层业务做完积分的增减操作后，还是需要获取明细的id来做记录的。","like_count":0},{"had_liked":false,"id":167853,"user_name":"程序员人生","can_delete":false,"product_type":"c1","uid":1113668,"ip_address":"","ucode":"C5C5073D89AAA2","user_header":"https://static001.geekbang.org/account/avatar/00/10/fe/44/3e3040ac.jpg","comment_is_top":false,"comment_ctime":1577951219,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1577951219","product_id":100039001,"comment_content":"为什么要分mvc三层开发？这个面试题好，看起来简单，实则一点不简单。估计很多人会觉得，我们就是这么开发的呀，没有为什么","like_count":0},{"had_liked":false,"id":167780,"user_name":"zs阿帅","can_delete":false,"product_type":"c1","uid":1141173,"ip_address":"","ucode":"07A54AE7F1CAFF","user_header":"https://static001.geekbang.org/account/avatar/00/11/69/b5/1e1731cc.jpg","comment_is_top":false,"comment_ctime":1577933153,"is_pvip":false,"replies":[{"id":"65266","content":"没大看懂你说的😂","user_name":"作者回复","comment_id":167780,"uid":"1190123","ip_address":"","utype":1,"ctime":1578010334,"user_name_real":"王争"}],"discussion_count":2,"race_medal":0,"score":"1577933153","product_id":100039001,"comment_content":"如果是创建或者是更新需要传入的Object叫什么呢？ RequestO&#47;UpdateO吗","like_count":0,"discussions":[{"author":{"id":1190123,"avatar":"https://static001.geekbang.org/account/avatar/00/12/28/eb/af064421.jpg","nickname":"王争","note":"","ucode":"2B611BE0E0EDD4","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":479988,"discussion_content":"没大看懂你说的😂","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1578010334,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1611025,"avatar":"https://static001.geekbang.org/account/avatar/00/18/95/11/eb431e52.jpg","nickname":"沈康","note":"","ucode":"02AFA50738AB8E","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":115222,"discussion_content":"entity表对象","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1577984913,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":167514,"user_name":"番茄炒西红柿","can_delete":false,"product_type":"c1","uid":1690242,"ip_address":"","ucode":"13F47BABAB2110","user_header":"https://static001.geekbang.org/account/avatar/00/19/ca/82/85f6a1a2.jpg","comment_is_top":false,"comment_ctime":1577846756,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1577846756","product_id":100039001,"comment_content":"其实我还想问一mvc同层互调的问题，之前我有跟同事说竟让不要同层互调，一来调用链不清楚，二来可能有循环引用的风险。我同事反驳说同层互调是调用了另一个service中的服务，如果写在controller层则把业务逻辑放到controller上，不合适，如果在写在Repository层则变成复杂的操作，也不算合适。突然想到一个问题，假如一个domian是一个复杂类，他自生的service逻辑涉及很多其他domian类的逻辑，这样这个类的service我觉的调用同层service是很正常的，他自己其实又承当了聚合的工作，这样是否合适？","like_count":0},{"had_liked":false,"id":167310,"user_name":"小伟","can_delete":false,"product_type":"c1","uid":1359701,"ip_address":"","ucode":"124953423491E2","user_header":"https://static001.geekbang.org/account/avatar/00/14/bf/55/198c6104.jpg","comment_is_top":false,"comment_ctime":1577760623,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1577760623","product_id":100039001,"comment_content":"课后问题试答：<br>1. 低层数据包含高层数据有其合理性，可方便关联其他业务操作记录。如有洁癖，可用桥表，但会多join一次，特别是分布式或分库分表时的join更有性能和一致性问题，且冗余的字段都是主键，不会变更，故是更好的方式。综上，形式上违反了设计原则，但实际上好用。<br>个人观点，更好的办法是设置一个统一业务变更号，如bcn（business change number），可串联一组操作的业务记录。以课后问题一为例，credit_transaction记录bcn，单独有张表记录bcn与event_id、channel_id等的关系，这样上下层数据就解耦了，都只依赖bcn。<br>2. 积分修改后返回最新积分明细或余额是常见业务场景，实现中可分别定义积分修改接口和查询接口，在facade定义新方法组合这两个接口，这样就符合了原则并解耦了。repository层还是尽量不要互调或弄一个大方法，尽量职责单一。","like_count":0},{"had_liked":false,"id":167293,"user_name":"小建","can_delete":false,"product_type":"c1","uid":1647247,"ip_address":"","ucode":"C9781DF8F79112","user_header":"https://static001.geekbang.org/account/avatar/00/19/22/8f/22e9c74b.jpg","comment_is_top":false,"comment_ctime":1577757468,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1577757468","product_id":100039001,"comment_content":"面向对象设计的本质：将合适的代码放在合适的类中 系统设计的本质：将合适的功能放在合适的模块中","like_count":0},{"had_liked":false,"id":167098,"user_name":"Ken张云忠","can_delete":false,"product_type":"c1","uid":1134288,"ip_address":"","ucode":"D0BAC9FC17DE2B","user_header":"https://static001.geekbang.org/account/avatar/00/11/4e/d0/d8a5f720.jpg","comment_is_top":false,"comment_ctime":1577691181,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1577691181","product_id":100039001,"comment_content":"1.上节课中，我们讲到，下层系统不要包含太多上层系统的业务信息。但在今天的数据库设计中，积分明细表中 credit_transaction 中包含 event_id，channel_id 这些跟上层业务相关的字段，那这样的设计是否合理呢？<br>合理.这里只是包含了必要的上层系统的业务信息,没有包含太多,积分系统需要维护积分数据的变化记录信息,倘若没有记录积分变化的渠道id和事件id将无法找到该条数据对应的积分变动事件.<br>2.我们经常说，修改和查询不要耦合在一个接口中，要分成两个接口来做。赚取积分和消费积分接口返回积分明细 ID，这样的接口设计是否违背单一职责原则呢？是不是返回 void 或者 boolean 类型更合理呢？<br>如果只是简单的单体系统且不与外部进行交互,返回void或者boolean也是合理的,由积分系统维护积分明细列表的查询功能足够了.但如果是需要供外部系统使用的积分系统,上层系统配置了不同的积分规则,产生了不同规则的积分变化数据,为了方便该上层业务系统查询具体的积分明细就需要记录积分明细id,这时返回void或者boolean就不合适了.","like_count":0},{"had_liked":false,"id":166917,"user_name":"Frank","can_delete":false,"product_type":"c1","uid":1018370,"ip_address":"","ucode":"7A488CC6FE15E7","user_header":"https://static001.geekbang.org/account/avatar/00/0f/8a/02/828938c9.jpg","comment_is_top":false,"comment_ctime":1577630301,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1577630301","product_id":100039001,"comment_content":"今天通过代码简单实现了这篇文章的内容。针对课堂讨论，个人理解如下：<br>1. 积分明细表中 credit_transaction 中包含 event_id，channel_id 这些跟上层业务相关的字段。如果放在上层业务系统，那么业务系统需要自己维护积分信息，对于上层系统来说这好像是一个无关的东西，且是自己不可控的。另外如果积分系统需要做统计各个业务的积分数据，那就不好办了。我觉得部分上层系统的相关字段是放到积分系统比较合适的。虽然有一定的维护成本，但应该是可接受的。<br>2. 对于“修改和查询不要耦合在一个接口中”我觉得在业务比较简单的情况下放到一个接口中即可，这样体现了代码的内聚性。如果业务比较简单，将其拆分成两个接口，提高了维护成本。如果后期随着业务需求迭代，如修改的需求越来越多，可考虑将其拆分。“赚取积分和消费积分接口返回积分明细 ID，这样的接口设计是否违背单一职责原则呢？是不是返回 void 或者 boolean 类型更合理呢？”对于这个问题，我之前做接口是对于新增数据是返回一个boolean类型表示接口调用成功与否，此处返回id，个人理解为上层系统做业务铺垫，可能上层系统调用完接口后需要一个id做后续的业务逻辑处理。","like_count":0},{"had_liked":false,"id":166900,"user_name":"Geek_342489","can_delete":false,"product_type":"c1","uid":1477359,"ip_address":"","ucode":"40610664021607","user_header":"https://static001.geekbang.org/account/avatar/00/16/8a/ef/ac2937ac.jpg","comment_is_top":false,"comment_ctime":1577627310,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1577627310","product_id":100039001,"comment_content":"想到最近工作中遇到的一个外部 api 接口升级的问题，以后项目中在调用外部 api 的时候一定要对这个 api 接口中的方法重新建个 service 类封装一下，并将其参数和返回值封装，这样如果换了新的 api，我们只需要改这个封装的类，否则代码中全局一搜，几十个 service 类都用到了 api 中的方法，改起来真的很恶心，测试更是想吐","like_count":0},{"had_liked":false,"id":166856,"user_name":"逍遥思","can_delete":false,"product_type":"c1","uid":1015512,"ip_address":"","ucode":"340F05C786730F","user_header":"https://static001.geekbang.org/account/avatar/00/0f/7e/d8/92a98fb6.jpg","comment_is_top":false,"comment_ctime":1577615977,"is_pvip":false,"replies":[{"id":"64825","content":"三层中的repository就是处理数据持久化的 你的意思是客户端没有涉及数据持久化吧 那就不需要了","user_name":"作者回复","comment_id":166856,"uid":"1190123","ip_address":"","utype":1,"ctime":1577666089,"user_name_real":"王争"}],"discussion_count":2,"race_medal":0,"score":"1577615977","product_id":100039001,"comment_content":"如果是涉及到数据持久化的客户端，有一定的复杂度，是否有必要分三层呢？","like_count":0,"discussions":[{"author":{"id":1190123,"avatar":"https://static001.geekbang.org/account/avatar/00/12/28/eb/af064421.jpg","nickname":"王争","note":"","ucode":"2B611BE0E0EDD4","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":479654,"discussion_content":"三层中的repository就是处理数据持久化的 你的意思是客户端没有涉及数据持久化吧 那就不需要了","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1577666089,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1015512,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/7e/d8/92a98fb6.jpg","nickname":"逍遥思","note":"","ucode":"340F05C786730F","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":109186,"discussion_content":"（似乎没有用户回复作者的机制？）\n回复小争哥：客户端涉及数据持久化，所以也可以分三层吧？","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1577672622,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":166823,"user_name":"xuanyuan","can_delete":false,"product_type":"c1","uid":1113737,"ip_address":"","ucode":"1EC79B9372868F","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTI2icbib62icXtibTkThtyRksbuJLoTLMts7zook2S30MiaBtbz0f5JskwYicwqXkhpYfvCpuYkcvPTibEaQ/132","comment_is_top":false,"comment_ctime":1577606720,"is_pvip":false,"replies":[{"id":"64856","content":"可以直接放到repo层","user_name":"作者回复","comment_id":166823,"uid":"1190123","ip_address":"","utype":1,"ctime":1577669807,"user_name_real":"王争"}],"discussion_count":1,"race_medal":0,"score":"1577606720","product_id":100039001,"comment_content":"如果要加缓存呢？如何对数据入库前要做加解密呢？是不是在service和repostory层之间加一个代理层，这样方便在入库前做一些处理。而这些不需要也不应该在service层做","like_count":0,"discussions":[{"author":{"id":1190123,"avatar":"https://static001.geekbang.org/account/avatar/00/12/28/eb/af064421.jpg","nickname":"王争","note":"","ucode":"2B611BE0E0EDD4","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":479639,"discussion_content":"可以直接放到repo层","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1577669807,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":166757,"user_name":"志振爱咋滴咋滴","can_delete":false,"product_type":"c1","uid":1237624,"ip_address":"","ucode":"E7A5049920C101","user_header":"https://static001.geekbang.org/account/avatar/00/12/e2/78/9241b7b2.jpg","comment_is_top":false,"comment_ctime":1577588951,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1577588951","product_id":100039001,"comment_content":"1.相关联的一些冗余数据是方便之后的数据统计和查询，是有必要的，否则又是要分表，有多余的统计消耗和一致性问题<br>2.大多数时候赚取和消费都伴随着再一次的数据查询，所以有必要返回对应的id方便后续的查询，所以说设计原则有时候也还是要遵循相对应的业务场景去考虑，而不是单纯的跟着设计原则走。","like_count":0},{"had_liked":false,"id":166727,"user_name":"Geek_cb0c9c","can_delete":false,"product_type":"c1","uid":1681908,"ip_address":"","ucode":"7DDF1030449534","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTJ5ib2OMvRrnG4bPzCTE28Ryvc0VpatV0rAoja1C6ymon0mgZPCQwFOda8ickd9Ghmk5Ik5ia57G2z3Q/132","comment_is_top":false,"comment_ctime":1577579114,"is_pvip":false,"replies":[{"id":"64828","content":"说的没错 也有反过来转化的情况","user_name":"作者回复","comment_id":166727,"uid":"1190123","ip_address":"","utype":1,"ctime":1577666402,"user_name_real":"王争"}],"discussion_count":1,"race_medal":0,"score":"1577579114","product_id":100039001,"comment_content":"是不是除了entity到bo，bo到vo的转换，还有vo到bo，bo到entity的转换？比如在做商品新增的时候，我经常在controller中用商品类对象作为参数映射前端的表单数据，然后service和repository中同样用对象参数去操作，大家在做类似的功能的时候是怎么处理的呢？","like_count":0,"discussions":[{"author":{"id":1190123,"avatar":"https://static001.geekbang.org/account/avatar/00/12/28/eb/af064421.jpg","nickname":"王争","note":"","ucode":"2B611BE0E0EDD4","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":479604,"discussion_content":"说的没错 也有反过来转化的情况","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1577666402,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":166670,"user_name":"lmdcx","can_delete":false,"product_type":"c1","uid":1334409,"ip_address":"","ucode":"F2CDD0091ADFD7","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTIjRETqRjvLESLDZkNTjIiaSibtNYBaS1o8WMUicOFn3ycF3Mgh6LRJibqSBjVBjiaO2ibW0gHkafATb21A/132","comment_is_top":false,"comment_ctime":1577541032,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1577541032","product_id":100039001,"comment_content":"看大家留言都十分精彩，我就只能发表感慨了：<br>「如果一个功能的修改或添加，经常要跨团队、跨项目、跨系统才能完成，那说明模块划分的不够合理，职责不够清晰，耦合过于严重。」这是一个非常需要重视的点，因为微服务一个非常棒的优点就是系统划分与组织架构对齐<br>其实还有个观点可能和大家的不太一样哈：就是接口的稳定性其实是和重用程度相关的吧<br>此处的接口和Java的接口还不太一样，没有继承性","like_count":0},{"had_liked":false,"id":166606,"user_name":"小刀","can_delete":false,"product_type":"c1","uid":1351063,"ip_address":"","ucode":"94DF8C45E09E42","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/iaByN5IfYbE9jMtWrtTDXtPEIHeV77KW1p7ZkiasiaGgA50VXaibo4fbp5ib2JkFP3iaIe4AUudLibufkEIofu5euCNHg/132","comment_is_top":false,"comment_ctime":1577517960,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1577517960","product_id":100039001,"comment_content":"冗余业务字段<br>返回ID,方便查询","like_count":0},{"had_liked":false,"id":166522,"user_name":"东风吹梦丶易散","can_delete":false,"product_type":"c1","uid":1125909,"ip_address":"","ucode":"0CB8D4C04505D4","user_header":"https://static001.geekbang.org/account/avatar/00/11/2e/15/f1cd59c9.jpg","comment_is_top":false,"comment_ctime":1577463689,"is_pvip":false,"replies":[{"id":"64830","content":"根据业务来定呢 看业务含义 ","user_name":"作者回复","comment_id":166522,"uid":"1190123","ip_address":"","utype":1,"ctime":1577666476,"user_name_real":"王争"}],"discussion_count":2,"race_medal":0,"score":"1577463689","product_id":100039001,"comment_content":"请问下老师多表联合查询时Repository返回的对象应该定义为什么","like_count":0,"discussions":[{"author":{"id":1190123,"avatar":"https://static001.geekbang.org/account/avatar/00/12/28/eb/af064421.jpg","nickname":"王争","note":"","ucode":"2B611BE0E0EDD4","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":479525,"discussion_content":"根据业务来定呢 看业务含义 ","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1577666476,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1125909,"avatar":"https://static001.geekbang.org/account/avatar/00/11/2e/15/f1cd59c9.jpg","nickname":"东风吹梦丶易散","note":"","ucode":"0CB8D4C04505D4","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":109060,"discussion_content":"个人的认知是Entity应该对应一张表的字段，多表查询Entity无法满足时是不是可以直接返回BO","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1577666717,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":166435,"user_name":"桂城老托尼","can_delete":false,"product_type":"c1","uid":1306032,"ip_address":"","ucode":"139E4B8EE88B79","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTJcxSpNMqwqyicMvdOSr9ic0p1ABiauHnv7g7YQVSJuoHPoQbYDu3YzdpgmSAk2KricUBQ5yibWBWIq75w/132","comment_is_top":false,"comment_ctime":1577447414,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1577447414","product_id":100039001,"comment_content":"其实挺期待作者在评论区和大家交流的，通过交流才能理解更深入，也能举一反三。","like_count":0},{"had_liked":false,"id":166416,"user_name":"刘大明","can_delete":false,"product_type":"c1","uid":1035081,"ip_address":"","ucode":"83C063FBD9BF2B","user_header":"https://static001.geekbang.org/account/avatar/00/0f/cb/49/0b9ffc8e.jpg","comment_is_top":false,"comment_ctime":1577444492,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1577444492","product_id":100039001,"comment_content":"问题1.针对当前业务场景来说渠道id和事件id确实是有必要的。如其他同学的回答，要做幂等性。如果字段拆分过细的，sql查询效率可能会降低。<br>问题2.修改和查询放在一个接口里面确实不符合单一职业原则。但是对于当前的业务来说还是有必要的。就像其他同学说的，你付款之后有小票。","like_count":0},{"had_liked":false,"id":166257,"user_name":"一名小学生","can_delete":false,"product_type":"c1","uid":1137292,"ip_address":"","ucode":"5C73082E6B6370","user_header":"https://static001.geekbang.org/account/avatar/00/11/5a/8c/1fec5fa2.jpg","comment_is_top":false,"comment_ctime":1577425555,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1577425555","product_id":100039001,"comment_content":"打卡～<br>修改和查询不要耦合在一个接口这个“原则”也要看场景吧，说到底也是粒度的问题。对于赚取积分和消费积分下，往往修改和查询都是同时，比如你赚取和消费完积分，就需要把结果查询出来展示给用户，所以从我觉得它从功能上看不违反单一职责","like_count":0},{"had_liked":false,"id":166194,"user_name":"Fancier","can_delete":false,"product_type":"c1","uid":1450364,"ip_address":"","ucode":"04CBB84F4DC554","user_header":"https://static001.geekbang.org/account/avatar/00/16/21/7c/aae7abad.jpg","comment_is_top":false,"comment_ctime":1577414084,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1577414084","product_id":100039001,"comment_content":"都是合理的","like_count":0},{"had_liked":false,"id":166180,"user_name":"守拙","can_delete":false,"product_type":"c1","uid":1738326,"ip_address":"","ucode":"F594B2DA3F6D4F","user_header":"https://static001.geekbang.org/account/avatar/00/1a/86/56/509535da.jpg","comment_is_top":false,"comment_ctime":1577411570,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1577411570","product_id":100039001,"comment_content":"课堂讨论Answer:<br><br>1. 是合理的.如果credit_transaction表不包含event_id channel_id, 查询时下层系统(积分模块)和上层系统(营销模块)在业务上的交互就不可避免.<br><br><br><br>2. 接口返回明细id或boolean都不违背单一职责原则. 业务如果需要明细id,返回明细id是更好的做法.否则返回明细id,boolean都可以.","like_count":0},{"had_liked":false,"id":166175,"user_name":"Rain","can_delete":false,"product_type":"c1","uid":1238221,"ip_address":"","ucode":"6A270D922A3B9D","user_header":"https://static001.geekbang.org/account/avatar/00/12/e4/cd/5363c8fa.jpg","comment_is_top":false,"comment_ctime":1577410978,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1577410978","product_id":100039001,"comment_content":"两个问题的答案都是依实际使用场景而设计。<br><br>1. Trans id 和 channel id 在这个场景中不属于下层引用上层信息，积分是跟这两项息息相关的。重点在于你的业务，查询时是否需要这两项信息，如果需要那就没必要设计成两个表，相反，如果查询积分明细的时候需求就是只需要显示在什么时间点积分变动了多少，这样的话也是不需要存两个表，都不显示你存他干啥？<br><br>2. 这个绝对是跟实际使用场景相关的，如果每次积分变动都会有一个按钮，点击可以查看本次积分变动的详细情况，那么这个id 必须要返回，否则如果只是给个提示，可以是void.","like_count":0},{"had_liked":false,"id":166143,"user_name":"小晏子","can_delete":false,"product_type":"c1","uid":1132337,"ip_address":"","ucode":"3AAA6FB5ACB6AE","user_header":"https://static001.geekbang.org/account/avatar/00/11/47/31/f35367c8.jpg","comment_is_top":false,"comment_ctime":1577408925,"is_pvip":false,"discussion_count":0,"race_medal":1,"score":"1577408925","product_id":100039001,"comment_content":"课后思考：<br>1. 积分表包含event_id和channel_id是合理的，对于积分业务来讲，产生积分的事件和产生积分的渠道都是业务的一部分，都是需要根据积分表能查询到的。所以这种设计是合理的，是必须要这么做的。<br>2. 返回积分ID并不违反SRP，返回ID可以方便后面的查询。而且返回积分ID并没有给赚取积分消费积分增加额外的功能，没有破坏SRP。","like_count":0},{"had_liked":false,"id":166124,"user_name":"何妨","can_delete":false,"product_type":"c1","uid":1385377,"ip_address":"","ucode":"EC3983BFF7992A","user_header":"https://static001.geekbang.org/account/avatar/00/15/23/a1/b08f3ee7.jpg","comment_is_top":false,"comment_ctime":1577407590,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1577407590","product_id":100039001,"comment_content":"感谢王峥老师解答了我对 vo bo entity 的疑惑，系统做大之后这种分层的好处就显而易见了。对于接口耦合来说，接口本身是服务于业务的，设计原则指导代码设计，有时候刻板的完全遵守设计原则反而会增加系统的复杂性。","like_count":0},{"had_liked":false,"id":166119,"user_name":"再见孙悟空","can_delete":false,"product_type":"c1","uid":1025518,"ip_address":"","ucode":"57E12A2F9CD915","user_header":"https://static001.geekbang.org/account/avatar/00/0f/a5/ee/6bbac848.jpg","comment_is_top":false,"comment_ctime":1577406785,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1577406785","product_id":100039001,"comment_content":"第一个问题我觉得是合理的，如果不这么做，那么上层业务中每个赚取或者消费积分的地方都要关联积分的字段，会将积分的赚取和使用分散在各处，不方便维护，也违反了高内聚地耦合。<br><br>第二个问题，赚取或消费时返回 id 有一个好处是，可以立即使用，比如说赚取到积分后就可以不用刷新请求积分列表就能使用该积分。不知道理解对不对。","like_count":0}]}