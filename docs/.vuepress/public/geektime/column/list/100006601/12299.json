{"id":12299,"title":"41 | 互联网架构模板：“开发层”和“服务层”技术","content":"<p>上一期，我介绍了互联网架构模板中的存储层技术。关于这部分内容，我将逐层介绍每个技术点的产生背景、应用场景和关键技术，希望让你可以对整体的技术架构有一个全貌认知。</p><p>今天我们来聊聊<span class=\"orange\">互联网架构模板的“开发层”和“服务层”技术</span>。</p><h2>开发层技术</h2><p>1.开发框架</p><p>在专栏第38、39期中，我们深入分析了互联网业务发展的一个特点：复杂度越来越高。复杂度增加的典型现象就是系统越来越多，不同的系统由不同的小组开发。如果每个小组用不同的开发框架和技术，则会带来很多问题，典型的问题有：</p><ul>\n<li>\n<p>技术人员之间没有共同的技术语言，交流合作少。</p>\n</li>\n<li>\n<p>每类技术都需要投入大量的人力和资源并熟练精通。</p>\n</li>\n<li>\n<p>不同团队之间人员无法快速流动，人力资源不能高效的利用。</p>\n</li>\n</ul><p>所以，互联网公司都会指定一个大的技术方向，然后使用统一的开发框架。例如，Java相关的开发框架SSH、SpringMVC、Play，Ruby的Ruby on Rails，PHP的ThinkPHP，Python的Django等。使用统一的开发框架能够解决上面提到的各种问题，大大提升组织和团队的开发效率。</p><p>对于框架的选择，有一个总的原则：<strong>优选成熟的框架，避免盲目追逐新技术！</strong></p><p>为什么呢？</p><p>首先，成熟的框架资料文档齐备，各种坑基本上都有人踩过了，遇到问题很容易通过搜索来解决。</p><!-- [[[read_end]]] --><p>其次，成熟的框架受众更广，招聘时更加容易招到合适的人才。</p><p>第三，成熟的框架更加稳定，不会出现大的变动，适合长期发展。</p><p>2.Web服务器</p><p>开发框架只是负责完成业务功能的开发，真正能够运行起来给用户提供服务，还需要服务器配合。</p><p>独立开发一个成熟的Web服务器，成本非常高，况且业界又有那么多成熟的开源Web服务器，所以互联网行业基本上都是“拿来主义”，挑选一个流行的开源服务器即可。大一点的公司，可能会在开源服务器的基础上，结合自己的业务特点做二次开发，例如淘宝的Tengine，但一般公司基本上只需要将开源服务器摸透，优化一下参数，调整一下配置就差不多了。</p><p>选择一个服务器主要和开发语言相关，例如，Java的有Tomcat、JBoss、Resin等，PHP/Python的用Nginx，当然最保险的就是用Apache了，什么语言都支持。</p><p>你可能会担心Apache的性能之类的问题，其实不用过早担心这个，等到业务真的发展到Apache撑不住的时候再考虑切换也不迟，那时候你有的是钱，有的是人，有的是时间。</p><p>3.容器</p><p>容器是最近几年才开始火起来的，其中以Docker为代表，在BAT级别的公司已经有较多的应用。例如，腾讯万台规模的Docker应用实践（<a href=\"http://www.infoq.com/cn/articles/tencent-millions-scale-docker-application-practice\">http://www.infoq.com/cn/articles/tencent-millions-scale-docker-application-practice</a>）、新浪微博红包的大规模Docker集群（<a href=\"http://www.infoq.com/cn/articles/large-scale-docker-cluster-practise-experience-share\">http://www.infoq.com/cn/articles/large-scale-docker-cluster-practise-experience-share</a>）等。</p><p>传统的虚拟化技术是虚拟机，解决了跨平台的问题，但由于虚拟机太庞大，启动又慢，运行时太占资源，在互联网行业并没有大规模应用；而Docker的容器技术，虽然没有跨平台，但启动快，几乎不占资源，推出后立刻就火起来了，预计Docker类的容器技术将是技术发展的主流方向。</p><p>千万不要以为Docker只是一个虚拟化或者容器技术，它将在很大程度上改变目前的技术形势：</p><ul>\n<li>\n<p>运维方式会发生革命性的变化：Docker启动快，几乎不占资源，随时启动和停止，基于Docker打造自动化运维、智能化运维将成为主流方式。</p>\n</li>\n<li>\n<p>设计模式会发生本质上的变化：启动一个新的容器实例代价如此低，将鼓励设计思路朝“微服务”的方向发展。</p>\n</li>\n</ul><p>例如，一个传统的网站包括登录注册、页面访问、搜索等功能，没有用容器的情况下，除非有特别大的访问量，否则这些功能开始时都是集成在一个系统里面的；有了容器技术后，一开始就可以将这些功能按照服务的方式设计，避免后续访问量增大时又要重构系统。</p><h2>服务层技术</h2><p>互联网业务的不断发展带来了复杂度的不断提升，业务系统也越来越多，系统间相互依赖程度加深。比如说为了完成A业务系统，可能需要B、C、D、E等十几个其他系统进行合作。从数学的角度进行评估，可以发现系统间的依赖是呈指数级增长的：3个系统相互关联的路径为3条，6个系统相互关联的路径为15条。</p><p>服务层的主要目标其实就是为了降低系统间相互关联的复杂度。</p><p>1.配置中心</p><p>故名思议，配置中心就是集中管理各个系统的配置。</p><p>当系统数量不多的时候，一般是各系统自己管理自己的配置，但系统数量多了以后，这样的处理方式会有问题：</p><ul>\n<li>\n<p>某个功能上线时，需要多个系统配合一起上线，分散配置时，配置检查、沟通协调需要耗费较多时间。</p>\n</li>\n<li>\n<p>处理线上问题时，需要多个系统配合查询相关信息，分散配置时，操作效率很低，沟通协调也需要耗费较多时间。</p>\n</li>\n<li>\n<p>各系统自己管理配置时，一般是通过文本编辑的方式修改的，没有自动的校验机制，容易配置错误，而且很难发现。</p>\n</li>\n</ul><p>例如，我曾经遇到将IP地址的数字0误敲成了键盘的字母O，肉眼非常难发现，但程序检查其实就很容易。</p><p>实现配置中心主要就是为了解决上面这些问题，将配置中心做成通用的系统的好处有：</p><ul>\n<li>\n<p>集中配置多个系统，操作效率高。</p>\n</li>\n<li>\n<p>所有配置都在一个集中的地方，检查方便，协作效率高。</p>\n</li>\n<li>\n<p>配置中心可以实现程序化的规则检查，避免常见的错误。比如说检查最小值、最大值、是否IP地址、是否URL地址，都可以用正则表达式完成。</p>\n</li>\n<li>\n<p>配置中心相当于备份了系统的配置，当某些情况下需要搭建新的环境时，能够快速搭建环境和恢复业务。</p>\n</li>\n</ul><p>整机磁盘坏掉、机器主板坏掉……遇到这些不可恢复的故障时，基本上只能重新搭建新的环境。程序包肯定是已经有的，加上配置中心的配置，能够很快搭建新的运行环境，恢复业务。否则几十个配置文件重新一个个去Vim中修改，耗时很长，还很容易出错。</p><p>下面是配置中心简单的设计，其中通过“系统标识 + host + port”来标识唯一一个系统运行实例是常见的设计方法。</p><p><img src=\"https://static001.geekbang.org/resource/image/32/49/328663d40a84316a135e9bc396a95d49.jpg?wh=3129*1884\" alt=\"\"></p><p>2.服务中心</p><p>当系统数量不多的时候，系统间的调用一般都是直接通过配置文件记录在各系统内部的，但当系统数量多了以后，这种方式就存在问题了。</p><p>比如说总共有10个系统依赖A系统的X接口，A系统实现了一个新接口Y，能够更好地提供原有X接口的功能，如果要让已有的10个系统都切换到Y接口，则这10个系统的几十上百台机器的配置都要修改，然后重启，可想而知这个效率是很低的。</p><p>除此以外，如果A系统总共有20台机器，现在其中5台出故障了，其他系统如果是通过域名访问A系统，则域名缓存失效前，还是可能访问到这5台故障机器的；如果其他系统通过IP访问A系统，那么A系统每次增加或者删除机器，其他所有10个系统的几十上百台机器都要同步修改，这样的协调工作量也是非常大的。</p><p>服务中心就是为了解决上面提到的跨系统依赖的“配置”和“调度”问题。</p><p>服务中心的实现一般来说有两种方式：服务名字系统和服务总线系统。</p><ul>\n<li>服务名字系统（Service Name System）</li>\n</ul><p>看到这个翻译，相信你会立刻联想到DNS，即Domain Name System。没错，两者的性质是基本类似的。</p><p>DNS的作用将域名解析为IP地址，主要原因是我们记不住太多的数字IP，域名就容易记住。服务名字系统是为了将Service名称解析为“host + port + 接口名称”，但是和DNS一样，真正发起请求的还是请求方。</p><p>基本的设计如下：</p><p><img src=\"https://static001.geekbang.org/resource/image/26/a7/263e32f7456bf980df8cb86f3e4deca7.jpg?wh=4075*2343\" alt=\"\"></p><ul>\n<li>服务总线系统（Service Bus System）</li>\n</ul><p>看到这个翻译，相信你可能立刻联想到计算机的总线。没错，两者的本质也是基本类似的。</p><p>相比服务名字系统，服务总线系统更进一步了：由总线系统完成调用，服务请求方都不需要直接和服务提供方交互了。</p><p>基本的设计如下：</p><p><img src=\"https://static001.geekbang.org/resource/image/0d/a7/0d71fe7436dd5b907b43eaf16a502fa7.jpg?wh=4112*2310\" alt=\"\"></p><p>“服务名字系统”和“服务总线系统”简单对比如下表所示：</p><p><img src=\"https://static001.geekbang.org/resource/image/0y/fd/0yy9a866044c2e5391ed2cfdd95a9efd.jpg?wh=5048*3315\" alt=\"\"></p><p>3.消息队列</p><p>互联网业务的一个特点是“快”，这就要求很多业务处理采用异步的方式。例如，大V发布一条微博后，系统需要发消息给关注的用户，我们不可能等到所有消息都发送给关注用户后再告诉大V说微博发布成功了，只能先让大V发布微博，然后再发消息给关注用户。</p><p>传统的异步通知方式是由消息生产者直接调用消息消费者提供的接口进行通知的，但当业务变得庞大，子系统数量增多时，这样做会导致系统间交互非常复杂和难以管理，因为系统间互相依赖和调用，整个系统的结构就像一张蜘蛛网，如下图所示：</p><p><img src=\"https://static001.geekbang.org/resource/image/5f/0d/5ff50c6bf4c4df59f4806302b7bd4d0d.jpg?wh=4055*2743\" alt=\"\"></p><p>消息队列就是为了实现这种跨系统异步通知的中间件系统。消息队列既可以“一对一”通知，也可以“一对多”广播。以微博为例，可以清晰地看到异步通知的实现和作用，如下图所示。</p><p><img src=\"https://static001.geekbang.org/resource/image/cc/d2/cc19b9c100631330ba4c1f4c4c251fd2.jpg?wh=4389*2613\" alt=\"\"></p><p>对比前面的蜘蛛网架构，可以清晰地看出引入消息队列系统后的效果：</p><ul>\n<li>\n<p>整体结构从网状结构变为线性结构，结构清晰；</p>\n</li>\n<li>\n<p>消息生产和消息消费解耦，实现简单；</p>\n</li>\n<li>\n<p>增加新的消息消费者，消息生产者完全不需要任何改动，扩展方便；</p>\n</li>\n<li>\n<p>消息队列系统可以做高可用、高性能，避免各业务子系统各自独立做一套，减轻工作量；</p>\n</li>\n<li>\n<p>业务子系统只需要聚焦业务即可，实现简单。</p>\n</li>\n</ul><p>消息队列系统基本功能的实现比较简单，但要做到高性能、高可用、消息时序性、消息事务性则比较难。业界已经有很多成熟的开源实现方案，如果要求不高，基本上拿来用即可，例如，RocketMQ、Kafka、ActiveMQ等。但如果业务对消息的可靠性、时序、事务性要求较高时，则要深入研究这些开源方案，否则很容易踩坑。</p><p>开源的用起来方便，但要改就很麻烦了。由于其相对比较简单，很多公司也会花费人力和时间重复造一个轮子，这样也有好处，因为可以根据自己的业务特点做快速的适配开发。</p><h2>小结</h2><p>今天我为你讲了互联网架构模板中的开发层和服务层技术，希望对你有所帮助。</p><p>这就是今天的全部内容，留一道思考题给你吧，使用统一的开发框架和开发语言可以让团队开发效率更高，但这样做会带来什么问题？如何解决？</p><p>欢迎你把答案写到留言区，和我一起讨论。相信经过深度思考的回答，也会让你对知识的理解更加深刻。（编辑乱入：精彩的留言有机会获得丰厚福利哦！）</p>","comments":[{"had_liked":false,"id":17851,"user_name":"feifei","can_delete":false,"product_type":"c1","uid":1105431,"ip_address":"","ucode":"B1F8AE3AD82C51","user_header":"https://static001.geekbang.org/account/avatar/00/10/de/17/75e2b624.jpg","comment_is_top":false,"comment_ctime":1532997319,"is_pvip":false,"replies":[{"id":6251,"content":"分析到位👍","user_name":"作者回复","user_name_real":"华仔","uid":1098920,"ctime":1533087313,"ip_address":"","comment_id":17851,"utype":1}],"discussion_count":2,"race_medal":0,"score":2,"product_id":100006601,"comment_content":"\n1，程序没有用适合的语言开发，程序效率低下，比如现在需要开发内存的缓存系统，但团队开发语言是java，java是一门高级语言，适合做业务系统，用java做内存操作内存会效率低下，而且浪费严重\n2，开发框架和开发语言，都是有场景限制的，尺有所短，寸有所长这个道理在哪里都是一样的，c的优势在底层，java在应用，每一个都有所长所短\n\n解决方案\n1，将业务服务化，对外提供统一的API，各业务通过API调用完成，这样每一个业务都可以使用不同的开发语言和框架完成，各系统完全解耦。\n2，容器化，使用docker将平台统一化，更好的可维护和扩展","like_count":88},{"had_liked":false,"id":17841,"user_name":"narry","can_delete":false,"product_type":"c1","uid":1033576,"ip_address":"","ucode":"B8010C1DE39D08","user_header":"https://static001.geekbang.org/account/avatar/00/0f/c5/68/7afb7304.jpg","comment_is_top":false,"comment_ctime":1532995742,"is_pvip":false,"replies":[{"id":6254,"content":"赞同👍","user_name":"作者回复","user_name_real":"华仔","uid":1098920,"ctime":1533087435,"ip_address":"","comment_id":17841,"utype":1}],"discussion_count":1,"race_medal":0,"score":2,"product_id":100006601,"comment_content":"问题就是可能发生“手里有锤子后，看到什么都是钉子”的情况，在业务规模小的时候采用单一语言单一框架，当规模大了还是应该有一定的灵活性，有一个主力的语言和框架，合适的工作用合适语言和框架，而微服务架构的比较适合混合语言和架构的模式","like_count":36,"discussions":[{"author":{"id":1098920,"avatar":"https://static001.geekbang.org/account/avatar/00/10/c4/a8/f2685e1b.jpg","nickname":"华仔","note":"","ucode":"851FF94CF5133A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":421302,"discussion_content":"分析到位👍","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1533087313,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1293551,"avatar":"https://static001.geekbang.org/account/avatar/00/13/bc/ef/98550b85.jpg","nickname":"云彩＆草原","note":"","ucode":"6AEA686202F1CC","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":559468,"discussion_content":"m","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1648789221,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":39278,"user_name":"aaaaaaaaaaaas","can_delete":false,"product_type":"c1","uid":1230417,"ip_address":"","ucode":"44F3D4DB3F5678","user_header":"https://static001.geekbang.org/account/avatar/00/12/c6/51/30c17473.jpg","comment_is_top":false,"comment_ctime":1542242863,"is_pvip":false,"replies":[{"id":14078,"content":"你可以这样理解：EJB=所有微服务基础设施的全集","user_name":"作者回复","user_name_real":"华仔","uid":1098920,"ctime":1542262132,"ip_address":"","comment_id":39278,"utype":1}],"discussion_count":2,"race_medal":0,"score":2,"product_id":100006601,"comment_content":"老师，我记得SOA和微服务的章节说，SOA相当于多合一，将拆出来的各服务用EJB总线连接起来，这也是微服务架构和SOA的区别，那微服务的服务中心和EJB总线有什么区别呢","like_count":16,"discussions":[{"author":{"id":1098920,"avatar":"https://static001.geekbang.org/account/avatar/00/10/c4/a8/f2685e1b.jpg","nickname":"华仔","note":"","ucode":"851FF94CF5133A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":421298,"discussion_content":"赞同👍","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1533087435,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":28786,"user_name":"孙振超","can_delete":false,"product_type":"c1","uid":1101755,"ip_address":"","ucode":"0F9EABC6125350","user_header":"https://static001.geekbang.org/account/avatar/00/10/cf/bb/22af0e52.jpg","comment_is_top":false,"comment_ctime":1538144998,"is_pvip":false,"replies":[{"id":10426,"content":"赞同👍","user_name":"作者回复","user_name_real":"华仔","uid":1098920,"ctime":1538214243,"ip_address":"","comment_id":28786,"utype":1}],"discussion_count":1,"race_medal":0,"score":2,"product_id":100006601,"comment_content":"如同没有包治百病的神药一样，每一个开发框架和语言也只能能解决某些场景，适合某些情况。\n\n在公司中一方面会选择一个可以适应于大多数场景的主流的开发框架和语言，保证工作效率、人才体系和技术积累；同时也会根据特定场景选择其他的开发框架或语言，而后通过开发client包或采用约定协议的方式将异构的系统链接到一起，共同为业务服务。","like_count":15,"discussions":[{"author":{"id":1098920,"avatar":"https://static001.geekbang.org/account/avatar/00/10/c4/a8/f2685e1b.jpg","nickname":"华仔","note":"","ucode":"851FF94CF5133A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":428993,"discussion_content":"你可以这样理解：EJB=所有微服务基础设施的全集","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1542262132,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1073443,"avatar":"https://static001.geekbang.org/account/avatar/00/10/61/23/30d134cf.jpg","nickname":"Young","note":"","ucode":"075C0BBE20FD8C","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":383675,"discussion_content":"是ESB，不是EJB","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1626186641,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":21661,"user_name":"文竹","can_delete":false,"product_type":"c1","uid":1103167,"ip_address":"","ucode":"74413B1975976B","user_header":"https://static001.geekbang.org/account/avatar/00/10/d5/3f/80bf4841.jpg","comment_is_top":false,"comment_ctime":1535213616,"is_pvip":false,"replies":[{"id":7694,"content":"赞同👍","user_name":"作者回复","user_name_real":"华仔","uid":1098920,"ctime":1535275960,"ip_address":"","comment_id":21661,"utype":1}],"discussion_count":1,"race_medal":0,"score":2,"product_id":100006601,"comment_content":"出现的问题：\n1、违背了合适原则，本来用C++语言最合适，偏偏使用了Java\n2、容易出现思维盲区，有可能有更好的替代品\n\n解决问题：具体问题具体分析，规范是也是需要不断完善的，不能盲目遵守。","like_count":11,"discussions":[{"author":{"id":1098920,"avatar":"https://static001.geekbang.org/account/avatar/00/10/c4/a8/f2685e1b.jpg","nickname":"华仔","note":"","ucode":"851FF94CF5133A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":425371,"discussion_content":"赞同👍","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1538214243,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":19306,"user_name":"性能","can_delete":false,"product_type":"c1","uid":1137192,"ip_address":"","ucode":"BBFA2A31B02B8F","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTIyhbzdkFM64HvRATbWjc3hkic7icUszl9hU9hpIMZcibKH4wWam4SHfkcvM7MUoKjGDRrvYGXuvR91Q/132","comment_is_top":false,"comment_ctime":1533773571,"is_pvip":false,"replies":[{"id":6689,"content":"1. SOA架构就是ESB，互联网就是微服务的服务中心。\n\n2. 服务名字系统确实需要拉取服务配置信息，但对于机器来说，几万条信息完全没有压力，所以不要担心。\n3. 配置更新要及时的话，有几种做法：配置推送，配置定时（例如每秒）校验，zk配置变更通知。用得最多的反而是定时校验，校验做的很轻量级，每次只要校验配置版本号或者配置hash值","user_name":"作者回复","user_name_real":"华仔","uid":1098920,"ctime":1533780436,"ip_address":"","comment_id":19306,"utype":1}],"discussion_count":1,"race_medal":0,"score":2,"product_id":100006601,"comment_content":"李老师，服务总线系统，就是企业ESB吧？对于大型金融类企业来说，服务总线系统更合适吧？服务名字系统每台机器都要拉取一大堆服务配置信息，配置信息更新也不够及时。请问阿里用的是哪种呢？","like_count":4,"discussions":[{"author":{"id":1098920,"avatar":"https://static001.geekbang.org/account/avatar/00/10/c4/a8/f2685e1b.jpg","nickname":"华仔","note":"","ucode":"851FF94CF5133A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":422791,"discussion_content":"赞同👍","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1535275960,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":18153,"user_name":"cc","can_delete":false,"product_type":"c1","uid":1013850,"ip_address":"","ucode":"AF5196A960F63F","user_header":"https://thirdwx.qlogo.cn/mmopen/vi_32/EiaAvXsIJoJmWP00FhZLicyBiapZickLNZmjlATKoe2RqicpPOHhWuDe0t2E5lLVBWC6kibcYbvOdbAhjCbtnx9OeVAQ/132","comment_is_top":false,"comment_ctime":1533170407,"is_pvip":false,"replies":[{"id":6372,"content":"不能一刀切，但也不要百花齐放😄","user_name":"作者回复","user_name_real":"华仔","uid":1098920,"ctime":1533203003,"ip_address":"","comment_id":18153,"utype":1}],"discussion_count":2,"race_medal":0,"score":2,"product_id":100006601,"comment_content":"语言有不同的长短板，使用的时候应该扬长避短。语言的选择要考虑到业务场景。不能一刀切","like_count":3,"discussions":[{"author":{"id":1098920,"avatar":"https://static001.geekbang.org/account/avatar/00/10/c4/a8/f2685e1b.jpg","nickname":"华仔","note":"","ucode":"851FF94CF5133A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":421775,"discussion_content":"1. SOA架构就是ESB，互联网就是微服务的服务中心。\n\n2. 服务名字系统确实需要拉取服务配置信息，但对于机器来说，几万条信息完全没有压力，所以不要担心。\n3. 配置更新要及时的话，有几种做法：配置推送，配置定时（例如每秒）校验，zk配置变更通知。用得最多的反而是定时校验，校验做的很轻量级，每次只要校验配置版本号或者配置hash值","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1533780436,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":20208,"user_name":"jh.mai","can_delete":false,"product_type":"c1","uid":1119813,"ip_address":"","ucode":"CDE02CD2A2291C","user_header":"https://static001.geekbang.org/account/avatar/00/11/16/45/d7ac3375.jpg","comment_is_top":false,"comment_ctime":1534310125,"is_pvip":false,"replies":[{"id":7130,"content":"可以做了，择日不如撞日😄","user_name":"作者回复","user_name_real":"华仔","uid":1098920,"ctime":1534388219,"ip_address":"","comment_id":20208,"utype":1}],"discussion_count":1,"race_medal":0,"score":2,"product_id":100006601,"comment_content":"如果是业务发展初期，设计是一个服务A，服务A下会把各个子模块按包分出来，以便后面的拆分，现在出现另外系统B同样出现A服务的子模块功能，是否可以把A子模块抽取出来当作独立服务呢？","like_count":2,"discussions":[{"author":{"id":1098920,"avatar":"https://static001.geekbang.org/account/avatar/00/10/c4/a8/f2685e1b.jpg","nickname":"华仔","note":"","ucode":"851FF94CF5133A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":421410,"discussion_content":"不能一刀切，但也不要百花齐放😄","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1533203003,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":1,"child_discussions":[{"author":{"id":3577902,"avatar":"","nickname":"Cchchunhe","note":"","ucode":"AAC2DD22E3FD8F","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1098920,"avatar":"https://static001.geekbang.org/account/avatar/00/10/c4/a8/f2685e1b.jpg","nickname":"华仔","note":"","ucode":"851FF94CF5133A","race_medal":0,"user_type":2,"is_pvip":false},"discussion":{"id":614115,"discussion_content":"站在纯技术演进的角度来说，希望他百花齐放百家争鸣，竞争带来更好的创新与进步。站在公司的角度来说，多则乱，乱难管，易失控，更希望统一。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1681706585,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":421410,"ip_address":"广东","group_id":0},"score":614115,"extra":""}]}]},{"had_liked":false,"id":17852,"user_name":"wuhulala","can_delete":false,"product_type":"c1","uid":1191143,"ip_address":"","ucode":"6DBF2C9E19B930","user_header":"https://static001.geekbang.org/account/avatar/00/12/2c/e7/3c0eba8b.jpg","comment_is_top":false,"comment_ctime":1532997497,"is_pvip":false,"replies":[{"id":6252,"content":"有时候我们需要锤子，但有时候可能电锯更好😄","user_name":"作者回复","user_name_real":"华仔","uid":1098920,"ctime":1533087364,"ip_address":"","comment_id":17852,"utype":1}],"discussion_count":1,"race_medal":0,"score":2,"product_id":100006601,"comment_content":"虽然统一的开发框架整体来说开发效率高，但是遇到一些更好的解决方案的时候却只能干瞪眼或者使用当前技术栈实现一遍。整体来说规范性更好，所有的技术问题由技术好一点的来解决，业务开发人员无需关注这么多东西。","like_count":2,"discussions":[{"author":{"id":1098920,"avatar":"https://static001.geekbang.org/account/avatar/00/10/c4/a8/f2685e1b.jpg","nickname":"华仔","note":"","ucode":"851FF94CF5133A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":422149,"discussion_content":"可以做了，择日不如撞日😄","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1534388219,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":330303,"user_name":"WESTWALL","can_delete":false,"product_type":"c1","uid":1434423,"ip_address":"","ucode":"295A030F9D3BF4","user_header":"https://static001.geekbang.org/account/avatar/00/15/e3/37/c132802f.jpg","comment_is_top":false,"comment_ctime":1641900100,"is_pvip":false,"replies":[{"id":120656,"content":"有点类似，但是API网关更多的是负责内外通信，也就是通常说的南北流量，微服务内部通信是东西流量，目前APISIX、istio可以算是Service Bus System。","user_name":"作者回复","user_name_real":"编辑","uid":1098920,"ctime":1642213845,"ip_address":"","comment_id":330303,"utype":1}],"discussion_count":1,"race_medal":0,"score":2,"product_id":100006601,"comment_content":"可以这么理解吗老师？\nService Name System：注册中心 + load balance。  \nService Bus System：API网关。","like_count":1,"discussions":[{"author":{"id":1098920,"avatar":"https://static001.geekbang.org/account/avatar/00/10/c4/a8/f2685e1b.jpg","nickname":"华仔","note":"","ucode":"851FF94CF5133A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":421303,"discussion_content":"有时候我们需要锤子，但有时候可能电锯更好😄","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1533087364,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":17851,"user_name":"feifei","can_delete":false,"product_type":"c1","uid":1105431,"ip_address":"","ucode":"B1F8AE3AD82C51","user_header":"https://static001.geekbang.org/account/avatar/00/10/de/17/75e2b624.jpg","comment_is_top":false,"comment_ctime":1532997319,"is_pvip":false,"replies":[{"id":6251,"content":"分析到位👍","user_name":"作者回复","user_name_real":"华仔","uid":1098920,"ctime":1533087313,"ip_address":"","comment_id":17851,"utype":1}],"discussion_count":2,"race_medal":0,"score":2,"product_id":100006601,"comment_content":"\n1，程序没有用适合的语言开发，程序效率低下，比如现在需要开发内存的缓存系统，但团队开发语言是java，java是一门高级语言，适合做业务系统，用java做内存操作内存会效率低下，而且浪费严重\n2，开发框架和开发语言，都是有场景限制的，尺有所短，寸有所长这个道理在哪里都是一样的，c的优势在底层，java在应用，每一个都有所长所短\n\n解决方案\n1，将业务服务化，对外提供统一的API，各业务通过API调用完成，这样每一个业务都可以使用不同的开发语言和框架完成，各系统完全解耦。\n2，容器化，使用docker将平台统一化，更好的可维护和扩展","like_count":88,"discussions":[{"author":{"id":1098920,"avatar":"https://static001.geekbang.org/account/avatar/00/10/c4/a8/f2685e1b.jpg","nickname":"华仔","note":"","ucode":"851FF94CF5133A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":421302,"discussion_content":"分析到位👍","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1533087313,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1293551,"avatar":"https://static001.geekbang.org/account/avatar/00/13/bc/ef/98550b85.jpg","nickname":"云彩＆草原","note":"","ucode":"6AEA686202F1CC","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":559468,"discussion_content":"m","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1648789221,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":17841,"user_name":"narry","can_delete":false,"product_type":"c1","uid":1033576,"ip_address":"","ucode":"B8010C1DE39D08","user_header":"https://static001.geekbang.org/account/avatar/00/0f/c5/68/7afb7304.jpg","comment_is_top":false,"comment_ctime":1532995742,"is_pvip":false,"replies":[{"id":6254,"content":"赞同👍","user_name":"作者回复","user_name_real":"华仔","uid":1098920,"ctime":1533087435,"ip_address":"","comment_id":17841,"utype":1}],"discussion_count":1,"race_medal":0,"score":2,"product_id":100006601,"comment_content":"问题就是可能发生“手里有锤子后，看到什么都是钉子”的情况，在业务规模小的时候采用单一语言单一框架，当规模大了还是应该有一定的灵活性，有一个主力的语言和框架，合适的工作用合适语言和框架，而微服务架构的比较适合混合语言和架构的模式","like_count":36,"discussions":[{"author":{"id":1098920,"avatar":"https://static001.geekbang.org/account/avatar/00/10/c4/a8/f2685e1b.jpg","nickname":"华仔","note":"","ucode":"851FF94CF5133A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":421298,"discussion_content":"赞同👍","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1533087435,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":39278,"user_name":"aaaaaaaaaaaas","can_delete":false,"product_type":"c1","uid":1230417,"ip_address":"","ucode":"44F3D4DB3F5678","user_header":"https://static001.geekbang.org/account/avatar/00/12/c6/51/30c17473.jpg","comment_is_top":false,"comment_ctime":1542242863,"is_pvip":false,"replies":[{"id":14078,"content":"你可以这样理解：EJB=所有微服务基础设施的全集","user_name":"作者回复","user_name_real":"华仔","uid":1098920,"ctime":1542262132,"ip_address":"","comment_id":39278,"utype":1}],"discussion_count":2,"race_medal":0,"score":2,"product_id":100006601,"comment_content":"老师，我记得SOA和微服务的章节说，SOA相当于多合一，将拆出来的各服务用EJB总线连接起来，这也是微服务架构和SOA的区别，那微服务的服务中心和EJB总线有什么区别呢","like_count":16,"discussions":[{"author":{"id":1098920,"avatar":"https://static001.geekbang.org/account/avatar/00/10/c4/a8/f2685e1b.jpg","nickname":"华仔","note":"","ucode":"851FF94CF5133A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":428993,"discussion_content":"你可以这样理解：EJB=所有微服务基础设施的全集","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1542262132,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1073443,"avatar":"https://static001.geekbang.org/account/avatar/00/10/61/23/30d134cf.jpg","nickname":"Young","note":"","ucode":"075C0BBE20FD8C","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":383675,"discussion_content":"是ESB，不是EJB","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1626186641,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":28786,"user_name":"孙振超","can_delete":false,"product_type":"c1","uid":1101755,"ip_address":"","ucode":"0F9EABC6125350","user_header":"https://static001.geekbang.org/account/avatar/00/10/cf/bb/22af0e52.jpg","comment_is_top":false,"comment_ctime":1538144998,"is_pvip":false,"replies":[{"id":10426,"content":"赞同👍","user_name":"作者回复","user_name_real":"华仔","uid":1098920,"ctime":1538214243,"ip_address":"","comment_id":28786,"utype":1}],"discussion_count":1,"race_medal":0,"score":2,"product_id":100006601,"comment_content":"如同没有包治百病的神药一样，每一个开发框架和语言也只能能解决某些场景，适合某些情况。\n\n在公司中一方面会选择一个可以适应于大多数场景的主流的开发框架和语言，保证工作效率、人才体系和技术积累；同时也会根据特定场景选择其他的开发框架或语言，而后通过开发client包或采用约定协议的方式将异构的系统链接到一起，共同为业务服务。","like_count":15,"discussions":[{"author":{"id":1098920,"avatar":"https://static001.geekbang.org/account/avatar/00/10/c4/a8/f2685e1b.jpg","nickname":"华仔","note":"","ucode":"851FF94CF5133A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":425371,"discussion_content":"赞同👍","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1538214243,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":21661,"user_name":"文竹","can_delete":false,"product_type":"c1","uid":1103167,"ip_address":"","ucode":"74413B1975976B","user_header":"https://static001.geekbang.org/account/avatar/00/10/d5/3f/80bf4841.jpg","comment_is_top":false,"comment_ctime":1535213616,"is_pvip":false,"replies":[{"id":7694,"content":"赞同👍","user_name":"作者回复","user_name_real":"华仔","uid":1098920,"ctime":1535275960,"ip_address":"","comment_id":21661,"utype":1}],"discussion_count":1,"race_medal":0,"score":2,"product_id":100006601,"comment_content":"出现的问题：\n1、违背了合适原则，本来用C++语言最合适，偏偏使用了Java\n2、容易出现思维盲区，有可能有更好的替代品\n\n解决问题：具体问题具体分析，规范是也是需要不断完善的，不能盲目遵守。","like_count":11,"discussions":[{"author":{"id":1098920,"avatar":"https://static001.geekbang.org/account/avatar/00/10/c4/a8/f2685e1b.jpg","nickname":"华仔","note":"","ucode":"851FF94CF5133A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":422791,"discussion_content":"赞同👍","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1535275960,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":19306,"user_name":"性能","can_delete":false,"product_type":"c1","uid":1137192,"ip_address":"","ucode":"BBFA2A31B02B8F","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTIyhbzdkFM64HvRATbWjc3hkic7icUszl9hU9hpIMZcibKH4wWam4SHfkcvM7MUoKjGDRrvYGXuvR91Q/132","comment_is_top":false,"comment_ctime":1533773571,"is_pvip":false,"replies":[{"id":6689,"content":"1. SOA架构就是ESB，互联网就是微服务的服务中心。\n\n2. 服务名字系统确实需要拉取服务配置信息，但对于机器来说，几万条信息完全没有压力，所以不要担心。\n3. 配置更新要及时的话，有几种做法：配置推送，配置定时（例如每秒）校验，zk配置变更通知。用得最多的反而是定时校验，校验做的很轻量级，每次只要校验配置版本号或者配置hash值","user_name":"作者回复","user_name_real":"华仔","uid":1098920,"ctime":1533780436,"ip_address":"","comment_id":19306,"utype":1}],"discussion_count":1,"race_medal":0,"score":2,"product_id":100006601,"comment_content":"李老师，服务总线系统，就是企业ESB吧？对于大型金融类企业来说，服务总线系统更合适吧？服务名字系统每台机器都要拉取一大堆服务配置信息，配置信息更新也不够及时。请问阿里用的是哪种呢？","like_count":4,"discussions":[{"author":{"id":1098920,"avatar":"https://static001.geekbang.org/account/avatar/00/10/c4/a8/f2685e1b.jpg","nickname":"华仔","note":"","ucode":"851FF94CF5133A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":421775,"discussion_content":"1. SOA架构就是ESB，互联网就是微服务的服务中心。\n\n2. 服务名字系统确实需要拉取服务配置信息，但对于机器来说，几万条信息完全没有压力，所以不要担心。\n3. 配置更新要及时的话，有几种做法：配置推送，配置定时（例如每秒）校验，zk配置变更通知。用得最多的反而是定时校验，校验做的很轻量级，每次只要校验配置版本号或者配置hash值","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1533780436,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":18153,"user_name":"cc","can_delete":false,"product_type":"c1","uid":1013850,"ip_address":"","ucode":"AF5196A960F63F","user_header":"https://thirdwx.qlogo.cn/mmopen/vi_32/EiaAvXsIJoJmWP00FhZLicyBiapZickLNZmjlATKoe2RqicpPOHhWuDe0t2E5lLVBWC6kibcYbvOdbAhjCbtnx9OeVAQ/132","comment_is_top":false,"comment_ctime":1533170407,"is_pvip":false,"replies":[{"id":6372,"content":"不能一刀切，但也不要百花齐放😄","user_name":"作者回复","user_name_real":"华仔","uid":1098920,"ctime":1533203003,"ip_address":"","comment_id":18153,"utype":1}],"discussion_count":2,"race_medal":0,"score":2,"product_id":100006601,"comment_content":"语言有不同的长短板，使用的时候应该扬长避短。语言的选择要考虑到业务场景。不能一刀切","like_count":3,"discussions":[{"author":{"id":1098920,"avatar":"https://static001.geekbang.org/account/avatar/00/10/c4/a8/f2685e1b.jpg","nickname":"华仔","note":"","ucode":"851FF94CF5133A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":421410,"discussion_content":"不能一刀切，但也不要百花齐放😄","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1533203003,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":1,"child_discussions":[{"author":{"id":3577902,"avatar":"","nickname":"Cchchunhe","note":"","ucode":"AAC2DD22E3FD8F","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1098920,"avatar":"https://static001.geekbang.org/account/avatar/00/10/c4/a8/f2685e1b.jpg","nickname":"华仔","note":"","ucode":"851FF94CF5133A","race_medal":0,"user_type":2,"is_pvip":false},"discussion":{"id":614115,"discussion_content":"站在纯技术演进的角度来说，希望他百花齐放百家争鸣，竞争带来更好的创新与进步。站在公司的角度来说，多则乱，乱难管，易失控，更希望统一。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1681706585,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":421410,"ip_address":"广东","group_id":0},"score":614115,"extra":""}]}]},{"had_liked":false,"id":20208,"user_name":"jh.mai","can_delete":false,"product_type":"c1","uid":1119813,"ip_address":"","ucode":"CDE02CD2A2291C","user_header":"https://static001.geekbang.org/account/avatar/00/11/16/45/d7ac3375.jpg","comment_is_top":false,"comment_ctime":1534310125,"is_pvip":false,"replies":[{"id":7130,"content":"可以做了，择日不如撞日😄","user_name":"作者回复","user_name_real":"华仔","uid":1098920,"ctime":1534388219,"ip_address":"","comment_id":20208,"utype":1}],"discussion_count":1,"race_medal":0,"score":2,"product_id":100006601,"comment_content":"如果是业务发展初期，设计是一个服务A，服务A下会把各个子模块按包分出来，以便后面的拆分，现在出现另外系统B同样出现A服务的子模块功能，是否可以把A子模块抽取出来当作独立服务呢？","like_count":2,"discussions":[{"author":{"id":1098920,"avatar":"https://static001.geekbang.org/account/avatar/00/10/c4/a8/f2685e1b.jpg","nickname":"华仔","note":"","ucode":"851FF94CF5133A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":422149,"discussion_content":"可以做了，择日不如撞日😄","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1534388219,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":17852,"user_name":"wuhulala","can_delete":false,"product_type":"c1","uid":1191143,"ip_address":"","ucode":"6DBF2C9E19B930","user_header":"https://static001.geekbang.org/account/avatar/00/12/2c/e7/3c0eba8b.jpg","comment_is_top":false,"comment_ctime":1532997497,"is_pvip":false,"replies":[{"id":6252,"content":"有时候我们需要锤子，但有时候可能电锯更好😄","user_name":"作者回复","user_name_real":"华仔","uid":1098920,"ctime":1533087364,"ip_address":"","comment_id":17852,"utype":1}],"discussion_count":1,"race_medal":0,"score":2,"product_id":100006601,"comment_content":"虽然统一的开发框架整体来说开发效率高，但是遇到一些更好的解决方案的时候却只能干瞪眼或者使用当前技术栈实现一遍。整体来说规范性更好，所有的技术问题由技术好一点的来解决，业务开发人员无需关注这么多东西。","like_count":2,"discussions":[{"author":{"id":1098920,"avatar":"https://static001.geekbang.org/account/avatar/00/10/c4/a8/f2685e1b.jpg","nickname":"华仔","note":"","ucode":"851FF94CF5133A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":421303,"discussion_content":"有时候我们需要锤子，但有时候可能电锯更好😄","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1533087364,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":330303,"user_name":"WESTWALL","can_delete":false,"product_type":"c1","uid":1434423,"ip_address":"","ucode":"295A030F9D3BF4","user_header":"https://static001.geekbang.org/account/avatar/00/15/e3/37/c132802f.jpg","comment_is_top":false,"comment_ctime":1641900100,"is_pvip":false,"replies":[{"id":120656,"content":"有点类似，但是API网关更多的是负责内外通信，也就是通常说的南北流量，微服务内部通信是东西流量，目前APISIX、istio可以算是Service Bus System。","user_name":"作者回复","user_name_real":"编辑","uid":1098920,"ctime":1642213845,"ip_address":"","comment_id":330303,"utype":1}],"discussion_count":1,"race_medal":0,"score":2,"product_id":100006601,"comment_content":"可以这么理解吗老师？\nService Name System：注册中心 + load balance。  \nService Bus System：API网关。","like_count":1,"discussions":[{"author":{"id":1098920,"avatar":"https://static001.geekbang.org/account/avatar/00/10/c4/a8/f2685e1b.jpg","nickname":"华仔","note":"","ucode":"851FF94CF5133A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":546186,"discussion_content":"有点类似，但是API网关更多的是负责内外通信，也就是通常说的南北流量，微服务内部通信是东西流量，目前APISIX、istio可以算是Service Bus System。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1642213845,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":85698,"user_name":"杨陆伟","can_delete":false,"product_type":"c1","uid":1108457,"ip_address":"","ucode":"3BC968447406EB","user_header":"https://static001.geekbang.org/account/avatar/00/10/e9/e9/1f95e422.jpg","comment_is_top":false,"comment_ctime":1555204611,"is_pvip":false,"replies":[{"id":31427,"content":"服务总线系统可靠性存在风险，服务名字系统sdk是通用的","user_name":"作者回复","user_name_real":"华仔","uid":1098920,"ctime":1555598332,"ip_address":"","comment_id":85698,"utype":1}],"discussion_count":1,"race_medal":4,"score":3,"product_id":100006601,"comment_content":"服务总线系统相比服务名字系统虽然有诸多优点，但是性能可能会略差，而且服务名字系统的sdk一般放在上层公共镜像中，所以也具备一定的通用性，不知道这样理解是否正确？","like_count":1},{"had_liked":false,"id":19472,"user_name":"Tom","can_delete":false,"product_type":"c1","uid":1109832,"ip_address":"","ucode":"00EEDE4CB11776","user_header":"","comment_is_top":false,"comment_ctime":1533860978,"is_pvip":false,"replies":[{"id":6755,"content":"发之前缓存，可以记录到本地，也可以记录到数据库，但这个方案的复杂度比较高，且建议只有发送失败的时候这样做，但其实还是没有保证完全不丢失，因为也可能发送到消息系统后消息系统挂了","user_name":"作者回复","user_name_real":"华仔","uid":1098920,"ctime":1533884758,"ip_address":"","comment_id":19472,"utype":1}],"discussion_count":3,"race_medal":0,"score":3,"product_id":100006601,"comment_content":"怎么保证消息队列的可靠性呢，万一消息队列集群挂了怎么做到消息不丢失？我想到的方案是发布消息之前先将消息表保存到数据库，消费方通过接口等方式变更消息表状态，服务定期检查消息表状态，将被未经处理的消息重发。帮我看下这样可行吗？谢谢：）","like_count":1,"discussions":[{"author":{"id":1098920,"avatar":"https://static001.geekbang.org/account/avatar/00/10/c4/a8/f2685e1b.jpg","nickname":"华仔","note":"","ucode":"851FF94CF5133A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":446771,"discussion_content":"服务总线系统可靠性存在风险，服务名字系统sdk是通用的","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1555598332,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":17830,"user_name":"但莫","can_delete":false,"product_type":"c1","uid":1108901,"ip_address":"","ucode":"6B40F4E0EDB1C7","user_header":"https://static001.geekbang.org/account/avatar/00/10/eb/a5/5d04b7cd.jpg","comment_is_top":false,"comment_ctime":1532993522,"is_pvip":false,"replies":[{"id":6255,"content":"每个组件设计原理合起来可以开另外一个专栏了，本篇只是提炼重点内容","user_name":"作者回复","user_name_real":"华仔","uid":1098920,"ctime":1533087505,"ip_address":"","comment_id":17830,"utype":1}],"discussion_count":1,"race_medal":0,"score":3,"product_id":100006601,"comment_content":"今天介绍的内容是围绕着为服务架构所必须的几个组件，后续是否会详细介绍每个组件的设计原理呢。\n\n使用统一的语言可能会限制实现功能的想象力和方案的选型和实现，拿着锤子，看什么都是钉子。\n要实现多语言开发可以通信，可以使用规范的协议，而非语言特性。如restfull，自定义协议等。","like_count":1,"discussions":[{"author":{"id":1098920,"avatar":"https://static001.geekbang.org/account/avatar/00/10/c4/a8/f2685e1b.jpg","nickname":"华仔","note":"","ucode":"851FF94CF5133A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":421860,"discussion_content":"发之前缓存，可以记录到本地，也可以记录到数据库，但这个方案的复杂度比较高，且建议只有发送失败的时候这样做，但其实还是没有保证完全不丢失，因为也可能发送到消息系统后消息系统挂了","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1533884758,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1076264,"avatar":"https://static001.geekbang.org/account/avatar/00/10/6c/28/a1f9f0ad.jpg","nickname":"陈树义","note":"","ucode":"AF83C4BDC192B5","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":259688,"discussion_content":"保证完全不丢失，我的理解是：保证不在我们预料之外丢失消息。  例如：发送到消息系统后，虽然失败了，但是会有 ack 告诉你失败了。 这时候生产者可以入库，或者打印日志，那我们就可以知道这条消息失败了。  后续还是可以恢复的。","likes_number":3,"is_delete":false,"is_hidden":false,"ctime":1588811304,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1095857,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/bvj76PmeUvW8kokyu91IZWuRATKmabibDWbzAj2TajeEic7WvKCJOLaOh6jibEmdQ36EO3sBUZ0HibAiapsrZo64U8w/132","nickname":"梦倚栏杆","note":"","ucode":"BDEB97F2822445","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":367971,"discussion_content":"一旦非常强调高可用，实现的复杂度就会很高，极端情况下是不是就退化成了最简单最原始逻辑","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1618527066,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":384907,"user_name":"Apa琦","can_delete":false,"product_type":"c1","uid":3710982,"ip_address":"上海","ucode":"A4A76A4D7364EA","user_header":"https://static001.geekbang.org/account/avatar/00/38/a0/06/f0ca94ca.jpg","comment_is_top":false,"comment_ctime":1701773118,"is_pvip":false,"replies":[{"id":140370,"content":"是的，用最小代价屏蔽了语言差异","user_name":"作者回复","user_name_real":"编辑","uid":1098920,"ctime":1701913473,"ip_address":"广东","comment_id":384907,"utype":1}],"discussion_count":1,"race_medal":0,"score":3,"product_id":100006601,"comment_content":"每个语言都有合适的领域，PHP开发迅速，Java业务开发非常好spring一统天下各个水平的程序员写出来的代码大差不差，Python适合爬虫，go天生适合高并发。如果能用多语言可以让各个语言在各自的领域发挥。\n使用多语言最大的问题就是互相调用，使用服务网格我觉得会很好，每个容器都会有一个代理用来专门干微服务的事情，使得不同体系、语言可以组成一个微服务","like_count":0,"discussions":[{"author":{"id":1098920,"avatar":"https://static001.geekbang.org/account/avatar/00/10/c4/a8/f2685e1b.jpg","nickname":"华仔","note":"","ucode":"851FF94CF5133A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":421294,"discussion_content":"每个组件设计原理合起来可以开另外一个专栏了，本篇只是提炼重点内容","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1533087505,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":363195,"user_name":"月光宫羽","can_delete":false,"product_type":"c1","uid":2451466,"ip_address":"广东","ucode":"205ADFE79C2C8A","user_header":"https://static001.geekbang.org/account/avatar/00/25/68/0a/6c8aecab.jpg","comment_is_top":false,"comment_ctime":1669348306,"is_pvip":false,"replies":[{"id":132161,"content":"对的，规模大了后强制为只能一个语言，也是有问题的","user_name":"作者回复","user_name_real":"编辑","uid":1098920,"ctime":1669949632,"ip_address":"广东","comment_id":363195,"utype":1}],"discussion_count":1,"race_medal":0,"score":3,"product_id":100006601,"comment_content":"根据语言和框架的出现背景就可以知道，不同的语言和开发框架，有其不一样的使用场景。业务简单可以搞大一统，业务复杂时，可以考虑谁才是更合适的。也可看出做架构就是在权衡。","like_count":0,"discussions":[{"author":{"id":1098920,"avatar":"https://static001.geekbang.org/account/avatar/00/10/c4/a8/f2685e1b.jpg","nickname":"华仔","note":"","ucode":"851FF94CF5133A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":633214,"discussion_content":"是的，用最小代价屏蔽了语言差异","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1701913474,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"广东","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":353706,"user_name":"呆","can_delete":false,"product_type":"c1","uid":1090280,"ip_address":"广东","ucode":"CA635189EA2764","user_header":"https://static001.geekbang.org/account/avatar/00/10/a2/e8/dc2b0884.jpg","comment_is_top":false,"comment_ctime":1659689944,"is_pvip":false,"replies":[{"id":128824,"content":"一般不会统一成一种语言，而是3~4种","user_name":"作者回复","user_name_real":"编辑","uid":1098920,"ctime":1660208007,"ip_address":"广东","comment_id":353706,"utype":1}],"discussion_count":1,"race_medal":0,"score":3,"product_id":100006601,"comment_content":"统一的框架跟统一语言统一风格，前期可以提升团队生产率，但是系统复杂后，特殊的场景还是要单独分析，普通业务跟高并发、高密度计算对语言以及技术框架的选择还是要各自独立取舍，毕竟侧重点不一样","like_count":0,"discussions":[{"author":{"id":1098920,"avatar":"https://static001.geekbang.org/account/avatar/00/10/c4/a8/f2685e1b.jpg","nickname":"华仔","note":"","ucode":"851FF94CF5133A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":583562,"discussion_content":"一般不会统一成一种语言，而是3~4种","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1660208007,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"广东","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":352774,"user_name":"艺超(鲁鸣)","can_delete":false,"product_type":"c1","uid":1029436,"ip_address":"北京","ucode":"7F749FA543E0F1","user_header":"https://static001.geekbang.org/account/avatar/00/0f/b5/3c/967d7291.jpg","comment_is_top":false,"comment_ctime":1658921439,"is_pvip":false,"replies":[{"id":128335,"content":"多种技术栈的代价就是配套的基础设施要多套，比如说监控、自动化测试、打包等","user_name":"作者回复","user_name_real":"编辑","uid":1098920,"ctime":1659066142,"ip_address":"北京","comment_id":352774,"utype":1}],"discussion_count":1,"race_medal":0,"score":3,"product_id":100006601,"comment_content":"想到的一个问题就是，大家思路可能会比较局限，而且针对不同的场景，之前规定的统一框架并不一定是最优的方案。\n解决的办法，可以通过服务拆分+API的方式，允许多种技术栈存在，同时鼓励大家掌握除了主技术栈之外的另外一个技术栈。按照现在leader的说法，应该是将人才从T型人才，转移到π型人才。","like_count":0,"discussions":[{"author":{"id":1098920,"avatar":"https://static001.geekbang.org/account/avatar/00/10/c4/a8/f2685e1b.jpg","nickname":"华仔","note":"","ucode":"851FF94CF5133A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":581909,"discussion_content":"多种技术栈的代价就是配套的基础设施要多套，比如说监控、自动化测试、打包等","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1659066143,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"北京","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":263650,"user_name":"落叶飞逝的恋","can_delete":false,"product_type":"c1","uid":1046429,"ip_address":"","ucode":"F9A95DB28BCF1E","user_header":"https://static001.geekbang.org/account/avatar/00/0f/f7/9d/be04b331.jpg","comment_is_top":false,"comment_ctime":1606207320,"is_pvip":false,"replies":[{"id":95758,"content":"架构设计第一原则","user_name":"作者回复","user_name_real":"华仔","uid":1098920,"ctime":1606347826,"ip_address":"","comment_id":263650,"utype":1}],"discussion_count":1,"race_medal":0,"score":3,"product_id":100006601,"comment_content":"没有任何一种开发框架和开发语言成为银弹，合适场景使用合适开发技术","like_count":0,"discussions":[{"author":{"id":1098920,"avatar":"https://static001.geekbang.org/account/avatar/00/10/c4/a8/f2685e1b.jpg","nickname":"华仔","note":"","ucode":"851FF94CF5133A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":510257,"discussion_content":"架构设计第一原则","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1606347826,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":139545,"user_name":"Ericens","can_delete":false,"product_type":"c1","uid":1607328,"ip_address":"","ucode":"95AB0416F8EF7B","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/fy6KTCIk6JPGdOYbvsXJ4h1zq8a6P6sHiau0t2hBxxZfSeE2ymJmWsnb7YzxUO3byr1n30UoYD2XrXDwlrQa6lQ/132","comment_is_top":false,"comment_ctime":1570676851,"is_pvip":false,"replies":[{"id":54781,"content":"协程是用户态判断，不会切换到内核态，没有上下文切换","user_name":"作者回复","user_name_real":"华仔","uid":1098920,"ctime":1571269201,"ip_address":"","comment_id":139545,"utype":1}],"discussion_count":1,"race_medal":0,"score":3,"product_id":100006601,"comment_content":"李老师，请教个关于协程与线程的疑问。比如，a协程调用socket. read(),此时数据没有准备好，则继续调度b协程。\n\n把协程换成线程，上面这个过程哪个更加轻量？协程还是线程？\n我理解这个过程涉及的过程如下，都一样。\n1.都有系统调用read()，从用户态切换到了内核态，\n2.都有上下文切换。(不同协程的寄存器，和不同线程的寄存器)\n3. 都要执行任务调度。协程调度或者线程调度。\n\n那协程到底轻量在哪？","like_count":0,"discussions":[{"author":{"id":1098920,"avatar":"https://static001.geekbang.org/account/avatar/00/10/c4/a8/f2685e1b.jpg","nickname":"华仔","note":"","ucode":"851FF94CF5133A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":510257,"discussion_content":"架构设计第一原则","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1606347826,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":138917,"user_name":"kfighter","can_delete":false,"product_type":"c1","uid":1232129,"ip_address":"","ucode":"741CE8A22E5391","user_header":"https://static001.geekbang.org/account/avatar/00/12/cd/01/c7c9f2f4.jpg","comment_is_top":false,"comment_ctime":1570505392,"is_pvip":false,"replies":[{"id":53550,"content":"这个是微服务全家桶，里面什么都有","user_name":"作者回复","user_name_real":"华仔","uid":1098920,"ctime":1570530486,"ip_address":"","comment_id":138917,"utype":1}],"discussion_count":1,"race_medal":0,"score":3,"product_id":100006601,"comment_content":"springCloud，算是服务名字系统吗？","like_count":0,"discussions":[{"author":{"id":1098920,"avatar":"https://static001.geekbang.org/account/avatar/00/10/c4/a8/f2685e1b.jpg","nickname":"华仔","note":"","ucode":"851FF94CF5133A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":469992,"discussion_content":"协程是用户态判断，不会切换到内核态，没有上下文切换","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1571269201,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":85698,"user_name":"杨陆伟","can_delete":false,"product_type":"c1","uid":1108457,"ip_address":"","ucode":"3BC968447406EB","user_header":"https://static001.geekbang.org/account/avatar/00/10/e9/e9/1f95e422.jpg","comment_is_top":false,"comment_ctime":1555204611,"is_pvip":false,"replies":[{"id":31427,"content":"服务总线系统可靠性存在风险，服务名字系统sdk是通用的","user_name":"作者回复","user_name_real":"华仔","uid":1098920,"ctime":1555598332,"ip_address":"","comment_id":85698,"utype":1}],"discussion_count":1,"race_medal":4,"score":3,"product_id":100006601,"comment_content":"服务总线系统相比服务名字系统虽然有诸多优点，但是性能可能会略差，而且服务名字系统的sdk一般放在上层公共镜像中，所以也具备一定的通用性，不知道这样理解是否正确？","like_count":1,"discussions":[{"author":{"id":1098920,"avatar":"https://static001.geekbang.org/account/avatar/00/10/c4/a8/f2685e1b.jpg","nickname":"华仔","note":"","ucode":"851FF94CF5133A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":446771,"discussion_content":"服务总线系统可靠性存在风险，服务名字系统sdk是通用的","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1555598332,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":19472,"user_name":"Tom","can_delete":false,"product_type":"c1","uid":1109832,"ip_address":"","ucode":"00EEDE4CB11776","user_header":"","comment_is_top":false,"comment_ctime":1533860978,"is_pvip":false,"replies":[{"id":6755,"content":"发之前缓存，可以记录到本地，也可以记录到数据库，但这个方案的复杂度比较高，且建议只有发送失败的时候这样做，但其实还是没有保证完全不丢失，因为也可能发送到消息系统后消息系统挂了","user_name":"作者回复","user_name_real":"华仔","uid":1098920,"ctime":1533884758,"ip_address":"","comment_id":19472,"utype":1}],"discussion_count":3,"race_medal":0,"score":3,"product_id":100006601,"comment_content":"怎么保证消息队列的可靠性呢，万一消息队列集群挂了怎么做到消息不丢失？我想到的方案是发布消息之前先将消息表保存到数据库，消费方通过接口等方式变更消息表状态，服务定期检查消息表状态，将被未经处理的消息重发。帮我看下这样可行吗？谢谢：）","like_count":1,"discussions":[{"author":{"id":1098920,"avatar":"https://static001.geekbang.org/account/avatar/00/10/c4/a8/f2685e1b.jpg","nickname":"华仔","note":"","ucode":"851FF94CF5133A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":421860,"discussion_content":"发之前缓存，可以记录到本地，也可以记录到数据库，但这个方案的复杂度比较高，且建议只有发送失败的时候这样做，但其实还是没有保证完全不丢失，因为也可能发送到消息系统后消息系统挂了","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1533884758,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1076264,"avatar":"https://static001.geekbang.org/account/avatar/00/10/6c/28/a1f9f0ad.jpg","nickname":"陈树义","note":"","ucode":"AF83C4BDC192B5","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":259688,"discussion_content":"保证完全不丢失，我的理解是：保证不在我们预料之外丢失消息。  例如：发送到消息系统后，虽然失败了，但是会有 ack 告诉你失败了。 这时候生产者可以入库，或者打印日志，那我们就可以知道这条消息失败了。  后续还是可以恢复的。","likes_number":3,"is_delete":false,"is_hidden":false,"ctime":1588811304,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1095857,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/bvj76PmeUvW8kokyu91IZWuRATKmabibDWbzAj2TajeEic7WvKCJOLaOh6jibEmdQ36EO3sBUZ0HibAiapsrZo64U8w/132","nickname":"梦倚栏杆","note":"","ucode":"BDEB97F2822445","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":367971,"discussion_content":"一旦非常强调高可用，实现的复杂度就会很高，极端情况下是不是就退化成了最简单最原始逻辑","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1618527066,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":17830,"user_name":"但莫","can_delete":false,"product_type":"c1","uid":1108901,"ip_address":"","ucode":"6B40F4E0EDB1C7","user_header":"https://static001.geekbang.org/account/avatar/00/10/eb/a5/5d04b7cd.jpg","comment_is_top":false,"comment_ctime":1532993522,"is_pvip":false,"replies":[{"id":6255,"content":"每个组件设计原理合起来可以开另外一个专栏了，本篇只是提炼重点内容","user_name":"作者回复","user_name_real":"华仔","uid":1098920,"ctime":1533087505,"ip_address":"","comment_id":17830,"utype":1}],"discussion_count":1,"race_medal":0,"score":3,"product_id":100006601,"comment_content":"今天介绍的内容是围绕着为服务架构所必须的几个组件，后续是否会详细介绍每个组件的设计原理呢。\n\n使用统一的语言可能会限制实现功能的想象力和方案的选型和实现，拿着锤子，看什么都是钉子。\n要实现多语言开发可以通信，可以使用规范的协议，而非语言特性。如restfull，自定义协议等。","like_count":1,"discussions":[{"author":{"id":1098920,"avatar":"https://static001.geekbang.org/account/avatar/00/10/c4/a8/f2685e1b.jpg","nickname":"华仔","note":"","ucode":"851FF94CF5133A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":421294,"discussion_content":"每个组件设计原理合起来可以开另外一个专栏了，本篇只是提炼重点内容","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1533087505,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":384907,"user_name":"Apa琦","can_delete":false,"product_type":"c1","uid":3710982,"ip_address":"上海","ucode":"A4A76A4D7364EA","user_header":"https://static001.geekbang.org/account/avatar/00/38/a0/06/f0ca94ca.jpg","comment_is_top":false,"comment_ctime":1701773118,"is_pvip":false,"replies":[{"id":140370,"content":"是的，用最小代价屏蔽了语言差异","user_name":"作者回复","user_name_real":"编辑","uid":1098920,"ctime":1701913473,"ip_address":"广东","comment_id":384907,"utype":1}],"discussion_count":1,"race_medal":0,"score":3,"product_id":100006601,"comment_content":"每个语言都有合适的领域，PHP开发迅速，Java业务开发非常好spring一统天下各个水平的程序员写出来的代码大差不差，Python适合爬虫，go天生适合高并发。如果能用多语言可以让各个语言在各自的领域发挥。\n使用多语言最大的问题就是互相调用，使用服务网格我觉得会很好，每个容器都会有一个代理用来专门干微服务的事情，使得不同体系、语言可以组成一个微服务","like_count":0,"discussions":[{"author":{"id":1098920,"avatar":"https://static001.geekbang.org/account/avatar/00/10/c4/a8/f2685e1b.jpg","nickname":"华仔","note":"","ucode":"851FF94CF5133A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":633214,"discussion_content":"是的，用最小代价屏蔽了语言差异","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1701913474,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"广东","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":363195,"user_name":"月光宫羽","can_delete":false,"product_type":"c1","uid":2451466,"ip_address":"广东","ucode":"205ADFE79C2C8A","user_header":"https://static001.geekbang.org/account/avatar/00/25/68/0a/6c8aecab.jpg","comment_is_top":false,"comment_ctime":1669348306,"is_pvip":false,"replies":[{"id":132161,"content":"对的，规模大了后强制为只能一个语言，也是有问题的","user_name":"作者回复","user_name_real":"编辑","uid":1098920,"ctime":1669949632,"ip_address":"广东","comment_id":363195,"utype":1}],"discussion_count":1,"race_medal":0,"score":3,"product_id":100006601,"comment_content":"根据语言和框架的出现背景就可以知道，不同的语言和开发框架，有其不一样的使用场景。业务简单可以搞大一统，业务复杂时，可以考虑谁才是更合适的。也可看出做架构就是在权衡。","like_count":0,"discussions":[{"author":{"id":1098920,"avatar":"https://static001.geekbang.org/account/avatar/00/10/c4/a8/f2685e1b.jpg","nickname":"华仔","note":"","ucode":"851FF94CF5133A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":595330,"discussion_content":"对的，规模大了后强制为只能一个语言，也是有问题的","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1669949632,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"广东","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":353706,"user_name":"呆","can_delete":false,"product_type":"c1","uid":1090280,"ip_address":"广东","ucode":"CA635189EA2764","user_header":"https://static001.geekbang.org/account/avatar/00/10/a2/e8/dc2b0884.jpg","comment_is_top":false,"comment_ctime":1659689944,"is_pvip":false,"replies":[{"id":128824,"content":"一般不会统一成一种语言，而是3~4种","user_name":"作者回复","user_name_real":"编辑","uid":1098920,"ctime":1660208007,"ip_address":"广东","comment_id":353706,"utype":1}],"discussion_count":1,"race_medal":0,"score":3,"product_id":100006601,"comment_content":"统一的框架跟统一语言统一风格，前期可以提升团队生产率，但是系统复杂后，特殊的场景还是要单独分析，普通业务跟高并发、高密度计算对语言以及技术框架的选择还是要各自独立取舍，毕竟侧重点不一样","like_count":0,"discussions":[{"author":{"id":1098920,"avatar":"https://static001.geekbang.org/account/avatar/00/10/c4/a8/f2685e1b.jpg","nickname":"华仔","note":"","ucode":"851FF94CF5133A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":595330,"discussion_content":"对的，规模大了后强制为只能一个语言，也是有问题的","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1669949632,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"广东","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":352774,"user_name":"艺超(鲁鸣)","can_delete":false,"product_type":"c1","uid":1029436,"ip_address":"北京","ucode":"7F749FA543E0F1","user_header":"https://static001.geekbang.org/account/avatar/00/0f/b5/3c/967d7291.jpg","comment_is_top":false,"comment_ctime":1658921439,"is_pvip":false,"replies":[{"id":128335,"content":"多种技术栈的代价就是配套的基础设施要多套，比如说监控、自动化测试、打包等","user_name":"作者回复","user_name_real":"编辑","uid":1098920,"ctime":1659066142,"ip_address":"北京","comment_id":352774,"utype":1}],"discussion_count":1,"race_medal":0,"score":3,"product_id":100006601,"comment_content":"想到的一个问题就是，大家思路可能会比较局限，而且针对不同的场景，之前规定的统一框架并不一定是最优的方案。\n解决的办法，可以通过服务拆分+API的方式，允许多种技术栈存在，同时鼓励大家掌握除了主技术栈之外的另外一个技术栈。按照现在leader的说法，应该是将人才从T型人才，转移到π型人才。","like_count":0,"discussions":[{"author":{"id":1098920,"avatar":"https://static001.geekbang.org/account/avatar/00/10/c4/a8/f2685e1b.jpg","nickname":"华仔","note":"","ucode":"851FF94CF5133A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":583562,"discussion_content":"一般不会统一成一种语言，而是3~4种","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1660208007,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"广东","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":263650,"user_name":"落叶飞逝的恋","can_delete":false,"product_type":"c1","uid":1046429,"ip_address":"","ucode":"F9A95DB28BCF1E","user_header":"https://static001.geekbang.org/account/avatar/00/0f/f7/9d/be04b331.jpg","comment_is_top":false,"comment_ctime":1606207320,"is_pvip":false,"replies":[{"id":95758,"content":"架构设计第一原则","user_name":"作者回复","user_name_real":"华仔","uid":1098920,"ctime":1606347826,"ip_address":"","comment_id":263650,"utype":1}],"discussion_count":1,"race_medal":0,"score":3,"product_id":100006601,"comment_content":"没有任何一种开发框架和开发语言成为银弹，合适场景使用合适开发技术","like_count":0,"discussions":[{"author":{"id":1098920,"avatar":"https://static001.geekbang.org/account/avatar/00/10/c4/a8/f2685e1b.jpg","nickname":"华仔","note":"","ucode":"851FF94CF5133A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":581909,"discussion_content":"多种技术栈的代价就是配套的基础设施要多套，比如说监控、自动化测试、打包等","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1659066143,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"北京","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":139545,"user_name":"Ericens","can_delete":false,"product_type":"c1","uid":1607328,"ip_address":"","ucode":"95AB0416F8EF7B","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/fy6KTCIk6JPGdOYbvsXJ4h1zq8a6P6sHiau0t2hBxxZfSeE2ymJmWsnb7YzxUO3byr1n30UoYD2XrXDwlrQa6lQ/132","comment_is_top":false,"comment_ctime":1570676851,"is_pvip":false,"replies":[{"id":54781,"content":"协程是用户态判断，不会切换到内核态，没有上下文切换","user_name":"作者回复","user_name_real":"华仔","uid":1098920,"ctime":1571269201,"ip_address":"","comment_id":139545,"utype":1}],"discussion_count":1,"race_medal":0,"score":3,"product_id":100006601,"comment_content":"李老师，请教个关于协程与线程的疑问。比如，a协程调用socket. read(),此时数据没有准备好，则继续调度b协程。\n\n把协程换成线程，上面这个过程哪个更加轻量？协程还是线程？\n我理解这个过程涉及的过程如下，都一样。\n1.都有系统调用read()，从用户态切换到了内核态，\n2.都有上下文切换。(不同协程的寄存器，和不同线程的寄存器)\n3. 都要执行任务调度。协程调度或者线程调度。\n\n那协程到底轻量在哪？","like_count":0,"discussions":[{"author":{"id":1098920,"avatar":"https://static001.geekbang.org/account/avatar/00/10/c4/a8/f2685e1b.jpg","nickname":"华仔","note":"","ucode":"851FF94CF5133A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":469992,"discussion_content":"协程是用户态判断，不会切换到内核态，没有上下文切换","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1571269201,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":138917,"user_name":"kfighter","can_delete":false,"product_type":"c1","uid":1232129,"ip_address":"","ucode":"741CE8A22E5391","user_header":"https://static001.geekbang.org/account/avatar/00/12/cd/01/c7c9f2f4.jpg","comment_is_top":false,"comment_ctime":1570505392,"is_pvip":false,"replies":[{"id":53550,"content":"这个是微服务全家桶，里面什么都有","user_name":"作者回复","user_name_real":"华仔","uid":1098920,"ctime":1570530486,"ip_address":"","comment_id":138917,"utype":1}],"discussion_count":1,"race_medal":0,"score":3,"product_id":100006601,"comment_content":"springCloud，算是服务名字系统吗？","like_count":0,"discussions":[{"author":{"id":1098920,"avatar":"https://static001.geekbang.org/account/avatar/00/10/c4/a8/f2685e1b.jpg","nickname":"华仔","note":"","ucode":"851FF94CF5133A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":469698,"discussion_content":"这个是微服务全家桶，里面什么都有","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1570530486,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":41362,"user_name":"小狮子辛巴","can_delete":false,"product_type":"c1","uid":1088420,"ip_address":"","ucode":"B9676851AF3370","user_header":"https://static001.geekbang.org/account/avatar/00/10/9b/a4/ddb31c5b.jpg","comment_is_top":false,"comment_ctime":1542768971,"is_pvip":false,"replies":[{"id":14906,"content":"架构师是分级的，参考特别放送的内容，只会PHP会限制你的选择范围，因此要成为优秀的架构师，只会PHP不太够","user_name":"作者回复","user_name_real":"华仔","uid":1098920,"ctime":1542790320,"ip_address":"","comment_id":41362,"utype":1}],"discussion_count":1,"race_medal":0,"score":4,"product_id":100006601,"comment_content":"弱弱的问一句老师，只能php的能成为架构师吗？","like_count":0},{"had_liked":false,"id":21854,"user_name":"呵呵","can_delete":false,"product_type":"c1","uid":1052862,"ip_address":"","ucode":"986CC73CFBBC67","user_header":"","comment_is_top":false,"comment_ctime":1535377856,"is_pvip":false,"replies":[{"id":7861,"content":"没用过，简单查了一下，算服务总线系统","user_name":"作者回复","user_name_real":"华仔","uid":1098920,"ctime":1535438347,"ip_address":"","comment_id":21854,"utype":1}],"discussion_count":1,"race_medal":0,"score":4,"product_id":100006601,"comment_content":"大神，Spring Cloud 的Robbin 组件，算是服务总线系统吧？","like_count":0,"discussions":[{"author":{"id":1098920,"avatar":"https://static001.geekbang.org/account/avatar/00/10/c4/a8/f2685e1b.jpg","nickname":"华仔","note":"","ucode":"851FF94CF5133A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":422892,"discussion_content":"没用过，简单查了一下，算服务总线系统","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1535438347,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":18814,"user_name":"Geek_b04b12","can_delete":false,"product_type":"c1","uid":1112139,"ip_address":"","ucode":"F8705A21FCDF09","user_header":"https://static001.geekbang.org/account/avatar/00/10/f8/4b/5ae62b10.jpg","comment_is_top":false,"comment_ctime":1533570685,"is_pvip":false,"replies":[{"id":6641,"content":"是的，不要只拿着一个锤子，至少锤子，刨子，锯子，电钻都要有","user_name":"作者回复","user_name_real":"华仔","uid":1098920,"ctime":1533697570,"ip_address":"","comment_id":18814,"utype":1}],"discussion_count":1,"race_medal":0,"score":4,"product_id":100006601,"comment_content":"每个语言的存在都是为了解决另外一门语言不能解决或者比较麻烦解决的问题，正如php的browser&#47;server，因为不需要客户端常驻内存、但是游戏开发的时候，场景就有点不是太适合PHP做了、","like_count":0,"discussions":[{"author":{"id":1098920,"avatar":"https://static001.geekbang.org/account/avatar/00/10/c4/a8/f2685e1b.jpg","nickname":"华仔","note":"","ucode":"851FF94CF5133A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":422892,"discussion_content":"没用过，简单查了一下，算服务总线系统","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1535438347,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":18438,"user_name":"Alex.Wu","can_delete":false,"product_type":"c1","uid":1101388,"ip_address":"","ucode":"5529BF2AE20A72","user_header":"https://static001.geekbang.org/account/avatar/00/10/ce/4c/507a06ee.jpg","comment_is_top":false,"comment_ctime":1533307424,"is_pvip":false,"replies":[{"id":6526,"content":"正解","user_name":"作者回复","user_name_real":"华仔","uid":1098920,"ctime":1533533729,"ip_address":"","comment_id":18438,"utype":1}],"discussion_count":1,"race_medal":0,"score":4,"product_id":100006601,"comment_content":"统一的框架统一的语言带来的最大问题就是不同语言不同框架有不同的特性，能支持不同的业务场景。比如php就不支持多线程一些需要多线程处理的业务php来做就很困难实现起来效率低下。但是java支持多线程可以很好的应对业务场景。单java却不支持泛类型导致变量的类型必须经过转换才能应对某些场景单php却支持。所以没有最好的语言只有最适合某项业务的语言。最终的问题还是取舍问题","like_count":0,"discussions":[{"author":{"id":1098920,"avatar":"https://static001.geekbang.org/account/avatar/00/10/c4/a8/f2685e1b.jpg","nickname":"华仔","note":"","ucode":"851FF94CF5133A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":421654,"discussion_content":"是的，不要只拿着一个锤子，至少锤子，刨子，锯子，电钻都要有","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1533697570,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":137432,"user_name":"Sam.张朝","can_delete":false,"product_type":"c1","uid":1132448,"ip_address":"","ucode":"FB20554D94B250","user_header":"https://static001.geekbang.org/account/avatar/00/11/47/a0/f12115b7.jpg","comment_is_top":false,"comment_ctime":1569739821,"is_pvip":true,"replies":null,"discussion_count":0,"race_medal":0,"score":4,"product_id":100006601,"comment_content":"语言都有使用的场景，一种语言不能胜任所有的开发场景。","like_count":2},{"had_liked":false,"id":303763,"user_name":"ZHANGPING","can_delete":false,"product_type":"c1","uid":1918112,"ip_address":"","ucode":"7108812981C996","user_header":"https://static001.geekbang.org/account/avatar/00/1d/44/a0/16d0d300.jpg","comment_is_top":false,"comment_ctime":1626965725,"is_pvip":false,"replies":null,"discussion_count":0,"race_medal":0,"score":4,"product_id":100006601,"comment_content":"统一的框架不能应对复杂的业务场景，不能够采用最有效的方式解决问题。所以：有些开发框架是跨语言，跨平台，提供服务化API的方式。","like_count":0},{"had_liked":false,"id":288525,"user_name":"梦倚栏杆","can_delete":false,"product_type":"c1","uid":1095857,"ip_address":"","ucode":"BDEB97F2822445","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/bvj76PmeUvW8kokyu91IZWuRATKmabibDWbzAj2TajeEic7WvKCJOLaOh6jibEmdQ36EO3sBUZ0HibAiapsrZo64U8w/132","comment_is_top":false,"comment_ctime":1618526787,"is_pvip":false,"replies":null,"discussion_count":0,"race_medal":0,"score":4,"product_id":100006601,"comment_content":"这个问题可以转化为统一和定制化对应的问题：统一，80%的情况下开发效率高，协作方便，好维护。但是某些特殊场景，可能不满足诉求，如果必须满足可能耗费的精力非常大。定制化优缺点反过来","like_count":0},{"had_liked":false,"id":187500,"user_name":"谭方敏","can_delete":false,"product_type":"c1","uid":1710960,"ip_address":"","ucode":"728DC7ECB7C902","user_header":"https://static001.geekbang.org/account/avatar/00/1a/1b/70/547042ee.jpg","comment_is_top":false,"comment_ctime":1584147989,"is_pvip":false,"replies":null,"discussion_count":1,"race_medal":0,"score":4,"product_id":100006601,"comment_content":"开发层技术\n开发框架\n优选成熟的框架，避免盲目追逐新技术\nweb服务\n开发框架只负责业务功能的开发，真正能够运行起来给用户提供服务的，还需要web服务器配合。\n容器\ndocker为代表，相比较于虚拟机，启动快，几乎不占用什么资源，很大程度上改变了现有技术形态：1）基于docker打造自动化(智能化)运维将成主流方式；2）鼓励往微服务方向发展。\n\n服务层技术\n配置中心\n集中管理各个系统的配置。\n通常用系统标识+host+port来标识唯一一个系统运行实例。\n服务中心\n为了解决跨系统依赖的配置和调度问题的。\n服务中心的实现一般来说，有两种方式：服务名字系统和服务总线系统。\n   服务名字系统（DNS，domain name system）dns的作用是将域名解析为ip地址，服务名字系统是为了将service名称解析为host+port+接口名称。真正发起请求的还是请求方，还是需要直接跟服务交互。\n   服务总线系统\n   由总线系统完成调用，服务请求方都不需要直接和服务提供交互了，服务总线全包了。\n消息队列\n传统异步通知方式是由消息生产者直接调用消费者提供的接口进行通知的。\n消息队列就是为了实现这样跨系统异步通知的中间件系统。可以一对一通知，也可以一对多广播。可以采用发布订阅模式。\n\n使用统一的开发框架和开发语言显然可以团队开发效率更好，但是也带来了如下问题：\n1）无法利用语言的特性，比如go语言擅长处理并发，c&#47;c++擅长处理性能，java擅长业务逻辑等等。\n2）无法利用框架的特性，比如grpc框架适用于处理于处理rpc调用，而libevent则适用于处理传统系统调用\n3）无法将业务特性融合到框架及语言中。有的业务需要好并发的，有一些业务需要高性能的，无法满足业务多样性的需求。","like_count":0,"discussions":[{"author":{"id":1098920,"avatar":"https://static001.geekbang.org/account/avatar/00/10/c4/a8/f2685e1b.jpg","nickname":"华仔","note":"","ucode":"851FF94CF5133A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":421528,"discussion_content":"正解","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1533533729,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":139930,"user_name":"Geek_88604f","can_delete":false,"product_type":"c1","uid":1501234,"ip_address":"","ucode":"33DD1318E53814","user_header":"","comment_is_top":false,"comment_ctime":1570769552,"is_pvip":false,"replies":null,"discussion_count":0,"race_medal":0,"score":4,"product_id":100006601,"comment_content":"        技术上，不存在一个包打天下的框架。在业务发展的过程中总会遇到框架不适合解决的场景，如果死守原有的框架削足适履必然会带来不利的影响:开发效率低、工作量大、系统不稳定等；\n        管理上，团队中总会存在对技术有追求的员工，应鼓励这些员工引入新框架，有利于员工的职业发展，有利于团队的稳定，有利于营造较好的技术氛围；\n        战略上，框架一旦受限将是灾难性的。特别是大公司必须考虑框架受限时如何生存的问题。最近M国将H公司列入实体名单的事件相信给每个大公司提了个醒，要有备胎。","like_count":0},{"had_liked":false,"id":130783,"user_name":"钱","can_delete":false,"product_type":"c1","uid":1009652,"ip_address":"","ucode":"2C92A243A463D4","user_header":"https://static001.geekbang.org/account/avatar/00/0f/67/f4/9a1feb59.jpg","comment_is_top":false,"comment_ctime":1567549371,"is_pvip":false,"replies":null,"discussion_count":0,"race_medal":0,"score":4,"product_id":100006601,"comment_content":"课后思考及问题\n1：这节不费脑，使用统一的开发框架和开发语言可以让团队开发效率更高，但这样做会带来什么问题？\n大一统是为了沟通交流管理方便，提高工作效率，提升团队凝聚力。\n带来的问题，如下：\n1-1：限制了某些场景使用更加合适工具的选择，这是最核心的，选择大于努力，选择错误越努力越费劲\n1-2：语言和框架都有其存在特点，针对某些场景都有其功能优势，架构三原则，合适第一\n1-3：使用某些场景强行使用不合适的语言或框架，会适得其反，不但效率不高可能会更低下\n1-4：其实就像一国之兵种，海、陆、空在不同的战场有不同的优势","like_count":0,"discussions":[{"author":{"id":1128567,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/l8W3SEfertzlK6csQd23sdFJqrXmcTtpNoMjmVdCAV2BwTFMrEoHNNBXjVhIcaJic5ia50rCpDSAKibuibXQ81l74A/132","nickname":"onthewaygame","note":"","ucode":"FDF71538A899F1","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":357217,"discussion_content":"ava是啥","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1615769298,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":41362,"user_name":"小狮子辛巴","can_delete":false,"product_type":"c1","uid":1088420,"ip_address":"","ucode":"B9676851AF3370","user_header":"https://static001.geekbang.org/account/avatar/00/10/9b/a4/ddb31c5b.jpg","comment_is_top":false,"comment_ctime":1542768971,"is_pvip":false,"replies":[{"id":14906,"content":"架构师是分级的，参考特别放送的内容，只会PHP会限制你的选择范围，因此要成为优秀的架构师，只会PHP不太够","user_name":"作者回复","user_name_real":"华仔","uid":1098920,"ctime":1542790320,"ip_address":"","comment_id":41362,"utype":1}],"discussion_count":1,"race_medal":0,"score":4,"product_id":100006601,"comment_content":"弱弱的问一句老师，只能php的能成为架构师吗？","like_count":0,"discussions":[{"author":{"id":1098920,"avatar":"https://static001.geekbang.org/account/avatar/00/10/c4/a8/f2685e1b.jpg","nickname":"华仔","note":"","ucode":"851FF94CF5133A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":429777,"discussion_content":"架构师是分级的，参考特别放送的内容，只会PHP会限制你的选择范围，因此要成为优秀的架构师，只会PHP不太够","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1542790320,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":21854,"user_name":"呵呵","can_delete":false,"product_type":"c1","uid":1052862,"ip_address":"","ucode":"986CC73CFBBC67","user_header":"","comment_is_top":false,"comment_ctime":1535377856,"is_pvip":false,"replies":[{"id":7861,"content":"没用过，简单查了一下，算服务总线系统","user_name":"作者回复","user_name_real":"华仔","uid":1098920,"ctime":1535438347,"ip_address":"","comment_id":21854,"utype":1}],"discussion_count":1,"race_medal":0,"score":4,"product_id":100006601,"comment_content":"大神，Spring Cloud 的Robbin 组件，算是服务总线系统吧？","like_count":0,"discussions":[{"author":{"id":1098920,"avatar":"https://static001.geekbang.org/account/avatar/00/10/c4/a8/f2685e1b.jpg","nickname":"华仔","note":"","ucode":"851FF94CF5133A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":429777,"discussion_content":"架构师是分级的，参考特别放送的内容，只会PHP会限制你的选择范围，因此要成为优秀的架构师，只会PHP不太够","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1542790320,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":18814,"user_name":"Geek_b04b12","can_delete":false,"product_type":"c1","uid":1112139,"ip_address":"","ucode":"F8705A21FCDF09","user_header":"https://static001.geekbang.org/account/avatar/00/10/f8/4b/5ae62b10.jpg","comment_is_top":false,"comment_ctime":1533570685,"is_pvip":false,"replies":[{"id":6641,"content":"是的，不要只拿着一个锤子，至少锤子，刨子，锯子，电钻都要有","user_name":"作者回复","user_name_real":"华仔","uid":1098920,"ctime":1533697570,"ip_address":"","comment_id":18814,"utype":1}],"discussion_count":1,"race_medal":0,"score":4,"product_id":100006601,"comment_content":"每个语言的存在都是为了解决另外一门语言不能解决或者比较麻烦解决的问题，正如php的browser&#47;server，因为不需要客户端常驻内存、但是游戏开发的时候，场景就有点不是太适合PHP做了、","like_count":0,"discussions":[{"author":{"id":1098920,"avatar":"https://static001.geekbang.org/account/avatar/00/10/c4/a8/f2685e1b.jpg","nickname":"华仔","note":"","ucode":"851FF94CF5133A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":421654,"discussion_content":"是的，不要只拿着一个锤子，至少锤子，刨子，锯子，电钻都要有","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1533697570,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":18438,"user_name":"Alex.Wu","can_delete":false,"product_type":"c1","uid":1101388,"ip_address":"","ucode":"5529BF2AE20A72","user_header":"https://static001.geekbang.org/account/avatar/00/10/ce/4c/507a06ee.jpg","comment_is_top":false,"comment_ctime":1533307424,"is_pvip":false,"replies":[{"id":6526,"content":"正解","user_name":"作者回复","user_name_real":"华仔","uid":1098920,"ctime":1533533729,"ip_address":"","comment_id":18438,"utype":1}],"discussion_count":1,"race_medal":0,"score":4,"product_id":100006601,"comment_content":"统一的框架统一的语言带来的最大问题就是不同语言不同框架有不同的特性，能支持不同的业务场景。比如php就不支持多线程一些需要多线程处理的业务php来做就很困难实现起来效率低下。但是java支持多线程可以很好的应对业务场景。单java却不支持泛类型导致变量的类型必须经过转换才能应对某些场景单php却支持。所以没有最好的语言只有最适合某项业务的语言。最终的问题还是取舍问题","like_count":0,"discussions":[{"author":{"id":1098920,"avatar":"https://static001.geekbang.org/account/avatar/00/10/c4/a8/f2685e1b.jpg","nickname":"华仔","note":"","ucode":"851FF94CF5133A","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":421528,"discussion_content":"正解","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1533533729,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":137432,"user_name":"Sam.张朝","can_delete":false,"product_type":"c1","uid":1132448,"ip_address":"","ucode":"FB20554D94B250","user_header":"https://static001.geekbang.org/account/avatar/00/11/47/a0/f12115b7.jpg","comment_is_top":false,"comment_ctime":1569739821,"is_pvip":true,"replies":null,"discussion_count":0,"race_medal":0,"score":4,"product_id":100006601,"comment_content":"语言都有使用的场景，一种语言不能胜任所有的开发场景。","like_count":2},{"had_liked":false,"id":303763,"user_name":"ZHANGPING","can_delete":false,"product_type":"c1","uid":1918112,"ip_address":"","ucode":"7108812981C996","user_header":"https://static001.geekbang.org/account/avatar/00/1d/44/a0/16d0d300.jpg","comment_is_top":false,"comment_ctime":1626965725,"is_pvip":false,"replies":null,"discussion_count":0,"race_medal":0,"score":4,"product_id":100006601,"comment_content":"统一的框架不能应对复杂的业务场景，不能够采用最有效的方式解决问题。所以：有些开发框架是跨语言，跨平台，提供服务化API的方式。","like_count":0},{"had_liked":false,"id":288525,"user_name":"梦倚栏杆","can_delete":false,"product_type":"c1","uid":1095857,"ip_address":"","ucode":"BDEB97F2822445","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/bvj76PmeUvW8kokyu91IZWuRATKmabibDWbzAj2TajeEic7WvKCJOLaOh6jibEmdQ36EO3sBUZ0HibAiapsrZo64U8w/132","comment_is_top":false,"comment_ctime":1618526787,"is_pvip":false,"replies":null,"discussion_count":0,"race_medal":0,"score":4,"product_id":100006601,"comment_content":"这个问题可以转化为统一和定制化对应的问题：统一，80%的情况下开发效率高，协作方便，好维护。但是某些特殊场景，可能不满足诉求，如果必须满足可能耗费的精力非常大。定制化优缺点反过来","like_count":0},{"had_liked":false,"id":187500,"user_name":"谭方敏","can_delete":false,"product_type":"c1","uid":1710960,"ip_address":"","ucode":"728DC7ECB7C902","user_header":"https://static001.geekbang.org/account/avatar/00/1a/1b/70/547042ee.jpg","comment_is_top":false,"comment_ctime":1584147989,"is_pvip":false,"replies":null,"discussion_count":1,"race_medal":0,"score":4,"product_id":100006601,"comment_content":"开发层技术\n开发框架\n优选成熟的框架，避免盲目追逐新技术\nweb服务\n开发框架只负责业务功能的开发，真正能够运行起来给用户提供服务的，还需要web服务器配合。\n容器\ndocker为代表，相比较于虚拟机，启动快，几乎不占用什么资源，很大程度上改变了现有技术形态：1）基于docker打造自动化(智能化)运维将成主流方式；2）鼓励往微服务方向发展。\n\n服务层技术\n配置中心\n集中管理各个系统的配置。\n通常用系统标识+host+port来标识唯一一个系统运行实例。\n服务中心\n为了解决跨系统依赖的配置和调度问题的。\n服务中心的实现一般来说，有两种方式：服务名字系统和服务总线系统。\n   服务名字系统（DNS，domain name system）dns的作用是将域名解析为ip地址，服务名字系统是为了将service名称解析为host+port+接口名称。真正发起请求的还是请求方，还是需要直接跟服务交互。\n   服务总线系统\n   由总线系统完成调用，服务请求方都不需要直接和服务提供交互了，服务总线全包了。\n消息队列\n传统异步通知方式是由消息生产者直接调用消费者提供的接口进行通知的。\n消息队列就是为了实现这样跨系统异步通知的中间件系统。可以一对一通知，也可以一对多广播。可以采用发布订阅模式。\n\n使用统一的开发框架和开发语言显然可以团队开发效率更好，但是也带来了如下问题：\n1）无法利用语言的特性，比如go语言擅长处理并发，c&#47;c++擅长处理性能，java擅长业务逻辑等等。\n2）无法利用框架的特性，比如grpc框架适用于处理于处理rpc调用，而libevent则适用于处理传统系统调用\n3）无法将业务特性融合到框架及语言中。有的业务需要好并发的，有一些业务需要高性能的，无法满足业务多样性的需求。","like_count":0,"discussions":[{"author":{"id":1128567,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/l8W3SEfertzlK6csQd23sdFJqrXmcTtpNoMjmVdCAV2BwTFMrEoHNNBXjVhIcaJic5ia50rCpDSAKibuibXQ81l74A/132","nickname":"onthewaygame","note":"","ucode":"FDF71538A899F1","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":357217,"discussion_content":"ava是啥","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1615769298,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":"","group_id":0},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":139930,"user_name":"Geek_88604f","can_delete":false,"product_type":"c1","uid":1501234,"ip_address":"","ucode":"33DD1318E53814","user_header":"","comment_is_top":false,"comment_ctime":1570769552,"is_pvip":false,"replies":null,"discussion_count":0,"race_medal":0,"score":4,"product_id":100006601,"comment_content":"        技术上，不存在一个包打天下的框架。在业务发展的过程中总会遇到框架不适合解决的场景，如果死守原有的框架削足适履必然会带来不利的影响:开发效率低、工作量大、系统不稳定等；\n        管理上，团队中总会存在对技术有追求的员工，应鼓励这些员工引入新框架，有利于员工的职业发展，有利于团队的稳定，有利于营造较好的技术氛围；\n        战略上，框架一旦受限将是灾难性的。特别是大公司必须考虑框架受限时如何生存的问题。最近M国将H公司列入实体名单的事件相信给每个大公司提了个醒，要有备胎。","like_count":0},{"had_liked":false,"id":130783,"user_name":"钱","can_delete":false,"product_type":"c1","uid":1009652,"ip_address":"","ucode":"2C92A243A463D4","user_header":"https://static001.geekbang.org/account/avatar/00/0f/67/f4/9a1feb59.jpg","comment_is_top":false,"comment_ctime":1567549371,"is_pvip":false,"replies":null,"discussion_count":0,"race_medal":0,"score":4,"product_id":100006601,"comment_content":"课后思考及问题\n1：这节不费脑，使用统一的开发框架和开发语言可以让团队开发效率更高，但这样做会带来什么问题？\n大一统是为了沟通交流管理方便，提高工作效率，提升团队凝聚力。\n带来的问题，如下：\n1-1：限制了某些场景使用更加合适工具的选择，这是最核心的，选择大于努力，选择错误越努力越费劲\n1-2：语言和框架都有其存在特点，针对某些场景都有其功能优势，架构三原则，合适第一\n1-3：使用某些场景强行使用不合适的语言或框架，会适得其反，不但效率不高可能会更低下\n1-4：其实就像一国之兵种，海、陆、空在不同的战场有不同的优势","like_count":0},{"had_liked":false,"id":125299,"user_name":"康斯坦丁","can_delete":false,"product_type":"c1","uid":1368096,"ip_address":"","ucode":"C130E800E8D5C9","user_header":"https://static001.geekbang.org/account/avatar/00/14/e0/20/003190c1.jpg","comment_is_top":false,"comment_ctime":1566141503,"is_pvip":false,"replies":null,"discussion_count":0,"race_medal":0,"score":5,"product_id":100006601,"comment_content":"1 随着时间积累，切换语言的风险越来越大。\n2 缺乏技术创造力，不同的语言有其不同的适合场景","like_count":0},{"had_liked":false,"id":88143,"user_name":"花花大脸猫","can_delete":false,"product_type":"c1","uid":1117318,"ip_address":"","ucode":"8ABDB3F7F4FB0F","user_header":"https://static001.geekbang.org/account/avatar/00/11/0c/86/8e52afb8.jpg","comment_is_top":false,"comment_ctime":1555858231,"is_pvip":true,"replies":null,"discussion_count":0,"race_medal":0,"score":5,"product_id":100006601,"comment_content":"小公司的话肯定使用统一开发框架以及语言，效率最大化而且更容易管理掌控，在当前的业务场景下能够满足要求，但是当业务规模以及复杂度上来的时候，统一的框架以及语言会带来局限性就会非常明显，可选范围非常局限，所以这时候需要考结合务场景的要求，来选择合适自己的框架以及开发语言，往多元化进行考虑。","like_count":0},{"had_liked":false,"id":87532,"user_name":"Sic Pavis","can_delete":false,"product_type":"c1","uid":1106088,"ip_address":"","ucode":"48B5F0118347C8","user_header":"https://static001.geekbang.org/account/avatar/00/10/e0/a8/4e739cf6.jpg","comment_is_top":false,"comment_ctime":1555633334,"is_pvip":false,"replies":null,"discussion_count":0,"race_medal":0,"score":5,"product_id":100006601,"comment_content":"使用统一语言和框架，很可能限制技术人员的技术视野。一遇到问题下意识地想在这个框架或语言里我需要怎么解决。实际上可能有更合适的其他方案，对于一些细枝末节可以妥协，但是对于一些核心技术方案，则需要再做商议\n\n第二就是整个技术团队更换框架的时候可能会因为步骤不一致导致一些团队沟通问题","like_count":0},{"had_liked":false,"id":50550,"user_name":"乘风","can_delete":false,"product_type":"c1","uid":1115724,"ip_address":"","ucode":"0420C5535DACB7","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTLwSoTjHPX5tm4whBSfoZLX6toZxrZGUaLABQywKNf4MDc9toK3QSV7Z99ATcGicFCysoleQ5ISzmw/132","comment_is_top":false,"comment_ctime":1545008882,"is_pvip":false,"replies":null,"discussion_count":0,"race_medal":0,"score":5,"product_id":100006601,"comment_content":"\t使用统一的开发框架和语言可以降低团队的沟通成本和学习成本，但不能因地制宜，不同的业务采用适合的技术去解决。\n问题：\n\t1.解决效果无法达到预期，如性能效果，如展示效果，比如java也可以做pc的应用程序，但界面效果和运行效果都无法媲美c，\n\t解决方法：根据不同的业务场景，参考业界主流和自身的情况采取合适的方式实现（有点像废话），但目前做的业务系统上确实没有照搬主流，更多是依据自身的情况，如成本、人员情况。","like_count":0},{"had_liked":false,"id":28781,"user_name":"孙振超","can_delete":false,"product_type":"c1","uid":1101755,"ip_address":"","ucode":"0F9EABC6125350","user_header":"https://static001.geekbang.org/account/avatar/00/10/cf/bb/22af0e52.jpg","comment_is_top":false,"comment_ctime":1538144438,"is_pvip":false,"replies":null,"discussion_count":0,"race_medal":0,"score":5,"product_id":100006601,"comment_content":"每一个开发框架和语言都有适合自己的应用场景，","like_count":0},{"had_liked":false,"id":20612,"user_name":"Panda","can_delete":false,"product_type":"c1","uid":1095740,"ip_address":"","ucode":"911A200C7B18BE","user_header":"https://static001.geekbang.org/account/avatar/00/10/b8/3c/1a294619.jpg","comment_is_top":false,"comment_ctime":1534592739,"is_pvip":false,"replies":null,"discussion_count":0,"race_medal":0,"score":5,"product_id":100006601,"comment_content":"没有最好的语言，没有最好的框架，只有最合适的语言，最合适的框架","like_count":0},{"had_liked":false,"id":125299,"user_name":"康斯坦丁","can_delete":false,"product_type":"c1","uid":1368096,"ip_address":"","ucode":"C130E800E8D5C9","user_header":"https://static001.geekbang.org/account/avatar/00/14/e0/20/003190c1.jpg","comment_is_top":false,"comment_ctime":1566141503,"is_pvip":false,"replies":null,"discussion_count":0,"race_medal":0,"score":5,"product_id":100006601,"comment_content":"1 随着时间积累，切换语言的风险越来越大。\n2 缺乏技术创造力，不同的语言有其不同的适合场景","like_count":0},{"had_liked":false,"id":88143,"user_name":"花花大脸猫","can_delete":false,"product_type":"c1","uid":1117318,"ip_address":"","ucode":"8ABDB3F7F4FB0F","user_header":"https://static001.geekbang.org/account/avatar/00/11/0c/86/8e52afb8.jpg","comment_is_top":false,"comment_ctime":1555858231,"is_pvip":true,"replies":null,"discussion_count":0,"race_medal":0,"score":5,"product_id":100006601,"comment_content":"小公司的话肯定使用统一开发框架以及语言，效率最大化而且更容易管理掌控，在当前的业务场景下能够满足要求，但是当业务规模以及复杂度上来的时候，统一的框架以及语言会带来局限性就会非常明显，可选范围非常局限，所以这时候需要考结合务场景的要求，来选择合适自己的框架以及开发语言，往多元化进行考虑。","like_count":0},{"had_liked":false,"id":87532,"user_name":"Sic Pavis","can_delete":false,"product_type":"c1","uid":1106088,"ip_address":"","ucode":"48B5F0118347C8","user_header":"https://static001.geekbang.org/account/avatar/00/10/e0/a8/4e739cf6.jpg","comment_is_top":false,"comment_ctime":1555633334,"is_pvip":false,"replies":null,"discussion_count":0,"race_medal":0,"score":5,"product_id":100006601,"comment_content":"使用统一语言和框架，很可能限制技术人员的技术视野。一遇到问题下意识地想在这个框架或语言里我需要怎么解决。实际上可能有更合适的其他方案，对于一些细枝末节可以妥协，但是对于一些核心技术方案，则需要再做商议\n\n第二就是整个技术团队更换框架的时候可能会因为步骤不一致导致一些团队沟通问题","like_count":0},{"had_liked":false,"id":50550,"user_name":"乘风","can_delete":false,"product_type":"c1","uid":1115724,"ip_address":"","ucode":"0420C5535DACB7","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTLwSoTjHPX5tm4whBSfoZLX6toZxrZGUaLABQywKNf4MDc9toK3QSV7Z99ATcGicFCysoleQ5ISzmw/132","comment_is_top":false,"comment_ctime":1545008882,"is_pvip":false,"replies":null,"discussion_count":0,"race_medal":0,"score":5,"product_id":100006601,"comment_content":"\t使用统一的开发框架和语言可以降低团队的沟通成本和学习成本，但不能因地制宜，不同的业务采用适合的技术去解决。\n问题：\n\t1.解决效果无法达到预期，如性能效果，如展示效果，比如java也可以做pc的应用程序，但界面效果和运行效果都无法媲美c，\n\t解决方法：根据不同的业务场景，参考业界主流和自身的情况采取合适的方式实现（有点像废话），但目前做的业务系统上确实没有照搬主流，更多是依据自身的情况，如成本、人员情况。","like_count":0},{"had_liked":false,"id":28781,"user_name":"孙振超","can_delete":false,"product_type":"c1","uid":1101755,"ip_address":"","ucode":"0F9EABC6125350","user_header":"https://static001.geekbang.org/account/avatar/00/10/cf/bb/22af0e52.jpg","comment_is_top":false,"comment_ctime":1538144438,"is_pvip":false,"replies":null,"discussion_count":0,"race_medal":0,"score":5,"product_id":100006601,"comment_content":"每一个开发框架和语言都有适合自己的应用场景，","like_count":0},{"had_liked":false,"id":20612,"user_name":"Panda","can_delete":false,"product_type":"c1","uid":1095740,"ip_address":"","ucode":"911A200C7B18BE","user_header":"https://static001.geekbang.org/account/avatar/00/10/b8/3c/1a294619.jpg","comment_is_top":false,"comment_ctime":1534592739,"is_pvip":false,"replies":null,"discussion_count":0,"race_medal":0,"score":5,"product_id":100006601,"comment_content":"没有最好的语言，没有最好的框架，只有最合适的语言，最合适的框架","like_count":0}]}