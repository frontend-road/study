{"id":210210,"title":"07｜MySQL HA：如何将“删库跑路”的损失降到最低？","content":"<p>你好，我是李玥。</p><p>对于任何一个企业来说，数据安全的重要性是不言而喻的。我在开篇词中也曾经强调过，凡是涉及到数据的问题，都是损失惨重的大问题。</p><p>能够影响数据安全的事件，都是极小概率的事件，比如说：数据库宕机、磁盘损坏甚至机房着火，还有最近频繁出现在段子中“程序员不满老板删库跑路”的梗儿，但这些事儿一旦发生了，我们的业务就会损失惨重。</p><p>一般来说，存储系统导致的比较严重的损失主要有两种情况，一是数据丢失造成的直接财产损失，比如大量的坏账；二是由于存储系统损坏，造成整个业务系统停止服务而带来的损失。</p><p>所谓防患于未然，你从设计一个系统的第一天起，就需要考虑在出现各种问题的时候，如何来保证这个系统的数据安全性。今天我们来聊一聊，如何提前预防，将“删库跑路”等这类问题导致的损失尽量降到最低。</p><h2>如何更安全地做数据备份和恢复？</h2><p>保证数据安全，最简单而且有效的手段就是定期备份数据，这样出现任何问题导致的数据损失，都可以通过备份来恢复数据。但是，如何备份，才能最大程度地保证数据安全，并不是一个简单的事儿。</p><p>2018年还出现过某个著名的云服务商因为硬盘损坏，导致多个客户数据全部丢失的重大故障。这么大的云服务商，数据是不可能没有备份的，按说硬盘损坏，不会导致数据丢失的，但是因为各种各样的原因，最终的结果是数据的三个副本都被删除，数据丢失无法找回。</p><!-- [[[read_end]]] --><p>所以说，不是简单地定期把数据备份一下就可以高枕无忧了。接下来我们还是以大家最常用的MySQL为例来说一下，如何更安全地来做数据备份和恢复。</p><p>最简单的备份方式就是全量备份。备份的时候，把所有的数据复制一份，存放到文件中，恢复的时候再把文件中的数据复制回去，这样可以保证恢复之后数据库中的数据和备份时是完全一样的。在MySQL中，你可以使用<a href=\"https://dev.mysql.com/doc/refman/8.0/en/mysqldump.html\">mysqldump</a>命令来执行全量备份。</p><p>比如我们要全量备份数据库test：</p><pre><code>$mysqldump -uroot -p test &gt; test.sql\n</code></pre><p>备份出来的文件就是一个SQL文件，就是创建数据库、表，写入数据等等这些SQL，如果要恢复数据，直接执行这个备份的SQL文件就可以了：</p><pre><code>$mysql -uroot test &lt; test.sql\n</code></pre><p>不过，全量备份的代价非常高，为什么这么说呢？</p><p>首先，备份文件包含数据库中的所有数据，占用的磁盘空间非常大；其次，每次备份操作都要拷贝大量数据，备份过程中会占用数据库服务器大量的CPU、磁盘IO资源，并且为了保证数据一致性，还有可能会锁表，这些都会导致备份期间，数据库本身的性能严重下降。所以，我们不能经常对数据库执行全量备份。</p><p>一般来说，每天执行一次全量备份已经是非常频繁了。那这就意味着，如果数据库中的数据丢了，那只能恢复到最近一次全量备份的那个时间点，这个时间点之后的数据还是丢了。也就是说，全量备份不能做到完全无损地恢复。</p><p>既然全量备份代价太高，不能频繁执行，那有没有代价低一点儿的备份方法，能让我们少丢甚至不丢数据呢？还真有，那就是<strong>增量备份</strong>。相比于全量备份，增量备份每次只备份相对于上一次备份变化的那部分数据，所以每次增量备份速度更快。</p><p>MySQL自带了Binlog，就是一种实时的增量备份。Binlog里面记录的就是MySQL数据的变更的操作日志，开启Binlog之后，我们对MySQL中的每次更新数据操作，都会被记录到Binlog中。</p><p>Binlog是可以回放的，回放Binlog，就相当于把之前对数据库所有数据更新操作按照顺序重新执行了一遍，回放完成之后数据自然就恢复了。这就是Binlog增量备份的基本原理。很多数据库都有类似于MySQL Binlog的日志，原理和Binlog是一样的，备份和恢复方法也是类似的。</p><p>下面通过一个例子看一下如何使用Binlog进行备份和恢复。首先使用“show variables like ‘%log_bin%’”命令确认一下是否开启了Binlog功能：</p><pre><code>mysql&gt; show variables like '%log_bin%';\n+---------------------------------+-----------------------------------+\n| Variable_name                   | Value                             |\n+---------------------------------+-----------------------------------+\n| log_bin                         | ON                                |\n| log_bin_basename                | /usr/local/var/mysql/binlog       |\n+---------------------------------+-----------------------------------+\nmysql&gt; show master status;\n+---------------+----------+--------------+------------------+-------------------+\n| File          | Position | Binlog_Do_DB | Binlog_Ignore_DB | Executed_Gtid_Set |\n+---------------+----------+--------------+------------------+-------------------+\n| binlog.000001 |    18745 |              |                  |                   |\n+---------------+----------+--------------+------------------+-------------------+\n</code></pre><p>可以看到当前这个数据库已经开启了Binlog，log_bin_basename表示Binlog文件在服务器磁盘上的具体位置。然后用“show master status”命令可查看当前Binlog的状态，显示正在写入的Binlog文件，及当前的位置。假设我们每天凌晨用mysqldump做一个全量备份，然后开启了Binlog，有了这些，我们就可以把数据恢复到全量备份之后的任何一个时刻。</p><p>下面我们做一个简单的备份恢复演示。我们先模拟一次“删库跑路”的场景，直接把账户余额表清空：</p><pre><code>mysql&gt; truncate table account_balance;\nQuery OK, 0 rows affected (0.02 sec)\n\n\nmysql&gt; select * from  account_balance;\nEmpty set (0.00 sec)\n</code></pre><p>然后我们来进行数据恢复，首先执行一次全量恢复，把数据库恢复到今天凌晨的状态。</p><pre><code>$mysql -uroot test &lt; dump.sql\n\n\nmysql&gt; select * from  account_balance;\n+---------+---------+---------------------+--------+\n| user_id | balance | timestamp           | log_id |\n+---------+---------+---------------------+--------+\n|       0 |     100 | 2020-02-13 20:24:33 |      3 |\n+---------+---------+---------------------+--------+\n</code></pre><p>可以看到，表里面的数据已经恢复了，但还是比较旧的数据。然后我们再用Binlog把数据恢复到删库跑路之前的那个时刻：</p><pre><code>$mysqlbinlog --start-datetime &quot;2020-02-20 00:00:00&quot; --stop-datetime &quot;2020-02-20 15:09:00&quot; /usr/local/var/mysql/binlog.000001 | mysql -uroot\n\n\nmysql&gt; select * from  account_balance;\n+---------+---------+---------------------+--------+\n| user_id | balance | timestamp           | log_id |\n+---------+---------+---------------------+--------+\n|       0 |     200 | 2020-02-20 15:08:12 |      0 |\n+---------+---------+---------------------+--------+\n</code></pre><p>这时候，数据已经恢复到当天的15点了。</p><p>通过定期的全量备份，配合Binlog，我们就可以把数据恢复到任意一个时间点，再也不怕程序员删库跑路了。详细的命令你可以参考<a href=\"https://dev.mysql.com/doc/refman/8.0/en/backup-and-recovery.html\">MySQL的官方文档中“备份和恢复”这一章</a>。</p><p>在执行备份和恢复的时候，有几个要点你需要特别的注意。</p><p><strong>第一，也是最重要的，“不要把所有的鸡蛋放在同一个篮子中”，无论是全量备份还是Binlog，都不要和数据库存放在同一个服务器上</strong><strong>。</strong>最好能做到不同机房，甚至不同城市，离得越远越好。这样即使出现机房着火、光缆被挖断甚至地震也不怕。</p><p><strong>第二，在回放Binlog的时候，指定的起始时间可以比全量备份的时间稍微提前一点儿，确保全量备份之后的所有操作都在恢复的Binlog范围内，这样可以保证恢复的数据的完整性。</strong></p><p>因为回放Binlog的操作是具备幂等性的（为了确保回放幂等，需要设置Binlog的格式为ROW格式)，关于幂等性，我们在《<a href=\"https://time.geekbang.org/column/article/204673\">01 | 创建和更新订单时，如何保证数据准确无误？</a>》这节课中讲到过，多次操作和一次操作对系统的影响是一样的，所以重复回放的那部分Binlog并不会影响数据的准确性。</p><h2>配置MySQL HA实现高可用</h2><p>通过全量备份加上Binlog，我们可以将数据库恢复到任何一个时间点，这样至少不会丢数据了。如果说，数据库服务器宕机了，因为我们有备份数据，完全可以启动一个新的数据库服务器，把备份数据恢复到新的数据库上，这样新的数据库就可以替代宕机的数据库，继续提供服务。</p><p>但是，这个恢复数据的时间是很长的，如果数据量比较大的话，有可能需要恢复几个小时。这几个小时，我们的系统是一直不可用的，这样肯定不行。</p><p>这个问题怎么解决？很简单，你不要等着数据库宕机了，才开始做恢复，我们完全可以提前来做恢复这些事儿。</p><p>我们准备一台备用的数据库，把它的数据恢复成主库一样，然后实时地在主备数据库之间来同步Binlog，主库做了一次数据变更，生成一条Binlog，我们就把这一条Binlog复制到备用库并立即回放，这样就可以让备用库里面的数据和主库中的数据一直保持是一样的。一旦主库宕机，就可以立即切换到备用库上继续提供服务。这就是MySQL的高可用方案，也叫MySQL HA。</p><p>MySQL自身就提供了主从复制的功能，通过配置就可以让一主一备两台MySQL的数据库保持数据同步，具体的配置方法你可以参考<a href=\"https://dev.mysql.com/doc/refman/8.0/en/replication.html\">MySQ官方文档中“复制”这一章</a>。</p><p>接下来我们说这个方案的问题。当我们对主库执行一次更新操作的时候，主从两个数据库更新数据实际的时序是这样的：</p><ol>\n<li>在主库的磁盘上写入Binlog；</li>\n<li>主库更新存储引擎中的数据；</li>\n<li>给客户端返回成功响应；</li>\n<li>主库把Binlog复制到从库；</li>\n<li>从库回放Binlog，更新存储引擎中的数据。</li>\n</ol><p>也就是说，从库的数据是有可能比主库上的数据旧一些的，这个主从之间复制数据的延迟，称为“主从延迟”。正常情况下，主从延迟基本都是毫秒级别，你可以认为主从就是实时保持同步的。麻烦的是不正常的情况，一旦主库或者从库繁忙的时候，有可能会出现明显的主从延迟。</p><p>而很多情况下，数据库都不是突然宕机的，而是先繁忙，性能下降，最终宕机。这种情况下，很有可能主从延迟很大，如果我们把业务直接切到从库上继续读写，主从延迟这部分数据就丢了，并且这个数据丢失是不可逆的。即使事后你找回了当时主库的Binlog也是没法做到自动恢复的，因为它和从库的数据是冲突的。</p><p>简单地说，如果主库宕机并且主从存在延迟的情况下，切换到从库继续读写，可以保证业务的可用性，但是主从延迟这部分数据就丢失了。</p><p>这个时候你就需要做一个选择题了，第一个选项是，保证不丢数据，牺牲可用性，暂时停止服务，想办法把主库的Binlog恢复到从库上之后再提供服务。第二个选项就是，冒着丢一些数据的风险，保证可用性，第一时间切换到从库继续提供服务。</p><p>那能不能既保证数据不丢，还能做到高可用呢？也是可以的，那你就要牺牲一些性能。MySQL也支持<a href=\"https://dev.mysql.com/doc/refman/8.0/en/replication-semisync.html\">同步复制</a>，开启同步复制时，MySQL主库会等待数据成功复制到从库之后，再给客户端返回响应。</p><p>如果说，牺牲的这点儿性能我不在乎，这个方案是不是就完美了呢？也不是，新的问题又来了！你想一下，这种情况下从库宕机了怎么办？本来从库宕机对主库是完全没影响的，因为现在主库要等待从库写入成功再返回，从库宕机，主库就会一直等待从库，主库也卡死了。</p><p>这个问题也有解决办法，那就是再加一个从库，把主库配置成：成功复制到任意一个从库就返回，只要有一个从库还活着，就不会影响主库写入数据，这样就解决了从库宕机阻塞主库的问题。如果主库发生宕机，在两个从库中，至少有一个从库中的数据是和主库完全一样的，可以把这个库作为新的主库，继续提供服务。为此你需要付出的代价是，你要至少用三台数据库服务器，并且这三台服务器提供的服务性能，还不如一台服务器高。</p><p>我把上面这三种典型的HA方案总结成下面这个表格，便于你对比选择：</p><p><img src=\"https://static001.geekbang.org/resource/image/04/ac/04ff6bce8f5b607950fc469a606433ac.jpg?wh=1142*345\" alt=\"\"></p><h2>小结</h2><p>今天这节课讲了两件事儿，一是如何备份和恢复数据库中的数据，确保数据安全；二是如何来实现数据库的高可用，避免宕机停服。</p><p>虽然这是两个不同的问题，但你要知道，解决这两个问题背后的实现原理是一样的。<strong>高可用依赖的是数据复制，数据复制的本质就是从一个库备份数据，然后恢复到另外一个库中去。</strong></p><p>数据备份时，使用低频度的全量备份配合Binlog增量备份是一种常用而且非常实用的方法，使用这种备份方法，我们可以把数据库的数据精确地恢复到历史上任意一个时刻，不仅能解决数据损坏的问题，也不用怕误操作、删库跑路这些事儿了。特别要注意的是，让备份数据尽量地远离数据库。</p><p>我们今天讲到的几种MySQL典型的HA方案，在数据可靠性、数据库可用性、性能和成本几个方面，各有利弊，你需要根据业务情况，做一个最优的选择，并且为可能存在的风险做好准备。</p><h2>思考题</h2><p>课后也请你在留言区分享一下，你现在负责系统的数据库是如何来实现高可用的，有什么风险和问题，学习了这节课之后，你会如何来改进这个高可用方案？欢迎你在留言区与我讨论。</p><p>感谢阅读，如果你觉得今天的内容对你有帮助，也欢迎把它分享给你的朋友。</p>","comments":[{"had_liked":false,"id":187054,"user_name":"李玥","can_delete":false,"product_type":"c1","uid":1501046,"ip_address":"","ucode":"B19E91EE248591","user_header":"https://static001.geekbang.org/account/avatar/00/16/e7/76/79c1f23a.jpg","comment_is_top":true,"comment_ctime":1584001508,"is_pvip":false,"discussion_count":1,"race_medal":0,"score":"9.2233722875469005e+18","product_id":100046801,"comment_content":"Hi，我是李玥。\r<br>\r<br>照例说一下上节课思考题：\r<br>\r<br>我们在电商的搜索框中搜索商品时，它都有一个搜索提示的功能，比如我输入“苹果”还没有点击搜索按钮的时候，搜索框下面会提示“苹果手机”、“苹果11、苹果电脑”这些建议的搜索关键字，请你课后看一下ES的文档，想一下，如何用ES快速地实现这个搜索提示功能？\r<br>\r<br>在课后留言中，Geek_c76e2d同学给出的答案非常赞，我在这里就直接“盗用”了，以下是Geek_c76e2d同学的答案：\r<br>\r<br>因为用户每输入一个字都可能会发请求查询搜索框中的搜索推荐。所以搜索推荐的请求量远高于搜索框中的搜索。es针对这种情况提供了suggestion api，并提供的专门的数据结构应对搜索推荐，性能高于match，但它应用起来也有局限性，就是只能做前缀匹配。再结合pinyin分词器可以做到输入拼音字母就提示中文。如果想做非前缀匹配，可以考虑Ngram。不过Ngram有些复杂，需要开发者自定义分析器。比如有个网址www.geekbang.com，用户可能记不清具体网址了，只记得网址中有2个e，此时用户输入ee两个字母也是可以在搜索框提示出这个网址的。以上是我在工作中针对前缀搜索推荐和非前缀搜索推荐的实现方案。","like_count":59,"discussions":[{"author":{"id":1336475,"avatar":"https://static001.geekbang.org/account/avatar/00/14/64/9b/0b578b08.jpg","nickname":"J.Smile","note":"","ucode":"C4D98DFDBF7584","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":363758,"discussion_content":"ngram在机器学习中用的很多。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1617275957,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":187022,"user_name":"qbit","can_delete":false,"product_type":"c1","uid":1262927,"ip_address":"","ucode":"96C70A1E47B93D","user_header":"https://static001.geekbang.org/account/avatar/00/13/45/4f/f94caf47.jpg","comment_is_top":false,"comment_ctime":1583993140,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"143317913908","product_id":100046801,"comment_content":"腾讯云是一家著名的云服务商:-D","like_count":34},{"had_liked":false,"id":186892,"user_name":"skyline","can_delete":false,"product_type":"c1","uid":1002938,"ip_address":"","ucode":"4E73F9049751F6","user_header":"https://static001.geekbang.org/account/avatar/00/0f/4d/ba/83e6dcbf.jpg","comment_is_top":false,"comment_ctime":1583946253,"is_pvip":false,"discussion_count":2,"race_medal":0,"score":"117548063245","product_id":100046801,"comment_content":"除了技术方面，我觉得删库跑路也是一个管理机制上的问题，要当成不可抗因素去对待。<br><br>为防止地震我们需要异地备份，距离越远越好，为防止跑路我们需要完善的权限管理。<br><br>不能让一个人有能接触到所有备份的权限，否则就跟单机故障一样出现&quot;单人故障&quot;🤔","like_count":28,"discussions":[{"author":{"id":1064018,"avatar":"https://static001.geekbang.org/account/avatar/00/10/3c/52/5951ffb4.jpg","nickname":"Sinvi","note":"","ucode":"2A90976980CA3C","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":327494,"discussion_content":"总有一个人有全部权限","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1605850675,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":1,"child_discussions":[{"author":{"id":1002938,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/4d/ba/83e6dcbf.jpg","nickname":"skyline","note":"","ucode":"4E73F9049751F6","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1064018,"avatar":"https://static001.geekbang.org/account/avatar/00/10/3c/52/5951ffb4.jpg","nickname":"Sinvi","note":"","ucode":"2A90976980CA3C","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":327559,"discussion_content":"权限不是问题，关键是要与人的能力和责任匹配。技术一把手权限当然高，同时他在公司的利益和法律责任也是最高的。","likes_number":5,"is_delete":false,"is_hidden":false,"ctime":1605861866,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":327494,"ip_address":""},"score":327559,"extra":""}]}]},{"had_liked":false,"id":207487,"user_name":"mickey","can_delete":false,"product_type":"c1","uid":1051663,"ip_address":"","ucode":"8B490C2DDE4010","user_header":"https://static001.geekbang.org/account/avatar/00/10/0c/0f/93d1c8eb.jpg","comment_is_top":false,"comment_ctime":1587091875,"is_pvip":false,"replies":[{"id":"77842","content":"这正是幂等性的体现啊，已有记录重复插入会插入失败，所以报这个错忽略就好了。","user_name":"作者回复","user_name_real":"李玥","uid":"1501046","ctime":1587352801,"ip_address":"","comment_id":207487,"utype":1}],"discussion_count":1,"race_medal":0,"score":"91781405091","product_id":100046801,"comment_content":"请问，回放binlog是幂等性的，那为什么我连续执行两条相同的mysqlbinlog语句后，系统报错了呢（第一次执行正常，数据恢复）？<br>语句：mysqlbinlog --start-datetime &quot;2020-04-17 10:00:00&quot; --stop-datetime &quot;2020-04-17 10:48:00&quot; E:\\data\\test\\mysql-bin.010163 | mysql -uroot -p<br><br>报错：ERROR 1062 (23000) at line 33: Duplicate entry &#39;4&#39; for key &#39;PRIMARY&#39;","like_count":22,"discussions":[{"author":{"id":1501046,"avatar":"https://static001.geekbang.org/account/avatar/00/16/e7/76/79c1f23a.jpg","nickname":"李玥","note":"","ucode":"B19E91EE248591","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":492146,"discussion_content":"这正是幂等性的体现啊，已有记录重复插入会插入失败，所以报这个错忽略就好了。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1587352801,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":208566,"user_name":"子不语","can_delete":false,"product_type":"c1","uid":1123186,"ip_address":"","ucode":"907AB44706467B","user_header":"https://static001.geekbang.org/account/avatar/00/11/23/72/70190bc1.jpg","comment_is_top":false,"comment_ctime":1587383319,"is_pvip":false,"replies":[{"id":"78333","content":"是的。所以回放的时候，要找准起止位点，不要回放删库动作。","user_name":"作者回复","user_name_real":"李玥","uid":"1501046","ctime":1587694772,"ip_address":"","comment_id":208566,"utype":1}],"discussion_count":3,"race_medal":0,"score":"70306860055","product_id":100046801,"comment_content":"老师，您这里提到的高可用方案，把binlog日志同步到从库，然后从库立即回放。那如果是删库的动作，从库也回放，不是把从库也干掉了。","like_count":17,"discussions":[{"author":{"id":1501046,"avatar":"https://static001.geekbang.org/account/avatar/00/16/e7/76/79c1f23a.jpg","nickname":"李玥","note":"","ucode":"B19E91EE248591","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":492514,"discussion_content":"是的。所以回放的时候，要找准起止位点，不要回放删库动作。","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1587694772,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":1,"child_discussions":[{"author":{"id":1843371,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTK5dh80UCnDwic7jHWRGVMbqFBjFbBAKO4bqzB5Sr39iaib5JPmF3d06dV1ibXHflNdQKgcKBsEkfXc6g/132","nickname":"Geek_16e01a","note":"","ucode":"791D5AA6BAA018","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1501046,"avatar":"https://static001.geekbang.org/account/avatar/00/16/e7/76/79c1f23a.jpg","nickname":"李玥","note":"","ucode":"B19E91EE248591","race_medal":0,"user_type":2,"is_pvip":false},"discussion":{"id":585011,"discussion_content":"老师，如何确定删库的准确时间呢","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1661268571,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":492514,"ip_address":"浙江"},"score":585011,"extra":""}]},{"author":{"id":2028940,"avatar":"","nickname":"Geek6561","note":"","ucode":"D44141D4AD2587","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":324156,"discussion_content":"解答了我的问题","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1605062387,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":187781,"user_name":"Dovelol","can_delete":false,"product_type":"c1","uid":1253384,"ip_address":"","ucode":"9B5DDF7720F307","user_header":"https://static001.geekbang.org/account/avatar/00/13/20/08/bc06bc69.jpg","comment_is_top":false,"comment_ctime":1584240574,"is_pvip":false,"replies":[{"id":"72783","content":"如果只是看一下，可以连接到主库上用show slave status命令查看，如果你需要实时监控主从延迟，可以用pt-heartbeat这个工具。<br><br>如果主从延迟突然增大，需要查一下是主的问题还是某个从的问题，如果是某一个从库的问题，可以临时把这个从库下掉。如果是主库问题，那就得赶紧解决主库繁忙的问题。","user_name":"作者回复","user_name_real":"李玥","uid":"1501046","ctime":1584410409,"ip_address":"","comment_id":187781,"utype":1}],"discussion_count":1,"race_medal":0,"score":"70303717310","product_id":100046801,"comment_content":"老师好，想问下有没有什么比较好的监控mysql性能还有主从延迟之类的工具，还有就是读写分离在遇到主从延迟突然增大的情况下该怎么办呢？","like_count":16,"discussions":[{"author":{"id":1501046,"avatar":"https://static001.geekbang.org/account/avatar/00/16/e7/76/79c1f23a.jpg","nickname":"李玥","note":"","ucode":"B19E91EE248591","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":487238,"discussion_content":"如果只是看一下，可以连接到主库上用show slave status命令查看，如果你需要实时监控主从延迟，可以用pt-heartbeat这个工具。\n\n如果主从延迟突然增大，需要查一下是主的问题还是某个从的问题，如果是某一个从库的问题，可以临时把这个从库下掉。如果是主库问题，那就得赶紧解决主库繁忙的问题。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1584410409,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":187424,"user_name":"美美","can_delete":false,"product_type":"c1","uid":1148422,"ip_address":"","ucode":"44CC95C45AF345","user_header":"https://static001.geekbang.org/account/avatar/00/11/86/06/72b01bb7.jpg","comment_is_top":false,"comment_ctime":1584107234,"is_pvip":false,"replies":[{"id":"72775","content":"这个不是有点儿类似Kafka的ISR，它们的原理根本就是一样的。<br><br>另外，你说的这种情况不会出现，因为Binlog是有序的日志，复制Binlog的时候必须按顺序复制，所以不会出现二个从节点都有一条对方没有的新数据这种情况。","user_name":"作者回复","user_name_real":"李玥","uid":"1501046","ctime":1584409169,"ip_address":"","comment_id":187424,"utype":1}],"discussion_count":3,"race_medal":0,"score":"53123714786","product_id":100046801,"comment_content":"一主多从同步复制有点类似于KafKa的ISR。<br>有一个疑惑，还请老师解惑。感觉这种模式还是会有丢数据的可能。比如，第一次请求同步到从A成功，从B延迟。第二次同步给从B，从A延迟。然后主挂掉，此时感觉切从A或者从B都会有问题。","like_count":12,"discussions":[{"author":{"id":1501046,"avatar":"https://static001.geekbang.org/account/avatar/00/16/e7/76/79c1f23a.jpg","nickname":"李玥","note":"","ucode":"B19E91EE248591","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":487104,"discussion_content":"这个不是有点儿类似Kafka的ISR，它们的原理根本就是一样的。\n\n另外，你说的这种情况不会出现，因为Binlog是有序的日志，复制Binlog的时候必须按顺序复制，所以不会出现二个从节点都有一条对方没有的新数据这种情况。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1584409169,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1005391,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/57/4f/6fb51ff1.jpg","nickname":"一步","note":"","ucode":"73CEA468CE70C3","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":205821,"discussion_content":"binlog 是有顺序的，第二条同步给了B，那就代表同步A的第一条记录肯定也同步给了B。 实际应用中可以使用最新的binlog文件","likes_number":4,"is_delete":false,"is_hidden":false,"ctime":1584346367,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":2377406,"avatar":"","nickname":"杨毅","note":"","ucode":"189923D892549F","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":340154,"discussion_content":"binlog也被恶意干掉了怎么办？","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1609919206,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":187926,"user_name":"旅途","can_delete":false,"product_type":"c1","uid":1212902,"ip_address":"","ucode":"5022477E8E9441","user_header":"https://static001.geekbang.org/account/avatar/00/12/81/e6/6cafed37.jpg","comment_is_top":false,"comment_ctime":1584278908,"is_pvip":false,"replies":[{"id":"72784","content":"全量备份那个时刻之前的Binlog是可以删除的。","user_name":"作者回复","user_name_real":"李玥","uid":"1501046","ctime":1584410455,"ip_address":"","comment_id":187926,"utype":1}],"discussion_count":1,"race_medal":0,"score":"44533951868","product_id":100046801,"comment_content":"老师 问一下 使用全量备份和binlog增量 这个binlog 删除以前的吗？还是保留全量所有的？","like_count":10,"discussions":[{"author":{"id":1501046,"avatar":"https://static001.geekbang.org/account/avatar/00/16/e7/76/79c1f23a.jpg","nickname":"李玥","note":"","ucode":"B19E91EE248591","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":487293,"discussion_content":"全量备份那个时刻之前的Binlog是可以删除的。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1584410455,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":189054,"user_name":"小袁","can_delete":false,"product_type":"c1","uid":1811495,"ip_address":"","ucode":"3F5D8721F577D9","user_header":"https://static001.geekbang.org/account/avatar/00/1b/a4/27/15e75982.jpg","comment_is_top":false,"comment_ctime":1584450766,"is_pvip":false,"replies":[{"id":"72999","content":"同步复制时延 = 异步复制的时延 + 最慢的那个从库的复制时延<br><br>定量的来说，理论上同步复制的时延大概是异步复制的2-3倍左右。","user_name":"作者回复","user_name_real":"李玥","uid":"1501046","ctime":1584500624,"ip_address":"","comment_id":189054,"utype":1}],"discussion_count":1,"race_medal":0,"score":"40239156430","product_id":100046801,"comment_content":"老师，你说同步复制性能差，哪到底差到一个什么样的程度呢？有定量的测试数据么？","like_count":10,"discussions":[{"author":{"id":1501046,"avatar":"https://static001.geekbang.org/account/avatar/00/16/e7/76/79c1f23a.jpg","nickname":"李玥","note":"","ucode":"B19E91EE248591","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":487598,"discussion_content":"同步复制时延 = 异步复制的时延 + 最慢的那个从库的复制时延\n\n定量的来说，理论上同步复制的时延大概是异步复制的2-3倍左右。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1584500624,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":186932,"user_name":"刘楠","can_delete":false,"product_type":"c1","uid":1120773,"ip_address":"","ucode":"9F19D44CBEE039","user_header":"https://static001.geekbang.org/account/avatar/00/11/1a/05/f154d134.jpg","comment_is_top":false,"comment_ctime":1583975139,"is_pvip":false,"replies":[{"id":"72247","content":"像我们课程中演示的那样，可以用Binlog恢复到删库之前的那一刻啊","user_name":"作者回复","user_name_real":"李玥","uid":"1501046","ctime":1584064265,"ip_address":"","comment_id":186932,"utype":1}],"discussion_count":4,"race_medal":0,"score":"18763844323","product_id":100046801,"comment_content":" binlog 日志中也是有删除库的SQL的，难道，备库或者从库不会执行吗？感觉会执行，所以数据在几个库都删除了。怎么保证备库或者从的数据？","like_count":5,"discussions":[{"author":{"id":1501046,"avatar":"https://static001.geekbang.org/account/avatar/00/16/e7/76/79c1f23a.jpg","nickname":"李玥","note":"","ucode":"B19E91EE248591","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":486923,"discussion_content":"像我们课程中演示的那样，可以用Binlog恢复到删库之前的那一刻啊","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1584064265,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1282639,"avatar":"https://static001.geekbang.org/account/avatar/00/13/92/4f/ff04156a.jpg","nickname":"天天向上","note":"","ucode":"D0914D4FD82272","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":203267,"discussion_content":"看样子必要的主从延迟还是需要的，个人想法：一主两从，其中一台从库延迟可以设置久些","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1584019813,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1886331,"avatar":"https://static001.geekbang.org/account/avatar/00/1c/c8/7b/153181d7.jpg","nickname":"夜辉","note":"","ucode":"9421385F51FF9E","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":366080,"discussion_content":"不是的呀，你把stop-time指定为binlog删库之前的那条语句，就可以恢复到删库之前的数据状态了","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1617955808,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1317115,"avatar":"https://static001.geekbang.org/account/avatar/00/14/18/fb/c1334976.jpg","nickname":"王崧霁","note":"","ucode":"4F3284634293A8","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":215969,"discussion_content":"主库误操作是有的，搞个延迟复制就行了","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1585401036,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":186927,"user_name":"滴流乱转小胖儿","can_delete":false,"product_type":"c1","uid":1231250,"ip_address":"","ucode":"4689236E65FE4E","user_header":"https://static001.geekbang.org/account/avatar/00/12/c9/92/6361802a.jpg","comment_is_top":false,"comment_ctime":1583974423,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"18763843607","product_id":100046801,"comment_content":"老师好，开篇的某云场景叙述，好皮啊！优秀！","like_count":4},{"had_liked":false,"id":187245,"user_name":"大叶枫","can_delete":false,"product_type":"c1","uid":1153702,"ip_address":"","ucode":"224AC5533889AD","user_header":"https://static001.geekbang.org/account/avatar/00/11/9a/a6/3bddb98c.jpg","comment_is_top":false,"comment_ctime":1584068889,"is_pvip":false,"replies":[{"id":"72772","content":"这个其实就是分片策略的问题，后面我们会讲如何来分片。","user_name":"作者回复","user_name_real":"李玥","uid":"1501046","ctime":1584408827,"ip_address":"","comment_id":187245,"utype":1}],"discussion_count":2,"race_medal":0,"score":"10174003481","product_id":100046801,"comment_content":"李大师，想了解mysql大买家大卖家单库数据倾斜的慢sql问题～","like_count":2,"discussions":[{"author":{"id":1501046,"avatar":"https://static001.geekbang.org/account/avatar/00/16/e7/76/79c1f23a.jpg","nickname":"李玥","note":"","ucode":"B19E91EE248591","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":487041,"discussion_content":"这个其实就是分片策略的问题，后面我们会讲如何来分片。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1584408827,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1153702,"avatar":"https://static001.geekbang.org/account/avatar/00/11/9a/a6/3bddb98c.jpg","nickname":"大叶枫","note":"","ucode":"224AC5533889AD","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":206551,"discussion_content":"分片策略是属于前置方案，已经无效了。已经在线上后，其实比较难用固定的哈希算法去做热点散列预测。如果维护一个分库分表的路由表去动态散列，会增加应用多访问一次的代价。","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1584414090,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":270838,"user_name":"Z","can_delete":false,"product_type":"c1","uid":1189225,"ip_address":"","ucode":"C199B14177A951","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTIlRVTQ1mpTLY34BAje4xRY0PFSJk6J1su2jicrtEQASP3DakQ7lQkWZNADoh8mLibwATLJB9EMrIVQ/132","comment_is_top":false,"comment_ctime":1609296857,"is_pvip":true,"discussion_count":1,"race_medal":0,"score":"5904264153","product_id":100046801,"comment_content":"老师你好，看了些MySQL相关书和文章，总结的主从更新数据时序好像不太一样<br>MySQL主从两个数据库更新数据时序：<br>1、记录undo log，然后修改引擎中的数据页<br>2、二阶段提交redo log+bin log<br>3、二阶段提交后数据持久化完成，事务可认为成功，此时可以同步bin log到从库<br>4、释放锁、mvcc等等东西，然后给客户端返回成功相应<br>相关文章：https:&#47;&#47;blog.51cto.com&#47;wangwei007&#47;2323844","like_count":1,"discussions":[{"author":{"id":1886331,"avatar":"https://static001.geekbang.org/account/avatar/00/1c/c8/7b/153181d7.jpg","nickname":"夜辉","note":"","ucode":"9421385F51FF9E","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":366088,"discussion_content":"多了关于事务的内容，感觉没有冲突呀","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1617957506,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":267878,"user_name":"Mine","can_delete":false,"product_type":"c1","uid":1253597,"ip_address":"","ucode":"85C3A3117FD9CB","user_header":"https://static001.geekbang.org/account/avatar/00/13/20/dd/82d8eff2.jpg","comment_is_top":false,"comment_ctime":1607960047,"is_pvip":false,"discussion_count":1,"race_medal":0,"score":"5902927343","product_id":100046801,"comment_content":"老师，感觉binlog已经记录了所有的数据呀，为啥还需要定期的全量备份呢，直接拿binlog进行数据恢复就可以了啊，还是我对binlog理解错了🤔","like_count":1,"discussions":[{"author":{"id":1886331,"avatar":"https://static001.geekbang.org/account/avatar/00/1c/c8/7b/153181d7.jpg","nickname":"夜辉","note":"","ucode":"9421385F51FF9E","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":366092,"discussion_content":"1.binlog记录每次的操作\n使用mysqldump进行全量备份，直接基于内存中的数据，只需生成对应的SQL的语句\nbinlog：多次删除语句 合并为 mysqldump一条删除语句\n2.此外binlog每行可能只记录影响的一行数据，一条更改sql语句对应多行日志\n例如删除多行就会在日志中记录多行update 合并为 一条删除语句\n3.全量备份为SQL语句文件，可以直接执行，而binlog为二进制文件，需要逐条解析，再顺序执行\n综上，在还原数据时，mysqldump全量备份比binlog全量备份会快很多\n\n","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1617958162,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":207409,"user_name":"mickey","can_delete":false,"product_type":"c1","uid":1051663,"ip_address":"","ucode":"8B490C2DDE4010","user_header":"https://static001.geekbang.org/account/avatar/00/10/0c/0f/93d1c8eb.jpg","comment_is_top":false,"comment_ctime":1587084512,"is_pvip":false,"replies":[{"id":"77471","content":"在设置了密码的生产环境，需要加-p参数提供密码。如果没设置密码，也可以省略。","user_name":"作者回复","user_name_real":"李玥","uid":"1501046","ctime":1587090200,"ip_address":"","comment_id":207409,"utype":1}],"discussion_count":1,"race_medal":0,"score":"5882051808","product_id":100046801,"comment_content":"<br>$mysql -uroot test &lt; test.sql  少了个 -p","like_count":1,"discussions":[{"author":{"id":1501046,"avatar":"https://static001.geekbang.org/account/avatar/00/16/e7/76/79c1f23a.jpg","nickname":"李玥","note":"","ucode":"B19E91EE248591","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":492113,"discussion_content":"在设置了密码的生产环境，需要加-p参数提供密码。如果没设置密码，也可以省略。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1587090200,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":205072,"user_name":"J.Smile","can_delete":false,"product_type":"c1","uid":1336475,"ip_address":"","ucode":"C4D98DFDBF7584","user_header":"https://static001.geekbang.org/account/avatar/00/14/64/9b/0b578b08.jpg","comment_is_top":false,"comment_ctime":1586521327,"is_pvip":false,"replies":[{"id":"77029","content":"你可以选择不回放这个delete操作呀。","user_name":"作者回复","user_name_real":"李玥","uid":"1501046","ctime":1586832025,"ip_address":"","comment_id":205072,"utype":1}],"discussion_count":1,"race_medal":0,"score":"5881488623","product_id":100046801,"comment_content":"老师，如果系统只有一个binlog，而且delete操作就在这个binlog.那应该就不能回放了，因为回放的最后还是delete这个误操作！","like_count":1,"discussions":[{"author":{"id":1501046,"avatar":"https://static001.geekbang.org/account/avatar/00/16/e7/76/79c1f23a.jpg","nickname":"李玥","note":"","ucode":"B19E91EE248591","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":491377,"discussion_content":"你可以选择不回放这个delete操作呀。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1586832025,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":205069,"user_name":"J.Smile","can_delete":false,"product_type":"c1","uid":1336475,"ip_address":"","ucode":"C4D98DFDBF7584","user_header":"https://static001.geekbang.org/account/avatar/00/14/64/9b/0b578b08.jpg","comment_is_top":false,"comment_ctime":1586519518,"is_pvip":false,"replies":[{"id":"77030","content":"是的。","user_name":"作者回复","user_name_real":"李玥","uid":"1501046","ctime":1586832037,"ip_address":"","comment_id":205069,"utype":1}],"discussion_count":1,"race_medal":0,"score":"5881486814","product_id":100046801,"comment_content":"一主二从架构下，如果其中一个从宕机，重启后应该可以自动回放binlog吧，不然这个架构也就失去意义了！","like_count":1,"discussions":[{"author":{"id":1501046,"avatar":"https://static001.geekbang.org/account/avatar/00/16/e7/76/79c1f23a.jpg","nickname":"李玥","note":"","ucode":"B19E91EE248591","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":491375,"discussion_content":"是的。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1586832037,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":187035,"user_name":"qbit","can_delete":false,"product_type":"c1","uid":1262927,"ip_address":"","ucode":"96C70A1E47B93D","user_header":"https://static001.geekbang.org/account/avatar/00/13/45/4f/f94caf47.jpg","comment_is_top":false,"comment_ctime":1583996445,"is_pvip":false,"discussion_count":1,"race_medal":0,"score":"5878963741","product_id":100046801,"comment_content":"SHOW VARIABLES LIKE &#39;%log_bin%&#39;;<br>---<br>&quot;log_bin&quot;  &quot;OFF&quot;<br>&quot;log_bin_basename&quot;  &quot;&quot;<br>&quot;log_bin_index&quot;  &quot;&quot;<br>&quot;log_bin_trust_function_creators&quot;  &quot;OFF&quot;<br>&quot;sql_log_bin&quot;  &quot;ON&quot;<br>---<br>请问 sql_log_bin 和 log_bin 有什么区别和联系？","like_count":1,"discussions":[{"author":{"id":1886331,"avatar":"https://static001.geekbang.org/account/avatar/00/1c/c8/7b/153181d7.jpg","nickname":"夜辉","note":"","ucode":"9421385F51FF9E","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":366086,"discussion_content":"查询了下\n应用场景：动态命令关闭sql_log_bin，在还原数据库时关闭记录二进制日志\n还原后再开启\nlog_bin修改配置后要重启服务\n而sql_log_bin可以通过指令动态修改\n\n有熟悉这块的小伙伴指点下嘛？","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1617957324,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":351393,"user_name":"kobe","can_delete":false,"product_type":"c1","uid":1165831,"ip_address":"","ucode":"AB8B599F3D5521","user_header":"https://static001.geekbang.org/account/avatar/00/11/ca/07/22dd76bf.jpg","comment_is_top":false,"comment_ctime":1657768453,"is_pvip":true,"discussion_count":0,"race_medal":0,"score":"1657768453","product_id":100046801,"comment_content":"有个问题想咨询下，主备和主从是不同的概念吧？备机应该是只做备份，在主机正常时并不提供服务，而主从的从机会分担读请求的流量。是这样吧？","like_count":0},{"had_liked":false,"id":350338,"user_name":"Geek_7794e2","can_delete":false,"product_type":"c1","uid":2350043,"ip_address":"","ucode":"2F749554FEA20D","user_header":"https://thirdwx.qlogo.cn/mmopen/vi_32/sFkJYPdIIjHfxgCxAh1D4Pyk1jAueicu7egY1PUvR8egs12gAXxmO51YT6Bk7NianYRyMRPTpd3kKWXvZ8TEkRyw/132","comment_is_top":false,"comment_ctime":1656829635,"is_pvip":true,"discussion_count":0,"race_medal":0,"score":"1656829635","product_id":100046801,"comment_content":"这个专栏，竟然这么少人看，我觉得很不错","like_count":0},{"had_liked":false,"id":336971,"user_name":"DonaldTrumpppppppppp","can_delete":false,"product_type":"c1","uid":2063923,"ip_address":"","ucode":"211B1A25C53172","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/DYAIOgq83er4rbCWDxib3FHibYBouTwZqZBH6h5IgvjibEiaBv4Ceekib9SYg0peBBlFGu8hDuGvwjKp6LNznvEAibYw/132","comment_is_top":false,"comment_ctime":1646498925,"is_pvip":true,"discussion_count":0,"race_medal":0,"score":"1646498925","product_id":100046801,"comment_content":"Ha半同步模式可以保证一致性，这种模式能否介绍下？","like_count":0},{"had_liked":false,"id":300996,"user_name":"青峰","can_delete":false,"product_type":"c1","uid":1198956,"ip_address":"","ucode":"922E9EC8A96127","user_header":"https://static001.geekbang.org/account/avatar/00/12/4b/6c/f09b085d.jpg","comment_is_top":false,"comment_ctime":1625479433,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1625479433","product_id":100046801,"comment_content":"老师, 那主库的binlog不也可以恢复吗, 如果能删除主库的人员, 意味着从库也有权限的吧, 除非人员备份, 权限分割咯","like_count":0},{"had_liked":false,"id":253204,"user_name":"亚林","can_delete":false,"product_type":"c1","uid":1018972,"ip_address":"","ucode":"4A5A6D24314B79","user_header":"https://static001.geekbang.org/account/avatar/00/0f/8c/5c/3f164f66.jpg","comment_is_top":false,"comment_ctime":1602648856,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1602648856","product_id":100046801,"comment_content":"老师这节后面的内容就是CAP原则","like_count":0},{"had_liked":false,"id":223755,"user_name":"青青子衿","can_delete":false,"product_type":"c1","uid":1438102,"ip_address":"","ucode":"4A388A3BA70C29","user_header":"https://static001.geekbang.org/account/avatar/00/15/f1/96/9571fa3d.jpg","comment_is_top":false,"comment_ctime":1591174881,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1591174881","product_id":100046801,"comment_content":"老师，这篇讲的特别好","like_count":0},{"had_liked":false,"id":217594,"user_name":"Lywane","can_delete":false,"product_type":"c1","uid":1446512,"ip_address":"","ucode":"2B0027AA069CE9","user_header":"https://static001.geekbang.org/account/avatar/00/16/12/70/10faf04b.jpg","comment_is_top":false,"comment_ctime":1589540471,"is_pvip":false,"replies":[{"id":"80855","content":"这种情况下就比较困难了，但也不是没有办法，需要人为来从binlog中识别出来哪些是删库跑路的语句并剔除掉。","user_name":"作者回复","user_name_real":"李玥","uid":"1501046","ctime":1589869301,"ip_address":"","comment_id":217594,"utype":1}],"discussion_count":3,"race_medal":0,"score":"1589540471","product_id":100046801,"comment_content":"如果跑路的人比较&quot;变态&quot;，执行脚本来删除，删除语句和正常的业务语句都混合在一起了。。。是不是就没办法恢复了","like_count":0,"discussions":[{"author":{"id":1501046,"avatar":"https://static001.geekbang.org/account/avatar/00/16/e7/76/79c1f23a.jpg","nickname":"李玥","note":"","ucode":"B19E91EE248591","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":495190,"discussion_content":"这种情况下就比较困难了，但也不是没有办法，需要人为来从binlog中识别出来哪些是删库跑路的语句并剔除掉。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1589869301,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1886331,"avatar":"https://static001.geekbang.org/account/avatar/00/1c/c8/7b/153181d7.jpg","nickname":"夜辉","note":"","ucode":"9421385F51FF9E","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":366094,"discussion_content":"指令 SHOW BINLOG EVENTS\n            [IN &#39;log_name&#39;] //要查询的binlog文件名\n            [FROM pos]  \n            [LIMIT [offset,] row_count]  \n\n官网工具 mysqlbinlog: /usr/bin/mysqlbinlog  mysql-bin.000007\n\n这也太变态了，逐渐弄脏数据，这也太坏了\n感觉DBA要哭，而且也要承担责任","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1617958456,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":2377406,"avatar":"","nickname":"杨毅","note":"","ucode":"189923D892549F","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":340156,"discussion_content":"就怕把binlog文件删掉了","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1609919445,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":207475,"user_name":"mickey","can_delete":false,"product_type":"c1","uid":1051663,"ip_address":"","ucode":"8B490C2DDE4010","user_header":"https://static001.geekbang.org/account/avatar/00/10/0c/0f/93d1c8eb.jpg","comment_is_top":false,"comment_ctime":1587090946,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1587090946","product_id":100046801,"comment_content":"例子应该说明一下，执行 truncate table account_balance; 语句的时间点。","like_count":0},{"had_liked":false,"id":205507,"user_name":"ljr_bird","can_delete":false,"product_type":"c1","uid":1618685,"ip_address":"","ucode":"13D2885BA6CDFF","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/2QR4YBpeXgVXGXIfnibt80oLbjibIdp1c5ty5wbBTHvgheZRcLWDZAVklOpG2yjlDS2N3rZH66pDOvsvvqI2ic7icw/132","comment_is_top":false,"comment_ctime":1586657746,"is_pvip":false,"replies":[{"id":"77024","content":"这个具体阿里云是如何实现的，还是要咨询一下客服。","user_name":"作者回复","user_name_real":"李玥","uid":"1501046","ctime":1586831621,"ip_address":"","comment_id":205507,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1586657746","product_id":100046801,"comment_content":"想问下老师，其实我们是使用阿里云的mysql主从方式，按介绍是属于第二种的自动切换，那么就是可能出现数据丢失的情况是吗","like_count":0,"discussions":[{"author":{"id":1501046,"avatar":"https://static001.geekbang.org/account/avatar/00/16/e7/76/79c1f23a.jpg","nickname":"李玥","note":"","ucode":"B19E91EE248591","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":491499,"discussion_content":"这个具体阿里云是如何实现的，还是要咨询一下客服。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1586831621,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":204850,"user_name":"闫冬","can_delete":false,"product_type":"c1","uid":1109691,"ip_address":"","ucode":"1725E869D5A3D3","user_header":"https://static001.geekbang.org/account/avatar/00/10/ee/bb/7afd6824.jpg","comment_is_top":false,"comment_ctime":1586482335,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1586482335","product_id":100046801,"comment_content":"嗯 总结下来就是 定时备份加binlog日志恢复 兼顾了两者的优点，一主多备，多从可以防止异常情况发生","like_count":0},{"had_liked":false,"id":193454,"user_name":"德斯儿","can_delete":false,"product_type":"c1","uid":1148351,"ip_address":"","ucode":"C4EE9BAD859EED","user_header":"https://static001.geekbang.org/account/avatar/00/11/85/bf/36b01d36.jpg","comment_is_top":false,"comment_ctime":1584893652,"is_pvip":false,"replies":[{"id":"73922","content":"它其实就是更细粒度的复制","user_name":"作者回复","user_name_real":"李玥","uid":"1501046","ctime":1585025347,"ip_address":"","comment_id":193454,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1584893652","product_id":100046801,"comment_content":"Galera Gluster这种方案和课程中介绍的这三种方案有什么区别呢","like_count":0,"discussions":[{"author":{"id":1501046,"avatar":"https://static001.geekbang.org/account/avatar/00/16/e7/76/79c1f23a.jpg","nickname":"李玥","note":"","ucode":"B19E91EE248591","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":488560,"discussion_content":"它其实就是更细粒度的复制","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1585025347,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":187573,"user_name":"肥low","can_delete":false,"product_type":"c1","uid":1043480,"ip_address":"","ucode":"A158AFAAB8C742","user_header":"https://static001.geekbang.org/account/avatar/00/0f/ec/18/bf7254d3.jpg","comment_is_top":false,"comment_ctime":1584160476,"is_pvip":false,"replies":[{"id":"72779","content":"我们后续的几节课都会讲你提到的这个问题。","user_name":"作者回复","user_name_real":"李玥","uid":"1501046","ctime":1584409785,"ip_address":"","comment_id":187573,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1584160476","product_id":100046801,"comment_content":"很不幸 主从延迟的问题就发生在身边，主要也是主库压力大，延迟时间几个小时都有可能，主库倒是没有当机，但是延迟这么久也是醉了，目前有些对实时性要求高的业务都是通过维护一个Cache来解决延迟问题的，大佬有没有什么更好的办法呢","like_count":0,"discussions":[{"author":{"id":1501046,"avatar":"https://static001.geekbang.org/account/avatar/00/16/e7/76/79c1f23a.jpg","nickname":"李玥","note":"","ucode":"B19E91EE248591","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":487152,"discussion_content":"我们后续的几节课都会讲你提到的这个问题。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1584409785,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":187151,"user_name":"观弈道人","can_delete":false,"product_type":"c1","uid":1016905,"ip_address":"","ucode":"F3BB619A33C605","user_header":"https://static001.geekbang.org/account/avatar/00/0f/84/49/47d48fd0.jpg","comment_is_top":false,"comment_ctime":1584026982,"is_pvip":false,"discussion_count":1,"race_medal":0,"score":"1584026982","product_id":100046801,"comment_content":"想问下业界常用哪种方式实现HA？个人感觉应该是第二种。一主一从，异步复制，自动切换。","like_count":0,"discussions":[{"author":{"id":1886331,"avatar":"https://static001.geekbang.org/account/avatar/00/1c/c8/7b/153181d7.jpg","nickname":"夜辉","note":"","ucode":"9421385F51FF9E","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":366098,"discussion_content":"一主二从吧，毕竟数据太重要了","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1617959486,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":186915,"user_name":"发条橙子 。","can_delete":false,"product_type":"c1","uid":1259218,"ip_address":"","ucode":"ED076F4534FFED","user_header":"https://static001.geekbang.org/account/avatar/00/13/36/d2/c7357723.jpg","comment_is_top":false,"comment_ctime":1583970047,"is_pvip":false,"discussion_count":2,"race_medal":0,"score":"1583970047","product_id":100046801,"comment_content":"老师 binlog中不会包含删除表的那行记录么 还是说虽然包含 但是我们可以不去执行那条命令","like_count":0,"discussions":[{"author":{"id":1886331,"avatar":"https://static001.geekbang.org/account/avatar/00/1c/c8/7b/153181d7.jpg","nickname":"夜辉","note":"","ucode":"9421385F51FF9E","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":366099,"discussion_content":"虽然包含 但是我们可以不去执行那条命令\n可以指定stop-postion或者stop-time","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1617959516,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1199343,"avatar":"https://static001.geekbang.org/account/avatar/00/12/4c/ef/c1593763.jpg","nickname":"Nick","note":"","ucode":"8F8BE8CE3B9EE9","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":203139,"discussion_content":"stop-postion 选择删库之前就行了","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1584003526,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]}]}