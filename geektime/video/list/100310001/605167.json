{"id":605167,"title":"29｜避坑指南：内置数据类型的常见错误","content":"<p><strong>课后习题</strong><br>\n定义一个列表 list1 和元组 tuple1，当 tuple1 作为字典 dict1 的键时，是否能够成功定义字典？请说明原因。执行后，观察执行结果。</p><pre><code>list1 = [ 1, 2, 3]\ntuple1 = ( 'abc', list1 )\nprint( type( tuple1 ))\ndict1 = { tuple1, 1 }   # 此语句是否能够正确执行？\n</code></pre><p><strong>课程代码、课件及其他相关资料地址</strong><br>\n<a href=\"https://gitee.com/wilsonyin/zero-basics-python\">https://gitee.com/wilsonyin/zero-basics-python</a></p>","comments":[{"had_liked":false,"id":380735,"user_name":"William","can_delete":false,"product_type":"c3","uid":1346215,"ip_address":"吉林","ucode":"55F5D9DEE485B1","user_header":"https://static001.geekbang.org/account/avatar/00/14/8a/a7/674c1864.jpg","comment_is_top":false,"comment_ctime":1694076128,"is_pvip":true,"replies":[{"id":138768,"content":"如果 tuple1 是一个已经定义的元组，那么 {tuple1, 1} 将创建一个包含该元组和整数 1 的集合\n\ndict1 = {tuple1: 1} 是创建字典","user_name":"作者回复","user_name_real":"编辑","uid":1056235,"ctime":1694588412,"ip_address":"广东","comment_id":380735,"utype":1}],"discussion_count":1,"race_medal":0,"score":2,"product_id":100310001,"comment_content":"字典不都是 key:value 的格式么?\ndict1 = { tuple1, 1 }  这是什么鬼?","like_count":0,"discussions":[{"author":{"id":1056235,"avatar":"https://static001.geekbang.org/account/avatar/00/10/1d/eb/b2123759.jpg","nickname":"尹会生","note":"","ucode":"D1093DBD093617","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":627820,"discussion_content":"如果 tuple1 是一个已经定义的元组，那么 {tuple1, 1} 将创建一个包含该元组和整数 1 的集合\n\ndict1 = {tuple1: 1} 是创建字典","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1694588412,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"广东","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":373443,"user_name":"浪客剑心","can_delete":false,"product_type":"c3","uid":1010152,"ip_address":"浙江","ucode":"669FC45EFE364A","user_header":"https://static001.geekbang.org/account/avatar/00/0f/69/e8/1eed6544.jpg","comment_is_top":false,"comment_ctime":1682512097,"is_pvip":false,"replies":[{"id":136564,"content":"有几种常见的方法， 第一种是你明确知道对象的类型，比如字符可哈希 ，列表不可哈希。 当然不可能所有的工作过程都用简单类型，如果自己定义的类，可以通过魔术方法__hash__判断对象是否支持哈希。\n\n那么继续延伸下去，面向解决问题来说，是否可哈希，意味着该对象，是否能从一个key得到唯一的值 ，hash(key) = value, 这样设计可以加快查找速度。比如经典的字典数据类型，就利用了哈希表，因此它就要求对象必须是可哈希的，否则没办法从一个key得到对应的value，那么这个对象，自然也就不能做字典的key使用了\n","user_name":"作者回复","user_name_real":"编辑","uid":1056235,"ctime":1683184256,"ip_address":"广东","comment_id":373443,"utype":1}],"discussion_count":1,"race_medal":0,"score":2,"product_id":100310001,"comment_content":"有些不太明白，可哈希和不可哈希应该如何辨别？","like_count":0,"discussions":[{"author":{"id":1056235,"avatar":"https://static001.geekbang.org/account/avatar/00/10/1d/eb/b2123759.jpg","nickname":"尹会生","note":"","ucode":"D1093DBD093617","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":616898,"discussion_content":"有几种常见的方法， 第一种是你明确知道对象的类型，比如字符可哈希 ，列表不可哈希。 当然不可能所有的工作过程都用简单类型，如果自己定义的类，可以通过魔术方法__hash__判断对象是否支持哈希。\n\n那么继续延伸下去，面向解决问题来说，是否可哈希，意味着该对象，是否能从一个key得到唯一的值 ，hash(key) = value, 这样设计可以加快查找速度。比如经典的字典数据类型，就利用了哈希表，因此它就要求对象必须是可哈希的，否则没办法从一个key得到对应的value，那么这个对象，自然也就不能做字典的key使用了\n","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1683184256,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":"广东","group_id":0},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":384148,"user_name":"L","can_delete":false,"product_type":"c3","uid":1228268,"ip_address":"上海","ucode":"26BB686671F7D4","user_header":"https://static001.geekbang.org/account/avatar/00/12/bd/ec/cc7abf0b.jpg","comment_is_top":false,"comment_ctime":1700404647,"is_pvip":true,"replies":null,"discussion_count":2,"race_medal":0,"score":2,"product_id":100310001,"comment_content":"最后的ppt上应该是放错了，贴一段gpt的解释。\nQ:python中，元组可以作为字典的key吗？\nA:是的，元组可以作为字典的键（key）。\n\n在Python中，字典的键必须是不可变的对象，因为字典使用键来进行哈希（hash）操作来快速查找值。由于元组是不可变的，所以可以作为字典的键。\n\n下面是一个示例，展示了如何使用元组作为字典的键：\n\npython\n复制\nmy_dict = {(&#39;a&#39;, 1): &#39;apple&#39;, (&#39;b&#39;, 2): &#39;banana&#39;}\nprint(my_dict[(&#39;a&#39;, 1)])  # 输出: &#39;apple&#39;\n在上面的示例中，我们创建了一个字典my_dict，其中包含了两个键值对。每个键都是一个元组，其中第一个元素是字母，第二个元素是数字。我们可以使用元组作为索引来获取相应的值。\n\n需要注意的是，由于字典的键必须是唯一的，而元组是根据所有元素的值来进行比较的，所以如果两个元组的所有元素都相等，它们将被视为相同的键。\n\n所以题目中为什么不能作为key，是因为list存在变化，所以元组不可以被每次都hash成一个一模一样的值，如果是完全不变得话，那么就是可以的","like_count":1,"discussions":[{"author":{"id":3916508,"avatar":"https://static001.geekbang.org/account/avatar/00/3b/c2/dc/a6d03b6d.jpg","nickname":"Leo = 6|Yi|天","note":"","ucode":"7F1C7A74255FE9","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":652551,"discussion_content":"不对 我说错了 这个报错是因为这个元组里含了一个列表","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1729138413,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":"加拿大","group_id":0},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":3916508,"avatar":"https://static001.geekbang.org/account/avatar/00/3b/c2/dc/a6d03b6d.jpg","nickname":"Leo = 6|Yi|天","note":"","ucode":"7F1C7A74255FE9","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":652550,"discussion_content":"gpt应该说错了 我试了一下用元组当键 报错\n\n---------------------------------------------------------------------------\nTypeError                                 Traceback (most recent call last)\nCell In[138], line 4\n      2 tuple1 = ( &#39;abc&#39;, list1 )\n      3 print( type( tuple1 ))\n----&gt; 4 dict1 = { tuple1, 1 }   # 此语句是否能够正确执行？\n\nTypeError: unhashable type: &#39;list&#39;","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1729138200,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":"加拿大","group_id":0},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":364087,"user_name":"月姣","can_delete":false,"product_type":"c3","uid":3228357,"ip_address":"江苏","ucode":"3EB6240054A24A","user_header":"https://static001.geekbang.org/account/avatar/00/31/42/c5/45c93ea8.jpg","comment_is_top":false,"comment_ctime":1670508365,"is_pvip":false,"replies":null,"discussion_count":0,"race_medal":0,"score":2,"product_id":100310001,"comment_content":"list1 = [ 1, 2, 3]\ntuple1 = ( &#39;abc&#39;, list1 )\nprint( type( tuple1 )) #&lt;class &#39;tuple&#39;&gt;\n#dict1 = { tuple1, 1 } #TypeError: unhashable type: &#39;list&#39;\ndict1 = { tuple1[0], 1 }\nprint(type(dict1)) #&lt;class &#39;set&#39;&gt;\ndict2 = { tuple1[0]: 1 } \nprint(type(dict2)) #&lt;class &#39;dict&#39;&gt;\n#dict3 = { tuple1[1]: 1 }  #TypeError: unhashable type: &#39;list&#39;","like_count":1},{"had_liked":false,"id":393035,"user_name":"8000tank","can_delete":false,"product_type":"c3","uid":3838010,"ip_address":"北京","ucode":"C5DC98A0EB57CE","user_header":"","comment_is_top":false,"comment_ctime":1722567047,"is_pvip":false,"replies":null,"discussion_count":0,"race_medal":0,"score":2,"product_id":100310001,"comment_content":"# Turple可哈希，而List不可哈希【所以，由List复合组成的Turple，也不可哈希】\nprint(hash(tuple1))  # 不可哈希（故会报错）\ntuple2 = (1, 2, 3)\ntuple3 = (&#39;abc&#39;, tuple2)\nprint(hash(tuple3))  # 可哈希","like_count":0},{"had_liked":false,"id":390373,"user_name":"105406","can_delete":false,"product_type":"c3","uid":3757329,"ip_address":"湖北","ucode":"F15547B41C98A2","user_header":"","comment_is_top":false,"comment_ctime":1715221124,"is_pvip":false,"replies":null,"discussion_count":0,"race_medal":0,"score":2,"product_id":100310001,"comment_content":"谢谢","like_count":0},{"had_liked":false,"id":389463,"user_name":"Dexter","can_delete":false,"product_type":"c3","uid":2608728,"ip_address":"芬兰","ucode":"909CABC4AC4AC9","user_header":"https://static001.geekbang.org/account/avatar/00/27/ce/58/71ed845f.jpg","comment_is_top":false,"comment_ctime":1712648070,"is_pvip":true,"replies":null,"discussion_count":0,"race_medal":0,"score":2,"product_id":100310001,"comment_content":"示例中，因为tuple1中包含列表，所以最后一句无法执行","like_count":0},{"had_liked":false,"id":384698,"user_name":"Geek_1e9b5c","can_delete":false,"product_type":"c3","uid":3786954,"ip_address":"广东","ucode":"C634A7C49DFE9B","user_header":"","comment_is_top":false,"comment_ctime":1701347044,"is_pvip":false,"replies":null,"discussion_count":0,"race_medal":0,"score":2,"product_id":100310001,"comment_content":"---------------------------------------------------------------------------\nTypeError                                 Traceback (most recent call last)\nCell In[3], line 4\n      2 tuple1 = ( &#39;abc&#39;, list1 )\n      3 print( type( tuple1 ))\n----&gt; 4 dict1 = { tuple1, 1 }   # 此语句是否能够正确执行？\n\nTypeError: unhashable type: &#39;list&#39;","like_count":0},{"had_liked":false,"id":379453,"user_name":"好困啊","can_delete":false,"product_type":"c3","uid":2094450,"ip_address":"上海","ucode":"D49429660F2DC8","user_header":"https://static001.geekbang.org/account/avatar/00/1f/f5/72/8cbc5cb3.jpg","comment_is_top":false,"comment_ctime":1691985587,"is_pvip":false,"replies":null,"discussion_count":0,"race_medal":0,"score":2,"product_id":100310001,"comment_content":"dict1 = { tuple1, 1 } 这行代码不能正确执行，因为它试图使用一个包含可变对象的元组作为字典的键，并且没有使用正确的键值对语法来定义字典。","like_count":0},{"had_liked":false,"id":377439,"user_name":"Heyx","can_delete":false,"product_type":"c3","uid":1591717,"ip_address":"湖北","ucode":"FAA256DEA393E3","user_header":"https://static001.geekbang.org/account/avatar/00/18/49/a5/e4546196.jpg","comment_is_top":false,"comment_ctime":1688513039,"is_pvip":false,"replies":null,"discussion_count":0,"race_medal":0,"score":2,"product_id":100310001,"comment_content":"感谢老师，收益很多","like_count":0},{"had_liked":false,"id":376778,"user_name":"Geek_Mike","can_delete":false,"product_type":"c3","uid":3196376,"ip_address":"云南","ucode":"CFA942192C3B74","user_header":"https://static001.geekbang.org/account/avatar/00/30/c5/d8/c5509b9c.jpg","comment_is_top":false,"comment_ctime":1687354781,"is_pvip":false,"replies":null,"discussion_count":0,"race_medal":0,"score":3,"product_id":100310001,"comment_content":"list1 = [1,2,3]\ntuple1 = (&#39;abc&#39;, list1)\ndict1 = {tuple1, 123}\nprint(dict1)\n\nTypeError: unhashable type: &#39;list&#39;\n因为元祖里包含了一个列表，列表是不可哈希数据类型，所以报错。\n\n如果先把列表转换成元祖类型，就可以了。\nlist1 = [1,2,3]\ntuple2 = tuple(list1)\ntuple1 = (&#39;abc&#39;, tuple2)\ndict1 = {tuple1, 123}\nprint(dict1)\n\n{123, (&#39;abc&#39;, (1, 2, 3))}","like_count":0},{"had_liked":false,"id":373442,"user_name":"浪客剑心","can_delete":false,"product_type":"c3","uid":1010152,"ip_address":"浙江","ucode":"669FC45EFE364A","user_header":"https://static001.geekbang.org/account/avatar/00/0f/69/e8/1eed6544.jpg","comment_is_top":false,"comment_ctime":1682512068,"is_pvip":false,"replies":null,"discussion_count":0,"race_medal":0,"score":3,"product_id":100310001,"comment_content":"不能执行，错误提示是不可哈希对象\nunhashable type: &#39;list&#39;","like_count":0},{"had_liked":false,"id":366634,"user_name":"yanyu-xin","can_delete":false,"product_type":"c3","uid":1899757,"ip_address":"广东","ucode":"3AA389F9E4C236","user_header":"","comment_is_top":false,"comment_ctime":1674007788,"is_pvip":false,"replies":null,"discussion_count":0,"race_medal":0,"score":3,"product_id":100310001,"comment_content":"list1 = [ 1, 2, 3] # 列表\ntuple1 = ( &#39;abc&#39;, list1 ) # 元组，list1的值是贴标签\nprint( type( tuple1 )) # &lt;class &#39;tuple&#39;&gt;\nprint(tuple1) # (&#39;abc&#39;, [1, 2, 3])\n\nlist1 = list1 + [5]\nprint(tuple1) # (&#39;abc&#39;, [1, 2, 3]) ， list1修改后的值不影响已经取得标签值的tuple1\n\ntuple1 = ( &#39;abc&#39;, list1 ) # (&#39;abc&#39;, [1, 2, 3, 5])， 重新生成元组，贴标签用list1新的值\nprint(tuple1)  # (&#39;abc&#39;, [1, 2, 3, 5])\n\ndict1 = { tuple1, 1 }   # TypeError: unhashable type: &#39;list&#39;。tuple1中的一个元素是list，不可哈希。","like_count":0},{"had_liked":false,"id":365418,"user_name":"笑笑de爸","can_delete":false,"product_type":"c3","uid":3234752,"ip_address":"北京","ucode":"C26B3524E1C624","user_header":"https://static001.geekbang.org/account/avatar/00/31/5b/c0/13b19797.jpg","comment_is_top":false,"comment_ctime":1672484926,"is_pvip":false,"replies":null,"discussion_count":0,"race_medal":0,"score":3,"product_id":100310001,"comment_content":"&quot;&quot;&quot;定义一个列表 list1 和元组 tuple1, 当 tuple1 作为字典 dict1 的键时，是否能够成功定义字典？请说明原因。执行后，观察执行结果。&quot;&quot;&quot;\n\nlist1 = [1, 2, 3]\ntuple1 = (&#39;abc&#39;, list1)\nprint(type(tuple1)) # &lt;class &#39;tuple&#39;&gt;\n\ndict1 = {tuple1, 1}  # TypeError: unhashable type: &#39;list&#39;\n\ndict2 = {tuple1[0]:1} \nprint(dict2) # {&#39;abc&#39;: 1}\nprint(type(dict2)) # &lt;class &#39;dict&#39;&gt;\n\ndict3 = {tuple1[1]:1}  # TypeError: unhashable type: &#39;list&#39;","like_count":0}]}