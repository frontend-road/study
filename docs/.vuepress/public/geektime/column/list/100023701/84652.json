{"id":84652,"title":"06 | 大厂都在用哪些敏捷方法？（上）","content":"<p>你好，我是宝玉，我今天分享的主题是：大厂都在用哪些敏捷方法？我将分为上下两篇，来与你一起讨论这个话题。</p><p>在我还是一个野路子程序员，到处接私活做网站时，就开始好奇：大厂都是怎么开发软件项目的？直到毕业后，我前前后后加入了若干大中小型企业，包括这些年在美国高校、公司的一些经历，对大厂的项目开发有了比较多的了解。</p><p>其实大厂做项目也没有什么特别的，无非就是工程中常见的“分而治之”的策略：<strong>大项目拆成小项目，大服务拆成小服务，大团队拆成小团队。</strong></p><p>服务之间通过商定好的标准协议进行通信，架构上将大的服务拆分隔离成微服务，大团队按照业务或者服务拆分成小组，按照一定的流程规范保障协作。最终，各个小组要负责的内容其实就不多了。</p><p>就像淘宝这种网站，不需要一个庞大的项目组，通过逐级分拆，一个小组可能就只需要负责一个页面中的一个小模块。</p><p>所以，也要归功于现在微服务、容器等新技术，可以将复杂的业务逐级拆分，让很多公司能真正敏捷起来。</p><p>在上一篇文章中，我有提到，团队要实施敏捷，不仅要小，还要组织扁平化。相对来说，美国的互联网大企业做的还是很不错的，组织架构都很扁平，工程师地位很高。</p><p>这些年，国内工程师地位应该也有很大提升，组织也在向扁平化发展。前些天我也看到阿里工程师写的一篇文章《<a href=\"https://zhuanlan.zhihu.com/p/34024621\">敏捷开发的根本矛盾是什么？从业十余年的工程师在思考</a>》，对这个问题有精彩的论述。</p><!-- [[[read_end]]] --><p>下面，我就带你一起看看，大厂具体是怎么应用敏捷方法的。</p><h2>和敏捷开发相关的主要流程规范</h2><p>大厂里流程规范很多，最开始你会不喜欢它们，后来会离不开它们。</p><blockquote>\n<p>这些墙很有趣。刚入狱的时候，你痛恨周围的高墙；慢慢地，你习惯了生活在其中；最终你会发现自己不得不依靠它而生存。这就叫体制化。——《肖申克的救赎》</p>\n</blockquote><p>这里，我简单将其中和敏捷开发相关的流程介绍一下。</p><h3>一切工作任务围绕Ticket开展</h3><p>早些年的项目开发，都是围绕着项目计划开展的，把甘特图打印贴在墙上，方便团队成员看项目进展到什么地步了。自从敏捷化后，开始变成了看板。</p><p>所谓的看板，就是把白板分成几个栏，每一栏为一类，分别写着“To Do（待选取）”、“In Progress（进行中）”、“Done（完成）”等，再把工作任务变成一个个五颜六色的即时贴，根据状态贴在不同的栏下面。</p><p><img src=\"https://static001.geekbang.org/resource/image/33/a9/33752b50f5363233581263e882e19aa9.jpg?wh=2284*1105\" alt=\"\"></p><p>慢慢的物理的看板变成了电子看板，通过各种项目管理软件来管理跟踪这些任务，即时贴也变成了Ticket（也有叫Issue的）。逐渐的，所有与开发相关的任务也都和Ticket挂钩了：</p><ul>\n<li>报一个Bug，提交一个Ticket ；</li>\n<li>提一条需求，提交一个Ticket ；</li>\n<li>要重构一下代码，提交一个Ticket 。</li>\n</ul><p>看板这种基于Ticket来管理跟踪任务的方式，看起来繁琐，但确实是很高效的一种方式。</p><ul>\n<li>每一个任务的状态都可以被跟踪起来：什么时候开始做的，谁在做，做完没有。</li>\n<li>整个团队在做什么一目了然。</li>\n<li>Ticket和敏捷开发中的Backlog（任务清单）正好结合起来，通过Ticket可以收集管理整个项目的Backlog和当前Sprint（迭代）的Backlog。</li>\n</ul><p>有了看板后，大家每天上班第一件事就是打开看板，看看当前Sprint还有哪些Ticket没有完成，哪些已经完成，哪些正在进行中，非常直观。</p><p>作为项目成员来说，做完手头的事情也不用去问项目经理该干什么事情了，直接从To Do栏选一条Ticket做就是了；对于项目经理，看看To Do栏还有多少没有被选取，就知道还剩多少Ticket没完成，看看In Progress栏就知道哪些Ticket正在进行中。</p><p>如果有Ticket在这一栏待太久或者这一栏Ticket太多，那可能就有风险了，就可以及时介入。</p><p>对于项目管理软件和Ticket，我在后面章节中还会有进一步介绍。</p><h3>基于Git和CI的开发流程</h3><p>如果你的团队应用瀑布模型来开发，大概会有两大烦恼：<strong>代码不稳定和部署太麻烦。</strong></p><p>早些年虽然也用源代码管理，但是大家都是在master（主干）上开发的，所以 master 的代码特别不稳定，一不小心就可能被人签入了不稳定的代码。所以在上线前，有一段时间叫“代码冻结期”，意思就是这期间，除非是紧急修复，否则谁都不能往上面提交代码。</p><p>还有，测试环境的部署也是个老大难问题，尤其是在服务较多时，编译要注意各种依赖和环境的配置。所以更新测试环境是个大工程，以至于当年我在飞信的时候，专门有人负责部署测试环境。</p><p>上面的“代码冻结”和“专人部署”方案，可一点都不敏捷。所以团队想要敏捷起来，一定要解决代码不稳定和部署太麻烦这两个大问题。</p><p>好在基于Git的开发流程结合CI的自动测试部署，很完美的解决了这两大问题。</p><p>Git本来只是源代码管理工具，但是其强大的分支管理和灵活的权限控制，结合一定的开发流程，却可以帮助你很好的控制代码质量。</p><p>我们假设现在 master 的代码是稳定的，那么怎么保证新加入的代码也稳定呢？</p><p>答案就是代码审查（Code Review）和自动化测试。如果代码有严格的审查，并且所有自动化测试代码都能测试通过，那么可以认为代码质量是可靠的。当然前提是自动化测试代码要有一定的覆盖比率。</p><p>关于这点，对于大厂来说倒不是什么问题，正规的项目组对于代码审查和自动测试代码的覆盖率都有严格的要求。现在还有一个问题，就是如何在合并到 master 之前把代码审查和自动化测试做好呢？</p><p>简单来说，就是每次要往 master 添加内容，不是直接提交代码到 master，而是先基于当前稳定的 master，克隆一个branch（分支）出来，基于 branch 去开发，开发完成后提交一个PR（Pull Request，合并请求）。</p><p><img src=\"https://static001.geekbang.org/resource/image/dc/f8/dc610641d65152e561fcc704e8797af8.png?wh=1920*1974\" alt=\"\" title=\"图片来源：VSCode项目PR\"></p><p>PR提交后，就可以清楚的看出来代码做了哪些改动，其他人就可以针对每一行代码写评论提出修改意见。如果确认代码没问题了，就可以通过代码审查。</p><p>接下来还剩下自动化测试的问题。这时候该CI （持续集成）出场了。</p><p>如果你不了解CI是什么，可以把它想象成一个机器人，每次你提交一个PR（严格来说是Commit，这里略作简化）到源代码服务器，这个机器人马上就知道了。</p><p>然后它创建一个干净的运行环境，把你提交的代码下载下来，再下载安装所有依赖项，然后运行你的所有测试代码，运行完后，把测试结果报告给你。测试结果直观的反馈在PR上，绿色表示通过，红色表示不通过。</p><p><img src=\"https://static001.geekbang.org/resource/image/50/b9/50b61f8062a99658b26c86e1b42fe3b9.png?wh=1920*2352\" alt=\"\" title=\"图片来源：Video-React项目PR\"></p><p>关于Git和CI，我在之后的文章中会展开讲解，这里只是为了展现敏捷开发方法的流程。另外，阮一峰老师写过两篇文章，《<a href=\"http://www.ruanyifeng.com/blog/2015/12/git-workflow.html\">Git 工作流程</a>》《<a href=\"http://www.ruanyifeng.com/blog/2015/09/continuous-integration.html\">持续集成是什么？</a>》，你也可以先行阅读了解。</p><p>至此，代码审查和自动测试的问题都解决了。当一个PR代码审查通过，以及CI通过了所有自动化测试，就可以合并到master了，而且我们也可以认为合并到master后的代码也是稳定的。</p><p>至于自动部署测试环境，反倒是简单，就是CI这个机器人，在你代码合并到master的时候，再次运行自动化测试代码，测试通过后直接运行自动部署的脚本，把master代码部署到开发环境或测试环境上。</p><p><img src=\"https://static001.geekbang.org/resource/image/be/12/be26482df2715220b0dc2f90f034bd12.jpg?wh=2284*1489\" alt=\"\"></p><p>在这里以一个开发任务为例，大致讲解一下应用敏捷开发方法的基本开发流程：</p><ul>\n<li>把要开发的Ticket从“To Do”栏移动到“In Progress”栏；</li>\n<li>从主干（master）创建一个分支（branch），基于分支去开发功能或修复Bug；</li>\n<li>编写实现代码和测试代码（单元测试和集成测试），是不是测试驱动不重要，看个人偏好或团队要求；</li>\n<li>持续提交代码更新到分支，直到完成；</li>\n<li>创建PR（Pull Request，合并请求），邀请其他人帮忙Review代码，根据Review的结果，可能还需要更新几次；</li>\n<li>CI在每一次提交代码到代码库后都会自动运行，运行后主要做这些工作：<br>\n– 检查代码格式是不是符合规范；<br>\n– 运行单元测试代码；<br>\n– 运行集成测试。</li>\n<li>最终这些检查都完成后，CI会把执行结果显示在PR上。通常绿色表示通过，红色表示失败；</li>\n<li>PR能合并需要满足两个条件：CI变绿+代码Review通过；</li>\n<li>PR合并后，CI会自动构建Docker Image，将Image部署到开发环境；</li>\n<li>将相应的Ticket从看板上的“In Progress”栏移动到“Done”栏。</li>\n</ul><p><img src=\"https://static001.geekbang.org/resource/image/96/78/963f6a02614892e09ef936ac54dc8178.png?wh=1888*1000\" alt=\"\" title=\"图片来源：Jira\"></p><p>正常来讲，你是需要严格遵守开发流程的，但偶尔肯定也有紧急任务，来不及写测试代码，这种情况下，一定要再创建一条Ticket跟踪，以确保后续完成测试代码。</p><h3>部署上线流程</h3><p>最早的时候，程序员都是自己管服务器，但是由于这样过于随意，就会导致很多问题出现。</p><p>于是后来有专门的运维团队，将开发好的程序，编译好，数据生成脚本写好，然后写成部署文档，交给运维去手动部署。这个过程无比繁琐、无比慎重，通常几周才部署一次，遇上打补丁才隔几天部署。</p><p>这些年随着容器化、微服务、DevOps这些技术或概念的兴起，部署已经变得越来越高效，大厂已经开始在部署流程上融合这些理念。</p><p>以前是运维人员按照文档部署，现在已经变成了DevOps写自动化部署工具，然后开发人员自己去部署生产环境。</p><p>现在大厂的部署也都实现了自动化，但是流程上还是有一些控制。</p><ul>\n<li>首先，部署的不再是程序代码，而是Docker的Image，每次代码合并后CI都会自动生成新的Image，测试也是基于Image测试。</li>\n<li>部署生产环境之前，先在内部的测试环境充分测试。</li>\n<li>部署生产环境前，需要审批确认，有Ticket跟踪。</li>\n<li>部署时，先部署一部分，监测正常后再全量部署。</li>\n<li>整个过程都有监控报警，出现问题及时回滚。</li>\n</ul><p>如果一切顺利的话，整个生产环境的服务部署过程通常几分钟就完成了，这在以前简直是不敢想象的事。</p><h2>每日站立会议</h2><p>在敏捷开发中，每日站会是非常有名的。在大厂，但凡实施敏捷开发的小组，上班第一件事，就是一起开一个站会，沟通一下项目的基本情况，这也导致会议室越发紧张起来。</p><p>虽然站立会议什么时间开都可以，但是早上无疑是最好的时机，一天工作的开始，开完会全身心去干活。</p><p><strong>是不是站着开会其实不重要，重点是要高效沟通反馈。</strong>开会时间控制在半小时以内，半小时内不能完成的应该另外组织会议。</p><p>谁来主持站立会议呢？在敏捷的Scrum中，有一个角色叫Scrum Master（敏捷教练、敏捷大师），主要任务就是保证各种敏捷流程的。</p><p>所以通常是由Scrum Master主持会议，也可以采用轮班制，每个星期换一名团队成员主持。负责主持会议的人，主要职责是组织会议，一个一个环节开展，控制好会议节奏。</p><p>开会都干什么呢？主要有三个话题：</p><p><strong>1. 成员轮流发言</strong></p><p>每个人轮流介绍一下，昨天干了什么事情，今天计划做什么事情，工作上有没有障碍无法推进。</p><p>一个成员的发言可能是这样的：“昨天我实现了用户登录模块的前端输入框，今天打算完成后端API调用，在实现后端的时候需要API组的支持，昨天发现他们文档有问题，不知道该找谁。”</p><p>要注意的是，这过程中很容易偏离主题，比如突然有人提了一句：“我们好久没团建了，是不是该出去玩玩了。”很可能大家都很high的讨论起来了，这时候会议主持者要及时打断，记录到“问题停车场”，让下一个人继续，先保证大家能高效完成这一环节。</p><blockquote>\n<p>问题停车场（Parking lot question），把需要进一步讨论的问题暂时放到这里，一会儿再讨论。</p>\n</blockquote><p>通过这样的形式，项目成员可以相互了解任务进展，有困难也可以互相支援，及时发现问题和风险。还有一个重要因素，就是每个人对于自己提出的目标，也会信守承诺，努力完成。</p><p><strong>2. 检查最新的Ticket</strong></p><p>前面提到所有日常工作都是基于Ticket来开展的，这些Ticket可能是测试报出的Bug，也可能是产品经理提交的需求，也可能是其他。</p><p>所以每天例会都需要检查一下新增的Ticket，并且要甄别一下优先级，然后决定是放到当前Sprint，还是放到Backlog（任务清单）。</p><p>这个阶段同样要注意不能发散，不要针对Ticket的细节展开过多讨论，有需要讨论的同样可以先收集到“问题停车场”，会议组织者需要做好控制。</p><p><strong>3. 停车场问题</strong></p><p>在这个环节，大家可以针对之前来不及讨论的问题进行讨论，能在会议时间内解决的问题，就马上解决，不能解决的会后再私下讨论或者再组织会议。</p><p>当然，大厂的流程规范还有很多，在这里我仅列出与敏捷相关的主要开发流程。</p><h2>总结</h2><p>我们知道，在敏捷开发中有很多概念，像Backlog、持续交付、每日站会等，这些概念最终要变成实践的话，就必须要通过一定的流程规范来保障这些概念的实施。</p><p>这就是为什么很多公司写代码要求你写自动化测试代码，为什么要用一些像Jira、禅道这样的项目管理软件来管理任务，为什么要每天开站立会议，为什么要有代码审查。这些都不过是为了保障敏捷的实施。</p><p>如果你在实施敏捷开发的项目工作，就可以多去观察平时工作中这些和敏捷有关的流程规范，再结合敏捷开发中的知识点，就能很好的帮助你理解敏捷开发，理解这些流程规范背后的理论依据。</p><p>如果你工作中不是用的敏捷开发，也可以参考本文中提到的一些实践，尝试着试用起来。</p><p>在下一篇里，我还会以一个具体的项目小组对敏捷的应用为例，继续给你讲讲大厂都在用的那些敏捷方法。</p><h2>课后思考</h2><p>你的项目中，有哪些跟敏捷开发相关的实践？你觉得哪些做的好的地方，哪些做的不够好的？或者哪些是你疑惑的地方，都可以留言讨论。另外，你可以再思考一个问题：一个每周一个Sprint的敏捷项目，怎么保证每周都有交付，还能保证产品质量？欢迎在留言区与我分享讨论。</p><p>感谢阅读，如果你觉得这篇文章对你有一些启发，也欢迎把它分享给你的朋友。</p>","neighbors":{"left":{"article_title":"05 | 敏捷开发到底是想解决什么问题？","id":84351},"right":{"article_title":"07 | 大厂都在用哪些敏捷方法？（下）","id":85018}},"comments":[{"had_liked":false,"id":73733,"user_name":"纯洁的憎恶","can_delete":false,"product_type":"c1","uid":1130512,"ip_address":"","ucode":"5E9757DE6F45DF","user_header":"https://static001.geekbang.org/account/avatar/00/11/40/10/b6bf3c3c.jpg","comment_is_top":false,"comment_ctime":1551965700,"is_pvip":true,"replies":[{"id":"26929","content":"感谢你帮我把螺丝钉这段写出来了，我有想写这么一段类似的，后来觉得篇幅太长另外和软工关系不那么大就没扯淡了😄<br><br>大厂优势就是资源多，项目大，如果如你所说，能跳出所在岗位，站在全局多观察多思考，能学到很多东西👍<br><br>如果只局限于自己岗位做一个螺丝钉，只会大厂的一套很窄领域的技能，时间一长很可怕，将来出去后难以找到合适的工作！","user_name":"作者回复","user_name_real":"宝玉","uid":"1064938","ctime":1551972696,"ip_address":"","comment_id":73733,"utype":1}],"discussion_count":1,"race_medal":0,"score":"156170788356","product_id":100023701,"comment_content":"分治策略是应对庞大复杂系统的惯用思路，但它的难点或精髓在于如何确保形散神聚。<br><br>详细计划（甘特图）VS任务状态（Ticket）<br><br>代码不稳定&amp;环境部署麻烦<br>VS<br>代码审查&amp;自动测试&amp;自动部署（GIT、CI、DevOps）<br><br>上传下达VS频繁沟通、提醒、分享<br><br>大厂的敏捷开发实践，把枯燥的编码变得跟玩游戏一样。借助有效的流程与工具，能够有效节约团队成员的精力，聚焦于任务或角色，不会因频繁“统一思想”导致“技术动作变形”。而另一面，在大厂里每个人通常都是螺丝钉，长此以往也许会养成不谋全局的习惯。如果能从自己的角色中跳出来，俯瞰整个组织协作的全过程，并站在这个视角上思考问题，一定会有更喜人的收获。","like_count":37,"discussions":[{"author":{"id":1064938,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/gem4tlXhUUSQwNklGwJFJ09lP4yfYwTlbNgH9vw01AJiar7z9cQeehBVgLNoZhOG9l96q12EfxpFh4SBXibmSQWw/132","nickname":"宝玉","note":"","ucode":"824342714F3310","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":442251,"discussion_content":"感谢你帮我把螺丝钉这段写出来了，我有想写这么一段类似的，后来觉得篇幅太长另外和软工关系不那么大就没扯淡了😄\n\n大厂优势就是资源多，项目大，如果如你所说，能跳出所在岗位，站在全局多观察多思考，能学到很多东西👍\n\n如果只局限于自己岗位做一个螺丝钉，只会大厂的一套很窄领域的技能，时间一长很可怕，将来出去后难以找到合适的工作！","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1551972696,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":73745,"user_name":"J.M.Liu","can_delete":false,"product_type":"c1","uid":1200037,"ip_address":"","ucode":"B2CB84B8E923A6","user_header":"https://static001.geekbang.org/account/avatar/00/12/4f/a5/71358d7b.jpg","comment_is_top":false,"comment_ctime":1551967402,"is_pvip":false,"replies":[{"id":"26943","content":"好问题，你难倒我了😂<br><br>前面介绍过，没有软件工程的时候呢，开发就是边写边改模式，没有需求分析，没有架构设计，没有测试，导致很多问题。<br><br>敏捷开发的话，需求分析还有，只是简化了，架构设计也有，只是说仅仅做当前Sprint的架构，测试也没省，只是很多自动化测试辅助，所以让测试人员从繁重的体力劳动中解放出来很多。","user_name":"作者回复","user_name_real":"宝玉","uid":"1064938","ctime":1551982676,"ip_address":"","comment_id":73745,"utype":1}],"discussion_count":3,"race_medal":0,"score":"78861378730","product_id":100023701,"comment_content":"老师，敏捷开发这么强调扁平化，这么重视人，这么强调开放而弱化约束，那和最初没有软件工程时期的开发主要区别是啥呀😂","like_count":18,"discussions":[{"author":{"id":1064938,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/gem4tlXhUUSQwNklGwJFJ09lP4yfYwTlbNgH9vw01AJiar7z9cQeehBVgLNoZhOG9l96q12EfxpFh4SBXibmSQWw/132","nickname":"宝玉","note":"","ucode":"824342714F3310","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":442258,"discussion_content":"好问题，你难倒我了😂\n\n前面介绍过，没有软件工程的时候呢，开发就是边写边改模式，没有需求分析，没有架构设计，没有测试，导致很多问题。\n\n敏捷开发的话，需求分析还有，只是简化了，架构设计也有，只是说仅仅做当前Sprint的架构，测试也没省，只是很多自动化测试辅助，所以让测试人员从繁重的体力劳动中解放出来很多。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1551982676,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1463457,"avatar":"https://static001.geekbang.org/account/avatar/00/16/54/a1/0ab08f4d.jpg","nickname":"郎","note":"","ucode":"BC6E1749EC2EEF","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":387866,"discussion_content":"扁平化还是结构化的，扁平化也是一种结果的方式。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1628478361,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1404773,"avatar":"https://static001.geekbang.org/account/avatar/00/15/6f/65/26f998b2.jpg","nickname":"zheng","note":"","ucode":"D61E7182921DD8","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":371923,"discussion_content":"感觉也是一个分治的问题。没有软工的时候，大家是没有组织的做一个大任务，各干各的，混乱不堪。现在的扁平化形散神聚，大的进程上是强化约束的，只有在各自最小的“用户故事”上是开放的","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1620056521,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":73519,"user_name":"Felix","can_delete":false,"product_type":"c1","uid":1043717,"ip_address":"","ucode":"DD605AA7D79886","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/DYAIOgq83epYwhroC3gic3JJSUZqMFxL0x7iasNUyjUaB2Gp3f0Eiapegc10p5S6pp4dYibEb07VA1IYWldLK4LJdg/132","comment_is_top":false,"comment_ctime":1551919652,"is_pvip":false,"replies":[{"id":"26793","content":"👍是的，一切以Ticket为准！不用担心问题被遗忘，会被跟踪，直到被解决或决定不解决！","user_name":"作者回复","user_name_real":"宝玉","uid":"1064938","ctime":1551924381,"ip_address":"","comment_id":73519,"utype":1}],"discussion_count":1,"race_medal":0,"score":"53091527204","product_id":100023701,"comment_content":"“一切以Jia为准”一直我长挂在嘴边的一句话，以此也教育了用户(开发、产品、测试)养成习惯，之后大家也乐于通过Jira来沟通、对齐信息","like_count":12,"discussions":[{"author":{"id":1064938,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/gem4tlXhUUSQwNklGwJFJ09lP4yfYwTlbNgH9vw01AJiar7z9cQeehBVgLNoZhOG9l96q12EfxpFh4SBXibmSQWw/132","nickname":"宝玉","note":"","ucode":"824342714F3310","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":442126,"discussion_content":"👍是的，一切以Ticket为准！不用担心问题被遗忘，会被跟踪，直到被解决或决定不解决！","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1551924381,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":73698,"user_name":"Charles","can_delete":false,"product_type":"c1","uid":1001410,"ip_address":"","ucode":"32646D78CC0389","user_header":"https://static001.geekbang.org/account/avatar/00/0f/47/c2/e9fa4cf6.jpg","comment_is_top":false,"comment_ctime":1551960528,"is_pvip":false,"replies":[{"id":"26939","content":"你说的这几个方向都很好的。第二个要慎重一点，如果没有特别懂的人不要着急马上去做，会有不少坑要填。一三可以尝试做起来。<br><br>自动化测试的话，最重要一点，就是要让开发同时写一些自动化测试，传统测试人员短期内恐怕难一下子写出来高质量自动化测试代码。还有就是要项目管理上要支持，例如说写测试的时间要放到计划里面，必须要留出来写测试的时间，不能不给又想马儿跑得快不让马儿吃草。<br><br>PR是个很好的代码审查以及结合CI看测试状态的方式。但是需要花点时间去搭平台。如果创业公司，没有必要自己去基于Jenkins这种搭建，去买成熟的第三方服务就足够了。<br><br>最后一点，要改变，不要着急一蹴而就，一点点去试点，然后再推广，不建议贸然改变太多。<br>","user_name":"作者回复","user_name_real":"宝玉","uid":"1064938","ctime":1551979941,"ip_address":"","comment_id":73698,"utype":1}],"discussion_count":2,"race_medal":0,"score":"40206666192","product_id":100023701,"comment_content":"创业公司，目前只做到了<br><br>1. 所有需求、bug、任务等都放issue里<br>2. 项目经理发起，大家讨论，结合市场或阶段性目标整理这个版本包含哪些issue，评估时间，再进入开发阶段<br>2. git管理代码，有master、develop以及bug或特性分支<br>3.master对应生产环境、develop对应测试环境，修复bug或特性，本地自测完配合一点点的单元测试，推送到develop自动部署到测试服务器，测试开始测试，测试通过再把对应的bug或特性分支合并到master自动部署生产环境<br><br>看了老师的专栏，感觉可以超几个方向努力更敏捷<br><br>1. 提高单元测试覆盖率，尝试自动化测试，目前人工测试效率低，压力大<br>2.测试环境和生产环境容器化，目前各种特性并行开发测试环境容易冲突<br>3.master分支尝试pr的方式，互相阅读代码学习还能发现一些单个人考虑不全测试又测不到的潜在隐患<br><br>就是这些做完不知道是否又会引入新问题，感谢老师专栏，学到很多","like_count":9,"discussions":[{"author":{"id":1064938,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/gem4tlXhUUSQwNklGwJFJ09lP4yfYwTlbNgH9vw01AJiar7z9cQeehBVgLNoZhOG9l96q12EfxpFh4SBXibmSQWw/132","nickname":"宝玉","note":"","ucode":"824342714F3310","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":442232,"discussion_content":"你说的这几个方向都很好的。第二个要慎重一点，如果没有特别懂的人不要着急马上去做，会有不少坑要填。一三可以尝试做起来。\n\n自动化测试的话，最重要一点，就是要让开发同时写一些自动化测试，传统测试人员短期内恐怕难一下子写出来高质量自动化测试代码。还有就是要项目管理上要支持，例如说写测试的时间要放到计划里面，必须要留出来写测试的时间，不能不给又想马儿跑得快不让马儿吃草。\n\nPR是个很好的代码审查以及结合CI看测试状态的方式。但是需要花点时间去搭平台。如果创业公司，没有必要自己去基于Jenkins这种搭建，去买成熟的第三方服务就足够了。\n\n最后一点，要改变，不要着急一蹴而就，一点点去试点，然后再推广，不建议贸然改变太多。\n","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1551979941,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1468298,"avatar":"https://static001.geekbang.org/account/avatar/00/16/67/8a/babd74dc.jpg","nickname":"锦","note":"","ucode":"CB0EB4B68C468B","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":292919,"discussion_content":"这几个点都提的很好，目前我们只实现了pr，前两点都没有实现。最近我在考虑怎么落地自动测试，但是还有几个问题没有解决，1：在已有代码框架如何最小代价下兼容测试用例。2：针对hiberate这种orm框架下的业务代码怎么做单元测试？","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1595384770,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":73619,"user_name":"KK_TTN","can_delete":false,"product_type":"c1","uid":1061067,"ip_address":"","ucode":"5681D57DEEB6DC","user_header":"https://static001.geekbang.org/account/avatar/00/10/30/cb/95ea2150.jpg","comment_is_top":false,"comment_ctime":1551941868,"is_pvip":true,"replies":[{"id":"26931","content":"这倒是小事了，可以养成习惯，每天下班前检查一下，一次性更新。<br><br>我有写过一个小脚本，在CI里面运行，PR merge或者部署测试环境都自动更新，PR里面标题加上Ticket编号就可以。又酷又省心✌️<br><br>","user_name":"作者回复","user_name_real":"宝玉","uid":"1064938","ctime":1551972905,"ip_address":"","comment_id":73619,"utype":1}],"discussion_count":1,"race_medal":0,"score":"31616712940","product_id":100023701,"comment_content":"如何培养自己维护ticket的习惯呢？感觉写代码是一件愉快的事情，倒是经常会忘记(或者内心去回避)更新ticket的状态","like_count":7,"discussions":[{"author":{"id":1064938,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/gem4tlXhUUSQwNklGwJFJ09lP4yfYwTlbNgH9vw01AJiar7z9cQeehBVgLNoZhOG9l96q12EfxpFh4SBXibmSQWw/132","nickname":"宝玉","note":"","ucode":"824342714F3310","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":442187,"discussion_content":"这倒是小事了，可以养成习惯，每天下班前检查一下，一次性更新。\n\n我有写过一个小脚本，在CI里面运行，PR merge或者部署测试环境都自动更新，PR里面标题加上Ticket编号就可以。又酷又省心✌️\n\n","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1551972905,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":126225,"user_name":"敏捷教练夏勇杰","can_delete":false,"product_type":"c1","uid":1408755,"ip_address":"","ucode":"C10268F7D76588","user_header":"https://static001.geekbang.org/account/avatar/00/15/7e/f3/fdaa906d.jpg","comment_is_top":false,"comment_ctime":1566351346,"is_pvip":false,"replies":[{"id":"46753","content":"我有写过一篇《Code Review最佳实践》发在了博客园：<br>https:&#47;&#47;www.cnblogs.com&#47;dotey&#47;p&#47;11216430.html<br>供参考","user_name":"作者回复","user_name_real":"宝玉","uid":"1064938","ctime":1566388242,"ip_address":"","comment_id":126225,"utype":1}],"discussion_count":1,"race_medal":0,"score":"18746220530","product_id":100023701,"comment_content":"之前也在团队里实施过Code Review的机制，但是，大家对于Review别人的代码都不是很积极，最后就变成了Team Leader一个Review所有人的代码，Team Leader没有时间做这个事情的时候，大家就敷衍了事，直接通过，让Code Review流于形式。对于这种情况，宝玉老师遇到过么，是如何解决的？","like_count":4,"discussions":[{"author":{"id":1064938,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/gem4tlXhUUSQwNklGwJFJ09lP4yfYwTlbNgH9vw01AJiar7z9cQeehBVgLNoZhOG9l96q12EfxpFh4SBXibmSQWw/132","nickname":"宝玉","note":"","ucode":"824342714F3310","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":463892,"discussion_content":"我有写过一篇《Code Review最佳实践》发在了博客园：\nhttps://www.cnblogs.com/dotey/p/11216430.html\n供参考","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1566388242,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":76093,"user_name":"卡皮","can_delete":false,"product_type":"c1","uid":1175570,"ip_address":"","ucode":"20A8D19DD91AE7","user_header":"https://static001.geekbang.org/account/avatar/00/11/f0/12/89b7c95a.jpg","comment_is_top":false,"comment_ctime":1552530505,"is_pvip":false,"replies":[{"id":"27744","content":"具体看哪一类的工具，比如CI的话你可以看看开源的Jenkins（https:&#47;&#47;zhuanlan.zhihu.com&#47;p&#47;54050436），比如项目管理工具你可以看看Jira或者类似的，自动化测试具体要看你的语言，源代码管理GitHub","user_name":"作者回复","user_name_real":"宝玉","uid":"1064938","ctime":1552537951,"ip_address":"","comment_id":76093,"utype":1}],"discussion_count":1,"race_medal":0,"score":"18732399689","product_id":100023701,"comment_content":"敏捷开发中有什么好用的工具推荐呢？","like_count":4,"discussions":[{"author":{"id":1064938,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/gem4tlXhUUSQwNklGwJFJ09lP4yfYwTlbNgH9vw01AJiar7z9cQeehBVgLNoZhOG9l96q12EfxpFh4SBXibmSQWw/132","nickname":"宝玉","note":"","ucode":"824342714F3310","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":443175,"discussion_content":"具体看哪一类的工具，比如CI的话你可以看看开源的Jenkins（https://zhuanlan.zhihu.com/p/54050436），比如项目管理工具你可以看看Jira或者类似的，自动化测试具体要看你的语言，源代码管理GitHub","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1552537951,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":73740,"user_name":"javaadu","can_delete":false,"product_type":"c1","uid":1000519,"ip_address":"","ucode":"8C0B140F1C8992","user_header":"https://static001.geekbang.org/account/avatar/00/0f/44/47/3ddb94d0.jpg","comment_is_top":false,"comment_ctime":1551966574,"is_pvip":true,"replies":[{"id":"26928","content":"任务拆分力度可以解决好分工协作问题；敏捷里面每个Sprint开会前会有迭代计划会，团队成员一起安排计划下一个Sprint的ticket；Sprint结束还有迭代回顾会做总结。<br><br>交付的问题解决了，质量上再思考思考？","user_name":"作者回复","user_name_real":"宝玉","uid":"1064938","ctime":1551972292,"ip_address":"","comment_id":73740,"utype":1}],"discussion_count":1,"race_medal":0,"score":"18731835758","product_id":100023701,"comment_content":"思考题：一周一个sprint ，要保证每周交付的话，一要看ticket 的粒度（任务拆分）是否合理，二要提前一周做计划，三要每周结束做总结。","like_count":4,"discussions":[{"author":{"id":1064938,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/gem4tlXhUUSQwNklGwJFJ09lP4yfYwTlbNgH9vw01AJiar7z9cQeehBVgLNoZhOG9l96q12EfxpFh4SBXibmSQWw/132","nickname":"宝玉","note":"","ucode":"824342714F3310","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":442255,"discussion_content":"任务拆分力度可以解决好分工协作问题；敏捷里面每个Sprint开会前会有迭代计划会，团队成员一起安排计划下一个Sprint的ticket；Sprint结束还有迭代回顾会做总结。\n\n交付的问题解决了，质量上再思考思考？","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1551972292,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":73635,"user_name":"alva_xu","can_delete":false,"product_type":"c1","uid":1003946,"ip_address":"","ucode":"1D5B592B3A780F","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTLPxmcBiaXpTjuyicHJJwVECstJPyHJj8ZMOEdjz5N3rQzTkR4vTF3bpNXLm4MftPNFPI6ibsVRN5FbA/132","comment_is_top":false,"comment_ctime":1551946038,"is_pvip":false,"replies":[{"id":"26937","content":"对敏捷了解已经很熟悉很深入了👍<br><br>你还可以继续考虑考虑还有没有其他手段可以加强质量的？尤其是可以从瀑布模型那边学习借鉴一些。","user_name":"作者回复","user_name_real":"宝玉","uid":"1064938","ctime":1551977373,"ip_address":"","comment_id":73635,"utype":1}],"discussion_count":1,"race_medal":0,"score":"18731815222","product_id":100023701,"comment_content":"在一个以Scrum 为方法的敏捷团队里，<br>首先，Scrum master是呵护develop team的保护神，他的其中一个职责是保护每一次迭代的工作量是dev team能按时完成的，而且保护dev team 能专注于现有sprint back log的实现，不会被其他干系人的新需求所打断。<br>其次,Dev team是一个T型团队，技术比较全面，许多事情多能自助搞定，比如，开发人员同时又有测试技能，同时如果结合结对开发，测试驱动开发，那么，交付物的质量就更有保障。<br>再者，在一个敏捷团队里，人数比较少，dev team的沟通能力都比较强，沟通可以比较充分，所以解决问题的能力就比较强，工作效率比较高<br>最后，敏捷模式的开展，也依赖于工具的使用，目前常用的CICD工具，与jira&#47;confluence 需求沟通管理工具的打通，部署次数的提高，无疑大大提高了开发发布效率，同时也提高了发布质量。<br>综上所述，只要在人员组织架构、工具产品、流程这三个方面都达到了敏捷的要求，那么发布质量就有了保证。","like_count":4,"discussions":[{"author":{"id":1064938,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/gem4tlXhUUSQwNklGwJFJ09lP4yfYwTlbNgH9vw01AJiar7z9cQeehBVgLNoZhOG9l96q12EfxpFh4SBXibmSQWw/132","nickname":"宝玉","note":"","ucode":"824342714F3310","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":442196,"discussion_content":"对敏捷了解已经很熟悉很深入了👍\n\n你还可以继续考虑考虑还有没有其他手段可以加强质量的？尤其是可以从瀑布模型那边学习借鉴一些。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1551977373,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":126499,"user_name":"小老鼠","can_delete":false,"product_type":"c1","uid":1257460,"ip_address":"","ucode":"C663A0C863A515","user_header":"https://static001.geekbang.org/account/avatar/00/13/2f/f4/2dede51a.jpg","comment_is_top":false,"comment_ctime":1566396121,"is_pvip":false,"replies":[{"id":"46898","content":"小厂使用敏捷开发，几件事需要做起来：<br>1. 固定迭代周期，每2-4周一个迭代，迭代结束能交付可用的产品，为了定期发布舍得砍掉功能需求<br>2. 增加自动化测试的比例，把源代码管理、CI（持续集成）用起来，借助开发流程、自动化测试保证基本产品质量<br>3.  用好任务管理系统，把所有要做的任务都跟踪起来，按照优先级都排到相应的迭代版本，在一个迭代中，有紧急任务插队加塞，相应的就应该把其他任务移出去。<br><br>嵌入式软件能不能用微服务这问题超纲了，我也不懂<br><br>DevOps也不是银弹，主要有三点你可以借鉴：<br>1. 高度自动化<br>2. 透明可量化<br>3. 紧密协作<br><br>你这个问题可以从上面几个角度考虑，尤其是自动化的角度考虑是不是可行。<br>","user_name":"作者回复","user_name_real":"宝玉","uid":"1064938","ctime":1566495121,"ip_address":"","comment_id":126499,"utype":1}],"discussion_count":1,"race_medal":0,"score":"14451298009","product_id":100023701,"comment_content":"1、小厂如何使用敏捷？好些小厂朋友抱怨敏捷玩不起来或不好用。<br>2、像嵌入式软件等非BS架构产品可使用容器+微服务吗？<br>3、以前我测试过一款网络管理产品，走的是SNMP协议，但由于各个客户所用产品的厂商不同，比如A用户用华三交换机、B用户用华为交换机、C用户用华中兴交换机、D用户用阿朗交换机⋯，各厂商交换机除了支持标准SNMP协议外，还支持自定义协议，所以该产品测试非常难。现在在DevOps 下可以解决吗？","like_count":3,"discussions":[{"author":{"id":1064938,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/gem4tlXhUUSQwNklGwJFJ09lP4yfYwTlbNgH9vw01AJiar7z9cQeehBVgLNoZhOG9l96q12EfxpFh4SBXibmSQWw/132","nickname":"宝玉","note":"","ucode":"824342714F3310","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":464017,"discussion_content":"小厂使用敏捷开发，几件事需要做起来：\n1. 固定迭代周期，每2-4周一个迭代，迭代结束能交付可用的产品，为了定期发布舍得砍掉功能需求\n2. 增加自动化测试的比例，把源代码管理、CI（持续集成）用起来，借助开发流程、自动化测试保证基本产品质量\n3.  用好任务管理系统，把所有要做的任务都跟踪起来，按照优先级都排到相应的迭代版本，在一个迭代中，有紧急任务插队加塞，相应的就应该把其他任务移出去。\n\n嵌入式软件能不能用微服务这问题超纲了，我也不懂\n\nDevOps也不是银弹，主要有三点你可以借鉴：\n1. 高度自动化\n2. 透明可量化\n3. 紧密协作\n\n你这个问题可以从上面几个角度考虑，尤其是自动化的角度考虑是不是可行。\n","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1566495121,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":74099,"user_name":"舒偌一","can_delete":false,"product_type":"c1","uid":1053833,"ip_address":"","ucode":"C1F87ED4E84FD9","user_header":"https://static001.geekbang.org/account/avatar/00/10/14/89/229bb890.jpg","comment_is_top":false,"comment_ctime":1552103858,"is_pvip":false,"replies":[{"id":"27072","content":"你说的应该是Scrum Master的角色，你们这个是很好的方案，必然要有人去处理对外的对内的杂事，保证其他人可以专注的工作。<br><br>另外在后面一篇也介绍了一个轮值的方案，就是每周安排一个人专门去做一些杂事，大家轮流来。","user_name":"作者回复","user_name_real":"宝玉","uid":"1064938","ctime":1552106883,"ip_address":"","comment_id":74099,"utype":1}],"discussion_count":1,"race_medal":0,"score":"14437005746","product_id":100023701,"comment_content":"好的地方是项目透明，对项目情况比较了解，如果成员责任心好，那就很赞。缺陷是外在事务的干扰，我们现在的做法是，有一个人在一个sprint内不参与，专门处理意外情况。希望老师给一个建议。","like_count":3,"discussions":[{"author":{"id":1064938,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/gem4tlXhUUSQwNklGwJFJ09lP4yfYwTlbNgH9vw01AJiar7z9cQeehBVgLNoZhOG9l96q12EfxpFh4SBXibmSQWw/132","nickname":"宝玉","note":"","ucode":"824342714F3310","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":442442,"discussion_content":"你说的应该是Scrum Master的角色，你们这个是很好的方案，必然要有人去处理对外的对内的杂事，保证其他人可以专注的工作。\n\n另外在后面一篇也介绍了一个轮值的方案，就是每周安排一个人专门去做一些杂事，大家轮流来。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1552106883,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":73986,"user_name":"Tiger","can_delete":false,"product_type":"c1","uid":1284857,"ip_address":"","ucode":"6F9CAB3C29BAD7","user_header":"https://static001.geekbang.org/account/avatar/00/13/9a/f9/6d55ee0b.jpg","comment_is_top":false,"comment_ctime":1552053467,"is_pvip":false,"replies":[{"id":"26991","content":"在下一篇里面还会有谈到这个问题。自动化测试是辅助的，还是离不开人工的测试。而且开发写的集成测试和测试写的自动化测试还是有一点差别，一个是用程序模拟的操作的模拟的固定数据，而测试则用的是真实的数据真实的环境。<br><br>举个例子来说，网页的自动化测试，开发只会用Chrome Headless，数据都是事先写好的模拟数据；测试的话会用主流的Chrome、Safari、Firefox、Edge分别测试（自动化或手动），数据都是测试环境的真实数据。","user_name":"作者回复","user_name_real":"宝玉","uid":"1064938","ctime":1552057301,"ip_address":"","comment_id":73986,"utype":1}],"discussion_count":1,"race_medal":0,"score":"14436955355","product_id":100023701,"comment_content":"在敏捷里面，开发写自动化脚本测试，那是不是就不需要测试这个角色了啊？感觉在敏捷里面，只需要开发这一个角色就可以了啊？","like_count":3,"discussions":[{"author":{"id":1064938,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/gem4tlXhUUSQwNklGwJFJ09lP4yfYwTlbNgH9vw01AJiar7z9cQeehBVgLNoZhOG9l96q12EfxpFh4SBXibmSQWw/132","nickname":"宝玉","note":"","ucode":"824342714F3310","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":442369,"discussion_content":"在下一篇里面还会有谈到这个问题。自动化测试是辅助的，还是离不开人工的测试。而且开发写的集成测试和测试写的自动化测试还是有一点差别，一个是用程序模拟的操作的模拟的固定数据，而测试则用的是真实的数据真实的环境。\n\n举个例子来说，网页的自动化测试，开发只会用Chrome Headless，数据都是事先写好的模拟数据；测试的话会用主流的Chrome、Safari、Firefox、Edge分别测试（自动化或手动），数据都是测试环境的真实数据。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1552057301,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":74009,"user_name":"Xunqf","can_delete":false,"product_type":"c1","uid":1003577,"ip_address":"","ucode":"8E629BB0B446B5","user_header":"https://static001.geekbang.org/account/avatar/00/0f/50/39/371c9918.jpg","comment_is_top":false,"comment_ctime":1552059081,"is_pvip":false,"replies":[{"id":"27029","content":"可以试试“问题停车场”，把问题留在后面在讨论，并且严格限制会议时间。<br><br>对于需求更改，严格做到当前Sprint不做更改，另外通过迭代计划会，一起确定下个Sprint的计划，要做的事情。","user_name":"作者回复","user_name_real":"宝玉","uid":"1064938","ctime":1552084307,"ip_address":"","comment_id":74009,"utype":1}],"discussion_count":1,"race_medal":0,"score":"10141993673","product_id":100023701,"comment_content":"我们是小厂，但是也是在尝试敏捷开发，老师提到的我们基本上也都做了，说一下做的不足的地方吧，开会解决问题容易搞成头脑风暴，然后开不出结果，然后因为是敏捷开发，老板和产品经理总是随意的对需求增删改查😂😂😂","like_count":2,"discussions":[{"author":{"id":1064938,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/gem4tlXhUUSQwNklGwJFJ09lP4yfYwTlbNgH9vw01AJiar7z9cQeehBVgLNoZhOG9l96q12EfxpFh4SBXibmSQWw/132","nickname":"宝玉","note":"","ucode":"824342714F3310","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":442383,"discussion_content":"可以试试“问题停车场”，把问题留在后面在讨论，并且严格限制会议时间。\n\n对于需求更改，严格做到当前Sprint不做更改，另外通过迭代计划会，一起确定下个Sprint的计划，要做的事情。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1552084307,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":73524,"user_name":"Felix","can_delete":false,"product_type":"c1","uid":1043717,"ip_address":"","ucode":"DD605AA7D79886","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/DYAIOgq83epYwhroC3gic3JJSUZqMFxL0x7iasNUyjUaB2Gp3f0Eiapegc10p5S6pp4dYibEb07VA1IYWldLK4LJdg/132","comment_is_top":false,"comment_ctime":1551920291,"is_pvip":false,"replies":[{"id":"26797","content":"是的，基于PR结合CI和Code Review是一个非常好的控制签入代码质量的手段！","user_name":"作者回复","user_name_real":"宝玉","uid":"1064938","ctime":1551924561,"ip_address":"","comment_id":73524,"utype":1}],"discussion_count":1,"race_medal":0,"score":"10141854883","product_id":100023701,"comment_content":"Git方面也要求团队Master中的代码必须通过Merge Request(Pull Request)来，也作为Code Review的最后一道关卡<br>持续集成方面大部分通过Jenkins、几个微服务是通过Gitlab CI，我们的终极目标是基于镜像部署发布，屏蔽环境影响","like_count":2,"discussions":[{"author":{"id":1064938,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/gem4tlXhUUSQwNklGwJFJ09lP4yfYwTlbNgH9vw01AJiar7z9cQeehBVgLNoZhOG9l96q12EfxpFh4SBXibmSQWw/132","nickname":"宝玉","note":"","ucode":"824342714F3310","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":442130,"discussion_content":"是的，基于PR结合CI和Code Review是一个非常好的控制签入代码质量的手段！","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1551924561,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":159542,"user_name":"技术修行者","can_delete":false,"product_type":"c1","uid":1013147,"ip_address":"","ucode":"28CA41A1214D6B","user_header":"https://static001.geekbang.org/account/avatar/00/0f/75/9b/611e74ab.jpg","comment_is_top":false,"comment_ctime":1575678609,"is_pvip":true,"replies":[{"id":"61684","content":"👍很好的分析！<br><br>有些问题是可以改进的，比如1和2，但3确实有难度，首先要凑一个一起沟通的时间都难，另外通过会议系统沟通确实不如面对面沟通效率高。<br><br>所以通过微服务这种架构将大组拆分成小组，分组时，尽可能一个城市的在一个组，这样可以有效改善沟通问题。","user_name":"作者回复","user_name_real":"宝玉","uid":"1064938","ctime":1576464020,"ip_address":"","comment_id":159542,"utype":1}],"discussion_count":1,"race_medal":1,"score":"5870645905","product_id":100023701,"comment_content":"在某大厂工作很多年了，一直在用Scrum来管理团队，遇到的做的不好的地方挺多的，边实践边改善吧。<br>1. Scrum Master定位不清晰，Scrum Master应该是帮助开发团队屏蔽各种干扰，保证团队高效能的角色，但有时他会和PO站在一起，不断调整Sprint的scope。<br>2. 站会流于形式，开发团队为了站会而站会，不能很好的在团队内部保持信息透明。<br>3. 团队在多个地方，有时不在一个时区，沟通成本和效率都不好。<br><br>如果想要每周一个Sprint，最关键的是团队文化的建设，让整个团队认可敏捷开发，另外对scope做严格管理，需要提前做计划，不能等Sprint开始之后再去讨论Scope。","like_count":1,"discussions":[{"author":{"id":1064938,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/gem4tlXhUUSQwNklGwJFJ09lP4yfYwTlbNgH9vw01AJiar7z9cQeehBVgLNoZhOG9l96q12EfxpFh4SBXibmSQWw/132","nickname":"宝玉","note":"","ucode":"824342714F3310","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":477092,"discussion_content":"👍很好的分析！\n\n有些问题是可以改进的，比如1和2，但3确实有难度，首先要凑一个一起沟通的时间都难，另外通过会议系统沟通确实不如面对面沟通效率高。\n\n所以通过微服务这种架构将大组拆分成小组，分组时，尽可能一个城市的在一个组，这样可以有效改善沟通问题。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1576464020,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":74760,"user_name":"hua168","can_delete":false,"product_type":"c1","uid":1065255,"ip_address":"","ucode":"CFF9A7E86EBA48","user_header":"https://static001.geekbang.org/account/avatar/00/10/41/27/3ff1a1d6.jpg","comment_is_top":false,"comment_ctime":1552293180,"is_pvip":false,"replies":[{"id":"27313","content":"1. 不知道你是不是已经工作并参与到实际项目中<br>建议先多观察身边的项目，对你学到的知识加以印证，项目经验其实更多来源于参与后的观察和思考。<br>举例来说，你可以结合你学到的知识，看看你们项目现在是什么开发模型，看看项目经理是如何处理项目中的问题的。<br>如果还没参与到实际项目，可以做点开源项目练练手。<br><br>2. 除了Jira有很多选择，例如禅道、Worktile，你搜索一下：“项目管理软件”，腾讯、阿里、华为都有自己的","user_name":"作者回复","user_name_real":"宝玉","uid":"1064938","ctime":1552323779,"ip_address":"","comment_id":74760,"utype":1}],"discussion_count":1,"race_medal":0,"score":"5847260476","product_id":100023701,"comment_content":"一直跟着老师的专栏走，看着留言很激动~~我想问一下：<br>1. 像我运维刚刚学开发没项目经验怎办？没有地方可以上手实验呀？<br>2. 敏捷开的有没有好用的免费开始的管理工具，jira是收费的？","like_count":1,"discussions":[{"author":{"id":1064938,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/gem4tlXhUUSQwNklGwJFJ09lP4yfYwTlbNgH9vw01AJiar7z9cQeehBVgLNoZhOG9l96q12EfxpFh4SBXibmSQWw/132","nickname":"宝玉","note":"","ucode":"824342714F3310","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":442670,"discussion_content":"1. 不知道你是不是已经工作并参与到实际项目中\n建议先多观察身边的项目，对你学到的知识加以印证，项目经验其实更多来源于参与后的观察和思考。\n举例来说，你可以结合你学到的知识，看看你们项目现在是什么开发模型，看看项目经理是如何处理项目中的问题的。\n如果还没参与到实际项目，可以做点开源项目练练手。\n\n2. 除了Jira有很多选择，例如禅道、Worktile，你搜索一下：“项目管理软件”，腾讯、阿里、华为都有自己的","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1552323779,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":74277,"user_name":"SEAN","can_delete":false,"product_type":"c1","uid":1099419,"ip_address":"","ucode":"538DF7AF828B13","user_header":"https://static001.geekbang.org/account/avatar/00/10/c6/9b/54cc2482.jpg","comment_is_top":false,"comment_ctime":1552171784,"is_pvip":false,"replies":[{"id":"27163","content":"哈哈，你们大亚麻是大厂中的超级厂👍<br><br>厉害的，一栈到底！","user_name":"作者回复","user_name_real":"宝玉","uid":"1064938","ctime":1552178223,"ip_address":"","comment_id":74277,"utype":1}],"discussion_count":1,"race_medal":0,"score":"5847139080","product_id":100023701,"comment_content":"宝玉哥 欢迎来到amazon，工程师负责设计开发测试DevOps一条龙，每一个人都欢迎对整个环节的每一个部分提建议。<br>PS： engineer的responsibility也和他的level有关。","like_count":1,"discussions":[{"author":{"id":1064938,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/gem4tlXhUUSQwNklGwJFJ09lP4yfYwTlbNgH9vw01AJiar7z9cQeehBVgLNoZhOG9l96q12EfxpFh4SBXibmSQWw/132","nickname":"宝玉","note":"","ucode":"824342714F3310","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":442507,"discussion_content":"哈哈，你们大亚麻是大厂中的超级厂👍\n\n厉害的，一栈到底！","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1552178223,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":74096,"user_name":"舒偌一","can_delete":false,"product_type":"c1","uid":1053833,"ip_address":"","ucode":"C1F87ED4E84FD9","user_header":"https://static001.geekbang.org/account/avatar/00/10/14/89/229bb890.jpg","comment_is_top":false,"comment_ctime":1552103124,"is_pvip":false,"replies":[{"id":"27071","content":"Review不仅仅是可以发现很多问题，另外如果知道自己的代码会被Review，也会写的认真一点：）","user_name":"作者回复","user_name_real":"宝玉","uid":"1064938","ctime":1552106791,"ip_address":"","comment_id":74096,"utype":1}],"discussion_count":1,"race_medal":0,"score":"5847070420","product_id":100023701,"comment_content":"review很重要，组内有一个持续改进的review清单，依据清单做。","like_count":1,"discussions":[{"author":{"id":1064938,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/gem4tlXhUUSQwNklGwJFJ09lP4yfYwTlbNgH9vw01AJiar7z9cQeehBVgLNoZhOG9l96q12EfxpFh4SBXibmSQWw/132","nickname":"宝玉","note":"","ucode":"824342714F3310","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":442440,"discussion_content":"Review不仅仅是可以发现很多问题，另外如果知道自己的代码会被Review，也会写的认真一点：）","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1552106791,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":73996,"user_name":"一路向北","can_delete":false,"product_type":"c1","uid":1017835,"ip_address":"","ucode":"DB0FF1C153C485","user_header":"https://static001.geekbang.org/account/avatar/00/0f/87/eb/20492a37.jpg","comment_is_top":false,"comment_ctime":1552056190,"is_pvip":false,"replies":[{"id":"26992","content":"赞👍<br><br>可以在一个点一个项目先应用起来，慢慢再更多内容。另外限于篇幅，很多内容并没有介绍特别详细，可以辅助阅读一些书籍和文章，可以帮助你更好了解。","user_name":"作者回复","user_name_real":"宝玉","uid":"1064938","ctime":1552057442,"ip_address":"","comment_id":73996,"utype":1}],"discussion_count":1,"race_medal":0,"score":"5847023486","product_id":100023701,"comment_content":"保证每周都有交付，首先团队成员必须得充分认同敏捷开发的理念，并且有相关的知识培训，其次是项目负责人对每一个需要交付的Sprint的分解到位，团队成员之间相互沟通的路畅通，再一个是对每次的站立会议落到实处。<br>这节课的内容丰富，需要一段时间的消化，我也试着将敏捷的模式应用到实际的开发项目中。","like_count":1,"discussions":[{"author":{"id":1064938,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/gem4tlXhUUSQwNklGwJFJ09lP4yfYwTlbNgH9vw01AJiar7z9cQeehBVgLNoZhOG9l96q12EfxpFh4SBXibmSQWw/132","nickname":"宝玉","note":"","ucode":"824342714F3310","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":442374,"discussion_content":"赞👍\n\n可以在一个点一个项目先应用起来，慢慢再更多内容。另外限于篇幅，很多内容并没有介绍特别详细，可以辅助阅读一些书籍和文章，可以帮助你更好了解。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1552057442,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":73908,"user_name":"dancer","can_delete":false,"product_type":"c1","uid":1019036,"ip_address":"","ucode":"B8D5641A3AC490","user_header":"https://static001.geekbang.org/account/avatar/00/0f/8c/9c/d48473ab.jpg","comment_is_top":false,"comment_ctime":1552031001,"is_pvip":false,"replies":[{"id":"26981","content":"是的，开会要高效，就不能太发散，问题停车场是一个很好的方式改进这个问题。","user_name":"作者回复","user_name_real":"宝玉","uid":"1064938","ctime":1552052843,"ip_address":"","comment_id":73908,"utype":1}],"discussion_count":1,"race_medal":0,"score":"5846998297","product_id":100023701,"comment_content":"问题停车场真的很有必要，好多时候沟通进度阻碍的站会变成了问题讨论会。","like_count":1,"discussions":[{"author":{"id":1064938,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/gem4tlXhUUSQwNklGwJFJ09lP4yfYwTlbNgH9vw01AJiar7z9cQeehBVgLNoZhOG9l96q12EfxpFh4SBXibmSQWw/132","nickname":"宝玉","note":"","ucode":"824342714F3310","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":442332,"discussion_content":"是的，开会要高效，就不能太发散，问题停车场是一个很好的方式改进这个问题。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1552052843,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":73885,"user_name":"张驰","can_delete":false,"product_type":"c1","uid":1080050,"ip_address":"","ucode":"0ED97C2FCE6599","user_header":"https://static001.geekbang.org/account/avatar/00/10/7a/f2/6770d0a9.jpg","comment_is_top":false,"comment_ctime":1552024659,"is_pvip":false,"replies":[{"id":"26980","content":"抱歉我近期主要在国外，如果你要邀请专业人士去公司分享，给您推荐邹欣老师（微博 @程序员邹欣 ），他比我专业多了：）","user_name":"作者回复","user_name_real":"宝玉","uid":"1064938","ctime":1552052750,"ip_address":"","comment_id":73885,"utype":1}],"discussion_count":1,"race_medal":0,"score":"5846991955","product_id":100023701,"comment_content":"宝玉老师您好，公司现在正在推行工程质量落实的战略计划，有些问题想和您私下沟通下，另外请问您是在国外吗？什么时候回国方便来我们公司给大家做个分享吗？","like_count":1,"discussions":[{"author":{"id":1064938,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/gem4tlXhUUSQwNklGwJFJ09lP4yfYwTlbNgH9vw01AJiar7z9cQeehBVgLNoZhOG9l96q12EfxpFh4SBXibmSQWw/132","nickname":"宝玉","note":"","ucode":"824342714F3310","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":442322,"discussion_content":"抱歉我近期主要在国外，如果你要邀请专业人士去公司分享，给您推荐邹欣老师（微博 @程序员邹欣 ），他比我专业多了：）","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1552052750,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":73549,"user_name":"泰格杨","can_delete":false,"product_type":"c1","uid":1182151,"ip_address":"","ucode":"DF23BD9D31B536","user_header":"https://static001.geekbang.org/account/avatar/00/12/09/c7/861b4a70.jpg","comment_is_top":false,"comment_ctime":1551923602,"is_pvip":false,"replies":[{"id":"26818","content":"好问题，这个问题留给你思考一下先，因为下一篇会有解释，如果下一篇你还没有理解，可以再把你没清楚的地方留言，我会补充说明：）","user_name":"作者回复","user_name_real":"宝玉","uid":"1064938","ctime":1551930531,"ip_address":"","comment_id":73549,"utype":1}],"discussion_count":1,"race_medal":0,"score":"5846890898","product_id":100023701,"comment_content":"有个疑惑，master分支不是线上最新版本的话，要紧急修复代码快速上线怎么处理？","like_count":1,"discussions":[{"author":{"id":1064938,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/gem4tlXhUUSQwNklGwJFJ09lP4yfYwTlbNgH9vw01AJiar7z9cQeehBVgLNoZhOG9l96q12EfxpFh4SBXibmSQWw/132","nickname":"宝玉","note":"","ucode":"824342714F3310","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":442149,"discussion_content":"好问题，这个问题留给你思考一下先，因为下一篇会有解释，如果下一篇你还没有理解，可以再把你没清楚的地方留言，我会补充说明：）","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1551930531,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":73528,"user_name":"Lrwin","can_delete":false,"product_type":"c1","uid":1180503,"ip_address":"","ucode":"5E394E36419C56","user_header":"https://static001.geekbang.org/account/avatar/00/12/03/57/31595f22.jpg","comment_is_top":false,"comment_ctime":1551920793,"is_pvip":false,"replies":[{"id":"26792","content":"放到停车场问题阶段讨论，如果当时就能解决，那么就当场解决，否则会后再专门讨论。例如拉上API组的人开个小会。","user_name":"作者回复","user_name_real":"宝玉","uid":"1064938","ctime":1551924312,"ip_address":"","comment_id":73528,"utype":1}],"discussion_count":1,"race_medal":0,"score":"5846888089","product_id":100023701,"comment_content":"一个成员的发言可能是这样的：“昨天我实现了用户登录模块的前端输入框，今天打算完成后端 API 调用，在实现后端的时候需要 API 组的支持，昨天发现他们文档有问题，不知道该找谁。”<br><br>是当时就解决？还是站立会最后查看停车场问题再解决？还是会后留下相关人员再讨论解决？","like_count":1,"discussions":[{"author":{"id":1064938,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/gem4tlXhUUSQwNklGwJFJ09lP4yfYwTlbNgH9vw01AJiar7z9cQeehBVgLNoZhOG9l96q12EfxpFh4SBXibmSQWw/132","nickname":"宝玉","note":"","ucode":"824342714F3310","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":442134,"discussion_content":"放到停车场问题阶段讨论，如果当时就能解决，那么就当场解决，否则会后再专门讨论。例如拉上API组的人开个小会。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1551924312,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":357089,"user_name":"Nio","can_delete":false,"product_type":"c1","uid":1529642,"ip_address":"广东","ucode":"A1B8D3C01FB937","user_header":"https://static001.geekbang.org/account/avatar/00/17/57/2a/c6c95f37.jpg","comment_is_top":false,"comment_ctime":1662946364,"is_pvip":true,"discussion_count":0,"race_medal":1,"score":"1662946364","product_id":100023701,"comment_content":"大厂分而治之","like_count":0},{"had_liked":false,"id":349008,"user_name":"if...else...","can_delete":false,"product_type":"c1","uid":2550743,"ip_address":"","ucode":"D0565908C99695","user_header":"https://static001.geekbang.org/account/avatar/00/26/eb/d7/90391376.jpg","comment_is_top":false,"comment_ctime":1655637181,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1655637181","product_id":100023701,"comment_content":"学习了","like_count":0},{"had_liked":false,"id":292506,"user_name":"Geek1111","can_delete":false,"product_type":"c1","uid":1766540,"ip_address":"","ucode":"850F9FEE958B77","user_header":"https://wx.qlogo.cn/mmopen/vi_32/DYAIOgq83ep5Oibg4SNu2ic4j2NKcyHZicv7l2iazBiazDoiafttTjiaz5oRCw3KWfjyolp28KArqof9dHwdzhGSYkU6g/132","comment_is_top":false,"comment_ctime":1620866190,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1620866190","product_id":100023701,"comment_content":"老师，我们小团队每个岗位只有一个程序员，比如一个后台php，一个前端，一个Android和一个iOS，他们彼此不熟悉对方的语言，架构师比较了解各种语言框架，使用场景，但具体实现也不精通，这种情况下怎么做代码审查呢？","like_count":0},{"had_liked":false,"id":287405,"user_name":"。。。","can_delete":false,"product_type":"c1","uid":1035567,"ip_address":"","ucode":"6882BABE9C3D6B","user_header":"https://static001.geekbang.org/account/avatar/00/0f/cd/2f/f4adcb41.jpg","comment_is_top":false,"comment_ctime":1617933221,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1617933221","product_id":100023701,"comment_content":"敏捷开发怎么在保证每个Sprint阶段的架构设计能够跟后续的不冲突，也就是保证整个项目架构的逻辑调理性？","like_count":0},{"had_liked":false,"id":286689,"user_name":"。。。","can_delete":false,"product_type":"c1","uid":1035567,"ip_address":"","ucode":"6882BABE9C3D6B","user_header":"https://static001.geekbang.org/account/avatar/00/0f/cd/2f/f4adcb41.jpg","comment_is_top":false,"comment_ctime":1617501758,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1617501758","product_id":100023701,"comment_content":"如果在做的 Ticket 跟 To do 中的Ticket自己感觉有冲突呢，这些 Ticket 又是谁提的，合理与否？","like_count":0},{"had_liked":false,"id":218721,"user_name":"北纬32°","can_delete":false,"product_type":"c1","uid":1014570,"ip_address":"","ucode":"66D21E24CBF468","user_header":"https://static001.geekbang.org/account/avatar/00/0f/7b/2a/73495eee.jpg","comment_is_top":false,"comment_ctime":1589859046,"is_pvip":false,"replies":[{"id":"80837","content":"感谢提醒，已经让编辑帮忙更换了，你可以使用这个链接：https:&#47;&#47;zhuanlan.zhihu.com&#47;p&#47;34024621","user_name":"作者回复","user_name_real":"宝玉","uid":"1064938","ctime":1589867226,"ip_address":"","comment_id":218721,"utype":1}],"discussion_count":2,"race_medal":0,"score":"1589859046","product_id":100023701,"comment_content":"敏捷开发的根本矛盾是什么？从业十余年的工程师在思考，链接失效了","like_count":0,"discussions":[{"author":{"id":1064938,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/gem4tlXhUUSQwNklGwJFJ09lP4yfYwTlbNgH9vw01AJiar7z9cQeehBVgLNoZhOG9l96q12EfxpFh4SBXibmSQWw/132","nickname":"宝玉","note":"","ucode":"824342714F3310","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":495553,"discussion_content":"感谢提醒，已经让编辑帮忙更换了，你可以使用这个链接：https://zhuanlan.zhihu.com/p/34024621","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1589867226,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1014570,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/7b/2a/73495eee.jpg","nickname":"北纬32°","note":"","ucode":"66D21E24CBF468","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":269110,"discussion_content":"好的，谢谢！","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1589867771,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":163191,"user_name":"丁丁历险记","can_delete":false,"product_type":"c1","uid":1661704,"ip_address":"","ucode":"A43829E454C067","user_header":"https://static001.geekbang.org/account/avatar/00/19/5b/08/b0b0db05.jpg","comment_is_top":false,"comment_ctime":1576668186,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1576668186","product_id":100023701,"comment_content":"讲个笑话，用禅道可以敏捷。<br>","like_count":0},{"had_liked":false,"id":81542,"user_name":"小先生","can_delete":false,"product_type":"c1","uid":1055214,"ip_address":"","ucode":"E5F2052E0323C0","user_header":"https://static001.geekbang.org/account/avatar/00/10/19/ee/e395a35e.jpg","comment_is_top":false,"comment_ctime":1553939222,"is_pvip":false,"replies":[{"id":"29551","content":"👍","user_name":"作者回复","user_name_real":"宝玉","uid":"1064938","ctime":1553964628,"ip_address":"","comment_id":81542,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1553939222","product_id":100023701,"comment_content":"今日得到<br>PR 和 CI 保障代码质量。<br>站立会议时，将新问题放到问题停车场。稍后讨论或者新开会议。这样可以避免影响当前会议进程<br>","like_count":0,"discussions":[{"author":{"id":1064938,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/gem4tlXhUUSQwNklGwJFJ09lP4yfYwTlbNgH9vw01AJiar7z9cQeehBVgLNoZhOG9l96q12EfxpFh4SBXibmSQWw/132","nickname":"宝玉","note":"","ucode":"824342714F3310","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":445245,"discussion_content":"👍","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1553964628,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":77994,"user_name":"石来运转","can_delete":false,"product_type":"c1","uid":1146129,"ip_address":"","ucode":"C3DA79A064F527","user_header":"https://static001.geekbang.org/account/avatar/00/11/7d/11/8c3567a0.jpg","comment_is_top":false,"comment_ctime":1553051278,"is_pvip":false,"replies":[{"id":"28468","content":"你可以思考下如何作出有效的调整，并且可以在项目回顾会上提出合理的建议，也许可以逐步改变呢。","user_name":"作者回复","user_name_real":"宝玉","uid":"1064938","ctime":1553056565,"ip_address":"","comment_id":77994,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1553051278","product_id":100023701,"comment_content":"公司实施的敏捷开发，仅仅流于形式，有时候反而会影响开发进度。无法灵活的安排任务。","like_count":0,"discussions":[{"author":{"id":1064938,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/gem4tlXhUUSQwNklGwJFJ09lP4yfYwTlbNgH9vw01AJiar7z9cQeehBVgLNoZhOG9l96q12EfxpFh4SBXibmSQWw/132","nickname":"宝玉","note":"","ucode":"824342714F3310","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":443927,"discussion_content":"你可以思考下如何作出有效的调整，并且可以在项目回顾会上提出合理的建议，也许可以逐步改变呢。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1553056565,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":73960,"user_name":"起而行","can_delete":false,"product_type":"c1","uid":1131399,"ip_address":"","ucode":"4F116B0B740776","user_header":"https://static001.geekbang.org/account/avatar/00/11/43/87/7604d7a4.jpg","comment_is_top":false,"comment_ctime":1552046376,"is_pvip":true,"replies":[{"id":"26987","content":"开会超时是个很讨厌的问题，有时候可以提议一下把问题放到后面再讨论。<br><br>代码Review是个很好的方式，比如对我来说，如果我知道有人要Review我的代码，也会格外认真仔细一些。","user_name":"作者回复","user_name_real":"宝玉","uid":"1064938","ctime":1552053999,"ip_address":"","comment_id":73960,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1552046376","product_id":100023701,"comment_content":"记得在大学的项目组，开会是个问题。基本流程是上来老师检查每个人的程序效果。检查后分配下一周的任务，有细节问题找特定的人讨论，共性问题一起讨论。<br>然而，在检查程序效果的时候出现问题，则会深入到细节，当场解决问题。这样就导致了开会时间变长。<br><br>不仅如此，只看效果不看代码也是个问题，代码规范如变量名，经常出现错乱。我认为codeReview真的是很好的方法，不仅团队效率，也能提高个人编程能力，对自己的程序像自己的孩子一样负责","like_count":0,"discussions":[{"author":{"id":1064938,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/gem4tlXhUUSQwNklGwJFJ09lP4yfYwTlbNgH9vw01AJiar7z9cQeehBVgLNoZhOG9l96q12EfxpFh4SBXibmSQWw/132","nickname":"宝玉","note":"","ucode":"824342714F3310","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":442360,"discussion_content":"开会超时是个很讨厌的问题，有时候可以提议一下把问题放到后面再讨论。\n\n代码Review是个很好的方式，比如对我来说，如果我知道有人要Review我的代码，也会格外认真仔细一些。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1552053999,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":73932,"user_name":"alva_xu","can_delete":false,"product_type":"c1","uid":1003946,"ip_address":"","ucode":"1D5B592B3A780F","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTLPxmcBiaXpTjuyicHJJwVECstJPyHJj8ZMOEdjz5N3rQzTkR4vTF3bpNXLm4MftPNFPI6ibsVRN5FbA/132","comment_is_top":false,"comment_ctime":1552037256,"is_pvip":false,"replies":[{"id":"26988","content":"给你微博推荐了：<br>https:&#47;&#47;www.weibo.com&#47;1727858283&#47;Hk0VH9t6Y","user_name":"作者回复","user_name_real":"宝玉","uid":"1064938","ctime":1552056296,"ip_address":"","comment_id":73932,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1552037256","product_id":100023701,"comment_content":"老师，我在博客上发了一篇文章，希望能得到你的点评。《从code&amp;fix 到敏捷开发，软件开发模式的变迁》<br>https:&#47;&#47;blog.csdn.net&#47;alva_xu&#47;article&#47;details&#47;88355218","like_count":0,"discussions":[{"author":{"id":1064938,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/gem4tlXhUUSQwNklGwJFJ09lP4yfYwTlbNgH9vw01AJiar7z9cQeehBVgLNoZhOG9l96q12EfxpFh4SBXibmSQWw/132","nickname":"宝玉","note":"","ucode":"824342714F3310","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":442344,"discussion_content":"给你微博推荐了：\nhttps://www.weibo.com/1727858283/Hk0VH9t6Y","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1552056296,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]}]}