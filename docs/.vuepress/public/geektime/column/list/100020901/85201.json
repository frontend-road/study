{"id":85201,"title":"47 | 案例篇：服务器总是时不时丢包，我该怎么办？（上）","content":"<p>你好，我是倪朋飞。</p><p>上一节，我们梳理了，应用程序容器化后性能下降的分析方法。一起先简单回顾下。</p><p>容器利用 Linux 内核提供的命名空间技术，将不同应用程序的运行隔离起来，并用统一的镜像，来管理应用程序的依赖环境。这为应用程序的管理和维护，带来了极大的便捷性，并进一步催生了微服务、云原生等新一代技术架构。</p><p>不过，虽说有很多优势，但容器化也会对应用程序的性能带来一定影响。比如，上一节我们一起分析的 Java 应用，就容易发生启动过慢、运行一段时间后 OOM 退出等问题。当你碰到这种问题时，不要慌，我们前面四大基础模块中的各种思路，都依然适用。</p><p>实际上，我们专栏中的很多案例都在容器中运行。容器化后，应用程序会通过命名空间进行隔离。所以，你在分析时，不要忘了结合命名空间、cgroups、iptables 等来综合分析。比如：</p><ul>\n<li>\n<p>cgroups 会影响容器应用的运行；</p>\n</li>\n<li>\n<p>iptables 中的 NAT，会影响容器的网络性能；</p>\n</li>\n<li>\n<p>叠加文件系统，会影响应用的 I/O 性能等。</p>\n</li>\n</ul><p>关于 NAT 的影响，我在网络模块的 <a href=\"https://time.geekbang.org/column/article/83189\">如何优化NAT性能</a>  文章中，已经为你介绍了很多优化思路。今天，我们一起来看另一种情况，也就是丢包的分析方法。</p><p>所谓丢包，是指在网络数据的收发过程中，由于种种原因，数据包还没传输到应用程序中，就被丢弃了。这些被丢弃包的数量，除以总的传输包数，也就是我们常说的<strong>丢包率</strong>。丢包率是网络性能中最核心的指标之一。</p><!-- [[[read_end]]] --><p>丢包通常会带来严重的性能下降，特别是对 TCP 来说，丢包通常意味着网络拥塞和重传，进而还会导致网络延迟增大、吞吐降低。</p><p>接下来，我就以最常用的反向代理服务器 Nginx 为例，带你一起看看，如何分析网络丢包的问题。由于内容比较多，这个案例将分为上下两篇来讲解，今天我们先看第一部分内容。</p><h2>案例准备</h2><p>今天的案例需要用到两台虚拟机，还是基于 Ubuntu 18.04，同样适用于其他的 Linux 系统。我使用的案例环境如下所示：</p><ul>\n<li>\n<p>机器配置：2 CPU，8GB 内存。</p>\n</li>\n<li>\n<p>预先安装 docker、curl、hping3 等工具，如 apt install docker.io curl hping3。</p>\n</li>\n</ul><p>这些工具，我们在前面的案例中已经多次使用，这里就不再重复介绍。</p><p>现在，打开两个终端，分别登录到这两台虚拟机中，并安装上述工具。</p><p>注意，以下所有命令都默认以 root 用户运行，如果你用普通用户身份登陆系统，请运行 sudo su root 命令，切换到 root 用户。</p><blockquote>\n<p>如果安装过程有问题，你可以先上网搜索解决，实在解决不了的，记得在留言区向我提问。</p>\n</blockquote><p>到这里，准备工作就完成了。接下来，我们正式进入操作环节。</p><h2>案例分析</h2><p>我们今天要分析的案例是一个 Nginx 应用，如下图所示，hping3 和 curl 是 Nginx 的客户端。</p><p><img src=\"https://static001.geekbang.org/resource/image/7d/1b/7d8cb9a2ce1c3bad4d74f46a632f671b.png?wh=1632*1032\" alt=\"\"></p><p>为了方便你运行，我已经把它打包成了一个 Docker 镜像，并推送到 Docker Hub 中。你可以直接按照下面的步骤来运行它。</p><p>在终端一中执行下面的命令，启动 Nginx 应用，并在80端口监听。如果一切正常，你应该可以看到如下的输出：</p><pre><code>$ docker run --name nginx --hostname nginx --privileged -p 80:80 -itd feisky/nginx:drop\ndae0202cc27e5082b282a6aeeb1398fcec423c642e63322da2a97b9ebd7538e0\n</code></pre><p>然后，执行 docker ps 命令，查询容器的状态，你会发现容器已经处于运行状态（Up）了：</p><pre><code>$ docker ps\nCONTAINER ID        IMAGE               COMMAND             CREATED             STATUS              PORTS                NAMES\ndae0202cc27e        feisky/nginx:drop   &quot;/start.sh&quot;         4 minutes ago       Up 4 minutes        0.0.0.0:80-&gt;80/tcp   nginx\n</code></pre><p>不过，从 docker ps 的输出，我们只能知道容器处于运行状态，至于 Nginx 是否可以正常处理外部请求，还需要进一步的确认。</p><p>接着，我们切换到终端二中，执行下面的 hping3 命令，进一步验证 Nginx 是不是真的可以正常访问了。注意，这里我没有使用 ping，是因为 ping 基于 ICMP 协议，而 Nginx 使用的是 TCP 协议。</p><pre><code># -c表示发送10个请求，-S表示使用TCP SYN，-p指定端口为80\n$ hping3 -c 10 -S -p 80 192.168.0.30\nHPING 192.168.0.30 (eth0 192.168.0.30): S set, 40 headers + 0 data bytes\nlen=44 ip=192.168.0.30 ttl=63 DF id=0 sport=80 flags=SA seq=3 win=5120 rtt=7.5 ms\nlen=44 ip=192.168.0.30 ttl=63 DF id=0 sport=80 flags=SA seq=4 win=5120 rtt=7.4 ms\nlen=44 ip=192.168.0.30 ttl=63 DF id=0 sport=80 flags=SA seq=5 win=5120 rtt=3.3 ms\nlen=44 ip=192.168.0.30 ttl=63 DF id=0 sport=80 flags=SA seq=7 win=5120 rtt=3.0 ms\nlen=44 ip=192.168.0.30 ttl=63 DF id=0 sport=80 flags=SA seq=6 win=5120 rtt=3027.2 ms\n\n--- 192.168.0.30 hping statistic ---\n10 packets transmitted, 5 packets received, 50% packet loss\nround-trip min/avg/max = 3.0/609.7/3027.2 ms\n</code></pre><p>从 hping3 的输出中，我们可以发现，发送了 10 个请求包，却只收到了 5 个回复，50% 的包都丢了。再观察每个请求的 RTT 可以发现，RTT 也有非常大的波动变化，小的时候只有 3ms，而大的时候则有 3s。</p><p>根据这些输出，我们基本能判断，已经发生了丢包现象。可以猜测，3s 的 RTT ，很可能是因为丢包后重传导致的。那到底是哪里发生了丢包呢？</p><p>排查之前，我们可以回忆一下 Linux 的网络收发流程，先从理论上分析，哪里有可能会发生丢包。你不妨拿出手边的笔和纸，边回忆边在纸上梳理，思考清楚再继续下面的内容。</p><p>在这里，为了帮你理解网络丢包的原理，我画了一张图，你可以保存并打印出来使用：</p><p><img src=\"https://static001.geekbang.org/resource/image/dd/fd/dd5b4050d555b1c23362456e357dfffd.png?wh=4544*2680\" alt=\"\"></p><p>从图中你可以看出，可能发生丢包的位置，实际上贯穿了整个网络协议栈。换句话说，全程都有丢包的可能。比如我们从下往上看：</p><ul>\n<li>\n<p>在两台 VM 连接之间，可能会发生传输失败的错误，比如网络拥塞、线路错误等；</p>\n</li>\n<li>\n<p>在网卡收包后，环形缓冲区可能会因为溢出而丢包；</p>\n</li>\n<li>\n<p>在链路层，可能会因为网络帧校验失败、QoS 等而丢包；</p>\n</li>\n<li>\n<p>在 IP 层，可能会因为路由失败、组包大小超过 MTU 等而丢包；</p>\n</li>\n<li>\n<p>在传输层，可能会因为端口未监听、资源占用超过内核限制等而丢包；</p>\n</li>\n<li>\n<p>在套接字层，可能会因为套接字缓冲区溢出而丢包；</p>\n</li>\n<li>\n<p>在应用层，可能会因为应用程序异常而丢包；</p>\n</li>\n<li>\n<p>此外，如果配置了 iptables 规则，这些网络包也可能因为 iptables 过滤规则而丢包。</p>\n</li>\n</ul><p>当然，上面这些问题，还有可能同时发生在通信的两台机器中。不过，由于我们没对 VM2 做任何修改，并且 VM2 也只运行了一个最简单的 hping3 命令，这儿不妨假设它是没有问题的。</p><p>为了简化整个排查过程，我们还可以进一步假设， VM1 的网络和内核配置也没问题。这样一来，有可能发生问题的位置，就都在容器内部了。</p><p>现在我们切换回终端一，执行下面的命令，进入容器的终端中：</p><pre><code>$ docker exec -it nginx bash\nroot@nginx:/#\n</code></pre><p>在这里简单说明一下，接下来的所有分析，前面带有 <em>root@nginx:/#</em> 的操作，都表示在容器中进行。</p><blockquote>\n<p>注意：实际环境中，容器内部和外部都有可能发生问题。不过不要担心，容器内、外部的分析步骤和思路都是一样的，只不过要花更多的时间而已。</p>\n</blockquote><p>那么， 接下来，我们就可以从协议栈中，逐层排查丢包问题。</p><h3>链路层</h3><p>首先，来看最底下的链路层。当缓冲区溢出等原因导致网卡丢包时，Linux 会在网卡收发数据的统计信息中，记录下收发错误的次数。</p><p>你可以通过 ethtool 或者 netstat ，来查看网卡的丢包记录。比如，可以在容器中执行下面的命令，查看丢包情况：</p><pre><code>root@nginx:/# netstat -i\nKernel Interface table\nIface      MTU    RX-OK RX-ERR RX-DRP RX-OVR    TX-OK TX-ERR TX-DRP TX-OVR Flg\neth0       100       31      0      0 0             8      0      0      0 BMRU\nlo       65536        0      0      0 0             0      0      0      0 LRU\n</code></pre><p>输出中的 RX-OK、RX-ERR、RX-DRP、RX-OVR ，分别表示接收时的总包数、总错误数、进入Ring Buffer 后因其他原因（如内存不足）导致的丢包数以及 Ring Buffer 溢出导致的丢包数。</p><p>TX-OK、TX-ERR、TX-DRP、TX-OVR 也代表类似的含义，只不过是指发送时对应的各个指标。</p><blockquote>\n<p>注意，由于 Docker 容器的虚拟网卡，实际上是一对 veth pair，一端接入容器中用作 eth0，另一端在主机中接入 docker0 网桥中。veth 驱动并没有实现网络统计的功能，所以使用 ethtool -S 命令，无法得到网卡收发数据的汇总信息。</p>\n</blockquote><p>从这个输出中，我们没有发现任何错误，说明容器的虚拟网卡没有丢包。不过要注意，如果用 tc 等工具配置了 QoS，那么 tc 规则导致的丢包，就不会包含在网卡的统计信息中。</p><p>所以接下来，我们还要检查一下 eth0 上是否配置了 tc 规则，并查看有没有丢包。我们继续容器终端中，执行下面的 tc 命令，不过这次注意添加 -s 选项，以输出统计信息：</p><pre><code>root@nginx:/# tc -s qdisc show dev eth0\nqdisc netem 800d: root refcnt 2 limit 1000 loss 30%\n Sent 432 bytes 8 pkt (dropped 4, overlimits 0 requeues 0)\n backlog 0b 0p requeues 0\n</code></pre><p>从 tc 的输出中可以看到， eth0 上面配置了一个网络模拟排队规则（qdisc netem），并且配置了丢包率为 30%（loss 30%）。再看后面的统计信息，发送了 8 个包，但是丢了 4 个。</p><p>看来，应该就是这里，导致 Nginx 回复的响应包，被 netem 模块给丢了。</p><p>既然发现了问题，解决方法也就很简单了，直接删掉 netem 模块就可以了。我们可以继续在容器终端中，执行下面的命令，删除 tc 中的 netem 模块：</p><pre><code>root@nginx:/# tc qdisc del dev eth0 root netem loss 30%\n</code></pre><p>删除后，问题到底解决了没？我们切换到终端二中，重新执行刚才的 hping3 命令，看看现在还有没有问题：</p><pre><code>$ hping3 -c 10 -S -p 80 192.168.0.30\nHPING 192.168.0.30 (eth0 192.168.0.30): S set, 40 headers + 0 data bytes\nlen=44 ip=192.168.0.30 ttl=63 DF id=0 sport=80 flags=SA seq=0 win=5120 rtt=7.9 ms\nlen=44 ip=192.168.0.30 ttl=63 DF id=0 sport=80 flags=SA seq=2 win=5120 rtt=1003.8 ms\nlen=44 ip=192.168.0.30 ttl=63 DF id=0 sport=80 flags=SA seq=5 win=5120 rtt=7.6 ms\nlen=44 ip=192.168.0.30 ttl=63 DF id=0 sport=80 flags=SA seq=6 win=5120 rtt=7.4 ms\nlen=44 ip=192.168.0.30 ttl=63 DF id=0 sport=80 flags=SA seq=9 win=5120 rtt=3.0 ms\n\n--- 192.168.0.30 hping statistic ---\n10 packets transmitted, 5 packets received, 50% packet loss\nround-trip min/avg/max = 3.0/205.9/1003.8 ms\n</code></pre><p>不幸的是，从 hping3 的输出中，我们可以看到，跟前面现象一样，还是 50% 的丢包；RTT 的波动也仍旧很大，从 3ms 到 1s。</p><p>显然，问题还是没解决，丢包还在继续发生。不过，既然链路层已经排查完了，我们就继续向上层分析，看看网络层和传输层有没有问题。</p><h3>网络层和传输层</h3><p>我们知道，在网络层和传输层中，引发丢包的因素非常多。不过，其实想确认是否丢包，是非常简单的事，因为 Linux 已经为我们提供了各个协议的收发汇总情况。</p><p>我们继续在容器终端中，执行下面的 netstat -s 命令，就可以看到协议的收发汇总，以及错误信息了：</p><pre><code>root@nginx:/# netstat -s\nIp:\n    Forwarding: 1\t\t\t\t\t//开启转发\n    31 total packets received\t\t//总收包数\n    0 forwarded\t\t\t\t\t\t//转发包数\n    0 incoming packets discarded\t//接收丢包数\n    25 incoming packets delivered\t//接收的数据包数\n    15 requests sent out\t\t\t//发出的数据包数\nIcmp:\n    0 ICMP messages received\t\t//收到的ICMP包数\n    0 input ICMP message failed\t\t//收到ICMP失败数\n    ICMP input histogram:\n    0 ICMP messages sent\t\t\t//ICMP发送数\n    0 ICMP messages failed\t\t\t//ICMP失败数\n    ICMP output histogram:\nTcp:\n    0 active connection openings\t//主动连接数\n    0 passive connection openings\t//被动连接数\n    11 failed connection attempts\t//失败连接尝试数\n    0 connection resets received\t//接收的连接重置数\n    0 connections established\t\t//建立连接数\n    25 segments received\t\t\t//已接收报文数\n    21 segments sent out\t\t\t//已发送报文数\n    4 segments retransmitted\t\t//重传报文数\n    0 bad segments received\t\t\t//错误报文数\n    0 resets sent\t\t\t\t\t//发出的连接重置数\nUdp:\n    0 packets received\n    ...\nTcpExt:\n    11 resets received for embryonic SYN_RECV sockets\t//半连接重置数\n    0 packet headers predicted\n    TCPTimeouts: 7\t\t//超时数\n    TCPSynRetrans: 4\t//SYN重传数\n\t...\n</code></pre><p>netstat 汇总了 IP、ICMP、TCP、UDP 等各种协议的收发统计信息。不过，我们的目的是排查丢包问题，所以这里主要观察的是错误数、丢包数以及重传数。</p><p>根据上面的输出，你可以看到，只有 TCP 协议发生了丢包和重传，分别是：</p><ul>\n<li>\n<p>11 次连接失败重试（11 failed connection attempts）</p>\n</li>\n<li>\n<p>4 次重传（4 segments retransmitted）</p>\n</li>\n<li>\n<p>11 次半连接重置（11 resets received for embryonic SYN_RECV sockets）</p>\n</li>\n<li>\n<p>4 次 SYN 重传（TCPSynRetrans）</p>\n</li>\n<li>\n<p>7 次超时（TCPTimeouts）</p>\n</li>\n</ul><p>这个结果告诉我们，TCP 协议有多次超时和失败重试，并且主要错误是半连接重置。换句话说，主要的失败，都是三次握手失败。</p><p>不过，虽然在这儿看到了这么多失败，但具体失败的根源还是无法确定。所以，我们还需要继续顺着协议栈来分析。接下来的几层又该如何分析呢？你不妨自己先来思考操作一下，下一节我们继续来一起探讨。</p><h2>小结</h2><p>网络丢包，通常会带来严重的性能下降，特别是对 TCP 来说，丢包通常意味着网络拥塞和重传，进一步还会导致网络延迟增大、吞吐降低。</p><p>今天的这个案例，我们学会了如何从链路层、网络层和传输层等入手，分析网络丢包的问题。不过，案例最后，我们还没有找出最终的性能瓶颈，下一节，我将继续为你讲解。</p><h2>思考</h2><p>最后，给你留一个思考题，也是案例最后提到的问题。</p><p>今天我们只分析了链路层、网络层以及传输层等。而根据 TCP/IP 协议栈和 Linux 网络收发原理，还有很多我们没分析到的地方。那么，接下来，我们又该如何分析，才能破获这个案例，找出“真凶”呢？</p><p>欢迎在留言区和我讨论，也欢迎把这篇文章分享给你的同事、朋友。我们一起在实战中演练，在交流中进步。</p><p></p>","comments":[{"had_liked":false,"id":75560,"user_name":"ninuxer","can_delete":false,"product_type":"c1","uid":1243135,"ip_address":"","ucode":"5394ADAF2667D6","user_header":"https://wx.qlogo.cn/mmopen/vi_32/PiajxSqBRaEKQMM4m7NHuicr55aRiblTSEWIYe0QqbpyHweaoAbG7j2v7UUElqqeP3Ihrm3UfDPDRb1Hv8LvPwXqA/132","comment_is_top":false,"comment_ctime":1552435703,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"40207141367","product_id":100020901,"comment_content":"打卡day50<br>还没来得及实践，思路是，在服务端用tcpdump抓包，然后导入wireshark分析～","like_count":10},{"had_liked":false,"id":91227,"user_name":"无名老卒","can_delete":false,"product_type":"c1","uid":1348261,"ip_address":"","ucode":"48874CE670E122","user_header":"","comment_is_top":false,"comment_ctime":1556937258,"is_pvip":false,"replies":[{"id":"33131","content":"👍","user_name":"作者回复","comment_id":91227,"uid":"1001282","ip_address":"","utype":1,"ctime":1557327419,"user_name_real":"倪朋飞"}],"discussion_count":1,"race_medal":0,"score":"35916675626","product_id":100020901,"comment_content":"经过一夜的思考，终于搞明白了，使用iptables做了限制，删除这2条规则就正常Ping了。<br><br>root@nginx:&#47;# iptables -nvL<br>Chain INPUT (policy ACCEPT 84 packets, 3472 bytes)<br> pkts bytes target     prot opt in     out     source               destination         <br>   51  2116 DROP       all  --  *      *       0.0.0.0&#47;0            0.0.0.0&#47;0            statistic mode random probability 0.29999999981<br><br>Chain FORWARD (policy ACCEPT 0 packets, 0 bytes)<br> pkts bytes target     prot opt in     out     source               destination         <br><br>Chain OUTPUT (policy ACCEPT 65 packets, 2960 bytes)<br> pkts bytes target     prot opt in     out     source               destination         <br>   38  1716 DROP       all  --  *      *       0.0.0.0&#47;0            0.0.0.0&#47;0            statistic mode random probability 0.29999999981","like_count":9,"discussions":[{"author":{"id":1001282,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/47/42/5b55bd1a.jpg","nickname":"倪朋飞","note":"","ucode":"F0FAC195CDE7AC","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":448850,"discussion_content":"👍","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1557327419,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":233777,"user_name":"陈靖","can_delete":false,"product_type":"c1","uid":1147418,"ip_address":"","ucode":"8C9596A54DB5C8","user_header":"https://static001.geekbang.org/account/avatar/00/11/82/1a/64ec25ff.jpg","comment_is_top":false,"comment_ctime":1594446729,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"27364250505","product_id":100020901,"comment_content":"在实际场景中，使用 netstat -s 的输出报告查看，可能混杂其他一些服务的输出，一些错误也比较混杂，所以这种整个系统的输出报告，参考价值可能不大","like_count":7},{"had_liked":false,"id":76169,"user_name":"xfan","can_delete":false,"product_type":"c1","uid":1315147,"ip_address":"","ucode":"48ED8D498D7F56","user_header":"https://static001.geekbang.org/account/avatar/00/14/11/4b/fa64f061.jpg","comment_is_top":false,"comment_ctime":1552542814,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"18732411998","product_id":100020901,"comment_content":"有可能nginx配置问题","like_count":4},{"had_liked":false,"id":76791,"user_name":"亚洲-凯撒大帝","can_delete":false,"product_type":"c1","uid":1123650,"ip_address":"","ucode":"2C9E4C60896B6B","user_header":"https://static001.geekbang.org/account/avatar/00/11/25/42/72adcb14.jpg","comment_is_top":false,"comment_ctime":1552708674,"is_pvip":false,"replies":[{"id":"28065","content":"这是从proc文件系统读出来的，重置只能重启","user_name":"作者回复","comment_id":76791,"uid":"1001282","ip_address":"","utype":1,"ctime":1552751031,"user_name_real":"倪朋飞"}],"discussion_count":1,"race_medal":0,"score":"10142643266","product_id":100020901,"comment_content":"netstat -s 的数据怎么重置呢","like_count":2,"discussions":[{"author":{"id":1001282,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/47/42/5b55bd1a.jpg","nickname":"倪朋飞","note":"","ucode":"F0FAC195CDE7AC","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":443448,"discussion_content":"这是从proc文件系统读出来的，重置只能重启","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1552751031,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":75732,"user_name":"日拱一卒","can_delete":false,"product_type":"c1","uid":1056944,"ip_address":"","ucode":"3BDFD6F473862C","user_header":"https://static001.geekbang.org/account/avatar/00/10/20/b0/0a1551c4.jpg","comment_is_top":false,"comment_ctime":1552460503,"is_pvip":false,"replies":[{"id":"28046","content":"请参考文中（47和48篇）的思路分析","user_name":"作者回复","comment_id":75732,"uid":"1001282","ip_address":"","utype":1,"ctime":1552749134,"user_name_real":"倪朋飞"}],"discussion_count":1,"race_medal":0,"score":"10142395095","product_id":100020901,"comment_content":"遇到过  ingress  envoy -&gt;  某组应用容器  时不时的容器访问 503的问题，  抓包放 wireshark 分析，发现有大量的 dup ack。  <br>2个容器的机器指标正常， pod 指标正常。<br><br>至今不知道原因， 升级了操作系统内核后， 问题有所缓解，但是没有根本解决问题。  作者可否提供个思路？<br>","like_count":2,"discussions":[{"author":{"id":1001282,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/47/42/5b55bd1a.jpg","nickname":"倪朋飞","note":"","ucode":"F0FAC195CDE7AC","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":443005,"discussion_content":"请参考文中（47和48篇）的思路分析","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1552749134,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":75706,"user_name":"Frank","can_delete":false,"product_type":"c1","uid":1111985,"ip_address":"","ucode":"9DADD72C193296","user_header":"https://static001.geekbang.org/account/avatar/00/10/f7/b1/982ea185.jpg","comment_is_top":false,"comment_ctime":1552453573,"is_pvip":true,"replies":[{"id":"28044","content":"扩展TCP指标，相对于Tcp部分包含更多的指标","user_name":"作者回复","comment_id":75706,"uid":"1001282","ip_address":"","utype":1,"ctime":1552748962,"user_name_real":"倪朋飞"}],"discussion_count":1,"race_medal":0,"score":"5847420869","product_id":100020901,"comment_content":"老师 TcpExt: 表示什么项目哦？","like_count":0,"discussions":[{"author":{"id":1001282,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/47/42/5b55bd1a.jpg","nickname":"倪朋飞","note":"","ucode":"F0FAC195CDE7AC","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":442991,"discussion_content":"扩展TCP指标，相对于Tcp部分包含更多的指标","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1552748962,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":193524,"user_name":"Richard","can_delete":false,"product_type":"c1","uid":1316758,"ip_address":"","ucode":"893F958B9DD161","user_header":"https://static001.geekbang.org/account/avatar/00/14/17/96/846fc11b.jpg","comment_is_top":false,"comment_ctime":1584923564,"is_pvip":false,"discussion_count":1,"race_medal":0,"score":"1584923564","product_id":100020901,"comment_content":"老师，netstat –s是一个启动后的累计值，那么在出现问题后再去查看这个累计值，其结果并不具备参考性，那么除了手动统计一段时间内的快照，有没有其它便捷的方法快速的统计出问题时间段内的数据呢？","like_count":0,"discussions":[{"author":{"id":1167662,"avatar":"https://static001.geekbang.org/account/avatar/00/11/d1/2e/d531b29b.jpg","nickname":"图吐兔","note":"","ucode":"2395E9506CBE0E","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":291458,"discussion_content":"watch -d netstat -s突出变化的数据，或许是个思路","likes_number":11,"is_delete":false,"is_hidden":false,"ctime":1594823191,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":85431,"user_name":"如果","can_delete":false,"product_type":"c1","uid":1320638,"ip_address":"","ucode":"138A3EEEE50850","user_header":"","comment_is_top":false,"comment_ctime":1555059587,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1555059587","product_id":100020901,"comment_content":"DAY47.打卡","like_count":0},{"had_liked":false,"id":78461,"user_name":"青石","can_delete":false,"product_type":"c1","uid":1215531,"ip_address":"","ucode":"B0056AD6453322","user_header":"https://static001.geekbang.org/account/avatar/00/12/8c/2b/3ab96998.jpg","comment_is_top":false,"comment_ctime":1553154228,"is_pvip":false,"replies":[{"id":"28756","content":"我们这是丢包问题，只需要去分析netstat中有丢包的位置就可以了","user_name":"作者回复","comment_id":78461,"uid":"1001282","ip_address":"","utype":1,"ctime":1553317755,"user_name_real":"倪朋飞"}],"discussion_count":1,"race_medal":0,"score":"1553154228","product_id":100020901,"comment_content":"TCP缓冲区在溢出后，数据会被阻塞并不会丢弃，从netstat可以看到Recv-Q的值很大。<br>UDP缓冲区溢出，直接丢弃报文，从netstat -s可以看到UDP有大量的packet receive errors错误。<br><br>看了47、48节，并没有从套接字层排查问题是因为使用TCP协议的原因吗？","like_count":1,"discussions":[{"author":{"id":1001282,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/47/42/5b55bd1a.jpg","nickname":"倪朋飞","note":"","ucode":"F0FAC195CDE7AC","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":444102,"discussion_content":"我们这是丢包问题，只需要去分析netstat中有丢包的位置就可以了","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1553317755,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":77971,"user_name":"cheyang","can_delete":false,"product_type":"c1","uid":1315085,"ip_address":"","ucode":"D1A13DF0B9A2A7","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTK0lekib0VOFiaylqrYiaYgSVSMJ9ZyLymaxHpL9hWIUvEypxGhrDkJ2CSQUSwKaopuZFpRvRCIUicghA/132","comment_is_top":false,"comment_ctime":1553047365,"is_pvip":false,"replies":[{"id":"28776","content":"ss 查看SYN-SENT状态的连接；或者，使用tcpdump抓包","user_name":"作者回复","comment_id":77971,"uid":"1001282","ip_address":"","utype":1,"ctime":1553319368,"user_name_real":"倪朋飞"}],"discussion_count":1,"race_medal":0,"score":"1553047365","product_id":100020901,"comment_content":"netstat -s中的failed connection attempts的ip源有办法定位到吗？","like_count":1,"discussions":[{"author":{"id":1001282,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/47/42/5b55bd1a.jpg","nickname":"倪朋飞","note":"","ucode":"F0FAC195CDE7AC","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":443917,"discussion_content":"ss 查看SYN-SENT状态的连接；或者，使用tcpdump抓包","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1553319368,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":75830,"user_name":"H","can_delete":false,"product_type":"c1","uid":1445382,"ip_address":"","ucode":"DC6E0CE95E5B64","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/oW1lwRgwgBaQk0ZA33fy4XE0rqF7NiaRupV89lqzib02SA5hwFRUicA5OiaA6TYaxKubnVAEFJnJ5olq8xmcJLpcwg/132","comment_is_top":false,"comment_ctime":1552477862,"is_pvip":false,"replies":[{"id":"28051","content":"这儿指标太多了，大部分还都是完整的英语句子，应该很好理解。如果有哪个不懂的，可以单独提出来","user_name":"作者回复","comment_id":75830,"uid":"1001282","ip_address":"","utype":1,"ctime":1552749948,"user_name_real":"倪朋飞"}],"discussion_count":1,"race_medal":0,"score":"1552477862","product_id":100020901,"comment_content":"老师能详细解释下一TcpExt 里的指标分别是代表什么意思吗？","like_count":1,"discussions":[{"author":{"id":1001282,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/47/42/5b55bd1a.jpg","nickname":"倪朋飞","note":"","ucode":"F0FAC195CDE7AC","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":443048,"discussion_content":"这儿指标太多了，大部分还都是完整的英语句子，应该很好理解。如果有哪个不懂的，可以单独提出来","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1552749948,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":75739,"user_name":"我来也","can_delete":false,"product_type":"c1","uid":1205253,"ip_address":"","ucode":"773D6104F56767","user_header":"https://static001.geekbang.org/account/avatar/00/12/64/05/6989dce6.jpg","comment_is_top":false,"comment_ctime":1552461626,"is_pvip":false,"replies":[{"id":"28047","content":"你这容器中mtu只有100是更狠呀😊<br><br>DUP表示收到了重复包","user_name":"作者回复","comment_id":75739,"uid":"1001282","ip_address":"","utype":1,"ctime":1552749315,"user_name_real":"倪朋飞"}],"discussion_count":2,"race_medal":0,"score":"1552461626","product_id":100020901,"comment_content":"[D47打卡]<br>不知为何,容器中的mtu值只有100, 即使`ifconfig eth0 mtu 1400`,丢包率也是依旧很高.<br>我这边的hping3结果中,有些看不懂的地方:<br>DUP! len=44 ip=192.168.1.128 ttl=63 DF id=0 sport=80 flags=SA seq=2 win=27200 rtt=1018.3 ms<br>len=44 ip=192.168.1.128 ttl=63 DF id=0 sport=80 flags=SA seq=4 win=27200 rtt=1032.7 ms<br>DUP! len=44 ip=192.168.1.128 ttl=63 DF id=0 sport=80 flags=SA seq=2 win=27200 rtt=3034.1 ms<br><br>这里的DUP应该是重复了的意思吧.<br><br>老师这个案例太狠了,连链路层上都做了手脚.😐","like_count":1,"discussions":[{"author":{"id":1001282,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/47/42/5b55bd1a.jpg","nickname":"倪朋飞","note":"","ucode":"F0FAC195CDE7AC","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":443009,"discussion_content":"你这容器中mtu只有100是更狠呀😊\n\nDUP表示收到了重复包","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1552749315,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1300550,"avatar":"https://static001.geekbang.org/account/avatar/00/13/d8/46/9bfd1bf2.jpg","nickname":"刘剑波","note":"","ucode":"BD2D6249455633","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":587951,"discussion_content":"nginx那个容器拉不下来了，是时间太久了有更新吗？","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1663401376,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":"四川"},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]}]}