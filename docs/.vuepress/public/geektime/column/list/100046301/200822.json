{"id":200822,"title":"开篇词 | 想吃透架构？你得看看真实、接地气的架构案例","content":"<p>你好，我是王庆友，前1号店首席架构师，很高兴能在这里和你一起聊聊架构。</p><p>架构的内容，相信你也看过很多了，博客、书籍、技术大会等等，都会有大量架构方面的分享。但一方面，这些内容比较碎片化，比如这一次讲的是技术的高并发处理，下一次讲的是老业务的改造。表面上看，你脑子里塞得满满的，但实际上，你很难循序渐进、系统地去学习架构。</p><p>另一方面，这些内容大多比较含糊，看似说的要点很全，但缺乏关键的实现细节，这样的话，说的和做的联系不起来，结果就是你可能理解起来都有困难，更不用说在实际工作中落地了。因此，我想了想，要能为你提供全新的架构学习体验，那就是让理论和实战结合起来，理论讲透彻，实战提供大量接地气的案例，让你能够知行合一地学架构。</p><p>我先简单介绍下自己吧，我从事软件开发已有二十年，架构设计也超过十年了，所以也经历了软件发展的各个阶段。</p><p>一开始呢，我从事的是企业级软件开发，后来转到了大型互联网电商平台，最近我奋战在新零售领域，帮助传统的大型连锁餐饮企业搭建O2O平台，打通他们的线上和线下系统。</p><p>从1号店开始，我负责了许多大项目的架构设计，积累了很多架构方面的经验。我是一个爱琢磨的人，喜欢总结做过的东西，形成一个体系化的认知。因此，在架构这个话题上，我有很多东西想和你分享。我希望，这些总结过的经验，可以帮你在成为架构师的道路上，少走一些弯路，也希望通过这个专栏能够抛砖引玉，和你一起讨论，一起成长。</p><!-- [[[read_end]]] --><h2>为什么开发人员要学习架构？</h2><p>这其实可以从系统和个人发展这两方面来看。</p><h3>一、无架构，不系统</h3><p>现在的软件系统规模越来越大，业务上和技术上都非常地复杂，大一点的互联网公司，技术人员都有几千号人。那么，如何开发这么复杂的系统？如何有效地组织他们的工作呢？</p><p>在这里，一个好的架构设计无疑是至关重要的，无论你是有一定经验的开发人员，还是已经开始从事系统设计的架构师，深入学习和理解架构都是必不可少的，掌握好架构设计，可以让你轻松应对技术和业务的挑战。但是很多技术人员，由于个人项目经验有限，又缺乏很好的学习途径，对架构设计一知半解。在实际工作中，不能把握好架构设计的度，要么设计不足，要么过度设计，导致系统变来变去，严重影响开发效率和质量。</p><h3>二、拓展你的职业发展空间</h3><p>此外，对于技术人员来说，公司通常会提供两个职业发展通道供你选择：管理路线和技术路线。</p><p>现实中，大部分同学应该都是走技术路线的，很多程序员的职业发展目标，也都是想要成为一名优秀的架构师。这不仅仅意味着更优渥的薪水和更持久的职业生涯，更因为在架构师这个舞台上，你可以凭借个人出色的架构能力，为项目的落地发挥巨大的作用，你会有更大的成就感。</p><p>所以说，无论从软件发展的趋势，还是从个人职业发展方向上考虑，你都应该拥抱架构，主动学习，尽快成长为一个能力全面的架构师。</p><h2>如何学习架构？</h2><p>但是，成为一名优秀的架构师，却不是一件容易的事情，你需要克服很多挑战。</p><ul>\n<li>首先，你需要跳出当前的小模块，站在系统整体的角度来考虑问题。</li>\n<li>其次，你不仅要从技术的角度考虑问题，也要学会从业务的角度来考虑问题，深入理解系统的挑战在哪里，不要在错误的地方发力。</li>\n<li>最后，你需要做好各方面的平衡，能在现有的各项资源约束下，寻求一个最优解。</li>\n</ul><p>而这些，无疑都是非常考验人，也非常锻炼人的，需要你能够快速成长起来。如果你在走向架构师这条路上，完全靠自己摸索，找不到正确的方向，不断地犯错，你很可能会半途而废。</p><p>那么，如何找到一个好的学习方式呢？</p><p>我们知道，一门新的语言，有很多书籍教你如何从入门到精通；一个新的开源框架，也有全面的资料教你如何深入掌握。但<strong>在架构学习这方面，并没有十分系统的理论指导，教你如何一步步进阶。</strong></p><p>有时候，一些架构的术语和概念甚至都没统一，需要靠你自己去分辨。有时候，你可以从各种渠道找到一些项目的架构介绍，但不知是作者出于保密的目的，还是自己也没有深度参与项目，内容往往避实就虚，缺乏具体的东西。这样的架构介绍，参考性就很有限，你看过了，也就忘了，就像是中国的山水画，写意不写实，内行可以看门道，外行只能看热闹，无助于你实际能力的提升。</p><p><strong>此外，架构设计的实践性很强</strong>，如果公司的业务比较简单，对架构设计的要求不高，你就未必有很好的实践机会；如果你只是抽象地了解了一些架构原则，不去具体地实践它，那么你很难去学透架构，让它变成自己的能力。</p><p>而在设计这个专栏的时候，我就有针对性地考虑到了这些问题，并给出了解决方案：</p><ul>\n<li>首先，我不会在这里罗列所有架构相关的知识点，而是选择实践中最有用的部分，形成一个精简的体系，让你可以快速掌握架构的核心内容，抓住学习的重点。</li>\n<li><strong>此外，本专栏的核心内容全部来自于本人实际项目的总结</strong>。我会基于这些实战后的思考，和你深入分享我的经验和看法，让你能够透过现象看本质，对架构的认知快速到位。我想说的是，这将会是一个有态度的专栏，而不是架构知识的搬运工。</li>\n<li><strong>更为重要的是，每讲课程，我会根据不同的架构原则，给你提供很多完整且非常接地气的实际案例</strong>。比如说，通过1号店App服务端架构改造的案例，你将会深入地理解系统从单体架构到分布式，再到服务化演变的背后原因；通过1号店订单水平分库的案例，你将会了解大型互联网公司是如何解决单个数据库的性能和容量瓶颈的。这些案例都很典型，不但让你能够理论结合实践，深入理解和运用各种架构原则，而且在很多情况下，你甚至可以直接参考它们，在公司落地类似的架构改造。</li>\n</ul><p>这个专栏，它有深度、有细节、实战性强。希望通过这个专栏，能让你对架构形成一个清晰的认知框架，并对各个架构要点形成自己的理解，同时，通过结合着大量实际案例的学习，希望最终你可以把这些知识变成实际的能力。</p><h2>我是如何规划这个课程的？</h2><p>首先，我会和你分享架构的本质，让你对架构形成一个体系化的认知。</p><p>接下来，我将整体内容划分为<strong>业务架构</strong>和<strong>技术架构</strong>两大部分，先理论后案例，带你深入理解每种架构要解决的问题，以及如何解决。</p><ul>\n<li><strong>业务架构篇</strong>：重点针对系统的扩展性和复用性两大目标展开。首先，我会介绍这两大目标的内涵和实现手段，让你明白如何通过业务的拆分和组合，搭建一个柔性可变的系统；然后，每部分都有三个实际案例，让你理解如何以服务化和平台化的方式升级改造系统，最终实现扩展性和复用性的目标。</li>\n<li><strong>技术架构篇</strong>：重点针对系统高可用和高性能/可伸缩的目标展开。首先，我会介绍实现这些目标的策略和架构原则，比如说，高可用的策略有避免事故、降低影响、快速恢复等，高可用的架构原则有无单点、可监控、水平扩展等，这样你可以总体了解，实现这些目标都有哪些手段；然后，每个目标都有3个实际案例，让你理解如何在项目中，灵活应用这些策略和原则。</li>\n</ul><p>最后，我还会通过一篇架构总结，汇总架构原则，以及它们的适用场景，并就如何成长为优秀的架构师，为你提供一个可行的方向指导。</p><h2>写在最后</h2><p>那么在最后，我想说的是，架构对我们的工作是如此的重要，如果你想深入学习架构，除了有好的学习方法，你一定还要多思考，多交流，多实践。</p><p>在课程设计中，我在每一节课后都留了思考题，希望你能够结合每篇文章的知识点，给出自己的思考。</p><p><strong>这次当然也不例外，你可以给我留言，说说你对学习架构都有哪些困惑。</strong></p><p>另外，你也要大胆地抛出问题，我一定会尽我所能及时给你反馈。很多问题都是共性的，我们一起讨论和解决，成长一定会更快。</p><p>书上学来终觉浅，梅花香自苦寒来。好的指导方法加上你自身的努力实践，相信你的架构之路会越走越顺，越走越快。</p><p>希望这个专栏，能够帮你开启架构师的进阶之路，在接下来的两个月里，让我们在架构之路上一起成长吧。</p><p>我是王庆友，欢迎你把这个课程分享给你的朋友，我们一起学架构。感谢你的阅读，我们第一讲再见。</p>","neighbors":{"left":[],"right":{"article_title":"01 | 架构的本质：如何打造一个有序的系统？","id":200825}},"comments":[{"had_liked":false,"id":179965,"user_name":"唐高为","can_delete":false,"product_type":"c1","uid":1757658,"ip_address":"","ucode":"15655BE4928C9D","user_header":"https://static001.geekbang.org/account/avatar/00/1a/d1/da/7faf18a0.jpg","comment_is_top":true,"comment_ctime":1582128716,"is_pvip":false,"replies":[{"id":"69926","content":"看来你正在走向架构师的路上，有些自己的思考和困惑，这里有些建议供参考。<br>首先需要架构师思维，对架构有个正确的认知，一个方案设计都有哪些方面要考虑，比如业务的扩展复用，系统的高可用等等。<br><br>然后说下设计经验，架构是实践性很强的工作，它把你的知识变成技能，从虚到实。在缺乏一手经验的情况下，可以都看看别人的设计，但最好是能够有深入的细节，当时碰到什么问题，设计时有哪些可以选择的方案，怎么平衡和决策的。这样你就能深入明白，在场景和知识点之间建立强链接。<br><br>你这里说了很多技术组件，现在技术发展很快，一方面我们需要紧跟前沿的东西，不要落伍。但另一方面，技术点很多，全部深入掌握不现实。这怎么应对呢？<br><br>从开发的角度，学习技术先深度后广度，比如把rabbitMQ吃透，再学其他MQ，避免样样能，样样不精。<br>当你对技术了解一定程度，到了架构师程度，就要追求广度，先要大方向上了解，然后看具体点的深度。<br><br>架构设计时，你需要知道每类核心技术组件的典型应用方式，比如MQ，一般用于异步，系统解耦，流量削峰等用途，还有DB，缓存，MQ在不同业务场景下是怎么组合的，然后考虑具体的选用什么db，什么缓存和MQ组件。<br>然后每类组件，都有哪些具体实现，如果你对某个MQ很了解，其他的大致了解特性即可，不一定要深入细节，现在如果新推出一个MQ组件，你去了解它有什么新特性，这样实际也花不了太多时间。","user_name":"作者回复","comment_id":179965,"uid":"1268522","ip_address":"","utype":1,"ctime":1582189673,"user_name_real":"王庆友"}],"discussion_count":6,"race_medal":0,"score":"9.2233721672858993e+18","product_id":100046301,"comment_content":"我刚考过了软考的系统架构师，也学习完了极客时间的《从0开始学架构》，感觉还是挺虚，可能还是缺乏大型系统的设计经验。除了缺乏经验以外，我觉得还有一点也很关键，那就是缺乏对各种架构组件的认识，比如 MongoDB、ElasticSearch、Kafaka、K8s、Hadoop 等等。我觉得要学好架构，除了架构师思维外，还得紧跟前沿技术，了解各种工具的特点，这样才能在设计出更加合适的系统框架。","like_count":31,"discussions":[{"author":{"id":1119312,"avatar":"https://static001.geekbang.org/account/avatar/00/11/14/50/c23cf47d.jpg","nickname":"李","note":"","ucode":"5C0FAA211F2E26","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":184488,"discussion_content":"学好架构，你首先要是一个优秀的程序员，各种技术你要hold住，hold不住谈架构都是纸上谈兵。没有深厚的技术功底，技术怎么选型，每个中间件底层有什么缺陷，怎么二次开发改进？怎么保证每个依赖中间件的高可用。你会无从下手，建议你先学好技术","likes_number":5,"is_delete":false,"is_hidden":false,"ctime":1582555783,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1268522,"avatar":"https://static001.geekbang.org/account/avatar/00/13/5b/2a/83c3cb2d.jpg","nickname":"王庆友","note":"","ucode":"90D8743C4A6C79","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":484464,"discussion_content":"看来你正在走向架构师的路上，有些自己的思考和困惑，这里有些建议供参考。\n首先需要架构师思维，对架构有个正确的认知，一个方案设计都有哪些方面要考虑，比如业务的扩展复用，系统的高可用等等。\n\n然后说下设计经验，架构是实践性很强的工作，它把你的知识变成技能，从虚到实。在缺乏一手经验的情况下，可以都看看别人的设计，但最好是能够有深入的细节，当时碰到什么问题，设计时有哪些可以选择的方案，怎么平衡和决策的。这样你就能深入明白，在场景和知识点之间建立强链接。\n\n你这里说了很多技术组件，现在技术发展很快，一方面我们需要紧跟前沿的东西，不要落伍。但另一方面，技术点很多，全部深入掌握不现实。这怎么应对呢？\n\n从开发的角度，学习技术先深度后广度，比如把rabbitMQ吃透，再学其他MQ，避免样样能，样样不精。\n当你对技术了解一定程度，到了架构师程度，就要追求广度，先要大方向上了解，然后看具体点的深度。\n\n架构设计时，你需要知道每类核心技术组件的典型应用方式，比如MQ，一般用于异步，系统解耦，流量削峰等用途，还有DB，缓存，MQ在不同业务场景下是怎么组合的，然后考虑具体的选用什么db，什么缓存和MQ组件。\n然后每类组件，都有哪些具体实现，如果你对某个MQ很了解，其他的大致了解特性即可，不一定要深入细节，现在如果新推出一个MQ组件，你去了解它有什么新特性，这样实际也花不了太多时间。","likes_number":2,"is_delete":false,"is_hidden":false,"ctime":1582189673,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1757658,"avatar":"https://static001.geekbang.org/account/avatar/00/1a/d1/da/7faf18a0.jpg","nickname":"唐高为","note":"","ucode":"15655BE4928C9D","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":180153,"discussion_content":"谢谢老师的指导！我理解一些了。关键的点一定要加强深度，然后触类旁通就容易多了。如果每个点都流于表面，那么线和面也会很薄弱，经不起推敲，抓不住重点。每个类型的工具至少要将其中一个深耕，这就像在河里打牢固了庄，再大的浪也摧不垮。","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1582281526,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1005481,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/57/a9/fe93beac.jpg","nickname":"Colin","note":"","ucode":"39234AE54BAE3D","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":181357,"discussion_content":"你应该是实践太少","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1582364531,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":2,"child_discussions":[{"author":{"id":1757658,"avatar":"https://static001.geekbang.org/account/avatar/00/1a/d1/da/7faf18a0.jpg","nickname":"唐高为","note":"","ucode":"15655BE4928C9D","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1005481,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/57/a9/fe93beac.jpg","nickname":"Colin","note":"","ucode":"39234AE54BAE3D","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":183802,"discussion_content":"是的，大型项目的架构经验不够","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1582519166,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":181357,"ip_address":""},"score":183802,"extra":""},{"author":{"id":1119312,"avatar":"https://static001.geekbang.org/account/avatar/00/11/14/50/c23cf47d.jpg","nickname":"李","note":"","ucode":"5C0FAA211F2E26","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":1005481,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/57/a9/fe93beac.jpg","nickname":"Colin","note":"","ucode":"39234AE54BAE3D","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":184474,"discussion_content":"熟人","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1582555535,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":181357,"ip_address":""},"score":184474,"extra":""}]}]},{"had_liked":false,"id":179809,"user_name":"学要有所用","can_delete":false,"product_type":"c1","uid":1446644,"ip_address":"","ucode":"7CB34E7DE21558","user_header":"https://static001.geekbang.org/account/avatar/00/16/12/f4/1bf8568e.jpg","comment_is_top":true,"comment_ctime":1582103590,"is_pvip":false,"replies":[{"id":"69814","content":"你先要建立对架构的框架性认知，了解各个架构概念的关系，这样你有框子装东西，有能力分辨接触到的架构内容都是属于哪方面。<br>然后浅到深往里面填东西。包括别人的架构分享，和公司里实际系统的设计。自己也有意识地去补一些知识短板，架构是实践性很强的技能，一方面你要了解背后的原因，另一方面你要多多去使用。<br>最简单地，你可以从学习GOF设计模式开始，然后对照JDK源码，了解都是怎么用的。设计模式你可以看作轻量级的架构设计。<br>","user_name":"作者回复","comment_id":179809,"uid":"1268522","ip_address":"","utype":1,"ctime":1582107124,"user_name_real":"王庆友"}],"discussion_count":1,"race_medal":0,"score":"9.2233721200413e+18","product_id":100046301,"comment_content":"我之前给老师留言过，不过没得到解答，希望老师这次有空解答下，我在极客时间上买过一些课程，而且讲的不错，但碍于自身基础的不足导致学习效果不佳，而这种不限于某种技术又较为艰深对综合能力也提出更高要求的架构，该怎么学习？又该怎么学好呢？希望老师给些建议！","like_count":20,"discussions":[{"author":{"id":1268522,"avatar":"https://static001.geekbang.org/account/avatar/00/13/5b/2a/83c3cb2d.jpg","nickname":"王庆友","note":"","ucode":"90D8743C4A6C79","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":484408,"discussion_content":"你先要建立对架构的框架性认知，了解各个架构概念的关系，这样你有框子装东西，有能力分辨接触到的架构内容都是属于哪方面。\n然后浅到深往里面填东西。包括别人的架构分享，和公司里实际系统的设计。自己也有意识地去补一些知识短板，架构是实践性很强的技能，一方面你要了解背后的原因，另一方面你要多多去使用。\n最简单地，你可以从学习GOF设计模式开始，然后对照JDK源码，了解都是怎么用的。设计模式你可以看作轻量级的架构设计。\n","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1582107124,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":180236,"user_name":"偏偏喜欢你","can_delete":false,"product_type":"c1","uid":1764425,"ip_address":"","ucode":"1E2E357F109F9D","user_header":"https://static001.geekbang.org/account/avatar/00/1a/ec/49/410176b8.jpg","comment_is_top":true,"comment_ctime":1582215174,"is_pvip":true,"replies":[{"id":"70039","content":"是关于DDD与一致性分布式事务结合怎样设计更合理。<br>强的一致性分布式事务实现一般不推荐，实现太复杂，也严重影响性能。实践上有多种处理方式尽可能保证数据一致性。比如ebay经常用的本地消息，阿里的tcc，rocketmq支持的消息事务，或者调用出错后调用上个服务的取消接口，或者消息补偿等，你需要根据具体业务的特点选择落地方案，这里没有统一方案，有时候一致性没有我们想象的必须要做到。<br><br>第二个问题：<br>是关于网关的问题，我一般的都是使用自研netty。<br>a. 对于自定义服务聚合应该如何处理比较恰当.<br>不建议在网关层面做业务聚合，一般是构建单独的具体服务，网关做一些系统性功能，我有一讲是专门介绍1号店移动端网关的系统改造，你可以参考下。<br><br>b. 请求鉴权到达什么力度比较合适，如果权限比较复杂，如果使用jwt 在下游服务中该如何设计，有没有更好的方式。<br><br>c. 在使用k8s时，网关如何设计才能与与k8s的ingress更好的结合。<br><br>d.对于服务发现，如果在k8s中还是否有必要在网关中设计，产品应该如何选取？<br>网关一般针对外部请求，路由到内部服务，一般来说这个路由逻辑要比较灵活和复杂，比如解析url路径，确定路由到哪个内部服务，这个K8s内部服务的路由还是有区别。<br><br>第三个问题：<br>关于监控<br>日志：一般使用底层ES+K，收集用FileBeat推到Kafka，有没有比filebeat更好的产品选型或收集方式？<br>有没有别的，我不是特别清楚，我们也用filebeat，在.net环境，也踩到过占内存的坑。<br><br>监控：<br>一般需要监控的地方主要分为几大类，除了地址，我用了skywalking，还有预警，一般还需要考虑那些，如果上云平台的k8s，该如何搭配比较好？<br>监控这块，作为保证系统高可用的手段，专栏会有专门一篇实际案例介绍，到时有问题深入讨论。<br><br>第四个问题：<br>关于多租户SaaS和私有云，如何结合实现比较好，以及数据和升级该如何考量<br>核心问题是如何实现一套代码和数据结构，比如基于同样一套基础服务，方便应用和数据升级。<br><br>第五个问题：<br>关于分库分表，考量范围和如何设计才更合理？<br>这个专栏讲会有一篇文章专门介绍1号店的订单水平分库案例，相信你会找到答案。","user_name":"作者回复","comment_id":180236,"uid":"1268522","ip_address":"","utype":1,"ctime":1582279822,"user_name_real":"王庆友"}],"discussion_count":2,"race_medal":0,"score":"9.2233720899766006e+18","product_id":100046301,"comment_content":"王老师，你好，很高兴能有机会与您交谈，我架构时间不长，最近有一些困惑，刚听了一次您的课，感觉很贴切，有几个问题希望老师能有时间给出点建议。<br>第一个问题：<br><br>是关于DDD与一致性分布式事务结合怎样设计更合理。<br><br>第二个问题：<br>是关于网关的问题，我一般的都是使用自研netty。<br>a. 对于自定义服务聚合应该如何处理比较恰当.<br><br>b. 请求鉴权到达什么力度比较合适，如果权限比较复杂，如果使用jwt 在下游服务中该如何设计，有没有更好的方式。<br><br>c. 在使用k8s时，网关如何设计才能与与k8s的ingress更好的结合。<br><br>d.对于服务发现，如果在k8s中还是否有必要在网关中设计，产品应该如何选取？<br><br>第三个问题：<br>关于监控<br>日志：一般使用底层ES+K，收集用FileBeat推到Kafka，有没有比filebeat更好的产品选型或收集方式？<br><br>监控：<br>一般需要监控的地方主要分为几大类，除了地址，我用了skywalking，还有预警，一般还需要考虑那些，如果上云平台的k8s，该如何搭配比较好？<br><br>第四个问题：<br>关于多租户SaaS和私有云，如何结合实现比较好，以及数据和升级该如何考量<br><br>第五个问题：<br>关于分库分表，考量范围和如何设计才更合理？","like_count":13,"discussions":[{"author":{"id":1268522,"avatar":"https://static001.geekbang.org/account/avatar/00/13/5b/2a/83c3cb2d.jpg","nickname":"王庆友","note":"","ucode":"90D8743C4A6C79","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":484578,"discussion_content":"是关于DDD与一致性分布式事务结合怎样设计更合理。\n强的一致性分布式事务实现一般不推荐，实现太复杂，也严重影响性能。实践上有多种处理方式尽可能保证数据一致性。比如ebay经常用的本地消息，阿里的tcc，rocketmq支持的消息事务，或者调用出错后调用上个服务的取消接口，或者消息补偿等，你需要根据具体业务的特点选择落地方案，这里没有统一方案，有时候一致性没有我们想象的必须要做到。\n\n第二个问题：\n是关于网关的问题，我一般的都是使用自研netty。\na. 对于自定义服务聚合应该如何处理比较恰当.\n不建议在网关层面做业务聚合，一般是构建单独的具体服务，网关做一些系统性功能，我有一讲是专门介绍1号店移动端网关的系统改造，你可以参考下。\n\nb. 请求鉴权到达什么力度比较合适，如果权限比较复杂，如果使用jwt 在下游服务中该如何设计，有没有更好的方式。\n\nc. 在使用k8s时，网关如何设计才能与与k8s的ingress更好的结合。\n\nd.对于服务发现，如果在k8s中还是否有必要在网关中设计，产品应该如何选取？\n网关一般针对外部请求，路由到内部服务，一般来说这个路由逻辑要比较灵活和复杂，比如解析url路径，确定路由到哪个内部服务，这个K8s内部服务的路由还是有区别。\n\n第三个问题：\n关于监控\n日志：一般使用底层ES+K，收集用FileBeat推到Kafka，有没有比filebeat更好的产品选型或收集方式？\n有没有别的，我不是特别清楚，我们也用filebeat，在.net环境，也踩到过占内存的坑。\n\n监控：\n一般需要监控的地方主要分为几大类，除了地址，我用了skywalking，还有预警，一般还需要考虑那些，如果上云平台的k8s，该如何搭配比较好？\n监控这块，作为保证系统高可用的手段，专栏会有专门一篇实际案例介绍，到时有问题深入讨论。\n\n第四个问题：\n关于多租户SaaS和私有云，如何结合实现比较好，以及数据和升级该如何考量\n核心问题是如何实现一套代码和数据结构，比如基于同样一套基础服务，方便应用和数据升级。\n\n第五个问题：\n关于分库分表，考量范围和如何设计才更合理？\n这个专栏讲会有一篇文章专门介绍1号店的订单水平分库案例，相信你会找到答案。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1582279822,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1764425,"avatar":"https://static001.geekbang.org/account/avatar/00/1a/ec/49/410176b8.jpg","nickname":"偏偏喜欢你","note":"","ucode":"1E2E357F109F9D","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":180159,"discussion_content":"谢谢王老师的解惑，后面我会继续学习。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1582282383,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":179888,"user_name":"sakyawang","can_delete":false,"product_type":"c1","uid":1099856,"ip_address":"","ucode":"423947EA9BF38D","user_header":"https://static001.geekbang.org/account/avatar/00/10/c8/50/ff545864.jpg","comment_is_top":true,"comment_ctime":1582118225,"is_pvip":false,"replies":[{"id":"69847","content":"这个问题有点大，首先看是业务方面问题还是系统稳定性方面问题。业务架构比较典型的有分布式，面向服务（soa和微服务），如果业务之间共性比较多，还要考虑服务平台化。技术架构主要是考虑高可用，高性能，系统能力能够水平扩展。具体落地时，要平衡预期效果，实现的复杂度和现有团队的水平，尽量接地气，设计好后，脑子里端到端过一遍，要避免过度设计，落不了地。","user_name":"作者回复","comment_id":179888,"uid":"1268522","ip_address":"","utype":1,"ctime":1582120656,"user_name_real":"王庆友"}],"discussion_count":1,"race_medal":0,"score":"9.2233720813866004e+18","product_id":100046301,"comment_content":"请问老师，架构选型一般要从哪几个方面入手进行整理比对呀","like_count":11,"discussions":[{"author":{"id":1268522,"avatar":"https://static001.geekbang.org/account/avatar/00/13/5b/2a/83c3cb2d.jpg","nickname":"王庆友","note":"","ucode":"90D8743C4A6C79","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":484439,"discussion_content":"这个问题有点大，首先看是业务方面问题还是系统稳定性方面问题。业务架构比较典型的有分布式，面向服务（soa和微服务），如果业务之间共性比较多，还要考虑服务平台化。技术架构主要是考虑高可用，高性能，系统能力能够水平扩展。具体落地时，要平衡预期效果，实现的复杂度和现有团队的水平，尽量接地气，设计好后，脑子里端到端过一遍，要避免过度设计，落不了地。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1582120656,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":180093,"user_name":"李青","can_delete":false,"product_type":"c1","uid":1074564,"ip_address":"","ucode":"30E2CB7F3EFC14","user_header":"https://static001.geekbang.org/account/avatar/00/10/65/84/5515dde0.jpg","comment_is_top":true,"comment_ctime":1582185883,"is_pvip":false,"replies":[{"id":"69927","content":"产品经理告诉你用户需要什么功能，架构师告诉开发怎么做，系统应该分成几个部分，怎么相互调用。<br>你想想一个大型建筑，为什么先需要进行架构设计，而不能直接让工人开干就明白。<br>架构师具体做什么，你听我下一讲就明白。","user_name":"作者回复","comment_id":180093,"uid":"1268522","ip_address":"","utype":1,"ctime":1582190426,"user_name_real":"王庆友"}],"discussion_count":1,"race_medal":0,"score":"9.2233720642068009e+18","product_id":100046301,"comment_content":"老师我一直不知道什么是软件架构，架构师在软件开发做了什么","like_count":6,"discussions":[{"author":{"id":1268522,"avatar":"https://static001.geekbang.org/account/avatar/00/13/5b/2a/83c3cb2d.jpg","nickname":"王庆友","note":"","ucode":"90D8743C4A6C79","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":484518,"discussion_content":"产品经理告诉你用户需要什么功能，架构师告诉开发怎么做，系统应该分成几个部分，怎么相互调用。\n你想想一个大型建筑，为什么先需要进行架构设计，而不能直接让工人开干就明白。\n架构师具体做什么，你听我下一讲就明白。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1582190426,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":188126,"user_name":"250ZH","can_delete":false,"product_type":"c1","uid":1457901,"ip_address":"","ucode":"F9B4FD1E4E7C5C","user_header":"https://static001.geekbang.org/account/avatar/00/16/3e/ed/e154de2e.jpg","comment_is_top":true,"comment_ctime":1584323105,"is_pvip":true,"replies":[{"id":"72821","content":"全部都了解细节这不大现实，有些要了解细节，比如微服务框架，rpc通信，最好能深入看下开源组件的源码。掌握一部分组件后，其他的组件知道原理和特性后，大概你也知道内部实现机制。<br>Soa，db，缓存，MQ这四大组件的特性你肯定都比较清楚，知道每类具体实现的优劣点和适用场景，这样架构设计时才能比较好的选型。","user_name":"作者回复","comment_id":188126,"uid":"1268522","ip_address":"","utype":1,"ctime":1584419487,"user_name_real":"王庆友"}],"discussion_count":1,"race_medal":0,"score":"9.2233720513240003e+18","product_id":100046301,"comment_content":"成为好的架构师，需要对各种组件掌握到什么程度呢？知晓大概原理还是要清楚比较细节的实现方法。先深度后广度，那深度要多深，广度要多广?","like_count":4,"discussions":[{"author":{"id":1268522,"avatar":"https://static001.geekbang.org/account/avatar/00/13/5b/2a/83c3cb2d.jpg","nickname":"王庆友","note":"","ucode":"90D8743C4A6C79","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":487343,"discussion_content":"全部都了解细节这不大现实，有些要了解细节，比如微服务框架，rpc通信，最好能深入看下开源组件的源码。掌握一部分组件后，其他的组件知道原理和特性后，大概你也知道内部实现机制。\nSoa，db，缓存，MQ这四大组件的特性你肯定都比较清楚，知道每类具体实现的优劣点和适用场景，这样架构设计时才能比较好的选型。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1584419487,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":181572,"user_name":"粗线条Jackie","can_delete":false,"product_type":"c1","uid":1077098,"ip_address":"","ucode":"8B430BF860FFEE","user_header":"https://static001.geekbang.org/account/avatar/00/10/6f/6a/3e8ce554.jpg","comment_is_top":true,"comment_ctime":1582561372,"is_pvip":true,"replies":[{"id":"70356","content":"你好，欢迎一起讨论分享。<br>对于现有业务系统了解，一般可以遵循 以下过程。<br>学习架构文档-&gt;界面功能操作-&gt;数据库表结构了解-&gt;读代码-&gt;实际用户聊 等方式。<br>对于你这种情况，你可以先了解系统操作说明书，包括看下操作界面，然后结合表结构了解系统设计。<br>这里关键还不是深入单个业务系统，了解各个系统的相互关系更重要，这样可以总体上识别问题和把握系统设计。<br>技术跟踪方面，你写写POC，读读源码这样很好啊，其他的，你可以参加一些技术大会，了解大厂都在用什么技术，还有一些好的技术公众号和微信群，也会有大量前沿技术分享。如果有很系统地技术文章介绍，也可以深入研读下，了解它的核心机制，极客时间有些内容还不错。<br>你目前这样甲方角色，个人工作经验也很丰富了，我个人觉得业务和技术比重7:3差不多，仅供参考。","user_name":"作者回复","comment_id":181572,"uid":"1268522","ip_address":"","utype":1,"ctime":1582607825,"user_name_real":"王庆友"}],"discussion_count":1,"race_medal":0,"score":"9.2233720513222001e+18","product_id":100046301,"comment_content":"很荣幸能够拜读到王老师多年的经验心得，并有机会与您进行交流。老师的质朴的风格，很有金庸小说中大侠的&quot;重剑无锋，大巧不工&quot;的厚重感，十分期待您的后续新作。<br><br>做为一个IT从业超15年的&quot;老兵&quot;，从传统企业应用开发一路走来，经过产品研发，项目管理，目前在一家外资背景的new entrant快消零售公司做数字解决方案架构师。平时工作更多是梳理和打磨企业内部应用资源整合，以及摸索微信&#47;电商平台新玩法用于更好的支持市场营销活动，有时也会兼顾一些外部IT供应商的项目管理工作。<br><br>老师在课程中提到的&quot;业务架构&quot;和&quot;技术架构&quot;话题，我各有一些疑惑想与您探讨，希望能指点一二：<br><br>1. &quot;业务架构&quot;部分：这部分目前是我投放精力比较多的部分，对于空降的项目管理者&#47;企业架构师，需要尽快对企业内部各烟囱式业务系统(含历史Legacy System)有一个全局的了解，但由于一些历史的原因，很多系统的原始资料非常匮乏(有此前供应商要求不严格和部门壁垒等因素)，除了借助行政层级施压，可有方法快速破局？<br><br>2.&quot;技术架构&quot;部分：虽然自己是技术出身，也有过多年行业Top IT厂商和BAT大厂的从业经历，但八年前跳槽甲方后，更多是供应商交付及项目管理，对于行业业务的关注多过技术。对于技术的&quot;保鲜&quot;，我目前采取多听取供应商招投标解决方案，以及闲暇时间写一些主流框架的整合POC原型(SpringBoot及Netflix架构体系)，但感觉还不是很系统。请教老师，是如何跟进技术的发展趋势，保持个人技术的成长，以及平衡业务与技术比重分配的呢？","like_count":4,"discussions":[{"author":{"id":1268522,"avatar":"https://static001.geekbang.org/account/avatar/00/13/5b/2a/83c3cb2d.jpg","nickname":"王庆友","note":"","ucode":"90D8743C4A6C79","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":485039,"discussion_content":"你好，欢迎一起讨论分享。\n对于现有业务系统了解，一般可以遵循 以下过程。\n学习架构文档-&amp;gt;界面功能操作-&amp;gt;数据库表结构了解-&amp;gt;读代码-&amp;gt;实际用户聊 等方式。\n对于你这种情况，你可以先了解系统操作说明书，包括看下操作界面，然后结合表结构了解系统设计。\n这里关键还不是深入单个业务系统，了解各个系统的相互关系更重要，这样可以总体上识别问题和把握系统设计。\n技术跟踪方面，你写写POC，读读源码这样很好啊，其他的，你可以参加一些技术大会，了解大厂都在用什么技术，还有一些好的技术公众号和微信群，也会有大量前沿技术分享。如果有很系统地技术文章介绍，也可以深入研读下，了解它的核心机制，极客时间有些内容还不错。\n你目前这样甲方角色，个人工作经验也很丰富了，我个人觉得业务和技术比重7:3差不多，仅供参考。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1582607825,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":180775,"user_name":"约书亚","can_delete":false,"product_type":"c1","uid":1046714,"ip_address":"","ucode":"81EA27ADD9EC1A","user_header":"https://static001.geekbang.org/account/avatar/00/0f/f8/ba/14e05601.jpg","comment_is_top":true,"comment_ctime":1582384870,"is_pvip":false,"replies":[{"id":"70177","content":"做事的方法论肯定重要，只是有时候我们得到的是模糊或部分正确的方法论，效果可能适得其反。<br>做架构师，首先要尽量要先了解系统全貌，能够站在全局的角度考虑问题，当然这个是一步步来的。建议你平时多了解现有业务和系统实现，找出问题。","user_name":"作者回复","comment_id":180775,"uid":"1268522","ip_address":"","utype":1,"ctime":1582432993,"user_name_real":"王庆友"}],"discussion_count":1,"race_medal":0,"score":"9.2233720384371999e+18","product_id":100046301,"comment_content":"您在文章开头提到的，当前众多架构相关的内容，所具有的通病，真是一针见血。<br><br>我工作13年，做所谓“架构工作” 4，5年的时间，我的困惑就是觉得自己越来越不懂如何做架构，也不懂什么是架构师了。<br>首先是，架构师要学那么多知识，学习的边界是什么？哪怕有个模糊的边界。<br>其次，我们要如何看待架构中的方法论？方法论似乎在软件行业里特别不容易落地，以至于我认识的几个大佬都不太重视。但有不少人处于反面，认为方法论很重要，要贯穿整个研发周期，但当我和他们细聊时发现，他们对此方法论的理解还都不统一，应用起来也不遵守规则。那方法论不就仅仅起到一种团队内规章规范的作用了么？<br>最后，我一直觉得架构师的工作就是发现问题，解决问题，预防问题。但很多时候我们对需求，对系统压根没法获得一个清晰的认识，这也就发现不了问题。这时除了“套用已有的经验先完成一版简单的设计，之后根据反馈进行演进”这种方法外，还有什么积极些的办法么？","like_count":0,"discussions":[{"author":{"id":1268522,"avatar":"https://static001.geekbang.org/account/avatar/00/13/5b/2a/83c3cb2d.jpg","nickname":"王庆友","note":"","ucode":"90D8743C4A6C79","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":484787,"discussion_content":"做事的方法论肯定重要，只是有时候我们得到的是模糊或部分正确的方法论，效果可能适得其反。\n做架构师，首先要尽量要先了解系统全貌，能够站在全局的角度考虑问题，当然这个是一步步来的。建议你平时多了解现有业务和系统实现，找出问题。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1582432993,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":180689,"user_name":"Geek_kevin","can_delete":false,"product_type":"c1","uid":1301274,"ip_address":"","ucode":"03B0253CA59582","user_header":"https://static001.geekbang.org/account/avatar/00/13/db/1a/30201f1a.jpg","comment_is_top":true,"comment_ctime":1582365140,"is_pvip":false,"replies":[{"id":"70102","content":"EA是更高层面的架构，这个一般是老板要思考的，比较虚，架构师不会涉及这个层面。架构师核心的职责是负责架构设计，已经在研发过程中，跟进架构落地，解决疑难问题，当然实际工作中，职责边界没有这么清。你说的这几部分，开发团队分工，架构管理，团队IT能力建设这几块会涉及一些，而开发策略和版本管理更多研发团队负责。","user_name":"作者回复","comment_id":180689,"uid":"1268522","ip_address":"","utype":1,"ctime":1582374696,"user_name_real":"王庆友"}],"discussion_count":1,"race_medal":0,"score":"9.2233720384370995e+18","product_id":100046301,"comment_content":"王老师您好，请问我们这个课程谈的架构和企业架构EA有没有关联？ 是否会涉及架构师的角色和定位？对于架构师来讲，会涉及开发团队分工，开发策略，版本管理，架构管理，以及团队IT能力建设相关方面的内容吗？","like_count":0,"discussions":[{"author":{"id":1268522,"avatar":"https://static001.geekbang.org/account/avatar/00/13/5b/2a/83c3cb2d.jpg","nickname":"王庆友","note":"","ucode":"90D8743C4A6C79","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":484760,"discussion_content":"EA是更高层面的架构，这个一般是老板要思考的，比较虚，架构师不会涉及这个层面。架构师核心的职责是负责架构设计，已经在研发过程中，跟进架构落地，解决疑难问题，当然实际工作中，职责边界没有这么清。你说的这几部分，开发团队分工，架构管理，团队IT能力建设这几块会涉及一些，而开发策略和版本管理更多研发团队负责。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1582374696,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":246526,"user_name":"test","can_delete":false,"product_type":"c1","uid":1129610,"ip_address":"","ucode":"C57A175CBC6547","user_header":"https://static001.geekbang.org/account/avatar/00/11/3c/8a/900ca88a.jpg","comment_is_top":false,"comment_ctime":1599392144,"is_pvip":false,"replies":[{"id":"90876","content":"画流程图具体有很多工具，可以网上查下，画流程图不是我架构工作的重点，我画的比较多的是那种分层的结构图。","user_name":"作者回复","comment_id":246526,"uid":"1268522","ip_address":"","utype":1,"ctime":1599703363,"user_name_real":"王庆友"}],"discussion_count":2,"race_medal":0,"score":"10189326736","product_id":100046301,"comment_content":"老师有知识积累的经验吗？比如架构肯定要画流程图，平时怎么积累流程图呢？试了很多，都放弃了，博客也没积累，不知道老师能不能分享下架构师的知识管理和工具","like_count":3,"discussions":[{"author":{"id":1268522,"avatar":"https://static001.geekbang.org/account/avatar/00/13/5b/2a/83c3cb2d.jpg","nickname":"王庆友","note":"","ucode":"90D8743C4A6C79","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":505173,"discussion_content":"画流程图具体有很多工具，可以网上查下，画流程图不是我架构工作的重点，我画的比较多的是那种分层的结构图。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1599703363,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1129610,"avatar":"https://static001.geekbang.org/account/avatar/00/11/3c/8a/900ca88a.jpg","nickname":"test","note":"","ucode":"C57A175CBC6547","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":305078,"discussion_content":"原来分层图和架构关系比较大，感觉分层图比较少","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1599767257,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":192361,"user_name":"梁中华","can_delete":false,"product_type":"c1","uid":1006789,"ip_address":"","ucode":"52FE40242CBAD0","user_header":"https://static001.geekbang.org/account/avatar/00/0f/5c/c5/1231d633.jpg","comment_is_top":false,"comment_ctime":1584847606,"is_pvip":true,"discussion_count":0,"race_medal":0,"score":"10174782198","product_id":100046301,"comment_content":"架构就是解决问题得方法体系，有能解决多大的问题，就就能有多大的架构能力。","like_count":2},{"had_liked":false,"id":180847,"user_name":"cricket1981","can_delete":false,"product_type":"c1","uid":1001715,"ip_address":"","ucode":"758262F5958DA4","user_header":"https://static001.geekbang.org/account/avatar/00/0f/48/f3/f1034ffd.jpg","comment_is_top":false,"comment_ctime":1582427800,"is_pvip":false,"replies":[{"id":"70171","content":"中台是一种架构理念，目标是实现企业级能力复用，这个能力首先是业务能力，业务能力的复用高于技术能力复用。严格的讲，它和微服务架构一样，是属于应用架构，即系统内部关系是如何组织的。","user_name":"作者回复","comment_id":180847,"uid":"1268522","ip_address":"","utype":1,"ctime":1582431270,"user_name_real":"王庆友"}],"discussion_count":1,"race_medal":0,"score":"10172362392","product_id":100046301,"comment_content":"中台概念是属于业务架构吗？","like_count":3,"discussions":[{"author":{"id":1268522,"avatar":"https://static001.geekbang.org/account/avatar/00/13/5b/2a/83c3cb2d.jpg","nickname":"王庆友","note":"","ucode":"90D8743C4A6C79","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":484813,"discussion_content":"中台是一种架构理念，目标是实现企业级能力复用，这个能力首先是业务能力，业务能力的复用高于技术能力复用。严格的讲，它和微服务架构一样，是属于应用架构，即系统内部关系是如何组织的。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1582431270,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":179891,"user_name":"夜空中最亮的星","can_delete":false,"product_type":"c1","uid":1267566,"ip_address":"","ucode":"ADC3E7B6789955","user_header":"https://static001.geekbang.org/account/avatar/00/13/57/6e/b6795c44.jpg","comment_is_top":false,"comment_ctime":1582118733,"is_pvip":false,"replies":[{"id":"69856","content":"谢谢自家兄弟，我把你的留言也送上去。","user_name":"作者回复","comment_id":179891,"uid":"1268522","ip_address":"","utype":1,"ctime":1582123944,"user_name_real":"王庆友"}],"discussion_count":4,"race_medal":0,"score":"10172053325","product_id":100046301,"comment_content":"老师，您是我失散多年的兄弟吧，我叫王庆华，必须订阅一个了。","like_count":3,"discussions":[{"author":{"id":1268522,"avatar":"https://static001.geekbang.org/account/avatar/00/13/5b/2a/83c3cb2d.jpg","nickname":"王庆友","note":"","ucode":"90D8743C4A6C79","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":484441,"discussion_content":"谢谢自家兄弟，我把你的留言也送上去。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1582123944,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1267566,"avatar":"https://static001.geekbang.org/account/avatar/00/13/57/6e/b6795c44.jpg","nickname":"夜空中最亮的星","note":"","ucode":"ADC3E7B6789955","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":181114,"discussion_content":"那咱们的聚一聚了","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1582339165,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1336475,"avatar":"https://static001.geekbang.org/account/avatar/00/14/64/9b/0b578b08.jpg","nickname":"J.Smile","note":"","ucode":"C4D98DFDBF7584","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":180897,"discussion_content":"我同事王庆想呢","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1582301183,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1267566,"avatar":"https://static001.geekbang.org/account/avatar/00/13/57/6e/b6795c44.jpg","nickname":"夜空中最亮的星","note":"","ucode":"ADC3E7B6789955","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":177922,"discussion_content":"🤝","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1582124114,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":329521,"user_name":"jiao","can_delete":false,"product_type":"c1","uid":1042677,"ip_address":"","ucode":"381AE675D9FA7D","user_header":"https://static001.geekbang.org/account/avatar/00/0f/e8/f5/e758b7b6.jpg","comment_is_top":false,"comment_ctime":1641386398,"is_pvip":false,"replies":[{"id":"120391","content":"1. 首先了解架构设计常规套路，比如应用架构从上到下，分别是各个前端&#47;接入层应用&#47;聚合服务&#47;基础服务；技术架构应对高并发高流量典型有哪些原则和方式。redis&#47;MQ一般有哪些应用场景和坑，然后对照实际业务，选择性落地。","user_name":"作者回复","comment_id":329521,"uid":"1268522","ip_address":"","utype":1,"ctime":1641977320,"user_name_real":"编辑"}],"discussion_count":2,"race_medal":0,"score":"5936353694","product_id":100046301,"comment_content":"看到老师说会从实际案例来讲解架构，感觉这个点特别好，之前也看过架构的课程，感觉都比较虚，偏理论。有两个问题，想请教下老师。<br>1、刚开始做项目规划和架构设计，面对一个未知的领域，感觉没有太多想法。从业务那只能拿到商业价值输入，还是感觉无从下手，设计不出来架构和规划。 这块老师有什么建议吗？<br>2、感觉看待问题的视角有点窄，思路放不太开，这块老师有什么建议吗？","like_count":2,"discussions":[{"author":{"id":1268522,"avatar":"https://static001.geekbang.org/account/avatar/00/13/5b/2a/83c3cb2d.jpg","nickname":"王庆友","note":"","ucode":"90D8743C4A6C79","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":545500,"discussion_content":"1. 首先了解架构设计常规套路，比如应用架构从上到下，分别是各个前端/接入层应用/聚合服务/基础服务；技术架构应对高并发高流量典型有哪些原则和方式。redis/MQ一般有哪些应用场景和坑，然后对照实际业务，选择性落地。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1641977320,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":1,"child_discussions":[{"author":{"id":1111899,"avatar":"https://static001.geekbang.org/account/avatar/00/10/f7/5b/d2e7c2c4.jpg","nickname":"时隐时现","note":"","ucode":"DA4D622FF84920","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1268522,"avatar":"https://static001.geekbang.org/account/avatar/00/13/5b/2a/83c3cb2d.jpg","nickname":"王庆友","note":"","ucode":"90D8743C4A6C79","race_medal":0,"user_type":2,"is_pvip":false},"discussion":{"id":572210,"discussion_content":"王老师有一点特别让我佩服，就是两年了依然在回复留言，我在极客时间上订阅了几十门课程(当然没有全部读完，大部分都是看完留言的)，王老师应该是独一份，点赞o(￣▽￣)ｄ\n--一号店前同事留言","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1652662669,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":545500,"ip_address":""},"score":572210,"extra":""}]}]},{"had_liked":false,"id":225012,"user_name":"技术修行者","can_delete":false,"product_type":"c1","uid":1013147,"ip_address":"","ucode":"28CA41A1214D6B","user_header":"https://static001.geekbang.org/account/avatar/00/0f/75/9b/611e74ab.jpg","comment_is_top":false,"comment_ctime":1591615567,"is_pvip":true,"replies":[{"id":"82959","content":"概括得不错","user_name":"作者回复","comment_id":225012,"uid":"1268522","ip_address":"","utype":1,"ctime":1591710308,"user_name_real":"王庆友"}],"discussion_count":1,"race_medal":1,"score":"5886582863","product_id":100046301,"comment_content":"如何体系化的学习实践架构？如何做一名成熟的架构师？<br>我想了一下，抛砖引玉，欢迎讨论。<br>1. 要有技术深度，架构师首先应该是一名合格的资深开发，对具体技术要熟练掌握。<br>2. 要有技术广度，要熟谙各种常见的中间件，对其优缺点心中有数。<br>3. 要有套路，要熟练掌握各种常见应用类型和行业解决方案的架构设计套路。<br>4. 眼中有业务，架构师切记不能炫技，脱离业务场景去谈架构是没有意义的。","like_count":1,"discussions":[{"author":{"id":1268522,"avatar":"https://static001.geekbang.org/account/avatar/00/13/5b/2a/83c3cb2d.jpg","nickname":"王庆友","note":"","ucode":"90D8743C4A6C79","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":497694,"discussion_content":"概括得不错","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1591710308,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":179889,"user_name":"蓝胖子","can_delete":false,"product_type":"c1","uid":1609942,"ip_address":"","ucode":"AC9A938CB2E984","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTIiaQmP8tRCjI4yrONJ0NdUqoTicJ9QqgTef95zmpV1xKibLqdx5lPhOGCFicIIDNEv6B8p2sic1jXBj9A/132","comment_is_top":false,"comment_ctime":1582118433,"is_pvip":false,"replies":[{"id":"69857","content":"为什么是前架构，转行了？ 说说呗，让大家知道架构师还有更多出路。","user_name":"作者回复","comment_id":179889,"uid":"1268522","ip_address":"","utype":1,"ctime":1582124032,"user_name_real":"王庆友"}],"discussion_count":1,"race_medal":0,"score":"5877085729","product_id":100046301,"comment_content":"前架构，必须支持，学习学习学习","like_count":1,"discussions":[{"author":{"id":1268522,"avatar":"https://static001.geekbang.org/account/avatar/00/13/5b/2a/83c3cb2d.jpg","nickname":"王庆友","note":"","ucode":"90D8743C4A6C79","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":484440,"discussion_content":"为什么是前架构，转行了？ 说说呗，让大家知道架构师还有更多出路。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1582124032,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":179842,"user_name":"frontgoo","can_delete":false,"product_type":"c1","uid":1052782,"ip_address":"","ucode":"E7BC31D3C15E24","user_header":"https://static001.geekbang.org/account/avatar/00/10/10/6e/3fb7fa10.jpg","comment_is_top":false,"comment_ctime":1582108607,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"5877075903","product_id":100046301,"comment_content":"绝知此事要躬行","like_count":1},{"had_liked":false,"id":303475,"user_name":"冬天的树","can_delete":false,"product_type":"c1","uid":1046125,"ip_address":"","ucode":"6FE70C1499D33A","user_header":"https://static001.geekbang.org/account/avatar/00/0f/f6/6d/143deae5.jpg","comment_is_top":false,"comment_ctime":1626823905,"is_pvip":true,"replies":[{"id":"109844","content":"在当前公司呆了5年，虽然做的东西不是很高深，但还是有很多东西可以沉淀和升华，这需要理论指导，比如：<br>1. 找些业务架构和应用架构设计理论，画下自己做过项目的架构，比如数据流&#47;业务流图，调用序列图等。<br>2. 看些偏技术架构的文章，比如kafaka,redis,rpc框架，结合实际做过的东西深入理解。<br>3. 看些架构原则，比如无状态，对照自己的项目是如何实现的，或者没实现的，可以怎么优化。<br><br>以上供参考。","user_name":"作者回复","comment_id":303475,"uid":"1268522","ip_address":"","utype":1,"ctime":1626832817,"user_name_real":"王庆友"}],"discussion_count":1,"race_medal":1,"score":"1626823905","product_id":100046301,"comment_content":"老师，我加入目前的公司是以高级研发加入的，但一跃成架构师，跳过了技术专家这一步，然而实际上基础，深度都不扎实，后来又做项目负责人，做的又是政府行业的，所以架构的职责并没有那么重。在这家公司一呆就5年了，导致深度不够，架构实践也不足了，换工作都比较慌。<br>对于这样情况，有什么建议么？","like_count":1,"discussions":[{"author":{"id":1268522,"avatar":"https://static001.geekbang.org/account/avatar/00/13/5b/2a/83c3cb2d.jpg","nickname":"王庆友","note":"","ucode":"90D8743C4A6C79","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":523696,"discussion_content":"在当前公司呆了5年，虽然做的东西不是很高深，但还是有很多东西可以沉淀和升华，这需要理论指导，比如：\n1. 找些业务架构和应用架构设计理论，画下自己做过项目的架构，比如数据流/业务流图，调用序列图等。\n2. 看些偏技术架构的文章，比如kafaka,redis,rpc框架，结合实际做过的东西深入理解。\n3. 看些架构原则，比如无状态，对照自己的项目是如何实现的，或者没实现的，可以怎么优化。\n\n以上供参考。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1626832817,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":296305,"user_name":"北极的大企鹅","can_delete":false,"product_type":"c1","uid":1045577,"ip_address":"","ucode":"8935346D08E109","user_header":"https://static001.geekbang.org/account/avatar/00/0f/f4/49/2add4f6b.jpg","comment_is_top":false,"comment_ctime":1622892397,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1622892397","product_id":100046301,"comment_content":"架构,要晋升过去要有很久的路.<br>","like_count":0},{"had_liked":false,"id":289261,"user_name":"遇黑则明16619751287","can_delete":false,"product_type":"c1","uid":1142931,"ip_address":"","ucode":"4ED98BBC2EC078","user_header":"https://static001.geekbang.org/account/avatar/00/11/70/93/03d8fb2e.jpg","comment_is_top":false,"comment_ctime":1618958936,"is_pvip":true,"discussion_count":0,"race_medal":0,"score":"1618958936","product_id":100046301,"comment_content":"这就是一个有态度的专栏，而不是架构知识的搬运工。","like_count":0},{"had_liked":false,"id":190206,"user_name":"Geek_d02923","can_delete":false,"product_type":"c1","uid":1896768,"ip_address":"","ucode":"AABAFBDB5D3C7E","user_header":"https://static001.geekbang.org/account/avatar/00/1c/f1/40/1aa24dc4.jpg","comment_is_top":false,"comment_ctime":1584614310,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1584614310","product_id":100046301,"comment_content":"受益匪浅！","like_count":0},{"had_liked":false,"id":185318,"user_name":"doannado","can_delete":false,"product_type":"c1","uid":1169379,"ip_address":"","ucode":"16CF3E7C2E0827","user_header":"https://static001.geekbang.org/account/avatar/00/11/d7/e3/7e07ae99.jpg","comment_is_top":false,"comment_ctime":1583560761,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1583560761","product_id":100046301,"comment_content":"20200307 业务架构 技术架构","like_count":0},{"had_liked":false,"id":184491,"user_name":"Geek-fans","can_delete":false,"product_type":"c1","uid":1184743,"ip_address":"","ucode":"56518D2121E884","user_header":"https://static001.geekbang.org/account/avatar/00/12/13/e7/202ac86f.jpg","comment_is_top":false,"comment_ctime":1583327315,"is_pvip":true,"discussion_count":0,"race_medal":0,"score":"1583327315","product_id":100046301,"comment_content":"就像是中国的山水画，写意不写实，内行可以看门道，外行只能看热闹，无助于你实际能力的提升<br>----------<br>一句到位","like_count":0},{"had_liked":false,"id":184404,"user_name":"fate","can_delete":false,"product_type":"c1","uid":1897102,"ip_address":"","ucode":"81353C4CD6D2CC","user_header":"https://static001.geekbang.org/account/avatar/00/1c/f2/8e/0a9d3de6.jpg","comment_is_top":false,"comment_ctime":1583308596,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1583308596","product_id":100046301,"comment_content":"加油！！！","like_count":0},{"had_liked":false,"id":184166,"user_name":"谭鹏","can_delete":false,"product_type":"c1","uid":1142009,"ip_address":"","ucode":"4A8120C4AA6F2F","user_header":"https://static001.geekbang.org/account/avatar/00/11/6c/f9/af80b4da.jpg","comment_is_top":false,"comment_ctime":1583241200,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1583241200","product_id":100046301,"comment_content":"感觉架构是万金油。怎么说都有道理","like_count":0},{"had_liked":false,"id":183343,"user_name":"Geek_ebda96","can_delete":false,"product_type":"c1","uid":1134862,"ip_address":"","ucode":"02912E6D95A5A6","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/DYAIOgq83eoRiaKX0ulEibbbwM4xhjyMeza0Pyp7KO1mqvfJceiaM6ZNtGpXJibI6P2qHGwBP9GKwOt9LgHicHflBXw/132","comment_is_top":false,"comment_ctime":1583025074,"is_pvip":false,"replies":[{"id":"70955","content":"你说的这个是技术架构，应该先考虑业务架构，业务怎么拆分，系统边界如何定义","user_name":"作者回复","user_name_real":"王庆友","uid":"1268522","ctime":1583029586,"ip_address":"","comment_id":183343,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1583025074","product_id":100046301,"comment_content":"架构师设计系统的出发点是不是首先得选一个点，高可用，高并发，高性能，然后围绕这个点来设计和展开","like_count":1,"discussions":[{"author":{"id":1268522,"avatar":"https://static001.geekbang.org/account/avatar/00/13/5b/2a/83c3cb2d.jpg","nickname":"王庆友","note":"","ucode":"90D8743C4A6C79","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":485657,"discussion_content":"你说的这个是技术架构，应该先考虑业务架构，业务怎么拆分，系统边界如何定义","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1583029586,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":181545,"user_name":"Sonny721","can_delete":false,"product_type":"c1","uid":1104291,"ip_address":"","ucode":"C95DD306BFBE54","user_header":"https://static001.geekbang.org/account/avatar/00/10/d9/a3/2856b5b5.jpg","comment_is_top":false,"comment_ctime":1582556954,"is_pvip":false,"replies":[{"id":"70342","content":"需要比较深入的认识，精通不需要，比如tcp,udp,进程线程知识要有，具体协议细节不一定要了解很透彻","user_name":"作者回复","user_name_real":"王庆友","uid":"1268522","ctime":1582597517,"ip_address":"","comment_id":181545,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1582556954","product_id":100046301,"comment_content":"老师您好，作为一名架构师，除了软件架构设计，编码设计这些，是不是还需要精通网络、操作系统方面的知识？","like_count":1,"discussions":[{"author":{"id":1268522,"avatar":"https://static001.geekbang.org/account/avatar/00/13/5b/2a/83c3cb2d.jpg","nickname":"王庆友","note":"","ucode":"90D8743C4A6C79","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":485027,"discussion_content":"需要比较深入的认识，精通不需要，比如tcp,udp,进程线程知识要有，具体协议细节不一定要了解很透彻","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1582597517,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":180768,"user_name":"秋天","can_delete":false,"product_type":"c1","uid":1057056,"ip_address":"","ucode":"A7E1D953EF7E17","user_header":"https://static001.geekbang.org/account/avatar/00/10/21/20/1299e137.jpg","comment_is_top":false,"comment_ctime":1582383794,"is_pvip":true,"replies":[{"id":"70175","content":"听完这个专栏，你就有思路，知道如何去做了","user_name":"作者回复","user_name_real":"王庆友","uid":"1268522","ctime":1582432801,"ip_address":"","comment_id":180768,"utype":1}],"discussion_count":2,"race_medal":0,"score":"1582383794","product_id":100046301,"comment_content":"我想说的是，在听取系统需求，架构系统的时候，没有一个思路，觉得无从下手，觉得自己的设计能力很弱，比较恐慌，觉得自己这个系统可能做不出来，还请您指导，如何破解这种局面？谢谢！","like_count":0,"discussions":[{"author":{"id":1268522,"avatar":"https://static001.geekbang.org/account/avatar/00/13/5b/2a/83c3cb2d.jpg","nickname":"王庆友","note":"","ucode":"90D8743C4A6C79","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":484785,"discussion_content":"听完这个专栏，你就有思路，知道如何去做了","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1582432801,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1057056,"avatar":"https://static001.geekbang.org/account/avatar/00/10/21/20/1299e137.jpg","nickname":"秋天","note":"","ucode":"A7E1D953EF7E17","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":182544,"discussion_content":"好的，期待后续。看完再向您请教","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1582433537,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":180659,"user_name":"第一装甲集群司令克莱斯特","can_delete":false,"product_type":"c1","uid":1265707,"ip_address":"","ucode":"4E8FBB23AD860B","user_header":"https://static001.geekbang.org/account/avatar/00/13/50/2b/2344cdaa.jpg","comment_is_top":false,"comment_ctime":1582359995,"is_pvip":false,"replies":[{"id":"70104","content":"上得厅堂，下得厨房, 又高端又接地气  :)","user_name":"作者回复","user_name_real":"王庆友","uid":"1268522","ctime":1582374853,"ip_address":"","comment_id":180659,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1582359995","product_id":100046301,"comment_content":"好的架构师能驾驭业务，知道架构的发力点，能指导开发，也能着手开发核心代码，一键通关。","like_count":0,"discussions":[{"author":{"id":1268522,"avatar":"https://static001.geekbang.org/account/avatar/00/13/5b/2a/83c3cb2d.jpg","nickname":"王庆友","note":"","ucode":"90D8743C4A6C79","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":484747,"discussion_content":"上得厅堂，下得厨房, 又高端又接地气  :)","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1582374853,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":180271,"user_name":"西西弗与卡夫卡","can_delete":false,"product_type":"c1","uid":1001710,"ip_address":"","ucode":"B4C27B8335B76A","user_header":"https://static001.geekbang.org/account/avatar/00/0f/48/ee/872ad07e.jpg","comment_is_top":false,"comment_ctime":1582246264,"is_pvip":true,"discussion_count":0,"race_medal":0,"score":"1582246264","product_id":100046301,"comment_content":"预计又会是一门讲实战的好课","like_count":0},{"had_liked":false,"id":180138,"user_name":"学习小能手","can_delete":false,"product_type":"c1","uid":1062128,"ip_address":"","ucode":"4FB2CB8527B7FE","user_header":"https://static001.geekbang.org/account/avatar/00/10/34/f0/b551eba6.jpg","comment_is_top":false,"comment_ctime":1582196379,"is_pvip":true,"replies":[{"id":"69978","content":"你看下专栏的01篇，有专门的解释","user_name":"作者回复","user_name_real":"王庆友","uid":"1268522","ctime":1582211937,"ip_address":"","comment_id":180138,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1582196379","product_id":100046301,"comment_content":"业务架构和技术架构是基于什么划分的？有什么区别？","like_count":0,"discussions":[{"author":{"id":1268522,"avatar":"https://static001.geekbang.org/account/avatar/00/13/5b/2a/83c3cb2d.jpg","nickname":"王庆友","note":"","ucode":"90D8743C4A6C79","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":484540,"discussion_content":"你看下专栏的01篇，有专门的解释","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1582211937,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":180091,"user_name":"李青","can_delete":false,"product_type":"c1","uid":1074564,"ip_address":"","ucode":"30E2CB7F3EFC14","user_header":"https://static001.geekbang.org/account/avatar/00/10/65/84/5515dde0.jpg","comment_is_top":false,"comment_ctime":1582185667,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1582185667","product_id":100046301,"comment_content":"老师，我一直想不明白什么是软件架构，架构师都做了哪些事情","like_count":0},{"had_liked":false,"id":179904,"user_name":"嗨😍那个叫逄边边的姑娘","can_delete":false,"product_type":"c1","uid":1879167,"ip_address":"","ucode":"E716259F3EECC2","user_header":"https://static001.geekbang.org/account/avatar/00/1c/ac/7f/2eca140c.jpg","comment_is_top":false,"comment_ctime":1582120161,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1582120161","product_id":100046301,"comment_content":"👍👍👍","like_count":0},{"had_liked":false,"id":179811,"user_name":"一步","can_delete":false,"product_type":"c1","uid":1005391,"ip_address":"","ucode":"73CEA468CE70C3","user_header":"https://static001.geekbang.org/account/avatar/00/0f/57/4f/6fb51ff1.jpg","comment_is_top":false,"comment_ctime":1582103819,"is_pvip":true,"discussion_count":0,"race_medal":0,"score":"1582103819","product_id":100046301,"comment_content":"学习架构一定要有实战，要不然好多细节把控不到，只有经历过业务的实践才算是合适的架构","like_count":0}]}