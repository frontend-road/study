{"id":69236,"title":"04 | 深入浅出索引（上）","content":"<p>提到数据库索引，我想你并不陌生，在日常工作中会经常接触到。比如某一个SQL查询比较慢，分析完原因之后，你可能就会说“给某个字段加个索引吧”之类的解决方案。但到底什么是索引，索引又是如何工作的呢？今天就让我们一起来聊聊这个话题吧。</p><p>数据库索引的内容比较多，我分成了上下两篇文章。索引是数据库系统里面最重要的概念之一，所以我希望你能够耐心看完。在后面的实战文章中，我也会经常引用这两篇文章中提到的知识点，加深你对数据库索引的理解。</p><p>一句话简单来说，<span class=\"orange\">索引的出现其实就是为了提高数据查询的效率，就像书的目录一样。</span>一本500页的书，如果你想快速找到其中的某一个知识点，在不借助目录的情况下，那我估计你可得找一会儿。同样，对于数据库的表而言，索引其实就是它的“目录”。</p><h1>索引的常见模型</h1><p>索引的出现是为了提高查询效率，但是实现索引的方式却有很多种，所以这里也就引入了索引模型的概念。可以用于提高读写效率的数据结构很多，这里我先给你介绍三种常见、也比较简单的数据结构，它们分别是哈希表、有序数组和搜索树。</p><p>下面我主要从使用的角度，为你简单分析一下这三种模型的区别。</p><p>哈希表是一种以键-值（key-value）存储数据的结构，我们只要输入待查找的键即key，就可以找到其对应的值即Value。哈希的思路很简单，把值放在数组里，用一个哈希函数把key换算成一个确定的位置，然后把value放在数组的这个位置。</p><!-- [[[read_end]]] --><p>不可避免地，多个key值经过哈希函数的换算，会出现同一个值的情况。处理这种情况的一种方法是，拉出一个链表。</p><p>假设，你现在维护着一个身份证信息和姓名的表，需要根据身份证号查找对应的名字，这时对应的哈希索引的示意图如下所示：</p><p><img src=\"https://static001.geekbang.org/resource/image/0c/57/0c62b601afda86fe5d0fe57346ace957.png?wh=1142*856\" alt=\"\"></p><center><span class=\"reference\">图1 哈希表示意图</span></center><p>图中，User2和User4根据身份证号算出来的值都是N，但没关系，后面还跟了一个链表。假设，这时候你要查ID_card_n2对应的名字是什么，处理步骤就是：首先，将ID_card_n2通过哈希函数算出N；然后，按顺序遍历，找到User2。</p><p>需要注意的是，图中四个ID_card_n的值并不是递增的，这样做的好处是增加新的User时速度会很快，只需要往后追加。但缺点是，因为不是有序的，所以哈希索引做区间查询的速度是很慢的。</p><p>你可以设想下，如果你现在要找身份证号在[ID_card_X, ID_card_Y]这个区间的所有用户，就必须全部扫描一遍了。</p><p>所以，<strong>哈希表这种结构适用于只有等值查询的场景</strong>，比如Memcached及其他一些NoSQL引擎。</p><p>而<strong>有序数组在等值查询和范围查询场景中的性能就都非常优秀</strong>。还是上面这个根据身份证号查名字的例子，如果我们使用有序数组来实现的话，示意图如下所示：</p><p><img src=\"https://static001.geekbang.org/resource/image/bf/49/bfc907a92f99cadf5493cf0afac9ca49.png?wh=1142*787\" alt=\"\"></p><center><span class=\"reference\">图2 有序数组示意图</span></center><p>这里我们假设身份证号没有重复，这个数组就是按照身份证号递增的顺序保存的。这时候如果你要查ID_card_n2对应的名字，用二分法就可以快速得到，这个时间复杂度是O(log(N))。</p><p>同时很显然，这个索引结构支持范围查询。你要查身份证号在[ID_card_X, ID_card_Y]区间的User，可以先用二分法找到ID_card_X（如果不存在ID_card_X，就找到大于ID_card_X的第一个User），然后向右遍历，直到查到第一个大于ID_card_Y的身份证号，退出循环。</p><p>如果仅仅看查询效率，有序数组就是最好的数据结构了。但是，在需要更新数据的时候就麻烦了，你往中间插入一个记录就必须得挪动后面所有的记录，成本太高。</p><p>所以，<strong>有序数组索引只适用于静态存储引擎</strong>，比如你要保存的是2017年某个城市的所有人口信息，这类不会再修改的数据。</p><p>二叉搜索树也是课本里的经典数据结构了。还是上面根据身份证号查名字的例子，如果我们用二叉搜索树来实现的话，示意图如下所示：</p><p><img src=\"https://static001.geekbang.org/resource/image/04/68/04fb9d24065635a6a637c25ba9ddde68.png?wh=1142*856\" alt=\"\"></p><center><span class=\"reference\">图3 二叉搜索树示意图</span></center><p>二叉搜索树的特点是：父节点左子树所有结点的值小于父节点的值，右子树所有结点的值大于父节点的值。这样如果你要查ID_card_n2的话，按照图中的搜索顺序就是按照UserA -&gt; UserC -&gt; UserF -&gt; User2这个路径得到。这个时间复杂度是O(log(N))。</p><p>当然为了维持O(log(N))的查询复杂度，你就需要保持这棵树是平衡二叉树。为了做这个保证，更新的时间复杂度也是O(log(N))。</p><p>树可以有二叉，也可以有多叉。多叉树就是每个节点有多个儿子，儿子之间的大小保证从左到右递增。二叉树是搜索效率最高的，但是实际上大多数的数据库存储却并不使用二叉树。其原因是，索引不止存在内存中，还要写到磁盘上。</p><p>你可以想象一下一棵100万节点的平衡二叉树，树高20。一次查询可能需要访问20个数据块。在机械硬盘时代，从磁盘随机读一个数据块需要10 ms左右的寻址时间。也就是说，对于一个100万行的表，如果使用二叉树来存储，单独访问一个行可能需要20个10 ms的时间，这个查询可真够慢的。</p><p>为了让一个查询尽量少地读磁盘，就必须让查询过程访问尽量少的数据块。那么，我们就不应该使用二叉树，而是要使用“N叉”树。这里，“N叉”树中的“N”取决于数据块的大小。</p><p>以InnoDB的一个整数字段索引为例，这个N差不多是1200。这棵树高是4的时候，就可以存1200的3次方个值，这已经17亿了。考虑到树根的数据块总是在内存中的，一个10亿行的表上一个整数字段的索引，查找一个值最多只需要访问3次磁盘。其实，树的第二层也有很大概率在内存中，那么访问磁盘的平均次数就更少了。</p><p>N叉树由于在读写上的性能优点，以及适配磁盘的访问模式，已经被广泛应用在数据库引擎中了。</p><p>不管是哈希还是有序数组，或者N叉树，它们都是不断迭代、不断优化的产物或者解决方案。数据库技术发展到今天，跳表、LSM树等数据结构也被用于引擎设计中，这里我就不再一一展开了。</p><p>你心里要有个概念，数据库底层存储的核心就是基于这些数据模型的。每碰到一个新数据库，我们需要先关注它的数据模型，这样才能从理论上分析出这个数据库的适用场景。</p><p>截止到这里，我用了半篇文章的篇幅和你介绍了不同的数据结构，以及它们的适用场景，你可能会觉得有些枯燥。但是，我建议你还是要多花一些时间来理解这部分内容，毕竟这是数据库处理数据的核心概念之一，在分析问题的时候会经常用到。当你理解了索引的模型后，就会发现在分析问题的时候会有一个更清晰的视角，体会到引擎设计的精妙之处。</p><p>现在，我们一起进入相对偏实战的内容吧。</p><p>在MySQL中，索引是在存储引擎层实现的，所以并没有统一的索引标准，即不同存储引擎的索引的工作方式并不一样。而即使多个存储引擎支持同一种类型的索引，其底层的实现也可能不同。由于InnoDB存储引擎在MySQL数据库中使用最为广泛，所以下面我就以InnoDB为例，和你分析一下其中的索引模型。</p><h1>InnoDB 的索引模型</h1><p>在InnoDB中，表都是根据主键顺序以索引的形式存放的，这种存储方式的表称为索引组织表。又因为前面我们提到的，InnoDB使用了B+树索引模型，所以数据都是存储在B+树中的。</p><p>每一个索引在InnoDB里面对应一棵B+树。</p><p>假设，我们有一个主键列为ID的表，表中有字段k，并且在k上有索引。</p><p>这个表的建表语句是：</p><pre><code>mysql&gt; create table T(\nid int primary key, \nk int not null, \nname varchar(16),\nindex (k))engine=InnoDB;\n</code></pre><p>表中R1~R5的(ID,k)值分别为(100,1)、(200,2)、(300,3)、(500,5)和(600,6)，两棵树的示例示意图如下。</p><p><img src=\"https://static001.geekbang.org/resource/image/dc/8d/dcda101051f28502bd5c4402b292e38d.png?wh=1142*856\" alt=\"\"></p><center><span class=\"reference\">图4 InnoDB的索引组织结构</span></center><p>从图中不难看出，根据叶子节点的内容，索引类型分为主键索引和非主键索引。</p><p>主键索引的叶子节点存的是整行数据。在InnoDB里，主键索引也被称为聚簇索引（clustered index）。</p><p>非主键索引的叶子节点内容是主键的值。在InnoDB里，非主键索引也被称为二级索引（secondary index）。</p><p>根据上面的索引结构说明，我们来讨论一个问题：<strong>基于主键索引和普通索引的查询有什么区别？</strong></p><ul>\n<li>如果语句是select * from T where ID=500，即主键查询方式，则只需要搜索ID这棵B+树；</li>\n<li>如果语句是select * from T where k=5，即普通索引查询方式，则需要先搜索k索引树，得到ID的值为500，再到ID索引树搜索一次。这个过程称为回表。</li>\n</ul><p>也就是说，基于非主键索引的查询需要多扫描一棵索引树。因此，我们在应用中应该尽量使用主键查询。</p><h1>索引维护</h1><p>B+树为了维护索引有序性，在插入新值的时候需要做必要的维护。以上面这个图为例，如果插入新的行ID值为700，则只需要在R5的记录后面插入一个新记录。如果新插入的ID值为400，就相对麻烦了，需要逻辑上挪动后面的数据，空出位置。</p><p>而更糟的情况是，如果R5所在的数据页已经满了，根据B+树的算法，这时候需要申请一个新的数据页，然后挪动部分数据过去。这个过程称为页分裂。在这种情况下，性能自然会受影响。</p><p>除了性能外，页分裂操作还影响数据页的利用率。原本放在一个页的数据，现在分到两个页中，整体空间利用率降低大约50%。</p><p>当然有分裂就有合并。当相邻两个页由于删除了数据，利用率很低之后，会将数据页做合并。合并的过程，可以认为是分裂过程的逆过程。</p><p>基于上面的索引维护过程说明，我们来讨论一个案例：</p><blockquote>\n<p>你可能在一些建表规范里面见到过类似的描述，要求建表语句里一定要有自增主键。当然事无绝对，我们来分析一下哪些场景下应该使用自增主键，而哪些场景下不应该。</p>\n</blockquote><p>自增主键是指自增列上定义的主键，在建表语句中一般是这么定义的： NOT NULL PRIMARY KEY AUTO_INCREMENT。</p><p>插入新记录的时候可以不指定ID的值，系统会获取当前ID最大值加1作为下一条记录的ID值。</p><p>也就是说，自增主键的插入数据模式，正符合了我们前面提到的递增插入的场景。每次插入一条新记录，都是追加操作，都不涉及到挪动其他记录，也不会触发叶子节点的分裂。</p><p>而有业务逻辑的字段做主键，则往往不容易保证有序插入，这样写数据成本相对较高。</p><p>除了考虑性能外，我们还可以从存储空间的角度来看。假设你的表中确实有一个唯一字段，比如字符串类型的身份证号，那应该用身份证号做主键，还是用自增字段做主键呢？</p><p>由于每个非主键索引的叶子节点上都是主键的值。如果用身份证号做主键，那么每个二级索引的叶子节点占用约20个字节，而如果用整型做主键，则只要4个字节，如果是长整型（bigint）则是8个字节。</p><p><strong>显然，主键长度越小，普通索引的叶子节点就越小，普通索引占用的空间也就越小。</strong></p><p>所以，从性能和存储空间方面考量，自增主键往往是更合理的选择。</p><p>有没有什么场景适合用业务字段直接做主键的呢？还是有的。比如，有些业务的场景需求是这样的：</p><ol>\n<li>\n<p>只有一个索引；</p>\n</li>\n<li>\n<p>该索引必须是唯一索引。</p>\n</li>\n</ol><p>你一定看出来了，这就是典型的KV场景。</p><p>由于没有其他索引，所以也就不用考虑其他索引的叶子节点大小的问题。</p><p>这时候我们就要优先考虑上一段提到的“尽量使用主键查询”原则，直接将这个索引设置为主键，可以避免每次查询需要搜索两棵树。</p><h1>小结</h1><p>今天，我跟你分析了数据库引擎可用的数据结构，介绍了InnoDB采用的B+树结构，以及为什么InnoDB要这么选择。B+树能够很好地配合磁盘的读写特性，减少单次查询的磁盘访问次数。</p><p>由于InnoDB是索引组织表，一般情况下我会建议你创建一个自增主键，这样非主键索引占用的空间最小。但事无绝对，我也跟你讨论了使用业务逻辑字段做主键的应用场景。</p><p>最后，我给你留下一个问题吧。对于上面例子中的InnoDB表T，如果你要重建索引 k，你的两个SQL语句可以这么写：</p><pre><code>alter table T drop index k;\nalter table T add index(k);\n</code></pre><p>如果你要重建主键索引，也可以这么写：</p><pre><code>alter table T drop primary key;\nalter table T add primary key(id);\n</code></pre><p>我的问题是，对于上面这两个重建索引的作法，说出你的理解。如果有不合适的，为什么，更好的方法是什么？</p><p>你可以把你的思考和观点写在留言区里，我会在下一篇文章的末尾给出我的参考答案。感谢你的收听，也欢迎你把这篇文章分享给更多的朋友一起阅读。</p><h1>上期问题时间</h1><p>我在上一篇文章末尾给你留下的问题是：如何避免长事务对业务的影响？</p><p>这个问题，我们可以从应用开发端和数据库端来看。</p><p><strong>首先，从应用开发端来看：</strong></p><ol>\n<li>\n<p>确认是否使用了set autocommit=0。这个确认工作可以在测试环境中开展，把MySQL的general_log开起来，然后随便跑一个业务逻辑，通过general_log的日志来确认。一般框架如果会设置这个值，也就会提供参数来控制行为，你的目标就是把它改成1。</p>\n</li>\n<li>\n<p>确认是否有不必要的只读事务。有些框架会习惯不管什么语句先用begin/commit框起来。我见过有些是业务并没有这个需要，但是也把好几个select语句放到了事务中。这种只读事务可以去掉。</p>\n</li>\n<li>\n<p>业务连接数据库的时候，根据业务本身的预估，通过SET MAX_EXECUTION_TIME命令，来控制每个语句执行的最长时间，避免单个语句意外执行太长时间。（为什么会意外？在后续的文章中会提到这类案例）</p>\n</li>\n</ol><p><strong>其次，从数据库端来看：</strong></p><ol>\n<li>\n<p>监控 information_schema.Innodb_trx表，设置长事务阈值，超过就报警/或者kill；</p>\n</li>\n<li>\n<p>Percona的pt-kill这个工具不错，推荐使用；</p>\n</li>\n<li>\n<p>在业务功能测试阶段要求输出所有的general_log，分析日志行为提前发现问题；</p>\n</li>\n<li>\n<p>如果使用的是MySQL  5.6或者更新版本，把innodb_undo_tablespaces设置成2（或更大的值）。如果真的出现大事务导致回滚段过大，这样设置后清理起来更方便。</p>\n</li>\n</ol><p>感谢 @壹笙☞漂泊 @王凯 @易翔 留下的高质量评论。</p>","neighbors":{"left":{"article_title":"03 | 事务隔离：为什么你改了我还看不见？","id":68963},"right":{"article_title":"05 | 深入浅出索引（下）","id":69636}},"comments":[{"had_liked":false,"id":43898,"user_name":"JackPn","can_delete":false,"product_type":"c1","uid":1190170,"ip_address":"","ucode":"0A207AF8D39F76","user_header":"https://static001.geekbang.org/account/avatar/00/12/29/1a/87f11f3d.jpg","comment_is_top":true,"comment_ctime":1543320401,"is_pvip":false,"replies":[{"id":"15674","content":"每一个表是好几棵B+树（应该是你理解对了但是手误），<br>其它的完全正确","user_name":"作者回复","comment_id":43898,"uid":"1264162","ip_address":"","utype":1,"ctime":1543323337,"user_name_real":"林晓斌"}],"discussion_count":33,"race_medal":0,"score":"9.2233733097084006e+18","product_id":100020801,"comment_content":"老师我可不可以理解为：每一张表其实就是一个B+树，树结点的key值就是某一行的主键，value是该行的其他数据。新建索引就是新增一个B+树，查询不走索引就是遍历主B+树。","like_count":296,"discussions":[{"author":{"id":2644383,"avatar":"https://static001.geekbang.org/account/avatar/00/28/59/9f/fb04a5fd.jpg","nickname":"南顺城街","note":"","ucode":"0BDC30E5FBB0C8","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":376960,"discussion_content":"不对，一个索引一棵树，一个表有多个索引，就有多个树","likes_number":24,"is_delete":false,"is_hidden":false,"ctime":1622438497,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1243901,"avatar":"https://static001.geekbang.org/account/avatar/00/12/fa/fd/ec24cba7.jpg","nickname":"fcb的鱼","note":"","ucode":"88667EBF09CEC0","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":236205,"discussion_content":"对，普通索引树的叶子结点，key值就是整个索引值，如果是联合索引，就是联合索引排序后的值。value就是主键索引值。","likes_number":17,"is_delete":false,"is_hidden":false,"ctime":1587082416,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1448188,"avatar":"https://static001.geekbang.org/account/avatar/00/16/18/fc/0510a8fc.jpg","nickname":"风起","note":"","ucode":"E4ECF5F96554D2","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":53998,"discussion_content":"这是有条件的，存储引擎要为innodb。","likes_number":8,"is_delete":false,"is_hidden":false,"ctime":1574248439,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":2425816,"avatar":"https://static001.geekbang.org/account/avatar/00/25/03/d8/5c627796.jpg","nickname":"检察院院长","note":"","ucode":"DF9C6E24696F0F","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":345368,"discussion_content":"value应该是指向对应数据记录物理地址的指针吧","likes_number":4,"is_delete":false,"is_hidden":false,"ctime":1611714265,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":1,"child_discussions":[{"author":{"id":1809676,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/fBOybgVTWXYXxaicaVEysXCjkKT13dX7icAj96KibJ815mia1FvYro9KcbA3xtwnIxmPJ38Vt6rmg6vp0auGKel93A/132","nickname":"Geek_d26e63","note":"","ucode":"24125CED20B6DF","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":2425816,"avatar":"https://static001.geekbang.org/account/avatar/00/25/03/d8/5c627796.jpg","nickname":"检察院院长","note":"","ucode":"DF9C6E24696F0F","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":371236,"discussion_content":"innodb用物理地址不太可能，因为各种原因数据的长度、偏移可能不一样，myisam的定长格式倒是有","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1619690716,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":345368,"ip_address":""},"score":371236,"extra":""}]},{"author":{"id":1264162,"avatar":"https://static001.geekbang.org/account/avatar/00/13/4a/22/2681d602.jpg","nickname":"林晓斌","note":"","ucode":"CDE42D44F26240","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":430539,"discussion_content":"每一个表是好几棵B+树（应该是你理解对了但是手误），\n其它的完全正确","likes_number":3,"is_delete":false,"is_hidden":false,"ctime":1543323337,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":2858900,"avatar":"https://static001.geekbang.org/account/avatar/00/2b/9f/94/b999c594.jpg","nickname":"技术架构师","note":"","ucode":"3E8DBDF61F77B2","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":588362,"discussion_content":"这是在主键索引(聚簇索引)的情况下，数据都存放在叶子结点上，索引即数据，数据即索引；如果是二级索引，data存放的就是主键索引值，需要进行回表操作","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1663688794,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":"广东"},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1601225,"avatar":"https://static001.geekbang.org/account/avatar/00/18/6e/c9/fafecc30.jpg","nickname":"长安","note":"","ucode":"1612BEB9933364","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":319209,"discussion_content":"？？？","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1603963221,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1099706,"avatar":"https://static001.geekbang.org/account/avatar/00/10/c7/ba/4c449be2.jpg","nickname":"zhaozp","note":"","ucode":"BF390F5ED762CD","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":35811,"discussion_content":"如果一张表没有主键，也没有其他索引，数据怎么存储的？","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1571306691,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":11,"child_discussions":[{"author":{"id":1183717,"avatar":"https://static001.geekbang.org/account/avatar/00/12/0f/e5/f53ff970.jpg","nickname":"鲫鱼","note":"","ucode":"3BAB90488C6180","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1099706,"avatar":"https://static001.geekbang.org/account/avatar/00/10/c7/ba/4c449be2.jpg","nickname":"zhaozp","note":"","ucode":"BF390F5ED762CD","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":40406,"discussion_content":"会创建默认主键，并有主键索引","likes_number":32,"is_delete":false,"is_hidden":false,"ctime":1572184686,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":35811,"ip_address":""},"score":40406,"extra":""},{"author":{"id":1335293,"avatar":"https://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTKR3ibELhjgVicCNShZCBwvaDxibnzibggG4wUzVkS2mkDxUBZyIs87nDEdJ7PiahJBVoZcuhQ84RxAziag/132","nickname":"周治慧","note":"","ucode":"7D56C4E66BEE17","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1099706,"avatar":"https://static001.geekbang.org/account/avatar/00/10/c7/ba/4c449be2.jpg","nickname":"zhaozp","note":"","ucode":"BF390F5ED762CD","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":179585,"discussion_content":"innodb情况下使用的是聚集索引,即主键索引和行记录数据存在一起;当表每有主键的时候,会选择非空唯一的唯一键做为主键索引,唯一索引页不存在的时候会分配8字节无符号的rowId作为主键索引,rowId达到最大后会重新归为0即覆盖之前的数据","likes_number":39,"is_delete":false,"is_hidden":false,"ctime":1582242194,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":35811,"ip_address":""},"score":179585,"extra":""},{"author":{"id":1751818,"avatar":"https://static001.geekbang.org/account/avatar/00/1a/bb/0a/f9d81f3e.jpg","nickname":"挥手自兹去，萧萧班马鸣","note":"","ucode":"AE3A2187AC1A30","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1335293,"avatar":"https://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTKR3ibELhjgVicCNShZCBwvaDxibnzibggG4wUzVkS2mkDxUBZyIs87nDEdJ7PiahJBVoZcuhQ84RxAziag/132","nickname":"周治慧","note":"","ucode":"7D56C4E66BEE17","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":294536,"discussion_content":"覆盖之前的数据，这样丢失了数据咋办？","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1595920481,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":179585,"ip_address":""},"score":294536,"extra":""}]},{"author":{"id":2546103,"avatar":"","nickname":"刘志鹏","note":"","ucode":"FBA7FA3A392D22","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":560845,"discussion_content":"聚簇索引树，非根节点，key是主键值，value是指向其他节点的值。根节点，value是行记录。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1649467977,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":2705422,"avatar":"https://static001.geekbang.org/account/avatar/00/29/48/0e/ea42eaf8.jpg","nickname":"Rui","note":"","ucode":"995E914B6DFAE5","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":384498,"discussion_content":"MYSQL数据存储在聚簇索引的叶子结点下吗？","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1626617428,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":2705422,"avatar":"https://static001.geekbang.org/account/avatar/00/29/48/0e/ea42eaf8.jpg","nickname":"Rui","note":"","ucode":"995E914B6DFAE5","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":384493,"discussion_content":"查询不走索引，是遍历聚簇索引还是全表扫描，求解答","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1626615939,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":3,"extra":"","child_discussion_number":3,"child_discussions":[{"author":{"id":2696020,"avatar":"","nickname":"Geek_9010bd","note":"","ucode":"9BB8B7F722A599","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":2705422,"avatar":"https://static001.geekbang.org/account/avatar/00/29/48/0e/ea42eaf8.jpg","nickname":"Rui","note":"","ucode":"995E914B6DFAE5","race_medal":0,"user_type":1,"is_pvip":true},"discussion":{"id":384635,"discussion_content":"遍历聚簇索引就是全表扫描","likes_number":4,"is_delete":false,"is_hidden":false,"ctime":1626684057,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":384493,"ip_address":""},"score":384635,"extra":""},{"author":{"id":1167682,"avatar":"","nickname":"小烧饼","note":"","ucode":"E66D5D0C85B3EF","race_medal":2,"user_type":1,"is_pvip":false},"reply_author":{"id":2696020,"avatar":"","nickname":"Geek_9010bd","note":"","ucode":"9BB8B7F722A599","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":388728,"discussion_content":"那如果表不加索引，是怎么查的","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1628928581,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":384635,"ip_address":""},"score":388728,"extra":""},{"author":{"id":1582134,"avatar":"https://static001.geekbang.org/account/avatar/00/18/24/36/1c4af368.jpg","nickname":"TheOne","note":"","ucode":"2A359780156A8B","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1167682,"avatar":"","nickname":"小烧饼","note":"","ucode":"E66D5D0C85B3EF","race_medal":2,"user_type":1,"is_pvip":false},"discussion":{"id":392836,"discussion_content":"如果没有主键会默认创建一个，然后再用这个主键的聚簇索引吧，好像是","likes_number":2,"is_delete":false,"is_hidden":false,"ctime":1631150794,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":388728,"ip_address":""},"score":392836,"extra":""}]},{"author":{"id":1239462,"avatar":"https://static001.geekbang.org/account/avatar/00/12/e9/a6/69907ec1.jpg","nickname":"李伟","note":"","ucode":"F0EF60EB250B20","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":1387,"discussion_content":"关于这个问题，我有个疑问，普通索引树的key也是某一行的主键吗？不应该这个列的值吗","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1562594745,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":3,"extra":"","child_discussion_number":6,"child_discussions":[{"author":{"id":1147495,"avatar":"https://static001.geekbang.org/account/avatar/00/11/82/67/cc0e5b46.jpg","nickname":"鹿先生","note":"","ucode":"496222D648BB98","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1239462,"avatar":"https://static001.geekbang.org/account/avatar/00/12/e9/a6/69907ec1.jpg","nickname":"李伟","note":"","ucode":"F0EF60EB250B20","race_medal":0,"user_type":1,"is_pvip":true},"discussion":{"id":1596,"discussion_content":"我猜这兄弟第一句话 “每一张表其实就是一个B+树”的前提是没有其他索引 只有主键","likes_number":16,"is_delete":false,"is_hidden":false,"ctime":1562723858,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":1387,"ip_address":""},"score":1596,"extra":""},{"author":{"id":1020386,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/91/e2/acf750ab.jpg","nickname":"yan","note":"","ucode":"8E7F8155D15646","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1239462,"avatar":"https://static001.geekbang.org/account/avatar/00/12/e9/a6/69907ec1.jpg","nickname":"李伟","note":"","ucode":"F0EF60EB250B20","race_medal":0,"user_type":1,"is_pvip":true},"discussion":{"id":55838,"discussion_content":"应该是普通列索引B+树叶子节点key存放的是索引的值，而data就是这一行对应的主键","likes_number":38,"is_delete":false,"is_hidden":false,"ctime":1574404477,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":1387,"ip_address":""},"score":55838,"extra":""},{"author":{"id":1334527,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/WuVCibYmuGqFLnfIrr0BmkdzHwkialB0DibJ0YnymNNO2Wicy76ZxSvjD66sPVsd9SjkicSS4Z2iadTeOn7zGfwh9sxg/132","nickname":"灵犀andy","note":"","ucode":"3C3C36B070676C","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1020386,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/91/e2/acf750ab.jpg","nickname":"yan","note":"","ucode":"8E7F8155D15646","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":100206,"discussion_content":"赞同你的观点。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1577242234,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":55838,"ip_address":""},"score":100206,"extra":""}]}]},{"had_liked":false,"id":51793,"user_name":"wuxue_123","can_delete":false,"product_type":"c1","uid":1327273,"ip_address":"","ucode":"3086949153D965","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTK9z4ADkhDVV2oNaRmetm5QMFB2ayr5hHIJGA3cGibkFxbiaCYuyPwJQB800dMFGqwslmuvXbdulDVw/132","comment_is_top":true,"comment_ctime":1545259141,"is_pvip":false,"replies":[{"id":"18783","content":"这两个语句是都不用回表了，在“查找行”这个逻辑上是一样的，<br><br>但是select *要读和拷贝更多列到server,还要发送更多列给客户端，所以还是select id更快的。<br><br>好问题","user_name":"作者回复","comment_id":51793,"uid":"1264162","ip_address":"","utype":1,"ctime":1545271245,"user_name_real":"林晓斌"}],"discussion_count":28,"race_medal":0,"score":"9.2233729961777009e+18","product_id":100020801,"comment_content":"老师，回表只是普通索引才会有的吗？主键和数据放在同一个树中，根据主键查询的时候，就可以直接获得数据了。<br>那select ＊from table where id＝xx<br>和select id from table where id＝xx<br>的效率是一样的吗？（id是主键）","like_count":223,"discussions":[{"author":{"id":1123043,"avatar":"https://static001.geekbang.org/account/avatar/00/11/22/e3/510b69f9.jpg","nickname":"benny","note":"","ucode":"E2F30AF0C808D9","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":52275,"discussion_content":"select id from table where id＝xx 这个查询意义何在？都知道id了","likes_number":15,"is_delete":false,"is_hidden":false,"ctime":1574033785,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":12,"child_discussions":[{"author":{"id":1453053,"avatar":"https://static001.geekbang.org/account/avatar/00/16/2b/fd/7013289d.jpg","nickname":"温故而知新可以为师矣","note":"","ucode":"FADCDFA9F9E5E8","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1123043,"avatar":"https://static001.geekbang.org/account/avatar/00/11/22/e3/510b69f9.jpg","nickname":"benny","note":"","ucode":"E2F30AF0C808D9","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":74736,"discussion_content":"会不会优化器直接就返回结果了，哈哈哈","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1575682524,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":52275,"ip_address":""},"score":74736,"extra":""},{"author":{"id":1194858,"avatar":"https://static001.geekbang.org/account/avatar/00/12/3b/6a/80d9c545.jpg","nickname":"RD","note":"","ucode":"E3947B6E1681AD","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1123043,"avatar":"https://static001.geekbang.org/account/avatar/00/11/22/e3/510b69f9.jpg","nickname":"benny","note":"","ucode":"E2F30AF0C808D9","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":89132,"discussion_content":"查看 xx 的 id 是否存在","likes_number":14,"is_delete":false,"is_hidden":false,"ctime":1576751542,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":52275,"ip_address":""},"score":89132,"extra":""},{"author":{"id":1110662,"avatar":"https://static001.geekbang.org/account/avatar/00/10/f2/86/d689f77e.jpg","nickname":"Hank_Yan","note":"","ucode":"86899B561C502B","race_medal":3,"user_type":1,"is_pvip":false},"reply_author":{"id":1194858,"avatar":"https://static001.geekbang.org/account/avatar/00/12/3b/6a/80d9c545.jpg","nickname":"RD","note":"","ucode":"E3947B6E1681AD","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":92931,"discussion_content":"可能有这种逻辑，哈哈哈","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1576894686,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":89132,"ip_address":""},"score":92931,"extra":""}]},{"author":{"id":2276136,"avatar":"https://static001.geekbang.org/account/avatar/00/22/bb/28/a547d2b3.jpg","nickname":"王小歪","note":"","ucode":"3518550D9CA346","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":340649,"discussion_content":"使用* 在sql解析的时候需要先转换列，将* 映射为所有的列字段，并且在查找返回的时候返回所有列","likes_number":8,"is_delete":false,"is_hidden":false,"ctime":1610087644,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":2027258,"avatar":"https://static001.geekbang.org/account/avatar/00/1e/ee/fa/31361552.jpg","nickname":"X","note":"","ucode":"688D816A4931CA","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":313581,"discussion_content":"主键的值不就是整行数据吗，那通过主键查询，肯定就能查询到数据啊","likes_number":2,"is_delete":false,"is_hidden":false,"ctime":1603073550,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":1,"child_discussions":[{"author":{"id":2098652,"avatar":"https://static001.geekbang.org/account/avatar/00/20/05/dc/b501933a.jpg","nickname":"有手也不行","note":"","ucode":"D55D23A2C4517E","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":2027258,"avatar":"https://static001.geekbang.org/account/avatar/00/1e/ee/fa/31361552.jpg","nickname":"X","note":"","ucode":"688D816A4931CA","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":388523,"discussion_content":"说的是内存代价吧","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1628822163,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":313581,"ip_address":""},"score":388523,"extra":""}]},{"author":{"id":1285088,"avatar":"https://static001.geekbang.org/account/avatar/00/13/9b/e0/9fde83d6.jpg","nickname":"脑子是个好东西～","note":"","ucode":"1E6886C73BA81A","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":161577,"discussion_content":"好例子，之前都没有想起来根据ID查询可以直接从叶子节点拿到整行数据，不用发生回表操作。","likes_number":2,"is_delete":false,"is_hidden":false,"ctime":1580909944,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1264162,"avatar":"https://static001.geekbang.org/account/avatar/00/13/4a/22/2681d602.jpg","nickname":"林晓斌","note":"","ucode":"CDE42D44F26240","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":433623,"discussion_content":"这两个语句是都不用回表了，在“查找行”这个逻辑上是一样的，\n\n但是select *要读和拷贝更多列到server,还要发送更多列给客户端，所以还是select id更快的。\n\n好问题","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1545271245,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1593289,"avatar":"https://static001.geekbang.org/account/avatar/00/18/4f/c9/9f51fd27.jpg","nickname":"编程界的小学生","note":"","ucode":"4A5BE9A5E877FA","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":200598,"discussion_content":"老师，这道题是不是不严谨？如果k是唯一索引，然后select k from t where k = 1是不是也不用回表。","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1583686149,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":5,"child_discussions":[{"author":{"id":1158349,"avatar":"https://static001.geekbang.org/account/avatar/00/11/ac/cd/fda6374f.jpg","nickname":"Louis","note":"","ucode":"BC667839F17937","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1593289,"avatar":"https://static001.geekbang.org/account/avatar/00/18/4f/c9/9f51fd27.jpg","nickname":"编程界的小学生","note":"","ucode":"4A5BE9A5E877FA","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":276155,"discussion_content":"这是索引覆盖","likes_number":4,"is_delete":false,"is_hidden":false,"ctime":1590830363,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":200598,"ip_address":""},"score":276155,"extra":""},{"author":{"id":1117874,"avatar":"https://static001.geekbang.org/account/avatar/00/11/0e/b2/7cf7e91c.jpg","nickname":"wsw","note":"","ucode":"68885262052BCD","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1593289,"avatar":"https://static001.geekbang.org/account/avatar/00/18/4f/c9/9f51fd27.jpg","nickname":"编程界的小学生","note":"","ucode":"4A5BE9A5E877FA","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":299165,"discussion_content":"难道这不是主键吗？一个表里面只有一个索引k，那么也会回表？","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1597583056,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":200598,"ip_address":""},"score":299165,"extra":""},{"author":{"id":1637475,"avatar":"https://static001.geekbang.org/account/avatar/00/18/fc/63/bcda2f87.jpg","nickname":"熊","note":"","ucode":"B6423D29701EC5","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":1593289,"avatar":"https://static001.geekbang.org/account/avatar/00/18/4f/c9/9f51fd27.jpg","nickname":"编程界的小学生","note":"","ucode":"4A5BE9A5E877FA","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":305710,"discussion_content":"这是覆盖索引","likes_number":4,"is_delete":false,"is_hidden":false,"ctime":1600065593,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":200598,"ip_address":""},"score":305710,"extra":""}]},{"author":{"id":1020386,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/91/e2/acf750ab.jpg","nickname":"yan","note":"","ucode":"8E7F8155D15646","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":55839,"discussion_content":"应该就是举个例子，id可以换成其它列","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1574404614,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":2412392,"avatar":"https://static001.geekbang.org/account/avatar/00/24/cf/68/676f86c0.jpg","nickname":"YI","note":"","ucode":"E586B3290BB42E","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":587315,"discussion_content":"不一定说使用非主键索引进行查询的话，就一定会触发回表。主要还是看你的查询数据列，普通索引列能不能完全覆盖，如果可以的话，是不会回表的","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1662974562,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":"陕西"},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":2030040,"avatar":"https://static001.geekbang.org/account/avatar/00/1e/f9/d8/d5242c0a.jpg","nickname":"icedcoffee","note":"","ucode":"124A371E903833","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":284571,"discussion_content":"“但是select *要读和拷贝更多列到server,还要发送更多列给客户端，所以还是select id更快的。” 仅仅就是多拷贝了这一行的其他数据，所以效率就低了吗？","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1592559014,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":1,"child_discussions":[{"author":{"id":1107305,"avatar":"https://static001.geekbang.org/account/avatar/00/10/e5/69/719ec5d0.jpg","nickname":"Jian","note":"","ucode":"17ED4919F22DEC","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":2030040,"avatar":"https://static001.geekbang.org/account/avatar/00/1e/f9/d8/d5242c0a.jpg","nickname":"icedcoffee","note":"","ucode":"124A371E903833","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":339984,"discussion_content":"网络传输效率，试想下，背1kg石头过马路与背10kg石头，哪个效率高？","likes_number":3,"is_delete":false,"is_hidden":false,"ctime":1609855932,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":284571,"ip_address":""},"score":339984,"extra":""}]}]},{"had_liked":false,"id":42246,"user_name":"Christain","can_delete":false,"product_type":"c1","uid":1302271,"ip_address":"","ucode":"90408D2069E823","user_header":"https://static001.geekbang.org/account/avatar/00/13/de/ff/a64e347a.jpg","comment_is_top":true,"comment_ctime":1542935378,"is_pvip":false,"replies":[{"id":"15122","content":"理论篇的先到这里，实践篇的还有六篇索引相关。<br>1. 我们文中有这样的例子了哦。like “张%” 就是对name 字段的范围查询&#47;模糊查询。 age 就是你说的最后一个字段啦 😄<br>2. 我们有两篇的篇幅来讲order by, 第14和16（15是答疑）<br>3. 根据查询需要😓<br>4. 等《如何给字符串字段加索引》发布哈<br><br>嗯索引的内容其实很多，基础篇两篇是不可能写完的，而且怕理论类太多大家读着累，把一些知识点放到实践篇了 @all ","user_name":"作者回复","comment_id":42246,"uid":"1264162","ip_address":"","utype":1,"ctime":1542938219,"user_name_real":"林晓斌"}],"discussion_count":7,"race_medal":0,"score":"9.2233724593044992e+18","product_id":100020801,"comment_content":"老师，索引篇结束了么？<br>有几个问题<br>1 :三个字段联合索引时，如果中间的字段使用了范围查询或者模糊查询，最后一个字段还会用到索引么？<br>2:在order by时，索引是如何使用的<br>3:新建一张表，如何界定其索引的数量，有没有选择或者公式<br>4:能不能再详细介绍下字符串前缀索引","like_count":98,"discussions":[{"author":{"id":1304095,"avatar":"https://static001.geekbang.org/account/avatar/00/13/e6/1f/1dca76e5.jpg","nickname":"Robert","note":"","ucode":"BC46EBC8B45E5A","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":2612,"discussion_content":"MySQL 5.6之后对索引做了优化，索引下推，引擎层匹配，减少回表次数","likes_number":4,"is_delete":false,"is_hidden":false,"ctime":1563787060,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1264162,"avatar":"https://static001.geekbang.org/account/avatar/00/13/4a/22/2681d602.jpg","nickname":"林晓斌","note":"","ucode":"CDE42D44F26240","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":430022,"discussion_content":"理论篇的先到这里，实践篇的还有六篇索引相关。\n1. 我们文中有这样的例子了哦。like “张%” 就是对name 字段的范围查询/模糊查询。 age 就是你说的最后一个字段啦 😄\n2. 我们有两篇的篇幅来讲order by, 第14和16（15是答疑）\n3. 根据查询需要😓\n4. 等《如何给字符串字段加索引》发布哈\n\n嗯索引的内容其实很多，基础篇两篇是不可能写完的，而且怕理论类太多大家读着累，把一些知识点放到实践篇了 @all ","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1542938219,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1076155,"avatar":"https://static001.geekbang.org/account/avatar/00/10/6b/bb/10aaf123.jpg","nickname":"王世林","note":"","ucode":"2BB56D0FD71417","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":326925,"discussion_content":"索引结构在于查找和排序","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1605703854,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":2252648,"avatar":"https://static001.geekbang.org/account/avatar/00/22/5f/68/8e4407c7.jpg","nickname":"💡","note":"","ucode":"8AB762A8CDFEF7","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":585377,"discussion_content":"还好老师是😓，而不是😅","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1661502875,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":"浙江"},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1526355,"avatar":"https://static001.geekbang.org/account/avatar/00/17/4a/53/063f9d17.jpg","nickname":"moonfox","note":"","ucode":"902BFF40EFA9FA","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":333511,"discussion_content":"联合索引的第一列如果是范围查询，后面的列也无法使用索引，这是为什么呢？","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1607534169,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":2,"child_discussions":[{"author":{"id":2218814,"avatar":"https://static001.geekbang.org/account/avatar/00/21/db/3e/ae276dfe.jpg","nickname":"YoLo","note":"","ucode":"DBED5344BC5BFD","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1526355,"avatar":"https://static001.geekbang.org/account/avatar/00/17/4a/53/063f9d17.jpg","nickname":"moonfox","note":"","ucode":"902BFF40EFA9FA","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":351744,"discussion_content":"因为命中范围的节点有多个不是一个了，这些节点中范围查询列后的索引字段是无序的，没法再用索引了","likes_number":6,"is_delete":false,"is_hidden":false,"ctime":1614422166,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":333511,"ip_address":""},"score":351744,"extra":""},{"author":{"id":2694205,"avatar":"https://static001.geekbang.org/account/avatar/00/29/1c/3d/76465ee4.jpg","nickname":"摘星","note":"","ucode":"55D8CAFC938F91","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1526355,"avatar":"https://static001.geekbang.org/account/avatar/00/17/4a/53/063f9d17.jpg","nickname":"moonfox","note":"","ucode":"902BFF40EFA9FA","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":577885,"discussion_content":"得看你说的范围是什么意思的范围了，如果使用了任何函数那索引失效，如果存在隐式转换 索引也会失效 如果你用or 索引依然失效。如果你用的是 and 并且没有任何函数 这样子索引是可以用上的","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1656403231,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":333511,"ip_address":""},"score":577885,"extra":""}]}]},{"had_liked":false,"id":41439,"user_name":"壹笙☞漂泊","can_delete":false,"product_type":"c1","uid":1092577,"ip_address":"","ucode":"3A0B8EC881665C","user_header":"https://static001.geekbang.org/account/avatar/00/10/ab/e1/f6b921fa.jpg","comment_is_top":false,"comment_ctime":1542781704,"is_pvip":false,"replies":[{"id":"14876","content":"优秀","user_name":"作者回复","comment_id":41439,"uid":"1264162","ip_address":"","utype":1,"ctime":1542783038,"user_name_real":"林晓斌"}],"discussion_count":23,"race_medal":0,"score":"3416041782024","product_id":100020801,"comment_content":"总结：<br>1.索引的作用：提高数据查询效率<br>2.常见索引模型：哈希表、有序数组、搜索树<br>3.哈希表：键 - 值(key - value)。<br>4.哈希思路：把值放在数组里，用一个哈希函数把key换算成一个确定的位置，然后把value放在数组的这个位置<br>5.哈希冲突的处理办法：链表<br>6.哈希表适用场景：只有等值查询的场景<br>7.有序数组：按顺序存储。查询用二分法就可以快速查询，时间复杂度是：O(log(N))<br>8.有序数组查询效率高，更新效率低<br>9.有序数组的适用场景：静态存储引擎。<br>10.二叉搜索树：每个节点的左儿子小于父节点，父节点又小于右儿子<br>11.二叉搜索树：查询时间复杂度O(log(N))，更新时间复杂度O(log(N))<br>12.数据库存储大多不适用二叉树，因为树高过高，会适用N叉树<br>13.InnoDB中的索引模型：B+Tree<br>14.索引类型：主键索引、非主键索引<br>\t主键索引的叶子节点存的是整行的数据(聚簇索引)，非主键索引的叶子节点内容是主键的值(二级索引)<br>15.主键索引和普通索引的区别：主键索引只要搜索ID这个B+Tree即可拿到数据。普通索引先搜索索引拿到主键值，再到主键索引树搜索一次(回表)<br>16.一个数据页满了，按照B+Tree算法，新增加一个数据页，叫做页分裂，会导致性能下降。空间利用率降低大概50%。当相邻的两个数据页利用率很低的时候会做数据页合并，合并的过程是分裂过程的逆过程。<br>17.从性能和存储空间方面考量，自增主键往往是更合理的选择。<br><br>思考题：<br>如果删除，新建主键索引，会同时去修改普通索引对应的主键索引，性能消耗比较大。<br>删除重建普通索引貌似影响不大，不过要注意在业务低谷期操作，避免影响业务。<br><br><br>","like_count":795,"discussions":[{"author":{"id":1264162,"avatar":"https://static001.geekbang.org/account/avatar/00/13/4a/22/2681d602.jpg","nickname":"林晓斌","note":"","ucode":"CDE42D44F26240","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":429801,"discussion_content":"优秀","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1542783038,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1018620,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/8a/fc/d1dd57dd.jpg","nickname":"ipofss","note":"","ucode":"DE3061C9259F9E","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":165726,"discussion_content":"本想做笔记的，奈何我总结的才是你的三分之一，太过优秀的笔记可以拿来抄。对吧，科代表","likes_number":14,"is_delete":false,"is_hidden":false,"ctime":1581318608,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1911661,"avatar":"https://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTLDOKcx20Xxmu5j8WxiafoYvo3bIAFDg8OeicRic1icD597QuMC9O8FyV2Al9RxNfVZXK0gkGUx6M3CVQ/132","nickname":"多年以后","note":"","ucode":"D70E7A1ABE0F39","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":381180,"discussion_content":"数据存放在主键索引里面删除主键索引 是不是就删除数据了？ 我理解的对吧","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1624939430,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1303758,"avatar":"https://static001.geekbang.org/account/avatar/00/13/e4/ce/cb6c9709.jpg","nickname":"牧月浮水","note":"","ucode":"90E35719BC349E","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":157702,"discussion_content":"总结的很到位","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1580487417,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1713473,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTIYML5ZzlzYzMDNPSo25ZicwU6LNbOGqQ1ItY4X9dZqOK00GUv1eTlWbYolvYczx4cmTdqNicBmtfkw/132","nickname":"Geek_cba546","note":"","ucode":"200CD29B405A76","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":586852,"discussion_content":"课代表优秀，将知识传播下去","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1662540023,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":"北京"},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1765541,"avatar":"https://static001.geekbang.org/account/avatar/00/1a/f0/a5/ff758400.jpg","nickname":"belief","note":"","ucode":"563EDA9F2C9214","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":394345,"discussion_content":"优秀","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1631847801,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":2758476,"avatar":"https://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTKIV2XXwdDibbI2Ep4f2mFfia3RSRWOxrJSMjm114nMsUZibjST6pCgh1lwAKH2q6PeUlh9p7GKia4jSw/132","nickname":"要做万恶的资本家","note":"","ucode":"82FCEA4726A7D2","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":393055,"discussion_content":"就喜欢你这样的语文课代表","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1631237472,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":2406292,"avatar":"https://static001.geekbang.org/account/avatar/00/24/b7/94/22121c60.jpg","nickname":"Kendrick","note":"","ucode":"5DF1269295D24E","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":377377,"discussion_content":"优秀啊","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1622620660,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1484257,"avatar":"https://static001.geekbang.org/account/avatar/00/16/a5/e1/77281d4e.jpg","nickname":"叁木辛尧","note":"","ucode":"CBBEEA3FDDD44F","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":369841,"discussion_content":"总结的太到位了！在想自己有没有做笔记的必要。。。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1619171276,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1555334,"avatar":"https://static001.geekbang.org/account/avatar/00/17/bb/86/dd05ee7c.jpg","nickname":"西门少年","note":"","ucode":"2BF42CAC813309","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":364912,"discussion_content":"课代表，赞一个。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1617641408,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1932430,"avatar":"https://static001.geekbang.org/account/avatar/00/1d/7c/8e/830017ff.jpg","nickname":"香榭的枫叶🍂","note":"","ucode":"6EB2522892A0DC","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":355120,"discussion_content":"有个问题，修改主键索引，为什么会影响普通索引，普通索引不是存储的是主键值吗","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1615384138,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":3,"extra":"","child_discussion_number":3,"child_discussions":[{"author":{"id":1035496,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/cc/e8/3915b175.jpg","nickname":"嗄呗","note":"","ucode":"C4232C07626578","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1932430,"avatar":"https://static001.geekbang.org/account/avatar/00/1d/7c/8e/830017ff.jpg","nickname":"香榭的枫叶🍂","note":"","ucode":"6EB2522892A0DC","race_medal":0,"user_type":1,"is_pvip":true},"discussion":{"id":361954,"discussion_content":"如果k是普通索引，那么修改记录的k值就会影响到普通索引了","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1616812202,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":355120,"ip_address":""},"score":361954,"extra":""},{"author":{"id":1932430,"avatar":"https://static001.geekbang.org/account/avatar/00/1d/7c/8e/830017ff.jpg","nickname":"香榭的枫叶🍂","note":"","ucode":"6EB2522892A0DC","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":1035496,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/cc/e8/3915b175.jpg","nickname":"嗄呗","note":"","ucode":"C4232C07626578","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":363229,"discussion_content":"哦哦了解","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1617152909,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":361954,"ip_address":""},"score":363229,"extra":""},{"author":{"id":1970443,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTIx1V1QAxC4NHaxYZGyuibBN8lcURJWc5nrnO4yic1kxnDemYV2FJGialf47kYX9qtDnZZOfe1SJeLicg/132","nickname":"lleft","note":"","ucode":"D573EB509455AE","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1932430,"avatar":"https://static001.geekbang.org/account/avatar/00/1d/7c/8e/830017ff.jpg","nickname":"香榭的枫叶🍂","note":"","ucode":"6EB2522892A0DC","race_medal":0,"user_type":1,"is_pvip":true},"discussion":{"id":369198,"discussion_content":"索引组织表，索引即数据，主键索引的叶子节点存放表的整行数据，修改主键索引相当于重建表，所以对普通索引也有影响。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1618972193,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":355120,"ip_address":""},"score":369198,"extra":""}]},{"author":{"id":1547371,"avatar":"https://static001.geekbang.org/account/avatar/00/17/9c/6b/635cb2aa.jpg","nickname":"Geek_c9201d","note":"","ucode":"1673CFA6C56644","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":344902,"discussion_content":"6666，1万个赞","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1611624399,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":3,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1204353,"avatar":"https://static001.geekbang.org/account/avatar/00/12/60/81/eaf6d0ac.jpg","nickname":"拉布拉多","note":"","ucode":"637A88D9F29F57","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":340440,"discussion_content":"笔记优秀","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1610006695,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":3,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1504393,"avatar":"https://thirdwx.qlogo.cn/mmopen/vi_32/LbmatIMSwBb51hiaadzRmgClDicic0Eic3CMXkc6r9TxPu8IAJkFufUesRdv5VACCaUfjmtchSiaqmCEypibs5kwcwLQ/132","nickname":"凉夕","note":"","ucode":"A9CF36D4C4A348","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":330764,"discussion_content":"mark","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1606704952,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":3,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":2173064,"avatar":"https://static001.geekbang.org/account/avatar/00/21/28/88/e1e3918f.jpg","nickname":"东边的大西瓜","note":"","ucode":"E2366D03690DA9","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":320428,"discussion_content":"秀","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1604366875,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":3,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1049017,"avatar":"https://static001.geekbang.org/account/avatar/00/10/01/b9/73435279.jpg","nickname":"学习学个屁","note":"","ucode":"DF2D61E6FB2FCE","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":302899,"discussion_content":"课代表~","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1599058618,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":3,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1406808,"avatar":"https://static001.geekbang.org/account/avatar/00/15/77/58/8824cd8f.jpg","nickname":"伟伟动听","note":"","ucode":"60596BE972AC63","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":158034,"discussion_content":"科代表，棒棒哒👍","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1580544092,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":3,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1111873,"avatar":"https://static001.geekbang.org/account/avatar/00/10/f7/41/2c781b1c.jpg","nickname":"璀☆璨星☆空","note":"","ucode":"7681DDDB9CFF54","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":150155,"discussion_content":"李哥，你太牛逼了！","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1579789760,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":3,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1244581,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/DYAIOgq83erFUhEiazDuzntpbECvyYdp6J798QRRXQicvw4QEc3STaUic5EGRTQIZv5iapf4bY2ZmHIvlLpL1nJ6Mw/132","nickname":"流浪的胖子","note":"","ucode":"B6303417F58B65","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":82056,"discussion_content":"秀啊","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1576315750,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":3,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1064040,"avatar":"https://static001.geekbang.org/account/avatar/00/10/3c/68/9671b60d.jpg","nickname":"曾庚卓","note":"","ucode":"BA8D6EE75E5AAD","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":36373,"discussion_content":"太优秀了，做笔记很蛋疼，但评论区可以复制","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1571369825,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":3,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":41228,"user_name":"约书亚","can_delete":false,"product_type":"c1","uid":1046714,"ip_address":"","ucode":"81EA27ADD9EC1A","user_header":"https://static001.geekbang.org/account/avatar/00/0f/f8/ba/14e05601.jpg","comment_is_top":false,"comment_ctime":1542761383,"is_pvip":false,"replies":[{"id":"14865","content":"面试中题面越简单的问题越暗藏凶险，可见一斑…<br><br>可以按照调整key的大小的思路来说；<br><br>如果你能指出来5.6以后可以通过page大小来间接控制应该能加分吧<br><br>面试回答不能太精减，计算方法、前缀索引什么的一起上😄<br><br><br><br>","user_name":"作者回复","comment_id":41228,"uid":"1264162","ip_address":"","utype":1,"ctime":1542782450,"user_name_real":"林晓斌"}],"discussion_count":68,"race_medal":0,"score":"1384522230695","product_id":100020801,"comment_content":"“N叉树”的N值在MySQL中是可以被人工调整的么？曾经面试被问到过这问题，当时就懵逼了...","like_count":322,"discussions":[{"author":{"id":1237008,"avatar":"https://static001.geekbang.org/account/avatar/00/12/e0/10/e9dacf2a.jpg","nickname":"inspired","note":"","ucode":"06C196CCF230AA","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":1329,"discussion_content":"1，\t通过改变key值来调整\nN叉树中非叶子节点存放的是索引信息，索引包含Key和Point指针。Point指针固定为6个字节，假如Key为10个字节，那么单个索引就是16个字节。如果B+树中页大小为16K，那么一个页就可以存储1024个索引，此时N就等于1024。我们通过改变Key的大小，就可以改变N的值\n2，\t改变页的大小\n页越大，一页存放的索引就越多，N就越大。\n ","likes_number":311,"is_delete":false,"is_hidden":false,"ctime":1562564910,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":27,"child_discussions":[{"author":{"id":1276434,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/eCbn0LY9oIzlw6X1FSBibbdLjZZTk4ial6TedJWP2whYCb1Is9aEAJojZnHFyd5FHyeCKc2c14zibvQLBRicOxd3Dg/132","nickname":"归途","note":"","ucode":"A9DA6CFFB46FBF","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1237008,"avatar":"https://static001.geekbang.org/account/avatar/00/12/e0/10/e9dacf2a.jpg","nickname":"inspired","note":"","ucode":"06C196CCF230AA","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":3562,"discussion_content":"太厉害了👍","likes_number":3,"is_delete":false,"is_hidden":false,"ctime":1564582286,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":1329,"ip_address":""},"score":3562,"extra":""},{"author":{"id":1263410,"avatar":"https://static001.geekbang.org/account/avatar/00/13/47/32/4a47048a.jpg","nickname":"果树和溪流","note":"","ucode":"906C26641A0133","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1237008,"avatar":"https://static001.geekbang.org/account/avatar/00/12/e0/10/e9dacf2a.jpg","nickname":"inspired","note":"","ucode":"06C196CCF230AA","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":5833,"discussion_content":"厉害","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1566477046,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":1329,"ip_address":""},"score":5833,"extra":""},{"author":{"id":1312918,"avatar":"https://static001.geekbang.org/account/avatar/00/14/08/96/231fdd9e.jpg","nickname":"未知","note":"","ucode":"DB389CEBEEE9E1","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1237008,"avatar":"https://static001.geekbang.org/account/avatar/00/12/e0/10/e9dacf2a.jpg","nickname":"inspired","note":"","ucode":"06C196CCF230AA","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":21659,"discussion_content":"key的值也可以认为是固定的，通常就是4或者8，int或者bigint.主要还是page大小。","likes_number":11,"is_delete":false,"is_hidden":false,"ctime":1569507243,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":1329,"ip_address":""},"score":21659,"extra":""}]},{"author":{"id":1637799,"avatar":"https://static001.geekbang.org/account/avatar/00/18/fd/a7/e679621f.jpg","nickname":"赵某人","note":"","ucode":"562994A43948A5","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":338471,"discussion_content":"1， 通过改变key值来调整\nN叉树中非叶子节点存放的是索引信息，索引包含Key和Point指针。Point指针固定为6个字节，假如Key为10个字节，那么单个索引就是16个字节。如果B+树中页大小为16K，那么一个页就可以存储1024个索引，此时N就等于1024。我们通过改变Key的大小，就可以改变N的值\n2， 改变页的大小\n页越大，一页存放的索引就越多，N就越大。\n\n \n\n数据页调整后，如果数据页太小层数会太深，数据页太大，加载到内存的时间和单个数据页查询时间会提高，需要达到平衡才行。","likes_number":102,"is_delete":false,"is_hidden":false,"ctime":1609297049,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":11,"child_discussions":[{"author":{"id":1274495,"avatar":"https://static001.geekbang.org/account/avatar/00/13/72/7f/5da093c5.jpg","nickname":"水目沾","note":"","ucode":"FDD1D15C277D58","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1637799,"avatar":"https://static001.geekbang.org/account/avatar/00/18/fd/a7/e679621f.jpg","nickname":"赵某人","note":"","ucode":"562994A43948A5","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":339536,"discussion_content":"一个节点上的所有数据必须放在一个页里面？","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1609725506,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":338471,"ip_address":""},"score":339536,"extra":""},{"author":{"id":1204353,"avatar":"https://static001.geekbang.org/account/avatar/00/12/60/81/eaf6d0ac.jpg","nickname":"拉布拉多","note":"","ucode":"637A88D9F29F57","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1274495,"avatar":"https://static001.geekbang.org/account/avatar/00/13/72/7f/5da093c5.jpg","nickname":"水目沾","note":"","ucode":"FDD1D15C277D58","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":340441,"discussion_content":"是的","likes_number":2,"is_delete":false,"is_hidden":false,"ctime":1610006866,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":339536,"ip_address":""},"score":340441,"extra":""},{"author":{"id":1175430,"avatar":"https://static001.geekbang.org/account/avatar/00/11/ef/86/12f95d66.jpg","nickname":"FATMAN89","note":"","ucode":"48A67FB47B3C5D","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1637799,"avatar":"https://static001.geekbang.org/account/avatar/00/18/fd/a7/e679621f.jpg","nickname":"赵某人","note":"","ucode":"562994A43948A5","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":353263,"discussion_content":"大致意思是对的，但不准确，一个页16kb还要存file header ，page header，page directory，file trailer，infimum，supermum，所以按你的算法是存不到1024个目录记录的","likes_number":9,"is_delete":false,"is_hidden":false,"ctime":1615102424,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":338471,"ip_address":""},"score":353263,"extra":""}]},{"author":{"id":1795385,"avatar":"https://static001.geekbang.org/account/avatar/00/1b/65/39/9cf81d07.jpg","nickname":"╮Jesse 、","note":"","ucode":"E0B1D69EEB0EC9","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":165897,"discussion_content":"主要还是通过调整数据页的大小间接来调整N叉树N的值","likes_number":17,"is_delete":false,"is_hidden":false,"ctime":1581340230,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1680332,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/1LIW93RQ3ZvevCcfgib9Z4NwHsNAbicmGkicZwe9zCBPc9A2IXfLtXGUmzqrsibn1FibZcNIOddOrF9icuww9cYZD5ibA/132","nickname":"Geek_75d94a","note":"","ucode":"2E7B6075AAB8B0","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":201988,"discussion_content":"数据页调整后，如果数据页太小层数会太深，数据页太大，加载到内存的时间和单个数据页查询时间会提高，需要达到平衡才行","likes_number":16,"is_delete":false,"is_hidden":false,"ctime":1583853154,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1618978,"avatar":"https://static001.geekbang.org/account/avatar/00/18/b4/22/f2228dd0.jpg","nickname":"rm-rf","note":"","ucode":"E8825DBEA54506","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":35197,"discussion_content":"不知道是否为答案，默认情况下，表空间中的页大小都为 16KB，当然也可以通过改变 innodb_page_size 选项对默认大小进行修改，需要注意的是不同的页大小最终也会导致区大小的不同","likes_number":14,"is_delete":false,"is_hidden":false,"ctime":1571240340,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1768852,"avatar":"https://static001.geekbang.org/account/avatar/00/1a/fd/94/8704d2b0.jpg","nickname":"spoofer","note":"","ucode":"6723F64ACC3F27","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":337101,"discussion_content":"索引信息包括 key：我们的索引字段 + 6字节的Point，这个是point应该是页号。数据页的结构：38字节的File Header + 58字节的Pgae Header + 26字节的伪造最大值与最小值 + 用户record（就是上面的key + point啦）+ Free Space（不确定大小） + Page Directory (不确定大小) + 8字节的 File Trailer。对于记录类型（record_type）：0: 普通用户记录，1:目录项记录, 2:最小记录，3：最大记录。所有record_type为1就是索引信息记录啦","likes_number":4,"is_delete":false,"is_hidden":false,"ctime":1608797732,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":2,"child_discussions":[{"author":{"id":1204353,"avatar":"https://static001.geekbang.org/account/avatar/00/12/60/81/eaf6d0ac.jpg","nickname":"拉布拉多","note":"","ucode":"637A88D9F29F57","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1768852,"avatar":"https://static001.geekbang.org/account/avatar/00/1a/fd/94/8704d2b0.jpg","nickname":"spoofer","note":"","ucode":"6723F64ACC3F27","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":340452,"discussion_content":"那具体的行记录呢？不应该在数据页里吗？","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1610009321,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":337101,"ip_address":""},"score":340452,"extra":""},{"author":{"id":1768852,"avatar":"https://static001.geekbang.org/account/avatar/00/1a/fd/94/8704d2b0.jpg","nickname":"spoofer","note":"","ucode":"6723F64ACC3F27","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1204353,"avatar":"https://static001.geekbang.org/account/avatar/00/12/60/81/eaf6d0ac.jpg","nickname":"拉布拉多","note":"","ucode":"637A88D9F29F57","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":367622,"discussion_content":"这个是二级索引下的，主键索引才包含用户数据。二级索引页面里的只有主键索引的id","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1618408963,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":340452,"ip_address":""},"score":367622,"extra":""}]},{"author":{"id":1955967,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTJKIRmZ3U3kxDfgsbnVfbh4iaY0eo8AFibaxHLG5tJric4XKqnKkRxe23fHvfcIK4tvrC36ISibnVQBmw/132","nickname":"张丽君","note":"","ucode":"3C685590321D99","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":299621,"discussion_content":"优秀","likes_number":2,"is_delete":false,"is_hidden":false,"ctime":1597753404,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1264162,"avatar":"https://static001.geekbang.org/account/avatar/00/13/4a/22/2681d602.jpg","nickname":"林晓斌","note":"","ucode":"CDE42D44F26240","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":429736,"discussion_content":"面试中题面越简单的问题越暗藏凶险，可见一斑…\n\n可以按照调整key的大小的思路来说；\n\n如果你能指出来5.6以后可以通过page大小来间接控制应该能加分吧\n\n面试回答不能太精减，计算方法、前缀索引什么的一起上😄\n\n\n\n","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1542782450,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":2569468,"avatar":"https://thirdwx.qlogo.cn/mmopen/vi_32/BjhBWhxxLvF4Mnw0RSXwpaZvTqdVXacGhZRaQ6cT3777KbtEicKBnzQR3asr0RIYoPg16gwMH85efvFX3XAfq7w/132","nickname":"Lutra","note":"","ucode":"E680484E4E8FE4","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":377288,"discussion_content":"Cy","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1622591396,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":2514951,"avatar":"https://static001.geekbang.org/account/avatar/00/26/60/07/f0c16856.jpg","nickname":"毕腾飞","note":"","ucode":"CAF9AF297BD49C","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":358199,"discussion_content":"活到老学到老","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1615945746,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1731047,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/GmtqEx7x5hagZtXbd8Xs8ocUuHHLGIgiaqTwTcibPnpla1PVTbed2Ax7ZfzCjN2Qpeyao6ogq7L3icLzSB3vY1rlg/132","nickname":"Chanson","note":"","ucode":"74B3B180B4B953","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":352763,"discussion_content":"mark","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1614845387,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":3,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1795385,"avatar":"https://static001.geekbang.org/account/avatar/00/1b/65/39/9cf81d07.jpg","nickname":"╮Jesse 、","note":"","ucode":"E0B1D69EEB0EC9","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":165901,"discussion_content":"另外就是主键的长度，长度越短存的越多","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1581340288,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":3,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":2638055,"avatar":"https://static001.geekbang.org/account/avatar/00/28/40/e7/b6454f3b.jpg","nickname":"周传升","note":"","ucode":"FEB6C1C507BEE3","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":532970,"discussion_content":"1","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1637744005,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":3,"extra":"{\"user_type\":1}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":2706935,"avatar":"https://static001.geekbang.org/account/avatar/00/29/4d/f7/0a4e21b1.jpg","nickname":"北松山","note":"","ucode":"35C19D270E989D","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":413957,"discussion_content":"Mark","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1636619232,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":3,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":2693719,"avatar":"https://thirdwx.qlogo.cn/mmopen/vi_32/6aIibPBt8LBr5KLnuDxllGYCo23Ol20ziajbHPwMl6CYIwybYrpxr8nJSUXYYSuAvdEuSallJCk7MSbw5o4coQ8w/132","nickname":"Geek_b4fbc6","note":"","ucode":"930441B1202678","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":413177,"discussion_content":"mark","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1636394751,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":3,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":2604432,"avatar":"https://static001.geekbang.org/account/avatar/00/27/bd/90/99ab3369.jpg","nickname":"局外人","note":"","ucode":"B8E2ED7A8ABE11","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":391898,"discussion_content":"mark","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1630678903,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":3,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1747442,"avatar":"https://static001.geekbang.org/account/avatar/00/1a/a9/f2/2e82807a.jpg","nickname":"莫魂","note":"","ucode":"7F96EEE9C12912","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":390770,"discussion_content":"顶","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1630034642,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":3,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":2084379,"avatar":"https://thirdwx.qlogo.cn/mmopen/vi_32/Q3auHgzwzM7MkIibc8UBwDt7dNeeNmx9IMqmI98Do8icxZcmfsMk99ibeXUo9ficwR1dxF5CrDHJ55603icCpKF7cxw/132","nickname":"Geek_mysql45","note":"","ucode":"DECFFE89B49974","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":344657,"discussion_content":"学习","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1611547959,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":3,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":2161755,"avatar":"https://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTJcqPrJEUz4PTnDq42SPR1MqniacZxcdkZChFQpWtU2GkITL7pGaiaLQcCLVnkI1uh0u9NuGlchqcXg/132","nickname":"默写流年","note":"","ucode":"18A7956C523EC8","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":336722,"discussion_content":"非叶子节点存放的是索引信息，包含key和6个字节的Pointer指针。这个key指的是什么啊？指的是主键primary  key字段的定义长度吗？望解答","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1608688287,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":3,"extra":"","child_discussion_number":2,"child_discussions":[{"author":{"id":1768852,"avatar":"https://static001.geekbang.org/account/avatar/00/1a/fd/94/8704d2b0.jpg","nickname":"spoofer","note":"","ucode":"6723F64ACC3F27","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":2161755,"avatar":"https://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTJcqPrJEUz4PTnDq42SPR1MqniacZxcdkZChFQpWtU2GkITL7pGaiaLQcCLVnkI1uh0u9NuGlchqcXg/132","nickname":"默写流年","note":"","ucode":"18A7956C523EC8","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":337102,"discussion_content":"我新加了评论","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1608797776,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":336722,"ip_address":""},"score":337102,"extra":""},{"author":{"id":1301957,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTJCscgdVibmoPyRLRaicvk6rjTJxePZ6VFHvGjUQvtfhCS6kO4OZ1AVibbhNGKlWZmpEFf2yA6ptsqHw/132","nickname":"夹心面包","note":"","ucode":"002BBA49D83D17","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":2161755,"avatar":"https://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTJcqPrJEUz4PTnDq42SPR1MqniacZxcdkZChFQpWtU2GkITL7pGaiaLQcCLVnkI1uh0u9NuGlchqcXg/132","nickname":"默写流年","note":"","ucode":"18A7956C523EC8","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":352113,"discussion_content":"key指的是索引列的值","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1614603860,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":336722,"ip_address":""},"score":352113,"extra":""}]},{"author":{"id":2147220,"avatar":"https://static001.geekbang.org/account/avatar/00/20/c3/94/e89ebc50.jpg","nickname":"神毓逍遥","note":"","ucode":"83351CB18B190E","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":335987,"discussion_content":"不错  这个点很好","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1608444108,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":3,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":2312566,"avatar":"https://static001.geekbang.org/account/avatar/00/23/49/76/81628589.jpg","nickname":"王鹏","note":"","ucode":"0C94ECBA278888","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":327142,"discussion_content":"厉害","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1605753805,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":4,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1392326,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/7KvTibLByic8Eht03jsera25gTIoJEKnajulAVyRibaFic34rNjCSd3DBpjwWInJ72gBMuo1RNNoFdiay0PUSy8971Q/132","nickname":"hahahhh","note":"","ucode":"ED94DDF526F94D","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":292162,"discussion_content":"point指针为啥是6字节呢","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1595123655,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":4,"extra":"","child_discussion_number":1,"child_discussions":[{"author":{"id":1402506,"avatar":"https://static001.geekbang.org/account/avatar/00/15/66/8a/d71c2623.jpg","nickname":"贺 玄","note":"","ucode":"B30F95608D192D","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1392326,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/7KvTibLByic8Eht03jsera25gTIoJEKnajulAVyRibaFic34rNjCSd3DBpjwWInJ72gBMuo1RNNoFdiay0PUSy8971Q/132","nickname":"hahahhh","note":"","ucode":"ED94DDF526F94D","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":337156,"discussion_content":"没搜到相关解释应该是约定的 6个字节 2的48次方能表示够大的数了","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1608806425,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":292162,"ip_address":""},"score":337156,"extra":""}]},{"author":{"id":1363671,"avatar":"https://static001.geekbang.org/account/avatar/00/14/ce/d7/5315f6ce.jpg","nickname":"不负青春不负己🤘","note":"","ucode":"A6DD8E8B20EA6E","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":156009,"discussion_content":"优秀","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1580308269,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":4,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1053921,"avatar":"https://static001.geekbang.org/account/avatar/00/10/14/e1/ee5705a2.jpg","nickname":"Zend","note":"","ucode":"80EBB0B6772E27","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":149071,"discussion_content":"学习了，点赞","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1579730994,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":4,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1178235,"avatar":"https://static001.geekbang.org/account/avatar/00/11/fa/7b/f89a398b.jpg","nickname":"Charles | 姜海龙","note":"","ucode":"17BA74D1684184","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":5158,"discussion_content":"太厉害了","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1566013912,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":4,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":41277,"user_name":"堵车","can_delete":false,"product_type":"c1","uid":1145404,"ip_address":"","ucode":"7BC1E50A4F8D3D","user_header":"https://static001.geekbang.org/account/avatar/00/11/7a/3c/87e015f8.jpg","comment_is_top":false,"comment_ctime":1542763511,"is_pvip":false,"replies":[{"id":"14856","content":"没有主键的表，innodb会给默认创建一个Rowid做主键","user_name":"作者回复","comment_id":41277,"uid":"1264162","ip_address":"","utype":1,"ctime":1542780692,"user_name_real":"林晓斌"}],"discussion_count":6,"race_medal":0,"score":"1165478900727","product_id":100020801,"comment_content":"请问没有主键的表，有一个普通索引。怎么回表？","like_count":271,"discussions":[{"author":{"id":1485477,"avatar":"https://static001.geekbang.org/account/avatar/00/16/aa/a5/194613c1.jpg","nickname":"dingjiayi","note":"","ucode":"DAE189F6FB1B55","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":229023,"discussion_content":"https://dev.mysql.com/doc/refman/5.6/en/innodb-index-types.html\n5.6 文档  \n先找非空唯一索引；\n如果没有，再用rowid ？","likes_number":14,"is_delete":false,"is_hidden":false,"ctime":1586603438,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1285652,"avatar":"","nickname":"mycat","note":"","ucode":"6878BD32D042F2","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":300973,"discussion_content":"innodb中，不存在没有主键索引的表。","likes_number":7,"is_delete":false,"is_hidden":false,"ctime":1598349066,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1627397,"avatar":"https://static001.geekbang.org/account/avatar/00/18/d5/05/8fd8ca4c.jpg","nickname":"快快乐乐","note":"","ucode":"D093D8D5836FF6","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":390358,"discussion_content":"在innodb的世界里面，不存在没有主键索引的表","likes_number":2,"is_delete":false,"is_hidden":false,"ctime":1629798445,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1264162,"avatar":"https://static001.geekbang.org/account/avatar/00/13/4a/22/2681d602.jpg","nickname":"林晓斌","note":"","ucode":"CDE42D44F26240","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":429749,"discussion_content":"没有主键的表，innodb会给默认创建一个Rowid做主键","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1542780692,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1759325,"avatar":"https://static001.geekbang.org/account/avatar/00/1a/d8/5d/07dfb3b5.jpg","nickname":"杯莫停","note":"","ucode":"4FA1D5CBBEF702","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":308644,"discussion_content":"总会有个主键的","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1601017977,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":2698825,"avatar":"https://static001.geekbang.org/account/avatar/00/29/2e/49/a04480a9.jpg","nickname":"路遥知码力","note":"","ucode":"1EF9655BEDAFA6","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":403575,"discussion_content":"默认设置聚集索引","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1634112291,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":78985,"user_name":"天天向上","can_delete":false,"product_type":"c1","uid":1168220,"ip_address":"","ucode":"DF08B67EAD61E7","user_header":"https://static001.geekbang.org/account/avatar/00/11/d3/5c/796962de.jpg","comment_is_top":false,"comment_ctime":1553313226,"is_pvip":false,"replies":[{"id":"28808","content":"B+树的叶子节点是page （页），一个页里面可以存多个行<br><br>","user_name":"作者回复","comment_id":78985,"uid":"1264162","ip_address":"","utype":1,"ctime":1553340255,"user_name_real":"林晓斌"}],"discussion_count":65,"race_medal":0,"score":"976510889418","product_id":100020801,"comment_content":"去面试，遇到面试官问我innodb B+树主键索引的叶子节点存的是什么，我说是行，面试官说错，存的是页，<br>老师讲的就是行啊，我……","like_count":227,"discussions":[{"author":{"id":2173047,"avatar":"https://static001.geekbang.org/account/avatar/00/21/28/77/e6b4806d.jpg","nickname":"z","note":"","ucode":"974B24F6E9308D","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":319062,"discussion_content":"InnoDB磁盘管理的最小单位就是“页”，也就是说无论是叶子节点、非叶子节点和行数据，都是存放在页当中。\n页组成结构有头部数据、主体数据和尾部数据。\n头部数据主要存的是页相关数据，例如上一页、下一页、当前页号等。是一个双向链表结构。\n主体数据主要关注索引和数据的存储，也就是我们常说的索引和数据的存储位置。主体数据当中有一个“User Records”的概念，用来存储索引和数据，是一个单链表结构。\nUser Records根据节点的不同，User Records又分为四种不同类型：主键索引树叶子节点和非叶子节点，二级索引树叶子节点和非叶子节点。\n有了页和User Records的认识，其实说叶子节点存的是页是一种笼统的回答，基于我的理解，我认为叶子节点（主键索引树叶子节点）存放的是行数据更为贴切。","likes_number":118,"is_delete":false,"is_hidden":false,"ctime":1603935504,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":4,"child_discussions":[{"author":{"id":1257120,"avatar":"https://static001.geekbang.org/account/avatar/00/13/2e/a0/ef8a3095.jpg","nickname":"·时差两小时","note":"","ucode":"40FD957002F21D","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":2173047,"avatar":"https://static001.geekbang.org/account/avatar/00/21/28/77/e6b4806d.jpg","nickname":"z","note":"","ucode":"974B24F6E9308D","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":321567,"discussion_content":"优秀啊","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1604590050,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":319062,"ip_address":""},"score":321567,"extra":""},{"author":{"id":1820990,"avatar":"https://static001.geekbang.org/account/avatar/00/1b/c9/3e/78cee9d0.jpg","nickname":"单行道","note":"","ucode":"C4B54DC46D975B","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":2173047,"avatar":"https://static001.geekbang.org/account/avatar/00/21/28/77/e6b4806d.jpg","nickname":"z","note":"","ucode":"974B24F6E9308D","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":331512,"discussion_content":"我觉得吧就是那个面试官自己想偏了，叶子节点存的页，数据库页里面有多个行这个解释完美","likes_number":8,"is_delete":false,"is_hidden":false,"ctime":1606891763,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":319062,"ip_address":""},"score":331512,"extra":""},{"author":{"id":2884328,"avatar":"https://static001.geekbang.org/account/avatar/00/2c/02/e8/67595089.jpg","nickname":"Zero","note":"","ucode":"663AAD54C4D8F2","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":2173047,"avatar":"https://static001.geekbang.org/account/avatar/00/21/28/77/e6b4806d.jpg","nickname":"z","note":"","ucode":"974B24F6E9308D","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":544291,"discussion_content":"整个“页”是什么数据结构","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1641459084,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":319062,"ip_address":""},"score":544291,"extra":""}]},{"author":{"id":1464006,"avatar":"https://static001.geekbang.org/account/avatar/00/16/56/c6/0b449bc6.jpg","nickname":"斐波那契","note":"","ucode":"85E2EBC01392B1","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":160384,"discussion_content":"我觉得这个问题细抠起来有点咬文嚼字了 B+树的结点 跟innoDB的“页”都属于一种抽象逻辑概念 如果你要问“存”的是什么 我觉得回答行数据没毛病 因为存的不可能是“页” 这一逻辑概念 只能说这个叶结点大小等于innoDB里设置的页大小 或者说这个叶结点其实就是“页” 但存的是什么 那当然是数据 什么数据 当然是表中的行数据","likes_number":43,"is_delete":false,"is_hidden":false,"ctime":1580797711,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":2,"child_discussions":[{"author":{"id":1204353,"avatar":"https://static001.geekbang.org/account/avatar/00/12/60/81/eaf6d0ac.jpg","nickname":"拉布拉多","note":"","ucode":"637A88D9F29F57","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1464006,"avatar":"https://static001.geekbang.org/account/avatar/00/16/56/c6/0b449bc6.jpg","nickname":"斐波那契","note":"","ucode":"85E2EBC01392B1","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":340478,"discussion_content":"赞","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1610012714,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":160384,"ip_address":""},"score":340478,"extra":""},{"author":{"id":1055810,"avatar":"https://static001.geekbang.org/account/avatar/00/10/1c/42/d3a0e33a.jpg","nickname":"希德小子","note":"","ucode":"0F3DA846858DBD","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":1464006,"avatar":"https://static001.geekbang.org/account/avatar/00/16/56/c6/0b449bc6.jpg","nickname":"斐波那契","note":"","ucode":"85E2EBC01392B1","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":573686,"discussion_content":"梳理得好，应该都说对了一半","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1653590509,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":160384,"ip_address":""},"score":573686,"extra":""}]},{"author":{"id":1392326,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/7KvTibLByic8Eht03jsera25gTIoJEKnajulAVyRibaFic34rNjCSd3DBpjwWInJ72gBMuo1RNNoFdiay0PUSy8971Q/132","nickname":"hahahhh","note":"","ucode":"ED94DDF526F94D","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":292163,"discussion_content":"这里的页，是mysql 的数据页，默认16kb，里面存储了很多行，还包括页的一些元数据，比如页的页号","likes_number":8,"is_delete":false,"is_hidden":false,"ctime":1595124125,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":5,"child_discussions":[{"author":{"id":1967729,"avatar":"https://static001.geekbang.org/account/avatar/00/1e/06/71/91c242a5.jpg","nickname":"书生","note":"","ucode":"F6AA84F0DD0A08","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1392326,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/7KvTibLByic8Eht03jsera25gTIoJEKnajulAVyRibaFic34rNjCSd3DBpjwWInJ72gBMuo1RNNoFdiay0PUSy8971Q/132","nickname":"hahahhh","note":"","ucode":"ED94DDF526F94D","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":293474,"discussion_content":"那是每个叶子节点都对应一个页吗，还是多个叶子节点对应同一个页，那这样的话，叶子节点存的是页中的地址吗？","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1595554192,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":292163,"ip_address":""},"score":293474,"extra":""},{"author":{"id":1272047,"avatar":"https://static001.geekbang.org/account/avatar/00/13/68/ef/6264ca3d.jpg","nickname":"Magic","note":"","ucode":"FD9CEDAA419EB0","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1967729,"avatar":"https://static001.geekbang.org/account/avatar/00/1e/06/71/91c242a5.jpg","nickname":"书生","note":"","ucode":"F6AA84F0DD0A08","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":302155,"discussion_content":"一个页存储多个叶子节点，叶子节点之间通过双向链表串接。因此，查找具体的叶节点时，还有一个遍历有序链表的过程，不过因为链表长度有限（受限于页大小，mysql默认16kb），这个时间可以接受","likes_number":14,"is_delete":false,"is_hidden":false,"ctime":1598800874,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":293474,"ip_address":""},"score":302155,"extra":""},{"author":{"id":1543040,"avatar":"https://static001.geekbang.org/account/avatar/00/17/8b/80/8702bd5f.jpg","nickname":"evan","note":"","ucode":"491B073D5AFEDE","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1272047,"avatar":"https://static001.geekbang.org/account/avatar/00/13/68/ef/6264ca3d.jpg","nickname":"Magic","note":"","ucode":"FD9CEDAA419EB0","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":318757,"discussion_content":"叶子节点会跨页存储吗? 这样链表遍历就要去不同的磁盘页了?","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1603845655,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":302155,"ip_address":""},"score":318757,"extra":""}]},{"author":{"id":1967080,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/DYAIOgq83eoeZJ1aW5LkAlaKqXEpvrnSk0ibUcLFjz8pDmWpuvm8RD3e79icAALsEurUwXOs0UjVQRxuImxCsHQQ/132","nickname":"donkey703","note":"","ucode":"A48EA2D28A7557","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":235570,"discussion_content":"直接说存的是用户查询的数据不就行了吗，什么行啊，页啊，数据都是以页存储的呀，B+树各个节点不都是页么.....回答页有什么意义","likes_number":8,"is_delete":false,"is_hidden":false,"ctime":1587044905,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":5,"child_discussions":[{"author":{"id":1181523,"avatar":"https://static001.geekbang.org/account/avatar/00/12/07/53/908c9b6f.jpg","nickname":"猎人","note":"","ucode":"39C69A1AE0A268","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1967080,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/DYAIOgq83eoeZJ1aW5LkAlaKqXEpvrnSk0ibUcLFjz8pDmWpuvm8RD3e79icAALsEurUwXOs0UjVQRxuImxCsHQQ/132","nickname":"donkey703","note":"","ucode":"A48EA2D28A7557","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":290427,"discussion_content":"你说的非常对，首先这是两个概念，面试官的问题是从逻辑层面的数据结构来问的：叶子节点存的是什么，那就是行呀。页是操作系统层面的概念，应该是物理单位。另外，页里面存的是叶子节点以及数据，而不是叶子节点存的是页。最后，如果非要纠结这个问题可能要上升到一个哲学问题，鸡和蛋的问题：到底是叶子结点包含了页，还是页里面是叶子结点，这个必须要定好前提条件。","likes_number":29,"is_delete":false,"is_hidden":false,"ctime":1594468914,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":235570,"ip_address":""},"score":290427,"extra":""},{"author":{"id":2054297,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/ooZCPFY1xgC81h0Eu3vuqeWxSlLbdpOeX8fCeERz0BJ0ATMUeGTdiciay9MS5ziaLoyMo3bf8ZibcBw71WAwiahzg6Q/132","nickname":"中天悬剑","note":"","ucode":"5E5965AFA88563","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1181523,"avatar":"https://static001.geekbang.org/account/avatar/00/12/07/53/908c9b6f.jpg","nickname":"猎人","note":"","ucode":"39C69A1AE0A268","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":290530,"discussion_content":"怎么越说我越迷糊了","likes_number":2,"is_delete":false,"is_hidden":false,"ctime":1594525311,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":290427,"ip_address":""},"score":290530,"extra":""},{"author":{"id":1254801,"avatar":"https://static001.geekbang.org/account/avatar/00/13/25/91/46600294.jpg","nickname":"猴哥一一 cium","note":"","ucode":"38EC64F8D1A0B4","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":2054297,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/ooZCPFY1xgC81h0Eu3vuqeWxSlLbdpOeX8fCeERz0BJ0ATMUeGTdiciay9MS5ziaLoyMo3bf8ZibcBw71WAwiahzg6Q/132","nickname":"中天悬剑","note":"","ucode":"5E5965AFA88563","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":312075,"discussion_content":"哈哈哈","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1602579094,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":290530,"ip_address":""},"score":312075,"extra":""}]},{"author":{"id":1264162,"avatar":"https://static001.geekbang.org/account/avatar/00/13/4a/22/2681d602.jpg","nickname":"林晓斌","note":"","ucode":"CDE42D44F26240","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":444311,"discussion_content":"B+树的叶子节点是page （页），一个页里面可以存多个行\n\n","likes_number":3,"is_delete":false,"is_hidden":false,"ctime":1553340255,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":2261175,"avatar":"","nickname":"Geek_b8d5c9","note":"","ucode":"505F33B4C0EA31","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":318225,"discussion_content":"我的问题是一页多行的话那主键id怎么算 也有多个id吗 但是老师画的图却都分开了啊 只有有个","likes_number":3,"is_delete":false,"is_hidden":false,"ctime":1603682542,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":3,"child_discussions":[{"author":{"id":1204353,"avatar":"https://static001.geekbang.org/account/avatar/00/12/60/81/eaf6d0ac.jpg","nickname":"拉布拉多","note":"","ucode":"637A88D9F29F57","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":2261175,"avatar":"","nickname":"Geek_b8d5c9","note":"","ucode":"505F33B4C0EA31","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":340468,"discussion_content":"没有分开。图里也是一页多行","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1610011937,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":318225,"ip_address":""},"score":340468,"extra":""},{"author":{"id":2036767,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTLnLia14uMsD4LNGacrO1Jogicn2BIgZc6qQQK4y7t98cxgdyvIQY4TFBQKJYnHoJAFhy89jFrk3Biaw/132","nickname":"Geek_dcde64","note":"","ucode":"51AFAAECA21B41","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":2261175,"avatar":"","nickname":"Geek_b8d5c9","note":"","ucode":"505F33B4C0EA31","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":391881,"discussion_content":"谁能回答一下呢？","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1630671754,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":318225,"ip_address":""},"score":391881,"extra":""},{"author":{"id":2418581,"avatar":"https://static001.geekbang.org/account/avatar/00/24/e7/95/2d7386c3.jpg","nickname":"@@@@@","note":"","ucode":"EB6520C6E80CE3","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":2036767,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTLnLia14uMsD4LNGacrO1Jogicn2BIgZc6qQQK4y7t98cxgdyvIQY4TFBQKJYnHoJAFhy89jFrk3Biaw/132","nickname":"Geek_dcde64","note":"","ucode":"51AFAAECA21B41","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":573055,"discussion_content":"索引树的实际实现还有很多机制，不是那么简单的。\n\n我的理解是：\n\n1. 每一个节点是一个页，一个页中存储的是一定范围内的有序的值，而不是一个节点只对应一个值；\n\n2. 中间节点叫索引页，比如某一个页里面的主键数据可能是这样存的：\n（1-&gt;索引页8） -&gt; （31-&gt;索引页16）-&gt; （61-&gt;索引页24）-&gt; （91-&gt;索引页32）, 只存了4个主键值，如果你查询的主键是20（1 &lt; 20 &lt; 31), 那么进入下一层的”索引页8“，在索引页8中也是类似的存储（主键范围是1~30，分成几个数据段继续向下分层);\n\n3. 叶子节点也是一个页:\n(id = 1; 行数据)        (id = 4; 行数据)\n(id = 2; 行数据)  -&gt;  (id = 5; 行数据) -&gt; ......\n(id = 3; 行数据)        (id = 6; 行数据)\n\n比如每个页中存了3个行记录\n\n\n","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1653186683,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":391881,"ip_address":""},"score":573055,"extra":""}]},{"author":{"id":1623575,"avatar":"https://static001.geekbang.org/account/avatar/00/18/c6/17/651e8d72.jpg","nickname":"Persist","note":"","ucode":"203596C835EAF2","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":287940,"discussion_content":"确实是存储页，每次搜索到页时才会从页里面遍历行得到对应主键的行数据","likes_number":3,"is_delete":false,"is_hidden":false,"ctime":1593596116,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1668617,"avatar":"https://static001.geekbang.org/account/avatar/00/19/76/09/62a10668.jpg","nickname":"傻傻的帅","note":"","ucode":"14A795523A682E","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":281618,"discussion_content":"叶子节点应该是存的页地址吧","likes_number":3,"is_delete":false,"is_hidden":false,"ctime":1591777699,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":1,"child_discussions":[{"author":{"id":1112210,"avatar":"https://static001.geekbang.org/account/avatar/00/10/f8/92/eaafff96.jpg","nickname":"Amos","note":"","ucode":"61DB72D99AF9EA","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1668617,"avatar":"https://static001.geekbang.org/account/avatar/00/19/76/09/62a10668.jpg","nickname":"傻傻的帅","note":"","ucode":"14A795523A682E","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":350139,"discussion_content":"页地址这个是非聚集索引","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1613724079,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":281618,"ip_address":""},"score":350139,"extra":""}]},{"author":{"id":1115041,"avatar":"https://static001.geekbang.org/account/avatar/00/11/03/a1/e6a0f60b.jpg","nickname":"Sid","note":"","ucode":"0461B574B2736B","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":208034,"discussion_content":"想问下innodb的页的大小设置和磁盘块大小、操作系统里的页大小有什么关系？","likes_number":3,"is_delete":false,"is_hidden":false,"ctime":1584533231,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":7,"child_discussions":[{"author":{"id":1669182,"avatar":"https://static001.geekbang.org/account/avatar/00/19/78/3e/84b18502.jpg","nickname":"最好的狗焕啊","note":"","ucode":"6F77A37326618F","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1115041,"avatar":"https://static001.geekbang.org/account/avatar/00/11/03/a1/e6a0f60b.jpg","nickname":"Sid","note":"","ucode":"0461B574B2736B","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":243448,"discussion_content":"我也想知道","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1587541729,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":208034,"ip_address":""},"score":243448,"extra":""},{"author":{"id":1592576,"avatar":"https://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTLIzE6JOuXsOamCWiaq8sHHVyCK44bdIOEqnE42veoZPEqxs5IJ8RT1Hicz0ZlPQFcbEFSwjV7icrfEw/132","nickname":"jjyyun","note":"","ucode":"8824654F673087","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1115041,"avatar":"https://static001.geekbang.org/account/avatar/00/11/03/a1/e6a0f60b.jpg","nickname":"Sid","note":"","ucode":"0461B574B2736B","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":294790,"discussion_content":"这个深入下去就是操作系统的问题了，倒是double write这个可以展开讲讲","likes_number":2,"is_delete":false,"is_hidden":false,"ctime":1595999963,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":208034,"ip_address":""},"score":294790,"extra":""},{"author":{"id":2218209,"avatar":"","nickname":"Geek_a54de5","note":"","ucode":"750C8522F61B4B","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1115041,"avatar":"https://static001.geekbang.org/account/avatar/00/11/03/a1/e6a0f60b.jpg","nickname":"Sid","note":"","ucode":"0461B574B2736B","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":338515,"discussion_content":"本质上没有关系，数据库磁盘的基本单位是扇区，页是扇区之上的逻辑概念，定义8个扇区叫一页、32个扇区叫一页都没有问题，操作系统里有内存页的概念，是内存基本单位上抽象出来的概念，也有磁盘块的概念。叫页、叫块都没所谓，理解是物理基本单位之上的逻辑抽象即可，当然从os的FS角度讲是磁盘块之上的逻辑概念也可以","likes_number":7,"is_delete":false,"is_hidden":false,"ctime":1609304846,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":208034,"ip_address":""},"score":338515,"extra":""}]},{"author":{"id":1346267,"avatar":"https://static001.geekbang.org/account/avatar/00/14/8a/db/76ab84c6.jpg","nickname":"小豹子","note":"","ucode":"972F3E6BF0FDEA","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":122888,"discussion_content":"叶子节点存的的确是页，因为mysql的表是索引组织表，也就是说这张表本身就是一个大的索引。而表又是由page组成的。这跟oracle的索引是完全不一样的。","likes_number":2,"is_delete":false,"is_hidden":false,"ctime":1578378732,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1314724,"avatar":"https://static001.geekbang.org/account/avatar/00/14/0f/a4/0b49469f.jpg","nickname":"木子00","note":"","ucode":"8F78CA722EB29B","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":274319,"discussion_content":"不懂，其实还是没有理解大家所说的page 是什么意思。\n其实我也不懂page具体是什么意思。","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1590567028,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":3,"extra":"","child_discussion_number":4,"child_discussions":[{"author":{"id":1158349,"avatar":"https://static001.geekbang.org/account/avatar/00/11/ac/cd/fda6374f.jpg","nickname":"Louis","note":"","ucode":"BC667839F17937","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1314724,"avatar":"https://static001.geekbang.org/account/avatar/00/14/0f/a4/0b49469f.jpg","nickname":"木子00","note":"","ucode":"8F78CA722EB29B","race_medal":0,"user_type":1,"is_pvip":true},"discussion":{"id":276160,"discussion_content":"要学操作系统才明白 每个页4kb 固定大小","likes_number":3,"is_delete":false,"is_hidden":false,"ctime":1590830674,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":274319,"ip_address":""},"score":276160,"extra":""},{"author":{"id":1626582,"avatar":"https://static001.geekbang.org/account/avatar/00/18/d1/d6/dcb41d53.jpg","nickname":"Sharker","note":"","ucode":"F9FE772F0B165B","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1314724,"avatar":"https://static001.geekbang.org/account/avatar/00/14/0f/a4/0b49469f.jpg","nickname":"木子00","note":"","ucode":"8F78CA722EB29B","race_medal":0,"user_type":1,"is_pvip":true},"discussion":{"id":308257,"discussion_content":"磁盘和内存都有页的概念","likes_number":2,"is_delete":false,"is_hidden":false,"ctime":1600876893,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":274319,"ip_address":""},"score":308257,"extra":""},{"author":{"id":2252648,"avatar":"https://static001.geekbang.org/account/avatar/00/22/5f/68/8e4407c7.jpg","nickname":"💡","note":"","ucode":"8AB762A8CDFEF7","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1314724,"avatar":"https://static001.geekbang.org/account/avatar/00/14/0f/a4/0b49469f.jpg","nickname":"木子00","note":"","ucode":"8F78CA722EB29B","race_medal":0,"user_type":1,"is_pvip":true},"discussion":{"id":377383,"discussion_content":"俺也一样","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1622624453,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":274319,"ip_address":""},"score":377383,"extra":""}]},{"author":{"id":1240923,"avatar":"https://static001.geekbang.org/account/avatar/00/12/ef/5b/9ff22c47.jpg","nickname":"tiger","note":"","ucode":"933DB5385F8C26","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":591815,"discussion_content":"存的页id吧，页里面单链表组织数据，但也有一个数组所以没来支持二分查找。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1666837455,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":"广东"},"score":3,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":2941452,"avatar":"","nickname":"Geek_edca71","note":"","ucode":"EB32200916973F","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":556563,"discussion_content":"页之间是双向的  页内的行数据是 单向的 对吧","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1647418685,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":3,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1050411,"avatar":"https://static001.geekbang.org/account/avatar/00/10/07/2b/d111e75d.jpg","nickname":"Lion","note":"","ucode":"21AA6AE4A90789","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":387195,"discussion_content":"m\n","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1628045375,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":3,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":2637531,"avatar":"https://static001.geekbang.org/account/avatar/00/28/3e/db/a6478127.jpg","nickname":"无问西东","note":"","ucode":"905A4CBF0AC944","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":380331,"discussion_content":"Mark","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1624443625,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":3,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":2569468,"avatar":"https://thirdwx.qlogo.cn/mmopen/vi_32/BjhBWhxxLvF4Mnw0RSXwpaZvTqdVXacGhZRaQ6cT3777KbtEicKBnzQR3asr0RIYoPg16gwMH85efvFX3XAfq7w/132","nickname":"Lutra","note":"","ucode":"E680484E4E8FE4","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":377287,"discussion_content":"Cy","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1622591387,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":3,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1731047,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/GmtqEx7x5hagZtXbd8Xs8ocUuHHLGIgiaqTwTcibPnpla1PVTbed2Ax7ZfzCjN2Qpeyao6ogq7L3icLzSB3vY1rlg/132","nickname":"Chanson","note":"","ucode":"74B3B180B4B953","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":352764,"discussion_content":"mark","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1614845525,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":3,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1181725,"avatar":"https://static001.geekbang.org/account/avatar/00/12/08/1d/910b4924.jpg","nickname":"star_fan","note":"","ucode":"BC914F9B599995","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":2821,"discussion_content":"page是指的磁盘页吗","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1563956948,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":3,"extra":"","child_discussion_number":7,"child_discussions":[{"author":{"id":1034936,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/ca/b8/2424e0c6.jpg","nickname":"Kisto","note":"","ucode":"F00CF6D13AEB67","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1181725,"avatar":"https://static001.geekbang.org/account/avatar/00/12/08/1d/910b4924.jpg","nickname":"star_fan","note":"","ucode":"BC914F9B599995","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":22040,"discussion_content":"不是磁盘页，是innodb的页，默认大小16k(可以更改)。","likes_number":11,"is_delete":false,"is_hidden":false,"ctime":1569566192,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":2821,"ip_address":""},"score":22040,"extra":""},{"author":{"id":1083422,"avatar":"https://static001.geekbang.org/account/avatar/00/10/88/1e/69e84907.jpg","nickname":"罗罗诺亚.恩佐","note":"","ucode":"42D7932946CEBF","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1181725,"avatar":"https://static001.geekbang.org/account/avatar/00/12/08/1d/910b4924.jpg","nickname":"star_fan","note":"","ucode":"BC914F9B599995","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":268767,"discussion_content":"可以不叫他页，叫块好理解点，oracle里就是叫块","likes_number":2,"is_delete":false,"is_hidden":false,"ctime":1589816614,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":2821,"ip_address":""},"score":268767,"extra":""},{"author":{"id":1237583,"avatar":"https://static001.geekbang.org/account/avatar/00/12/e2/4f/df01f65e.jpg","nickname":"Danfēng","note":"","ucode":"E5B3451F1D0441","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1181725,"avatar":"https://static001.geekbang.org/account/avatar/00/12/08/1d/910b4924.jpg","nickname":"star_fan","note":"","ucode":"BC914F9B599995","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":280287,"discussion_content":"索引本来就是拿到在内存中，怎么可能去磁盘搜索，应该不是磁盘页","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1591522893,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":2821,"ip_address":""},"score":280287,"extra":""}]},{"author":{"id":1397631,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTKVUskibDnhMt5MCIJ8227HWkeg2wEEyewps8GuWhWaY5fy7Ya56bu2ktMlxdla3K29Wqia9efCkWaQ/132","nickname":"衬衫的价格是19美元","note":"","ucode":"655F925451F772","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":1275,"discussion_content":"虽然一页可以存多个行，但是实际只会存一行对吗？否则就变成了一个主键对应了多行数据？","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1562494720,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":3,"extra":"","child_discussion_number":8,"child_discussions":[{"author":{"id":1361746,"avatar":"https://static001.geekbang.org/account/avatar/00/14/c7/52/c5adf218.jpg","nickname":"喜欢地球的阿培同学","note":"","ucode":"5F97037585F857","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1397631,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTKVUskibDnhMt5MCIJ8227HWkeg2wEEyewps8GuWhWaY5fy7Ya56bu2ktMlxdla3K29Wqia9efCkWaQ/132","nickname":"衬衫的价格是19美元","note":"","ucode":"655F925451F772","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":5732,"discussion_content":"感觉不对吧，一页只存一行的话，岂不是很浪费空间？我个人觉得应该是多个主键对应的是同一个页。","likes_number":2,"is_delete":false,"is_hidden":false,"ctime":1566452965,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":1275,"ip_address":""},"score":5732,"extra":""},{"author":{"id":1034936,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/ca/b8/2424e0c6.jpg","nickname":"Kisto","note":"","ucode":"F00CF6D13AEB67","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1397631,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTKVUskibDnhMt5MCIJ8227HWkeg2wEEyewps8GuWhWaY5fy7Ya56bu2ktMlxdla3K29Wqia9efCkWaQ/132","nickname":"衬衫的价格是19美元","note":"","ucode":"655F925451F772","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":22041,"discussion_content":"不是存一行，比方说一行数据占用大小1k左右，一页默认存16k，则这个页就可以存16条数据","likes_number":6,"is_delete":false,"is_hidden":false,"ctime":1569566287,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":1275,"ip_address":""},"score":22041,"extra":""},{"author":{"id":1453053,"avatar":"https://static001.geekbang.org/account/avatar/00/16/2b/fd/7013289d.jpg","nickname":"温故而知新可以为师矣","note":"","ucode":"FADCDFA9F9E5E8","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1397631,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTKVUskibDnhMt5MCIJ8227HWkeg2wEEyewps8GuWhWaY5fy7Ya56bu2ktMlxdla3K29Wqia9efCkWaQ/132","nickname":"衬衫的价格是19美元","note":"","ucode":"655F925451F772","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":74776,"discussion_content":"一个主键对应一行，叶有多少行数据也会有对应的多少个主键，配对的","likes_number":6,"is_delete":false,"is_hidden":false,"ctime":1575686360,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":1275,"ip_address":""},"score":74776,"extra":""}]}]},{"had_liked":false,"id":41323,"user_name":"张良","can_delete":false,"product_type":"c1","uid":1241439,"ip_address":"","ucode":"BE95F81FE30FE4","user_header":"https://static001.geekbang.org/account/avatar/00/12/f1/5f/6ac1c883.jpg","comment_is_top":false,"comment_ctime":1542765518,"is_pvip":false,"discussion_count":9,"race_medal":0,"score":"804701649870","product_id":100020801,"comment_content":"结合王争的数据结构与算法看正好","like_count":187,"discussions":[{"author":{"id":1044546,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/f0/42/7728d4f5.jpg","nickname":"艿艿","note":"","ucode":"8F727AB7A7F6B2","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":28440,"discussion_content":"支持。很爽。","likes_number":6,"is_delete":false,"is_hidden":false,"ctime":1570697673,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1689203,"avatar":"https://static001.geekbang.org/account/avatar/00/19/c6/73/7ed027cb.jpg","nickname":"阿良","note":"","ucode":"0CCA5AAB1088F7","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":343663,"discussion_content":"看到这条评论，我就知道，我又得买了","likes_number":5,"is_delete":false,"is_hidden":false,"ctime":1611127854,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":1,"child_discussions":[{"author":{"id":2242904,"avatar":"https://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTIHxTg3tYriaCXiccCf7xUl9QHibAhCMBKQ2oCicvgcuHCo4ULSguISXeHzxM9a8fFD7icfy3OgXibvUNxw/132","nickname":"Geek_9dbc25","note":"","ucode":"6CB31893173165","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1689203,"avatar":"https://static001.geekbang.org/account/avatar/00/19/c6/73/7ed027cb.jpg","nickname":"阿良","note":"","ucode":"0CCA5AAB1088F7","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":395271,"discussion_content":"买","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1632276108,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":343663,"ip_address":""},"score":395271,"extra":""}]},{"author":{"id":2052083,"avatar":"https://static001.geekbang.org/account/avatar/00/1f/4f/f3/22cface4.jpg","nickname":"7N1KK","note":"","ucode":"ECB901EB45021E","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":340603,"discussion_content":"我也是哈哈哈哈","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1610075581,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":2859278,"avatar":"https://static001.geekbang.org/account/avatar/00/2b/a1/0e/88138533.jpg","nickname":"coven","note":"","ucode":"32C5708F03970A","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":571274,"discussion_content":"看过之后来的，理解轻松多了","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1652165781,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1099576,"avatar":"https://static001.geekbang.org/account/avatar/00/10/c7/38/d1a50cd6.jpg","nickname":"颜桦","note":"","ucode":"1CD7250E052B32","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":371676,"discussion_content":"是的，那面学完对应的数据结构，这面理解正好，尤其是索引这块","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1619916711,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1725343,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/DYAIOgq83ep0icNIl01hycNvkTKHFtLMcxtJ8Nr48KOicUBA7jdbOjx41l1pkoic3l0Xftib4RsgeIkPV4y4cA6MPw/132","nickname":"Geek_1d80ef","note":"","ucode":"2695F603FE80E0","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":243710,"discussion_content":"一样，哈哈","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1587557887,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1134861,"avatar":"https://static001.geekbang.org/account/avatar/00/11/51/0d/fc1652fe.jpg","nickname":"James","note":"","ucode":"48B0F2A334D1C1","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":62275,"discussion_content":"对的。二分查找","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1574829541,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":1,"child_discussions":[{"author":{"id":1453053,"avatar":"https://static001.geekbang.org/account/avatar/00/16/2b/fd/7013289d.jpg","nickname":"温故而知新可以为师矣","note":"","ucode":"FADCDFA9F9E5E8","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1134861,"avatar":"https://static001.geekbang.org/account/avatar/00/11/51/0d/fc1652fe.jpg","nickname":"James","note":"","ucode":"48B0F2A334D1C1","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":74739,"discussion_content":"还有树，时间复杂度等等","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1575682785,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":62275,"ip_address":""},"score":74739,"extra":""}]}]},{"had_liked":false,"id":41176,"user_name":"张先先森森森","can_delete":false,"product_type":"c1","uid":1304393,"ip_address":"","ucode":"6DF6E4FA5E3968","user_header":"","comment_is_top":false,"comment_ctime":1542756253,"is_pvip":false,"discussion_count":8,"race_medal":0,"score":"650082817949","product_id":100020801,"comment_content":"drop主键索引会导致其他索引失效，但drop普通索引不会。","like_count":151,"discussions":[{"author":{"id":1948573,"avatar":"","nickname":"Geek069","note":"","ucode":"315CB058E84965","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":222142,"discussion_content":"主键索引的叶子节点存储的行数据，主键索引删除，普通索引就失效了，因为普通索引叶子节点存储的是主键id","likes_number":4,"is_delete":false,"is_hidden":false,"ctime":1586098972,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1007271,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/5e/a7/8dc374e2.jpg","nickname":"BitInit","note":"","ucode":"BDDDA0F51B1EFB","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":85545,"discussion_content":"drop主键索引不会使得其他索引失效吧！drop主键索引时mysql会为该表创建一个默认的rowId，该rowId作为“主键索引”，然后修改其他索引的值指向该rowId，所以其他索引不会失效，仍然可以使用。","likes_number":3,"is_delete":false,"is_hidden":false,"ctime":1576553671,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":2,"child_discussions":[{"author":{"id":1065351,"avatar":"https://static001.geekbang.org/account/avatar/00/10/41/87/d26efb2e.jpg","nickname":"SuperSnow","note":"","ucode":"84C89AA8083E6A","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1007271,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/5e/a7/8dc374e2.jpg","nickname":"BitInit","note":"","ucode":"BDDDA0F51B1EFB","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":128451,"discussion_content":"删除主键相当于整个表重建，应该会失效。","likes_number":4,"is_delete":false,"is_hidden":false,"ctime":1578641425,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":85545,"ip_address":""},"score":128451,"extra":""},{"author":{"id":1465615,"avatar":"","nickname":"geek-nonfu","note":"","ucode":"2DCEE846BEDF95","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1065351,"avatar":"https://static001.geekbang.org/account/avatar/00/10/41/87/d26efb2e.jpg","nickname":"SuperSnow","note":"","ucode":"84C89AA8083E6A","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":306626,"discussion_content":"删除主键肯定表重建，删除主键索引不会吧。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1600334983,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":128451,"ip_address":""},"score":306626,"extra":""}]},{"author":{"id":1068361,"avatar":"https://static001.geekbang.org/account/avatar/00/10/4d/49/28e73b9c.jpg","nickname":"明翼","note":"","ucode":"E77F86BEB3D5C1","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":18426,"discussion_content":"请教下其他索引存的是key的值，为什么有影响那","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1569057699,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":2,"child_discussions":[{"author":{"id":1453053,"avatar":"https://static001.geekbang.org/account/avatar/00/16/2b/fd/7013289d.jpg","nickname":"温故而知新可以为师矣","note":"","ucode":"FADCDFA9F9E5E8","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1068361,"avatar":"https://static001.geekbang.org/account/avatar/00/10/4d/49/28e73b9c.jpg","nickname":"明翼","note":"","ucode":"E77F86BEB3D5C1","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":74751,"discussion_content":"因为可能影响到回表吧","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1575684244,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":18426,"ip_address":""},"score":74751,"extra":""},{"author":{"id":1065351,"avatar":"https://static001.geekbang.org/account/avatar/00/10/41/87/d26efb2e.jpg","nickname":"SuperSnow","note":"","ucode":"84C89AA8083E6A","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1068361,"avatar":"https://static001.geekbang.org/account/avatar/00/10/4d/49/28e73b9c.jpg","nickname":"明翼","note":"","ucode":"E77F86BEB3D5C1","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":128452,"discussion_content":"因为普通索引下的data存的是主键，现在主键都没了，当然普通索引也失效了。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1578641494,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":18426,"ip_address":""},"score":128452,"extra":""}]},{"author":{"id":2873900,"avatar":"https://static001.geekbang.org/account/avatar/00/2b/da/2c/cdd92f3f.jpg","nickname":"wáng","note":"","ucode":"9BFEA73AD7680D","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":557478,"discussion_content":"drop主键会导致二级索引重建，不会导致失效，别忘了rowid。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1647832078,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":51574,"user_name":"扬～","can_delete":false,"product_type":"c1","uid":1208163,"ip_address":"","ucode":"6FA7D8FE188341","user_header":"https://static001.geekbang.org/account/avatar/00/12/6f/63/abb7bfe3.jpg","comment_is_top":false,"comment_ctime":1545201744,"is_pvip":false,"replies":[{"id":"18697","content":"特别合理，因为现在很多业务插入数据很凶残，容易超过int 上限，<br><br>实际上是建议设置bigint unsigned<br><br>好问题","user_name":"作者回复","comment_id":51574,"uid":"1264162","ip_address":"","utype":1,"ctime":1545223415,"user_name_real":"林晓斌"}],"discussion_count":7,"race_medal":0,"score":"555595982928","product_id":100020801,"comment_content":"但现在一般自增索引都设置为bigint，这点老师这么看","like_count":129,"discussions":[{"author":{"id":2760780,"avatar":"https://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTKghO4kJwQ5ccuBA2Yox1WlZmq0JUICpNAsgYlOHX0wHGv48xVRKSvF9a6Eic5l2UOjFjnvTnsibibiaw/132","nickname":"Geek_94045a","note":"","ucode":"B8F23BA9D1411B","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":541448,"discussion_content":"这个我有经历  2013年在sina的时候 整个公司sso团队负责的用户表被刷注册 uid就出现即将不够分配的事 全公司邮件通知 就是采用了longint 各部门修改相关表的字段类型","likes_number":3,"is_delete":false,"is_hidden":false,"ctime":1640365757,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1264162,"avatar":"https://static001.geekbang.org/account/avatar/00/13/4a/22/2681d602.jpg","nickname":"林晓斌","note":"","ucode":"CDE42D44F26240","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":433518,"discussion_content":"特别合理，因为现在很多业务插入数据很凶残，容易超过int 上限，\n\n实际上是建议设置bigint unsigned\n\n好问题","likes_number":2,"is_delete":false,"is_hidden":false,"ctime":1545223415,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1680711,"avatar":"https://wx.qlogo.cn/mmopen/vi_32/DYAIOgq83epUCc25yo5UX8lRibsib4n5w3funH1NhI7jUZicibE4dm0wibODETicMVQnCGicJicWicFLjaKBibDGLuotTZ8w/132","nickname":"Geek_83157e","note":"","ucode":"84E735FA279EBD","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":21565,"discussion_content":"想问如果主键开始是int，自增不够了，改成bigint，内部该怎么处理，是新建表，还是要分裂","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1569501108,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":4,"child_discussions":[{"author":{"id":1065351,"avatar":"https://static001.geekbang.org/account/avatar/00/10/41/87/d26efb2e.jpg","nickname":"SuperSnow","note":"","ucode":"84C89AA8083E6A","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1680711,"avatar":"https://wx.qlogo.cn/mmopen/vi_32/DYAIOgq83epUCc25yo5UX8lRibsib4n5w3funH1NhI7jUZicibE4dm0wibODETicMVQnCGicJicWicFLjaKBibDGLuotTZ8w/132","nickname":"Geek_83157e","note":"","ucode":"84E735FA279EBD","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":129754,"discussion_content":"执行这句是不是可以?alter table T engine=InnoDB","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1578735648,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":21565,"ip_address":""},"score":129754,"extra":""},{"author":{"id":1943530,"avatar":"https://static001.geekbang.org/account/avatar/00/1d/a7/ea/b3e10043.jpg","nickname":"Black liu","note":"","ucode":"3D92552D06CA8F","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1680711,"avatar":"https://wx.qlogo.cn/mmopen/vi_32/DYAIOgq83epUCc25yo5UX8lRibsib4n5w3funH1NhI7jUZicibE4dm0wibODETicMVQnCGicJicWicFLjaKBibDGLuotTZ8w/132","nickname":"Geek_83157e","note":"","ucode":"84E735FA279EBD","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":220950,"discussion_content":"我也想知道这个，我就直接这么改过","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1585931029,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":21565,"ip_address":""},"score":220950,"extra":""},{"author":{"id":2066081,"avatar":"https://static001.geekbang.org/account/avatar/00/1f/86/a1/1e474eb9.jpg","nickname":"Manfestain","note":"","ucode":"66DC6802F502E6","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1680711,"avatar":"https://wx.qlogo.cn/mmopen/vi_32/DYAIOgq83epUCc25yo5UX8lRibsib4n5w3funH1NhI7jUZicibE4dm0wibODETicMVQnCGicJicWicFLjaKBibDGLuotTZ8w/132","nickname":"Geek_83157e","note":"","ucode":"84E735FA279EBD","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":383535,"discussion_content":"好奇，有答案了吗","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1626151582,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":21565,"ip_address":""},"score":383535,"extra":""}]}]},{"had_liked":false,"id":41476,"user_name":"Richie","can_delete":false,"product_type":"c1","uid":1111377,"ip_address":"","ucode":"1426E1B2E82A43","user_header":"https://static001.geekbang.org/account/avatar/00/10/f5/51/60e91438.jpg","comment_is_top":false,"comment_ctime":1542789758,"is_pvip":false,"replies":[{"id":"14916","content":"内部有个有序数组，二分法","user_name":"作者回复","comment_id":41476,"uid":"1264162","ip_address":"","utype":1,"ctime":1542793702,"user_name_real":"林晓斌"}],"discussion_count":11,"race_medal":0,"score":"516938865278","product_id":100020801,"comment_content":"老师索引只能定位到page，page内部怎么去定位行数据","like_count":120,"discussions":[{"author":{"id":1397351,"avatar":"https://static001.geekbang.org/account/avatar/00/15/52/67/fcba0967.jpg","nickname":"zapup","note":"","ucode":"388D6BB5D7B137","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":291064,"discussion_content":"1 页：N 槽，1 槽：1 组，1 组： N 记录。总体：页-槽（即组）-记录。在页内二分定槽（即定组），在组内遍历链表定记录。","likes_number":18,"is_delete":false,"is_hidden":false,"ctime":1594697002,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1646052,"avatar":"https://static001.geekbang.org/account/avatar/00/19/1d/e4/517fbbbf.jpg","nickname":"白芷","note":"","ucode":"D37530955CF919","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":165740,"discussion_content":"https://www.cnblogs.com/bdsir/p/8745553.html感觉这个很清楚","likes_number":9,"is_delete":false,"is_hidden":false,"ctime":1581320204,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1099170,"avatar":"https://static001.geekbang.org/account/avatar/00/10/c5/a2/4ece341b.jpg","nickname":"Ivan.Qi","note":"","ucode":"36F46A4D1F0EAA","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":412168,"discussion_content":"https://blog.csdn.net/cy973071263/article/details/104512020","likes_number":2,"is_delete":false,"is_hidden":false,"ctime":1636093240,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1020386,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/91/e2/acf750ab.jpg","nickname":"yan","note":"","ucode":"8E7F8155D15646","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":55867,"discussion_content":"我今天看到一篇文章，说是叶子节点中的数据是通过单向链表连接的？","likes_number":2,"is_delete":false,"is_hidden":false,"ctime":1574407443,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":5,"child_discussions":[{"author":{"id":1360250,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/DYAIOgq83erFY9H3mxyTpZ9gxAmdeKic565hicicDZmv7cjswd8hdernmxib0chdQrlDNKUZQ8AticQCgDdgVEmJNuA/132","nickname":"牧鱼","note":"","ucode":"0EB8FDD7A4BB2E","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1020386,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/91/e2/acf750ab.jpg","nickname":"yan","note":"","ucode":"8E7F8155D15646","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":212456,"discussion_content":"双向链表","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1584973328,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":55867,"ip_address":""},"score":212456,"extra":""},{"author":{"id":1044975,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/f1/ef/f210cf57.jpg","nickname":"曹子方","note":"","ucode":"1DA5D152F61206","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1360250,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/DYAIOgq83erFY9H3mxyTpZ9gxAmdeKic565hicicDZmv7cjswd8hdernmxib0chdQrlDNKUZQ8AticQCgDdgVEmJNuA/132","nickname":"牧鱼","note":"","ucode":"0EB8FDD7A4BB2E","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":243478,"discussion_content":"叶子内是单向链表，叶子间是双向链表。叶子内查找应该是遍历查找","likes_number":12,"is_delete":false,"is_hidden":false,"ctime":1587544076,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":212456,"ip_address":""},"score":243478,"extra":""},{"author":{"id":2426375,"avatar":"","nickname":"Geek_366473","note":"","ucode":"887573CCDFA79C","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1044975,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/f1/ef/f210cf57.jpg","nickname":"曹子方","note":"","ucode":"1DA5D152F61206","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":345517,"discussion_content":"数据页中有页目录，页目录key为id，value为槽位，二分搜索页目录定位到槽位中的行记录","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1611732024,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":243478,"ip_address":""},"score":345517,"extra":""}]},{"author":{"id":1264162,"avatar":"https://static001.geekbang.org/account/avatar/00/13/4a/22/2681d602.jpg","nickname":"林晓斌","note":"","ucode":"CDE42D44F26240","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":429814,"discussion_content":"内部有个有序数组，二分法","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1542793702,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1522824,"avatar":"https://static001.geekbang.org/account/avatar/00/17/3c/88/e83528da.jpg","nickname":"uking","note":"","ucode":"41005AC547327B","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":316249,"discussion_content":"知识点:Page directory ,内存中利用二分查找","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1603377358,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":41871,"user_name":"橡皮泥boy","can_delete":false,"product_type":"c1","uid":1011863,"ip_address":"","ucode":"478F5417EDD249","user_header":"https://static001.geekbang.org/account/avatar/00/0f/70/97/e5bf9ddb.jpg","comment_is_top":false,"comment_ctime":1542864166,"is_pvip":true,"replies":[{"id":"15019","content":"准确","user_name":"作者回复","comment_id":41871,"uid":"1264162","ip_address":"","utype":1,"ctime":1542871663,"user_name_real":"林晓斌"}],"discussion_count":12,"race_medal":0,"score":"422449659174","product_id":100020801,"comment_content":"【回答问题】<br>1. 直接删掉主键索引是不好的，它会使得所有的二级索引都失效，并且会用ROWID来作主键索引；<br>2. 看到mysql官方文档写了三种措施，第一个是整个数据库迁移，先dump出来再重建表（这个一般只适合离线的业务来做）；第二个是用空的alter操作，比如ALTER TABLE t1 ENGINE = InnoDB;这样子就会原地重建表结构（真的吗？）；第三个是用repaire table，不过这个是由存储引擎决定支不支持的（innodb就不行）。","like_count":98,"discussions":[{"author":{"id":1264162,"avatar":"https://static001.geekbang.org/account/avatar/00/13/4a/22/2681d602.jpg","nickname":"林晓斌","note":"","ucode":"CDE42D44F26240","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":429930,"discussion_content":"准确","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1542871663,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1792304,"avatar":"","nickname":"Geek_c1be1d","note":"","ucode":"489CC9364D26B1","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":294607,"discussion_content":"普通索引，为什么要用回表，直接指向数据行，数据页不行吗？","likes_number":2,"is_delete":false,"is_hidden":false,"ctime":1595941580,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":3,"child_discussions":[{"author":{"id":2242740,"avatar":"https://static001.geekbang.org/account/avatar/00/22/38/b4/1843033d.jpg","nickname":"lh","note":"","ucode":"F048C6C0C7E8EA","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1792304,"avatar":"","nickname":"Geek_c1be1d","note":"","ucode":"489CC9364D26B1","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":315189,"discussion_content":"第一、主键索引和普通索引，实际指向的都是一个页地址，在每个页中，主键索引页每行的value存的是实际数据，普通索引页每行的value是主键id。\n第二、如果普通索引页每行的value是主键索引页地址，那么在发生页分裂、页合并、主键索引重建的时候，需要遍历所有的普通索引，查找涉及到的普通索引key进行更新。\n第三、可以理解为：使用id值，相当于对主键索引与普通索引进行了解耦，主键索引页的变更不会影响到其他的普通索引。\n第四、关于解耦带来的好处，与查询上带来的性能损失之间的定量分析，希望有其他同学补充\n第五、可能还有其他的原因，欢迎其他同学补充","likes_number":33,"is_delete":false,"is_hidden":false,"ctime":1603249210,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":294607,"ip_address":""},"score":315189,"extra":""},{"author":{"id":1204353,"avatar":"https://static001.geekbang.org/account/avatar/00/12/60/81/eaf6d0ac.jpg","nickname":"拉布拉多","note":"","ucode":"637A88D9F29F57","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":2242740,"avatar":"https://static001.geekbang.org/account/avatar/00/22/38/b4/1843033d.jpg","nickname":"lh","note":"","ucode":"F048C6C0C7E8EA","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":340520,"discussion_content":"赞！这个算深入分析为啥回表了","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1610025099,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":315189,"ip_address":""},"score":340520,"extra":""},{"author":{"id":2788511,"avatar":"https://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTIvMlvSXsYgJ2ZEiboa4BEp4r8CtvYdGfkC693h1OdzEv4mNYA56hwib9icYayeYb4osniabooCuEMsMA/132","nickname":"Geek_41e077","note":"","ucode":"820892EAB95D84","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1792304,"avatar":"","nickname":"Geek_c1be1d","note":"","ucode":"489CC9364D26B1","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":573003,"discussion_content":"直接指向数据行是指直接储存具体数据的意思吗，这样的话会使索引使用空间更多更冗余吧","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1653123912,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":294607,"ip_address":""},"score":573003,"extra":""}]},{"author":{"id":1152599,"avatar":"https://static001.geekbang.org/account/avatar/00/11/96/57/397ead08.jpg","nickname":"一个米屌","note":"","ucode":"8470D3FB4456F3","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":218100,"discussion_content":"二级索引会失效吗，使用慢查询日志发现删除后使用二级索引遍历的行数没变。Rows_examined: 1","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1585619789,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":1,"child_discussions":[{"author":{"id":1140080,"avatar":"https://static001.geekbang.org/account/avatar/00/11/65/70/7e137498.jpg","nickname":"FOCUS","note":"","ucode":"DFE3078B632026","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1152599,"avatar":"https://static001.geekbang.org/account/avatar/00/11/96/57/397ead08.jpg","nickname":"一个米屌","note":"","ucode":"8470D3FB4456F3","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":380693,"discussion_content":"你这是“删除主键之后”的测试？","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1624634156,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":218100,"ip_address":""},"score":380693,"extra":""}]},{"author":{"id":1790745,"avatar":"","nickname":"Geek_8a08af","note":"","ucode":"08BA6B6B378A87","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":91286,"discussion_content":"这一点我有个疑问呢，删除已有的主键索引会导致二级索引失效，说明删除主键索引是不会有更新二级索引页的内容，那如果一个表一开始就没有设置主键索引，直接建立二级索引，那这些二级索引还是可以用ROWID作为主键索引来回表，还是可以生效的呢？","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1576824765,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":4,"child_discussions":[{"author":{"id":1140080,"avatar":"https://static001.geekbang.org/account/avatar/00/11/65/70/7e137498.jpg","nickname":"FOCUS","note":"","ucode":"DFE3078B632026","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1790745,"avatar":"","nickname":"Geek_8a08af","note":"","ucode":"08BA6B6B378A87","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":380694,"discussion_content":"对啊 没主键的表 普通索引（二级索引）那就是用_rowid 来回表啊。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1624634260,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":91286,"ip_address":""},"score":380694,"extra":""},{"author":{"id":1140080,"avatar":"https://static001.geekbang.org/account/avatar/00/11/65/70/7e137498.jpg","nickname":"FOCUS","note":"","ucode":"DFE3078B632026","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1790745,"avatar":"","nickname":"Geek_8a08af","note":"","ucode":"08BA6B6B378A87","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":380695,"discussion_content":"你的疑问是 有主键的表 删除主键之后 能否以 _rowid来回表？","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1624634312,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":91286,"ip_address":""},"score":380695,"extra":""},{"author":{"id":2166073,"avatar":"https://thirdwx.qlogo.cn/mmopen/vi_32/k3YD3y3BzGDSdrwRJyJY4BXsNJibfM4uzOdDVKIAlFApR2FZCLg2ibrZtJ4vuahA3LHLW9GKzH5CMGqCDhWjhZqg/132","nickname":"戒酒的李白","note":"","ucode":"744E1A22761647","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":1140080,"avatar":"https://static001.geekbang.org/account/avatar/00/11/65/70/7e137498.jpg","nickname":"FOCUS","note":"","ucode":"DFE3078B632026","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":393488,"discussion_content":"在8.0.22上实测了， 在删除主键索引后， 普通索引全部失效， 并不能以默认的_rowid 重新人生为主键来回表","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1631453247,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":380695,"ip_address":""},"score":393488,"extra":""}]}]},{"had_liked":false,"id":41304,"user_name":"路过","can_delete":false,"product_type":"c1","uid":1316401,"ip_address":"","ucode":"7152C19ED024CC","user_header":"https://static001.geekbang.org/account/avatar/00/14/16/31/ae8adf82.jpg","comment_is_top":false,"comment_ctime":1542764955,"is_pvip":false,"discussion_count":1,"race_medal":0,"score":"366614985115","product_id":100020801,"comment_content":"顺序应是先删除k列索引，主键索引。然后再创建主键索引和k列索引。<br>","like_count":85,"discussions":[{"author":{"id":1140080,"avatar":"https://static001.geekbang.org/account/avatar/00/11/65/70/7e137498.jpg","nickname":"FOCUS","note":"","ucode":"DFE3078B632026","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":380684,"discussion_content":"因为 k 是普通索引 存储的是主键值，所以先 drop index k; > drop primary key; > add primary key(id)>add index(k)","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1624632685,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":41407,"user_name":"高枕","can_delete":false,"product_type":"c1","uid":1310312,"ip_address":"","ucode":"20F6CF75EC9AA4","user_header":"https://static001.geekbang.org/account/avatar/00/13/fe/68/e0bebd9a.jpg","comment_is_top":false,"comment_ctime":1542774833,"is_pvip":false,"replies":[{"id":"14838","content":"👍🏿，多谢<br><br>多补一句，因为是二叉树结构，每次指针查找很大概率是触发随机磁盘读（比如很难刚好碰上一个节点和他的左右儿子刚好相邻）","user_name":"作者回复","comment_id":41407,"uid":"1264162","ip_address":"","utype":1,"ctime":1542779125,"user_name_real":"林晓斌"}],"discussion_count":15,"race_medal":0,"score":"345140158513","product_id":100020801,"comment_content":"我来回答这个问题<br>你可以想象一下一棵 100 万节点的平衡二叉树，树高 20。一次查询可能需要访问 20 个数据块。<br><br>这里有点不理解，为什么树高20就是20个数据块？<br><br><br>每个叶子结点就是一个块，每个块包含两个数据，块之间通过链式方式链接。树高20的话，就要遍历20个块","like_count":80,"discussions":[{"author":{"id":1264162,"avatar":"https://static001.geekbang.org/account/avatar/00/13/4a/22/2681d602.jpg","nickname":"林晓斌","note":"","ucode":"CDE42D44F26240","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":429795,"discussion_content":"👍🏿，多谢\n\n多补一句，因为是二叉树结构，每次指针查找很大概率是触发随机磁盘读（比如很难刚好碰上一个节点和他的左右儿子刚好相邻）","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1542779125,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":2300779,"avatar":"","nickname":"Geek_886bfd","note":"","ucode":"5F2A03D4ED7C30","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":351947,"discussion_content":"我理解了，其实意思就是每一层就要读一个数据块。因为B+树只是逻辑上的关联，而数据存储的位置在物理位置上可能相差很远（所以大概率触发随机IO）。所以遍历每一层后，就相当于找到了下一层的指针，然后就需要再次随机IO一次去读取下一个数据块。所以树高20 = 需要遍历20个数据块。","likes_number":5,"is_delete":false,"is_hidden":false,"ctime":1614524030,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1308025,"avatar":"https://static001.geekbang.org/account/avatar/00/13/f5/79/e844617c.jpg","nickname":"tree","note":"","ucode":"AA7CA46DD3E88C","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":284410,"discussion_content":"AVL在外存的存储结构一般有两种：第一种是顺序存储结构（数组），第二种是链式存储结构（链表），这就导致了在逻辑上很近的节点（父子）在物理上可能很远，无法利用局部性，于是读出的数据块很有可能只有我们想要的一个节点，因此，AVL的I/O渐进复杂度跟树高（h）挂钩，为O（h）,所以树高20，其实I/O的渐进复杂度就为20。","likes_number":5,"is_delete":false,"is_hidden":false,"ctime":1592528945,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1464006,"avatar":"https://static001.geekbang.org/account/avatar/00/16/56/c6/0b449bc6.jpg","nickname":"斐波那契","note":"","ucode":"85E2EBC01392B1","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":33866,"discussion_content":"其实老师讲的那句话改成 一颗树高20的平衡二叉树遍历一次最多要访问20次数据块就好理解了 还有平衡二叉树叶子节点是有数据的 而b树叶子结点是不存放数据的 b树定义了所有叶子结点在同一层且为null","likes_number":5,"is_delete":false,"is_hidden":false,"ctime":1571146498,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":1,"child_discussions":[{"author":{"id":1158349,"avatar":"https://static001.geekbang.org/account/avatar/00/11/ac/cd/fda6374f.jpg","nickname":"Louis","note":"","ucode":"BC667839F17937","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1464006,"avatar":"https://static001.geekbang.org/account/avatar/00/16/56/c6/0b449bc6.jpg","nickname":"斐波那契","note":"","ucode":"85E2EBC01392B1","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":276159,"discussion_content":"不严谨 b树节点是有数据的，b+树才是把数据放到椰子节点了","likes_number":2,"is_delete":false,"is_hidden":false,"ctime":1590830588,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":33866,"ip_address":""},"score":276159,"extra":""}]},{"author":{"id":1225224,"avatar":"https://static001.geekbang.org/account/avatar/00/12/b2/08/92f42622.jpg","nickname":"尔冬橙","note":"","ucode":"0B013A49BC18DA","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":5530,"discussion_content":"平衡二叉树难道也是只有叶子节点存数据，不是吧，我理解平衡二叉树应该像b树，所有节点都存数据吧","likes_number":4,"is_delete":false,"is_hidden":false,"ctime":1566347177,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1140080,"avatar":"https://static001.geekbang.org/account/avatar/00/11/65/70/7e137498.jpg","nickname":"FOCUS","note":"","ucode":"DFE3078B632026","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":380691,"discussion_content":"每个叶子结点就是一个块，每个块包含两个数据，块之间通过链式方式链接。树高20的话，就要遍历20个块// 100 万节点，按这个逻辑计算就是 有 100万的叶子结点？？","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1624633737,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1140080,"avatar":"https://static001.geekbang.org/account/avatar/00/11/65/70/7e137498.jpg","nickname":"FOCUS","note":"","ucode":"DFE3078B632026","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":380690,"discussion_content":"100 万节点的平衡二叉树 又则怎么理解？","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1624633600,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":2353310,"avatar":"https://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTIjUDIRQ0gRicqTxDm3MeIe1yjCrJuHMMbOD0QHKicx1KOibHwqn0tV8DQqvO3cmSpyjtacFm5jY9yxA/132","nickname":"AK47","note":"","ucode":"0A3F94DBA8C2AB","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":356254,"discussion_content":"这个结论的前提是使用二叉树，非b+数。在数据相同的情况下，b+树高度明显小于二叉树。如果数据在二叉树最下面的叶子节点，那么二叉树寻址次数就是最大，即20","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1615557163,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1274495,"avatar":"https://static001.geekbang.org/account/avatar/00/13/72/7f/5da093c5.jpg","nickname":"水目沾","note":"","ucode":"FDD1D15C277D58","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":334814,"discussion_content":"好问题，一直也是我想问的","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1607997326,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1615539,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTI6LXcIqb5K48nia8d4zmdsD1M9AZeyXoGrLzX5xvqfN0fqXOsYKUWLbZvZ8TtJCXWmYbCkCXg93dQ/132","nickname":"漏脚脖","note":"","ucode":"214AE52EC201E6","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":179352,"discussion_content":"请问块是不是就是页？","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1582212632,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":1,"child_discussions":[{"author":{"id":1543040,"avatar":"https://static001.geekbang.org/account/avatar/00/17/8b/80/8702bd5f.jpg","nickname":"evan","note":"","ucode":"491B073D5AFEDE","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1615539,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTI6LXcIqb5K48nia8d4zmdsD1M9AZeyXoGrLzX5xvqfN0fqXOsYKUWLbZvZ8TtJCXWmYbCkCXg93dQ/132","nickname":"漏脚脖","note":"","ucode":"214AE52EC201E6","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":318982,"discussion_content":"是的","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1603895758,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":179352,"ip_address":""},"score":318982,"extra":""}]},{"author":{"id":1732079,"avatar":"https://static001.geekbang.org/account/avatar/00/1a/6d/ef/f54fffc7.jpg","nickname":"Leon","note":"","ucode":"58594072607AB9","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":51613,"discussion_content":"为什么树高20就要遍历20个块","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1573908085,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":3,"extra":"","child_discussion_number":2,"child_discussions":[{"author":{"id":1207495,"avatar":"https://static001.geekbang.org/account/avatar/00/12/6c/c7/c8a881ab.jpg","nickname":"labuladong","note":"","ucode":"D4FB8DFCD3A275","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1732079,"avatar":"https://static001.geekbang.org/account/avatar/00/1a/6d/ef/f54fffc7.jpg","nickname":"Leon","note":"","ucode":"58594072607AB9","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":56426,"discussion_content":"看文中的图，B+ 树只在叶子结点存储数据（的指针），非叶子结点是区间信息，所以每次查找次数都是固定的树高。","likes_number":8,"is_delete":false,"is_hidden":false,"ctime":1574480025,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":51613,"ip_address":""},"score":56426,"extra":""},{"author":{"id":2252016,"avatar":"https://static001.geekbang.org/account/avatar/00/22/5c/f0/59c93e87.jpg","nickname":"课送你了","note":"","ucode":"507CBB2E19E440","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1207495,"avatar":"https://static001.geekbang.org/account/avatar/00/12/6c/c7/c8a881ab.jpg","nickname":"labuladong","note":"","ucode":"D4FB8DFCD3A275","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":317282,"discussion_content":"真的labuladong？","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1603527280,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":56426,"ip_address":""},"score":317282,"extra":""}]}]},{"had_liked":false,"id":41161,"user_name":"Richie","can_delete":false,"product_type":"c1","uid":1111377,"ip_address":"","ucode":"1426E1B2E82A43","user_header":"https://static001.geekbang.org/account/avatar/00/10/f5/51/60e91438.jpg","comment_is_top":false,"comment_ctime":1542743858,"is_pvip":false,"discussion_count":3,"race_medal":0,"score":"289305552690","product_id":100020801,"comment_content":"二级索引重建应该新建索引再做删除，如果有查询用到这个索引，此时索引已被删除，会导致业务抖动.主键重建不能采用drop这种方式去按操作，因为所有数据都是以主键组织的，删了主键后，InnoDB会自己找一个主键组织数据，再次添加主键又会重新组织数据，重建表的次已达二次，我们可以直接Optimiz这个表","like_count":67,"discussions":[{"author":{"id":1810051,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTK0uyg1IicbEhLwsgM2A2ROoyVdWdmUqZfQfs6G67w9m3hdRNBMOQJatQoACj3qNGgj2KVIgricaYiaQ/132","nickname":"木得感情的编码机器","note":"","ucode":"9C6CD47ADCB8E6","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":165778,"discussion_content":"&#34;二级索引重建应该新建索引再做删除&#34; 没删除之前新建是什么意思？不会重叠或冲突吗？这是合法的操作吗？","likes_number":4,"is_delete":false,"is_hidden":false,"ctime":1581326335,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":1,"child_discussions":[{"author":{"id":2076251,"avatar":"https://static001.geekbang.org/account/avatar/00/1f/ae/5b/4bd42286.jpg","nickname":"宋计洋","note":"","ucode":"9A34E8F71C6CBD","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1810051,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTK0uyg1IicbEhLwsgM2A2ROoyVdWdmUqZfQfs6G67w9m3hdRNBMOQJatQoACj3qNGgj2KVIgricaYiaQ/132","nickname":"木得感情的编码机器","note":"","ucode":"9C6CD47ADCB8E6","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":389511,"discussion_content":"索引是有名称的，不同的索引名称可以指定一样的字段。为什么需要重建索引，索引可能因为删除，或者页分裂等原因，导致数据页有空洞，重建索引的过程会创建一个新的索引，把数据按顺序插入，这样页面的利用率高，也就是索引更紧凑、更省空间","likes_number":3,"is_delete":false,"is_hidden":false,"ctime":1629298348,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":165778,"ip_address":""},"score":389511,"extra":""}]},{"author":{"id":1314724,"avatar":"https://static001.geekbang.org/account/avatar/00/14/0f/a4/0b49469f.jpg","nickname":"木子00","note":"","ucode":"8F78CA722EB29B","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":274314,"discussion_content":"我也想知道。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1590566659,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":41183,"user_name":"滩涂曳尾","can_delete":false,"product_type":"c1","uid":1187478,"ip_address":"","ucode":"40F650F2A419D4","user_header":"https://static001.geekbang.org/account/avatar/00/12/1e/96/c735ad6b.jpg","comment_is_top":false,"comment_ctime":1542757335,"is_pvip":false,"replies":[{"id":"14947","content":"1. 就是语句开始执行前创建一个read-view<br><br>2. 我估计你要的是这个：<br>T his group of numbers is from a presentation Jeff Dean gave at a Engineering All-Hands Meeting at Google.<br><br>L1 cache reference 0.5 ns<br>Branch mispredict 5 ns<br>L2 cache reference 7 ns<br>Mutex lock&#47;unlock 100 ns<br>Main memory reference 100 ns<br>Compress 1K bytes with Zippy 10,000 ns<br>Send 2K bytes over 1 Gbps network 20,000 ns<br>Read 1 MB sequentially from memory 250,000 ns<br>Round trip within same datacenter 500,000 ns<br>Disk seek 10,000,000 ns<br>Read 1 MB sequentially from network 10,000,000 ns<br>Read 1 MB sequentially from disk 30,000,000 ns<br>Send packet CA-&gt;Netherlands-&gt;CA 150,000,000 ns","user_name":"作者回复","comment_id":41183,"uid":"1264162","ip_address":"","utype":1,"ctime":1542818332,"user_name_real":"林晓斌"}],"discussion_count":3,"race_medal":0,"score":"263535762391","product_id":100020801,"comment_content":"老师我有2个问题，问题1是上一节遗留的没来得及问:<br>1. 在“读提交”隔离级别下，这个视图是在每个 SQL 语句开始执行的时候创建的。这句话能具体说明吗?<br>2. 访问磁盘和内存索引涉及磁盘(sata，ssd，nvm)读写性能，以及内存读写性能，可否给一些数值方便直观认识?","like_count":61,"discussions":[{"author":{"id":1264162,"avatar":"https://static001.geekbang.org/account/avatar/00/13/4a/22/2681d602.jpg","nickname":"林晓斌","note":"","ucode":"CDE42D44F26240","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":429723,"discussion_content":"1. 就是语句开始执行前创建一个read-view\n\n2. 我估计你要的是这个：\nT his group of numbers is from a presentation Jeff Dean gave at a Engineering All-Hands Meeting at Google.\n\nL1 cache reference 0.5 ns\nBranch mispredict 5 ns\nL2 cache reference 7 ns\nMutex lock/unlock 100 ns\nMain memory reference 100 ns\nCompress 1K bytes with Zippy 10,000 ns\nSend 2K bytes over 1 Gbps network 20,000 ns\nRead 1 MB sequentially from memory 250,000 ns\nRound trip within same datacenter 500,000 ns\nDisk seek 10,000,000 ns\nRead 1 MB sequentially from network 10,000,000 ns\nRead 1 MB sequentially from disk 30,000,000 ns\nSend packet CA-&amp;gt;Netherlands-&amp;gt;CA 150,000,000 ns","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1542818332,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1759325,"avatar":"https://static001.geekbang.org/account/avatar/00/1a/d8/5d/07dfb3b5.jpg","nickname":"杯莫停","note":"","ucode":"4FA1D5CBBEF702","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":308655,"discussion_content":"读提交”隔离级别下，这个视图是在每个 SQL 语句开始执行的时候创建的，区别于可重复度在事务开始时创建视图，就是视图的作用域不同。\n可重复度：为了杜绝同事务不同的语句读到不同数据（脏数据）于是在事务开头就创建了视图，保证以后读的时候都使用该视图的数据。\n读已提交：事务内在执行SQL的时候创建视图，每条SQL使用的视图都是不同的。读到的数据也有可能是不同的。","likes_number":3,"is_delete":false,"is_hidden":false,"ctime":1601021117,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1146153,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTIbxgUM37rN7rwZC9rUzleQWwqsOrqmUpibu9CMDImnuB2oEQ8p00PicYqBr81OvDkukCmzpUcM7FZw/132","nickname":"McTavish","note":"","ucode":"D391381A90113E","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":351874,"discussion_content":"mark","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1614507991,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":41315,"user_name":"大王拍我去巡山","can_delete":false,"product_type":"c1","uid":1067406,"ip_address":"","ucode":"94A1EE540BC9CA","user_header":"https://static001.geekbang.org/account/avatar/00/10/49/8e/e6eaf434.jpg","comment_is_top":false,"comment_ctime":1542765178,"is_pvip":true,"replies":[{"id":"14852","content":"问出这个问题表示你今天的文章看明白了👍🏿<br><br>看完明天的（下），我估计你就有答案了","user_name":"作者回复","comment_id":41315,"uid":"1264162","ip_address":"","utype":1,"ctime":1542780290,"user_name_real":"林晓斌"}],"discussion_count":17,"race_medal":0,"score":"254945835642","product_id":100020801,"comment_content":"老师你好：之前看过一遍文章，一直有疑惑：一个innoDB引擎的表，数据量非常大，根据二级索引搜索会比主键搜索快，文章阐述的原因是主键索引和数据行在一起，非常大搜索慢，我的疑惑是：通过普通索引找到主键ID后，同样要跑一边主键索引，还望老师解惑。。。","like_count":59,"discussions":[{"author":{"id":1264162,"avatar":"https://static001.geekbang.org/account/avatar/00/13/4a/22/2681d602.jpg","nickname":"林晓斌","note":"","ucode":"CDE42D44F26240","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":429760,"discussion_content":"问出这个问题表示你今天的文章看明白了👍🏿\n\n看完明天的（下），我估计你就有答案了","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1542780290,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":3,"child_discussions":[{"author":{"id":2828104,"avatar":"https://static001.geekbang.org/account/avatar/00/2b/27/48/44e036b6.jpg","nickname":"送红花的牛仔裤","note":"","ucode":"A2D99DCB717B63","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1264162,"avatar":"https://static001.geekbang.org/account/avatar/00/13/4a/22/2681d602.jpg","nickname":"林晓斌","note":"","ucode":"CDE42D44F26240","race_medal":0,"user_type":2,"is_pvip":false},"discussion":{"id":535797,"discussion_content":"老师。。。人家是18年问的 😃","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1638543065,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":429760,"ip_address":""},"score":535797,"extra":""},{"author":{"id":1780797,"avatar":"https://static001.geekbang.org/account/avatar/00/1b/2c/3d/0bd58aa4.jpg","nickname":"Em","note":"","ucode":"32012A5C603C8A","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":2828104,"avatar":"https://static001.geekbang.org/account/avatar/00/2b/27/48/44e036b6.jpg","nickname":"送红花的牛仔裤","note":"","ucode":"A2D99DCB717B63","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":575289,"discussion_content":"老师也是18年回的, 有什么问题?","likes_number":2,"is_delete":false,"is_hidden":false,"ctime":1654714003,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":535797,"ip_address":""},"score":575289,"extra":""},{"author":{"id":1295609,"avatar":"https://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTJRFRX8kNzNet7FibNvtavbVpAwK09AhIhrib9k762qWtH6mre8ickP7hM5mgZC4ytr8NnmIfmAhxMSQ/132","nickname":"老大不小","note":"","ucode":"35BCDD3CB13467","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":2828104,"avatar":"https://static001.geekbang.org/account/avatar/00/2b/27/48/44e036b6.jpg","nickname":"送红花的牛仔裤","note":"","ucode":"A2D99DCB717B63","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":585734,"discussion_content":"你真幽默，小红花同学","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1661781743,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":535797,"ip_address":"广东"},"score":585734,"extra":""}]},{"author":{"id":1652085,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTKORTofsU89GYKtywquzKuEiabvZnEOonfMYKuCPlo8GDlXqZuJdBicu0XtlaeodH4BnmHV1kldSAwQ/132","nickname":"未来怎样","note":"","ucode":"4E54EB62595B27","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":39186,"discussion_content":"二级索引比主键索引快的场景是 使用了覆盖索引","likes_number":8,"is_delete":false,"is_hidden":false,"ctime":1571901594,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":5,"child_discussions":[{"author":{"id":1282575,"avatar":"https://static001.geekbang.org/account/avatar/00/13/92/0f/cff30522.jpg","nickname":"江湖夜雨","note":"","ucode":"C64913C7000899","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1652085,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTKORTofsU89GYKtywquzKuEiabvZnEOonfMYKuCPlo8GDlXqZuJdBicu0XtlaeodH4BnmHV1kldSAwQ/132","nickname":"未来怎样","note":"","ucode":"4E54EB62595B27","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":50669,"discussion_content":"覆盖索引是啥？","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1573743272,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":39186,"ip_address":""},"score":50669,"extra":""},{"author":{"id":1065351,"avatar":"https://static001.geekbang.org/account/avatar/00/10/41/87/d26efb2e.jpg","nickname":"SuperSnow","note":"","ucode":"84C89AA8083E6A","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1652085,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTKORTofsU89GYKtywquzKuEiabvZnEOonfMYKuCPlo8GDlXqZuJdBicu0XtlaeodH4BnmHV1kldSAwQ/132","nickname":"未来怎样","note":"","ucode":"4E54EB62595B27","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":128462,"discussion_content":"可能吧，除此之外，没有啥解释了。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1578641978,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":39186,"ip_address":""},"score":128462,"extra":""},{"author":{"id":1139591,"avatar":"https://static001.geekbang.org/account/avatar/00/11/63/87/d13aa7de.jpg","nickname":"Aodongq1n","note":"","ucode":"C77B0F833F6414","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1652085,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTKORTofsU89GYKtywquzKuEiabvZnEOonfMYKuCPlo8GDlXqZuJdBicu0XtlaeodH4BnmHV1kldSAwQ/132","nickname":"未来怎样","note":"","ucode":"4E54EB62595B27","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":301529,"discussion_content":"覆盖索引吗，我感觉是索引下推啊","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1598546953,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":39186,"ip_address":""},"score":301529,"extra":""}]},{"author":{"id":1806081,"avatar":"https://static001.geekbang.org/account/avatar/00/1b/8f/01/2fbc5cc9.jpg","nickname":"xiaozeng","note":"","ucode":"C517E55357315C","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":291614,"discussion_content":"我分享一下我的想法 不知道恰不恰当：因为Innodb 每一页固定是16KB，主键索引B+树叶子节点 每一页存的是一整行的数据，而非主键索引B+树叶子节点存的是索引值+主键值的 所以他的每一页存的数据项比主键索引B+树叶子节点的每一页数据项存的更少，自然而然非主键索引B+树叶子节点 他所占的页数就更少，叶子节点少树往上走 这颗树的非叶子节点也少(非叶子节点每一页不存数据 只存记录项(每个记录项存 页号和每个页里面主键的最小值)) ，这样这棵树的高度也更低，我们进行磁盘I/O的次数也更少，所以查询通过非主键索引查询更快。。(这个问题的前提应该是数据量非常大(而且每一行字段很多，占得空间更大。这样的话 查询的性能提升感觉会更明显))","likes_number":5,"is_delete":false,"is_hidden":false,"ctime":1594888172,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":1,"child_discussions":[{"author":{"id":1780797,"avatar":"https://static001.geekbang.org/account/avatar/00/1b/2c/3d/0bd58aa4.jpg","nickname":"Em","note":"","ucode":"32012A5C603C8A","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1806081,"avatar":"https://static001.geekbang.org/account/avatar/00/1b/8f/01/2fbc5cc9.jpg","nickname":"xiaozeng","note":"","ucode":"C517E55357315C","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":575290,"discussion_content":"如果要回表最后还不是要回到主键索引, 你们这些前提都是得不回表","likes_number":2,"is_delete":false,"is_hidden":false,"ctime":1654714764,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":291614,"ip_address":""},"score":575290,"extra":""}]},{"author":{"id":1691243,"avatar":"https://static001.geekbang.org/account/avatar/00/19/ce/6b/ae7489a0.jpg","nickname":"Ccc","note":"","ucode":"EAEA0284948959","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":43511,"discussion_content":"哈哈，看到了来自2019年的答案。我也觉得应该是指覆盖索引的场景。","likes_number":2,"is_delete":false,"is_hidden":false,"ctime":1572878660,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":2020076,"avatar":"https://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTLFk6IDcdHEGr7nQrCB5kicJxg1L5O9kpH6zUxvaiaYHhVrUMaibWeJBswhXNutmFFjfibfnhfx7YbeAA/132","nickname":"steven2","note":"","ucode":"ED9A201E9CC195","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":328571,"discussion_content":"点赞","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1606182729,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1336634,"avatar":"https://static001.geekbang.org/account/avatar/00/14/65/3a/bc801fb2.jpg","nickname":"mqray","note":"","ucode":"15664507AD7033","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":300854,"discussion_content":"不太能理解呀 为什么二级索引比主键索引搜索快呀？？","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1598282812,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":2,"child_discussions":[{"author":{"id":1637475,"avatar":"https://static001.geekbang.org/account/avatar/00/18/fc/63/bcda2f87.jpg","nickname":"熊","note":"","ucode":"B6423D29701EC5","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":1336634,"avatar":"https://static001.geekbang.org/account/avatar/00/14/65/3a/bc801fb2.jpg","nickname":"mqray","note":"","ucode":"15664507AD7033","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":305712,"discussion_content":"有可能覆盖索引 不用回表","likes_number":7,"is_delete":false,"is_hidden":false,"ctime":1600066202,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":300854,"ip_address":""},"score":305712,"extra":""},{"author":{"id":2166073,"avatar":"https://thirdwx.qlogo.cn/mmopen/vi_32/k3YD3y3BzGDSdrwRJyJY4BXsNJibfM4uzOdDVKIAlFApR2FZCLg2ibrZtJ4vuahA3LHLW9GKzH5CMGqCDhWjhZqg/132","nickname":"戒酒的李白","note":"","ucode":"744E1A22761647","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":1637475,"avatar":"https://static001.geekbang.org/account/avatar/00/18/fc/63/bcda2f87.jpg","nickname":"熊","note":"","ucode":"B6423D29701EC5","race_medal":0,"user_type":1,"is_pvip":true},"discussion":{"id":393495,"discussion_content":"还有一种场景： SQL执行计划无法走索引的场景， 需要全表扫描， 同时查询的字段正好某个索引可以覆盖到， 这样MySQL会默认选择这个索引去执行， 因为普通索引节点上数据比较小（主键索引每个节点存储了整行数据，会比较大）， 这样一页能装的节点数多， 产生的磁盘IO比较少。 这时候就不会选择主键索引，会选择普通索引","likes_number":4,"is_delete":false,"is_hidden":false,"ctime":1631455283,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":305712,"ip_address":""},"score":393495,"extra":""}]}]},{"had_liked":false,"id":41860,"user_name":"橡皮泥boy","can_delete":false,"product_type":"c1","uid":1011863,"ip_address":"","ucode":"478F5417EDD249","user_header":"https://static001.geekbang.org/account/avatar/00/0f/70/97/e5bf9ddb.jpg","comment_is_top":false,"comment_ctime":1542862607,"is_pvip":true,"replies":[{"id":"15021","content":"赞👍🏿","user_name":"作者回复","comment_id":41860,"uid":"1264162","ip_address":"","utype":1,"ctime":1542871799,"user_name_real":"林晓斌"}],"discussion_count":3,"race_medal":0,"score":"220586194703","product_id":100020801,"comment_content":"【今日收获】<br>1. 主键索引的叶子结点存储了整一行的内容（聚簇索引），使用主键可以快速获取到整行的数据。<br>2. 非主键索引的叶子结点存储的是主键的值，所以主键字段占用空间不宜过大。同时，其查找数据的过程称为“回表”，需要先查找自己得到主键值，再在主键索引上边查找数据内容。<br>3. 索引的实现由存储引擎来决定，InnoDB使用B+树（N叉树，比如1200叉树），把整颗树的高度维持在很小的范围内，同时在内存里缓存前面若干层的节点，可以极大地降低访问磁盘的次数，提高读的效率。<br>4. B+树的插入可能会引起数据页的分裂，删除可能会引起数据页的合并，二者都是比较重的IO消耗，所以比较好的方式是顺序插入数据，这也是我们一般使用自增主键的原因之一。<br>5. 在Key-Value的场景下，只有一个索引且是唯一索引，则适合直接使用业务字段作为主键索引。","like_count":51,"discussions":[{"author":{"id":1264162,"avatar":"https://static001.geekbang.org/account/avatar/00/13/4a/22/2681d602.jpg","nickname":"林晓斌","note":"","ucode":"CDE42D44F26240","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":429923,"discussion_content":"赞👍🏿","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1542871799,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":2351720,"avatar":"https://static001.geekbang.org/account/avatar/00/23/e2/68/ce547a12.jpg","nickname":"zjm1314","note":"","ucode":"63B0EAB7045054","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":340098,"discussion_content":"N叉树的这个N，每个索引都不一样么，还是说固定的","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1609902640,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":1,"child_discussions":[{"author":{"id":1970443,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTIx1V1QAxC4NHaxYZGyuibBN8lcURJWc5nrnO4yic1kxnDemYV2FJGialf47kYX9qtDnZZOfe1SJeLicg/132","nickname":"lleft","note":"","ucode":"D573EB509455AE","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":2351720,"avatar":"https://static001.geekbang.org/account/avatar/00/23/e2/68/ce547a12.jpg","nickname":"zjm1314","note":"","ucode":"63B0EAB7045054","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":369218,"discussion_content":"不一样，跟索引所在的列和主键的大小相关","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1618976929,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":340098,"ip_address":""},"score":369218,"extra":""}]}]},{"had_liked":false,"id":41371,"user_name":"☞","can_delete":false,"product_type":"c1","uid":1302793,"ip_address":"","ucode":"6FAEF05F234D2A","user_header":"https://static001.geekbang.org/account/avatar/00/13/e1/09/9483f537.jpg","comment_is_top":false,"comment_ctime":1542770026,"is_pvip":false,"replies":[{"id":"14846","content":"1. 不会不会，只会分裂它要写入的那个页面。每个页面之间是用指针串的，改指针就好了，不需要“后面的全部挪动<br><br>2. 对，减为了增加空间利用率","user_name":"作者回复","comment_id":41371,"uid":"1264162","ip_address":"","utype":1,"ctime":1542779785,"user_name_real":"林晓斌"}],"discussion_count":4,"race_medal":0,"score":"211996167530","product_id":100020801,"comment_content":"老师请问下：<br>1、如果插入的数据是在主键树叶子结点的中间，后面的所有页如果都是满的状态，是不是会造成后面的每一页都会去进行页分裂操作，直到最后一个页申请新页移过去最后一个值<br>2、还有之前看到过说是插入数据如果是在某个数据满了页的首尾，为了减少数据移动和页分裂，会先去前后两个页看看是否满了，如果没满会先将数据放到前后两个页上，不知道是不是有这种情况","like_count":49,"discussions":[{"author":{"id":1264162,"avatar":"https://static001.geekbang.org/account/avatar/00/13/4a/22/2681d602.jpg","nickname":"林晓斌","note":"","ucode":"CDE42D44F26240","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":429781,"discussion_content":"1. 不会不会，只会分裂它要写入的那个页面。每个页面之间是用指针串的，改指针就好了，不需要“后面的全部挪动\n\n2. 对，减为了增加空间利用率","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1542779785,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1128259,"avatar":"https://static001.geekbang.org/account/avatar/00/11/37/43/73663fb8.jpg","nickname":"诺","note":"","ucode":"DD5FBE1834BDF0","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":311222,"discussion_content":"问题1：在Page 数据结构中，记录 Page 的头信息的File Header 字段中有 FIL_PAGE_PREV 和 FIL_PAGE_NEXT 字段，通过这两个字段，来确定该页的上一页和下一页，实际上所有页通过两个字段可以形成一条双向链表的","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1602256938,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1296063,"avatar":"https://static001.geekbang.org/account/avatar/00/13/c6/bf/52b3f71d.jpg","nickname":"dawn","note":"","ucode":"1757B28F1EF5C4","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":582991,"discussion_content":"老哥你以为是多米诺骨牌，实际上是向计算机申请一块新的存储空间，然后通过链表的方式插进去","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1659863659,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":"江苏"},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":2708697,"avatar":"","nickname":"李海龙","note":"","ucode":"766E49D0AE1434","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":548872,"discussion_content":"多个页之间使用双向链表连接的，只会有当前页会产生页分裂的问题，申请一个新页放到中间，改动链接指针","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1643429114,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":41556,"user_name":"唐堂","can_delete":false,"product_type":"c1","uid":1110634,"ip_address":"","ucode":"BBCF36B21AC256","user_header":"https://static001.geekbang.org/account/avatar/00/10/f2/6a/3bcef8ef.jpg","comment_is_top":false,"comment_ctime":1542804903,"is_pvip":false,"discussion_count":2,"race_medal":0,"score":"207701235111","product_id":100020801,"comment_content":"@约书亚 的问题：““N叉树”的N值在Mysql是否可以被调整？” ，老师能否在稍微详细点指导下？  谢谢老师了","like_count":48,"discussions":[{"author":{"id":1637799,"avatar":"https://static001.geekbang.org/account/avatar/00/18/fd/a7/e679621f.jpg","nickname":"赵某人","note":"","ucode":"562994A43948A5","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":338470,"discussion_content":"1， 通过改变key值来调整\nN叉树中非叶子节点存放的是索引信息，索引包含Key和Point指针。Point指针固定为6个字节，假如Key为10个字节，那么单个索引就是16个字节。如果B+树中页大小为16K，那么一个页就可以存储1024个索引，此时N就等于1024。我们通过改变Key的大小，就可以改变N的值\n2， 改变页的大小\n页越大，一页存放的索引就越多，N就越大。\n\n数据页调整后，如果数据页太小层数会太深，数据页太大，加载到内存的时间和单个数据页查询时间会提高，需要达到平衡才行。","likes_number":15,"is_delete":false,"is_hidden":false,"ctime":1609296995,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1759325,"avatar":"https://static001.geekbang.org/account/avatar/00/1a/d8/5d/07dfb3b5.jpg","nickname":"杯莫停","note":"","ucode":"4FA1D5CBBEF702","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":308646,"discussion_content":"能不能调整，要看N是怎么算出来的。是 页大小/（索引大小+指向子树的指针大小），默认页大小是16k，指针是6字节，那么是不是可以调整索引字符的大小","likes_number":8,"is_delete":false,"is_hidden":false,"ctime":1601018910,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":52522,"user_name":"fdconan","can_delete":false,"product_type":"c1","uid":1244596,"ip_address":"","ucode":"01C71C6E9FD1E4","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTLv9HJIW4OACkjlwOQJ9cU7HzvaDFYkACWCib2lzOMef9ZiaGDTVFqjPicpVK5KDRbBRVGGHrMHQO1Rw/132","comment_is_top":false,"comment_ctime":1545404539,"is_pvip":false,"replies":[{"id":"19152","content":"好问题<br><br>不是，非主键索引上有5个值，分别是<br>（1，100），（1，200）... （1，600）","user_name":"作者回复","user_name_real":"林晓斌","uid":"1264162","ctime":1545410549,"ip_address":"","comment_id":52522,"utype":1}],"discussion_count":14,"race_medal":0,"score":"181934030971","product_id":100020801,"comment_content":"老师，请教下，文中说非主键索引会存储主键的值，而文中举例的非主键索引值刚好没有重复，所以想请问下，如果记录表中 R1~R5 的 (ID,k) 值分别为 (100,1)、(200,1)、(300,1)、(500,1) 和 (600,1)，那么非主键索引k=1的节点，应该记录100，200，300，500，600的值，是这样理解么？","like_count":42,"discussions":[{"author":{"id":1264162,"avatar":"https://static001.geekbang.org/account/avatar/00/13/4a/22/2681d602.jpg","nickname":"林晓斌","note":"","ucode":"CDE42D44F26240","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":433898,"discussion_content":"好问题\n\n不是，非主键索引上有5个值，分别是\n（1，100），（1，200）... （1，600）","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1545410549,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":1,"child_discussions":[{"author":{"id":2158801,"avatar":"","nickname":"谭伟","note":"","ucode":"3ABC29245A7C22","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1264162,"avatar":"https://static001.geekbang.org/account/avatar/00/13/4a/22/2681d602.jpg","nickname":"林晓斌","note":"","ucode":"CDE42D44F26240","race_medal":0,"user_type":2,"is_pvip":false},"discussion":{"id":573468,"discussion_content":"这里还是不太明白，如果能有个图就好了","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1653452196,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":433898,"ip_address":""},"score":573468,"extra":""}]},{"author":{"id":1882517,"avatar":"https://static001.geekbang.org/account/avatar/00/1c/b9/95/cabab54b.jpg","nickname":"tong","note":"","ucode":"966DEDE81081D0","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":217279,"discussion_content":"这应该就是为什么，innodb的叶子结点存的是页吧？因为有重复的行","likes_number":7,"is_delete":false,"is_hidden":false,"ctime":1585536871,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1140080,"avatar":"https://static001.geekbang.org/account/avatar/00/11/65/70/7e137498.jpg","nickname":"FOCUS","note":"","ucode":"DFE3078B632026","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":380701,"discussion_content":"存到磁盘的数据格式也是如此？(1, 100), (1,200)…(1,600)?","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1624635432,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1140080,"avatar":"https://static001.geekbang.org/account/avatar/00/11/65/70/7e137498.jpg","nickname":"FOCUS","note":"","ucode":"DFE3078B632026","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":380700,"discussion_content":"存到磁盘的数据格式也是如此？(1, 100), (1,200)…(1,600)?","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1624635426,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1140080,"avatar":"https://static001.geekbang.org/account/avatar/00/11/65/70/7e137498.jpg","nickname":"FOCUS","note":"","ucode":"DFE3078B632026","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":380698,"discussion_content":"存到磁盘的数据格式也是如此？(1, 100), (1,200)…(1,600)?","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1624635419,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1140080,"avatar":"https://static001.geekbang.org/account/avatar/00/11/65/70/7e137498.jpg","nickname":"FOCUS","note":"","ucode":"DFE3078B632026","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":380696,"discussion_content":"还是不理解 我从文中得到的理解是 key=1，那对应的就应该是对应每一行中key=1的ID。所以结果就变成了（1，100）…（1，600）。可能真实的磁盘存储的格式并不是这样的。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1624635349,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":2171678,"avatar":"https://static001.geekbang.org/account/avatar/00/21/23/1e/cc62c8a8.jpg","nickname":"大桃子又好吃","note":"","ucode":"C84EBAB4B1DF15","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":304849,"discussion_content":"我是这样猜测的，不知道对不对。普通索引树叶子结点的value是id的list，唯一索引树叶子节点的value是单个的id","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1599698199,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":1,"child_discussions":[{"author":{"id":1204353,"avatar":"https://static001.geekbang.org/account/avatar/00/12/60/81/eaf6d0ac.jpg","nickname":"拉布拉多","note":"","ucode":"637A88D9F29F57","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":2171678,"avatar":"https://static001.geekbang.org/account/avatar/00/21/23/1e/cc62c8a8.jpg","nickname":"大桃子又好吃","note":"","ucode":"C84EBAB4B1DF15","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":340844,"discussion_content":"同问？","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1610178076,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":304849,"ip_address":""},"score":340844,"extra":""}]},{"author":{"id":1815212,"avatar":"","nickname":"Geek_8b6021","note":"","ucode":"2EBCA91FFA1BD2","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":287979,"discussion_content":"所以如果是非主键的索引其实是一个非主键和主键的联合索引吗","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1593605882,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":2,"child_discussions":[{"author":{"id":1204353,"avatar":"https://static001.geekbang.org/account/avatar/00/12/60/81/eaf6d0ac.jpg","nickname":"拉布拉多","note":"","ucode":"637A88D9F29F57","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1815212,"avatar":"","nickname":"Geek_8b6021","note":"","ucode":"2EBCA91FFA1BD2","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":340843,"discussion_content":"同问？","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1610178069,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":287979,"ip_address":""},"score":340843,"extra":""},{"author":{"id":1970443,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTIx1V1QAxC4NHaxYZGyuibBN8lcURJWc5nrnO4yic1kxnDemYV2FJGialf47kYX9qtDnZZOfe1SJeLicg/132","nickname":"lleft","note":"","ucode":"D573EB509455AE","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1815212,"avatar":"","nickname":"Geek_8b6021","note":"","ucode":"2EBCA91FFA1BD2","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":369219,"discussion_content":"不是，非主键索引的key是非主键索引的列，value是主键的值。联合索引的kye是联合索引的所有列，联合索引的value还是主键的值。应该是这样","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1618977097,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":287979,"ip_address":""},"score":369219,"extra":""}]},{"author":{"id":1967080,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/DYAIOgq83eoeZJ1aW5LkAlaKqXEpvrnSk0ibUcLFjz8pDmWpuvm8RD3e79icAALsEurUwXOs0UjVQRxuImxCsHQQ/132","nickname":"donkey703","note":"","ucode":"A48EA2D28A7557","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":235603,"discussion_content":"索引都是unique的吧，弄个一对多的还上啥索引","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1587045609,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":1,"child_discussions":[{"author":{"id":2035923,"avatar":"https://static001.geekbang.org/account/avatar/00/1f/10/d3/dc3b0f5f.jpg","nickname":"我亲爱的偏执狂","note":"","ucode":"458D8CCF44D36A","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1967080,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/DYAIOgq83eoeZJ1aW5LkAlaKqXEpvrnSk0ibUcLFjz8pDmWpuvm8RD3e79icAALsEurUwXOs0UjVQRxuImxCsHQQ/132","nickname":"donkey703","note":"","ucode":"A48EA2D28A7557","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":282614,"discussion_content":"非也非也，索引有唯一索引，也有普通索引。","likes_number":6,"is_delete":false,"is_hidden":false,"ctime":1592030089,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":235603,"ip_address":""},"score":282614,"extra":""}]}]},{"had_liked":false,"id":41863,"user_name":"金龟","can_delete":false,"product_type":"c1","uid":1228500,"ip_address":"","ucode":"1C7D35C8AE8D9D","user_header":"https://static001.geekbang.org/account/avatar/00/12/be/d4/ff1c1319.jpg","comment_is_top":false,"comment_ctime":1542862959,"is_pvip":false,"replies":[{"id":"15020","content":"这个叫作“堆组织表”，MyISAM就是这样的，各有利弊。你想一下如果修改了数据的位置的情况，InnoDB这种模式是不是就方便些","user_name":"作者回复","user_name_real":"林晓斌","uid":"1264162","ctime":1542871756,"ip_address":"","comment_id":41863,"utype":1}],"discussion_count":2,"race_medal":0,"score":"177636522095","product_id":100020801,"comment_content":"非聚集索引上为啥叶子节点的value为什么不是地址，这样可以直接定位到整条数据，而不用再次对整棵树进行查询","like_count":41,"discussions":[{"author":{"id":1264162,"avatar":"https://static001.geekbang.org/account/avatar/00/13/4a/22/2681d602.jpg","nickname":"林晓斌","note":"","ucode":"CDE42D44F26240","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":429925,"discussion_content":"这个叫作“堆组织表”，MyISAM就是这样的，各有利弊。你想一下如果修改了数据的位置的情况，InnoDB这种模式是不是就方便些","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1542871756,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":2166073,"avatar":"https://thirdwx.qlogo.cn/mmopen/vi_32/k3YD3y3BzGDSdrwRJyJY4BXsNJibfM4uzOdDVKIAlFApR2FZCLg2ibrZtJ4vuahA3LHLW9GKzH5CMGqCDhWjhZqg/132","nickname":"戒酒的李白","note":"","ucode":"744E1A22761647","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":393497,"discussion_content":"主键索引页分裂的场景， 就可能会导致主键记录的地址发生变化， 这时候需要更新每一个索引上面对主键记录地址的引用","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1631456684,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":57040,"user_name":"来打死我吧","can_delete":false,"product_type":"c1","uid":1312724,"ip_address":"","ucode":"3EC541281666A8","user_header":"https://static001.geekbang.org/account/avatar/00/14/07/d4/917576e4.jpg","comment_is_top":false,"comment_ctime":1546606402,"is_pvip":false,"replies":[{"id":"20567","content":"👍🏿","user_name":"作者回复","user_name_real":"林晓斌","uid":"1264162","ctime":1546609164,"ip_address":"","comment_id":57040,"utype":1}],"discussion_count":2,"race_medal":0,"score":"134690592578","product_id":100020801,"comment_content":"（1）索引的出现就是为了提高数据查询效率，就像书的目录一样<br>（2）索引不但写在内存中，还写在硬盘中<br>（3）索引是存储引擎实现的<br>（4）索引的常见模型<br>        1）哈希表：以键-值（key-value）存储数据的结构<br>                ~~把值放在数组里，用一个哈希函数把key换算成一个确定的位置，然后把value放在数组的这个位置<br>                ~~哈希冲突的处理办法：链表<br>                ~~哈希表适用场景：只有等值查询的场景<br>        2）有序数组：按顺序存储。查询用二分法就可以快速查询，时间复杂度是：O(log(N))<br>                ~~有序数组查询效率高，更新效率低<br>                ~~有序数组的适用场景：静态存储引擎。<br>        3）搜索树：每个节点的左儿子小于父节点，父节点又小于右儿子。查询时间复杂度O(log(N))，更新时间复杂度O(log(N))<br>                ~~数据库存储大多不适用二叉树，因为树高过高，会适用N叉树<br>【Innodb的索引模型】<br>在Innodb中，表都是根据主键顺序以索引的形式存放的，这种存储方式的表称为索引组织表。Innodb使用的B+树索引类型。每一个索引在InnoDB里面对应一棵B+树<br>（1）索引类型<br>        1）主键索引（聚簇索引），值存的是整行内容<br>        2）非主键索引（二级索引），值存的是主键内容<br>（2）B+ 树能够很好地配合磁盘的读写特性，减少单次查询的磁盘访问次数<br>【基于主键索引和普通索引的查询有什么区别】<br>（1）如果语句为select * from T where ID=500, 主键索引，只需要搜索ID这个B+树<br>（2）如果语句为select * from T where k = 5 , 普通索引，先查询k这个B+树，然后得到id的值，再搜索ID这个B+树，这个过程叫做回表<br>**非主键索引需要多扫描一棵索引树，所以尽量用主键索引<br>【索引维护】<br>（1）B+树为了维护索引的有序性，所以需要做索引维护<br>        1）页分裂、页合并。 页分裂使空间利用率降低了50%。<br>                ~~一个数据页满了，按照B+Tree算法，新增加一个数据页，叫做页分裂，会导致性能下降。空间利用率降低大概50%。当相邻的两个数据页利用率很低的时候会做数据页合并，合并的过程是分裂过程的逆过程<br>（2）自增主键的使用场景<br>        1）主键长度越小，普通索引的叶子节点就越小，普通索引占用的空间也就越小<br>        2）业务字段做主键场景：1：只有一个索引 2：该索引必须是唯一索引 这是典型的kv场景<br>                由于没有其他索引，估不用考虑其它索引叶子节点大小的问题，故将该值设为主键索引","like_count":31,"discussions":[{"author":{"id":1264162,"avatar":"https://static001.geekbang.org/account/avatar/00/13/4a/22/2681d602.jpg","nickname":"林晓斌","note":"","ucode":"CDE42D44F26240","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":435373,"discussion_content":"👍🏿","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1546609164,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1363110,"avatar":"https://static001.geekbang.org/account/avatar/00/14/cc/a6/b0490e97.jpg","nickname":"Tsong","note":"","ucode":"CF0259824E6D53","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":397553,"discussion_content":"**非主键索引需要多扫描一棵索引树，所以尽量用主键索引   --这个有待商榷。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1632639530,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":44273,"user_name":"skyun","can_delete":false,"product_type":"c1","uid":1002658,"ip_address":"","ucode":"38097F3FF1045C","user_header":"https://static001.geekbang.org/account/avatar/00/0f/4c/a2/00241866.jpg","comment_is_top":false,"comment_ctime":1543397626,"is_pvip":false,"discussion_count":7,"race_medal":0,"score":"126097449210","product_id":100020801,"comment_content":"评论区里面关于B+树节点N等于1200的疑惑，我觉得应该是这么算的：<br>16*1024&#47;（8+6）≈1200 <br>其中数据页默认大小为16kb，mysql bigint为8个字节，指针大小在InnoDB源码中设置为6字节。<br>关于如果层高为四层，应该是1200*1200*1200再乘以叶子节点中一个数据页存储记录的条数，文中应该默认了每个叶子节点中只存储一条数据吧，也就是每条数据大小的为16k，讲道理现实中一般没这么大的数据的。","like_count":29,"discussions":[{"author":{"id":1442605,"avatar":"https://static001.geekbang.org/account/avatar/00/16/03/2d/404627dc.jpg","nickname":"Anryg Zhun","note":"","ucode":"76DF8560BA9D14","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":270736,"discussion_content":"准确的说应该是这么算的: 16*1024=8(n-1) +6n \n算出来约为1200","likes_number":2,"is_delete":false,"is_hidden":false,"ctime":1590045629,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1663257,"avatar":"https://static001.geekbang.org/account/avatar/00/19/61/19/47bbcb0f.jpg","nickname":"Hang_ccccc","note":"","ucode":"4D08D9BF21AAD0","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":371953,"discussion_content":"我是这么理解的。因为非叶子节点只存放索引信息，数据节点只存在于叶子节点。 而根节点只是存储指向，试想，假如树高是2，则根节点只存放1200个地址信息，而叶子节点才会存放1200个的数据页。所以是1 * 1200. 类比树高为4， 则为1 * 1200 * 1200 * 1200.","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1620098972,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1543040,"avatar":"https://static001.geekbang.org/account/avatar/00/17/8b/80/8702bd5f.jpg","nickname":"evan","note":"","ucode":"491B073D5AFEDE","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":318991,"discussion_content":"16k是默认的一个页大小","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1603896640,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1212750,"avatar":"https://static001.geekbang.org/account/avatar/00/12/81/4e/d71092f4.jpg","nickname":"夏目","note":"","ucode":"67C075A01CF4D2","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":297774,"discussion_content":"1200^3是因为n层的满k叉树节点数为k^(n-1)/k-1，约等于1200^3","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1597053393,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1044546,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/f0/42/7728d4f5.jpg","nickname":"艿艿","note":"","ucode":"8F727AB7A7F6B2","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":28476,"discussion_content":"每天数据 16kb 有点太大了吧。\n貌似高度的说法，各不相同。猜测是根节点算高度 1 。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1570699564,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":2,"child_discussions":[{"author":{"id":1120409,"avatar":"https://static001.geekbang.org/account/avatar/00/11/18/99/f27997e1.jpg","nickname":"志林","note":"","ucode":"6F27616857A46F","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":1044546,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/f0/42/7728d4f5.jpg","nickname":"艿艿","note":"","ucode":"8F727AB7A7F6B2","race_medal":0,"user_type":1,"is_pvip":true},"discussion":{"id":40678,"discussion_content":"？","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1572257568,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":28476,"ip_address":""},"score":40678,"extra":""},{"author":{"id":1442605,"avatar":"https://static001.geekbang.org/account/avatar/00/16/03/2d/404627dc.jpg","nickname":"Anryg Zhun","note":"","ucode":"76DF8560BA9D14","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1044546,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/f0/42/7728d4f5.jpg","nickname":"艿艿","note":"","ucode":"8F727AB7A7F6B2","race_medal":0,"user_type":1,"is_pvip":true},"discussion":{"id":270742,"discussion_content":"要算上指针的占用大小","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1590046245,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":28476,"ip_address":""},"score":270742,"extra":""}]}]},{"had_liked":false,"id":179208,"user_name":"zhanyd","can_delete":false,"product_type":"c1","uid":1073845,"ip_address":"","ucode":"4C994EE512A3C4","user_header":"https://static001.geekbang.org/account/avatar/00/10/62/b5/4159fa05.jpg","comment_is_top":false,"comment_ctime":1581936402,"is_pvip":false,"replies":[{"id":"69575","content":"“整张表的数据其实就是存在主键索引中的”<br>是的<br><br>这个就是&quot;聚簇索引”的意思","user_name":"作者回复","user_name_real":"林晓斌","uid":"1264162","ctime":1581952814,"ip_address":"","comment_id":179208,"utype":1}],"discussion_count":4,"race_medal":0,"score":"113251086098","product_id":100020801,"comment_content":"第二遍刷，文中说：主键索引的叶子节点存的是整行数据。叶子节点存的难道不是指向行数据的指针吗？如果直接存的是整行数据，是不是可以理解，整张表的数据其实就是存在主键索引中的？","like_count":26,"discussions":[{"author":{"id":1264162,"avatar":"https://static001.geekbang.org/account/avatar/00/13/4a/22/2681d602.jpg","nickname":"林晓斌","note":"","ucode":"CDE42D44F26240","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":484144,"discussion_content":"“整张表的数据其实就是存在主键索引中的”\n是的\n\n这个就是&amp;quot;聚簇索引”的意思","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1581952814,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1073845,"avatar":"https://static001.geekbang.org/account/avatar/00/10/62/b5/4159fa05.jpg","nickname":"zhanyd","note":"","ucode":"4C994EE512A3C4","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":175845,"discussion_content":"结课这么久了，老师居然还回复，谢谢老师！","likes_number":7,"is_delete":false,"is_hidden":false,"ctime":1581998355,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":2351720,"avatar":"https://static001.geekbang.org/account/avatar/00/23/e2/68/ce547a12.jpg","nickname":"zjm1314","note":"","ucode":"63B0EAB7045054","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":340104,"discussion_content":"那一张表就一个主键索引","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1609903596,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1645665,"avatar":"https://static001.geekbang.org/account/avatar/00/19/1c/61/0ca1ca43.jpg","nickname":"蒋腾飞同学","note":"","ucode":"AF72D93DDAC536","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":250856,"discussion_content":"这个真相了！","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1588045083,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":41450,"user_name":"某、人","can_delete":false,"product_type":"c1","uid":1308784,"ip_address":"","ucode":"ADB42AA12A11C1","user_header":"https://static001.geekbang.org/account/avatar/00/13/f8/70/f3a33a14.jpg","comment_is_top":false,"comment_ctime":1542783926,"is_pvip":false,"replies":[{"id":"14948","content":"1. AHI不是hash索引的意思，这个结构是帮innodb 快速找到叶子结点，所以对于range 查询也有优化作用的<br><br>2.  不是，这样其实就已经是拿到结果了，不论是也就是说a in () 还是 “a=X or a=Y” 你说的这个过程就没有用上a的索引了。只是在拿到值以后做的判断<br><br>3. ","user_name":"作者回复","user_name_real":"林晓斌","uid":"1264162","ctime":1542825448,"ip_address":"","comment_id":41450,"utype":1}],"discussion_count":7,"race_medal":0,"score":"83147162550","product_id":100020801,"comment_content":"先回答老师的问题:<br>二级索引可以通过删除添加来消除索引的碎片化,而且开销不大。只会修改表的元数据,不会有重建表的操作<br>聚簇索引不适合用这种方式来重建。drop primary key只能用copy方式,这是极大的开销,而且不允许在线的DML操作<br>add primary key可以用inplace方式，效率相对copy高了不少。不过inplace也是会在内部重建表,但是不会生成redo和undo，这点就比copy效率高很多,允许在线DML(只会持有短暂的MDL锁)<br>可以采用alter table engine=innodb或者optimize table来重建表,也可以用导入导出的方式,不过效率相对更差<br>老师我有两个问题:<br>1.如果业务里只有很少的等值连接查询,是否可以把AHI关掉？<br>2.通过explain extend看到in会被转换为or。但是mysql里in是会先将()列表里面排序,然后在进行二分查找的方式去匹配是否满足,时间复杂度为O(logn).请问这里是in里面得值一个个取出来,然后再去索引的叶子节点上利用二分查找法去匹配该值？<br>or的时间复杂度为O(n),我理解的是根据or上的值去索引扫描到叶子节点得到该值,然后返回根节点继续扫描得到第二个值。如果按照我的理解那么or的效率应该比in高啊,请问老师是哪里出错了？<br>哈哈,感觉这68花得太值了。感谢老师，干货满满啊<br><br><br>","like_count":19,"discussions":[{"author":{"id":1264162,"avatar":"https://static001.geekbang.org/account/avatar/00/13/4a/22/2681d602.jpg","nickname":"林晓斌","note":"","ucode":"CDE42D44F26240","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":429805,"discussion_content":"1. AHI不是hash索引的意思，这个结构是帮innodb 快速找到叶子结点，所以对于range 查询也有优化作用的\n\n2.  不是，这样其实就已经是拿到结果了，不论是也就是说a in () 还是 “a=X or a=Y” 你说的这个过程就没有用上a的索引了。只是在拿到值以后做的判断\n\n3. ","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1542825448,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1204353,"avatar":"https://static001.geekbang.org/account/avatar/00/12/60/81/eaf6d0ac.jpg","nickname":"拉布拉多","note":"","ucode":"637A88D9F29F57","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":340854,"discussion_content":"drop primary key只能用copy方式？drop 怎么有copy？add primary key可以用inplace方式，效率相对copy高了不少？是先drop，然后再add primary key inplace ，有inplace 这个语法词写法吗？","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1610183133,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":1,"child_discussions":[{"author":{"id":1314800,"avatar":"https://static001.geekbang.org/account/avatar/00/14/0f/f0/37feaa1d.jpg","nickname":"马林","note":"","ucode":"38AA3E2EB1CC5F","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1204353,"avatar":"https://static001.geekbang.org/account/avatar/00/12/60/81/eaf6d0ac.jpg","nickname":"拉布拉多","note":"","ucode":"637A88D9F29F57","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":389738,"discussion_content":"应该是变更表时使用 online ddl的语法，alter table t add primary key, algorithm=inplace;","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1629419196,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":340854,"ip_address":""},"score":389738,"extra":""}]},{"author":{"id":1204353,"avatar":"https://static001.geekbang.org/account/avatar/00/12/60/81/eaf6d0ac.jpg","nickname":"拉布拉多","note":"","ucode":"637A88D9F29F57","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":340853,"discussion_content":"看了这么多，这个评论有点难。第一次被难住了，没有看懂","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1610182604,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1203293,"avatar":"https://static001.geekbang.org/account/avatar/00/12/5c/5d/974b033f.jpg","nickname":"陆老师","note":"","ucode":"0EA27C4755FF4A","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":41040,"discussion_content":"这还干活满满？你去看看掘金小册吧","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1572334070,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":2,"child_discussions":[{"author":{"id":1135528,"avatar":"https://static001.geekbang.org/account/avatar/00/11/53/a8/abc96f70.jpg","nickname":"return","note":"","ucode":"42B8A3380DF04B","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1203293,"avatar":"https://static001.geekbang.org/account/avatar/00/12/5c/5d/974b033f.jpg","nickname":"陆老师","note":"","ucode":"0EA27C4755FF4A","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":91957,"discussion_content":"什么掘金小册， 抄袭本专栏的？ 你牛逼你就去牛栏。","likes_number":9,"is_delete":false,"is_hidden":false,"ctime":1576851079,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":41040,"ip_address":""},"score":91957,"extra":""},{"author":{"id":1986739,"avatar":"https://static001.geekbang.org/account/avatar/00/1e/50/b3/9269cd59.jpg","nickname":"LWD","note":"","ucode":"DDA444DB113C01","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1203293,"avatar":"https://static001.geekbang.org/account/avatar/00/12/5c/5d/974b033f.jpg","nickname":"陆老师","note":"","ucode":"0EA27C4755FF4A","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":586964,"discussion_content":"mysql,知无不言","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1662631903,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":41040,"ip_address":"广东"},"score":586964,"extra":""}]}]},{"had_liked":false,"id":41336,"user_name":"路过","can_delete":false,"product_type":"c1","uid":1316401,"ip_address":"","ucode":"7152C19ED024CC","user_header":"https://static001.geekbang.org/account/avatar/00/14/16/31/ae8adf82.jpg","comment_is_top":false,"comment_ctime":1542766359,"is_pvip":false,"replies":[{"id":"14836","content":"1. 有这个索引带来的查询收益，大于维护索引的代价，就该建😄  对于可能变成大表的表，实际上如果不建索引会导致全表扫描，这个索引就是必须的。<br>2. 可以估算出来的，根据表的行数和索引的定义。<br>3.跟2一样。 如果要精确的，就要解数据文件，这个工具可以看看 https:&#47;&#47;github.com&#47;jeremycole&#47;innodb_diagrams<br>4. performance_schema.table_io_waits_summary_by_index_usage能看到一些信息<br>5. 这个问题没看明白","user_name":"作者回复","user_name_real":"林晓斌","uid":"1264162","ctime":1542778923,"ip_address":"","comment_id":41336,"utype":1}],"discussion_count":1,"race_medal":0,"score":"78852177687","product_id":100020801,"comment_content":"请老师解惑以下内容：<br>1、什么情况下创建索引才有意义？有哪些限制？比如字段长度<br>2、如何查看索引占用多少空间？<br>3、查看索引数的结构，比如多少个层，多少节点？<br>4、如何查看索引的利用率。比如我创建了一个索引，是否可以有记录这个索引被调用了多少次？<br>5、如何确定，即使该列上创建了索引也无法再调高搜索效率问题？面对这个问题，如何解决？<br>","like_count":18,"discussions":[{"author":{"id":1264162,"avatar":"https://static001.geekbang.org/account/avatar/00/13/4a/22/2681d602.jpg","nickname":"林晓斌","note":"","ucode":"CDE42D44F26240","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":429767,"discussion_content":"1. 有这个索引带来的查询收益，大于维护索引的代价，就该建😄  对于可能变成大表的表，实际上如果不建索引会导致全表扫描，这个索引就是必须的。\n2. 可以估算出来的，根据表的行数和索引的定义。\n3.跟2一样。 如果要精确的，就要解数据文件，这个工具可以看看 https://github.com/jeremycole/innodb_diagrams\n4. performance_schema.table_io_waits_summary_by_index_usage能看到一些信息\n5. 这个问题没看明白","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1542778923,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":41231,"user_name":"monkay","can_delete":false,"product_type":"c1","uid":1066182,"ip_address":"","ucode":"07C0BB8A47799A","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/pc41FOKAiabVaaKiawibEm7zglvnsYBnYeRiaSAElf9ciczovXmXmI0hOeR6U9RULFtMoqX5kobNttvwXCLsUM9Hbcg/132","comment_is_top":false,"comment_ctime":1542761587,"is_pvip":false,"replies":[{"id":"14860","content":"后面有同学答复你了😄","user_name":"作者回复","user_name_real":"林晓斌","uid":"1264162","ctime":1542781548,"ip_address":"","comment_id":41231,"utype":1}],"discussion_count":4,"race_medal":0,"score":"74557205619","product_id":100020801,"comment_content":"你可以想象一下一棵 100 万节点的平衡二叉树，树高 20。一次查询可能需要访问 20 个数据块。<br><br>这里有点不理解，为什么树高20就是20个数据块？","like_count":17,"discussions":[{"author":{"id":1264162,"avatar":"https://static001.geekbang.org/account/avatar/00/13/4a/22/2681d602.jpg","nickname":"林晓斌","note":"","ucode":"CDE42D44F26240","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":429737,"discussion_content":"后面有同学答复你了😄","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1542781548,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1308025,"avatar":"https://static001.geekbang.org/account/avatar/00/13/f5/79/e844617c.jpg","nickname":"tree","note":"","ucode":"AA7CA46DD3E88C","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":284411,"discussion_content":"AVL在外存的存储结构一般有两种：第一种是顺序存储结构（数组），第二种是链式存储结构（链表），这就导致了在逻辑上很近的节点（父子）在物理上可能很远，无法利用局部性，于是读出的数据块很有可能只有我们想要的一个节点，因此，AVL的I/O渐进复杂度跟树高（h）挂钩，为O（h）,所以树高20，其实I/O的渐进复杂度就为20。","likes_number":13,"is_delete":false,"is_hidden":false,"ctime":1592528980,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1006213,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/5a/85/abb7bfe3.jpg","nickname":"彪神经","note":"","ucode":"426E4A61D29313","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":309253,"discussion_content":"2^20 = 1048576","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1601226452,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1249400,"avatar":"https://static001.geekbang.org/account/avatar/00/13/10/78/29bd3f1e.jpg","nickname":"王子瑞Aliloke有事电联","note":"","ucode":"9ABE8E475E336B","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":329595,"discussion_content":"在这里看到了20年的同学，我也在","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1606410204,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":112392,"user_name":"鹿先生","can_delete":false,"product_type":"c1","uid":1147495,"ip_address":"","ucode":"496222D648BB98","user_header":"https://static001.geekbang.org/account/avatar/00/11/82/67/cc0e5b46.jpg","comment_is_top":false,"comment_ctime":1562728046,"is_pvip":false,"discussion_count":3,"race_medal":0,"score":"70282204782","product_id":100020801,"comment_content":"老师我想稍微补充下关于innodb中自增索引的插入问题<br>其实按照传统B+树的插入规则，即使是自增插入，当一个数据页满的时候，也是会引起页分裂的。但是innodb在这一块做了优化，即判断如果是自增插入且当前页已满的情况下，不改变原有页的结构，而是将新的数据放到一个新页中。<br>在innodb的实现中，为每个索引页面维护了一个上次插入的位置，以及上次的插入是递增&#47;递减的标识。根据这些信息，innodb能够判断出新插入到页面中的记录，是否仍旧满足递增&#47;递减的约束，若满足约束，则采用优化后的分裂策略；若不满足约束，则退回到传统的分裂策略。","like_count":16,"discussions":[{"author":{"id":1204353,"avatar":"https://static001.geekbang.org/account/avatar/00/12/60/81/eaf6d0ac.jpg","nickname":"拉布拉多","note":"","ucode":"637A88D9F29F57","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":340914,"discussion_content":"传统的分裂策略是什么？","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1610200335,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":1,"child_discussions":[{"author":{"id":1986739,"avatar":"https://static001.geekbang.org/account/avatar/00/1e/50/b3/9269cd59.jpg","nickname":"LWD","note":"","ucode":"DDA444DB113C01","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1204353,"avatar":"https://static001.geekbang.org/account/avatar/00/12/60/81/eaf6d0ac.jpg","nickname":"拉布拉多","note":"","ucode":"637A88D9F29F57","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":586965,"discussion_content":"55开","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1662632890,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":340914,"ip_address":"广东"},"score":586965,"extra":""}]},{"author":{"id":2221291,"avatar":"","nickname":"泡泡","note":"","ucode":"1407F2BF98BECB","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":337723,"discussion_content":"我就说MySQL咋自增就不用分裂了呢，之前做数据结构功课都是要的。原来是这样啊","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1609058144,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":63676,"user_name":"自由港","can_delete":false,"product_type":"c1","uid":1086779,"ip_address":"","ucode":"EA1AFDB9123747","user_header":"https://static001.geekbang.org/account/avatar/00/10/95/3b/a7c94a53.jpg","comment_is_top":false,"comment_ctime":1548462540,"is_pvip":false,"replies":[{"id":"23185","content":"会，特别不建议uuid做主键<br>","user_name":"作者回复","user_name_real":"林晓斌","uid":"1264162","ctime":1549270520,"ip_address":"","comment_id":63676,"utype":1}],"discussion_count":3,"race_medal":0,"score":"70267939276","product_id":100020801,"comment_content":"请问老师，在插入数据的时候，主键类型为字符串，ID为uuid的形式，插入时会导致分裂吗？","like_count":16,"discussions":[{"author":{"id":1264162,"avatar":"https://static001.geekbang.org/account/avatar/00/13/4a/22/2681d602.jpg","nickname":"林晓斌","note":"","ucode":"CDE42D44F26240","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":437679,"discussion_content":"会，特别不建议uuid做主键\n","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1549270520,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1500149,"avatar":"https://static001.geekbang.org/account/avatar/00/16/e3/f5/f076b407.jpg","nickname":"const","note":"","ucode":"258BA2B11ED1B2","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":394357,"discussion_content":"对1. 因为UUID一般为string类型，相对于整形，二级索引的叶子节点会变大，这样二级索引就会变得很大。2. UUID是无序的，每次插入时都会去找所在位置，造成页分裂。","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1631851283,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1798524,"avatar":"","nickname":"wclym","note":"","ucode":"BD99602F8E5725","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":532287,"discussion_content":"许多微服务类框架，默认推荐uuid类型，使用的是雪花算法","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1637567380,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"user_type\":1}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":56342,"user_name":"小豹子","can_delete":false,"product_type":"c1","uid":1346267,"ip_address":"","ucode":"972F3E6BF0FDEA","user_header":"https://static001.geekbang.org/account/avatar/00/14/8a/db/76ab84c6.jpg","comment_is_top":false,"comment_ctime":1546425231,"is_pvip":false,"replies":[{"id":"20280","content":"加主键就会重建整张表<br><br>","user_name":"作者回复","user_name_real":"林晓斌","uid":"1264162","ctime":1546425958,"ip_address":"","comment_id":56342,"utype":1}],"discussion_count":4,"race_medal":0,"score":"70265901967","product_id":100020801,"comment_content":"innodb的表是索引组织表，所有主键索引包含该行的所有数据，这个我能理解。但是有个问题，如果我新建一张表，不加任何约束，也就是没有主键。当插入一定量的数据库后，我再给一个字段加上主键，那么这个主键会包含一行所有的数据吗？","like_count":16,"discussions":[{"author":{"id":1264162,"avatar":"https://static001.geekbang.org/account/avatar/00/13/4a/22/2681d602.jpg","nickname":"林晓斌","note":"","ucode":"CDE42D44F26240","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":434995,"discussion_content":"加主键就会重建整张表\n\n","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1546425958,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1065351,"avatar":"https://static001.geekbang.org/account/avatar/00/10/41/87/d26efb2e.jpg","nickname":"SuperSnow","note":"","ucode":"84C89AA8083E6A","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":129764,"discussion_content":"而且，没有指定主键约束，InnoDB也会有一个默认主键rowId。","likes_number":2,"is_delete":false,"is_hidden":false,"ctime":1578736478,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1336634,"avatar":"https://static001.geekbang.org/account/avatar/00/14/65/3a/bc801fb2.jpg","nickname":"mqray","note":"","ucode":"15664507AD7033","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":300862,"discussion_content":"就相当于删除掉原有的主键索引 然后再添加新的主键","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1598283477,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":2708697,"avatar":"","nickname":"李海龙","note":"","ucode":"766E49D0AE1434","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":548890,"discussion_content":"没有建主键，会有默认的Rowid做主键，中途加主键，会重建整张表","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1643437239,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":41461,"user_name":"Gary","can_delete":false,"product_type":"c1","uid":1064566,"ip_address":"","ucode":"BD6BD6B9FEE6CE","user_header":"https://static001.geekbang.org/account/avatar/00/10/3e/76/f1f2e161.jpg","comment_is_top":false,"comment_ctime":1542787111,"is_pvip":false,"replies":[{"id":"14924","content":"分库分表可以用自增主键的，有的公司是用步长来控制，你这个是好问题，我加到答疑文章中","user_name":"作者回复","user_name_real":"林晓斌","uid":"1264162","ctime":1542801693,"ip_address":"","comment_id":41461,"utype":1}],"discussion_count":4,"race_medal":0,"score":"57377361959","product_id":100020801,"comment_content":"现在只是讲到了单表主键建索引的，分库的时候不能用到自增主键，这个索引怎么处理呢？","like_count":13,"discussions":[{"author":{"id":1264162,"avatar":"https://static001.geekbang.org/account/avatar/00/13/4a/22/2681d602.jpg","nickname":"林晓斌","note":"","ucode":"CDE42D44F26240","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":429811,"discussion_content":"分库分表可以用自增主键的，有的公司是用步长来控制，你这个是好问题，我加到答疑文章中","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1542801693,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":3004460,"avatar":"https://static001.geekbang.org/account/avatar/00/2d/d8/2c/89b9ce29.jpg","nickname":"oscar","note":"","ucode":"1C397FB2016332","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":574854,"discussion_content":"但这种方式可扩展性极差，一旦要扩容分片表数量，原表数据变动比较大，所以这种方式不太可取。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1654410265,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1500149,"avatar":"https://static001.geekbang.org/account/avatar/00/16/e3/f5/f076b407.jpg","nickname":"const","note":"","ucode":"258BA2B11ED1B2","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":394358,"discussion_content":"增加节点，会调整整个id生产的分布","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1631851387,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1334527,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/WuVCibYmuGqFLnfIrr0BmkdzHwkialB0DibJ0YnymNNO2Wicy76ZxSvjD66sPVsd9SjkicSS4Z2iadTeOn7zGfwh9sxg/132","nickname":"灵犀andy","note":"","ucode":"3C3C36B070676C","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":102528,"discussion_content":"用步长来控制，如果要增加节点的话 怎么处理？","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1577351838,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":41236,"user_name":"Justin","can_delete":false,"product_type":"c1","uid":1305601,"ip_address":"","ucode":"D49723FEA66731","user_header":"https://static001.geekbang.org/account/avatar/00/13/ec/01/978d54af.jpg","comment_is_top":false,"comment_ctime":1542761799,"is_pvip":false,"replies":[{"id":"14861","content":"就是遍历这个主键索引的意思。","user_name":"作者回复","user_name_real":"林晓斌","uid":"1264162","ctime":1542781595,"ip_address":"","comment_id":41236,"utype":1}],"discussion_count":3,"race_medal":0,"score":"57377336647","product_id":100020801,"comment_content":"有一个问题 如果磁盘中的主键索引已经存储了这个表的全部数据的话，那常说的没走索引是遍历整个B+树还是其他地方还有整个表的数据呢？","like_count":13,"discussions":[{"author":{"id":1264162,"avatar":"https://static001.geekbang.org/account/avatar/00/13/4a/22/2681d602.jpg","nickname":"林晓斌","note":"","ucode":"CDE42D44F26240","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":429740,"discussion_content":"就是遍历这个主键索引的意思。","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1542781595,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":1,"child_discussions":[{"author":{"id":1874999,"avatar":"https://static001.geekbang.org/account/avatar/00/1c/9c/37/253ea895.jpg","nickname":"我不是码农","note":"","ucode":"EB4BB711CC54B6","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1264162,"avatar":"https://static001.geekbang.org/account/avatar/00/13/4a/22/2681d602.jpg","nickname":"林晓斌","note":"","ucode":"CDE42D44F26240","race_medal":0,"user_type":2,"is_pvip":false},"discussion":{"id":548637,"discussion_content":"也就是遍历主键索引的叶子节点吧？非叶子节点就没什么用了","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1643288687,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":429740,"ip_address":""},"score":548637,"extra":""}]},{"author":{"id":2166073,"avatar":"https://thirdwx.qlogo.cn/mmopen/vi_32/k3YD3y3BzGDSdrwRJyJY4BXsNJibfM4uzOdDVKIAlFApR2FZCLg2ibrZtJ4vuahA3LHLW9GKzH5CMGqCDhWjhZqg/132","nickname":"戒酒的李白","note":"","ucode":"744E1A22761647","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":393499,"discussion_content":"全表扫描指的就是扫描整个主键索引","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1631457725,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":181847,"user_name":"while (1)等;","can_delete":false,"product_type":"c1","uid":1061991,"ip_address":"","ucode":"BAEC7258D65B69","user_header":"https://static001.geekbang.org/account/avatar/00/10/34/67/06a7f9be.jpg","comment_is_top":false,"comment_ctime":1582643955,"is_pvip":true,"replies":[{"id":"70448","content":"如果前缀是InnoDB， 是指同一个东西<br><br>","user_name":"作者回复","user_name_real":"林晓斌","uid":"1264162","ctime":1582685942,"ip_address":"","comment_id":181847,"utype":1}],"discussion_count":1,"race_medal":0,"score":"53122251507","product_id":100020801,"comment_content":"看完所有评论至少需要两个小时，看完评论后对两个概念不是很明白，数据块和数据页是同一个东西吗？16k的这个数据页和数据块有什么区别？","like_count":12,"discussions":[{"author":{"id":1264162,"avatar":"https://static001.geekbang.org/account/avatar/00/13/4a/22/2681d602.jpg","nickname":"林晓斌","note":"","ucode":"CDE42D44F26240","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":485142,"discussion_content":"如果前缀是InnoDB， 是指同一个东西\n\n","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1582685942,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":61309,"user_name":"Junzi","can_delete":false,"product_type":"c1","uid":1004612,"ip_address":"","ucode":"4AC663769C1873","user_header":"https://static001.geekbang.org/account/avatar/00/0f/54/44/4e541a86.jpg","comment_is_top":false,"comment_ctime":1547656196,"is_pvip":false,"replies":[{"id":"21822","content":"是的","user_name":"作者回复","user_name_real":"林晓斌","uid":"1264162","ctime":1547690304,"ip_address":"","comment_id":61309,"utype":1}],"discussion_count":1,"race_medal":0,"score":"53087263748","product_id":100020801,"comment_content":"当table T出现以下数据时: (300, 3) (400, 3)时，通个非主键索引3查到对应ID 有两个300和400，那是否要回表两次？","like_count":12,"discussions":[{"author":{"id":1264162,"avatar":"https://static001.geekbang.org/account/avatar/00/13/4a/22/2681d602.jpg","nickname":"林晓斌","note":"","ucode":"CDE42D44F26240","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":436828,"discussion_content":"是的","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1547690304,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":41891,"user_name":"蚂蚁内推+v","can_delete":false,"product_type":"c1","uid":1050508,"ip_address":"","ucode":"24B10AEE54B3FD","user_header":"https://static001.geekbang.org/account/avatar/00/10/07/8c/0d886dcc.jpg","comment_is_top":false,"comment_ctime":1542868260,"is_pvip":false,"replies":[{"id":"15018","content":"你的问题每次都这么有预见性，今晚0点见😄","user_name":"作者回复","user_name_real":"林晓斌","uid":"1264162","ctime":1542871596,"ip_address":"","comment_id":41891,"utype":1}],"discussion_count":1,"race_medal":0,"score":"53082475812","product_id":100020801,"comment_content":"丁老师，方便详细说下，如果是组合主键，底层机制和原理 和 普通索引一样吗？（包括组合主键和组合索引）麻烦老师解答下","like_count":12,"discussions":[{"author":{"id":1264162,"avatar":"https://static001.geekbang.org/account/avatar/00/13/4a/22/2681d602.jpg","nickname":"林晓斌","note":"","ucode":"CDE42D44F26240","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":429934,"discussion_content":"你的问题每次都这么有预见性，今晚0点见😄","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1542871596,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":41684,"user_name":"包包up","can_delete":false,"product_type":"c1","uid":1073495,"ip_address":"","ucode":"A6F51A62A8B362","user_header":"https://static001.geekbang.org/account/avatar/00/10/61/57/6f3c81dd.jpg","comment_is_top":false,"comment_ctime":1542825627,"is_pvip":false,"replies":[{"id":"15032","content":"B+树就是一种N叉树","user_name":"作者回复","user_name_real":"林晓斌","uid":"1264162","ctime":1542876680,"ip_address":"","comment_id":41684,"utype":1}],"discussion_count":1,"race_medal":0,"score":"53082433179","product_id":100020801,"comment_content":"InnoDB 的索引模型的第一段提到的B+树 在前文没有提到呀？","like_count":12,"discussions":[{"author":{"id":1264162,"avatar":"https://static001.geekbang.org/account/avatar/00/13/4a/22/2681d602.jpg","nickname":"林晓斌","note":"","ucode":"CDE42D44F26240","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":429877,"discussion_content":"B+树就是一种N叉树","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1542876680,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":70879,"user_name":"长脖子树","can_delete":false,"product_type":"c1","uid":1182802,"ip_address":"","ucode":"D9090EF67EEB1B","user_header":"https://static001.geekbang.org/account/avatar/00/12/0c/52/f25c3636.jpg","comment_is_top":false,"comment_ctime":1551200448,"is_pvip":true,"replies":[{"id":"25698","content":"整型4个字节，加上辅助数据差不多每个key占13字节，16k&#47;13","user_name":"作者回复","user_name_real":"林晓斌","uid":"1264162","ctime":1551375512,"ip_address":"","comment_id":70879,"utype":1}],"discussion_count":3,"race_medal":0,"score":"40205906112","product_id":100020801,"comment_content":"非叶子节点存储大约 1200个, 我在网上找了很长时间, 这篇 https:&#47;&#47;blog.jcole.us&#47;2013&#47;01&#47;10&#47;btree-index-structures-in-innodb&#47; 应该最接近, 上面说的是在主键为4个字节 int 类型的情况下, 非叶子节点可以存储 1204 个键, 但我仍然无法得知 这个 1204 是怎么的出来的, 老师可以解答下么","like_count":9,"discussions":[{"author":{"id":1264162,"avatar":"https://static001.geekbang.org/account/avatar/00/13/4a/22/2681d602.jpg","nickname":"林晓斌","note":"","ucode":"CDE42D44F26240","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":440882,"discussion_content":"整型4个字节，加上辅助数据差不多每个key占13字节，16k/13","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1551375512,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1301833,"avatar":"https://static001.geekbang.org/account/avatar/00/13/dd/49/2a24dc77.jpg","nickname":"石晓博²⁰¹9","note":"","ucode":"38F92A9275E4B4","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":5370,"discussion_content":"老师，辅助数据包括什么","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1566208812,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":1,"child_discussions":[{"author":{"id":1065351,"avatar":"https://static001.geekbang.org/account/avatar/00/10/41/87/d26efb2e.jpg","nickname":"SuperSnow","note":"","ucode":"84C89AA8083E6A","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1301833,"avatar":"https://static001.geekbang.org/account/avatar/00/13/dd/49/2a24dc77.jpg","nickname":"石晓博²⁰¹9","note":"","ucode":"38F92A9275E4B4","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":129763,"discussion_content":"叉树中非叶子节点存放的是索引信息，索引包含key和point指针。point指针固定为6个字节，假如key为10个字节，那么单个索引就是16个字节。如果B+树中页大小为16K，那么一个页就可以存储1024个索引，此时N就是1024。故，如果将key减小一点，比如变成13B，那1200应该差不多。打比方嘛，理解就好。","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1578736340,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":5370,"ip_address":""},"score":129763,"extra":""}]}]},{"had_liked":false,"id":41454,"user_name":"梦康","can_delete":false,"product_type":"c1","uid":1069512,"ip_address":"","ucode":"8935F3C329C58E","user_header":"https://static001.geekbang.org/account/avatar/00/10/51/c8/83852d5a.jpg","comment_is_top":false,"comment_ctime":1542785655,"is_pvip":false,"replies":[{"id":"14949","content":"挺好的","user_name":"作者回复","user_name_real":"林晓斌","uid":"1264162","ctime":1542825610,"ip_address":"","comment_id":41454,"utype":1}],"discussion_count":1,"race_medal":0,"score":"40197491319","product_id":100020801,"comment_content":"前面有人说“希望老师讲一个联合索引在B+树中的存储方式”<br>--------------------<br>老师看我自己总结的这个图 ok 吗<br>https:&#47;&#47;mengkang.net&#47;1302.html","like_count":9,"discussions":[{"author":{"id":1264162,"avatar":"https://static001.geekbang.org/account/avatar/00/13/4a/22/2681d602.jpg","nickname":"林晓斌","note":"","ucode":"CDE42D44F26240","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":429806,"discussion_content":"挺好的","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1542825610,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":41317,"user_name":"大王拍我去巡山","can_delete":false,"product_type":"c1","uid":1067406,"ip_address":"","ucode":"94A1EE540BC9CA","user_header":"https://static001.geekbang.org/account/avatar/00/10/49/8e/e6eaf434.jpg","comment_is_top":false,"comment_ctime":1542765232,"is_pvip":true,"replies":[{"id":"14850","content":"哎呀，下一篇就是😄","user_name":"作者回复","user_name_real":"林晓斌","uid":"1264162","ctime":1542780165,"ip_address":"","comment_id":41317,"utype":1}],"discussion_count":1,"race_medal":0,"score":"35902503600","product_id":100020801,"comment_content":"希望老师讲一个联合索引在B+树中的存储方式","like_count":8,"discussions":[{"author":{"id":1264162,"avatar":"https://static001.geekbang.org/account/avatar/00/13/4a/22/2681d602.jpg","nickname":"林晓斌","note":"","ucode":"CDE42D44F26240","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":429762,"discussion_content":"哎呀，下一篇就是😄","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1542780165,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":175140,"user_name":"mgs2002","can_delete":false,"product_type":"c1","uid":1812970,"ip_address":"","ucode":"F5931108BD509B","user_header":"https://static001.geekbang.org/account/avatar/00/1b/a9/ea/5bfce6c5.jpg","comment_is_top":false,"comment_ctime":1580568649,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"31645339721","product_id":100020801,"comment_content":"简单总结<br>1. 索引设计常见模式有hash表，有序数组，搜索树。<br>2. hash表类似于Java的hashmap,K-V存储结构，就是将key通过hash函数算出具体的位置后存放，有可能出现hash碰撞（多个key的hash值一致），出现这种情况用链表法解决。这种方法只能用于等值查询，如果有范围查询则必须遍历范围数据，效率低。<br>3. 有序数组类似于Java的ArrayList。等值和范围查询效率都很高，缺点是添加&#47;删除数据需移动整个数组开销比较大。<br>4. 搜索树有二叉树和多叉树。有根节点和子节点，二叉树的父节点下面有2个子节点，其中左儿子节点小于父节点，右儿子节点大于父节点。多叉树就是父节点下面有多个子节点，每个子节点依次递增的顺序排列。<br>5. 二叉树搜索效率最高，但是数据库都是使用多叉树设计。原因是索引不止在内存，还要写到磁盘上面，如果数据库的数据量大，那么二叉树的树就会比较高，那么查询数据寻址的次数就会比较多，访问磁盘次数也也比较多，那么效率就比较低。而多叉树由于子节点比较多，那么每个子节点数据存储肯定比二叉树多，树高也比二叉树矮，数据寻址次数比二叉树低得多，所有效率有优势。<br>6. MySQL的innoDb引擎就是采用多叉树设计的（B+树）。每一个索引在 InnoDB 里面对应一棵 B+ 树。<br>7. 索引有两种主键索引（聚簇索引）和非主键索引（二级索引）。其中主键索引存储的是具体的数据，二级索引存储的是索引行和主键的值，所以二级索引查询会多一次查询主键值（回表），然后通过主键值查询数据。<br>8. 尽量使用int或者bigint类型自增类型的字段作为主键，因为递增主键每次增加数据都是追加操作，不会挪动其他叶子节点，不会产生叶子节点分裂的情况，而且整数类型占用空间也比其他类型字段低。主键长度越小，普通索引的叶子节点就越小，普通索引占用的空间也就越小。<br>9. 业务字段做主键场景：表里只有一个索引而且该索引必须为唯一索引，这就是典型的K-V场景。由于没有其他索引，所以也就不用考虑其他索引的叶子节点大小的问题。<br>课后思考题<br>普通索引重建方式没问题。因为无论是drop还是add索引都会重建表，所以如果这两个语句连续执行的话前一个语句重建表的操作就重复执行了，可以用这个语句代替 : alter table T engine=InnoDB。","like_count":7},{"had_liked":false,"id":155975,"user_name":"秦穆之","can_delete":false,"product_type":"c1","uid":1489177,"ip_address":"","ucode":"709C49BFCBB776","user_header":"https://static001.geekbang.org/account/avatar/00/16/b9/19/f4ef2c9a.jpg","comment_is_top":false,"comment_ctime":1574786171,"is_pvip":false,"replies":[{"id":"59958","content":"1.  对的，如果需要回表，就是一个次次回；<br>2. 会。一个页里的数据行，如果被删得太多（空出来的多），有可能跟隔壁的数据页做合并；<br>3. 一页16k，可能存了多个行数据","user_name":"作者回复","user_name_real":"林晓斌","uid":"1264162","ctime":1574828607,"ip_address":"","comment_id":155975,"utype":1}],"discussion_count":3,"race_medal":0,"score":"31639557243","product_id":100020801,"comment_content":"有三个问题想问下老师：<br>第一，用普通索引做范围查询的时候，是不是每个数据点都要做一次回表。比如查出来10个数据，要做10次回表。<br>第二，主键在新增的时候不会触发页分裂，而是进行追加操作。那么当删除主键时，会不会存在页合并的情况。如果不会，为什么？<br>第三，B+Tree 的叶子结点存储的是一页数据，那么这一页数据的概念是什么。一页数据中行数据是以哪一种数据结构组合起来的。","like_count":7,"discussions":[{"author":{"id":1264162,"avatar":"https://static001.geekbang.org/account/avatar/00/13/4a/22/2681d602.jpg","nickname":"林晓斌","note":"","ucode":"CDE42D44F26240","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":475944,"discussion_content":"1.  对的，如果需要回表，就是一个次次回；\n2. 会。一个页里的数据行，如果被删得太多（空出来的多），有可能跟隔壁的数据页做合并；\n3. 一页16k，可能存了多个行数据","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1574828607,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1722041,"avatar":"https://static001.geekbang.org/account/avatar/00/1a/46/b9/834d003b.jpg","nickname":"啦啦啦","note":"","ucode":"6A31CDDA7FD3F6","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":276142,"discussion_content":"3. 行数据是以有序数组的形式组织在一起，通过二分查找的找到所需行","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1590828187,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":1,"child_discussions":[{"author":{"id":1489177,"avatar":"https://static001.geekbang.org/account/avatar/00/16/b9/19/f4ef2c9a.jpg","nickname":"秦穆之","note":"","ucode":"709C49BFCBB776","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1722041,"avatar":"https://static001.geekbang.org/account/avatar/00/1a/46/b9/834d003b.jpg","nickname":"啦啦啦","note":"","ucode":"6A31CDDA7FD3F6","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":277106,"discussion_content":"嗯嗯，对的","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1591001722,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":276142,"ip_address":""},"score":277106,"extra":""}]}]},{"had_liked":false,"id":66260,"user_name":"窗外","can_delete":false,"product_type":"c1","uid":1311172,"ip_address":"","ucode":"1E8F2D9439E7F3","user_header":"https://static001.geekbang.org/account/avatar/00/14/01/c4/21c2cde4.jpg","comment_is_top":false,"comment_ctime":1549898839,"is_pvip":false,"replies":[{"id":"25112","content":"1. 没有😅<br>2. 唯一索引是马上，普通索引如果用上change buffer，就算是“事后”<br>3. 加主键都快不了。。都要重建表","user_name":"作者回复","user_name_real":"林晓斌","uid":"1264162","ctime":1551096607,"ip_address":"","comment_id":66260,"utype":1}],"discussion_count":1,"race_medal":0,"score":"31614669911","product_id":100020801,"comment_content":"老师，您好，有几个问题还请解惑<br>1. 如果 ibdata1 因为 undo log 而过大，想释放其空间，在不重启的情况下有什么好的方法呢？<br>2. 当插入数据时，会维护该表所有主键、索引的 B+tree，这是在插入的同时维护，还是插入数据后再维护？<br>3. 线上环境如何快速给一个大表加主键？","like_count":7,"discussions":[{"author":{"id":1264162,"avatar":"https://static001.geekbang.org/account/avatar/00/13/4a/22/2681d602.jpg","nickname":"林晓斌","note":"","ucode":"CDE42D44F26240","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":438765,"discussion_content":"1. 没有😅\n2. 唯一索引是马上，普通索引如果用上change buffer，就算是“事后”\n3. 加主键都快不了。。都要重建表","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1551096607,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":56314,"user_name":"Enterprize","can_delete":false,"product_type":"c1","uid":1215130,"ip_address":"","ucode":"3C120E9023B6C5","user_header":"https://static001.geekbang.org/account/avatar/00/12/8a/9a/7270d764.jpg","comment_is_top":false,"comment_ctime":1546420153,"is_pvip":false,"replies":[{"id":"20260","content":"对，多列","user_name":"作者回复","user_name_real":"林晓斌","uid":"1264162","ctime":1546421909,"ip_address":"","comment_id":56314,"utype":1}],"discussion_count":1,"race_medal":0,"score":"31611191225","product_id":100020801,"comment_content":"如果把多个列联合起来搞成主键索引，那么二级索引里包含的主键是什么样的呢，也是多列？","like_count":7,"discussions":[{"author":{"id":1264162,"avatar":"https://static001.geekbang.org/account/avatar/00/13/4a/22/2681d602.jpg","nickname":"林晓斌","note":"","ucode":"CDE42D44F26240","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":434983,"discussion_content":"对，多列","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1546421909,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":41785,"user_name":"Hans","can_delete":false,"product_type":"c1","uid":1155198,"ip_address":"","ucode":"813C7767CC5E6F","user_header":"https://static001.geekbang.org/account/avatar/00/11/a0/7e/d6dbaf51.jpg","comment_is_top":false,"comment_ctime":1542851240,"is_pvip":false,"discussion_count":1,"race_medal":0,"score":"31607622312","product_id":100020801,"comment_content":"我觉得应该首先回答为什么要重建索引？<br>根据老师文中所述，B+树的高度越低性能就会越好，当插入数据的时候，很有可能会产生页分裂，存储空间利用率降低，而且随着数据越来越多，树的高度也会增加；当删除数据的时候也会产生碎片空间，这个时候就需要通过重建索引<br>来对数据页进行重新组装减少碎片空间，降低索引树的高度。思考题的做法是先删除索引，再去创建索引，这个过程肯定是比较耗时的，正确的做法应该是基于现有的索引重新进行组装。","like_count":7,"discussions":[{"author":{"id":1102381,"avatar":"https://static001.geekbang.org/account/avatar/00/10/d2/2d/36aa6d82.jpg","nickname":"大雄","note":"","ucode":"C7F9B35BB37269","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":384394,"discussion_content":"重新组装跟重建是一个道理啊，删掉重建嘛不就是","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1626565484,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":41253,"user_name":"patch_bug","can_delete":false,"product_type":"c1","uid":1062157,"ip_address":"","ucode":"80F1B58B7E1AF0","user_header":"https://static001.geekbang.org/account/avatar/00/10/35/0d/132de214.jpg","comment_is_top":false,"comment_ctime":1542762749,"is_pvip":false,"replies":[{"id":"14858","content":"内存是一大片buffer , 内存的数据内容跟磁盘一样的","user_name":"作者回复","user_name_real":"林晓斌","uid":"1264162","ctime":1542781382,"ip_address":"","comment_id":41253,"utype":1}],"discussion_count":1,"race_medal":0,"score":"31607533821","product_id":100020801,"comment_content":"索引本身在mysql里又是用什么数据结构管理的，内存里会有副本吗？","like_count":7,"discussions":[{"author":{"id":1264162,"avatar":"https://static001.geekbang.org/account/avatar/00/13/4a/22/2681d602.jpg","nickname":"林晓斌","note":"","ucode":"CDE42D44F26240","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":429745,"discussion_content":"内存是一大片buffer , 内存的数据内容跟磁盘一样的","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1542781382,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":41168,"user_name":"北天魔狼","can_delete":false,"product_type":"c1","uid":1188144,"ip_address":"","ucode":"C22623ECEB8DBA","user_header":"https://static001.geekbang.org/account/avatar/00/12/21/30/8ecce1e1.jpg","comment_is_top":false,"comment_ctime":1542754022,"is_pvip":true,"discussion_count":0,"race_medal":0,"score":"31607525094","product_id":100020801,"comment_content":"这一篇干货有点多，得小本子记下来","like_count":7},{"had_liked":false,"id":119650,"user_name":"Shane","can_delete":false,"product_type":"c1","uid":1291344,"ip_address":"","ucode":"322D0A883BAF16","user_header":"https://static001.geekbang.org/account/avatar/00/13/b4/50/c5dad2dc.jpg","comment_is_top":false,"comment_ctime":1564646025,"is_pvip":false,"replies":[{"id":"43924","content":"欢迎入坑😆<br><br>“那么也就是说一个数据块只能存放在大概1000多的数据块” <br>准确说是 一个数据页 放 1000多个记录<br><br>一个数据页大小是16k， 如果有的数据超过16k，就会放在多个不同的数据页上，查这样的记录是要访问多个数据页的","user_name":"作者回复","user_name_real":"林晓斌","uid":"1264162","ctime":1564673664,"ip_address":"","comment_id":119650,"utype":1}],"discussion_count":1,"race_medal":0,"score":"27334449801","product_id":100020801,"comment_content":"虽然课程对于之前的同学结束了，但是对我才刚开始。所以，我还是会评论一些。放出自己的疑惑。看到n叉树的n是由数据块大小决定的。既然，一般情况下是1000多，那么也就是说一个数据块只能存放在大概1000多的数据块？<br>还在想另外一个问题？如何保证整个节点刚好在一个数据快上面，但是刚好分布在不同的数据块上面，那岂不是还是要查询两次？","like_count":6,"discussions":[{"author":{"id":1264162,"avatar":"https://static001.geekbang.org/account/avatar/00/13/4a/22/2681d602.jpg","nickname":"林晓斌","note":"","ucode":"CDE42D44F26240","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":460997,"discussion_content":"欢迎入坑😆\n\n“那么也就是说一个数据块只能存放在大概1000多的数据块” \n准确说是 一个数据页 放 1000多个记录\n\n一个数据页大小是16k， 如果有的数据超过16k，就会放在多个不同的数据页上，查这样的记录是要访问多个数据页的","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1564673664,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":116961,"user_name":"若水","can_delete":false,"product_type":"c1","uid":1066925,"ip_address":"","ucode":"7574411163BBF9","user_header":"https://static001.geekbang.org/account/avatar/00/10/47/ad/f683df31.jpg","comment_is_top":false,"comment_ctime":1563947480,"is_pvip":false,"discussion_count":4,"race_medal":0,"score":"27333751256","product_id":100020801,"comment_content":"老师有个问题请教一下:<br>老师在回答留言区“索引结点中的指针只能查询到数据页page，page内部如何查询具体行行”这个问题时提到page内部是一个有序数组，通过二分法查找。<br>那么既然是一个有序数组，page内部插入记录数据时，为了保证有序，也有可能部分记录出现物理上的移动。但是老师在讲索性维护的时候提到插入一条400的记录，是逻辑上的移动。但是有序数组插入应该是要进行物理移动。如果是逻辑上移动，就需要另外一个数据结构来记录这种逻辑关系和实际的物理关系，那这个应该是一个链表。","like_count":6,"discussions":[{"author":{"id":1392326,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/7KvTibLByic8Eht03jsera25gTIoJEKnajulAVyRibaFic34rNjCSd3DBpjwWInJ72gBMuo1RNNoFdiay0PUSy8971Q/132","nickname":"hahahhh","note":"","ucode":"ED94DDF526F94D","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":292227,"discussion_content":"其实，就是对页内的记录，加了个查找目录；如果记录被移动到其他页了，这个查找目录中就要删掉该记录。","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1595147444,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1970443,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTIx1V1QAxC4NHaxYZGyuibBN8lcURJWc5nrnO4yic1kxnDemYV2FJGialf47kYX9qtDnZZOfe1SJeLicg/132","nickname":"lleft","note":"","ucode":"D573EB509455AE","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":369237,"discussion_content":"不需要移动，应该改下指针就可以了","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1618983245,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1065351,"avatar":"https://static001.geekbang.org/account/avatar/00/10/41/87/d26efb2e.jpg","nickname":"SuperSnow","note":"","ucode":"84C89AA8083E6A","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":129810,"discussion_content":"应该是吧，那个逻辑上的移动应该是指向400的地址数组变动吧。要不就是口误。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1578740106,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1334527,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/WuVCibYmuGqFLnfIrr0BmkdzHwkialB0DibJ0YnymNNO2Wicy76ZxSvjD66sPVsd9SjkicSS4Z2iadTeOn7zGfwh9sxg/132","nickname":"灵犀andy","note":"","ucode":"3C3C36B070676C","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":102543,"discussion_content":"你的观点很新颖啊","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1577352625,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":51738,"user_name":"吕","can_delete":false,"product_type":"c1","uid":1210890,"ip_address":"","ucode":"8F08E2CB81C4C3","user_header":"https://static001.geekbang.org/account/avatar/00/12/7a/0a/0ce5c232.jpg","comment_is_top":false,"comment_ctime":1545230414,"is_pvip":false,"replies":[{"id":"18790","content":"有多个叶子节点的。每个叶子节点是一个数据页，每个数据页16K，里面是放多个值的","user_name":"作者回复","user_name_real":"林晓斌","uid":"1264162","ctime":1545271479,"ip_address":"","comment_id":51738,"utype":1}],"discussion_count":1,"race_medal":0,"score":"27315034190","product_id":100020801,"comment_content":"非主键索引的叶子节点内容是主键的值。在 InnoDB 里，非主键索引也被称为二级索引（secondary index）。我看图上一个非主键索引只有一个叶子节点，实际上应该会有多个叶子节点吧，内容是主键的值吧","like_count":6,"discussions":[{"author":{"id":1264162,"avatar":"https://static001.geekbang.org/account/avatar/00/13/4a/22/2681d602.jpg","nickname":"林晓斌","note":"","ucode":"CDE42D44F26240","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":433606,"discussion_content":"有多个叶子节点的。每个叶子节点是一个数据页，每个数据页16K，里面是放多个值的","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1545271479,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":156185,"user_name":"James","can_delete":false,"product_type":"c1","uid":1134861,"ip_address":"","ucode":"48B0F2A334D1C1","user_header":"https://static001.geekbang.org/account/avatar/00/11/51/0d/fc1652fe.jpg","comment_is_top":false,"comment_ctime":1574829925,"is_pvip":false,"replies":[{"id":"60004","content":"原理先行，实践验证😆","user_name":"作者回复","user_name_real":"林晓斌","uid":"1264162","ctime":1574843308,"ip_address":"","comment_id":156185,"utype":1}],"discussion_count":1,"race_medal":0,"score":"23049666405","product_id":100020801,"comment_content":"这句话真的好。<br>那么多数据库学不完的。<br>唯独不变的就是哪个适合哪个场景。<br><br><br>数据库底层存储的核心就是基于这些数据模型的。每碰到一个新数据库，我们需要先关注它的数据模型，这样才能从理论上分析出这个数据库的适用场景","like_count":5,"discussions":[{"author":{"id":1264162,"avatar":"https://static001.geekbang.org/account/avatar/00/13/4a/22/2681d602.jpg","nickname":"林晓斌","note":"","ucode":"CDE42D44F26240","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":476023,"discussion_content":"原理先行，实践验证😆","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1574843308,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":154840,"user_name":"pocher","can_delete":false,"product_type":"c1","uid":1696181,"ip_address":"","ucode":"FB6D297B84A6EB","user_header":"https://static001.geekbang.org/account/avatar/00/19/e1/b5/6d9d6861.jpg","comment_is_top":false,"comment_ctime":1574577694,"is_pvip":false,"replies":[{"id":"59456","content":"删除主键的时候其实是重建整张表，<br>这时候因为新的定义里面没有主键，所以系统会默认给一个ROW_ID","user_name":"作者回复","user_name_real":"林晓斌","uid":"1264162","ctime":1574588321,"ip_address":"","comment_id":154840,"utype":1}],"discussion_count":1,"race_medal":0,"score":"23049414174","product_id":100020801,"comment_content":"如果删除了一张表的主键，是不是会自动生成一个默认的ROWID主键？","like_count":5,"discussions":[{"author":{"id":1264162,"avatar":"https://static001.geekbang.org/account/avatar/00/13/4a/22/2681d602.jpg","nickname":"林晓斌","note":"","ucode":"CDE42D44F26240","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":475594,"discussion_content":"删除主键的时候其实是重建整张表，\n这时候因为新的定义里面没有主键，所以系统会默认给一个ROW_ID","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1574588321,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":110000,"user_name":"李荣凯","can_delete":false,"product_type":"c1","uid":1520177,"ip_address":"","ucode":"D7567E80F800E7","user_header":"https://static001.geekbang.org/account/avatar/00/17/32/31/b6770a2d.jpg","comment_is_top":false,"comment_ctime":1562147789,"is_pvip":false,"discussion_count":9,"race_medal":0,"score":"23036984269","product_id":100020801,"comment_content":"请教一下各位大佬，老师文中的数据页是一个怎样的概念？","like_count":5,"discussions":[{"author":{"id":1065351,"avatar":"https://static001.geekbang.org/account/avatar/00/10/41/87/d26efb2e.jpg","nickname":"SuperSnow","note":"","ucode":"84C89AA8083E6A","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":129773,"discussion_content":"应该是组织数据行的一种逻辑单位吧，应该是数据块（页）之类，通过指针指向符合查询条件的块，然后在块中进行二分法进行数据查找符合的数据。","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1578737152,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1059952,"avatar":"https://static001.geekbang.org/account/avatar/00/10/2c/70/02b627a6.jpg","nickname":"coder","note":"","ucode":"F70511D614B9F4","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":1226,"discussion_content":"我也有这样的问题，到底什么是数据页？","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1562418734,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1099170,"avatar":"https://static001.geekbang.org/account/avatar/00/10/c5/a2/4ece341b.jpg","nickname":"Ivan.Qi","note":"","ucode":"36F46A4D1F0EAA","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":411415,"discussion_content":"https://blog.csdn.net/cy973071263/article/details/104512020","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1635923919,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":2312368,"avatar":"https://static001.geekbang.org/account/avatar/00/23/48/b0/49a591c2.jpg","nickname":"雾林","note":"","ucode":"1DD4B1E1676388","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":343421,"discussion_content":"我觉得就是一个叶子节点\n","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1611040527,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1006213,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/5a/85/abb7bfe3.jpg","nickname":"彪神经","note":"","ucode":"426E4A61D29313","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":309254,"discussion_content":"可以理解为一种逻辑上的存储单元（看下操作系统中关于内存分页的部分）","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1601226617,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1155646,"avatar":"https://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTKotsBr2icbYNYlRSlicGUD1H7lulSTQUAiclsEz9gnG5kCW9qeDwdYtlRMXic3V6sj9UrfKLPJnQojag/132","nickname":"ppd0705","note":"","ucode":"EB63D4E3FD1E9A","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":295342,"discussion_content":"可以看下这篇https://www.cnblogs.com/bdsir/p/8745553.html","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1596170591,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1237583,"avatar":"https://static001.geekbang.org/account/avatar/00/12/e2/4f/df01f65e.jpg","nickname":"Danfēng","note":"","ucode":"E5B3451F1D0441","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":280725,"discussion_content":"同问","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1591606805,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1129646,"avatar":"https://static001.geekbang.org/account/avatar/00/11/3c/ae/9f5614f1.jpg","nickname":"长风破浪","note":"","ucode":"33F94A773C6E71","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":221921,"discussion_content":"根据磁盘设定的，一个页默认16k","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1586080931,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1397631,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTKVUskibDnhMt5MCIJ8227HWkeg2wEEyewps8GuWhWaY5fy7Ya56bu2ktMlxdla3K29Wqia9efCkWaQ/132","nickname":"衬衫的价格是19美元","note":"","ucode":"655F925451F772","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":1274,"discussion_content":"就是一个非叶子节点吧","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1562494508,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":102953,"user_name":"佑儿","can_delete":false,"product_type":"c1","uid":1226196,"ip_address":"","ucode":"0629888E7A5E16","user_header":"https://static001.geekbang.org/account/avatar/00/12/b5/d4/3bd5b77b.jpg","comment_is_top":false,"comment_ctime":1560334535,"is_pvip":false,"replies":[{"id":"37464","content":"你删除主键索引，没有删除普通索引，普通索引肯定是还在的；<br><br>一般说普通索引失效，是只sql执行的时候，用不上这个索引？","user_name":"作者回复","user_name_real":"林晓斌","uid":"1264162","ctime":1560473098,"ip_address":"","comment_id":102953,"utype":1}],"discussion_count":3,"race_medal":0,"score":"23035171015","product_id":100020801,"comment_content":"老师，你好，为什么我执行删除主键索引后，使用show index from table显示普通索引还存在，那所谓的普通索引失效是指什么？？<br>","like_count":5,"discussions":[{"author":{"id":1264162,"avatar":"https://static001.geekbang.org/account/avatar/00/13/4a/22/2681d602.jpg","nickname":"林晓斌","note":"","ucode":"CDE42D44F26240","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":453663,"discussion_content":"你删除主键索引，没有删除普通索引，普通索引肯定是还在的；\n\n一般说普通索引失效，是只sql执行的时候，用不上这个索引？","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1560473098,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1255264,"avatar":"https://static001.geekbang.org/account/avatar/00/13/27/60/7510c6c5.jpg","nickname":"鹏😎","note":"","ucode":"B691572430BB9D","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":266763,"discussion_content":"老师后面这句话“用不上这个索引？”为啥最后是个问号而不是感叹号，是否不太确定啊","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1589553978,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1911661,"avatar":"https://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTLDOKcx20Xxmu5j8WxiafoYvo3bIAFDg8OeicRic1icD597QuMC9O8FyV2Al9RxNfVZXK0gkGUx6M3CVQ/132","nickname":"多年以后","note":"","ucode":"D70E7A1ABE0F39","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":553701,"discussion_content":"那主键索引删除了，二级索引里面保存的主键的值 是不是也没用了？还是说会重建","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1646034871,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":90797,"user_name":"宸羽","can_delete":false,"product_type":"c1","uid":1518517,"ip_address":"","ucode":"4AEEA381C2B667","user_header":"https://static001.geekbang.org/account/avatar/00/17/2b/b5/d6e21da0.jpg","comment_is_top":false,"comment_ctime":1556660989,"is_pvip":false,"replies":[{"id":"32648","content":"阿里的同学应该不屑于盗这么简单的图吧😆<br><br>看看是不是看错了😅","user_name":"作者回复","user_name_real":"林晓斌","uid":"1264162","ctime":1556850794,"ip_address":"","comment_id":90797,"utype":1}],"discussion_count":6,"race_medal":0,"score":"23031497469","product_id":100020801,"comment_content":"这个怎么跟我们内部的文档一模一样啊！图都一样。阿里的","like_count":5,"discussions":[{"author":{"id":1264162,"avatar":"https://static001.geekbang.org/account/avatar/00/13/4a/22/2681d602.jpg","nickname":"林晓斌","note":"","ucode":"CDE42D44F26240","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":448659,"discussion_content":"阿里的同学应该不屑于盗这么简单的图吧😆\n\n看看是不是看错了😅","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1556850794,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1135990,"avatar":"https://static001.geekbang.org/account/avatar/00/11/55/76/a55871ab.jpg","nickname":"孙庆良","note":"","ucode":"CA05C4CFEFB0F9","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":309759,"discussion_content":"老师在这里发布的文章肯定是自己原创的，那就说明是阿里的同学拿来主义了","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1601432701,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1179312,"avatar":"https://static001.geekbang.org/account/avatar/00/11/fe/b0/260f41f0.jpg","nickname":"loris","note":"","ucode":"00842745CF4B31","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":40839,"discussion_content":"应该是阿里的同学拿来主义了","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1572274809,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1649057,"avatar":"https://static001.geekbang.org/account/avatar/00/19/29/a1/41607383.jpg","nickname":"hello","note":"","ucode":"4F42DAA5DB5C38","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":356862,"discussion_content":"别忘了老师是前阿里资深技术专家","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1615692412,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1237583,"avatar":"https://static001.geekbang.org/account/avatar/00/12/e2/4f/df01f65e.jpg","nickname":"Danfēng","note":"","ucode":"E5B3451F1D0441","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":280730,"discussion_content":"去阿里还有这么多东西可以学习吗？爱了爱了","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1591607132,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1065351,"avatar":"https://static001.geekbang.org/account/avatar/00/10/41/87/d26efb2e.jpg","nickname":"SuperSnow","note":"","ucode":"84C89AA8083E6A","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":129836,"discussion_content":"思路都是一样的，只是画法差不多。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1578741150,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":71448,"user_name":"charles","can_delete":false,"product_type":"c1","uid":1270127,"ip_address":"","ucode":"936B89B442DB7B","user_header":"https://static001.geekbang.org/account/avatar/00/13/61/6f/f072c3d1.jpg","comment_is_top":false,"comment_ctime":1551344350,"is_pvip":false,"replies":[{"id":"25548","content":"没问题的，一个是 (k,id1), 一个是(k,id2)，这是不同的值😀","user_name":"作者回复","user_name_real":"林晓斌","uid":"1264162","ctime":1551349658,"ip_address":"","comment_id":71448,"utype":1}],"discussion_count":1,"race_medal":0,"score":"23026180830","product_id":100020801,"comment_content":"对于T表来说，如果有两个K相同的值，也就是在K树中有两个相同值指向不同的id，不会冲突吗。那对于K字段的索引应该怎么维护？","like_count":5,"discussions":[{"author":{"id":1264162,"avatar":"https://static001.geekbang.org/account/avatar/00/13/4a/22/2681d602.jpg","nickname":"林晓斌","note":"","ucode":"CDE42D44F26240","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":441155,"discussion_content":"没问题的，一个是 (k,id1), 一个是(k,id2)，这是不同的值😀","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1551349658,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":64399,"user_name":"杰之7","can_delete":false,"product_type":"c1","uid":1297232,"ip_address":"","ucode":"F7DA2E21085332","user_header":"https://static001.geekbang.org/account/avatar/00/13/cb/50/66d0bd7f.jpg","comment_is_top":false,"comment_ctime":1548767920,"is_pvip":false,"replies":[{"id":"22809","content":"KV场景的意思就是，所有的查询都是where k=N<br>并没有&gt;= 或者&lt;= 这种操作（没有range操作）<br><br>在这种场景里，hash索引的效率就比N叉树高","user_name":"作者回复","user_name_real":"林晓斌","uid":"1264162","ctime":1548772752,"ip_address":"","comment_id":64399,"utype":1}],"discussion_count":1,"race_medal":0,"score":"23023604400","product_id":100020801,"comment_content":"通过这一节的复习，对数据库索引的数据结构有了更进一步的认识。索引的数据结构主要有哈希表，有序索引，二叉树。<br><br>哈希表的用于等值查询，由于排序不是有序的，查询速度慢。<br><br>有序数组用于等值查询和有序查询，时间复杂度为O（log(N）。用于静态存储引擎。<br><br>二叉树需要从因为需要从磁盘上读数据，且数据块多，这样性能就降低，于是就有了多叉数结构。InnoDB的数据结构也是用于多叉数。所以在学习数据库的过程中，我也会更加多的注重数据结构的学习，老师之前给我留言也说过，数据性能的分析，主要就是数据结构的分析优化。<br><br>在下半部分，老师从实践的角度介绍了索引模型，用select * from T where ID =500和select * from T where k=5两个例子说明了主键索引和非主键索引。在非主键索引中，需要先得到主键索引的值，然后通过主键索引的值查询数据列，这部也叫回表。<br><br>理解了索引模型，对索引维护就更容易些，老师通过自增主键的案例，说明了在性能和存储空间的优势。<br><br>老师，这节唯一不懂得地方就是KV场景。请老师说明。很高兴能写这么多，并且理解了这些内容。","like_count":5,"discussions":[{"author":{"id":1264162,"avatar":"https://static001.geekbang.org/account/avatar/00/13/4a/22/2681d602.jpg","nickname":"林晓斌","note":"","ucode":"CDE42D44F26240","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":437981,"discussion_content":"KV场景的意思就是，所有的查询都是where k=N\n并没有&amp;gt;= 或者&amp;lt;= 这种操作（没有range操作）\n\n在这种场景里，hash索引的效率就比N叉树高","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1548772752,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":49789,"user_name":"✨胡小东","can_delete":false,"product_type":"c1","uid":1312339,"ip_address":"","ucode":"314D40A5857C17","user_header":"https://static001.geekbang.org/account/avatar/00/14/06/53/29fa4e12.jpg","comment_is_top":false,"comment_ctime":1544769415,"is_pvip":false,"replies":[{"id":"17953","content":"页分裂是因为需要锁住这个页面和它的父亲节点。总是要修改数据结构的。<br><br>第二问这个不是“分裂的代价”，应该是“索引的代价”","user_name":"作者回复","user_name_real":"林晓斌","uid":"1264162","ctime":1544778140,"ip_address":"","comment_id":49789,"utype":1}],"discussion_count":1,"race_medal":0,"score":"23019605895","product_id":100020801,"comment_content":"页分裂为什么影响索引的维护？因为索引相当于目录，增加了页数，就需要修改目录，所以有影响，可以这么理解嘛？","like_count":5,"discussions":[{"author":{"id":1264162,"avatar":"https://static001.geekbang.org/account/avatar/00/13/4a/22/2681d602.jpg","nickname":"林晓斌","note":"","ucode":"CDE42D44F26240","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":432774,"discussion_content":"页分裂是因为需要锁住这个页面和它的父亲节点。总是要修改数据结构的。\n\n第二问这个不是“分裂的代价”，应该是“索引的代价”","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1544778140,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":41213,"user_name":"到道可道","can_delete":false,"product_type":"c1","uid":1031181,"ip_address":"","ucode":"12B94B6C26BE0D","user_header":"https://static001.geekbang.org/account/avatar/00/0f/bc/0d/00424e81.jpg","comment_is_top":false,"comment_ctime":1542760216,"is_pvip":true,"discussion_count":0,"race_medal":1,"score":"23017596696","product_id":100020801,"comment_content":"由于索引中存储的是主键的key值，那么重建主键时，不但会重建主键，所有的普通索引也会重新构建，所以通常不建议重建索引，无普通索引的除外。","like_count":5},{"had_liked":false,"id":208793,"user_name":"Geek_wuming","can_delete":false,"product_type":"c1","uid":1388314,"ip_address":"","ucode":"AE749892284E3B","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/4RdOss6AW97KUaufOFIhQGMWJoRJvSZiayJBa36ic0A3M27hUFSBZhy4ZoXOp6gj1apln2N86icZEg1Z1f5PLEp8A/132","comment_is_top":false,"comment_ctime":1587439258,"is_pvip":false,"discussion_count":2,"race_medal":0,"score":"18767308442","product_id":100020801,"comment_content":"B树： https:&#47;&#47;zhuanlan.zhihu.com&#47;p&#47;54084335<br>B+树：https:&#47;&#47;zhuanlan.zhihu.com&#47;p&#47;54102723","like_count":4,"discussions":[{"author":{"id":2845977,"avatar":"https://static001.geekbang.org/account/avatar/00/2b/6d/19/204b0900.jpg","nickname":"Black Jack","note":"","ucode":"CB16C8F44EF422","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":535672,"discussion_content":"mark","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1638512086,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1723580,"avatar":"https://static001.geekbang.org/account/avatar/00/1a/4c/bc/d9ef313e.jpg","nickname":"。","note":"","ucode":"BFEF2648FE8A85","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":352367,"discussion_content":"mark","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1614694273,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":65082,"user_name":"金龟","can_delete":false,"product_type":"c1","uid":1228500,"ip_address":"","ucode":"1C7D35C8AE8D9D","user_header":"https://static001.geekbang.org/account/avatar/00/12/be/d4/ff1c1319.jpg","comment_is_top":false,"comment_ctime":1549029358,"is_pvip":false,"replies":[{"id":"23066","content":"是这样的，这个主要是考虑到，一个表可能有多个非主键索引，这样每个非主键索引的叶子节点就包含了主键id的值。","user_name":"作者回复","user_name_real":"林晓斌","uid":"1264162","ctime":1549038738,"ip_address":"","comment_id":65082,"utype":1}],"discussion_count":1,"race_medal":0,"score":"18728898542","product_id":100020801,"comment_content":"身份证和id为主键选择的问题:老师写了这样一句话&#39;显然，主键长度越小，普通索引的叶子节点就越小，普通索引占用的空间也就越小。&#39;但普通索引的引占用空间不光是叶子节点决定吧，应该还有中间的索引节点，这里如果使用id当主键，身份证当普通索引相当于普通索引的索引节点空间增大。其实从空间的角度来说应该都差不多吧。","like_count":4,"discussions":[{"author":{"id":1264162,"avatar":"https://static001.geekbang.org/account/avatar/00/13/4a/22/2681d602.jpg","nickname":"林晓斌","note":"","ucode":"CDE42D44F26240","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":438314,"discussion_content":"是这样的，这个主要是考虑到，一个表可能有多个非主键索引，这样每个非主键索引的叶子节点就包含了主键id的值。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1549038738,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":52268,"user_name":"赵见跃","can_delete":false,"product_type":"c1","uid":1319949,"ip_address":"","ucode":"F89B0BE32C3329","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTJqUkoCXOxRraVNVg1fTm4O892WFVCjeL9pS8kUX2nEeTEcaS6k0kP25h3rRKtUCwSoUrY6dvP43w/132","comment_is_top":false,"comment_ctime":1545356327,"is_pvip":false,"replies":[{"id":"18997","content":"1. 没有这个约束，但是要评估一下合理性，要注意数据量大的时候，多个唯一索引插入速度很慢 <br>2. 非唯一索引也会呀<br>3. 一样的，只是要增加unique判断过程<br>4. 这个看一下第13篇","user_name":"作者回复","user_name_real":"林晓斌","uid":"1264162","ctime":1545361470,"ip_address":"","comment_id":52268,"utype":1}],"discussion_count":1,"race_medal":0,"score":"18725225511","product_id":100020801,"comment_content":"老师您好，听这个课收益匪浅呀！由于进课晚啦，没跟上进度。请教您几个问题:1 一张表里是否不建议创建多个unique key 唯一索引？2 表里有 unique key 唯一索引的话，当进行修改和插入操作时，是否会引起锁？3 删除unique key 唯一索引，再创建它，这种操作和处理普通的二级索引是一样的吧？4 使用 alter table xxx engine=innodb 会对表的索引进行收缩吗？谢谢啦","like_count":4,"discussions":[{"author":{"id":1264162,"avatar":"https://static001.geekbang.org/account/avatar/00/13/4a/22/2681d602.jpg","nickname":"林晓斌","note":"","ucode":"CDE42D44F26240","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":433813,"discussion_content":"1. 没有这个约束，但是要评估一下合理性，要注意数据量大的时候，多个唯一索引插入速度很慢 \n2. 非唯一索引也会呀\n3. 一样的，只是要增加unique判断过程\n4. 这个看一下第13篇","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1545361470,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":47357,"user_name":"gesanri","can_delete":false,"product_type":"c1","uid":1121174,"ip_address":"","ucode":"AE3B97DC3ED668","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/PiajxSqBRaELtOO0HKrj5SI5JSlmwiaCvaF6GLiaTmf5NX88OZaO3HymTAGTeIoicBUjqzmMF6sF5raPFjuqLFibrrw/132","comment_is_top":false,"comment_ctime":1544113448,"is_pvip":false,"discussion_count":2,"race_medal":0,"score":"18723982632","product_id":100020801,"comment_content":"有个疑问，这个b+树的根节点是固定的还是动态变化的?比如自增主键1-10，一开始是以1为根节点的话，那2-10不都在根节点的右边吗？还是说在不断插入的过程中，根节点会变成5。还有就是这个b+树的层级是什么时候变化的，比如前100万个节点在第二层，100万以后的变第三层了，这个变化的条件是什么?","like_count":4,"discussions":[{"author":{"id":1065351,"avatar":"https://static001.geekbang.org/account/avatar/00/10/41/87/d26efb2e.jpg","nickname":"SuperSnow","note":"","ucode":"84C89AA8083E6A","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":129771,"discussion_content":"应该是根据页是不是满了做为触发产生新页的条件，那新页产生就应该有节点的变动，有点类似重新选主（根节点）的感觉，然后分到哪层这个我也感觉不出来了。","likes_number":2,"is_delete":false,"is_hidden":false,"ctime":1578737060,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":2075496,"avatar":"https://static001.geekbang.org/account/avatar/00/1f/ab/68/c792299e.jpg","nickname":"YK","note":"","ucode":"8E6E7E31853E1B","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":297244,"discussion_content":"应该会采用平衡二叉树的方式吧  在插入新数据时进行动态调整","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1596844120,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":41162,"user_name":"Richie","can_delete":false,"product_type":"c1","uid":1111377,"ip_address":"","ucode":"1426E1B2E82A43","user_header":"https://static001.geekbang.org/account/avatar/00/10/f5/51/60e91438.jpg","comment_is_top":false,"comment_ctime":1542744181,"is_pvip":false,"replies":[{"id":"14870","content":"页内逻辑有序，这个很精确。<br>物理上，顺序插入的数据页连续的概率大（但也不是精确的），非顺序写入的索引基本可以认为物理无序的","user_name":"作者回复","user_name_real":"林晓斌","uid":"1264162","ctime":1542782692,"ip_address":"","comment_id":41162,"utype":1}],"discussion_count":1,"race_medal":0,"score":"18722613365","product_id":100020801,"comment_content":"丁奇老师请问下，底层数据结构在页内是逻辑有序的吗，物理上无序的，并且采用双向指针","like_count":4,"discussions":[{"author":{"id":1264162,"avatar":"https://static001.geekbang.org/account/avatar/00/13/4a/22/2681d602.jpg","nickname":"林晓斌","note":"","ucode":"CDE42D44F26240","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":429717,"discussion_content":"页内逻辑有序，这个很精确。\n物理上，顺序插入的数据页连续的概率大（但也不是精确的），非顺序写入的索引基本可以认为物理无序的","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1542782692,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":251646,"user_name":"Shan","can_delete":false,"product_type":"c1","uid":1666954,"ip_address":"","ucode":"4F158016B0D590","user_header":"https://static001.geekbang.org/account/avatar/00/19/6f/8a/bea966ac.jpg","comment_is_top":false,"comment_ctime":1601746664,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"14486648552","product_id":100020801,"comment_content":"老师你好，我想问下一般我们主键索引可以通过使用自增主键减少页分裂或者合并。但是对于二级索引，一般我们插入的时候都是无序的，是不是很可能就会造成频繁页分裂？","like_count":3},{"had_liked":false,"id":103375,"user_name":"待我瘦到八十斤","can_delete":false,"product_type":"c1","uid":1273949,"ip_address":"","ucode":"51553E48C2237E","user_header":"https://static001.geekbang.org/account/avatar/00/13/70/5d/2c313dad.jpg","comment_is_top":false,"comment_ctime":1560423682,"is_pvip":false,"discussion_count":1,"race_medal":0,"score":"14445325570","product_id":100020801,"comment_content":"老师，你用的什么画的图，感觉好漂亮。","like_count":3,"discussions":[{"author":{"id":1065351,"avatar":"https://static001.geekbang.org/account/avatar/00/10/41/87/d26efb2e.jpg","nickname":"SuperSnow","note":"","ucode":"84C89AA8083E6A","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":129788,"discussion_content":"工具比较多吧，比如ProcessOn","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1578738413,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":90779,"user_name":"jamesxu","can_delete":false,"product_type":"c1","uid":1031369,"ip_address":"","ucode":"EB64BFAABE57E3","user_header":"","comment_is_top":false,"comment_ctime":1556638368,"is_pvip":false,"discussion_count":2,"race_medal":0,"score":"14441540256","product_id":100020801,"comment_content":"从Oracle过来的表示几乎不用自增主键，都是UUID，请问自增主键能带来多大的性能提升呢？","like_count":3,"discussions":[{"author":{"id":1065351,"avatar":"https://static001.geekbang.org/account/avatar/00/10/41/87/d26efb2e.jpg","nickname":"SuperSnow","note":"","ucode":"84C89AA8083E6A","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":129797,"discussion_content":"主要是可能面临的索引存储空间的问题，因为uuid应该是16B，而int，bigint分别是4B或8B。如果表中的普通索引建立的比较多，那就占用的空间比较大。\n另外，如果使用非自增主键（如果身份证号或学号等），由于每次插入主键的值近似于随机，因此每次新纪录都要被插到现有索引页得中间某个位置，此时MySQL不得不为了将新记录插到合适位置而移动数据。","likes_number":3,"is_delete":false,"is_hidden":false,"ctime":1578739416,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1246178,"avatar":"https://static001.geekbang.org/account/avatar/00/13/03/e2/5768d26e.jpg","nickname":"inrtyx","note":"","ucode":"81CD18FF34ABAB","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":212975,"discussion_content":"这个跟哪个数据库无关了。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1585038661,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":77712,"user_name":"不似旧日","can_delete":false,"product_type":"c1","uid":1161271,"ip_address":"","ucode":"DF4C5E3AB9570C","user_header":"https://static001.geekbang.org/account/avatar/00/11/b8/37/98991aeb.jpg","comment_is_top":false,"comment_ctime":1552985864,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"14437887752","product_id":100020801,"comment_content":"为什么要用自增主键<br>1、新增数据时,数据是追加的,不会产生叶子节点的分离<br>2、因为二级索引存放的是主键索引的值,所以主键长度越短所占空间越小","like_count":3},{"had_liked":false,"id":73617,"user_name":"Gordon","can_delete":false,"product_type":"c1","uid":1447449,"ip_address":"","ucode":"5CC8D40FA9CFBB","user_header":"https://static001.geekbang.org/account/avatar/00/16/16/19/e6a99866.jpg","comment_is_top":false,"comment_ctime":1551941005,"is_pvip":false,"replies":[{"id":"28010","content":"嗯，就是说如果是有几个select语句<br><br>最好就每个当做一个事务<br><br>如果写成<br>begin;<br>select<br>select<br>select<br>commit;<br>就属于“不必要”","user_name":"作者回复","user_name_real":"林晓斌","uid":"1264162","ctime":1552725302,"ip_address":"","comment_id":73617,"utype":1}],"discussion_count":1,"race_medal":0,"score":"14436842893","product_id":100020801,"comment_content":"林老师您好，不必要的只读事务那一段是什么意思呢？<br>Innodb要么显式开启事务 要么自动提交事务 都是按事务走<br>不必要的事务是指业务端移除不必要的查询吗？","like_count":3,"discussions":[{"author":{"id":1264162,"avatar":"https://static001.geekbang.org/account/avatar/00/13/4a/22/2681d602.jpg","nickname":"林晓斌","note":"","ucode":"CDE42D44F26240","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":442186,"discussion_content":"嗯，就是说如果是有几个select语句\n\n最好就每个当做一个事务\n\n如果写成\nbegin;\nselect\nselect\nselect\ncommit;\n就属于“不必要”","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1552725302,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":69725,"user_name":"唯她命","can_delete":false,"product_type":"c1","uid":1240398,"ip_address":"","ucode":"8F687E8D306840","user_header":"https://static001.geekbang.org/account/avatar/00/12/ed/4e/ef406442.jpg","comment_is_top":false,"comment_ctime":1550819678,"is_pvip":false,"replies":[{"id":"24824","content":"不用“分裂”，已经有了12345， 要插入6的时候，如果叶子满了，就申请一个空的页，然后单独放入6<br><br>这个过程不叫做“分裂”<br><br>","user_name":"作者回复","user_name_real":"林晓斌","uid":"1264162","ctime":1550835783,"ip_address":"","comment_id":69725,"utype":1}],"discussion_count":1,"race_medal":0,"score":"14435721566","product_id":100020801,"comment_content":"老师，自增主键的插入数据模式，每次插入一条新记录，都是追加操作，都不涉及到挪动其他记录，也不会触发叶子节点的分裂。这表述不对吧，插入无数个数据，数据页早就满了啊，应该分裂啊？<br>","like_count":3,"discussions":[{"author":{"id":1264162,"avatar":"https://static001.geekbang.org/account/avatar/00/13/4a/22/2681d602.jpg","nickname":"林晓斌","note":"","ucode":"CDE42D44F26240","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":440246,"discussion_content":"不用“分裂”，已经有了12345， 要插入6的时候，如果叶子满了，就申请一个空的页，然后单独放入6\n\n这个过程不叫做“分裂”\n\n","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1550835783,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":58548,"user_name":"Sonny721","can_delete":false,"product_type":"c1","uid":1104291,"ip_address":"","ucode":"C95DD306BFBE54","user_header":"https://static001.geekbang.org/account/avatar/00/10/d9/a3/2856b5b5.jpg","comment_is_top":false,"comment_ctime":1547111399,"is_pvip":false,"replies":[{"id":"21180","content":"为啥说不同， UserD是一个没有定义的值，只是做一个演示作用哈","user_name":"作者回复","user_name_real":"林晓斌","uid":"1264162","ctime":1547134584,"ip_address":"","comment_id":58548,"utype":1}],"discussion_count":1,"race_medal":0,"score":"14432013287","product_id":100020801,"comment_content":"二叉搜索树示意图中，UserA、UserB…这是什么节点？为什么User1和User4挂在了UserD中，这个和二叉查找树的性质（左子树小于根节点，右子树大于根节点）不相符呢？老师是否可以解答一下呢","like_count":3,"discussions":[{"author":{"id":1264162,"avatar":"https://static001.geekbang.org/account/avatar/00/13/4a/22/2681d602.jpg","nickname":"林晓斌","note":"","ucode":"CDE42D44F26240","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":436115,"discussion_content":"为啥说不同， UserD是一个没有定义的值，只是做一个演示作用哈","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1547134584,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":57074,"user_name":"reven404","can_delete":false,"product_type":"c1","uid":1022868,"ip_address":"","ucode":"F84AAF2DC1D18F","user_header":"https://static001.geekbang.org/account/avatar/00/0f/9b/94/4977913a.jpg","comment_is_top":false,"comment_ctime":1546614552,"is_pvip":true,"replies":[{"id":"21101","content":"一个page的大小是固定的（默认16k）<br>索引大小固定的情况下，一个page可以放的item数是固定的，<br>如果是int型，是1200个左右。","user_name":"作者回复","user_name_real":"林晓斌","uid":"1264162","ctime":1547117188,"ip_address":"","comment_id":57074,"utype":1}],"discussion_count":2,"race_medal":0,"score":"14431516440","product_id":100020801,"comment_content":"“以 InnoDB 的一个整数字段索引为例，这个 N 差不多是 1200。”这个怎么理解呢？","like_count":3,"discussions":[{"author":{"id":1264162,"avatar":"https://static001.geekbang.org/account/avatar/00/13/4a/22/2681d602.jpg","nickname":"林晓斌","note":"","ucode":"CDE42D44F26240","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":435391,"discussion_content":"一个page的大小是固定的（默认16k）\n索引大小固定的情况下，一个page可以放的item数是固定的，\n如果是int型，是1200个左右。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1547117188,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1440185,"avatar":"https://static001.geekbang.org/account/avatar/00/15/f9/b9/21b0553f.jpg","nickname":"叶少波","note":"","ucode":"CDF3DEEC7DFEA0","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":45560,"discussion_content":"可以理解为，把1200个item放在一个page中是最高效的，对吗。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1573048905,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":56714,"user_name":"何磊","can_delete":false,"product_type":"c1","uid":1047604,"ip_address":"","ucode":"78934C3ED4A342","user_header":"https://static001.geekbang.org/account/avatar/00/0f/fc/34/c733b116.jpg","comment_is_top":false,"comment_ctime":1546526855,"is_pvip":false,"replies":[{"id":"20439","content":"核心目标就是“减少树高”<br>最底层满了就要往下扩展","user_name":"作者回复","user_name_real":"林晓斌","uid":"1264162","ctime":1546527884,"ip_address":"","comment_id":56714,"utype":1}],"discussion_count":1,"race_medal":0,"score":"14431428743","product_id":100020801,"comment_content":"老师，请问对于索引树，它是如何决策哪一个做为父节点，哪一个是叶子结点呢？<br>比如文中的：100，200，300，500，600，700<br><br>mysql是根据什么策略来构建这个b+树的，又是在什么时候决定增加树的高度呢？","like_count":3,"discussions":[{"author":{"id":1264162,"avatar":"https://static001.geekbang.org/account/avatar/00/13/4a/22/2681d602.jpg","nickname":"林晓斌","note":"","ucode":"CDE42D44F26240","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":435189,"discussion_content":"核心目标就是“减少树高”\n最底层满了就要往下扩展","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1546527884,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":43970,"user_name":"颜冠浩 kanko🍑","can_delete":false,"product_type":"c1","uid":1304470,"ip_address":"","ucode":"FA959698D55C74","user_header":"https://static001.geekbang.org/account/avatar/00/13/e7/96/ea771434.jpg","comment_is_top":false,"comment_ctime":1543346704,"is_pvip":false,"discussion_count":1,"race_medal":0,"score":"14428248592","product_id":100020801,"comment_content":"老师，想请教一下为什么20高的二叉树需要20个数据块呢？我能理解为n height需要n个数据块吗？<br>我对于数据块这个概念也有点不太熟悉，能否麻烦老师再拓展一下呀","like_count":3,"discussions":[{"author":{"id":1065351,"avatar":"https://static001.geekbang.org/account/avatar/00/10/41/87/d26efb2e.jpg","nickname":"SuperSnow","note":"","ucode":"84C89AA8083E6A","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":129772,"discussion_content":"是随机访问，可能最多访问20个数据块。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1578737111,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":42503,"user_name":"Gary","can_delete":false,"product_type":"c1","uid":1064566,"ip_address":"","ucode":"BD6BD6B9FEE6CE","user_header":"https://static001.geekbang.org/account/avatar/00/10/3e/76/f1f2e161.jpg","comment_is_top":false,"comment_ctime":1542962825,"is_pvip":false,"replies":[{"id":"15193","content":"Optimize 每次执行的后都会有个很讨厌的warning 😄 ","user_name":"作者回复","user_name_real":"林晓斌","uid":"1264162","ctime":1542973586,"ip_address":"","comment_id":42503,"utype":1}],"discussion_count":1,"race_medal":0,"score":"14427864713","product_id":100020801,"comment_content":"OPTIMIZE TABLE tableName;<br>ALTER TABLE tableName ENGINE=INNODB;<br>这个有什么区别呢","like_count":3,"discussions":[{"author":{"id":1264162,"avatar":"https://static001.geekbang.org/account/avatar/00/13/4a/22/2681d602.jpg","nickname":"林晓斌","note":"","ucode":"CDE42D44F26240","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":430109,"discussion_content":"Optimize 每次执行的后都会有个很讨厌的warning 😄 ","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1542973586,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":41848,"user_name":"西蒙","can_delete":false,"product_type":"c1","uid":1262174,"ip_address":"","ucode":"2EBD107F8A75F3","user_header":"https://static001.geekbang.org/account/avatar/00/13/42/5e/17d96b0b.jpg","comment_is_top":false,"comment_ctime":1542858714,"is_pvip":false,"replies":[{"id":"15023","content":"这个问题有点大，没有具体信息前很难说。不过看这个描述，你应该优先考虑使用rocksdb引擎","user_name":"作者回复","user_name_real":"林晓斌","uid":"1264162","ctime":1542872300,"ip_address":"","comment_id":41848,"utype":1}],"discussion_count":1,"race_medal":0,"score":"14427760602","product_id":100020801,"comment_content":"请教下老师，系统api请求的日志表应该怎么设计？","like_count":3,"discussions":[{"author":{"id":1264162,"avatar":"https://static001.geekbang.org/account/avatar/00/13/4a/22/2681d602.jpg","nickname":"林晓斌","note":"","ucode":"CDE42D44F26240","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":429920,"discussion_content":"这个问题有点大，没有具体信息前很难说。不过看这个描述，你应该优先考虑使用rocksdb引擎","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1542872300,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":41652,"user_name":"mydb","can_delete":false,"product_type":"c1","uid":1304239,"ip_address":"","ucode":"4687D0CEB2BBA9","user_header":"https://static001.geekbang.org/account/avatar/00/13/e6/af/2afe0e0b.jpg","comment_is_top":false,"comment_ctime":1542813994,"is_pvip":false,"replies":[{"id":"15036","content":"Varchar(64)不算小了，你有没有在测试环境试着改短一点试试？","user_name":"作者回复","user_name_real":"林晓斌","uid":"1264162","ctime":1542876962,"ip_address":"","comment_id":41652,"utype":1}],"discussion_count":1,"race_medal":0,"score":"14427715882","product_id":100020801,"comment_content":"业务上有几张innodb表，索引包含的字段都很小，都是int类型，或varchar(64)的，sum(index_length) 是sum(data_length)的将近2倍，导出数据恢复重建了索引依然是这个情况，请问什么是怎么回事","like_count":3,"discussions":[{"author":{"id":1264162,"avatar":"https://static001.geekbang.org/account/avatar/00/13/4a/22/2681d602.jpg","nickname":"林晓斌","note":"","ucode":"CDE42D44F26240","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":429869,"discussion_content":"Varchar(64)不算小了，你有没有在测试环境试着改短一点试试？","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1542876962,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":41546,"user_name":"Flash","can_delete":false,"product_type":"c1","uid":1236163,"ip_address":"","ucode":"E285075C9E0B02","user_header":"https://static001.geekbang.org/account/avatar/00/12/dc/c3/e4ba51d5.jpg","comment_is_top":false,"comment_ctime":1542803472,"is_pvip":false,"replies":[{"id":"14943","content":"赞，评论有惊喜","user_name":"作者回复","user_name_real":"林晓斌","uid":"1264162","ctime":1542813894,"ip_address":"","comment_id":41546,"utype":1}],"discussion_count":3,"race_medal":0,"score":"14427705360","product_id":100020801,"comment_content":"思考题：看到一个哥们的回答，才恍然大悟，没想到删除主键索引对普通索引的影响！😓还去百度是不是有更优的sql语句重建索引，思路一开始就跑偏啦😁!","like_count":3,"discussions":[{"author":{"id":1264162,"avatar":"https://static001.geekbang.org/account/avatar/00/13/4a/22/2681d602.jpg","nickname":"林晓斌","note":"","ucode":"CDE42D44F26240","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":429835,"discussion_content":"赞，评论有惊喜","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1542813894,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1314724,"avatar":"https://static001.geekbang.org/account/avatar/00/14/0f/a4/0b49469f.jpg","nickname":"木子00","note":"","ucode":"8F78CA722EB29B","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":274349,"discussion_content":"只是评论太多了。看完需要好长时间。\n是上一篇，还是上上一篇竟有7百多条了。看不过来了。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1590572026,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1334527,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/WuVCibYmuGqFLnfIrr0BmkdzHwkialB0DibJ0YnymNNO2Wicy76ZxSvjD66sPVsd9SjkicSS4Z2iadTeOn7zGfwh9sxg/132","nickname":"灵犀andy","note":"","ucode":"3C3C36B070676C","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":102385,"discussion_content":"评论和回复 比文章精彩","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1577342475,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":41516,"user_name":"沙漠不二绿洲","can_delete":false,"product_type":"c1","uid":1309280,"ip_address":"","ucode":"2C756664F1853A","user_header":"https://static001.geekbang.org/account/avatar/00/13/fa/60/74a03dff.jpg","comment_is_top":false,"comment_ctime":1542797461,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"14427699349","product_id":100020801,"comment_content":"重建主键消耗肯定很大，可以把两个alter操作写一个语句中。可以一定程度降低对性能的消耗。","like_count":3},{"had_liked":false,"id":41364,"user_name":"似水流年","can_delete":false,"product_type":"c1","uid":1304443,"ip_address":"","ucode":"D114A8E273133C","user_header":"https://static001.geekbang.org/account/avatar/00/13/e7/7b/71da8283.jpg","comment_is_top":false,"comment_ctime":1542769220,"is_pvip":false,"replies":[{"id":"14847","content":"没了😓","user_name":"作者回复","user_name_real":"林晓斌","uid":"1264162","ctime":1542779814,"ip_address":"","comment_id":41364,"utype":1}],"discussion_count":1,"race_medal":0,"score":"14427671108","product_id":100020801,"comment_content":"InnoDB只有b+索引吗？还有其他索引选择吗？","like_count":3,"discussions":[{"author":{"id":1264162,"avatar":"https://static001.geekbang.org/account/avatar/00/13/4a/22/2681d602.jpg","nickname":"林晓斌","note":"","ucode":"CDE42D44F26240","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":429778,"discussion_content":"没了😓","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1542779814,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":264564,"user_name":"Augustine","can_delete":false,"product_type":"c1","uid":1632106,"ip_address":"","ucode":"78116EE650791E","user_header":"https://static001.geekbang.org/account/avatar/00/18/e7/6a/60dda6f7.jpg","comment_is_top":false,"comment_ctime":1606527830,"is_pvip":true,"discussion_count":0,"race_medal":0,"score":"10196462422","product_id":100020801,"comment_content":"老师，有个问题想请教下，都说mysql索引结构是B+树，但是为什么官方文档里写都是B树啊，例如官方文档Optimization&gt;Optimization and Indexes&gt;8.3.1 How MySQL Uses Indexes，这里写的是B树啊","like_count":2},{"had_liked":false,"id":243780,"user_name":"狼的诱惑","can_delete":false,"product_type":"c1","uid":1257043,"ip_address":"","ucode":"AE89DFC5963C42","user_header":"https://static001.geekbang.org/account/avatar/00/13/2e/53/bf62683f.jpg","comment_is_top":false,"comment_ctime":1598273388,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"10188207980","product_id":100020801,"comment_content":"老师，索引的字段id，类型为数字时id=5，底层存储时直接存5？如果类型是字符串时id=张三 ，btree底层直接存字符串？如果是字符串类型比较大小时转换成ASSCLL编码后进行比较的嘛？还请老师指点","like_count":2},{"had_liked":false,"id":185346,"user_name":"蛋炒饭加鸡蛋","can_delete":false,"product_type":"c1","uid":1628398,"ip_address":"","ucode":"C75E27B9FB3336","user_header":"https://static001.geekbang.org/account/avatar/00/18/d8/ee/17f220b6.jpg","comment_is_top":false,"comment_ctime":1583564803,"is_pvip":false,"discussion_count":3,"race_medal":0,"score":"10173499395","product_id":100020801,"comment_content":"考虑到树根的数据块总是在内存中的<br>老师，为什么树根的数据总是在内存中呢？","like_count":2,"discussions":[{"author":{"id":1274495,"avatar":"https://static001.geekbang.org/account/avatar/00/13/72/7f/5da093c5.jpg","nickname":"水目沾","note":"","ucode":"FDD1D15C277D58","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":340836,"discussion_content":"即使还没开始进行任何数据查找，把第一个节点（根节点）加载进来总没错。","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1610174161,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":1,"child_discussions":[{"author":{"id":2573342,"avatar":"https://static001.geekbang.org/account/avatar/00/27/44/1e/e6ab8ae8.jpg","nickname":"ddnbziznwndjxndndnnd","note":"","ucode":"489AFFBA05B963","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1274495,"avatar":"https://static001.geekbang.org/account/avatar/00/13/72/7f/5da093c5.jpg","nickname":"水目沾","note":"","ucode":"FDD1D15C277D58","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":386761,"discussion_content":"哈哈，没毛病","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1627785542,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":340836,"ip_address":""},"score":386761,"extra":""}]},{"author":{"id":2972247,"avatar":"https://static001.geekbang.org/account/avatar/00/2d/5a/57/949d98d6.jpg","nickname":"丶","note":"","ucode":"A912F0BDD0438C","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":566888,"discussion_content":"之前看过一些资料，说是可以减少一次磁盘的IO，提高效率","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1650790225,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":179582,"user_name":"乔丹","can_delete":false,"product_type":"c1","uid":1217413,"ip_address":"","ucode":"D832A9F97A0C7E","user_header":"https://static001.geekbang.org/account/avatar/00/12/93/85/f5d9474c.jpg","comment_is_top":false,"comment_ctime":1582034372,"is_pvip":false,"replies":[{"id":"69733","content":"主键天然是索引","user_name":"作者回复","user_name_real":"林晓斌","uid":"1264162","ctime":1582038978,"ip_address":"","comment_id":179582,"utype":1}],"discussion_count":2,"race_medal":0,"score":"10171968964","product_id":100020801,"comment_content":"指定了primary key，但是没有写明index，那么innodb里面，主键就是索引吗？","like_count":2,"discussions":[{"author":{"id":1264162,"avatar":"https://static001.geekbang.org/account/avatar/00/13/4a/22/2681d602.jpg","nickname":"林晓斌","note":"","ucode":"CDE42D44F26240","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":484316,"discussion_content":"主键天然是索引","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1582038978,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1274495,"avatar":"https://static001.geekbang.org/account/avatar/00/13/72/7f/5da093c5.jpg","nickname":"水目沾","note":"","ucode":"FDD1D15C277D58","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":340837,"discussion_content":"主键天然会被创建主键索引","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1610174183,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":161826,"user_name":"Joker","can_delete":false,"product_type":"c1","uid":1156592,"ip_address":"","ucode":"126AF848001A1E","user_header":"https://static001.geekbang.org/account/avatar/00/11/a5/f0/8648c464.jpg","comment_is_top":false,"comment_ctime":1576352807,"is_pvip":false,"replies":[{"id":"61631","content":"嗯，只select id字段就不用回表的","user_name":"作者回复","user_name_real":"林晓斌","uid":"1264162","ctime":1576376015,"ip_address":"","comment_id":161826,"utype":1}],"discussion_count":2,"race_medal":0,"score":"10166287399","product_id":100020801,"comment_content":"select id from T where k=5 ， 老师如果我只要主键索引的值是不是就不用回表查询了，还是说，回不回表和查询结果没啥关系，只要用了普通索引都是要回表的？","like_count":2,"discussions":[{"author":{"id":1264162,"avatar":"https://static001.geekbang.org/account/avatar/00/13/4a/22/2681d602.jpg","nickname":"林晓斌","note":"","ucode":"CDE42D44F26240","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":477872,"discussion_content":"嗯，只select id字段就不用回表的","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1576376015,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1065351,"avatar":"https://static001.geekbang.org/account/avatar/00/10/41/87/d26efb2e.jpg","nickname":"SuperSnow","note":"","ucode":"84C89AA8083E6A","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":129903,"discussion_content":"查询结果如果是id，就不用回表，但是你要返回其他结果就得回表了。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1578744141,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":131714,"user_name":"易轻尘","can_delete":false,"product_type":"c1","uid":1136684,"ip_address":"","ucode":"0D0CB9D6D45A70","user_header":"https://static001.geekbang.org/account/avatar/00/11/58/2c/92c7ce3b.jpg","comment_is_top":false,"comment_ctime":1567861073,"is_pvip":true,"discussion_count":3,"race_medal":0,"score":"10157795665","product_id":100020801,"comment_content":"每次看文章加看完评论都要花一个小时，不过干活是真的多呀<br><br>这里有两个问题：<br>1 既然innodb在没有指定主键索引的情况下，自己会以row id为主键索引，那么是不是我们显式的指定一个自增主键索引显得很多此一举呀？（在决定使用自增主键索引的情况下）<br>2 如果选择了自增主键作为索引，那么感觉对于范围查询的回表代价就比较大了（尽管二级索引可以范围查询，但还是要根据最后得到的每一个主键回表）。innodb有没有对此做一些优化呢? ","like_count":2,"discussions":[{"author":{"id":1652836,"avatar":"https://thirdwx.qlogo.cn/mmopen/vi_32/DYAIOgq83epKJlW7sqts2ZbPuhMbseTAdvHWnrc4ficAeSZyKibkvn6qyxflPrkKKU3mH6XCNmYvDg11tB6y0pxg/132","nickname":"pc","note":"","ucode":"1AD538B9A900B6","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":76668,"discussion_content":"1.去拿表的rowid，应该代价更大吧？盲猜","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1575822758,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1185046,"avatar":"https://static001.geekbang.org/account/avatar/00/12/15/16/0aae41a1.jpg","nickname":"no13bus","note":"","ucode":"69FA1A719DA4F6","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":8911,"discussion_content":"下一节有讲到 索引下推","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1568098877,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":1,"child_discussions":[{"author":{"id":1065351,"avatar":"https://static001.geekbang.org/account/avatar/00/10/41/87/d26efb2e.jpg","nickname":"SuperSnow","note":"","ucode":"84C89AA8083E6A","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1185046,"avatar":"https://static001.geekbang.org/account/avatar/00/12/15/16/0aae41a1.jpg","nickname":"no13bus","note":"","ucode":"69FA1A719DA4F6","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":129777,"discussion_content":"那就得用到联合索引，那如果是这样的话，一个页面的查询栏目可能有十个查询条件项，那就需要将十个字段搞成联合索引吗？","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1578737427,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":8911,"ip_address":""},"score":129777,"extra":""}]}]},{"had_liked":false,"id":121819,"user_name":"Monday","can_delete":false,"product_type":"c1","uid":1250907,"ip_address":"","ucode":"77B9BACC783598","user_header":"https://static001.geekbang.org/account/avatar/00/13/16/5b/83a35681.jpg","comment_is_top":false,"comment_ctime":1565228025,"is_pvip":false,"discussion_count":2,"race_medal":0,"score":"10155162617","product_id":100020801,"comment_content":"结合B+树索引请问两个问题： <br>1、B+树怎么存储相同值？<br>2、区分度不高的列是否必要创建索引，比如状态字段？","like_count":2,"discussions":[{"author":{"id":1346546,"avatar":"https://static001.geekbang.org/account/avatar/00/14/8b/f2/a6abbe45.jpg","nickname":"笼鱼","note":"","ucode":"CED5914D2C2964","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":6406,"discussion_content":"2.看mysql权威指南给出的答案是，如果是经常会where的列建议建立一个联合索引，譬如约会网站中的性别字段，可以与时间建立i 个联合索引等。。","likes_number":6,"is_delete":false,"is_hidden":false,"ctime":1566889333,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1076899,"avatar":"https://static001.geekbang.org/account/avatar/00/10/6e/a3/bec136c0.jpg","nickname":"cxzm","note":"","ucode":"E94ACEF9D507A6","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":166578,"discussion_content":"对于没有唯一性约束的索性，当索引值相同的时候，B+树非叶子节点根据主键id来唯一表示一个索引记录。","likes_number":2,"is_delete":false,"is_hidden":false,"ctime":1581413785,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":108683,"user_name":"beiler","can_delete":false,"product_type":"c1","uid":1192989,"ip_address":"","ucode":"0A62FE86617486","user_header":"https://static001.geekbang.org/account/avatar/00/12/34/1d/169cd800.jpg","comment_is_top":false,"comment_ctime":1561855482,"is_pvip":false,"replies":[{"id":"39543","content":"外键可以用来做约束<br>但是这种约束关系是在数据库里面做的（类似于存储过程，其实是一种逻辑）<br><br>这种情况下，等于你的数据库里面也有业务逻辑，<br>这个就要看项目管理上做得怎么样<br><br>如果能够把这些关系也作为代码的一部分，其实是可以的<br>之前很多人会觉得说加了存储过程、触发器、外键这些以后，代码逻辑混乱，<br>一个原因也是因为没有把数据库里的逻辑像代码一样管理好","user_name":"作者回复","user_name_real":"林晓斌","uid":"1264162","ctime":1561983551,"ip_address":"","comment_id":108683,"utype":1}],"discussion_count":2,"race_medal":0,"score":"10151790074","product_id":100020801,"comment_content":"请问老师是否有讲外键的利与弊？","like_count":2,"discussions":[{"author":{"id":1264162,"avatar":"https://static001.geekbang.org/account/avatar/00/13/4a/22/2681d602.jpg","nickname":"林晓斌","note":"","ucode":"CDE42D44F26240","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":456080,"discussion_content":"外键可以用来做约束\n但是这种约束关系是在数据库里面做的（类似于存储过程，其实是一种逻辑）\n\n这种情况下，等于你的数据库里面也有业务逻辑，\n这个就要看项目管理上做得怎么样\n\n如果能够把这些关系也作为代码的一部分，其实是可以的\n之前很多人会觉得说加了存储过程、触发器、外键这些以后，代码逻辑混乱，\n一个原因也是因为没有把数据库里的逻辑像代码一样管理好","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1561983551,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1065351,"avatar":"https://static001.geekbang.org/account/avatar/00/10/41/87/d26efb2e.jpg","nickname":"SuperSnow","note":"","ucode":"84C89AA8083E6A","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":129780,"discussion_content":"个人在实际当中对于有外键字段，是不在数据库里面做约束的。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1578737853,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":104623,"user_name":"苏暮沉觞","can_delete":false,"product_type":"c1","uid":1577580,"ip_address":"","ucode":"532B816D4EF47B","user_header":"https://static001.geekbang.org/account/avatar/00/18/12/6c/61a598e9.jpg","comment_is_top":false,"comment_ctime":1560788026,"is_pvip":false,"discussion_count":2,"race_medal":0,"score":"10150722618","product_id":100020801,"comment_content":"老师，学了前面几章想把自己的理解关联起来，同时还有一些问题想要解决：<br>1、索引是保存到磁盘上，在查询一张表上的数据时，如果优化器发现需要索引，就把这个表的索引（通过引擎）读取到内存中吗？（是读取所有索引（包括主键和非主键）还是部分索引（只在SQL中使用的索引），如果是部分索引，那是如何知道这条语句使用了哪些索引？）<br>2、在02章中，讲到数据先更新到内存，并写入redoLog，那在这条更新语句完成以后，是不是索引已经被更新了，同时保存到内存中，等机会写入磁盘，同时如果需要这个索引就直接在内存中读取。还是更新完语句后，索引就马上写入磁盘，如果需要这个索引，就从磁盘读取？","like_count":2,"discussions":[{"author":{"id":1065351,"avatar":"https://static001.geekbang.org/account/avatar/00/10/41/87/d26efb2e.jpg","nickname":"SuperSnow","note":"","ucode":"84C89AA8083E6A","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":129783,"discussion_content":"1、你的Where语句中的字段项就说明你要查询这些字段条件，如果哪些查询项指定了索引就会通过索引了，对于没有指定索引的查询项，应该是将回表后的查询结果，再进行那些条件的筛选吧，个人理解。\n2、这个你说的更新语句完成后，是不是索引已经更新了，我个人认为没有，因为事务还没有提交。如果事务提交了，应该是索引更新了。如果事务提交后，需要这个索引，应该是在内存中读的，因为数据表也就是索引组织表，你通过主键索引查询应该是内存中，非主键索引我个人认为也应该是内存中。","likes_number":2,"is_delete":false,"is_hidden":false,"ctime":1578738237,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":2166073,"avatar":"https://thirdwx.qlogo.cn/mmopen/vi_32/k3YD3y3BzGDSdrwRJyJY4BXsNJibfM4uzOdDVKIAlFApR2FZCLg2ibrZtJ4vuahA3LHLW9GKzH5CMGqCDhWjhZqg/132","nickname":"戒酒的李白","note":"","ucode":"744E1A22761647","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":393763,"discussion_content":"不管是主键索引还是普通索引，存储结构上都是以页的形式存在的。  更新语句完成后， 针对唯一索引， 是需要将磁盘中的数据载入内存来判断是否有唯一键冲突的， 载入内存更新内存页后， 不会立即刷入磁盘， 等合适的时机再刷进去。  针对非唯一索引， 会复用到change buffer，此时不会载入磁盘页到内存中， 此时只会记录改动的数据在内存和redolog中， 等合适的时候再刷盘。","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1631588911,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":101585,"user_name":"Geek_bbee54","can_delete":false,"product_type":"c1","uid":1563914,"ip_address":"","ucode":"59E3A2FC4ECAC2","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/DYAIOgq83eoZWMtLznN3B5LLqu6hicEbibz8JrmoeaeTaA8jcoJ9e7nA1eKRp1oreCwaJCveNn9qlMMG76PrShYw/132","comment_is_top":false,"comment_ctime":1559876139,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"10149810731","product_id":100020801,"comment_content":"为啥感觉那张图像是B树而非B+树。老师，B+树，不是数据都存在叶子节点，相互之间有指针相连的么。","like_count":2},{"had_liked":false,"id":100727,"user_name":"那一夜","can_delete":false,"product_type":"c1","uid":1127542,"ip_address":"","ucode":"AA3C750FF0D744","user_header":"https://static001.geekbang.org/account/avatar/00/11/34/76/d81137fe.jpg","comment_is_top":false,"comment_ctime":1559627958,"is_pvip":false,"discussion_count":3,"race_medal":0,"score":"10149562550","product_id":100020801,"comment_content":"老师你好，我想问一下 主键索引B+树和二级索引B+树的叶子结点里面存放的是数据页还是单独的一条数据，我再评论里面看到很多都说是数据页","like_count":2,"discussions":[{"author":{"id":1135990,"avatar":"https://static001.geekbang.org/account/avatar/00/11/55/76/a55871ab.jpg","nickname":"孙庆良","note":"","ucode":"CA05C4CFEFB0F9","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":309762,"discussion_content":"叶子节点存放的是数据页，一个数据页里面有多条行记录，这多条行记录通过有序数组存放","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1601433198,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1442605,"avatar":"https://static001.geekbang.org/account/avatar/00/16/03/2d/404627dc.jpg","nickname":"Anryg Zhun","note":"","ucode":"76DF8560BA9D14","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":179957,"discussion_content":"数据页 每个数据页会包含多条记录 为有序数组 目标记录通过二分法查找得到","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1582265489,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1065351,"avatar":"https://static001.geekbang.org/account/avatar/00/10/41/87/d26efb2e.jpg","nickname":"SuperSnow","note":"","ucode":"84C89AA8083E6A","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":129789,"discussion_content":"应该是数据页。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1578738536,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":98216,"user_name":"羊小看","can_delete":false,"product_type":"c1","uid":1488453,"ip_address":"","ucode":"90F58F80A75520","user_header":"https://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTJYEdMwBDUC6gYrUoI7092ocWJPyw1aP8xNOFXxOv7LEw1xj5a4icDibV7pd9vN45lXicXYjB7oYXVqg/132","comment_is_top":false,"comment_ctime":1558934347,"is_pvip":false,"replies":[{"id":"35323","content":"单调的意思是 <br>if <br>  (k1&gt;k2)<br>then <br>  hash_k1&gt;hash_k2","user_name":"作者回复","user_name_real":"林晓斌","uid":"1264162","ctime":1559062051,"ip_address":"","comment_id":98216,"utype":1}],"discussion_count":1,"race_medal":0,"score":"10148868939","product_id":100020801,"comment_content":"哈希函数为啥不能是单调的？那么每个k都会哈希成不同的值","like_count":2,"discussions":[{"author":{"id":1264162,"avatar":"https://static001.geekbang.org/account/avatar/00/13/4a/22/2681d602.jpg","nickname":"林晓斌","note":"","ucode":"CDE42D44F26240","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":451603,"discussion_content":"单调的意思是 \nif \n  (k1&amp;gt;k2)\nthen \n  hash_k1&amp;gt;hash_k2","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1559062051,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":88806,"user_name":"Break","can_delete":false,"product_type":"c1","uid":1508922,"ip_address":"","ucode":"6D1CCFC60E11EF","user_header":"https://static001.geekbang.org/account/avatar/00/17/06/3a/68bed1d9.jpg","comment_is_top":false,"comment_ctime":1556004962,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"10145939554","product_id":100020801,"comment_content":"general_log 的日志 这个调试方法赞, 之前不知道还一直在应用层上找打印sql语句的方法. 哈哈.👍🏻","like_count":2},{"had_liked":false,"id":63884,"user_name":"书生","can_delete":false,"product_type":"c1","uid":1103592,"ip_address":"","ucode":"5AEB78BD3B11A8","user_header":"https://static001.geekbang.org/account/avatar/00/10/d6/e8/00118b5d.jpg","comment_is_top":false,"comment_ctime":1548576433,"is_pvip":false,"replies":[{"id":"22609","content":"可以的，当然可能会导致没那么紧凑，但是也是不错的了","user_name":"作者回复","user_name_real":"林晓斌","uid":"1264162","ctime":1548608775,"ip_address":"","comment_id":63884,"utype":1}],"discussion_count":1,"race_medal":0,"score":"10138511025","product_id":100020801,"comment_content":"请问老师，自增主键，如果在并发量特别大的情况下，仍然适合使用吗？","like_count":2,"discussions":[{"author":{"id":1264162,"avatar":"https://static001.geekbang.org/account/avatar/00/13/4a/22/2681d602.jpg","nickname":"林晓斌","note":"","ucode":"CDE42D44F26240","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":437748,"discussion_content":"可以的，当然可能会导致没那么紧凑，但是也是不错的了","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1548608775,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":63316,"user_name":"妥妥","can_delete":false,"product_type":"c1","uid":1206716,"ip_address":"","ucode":"5BC1C85CF60CAD","user_header":"https://static001.geekbang.org/account/avatar/00/12/69/bc/c22bf219.jpg","comment_is_top":false,"comment_ctime":1548320848,"is_pvip":true,"replies":[{"id":"22415","content":"演示😅 ","user_name":"作者回复","user_name_real":"林晓斌","uid":"1264162","ctime":1548322446,"ip_address":"","comment_id":63316,"utype":1}],"discussion_count":3,"race_medal":0,"score":"10138255440","product_id":100020801,"comment_content":"老师我想问一下，你说主键索引的叶子节点存储的是整行数据，为什么你的示例里的R1~R5里的数据只有ID和k，没有name字段呢？","like_count":2,"discussions":[{"author":{"id":1264162,"avatar":"https://static001.geekbang.org/account/avatar/00/13/4a/22/2681d602.jpg","nickname":"林晓斌","note":"","ucode":"CDE42D44F26240","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":437544,"discussion_content":"演示😅 ","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1548322446,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1301907,"avatar":"https://static001.geekbang.org/account/avatar/00/13/dd/93/2a20808f.jpg","nickname":"天启者","note":"","ucode":"A33D603083F08C","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":299553,"discussion_content":"通篇能看明白，但就是 innodb索引组织结构的那两个树中的 主键索引感觉不太对，费主键索引没毛病，叶子节点存放主键数据，但主键索引的叶子节点没看到整行数据，所以很纳闷，害得我往下一直翻，直到翻出这个疑问和答复。。。","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1597734874,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":1,"child_discussions":[{"author":{"id":1274495,"avatar":"https://static001.geekbang.org/account/avatar/00/13/72/7f/5da093c5.jpg","nickname":"水目沾","note":"","ucode":"FDD1D15C277D58","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1301907,"avatar":"https://static001.geekbang.org/account/avatar/00/13/dd/93/2a20808f.jpg","nickname":"天启者","note":"","ucode":"A33D603083F08C","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":340838,"discussion_content":"哈哈，你们看的挺认真的。我直接知道这是演示，都没管理字段有没有完全对上了。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1610174348,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":299553,"ip_address":""},"score":340838,"extra":""}]}]},{"had_liked":false,"id":58025,"user_name":"高山高","can_delete":false,"product_type":"c1","uid":1120547,"ip_address":"","ucode":"4F1D91E3C3FBB9","user_header":"https://static001.geekbang.org/account/avatar/00/11/19/23/849beae4.jpg","comment_is_top":false,"comment_ctime":1546962070,"is_pvip":false,"replies":[{"id":"20905","content":"就是说这是一个1200叉的B+树","user_name":"作者回复","user_name_real":"林晓斌","uid":"1264162","ctime":1546966431,"ip_address":"","comment_id":58025,"utype":1}],"discussion_count":2,"race_medal":0,"score":"10136896662","product_id":100020801,"comment_content":"以 InnoDB 的一个整数字段索引为例，这个 N 差不多是1200。这句话不是很理解，能详细解释一下吗？谢谢","like_count":2,"discussions":[{"author":{"id":1264162,"avatar":"https://static001.geekbang.org/account/avatar/00/13/4a/22/2681d602.jpg","nickname":"林晓斌","note":"","ucode":"CDE42D44F26240","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":435871,"discussion_content":"就是说这是一个1200叉的B+树","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1546966431,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":2166073,"avatar":"https://thirdwx.qlogo.cn/mmopen/vi_32/k3YD3y3BzGDSdrwRJyJY4BXsNJibfM4uzOdDVKIAlFApR2FZCLg2ibrZtJ4vuahA3LHLW9GKzH5CMGqCDhWjhZqg/132","nickname":"戒酒的李白","note":"","ucode":"744E1A22761647","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":393765,"discussion_content":"我记得评论中其它同学有解释过了。  一个页是16k, bigint的字段是 8B， 叶子里面各个记录之间有指针，指针占用6B，这样一个页内记录数就是：   16 * 1000 / (8 + 6) 约等于1200","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1631589318,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":55725,"user_name":"Fanta.Lee","can_delete":false,"product_type":"c1","uid":1306165,"ip_address":"","ucode":"EA511BC28E88EA","user_header":"","comment_is_top":false,"comment_ctime":1546270092,"is_pvip":false,"replies":[{"id":"20092","content":"自增主键不会，一个页面满了，就到申请另外一个页面从左边开始写数据<br><br>新年快乐","user_name":"作者回复","user_name_real":"林晓斌","uid":"1264162","ctime":1546275055,"ip_address":"","comment_id":55725,"utype":1}],"discussion_count":2,"race_medal":0,"score":"10136204684","product_id":100020801,"comment_content":"“也就是说，自增主键的插入数据模式，正符合了我们前面提到的递增插入的场景。每次插入一条新记录，都是追加操作，都不涉及到挪动其他记录，也不会触发叶子节点的分裂”<br>老师  纵然是追加到一定程度也还是要分裂的吧？为啥“不会触发”？<br>","like_count":2,"discussions":[{"author":{"id":1264162,"avatar":"https://static001.geekbang.org/account/avatar/00/13/4a/22/2681d602.jpg","nickname":"林晓斌","note":"","ucode":"CDE42D44F26240","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":434834,"discussion_content":"自增主键不会，一个页面满了，就到申请另外一个页面从左边开始写数据\n\n新年快乐","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1546275055,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1140080,"avatar":"https://static001.geekbang.org/account/avatar/00/11/65/70/7e137498.jpg","nickname":"FOCUS","note":"","ucode":"DFE3078B632026","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":380708,"discussion_content":"那所谓的分裂究竟是指什么呢？难道不就是指分页吗？还是说分页也是分按顺序任何？还是跳到其他空闲页？","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1624638433,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":48209,"user_name":"苍茫","can_delete":false,"product_type":"c1","uid":1299149,"ip_address":"","ucode":"CED8598307BEAE","user_header":"https://static001.geekbang.org/account/avatar/00/13/d2/cd/6fb14677.jpg","comment_is_top":false,"comment_ctime":1544402730,"is_pvip":false,"replies":[{"id":"17160","content":"1. 取到链表头部，然后一个个往下找<br><br><br>2. 每个节点里面都存着索引值，这些值可以比大小","user_name":"作者回复","user_name_real":"林晓斌","uid":"1264162","ctime":1544404622,"ip_address":"","comment_id":48209,"utype":1}],"discussion_count":1,"race_medal":0,"score":"10134337322","product_id":100020801,"comment_content":"就是我想问一下，key value中key中如果对应多个值，后面有链表，那么是怎么在链表中取值么？每个节点的左儿子小于父节点，父节点又小于右儿子，该怎么理解？","like_count":2,"discussions":[{"author":{"id":1264162,"avatar":"https://static001.geekbang.org/account/avatar/00/13/4a/22/2681d602.jpg","nickname":"林晓斌","note":"","ucode":"CDE42D44F26240","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":432073,"discussion_content":"1. 取到链表头部，然后一个个往下找\n\n\n2. 每个节点里面都存着索引值，这些值可以比大小","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1544404622,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":43863,"user_name":"特斯拉","can_delete":false,"product_type":"c1","uid":1230807,"ip_address":"","ucode":"C65901BD39AF0F","user_header":"https://static001.geekbang.org/account/avatar/00/12/c7/d7/b9f93eec.jpg","comment_is_top":false,"comment_ctime":1543312594,"is_pvip":false,"replies":[{"id":"15666","content":"1. 因为原来占一个数据页的数据，分裂后分散到两个数据页中了<br>2. 说的是节点内容的大小","user_name":"作者回复","user_name_real":"林晓斌","uid":"1264162","ctime":1543318483,"ip_address":"","comment_id":43863,"utype":1}],"discussion_count":1,"race_medal":0,"score":"10133247186","product_id":100020801,"comment_content":"请问老师:<br><br>1. 叶分裂过程为什么会使整体空间利用率下降50%<br><br>2. 怎么理解二叉搜索树的特点，每个节点的左儿子小于父节点，父节点又小于右节点。<br>是说的搜索优先级吗?在搜索过程中是不是还需要做一个判断是否在这个节点上?","like_count":2,"discussions":[{"author":{"id":1264162,"avatar":"https://static001.geekbang.org/account/avatar/00/13/4a/22/2681d602.jpg","nickname":"林晓斌","note":"","ucode":"CDE42D44F26240","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":430529,"discussion_content":"1. 因为原来占一个数据页的数据，分裂后分散到两个数据页中了\n2. 说的是节点内容的大小","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1543318483,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":42707,"user_name":"小歪","can_delete":false,"product_type":"c1","uid":1019077,"ip_address":"","ucode":"22B610770A4902","user_header":"https://static001.geekbang.org/account/avatar/00/0f/8c/c5/bbfbae45.jpg","comment_is_top":false,"comment_ctime":1543024529,"is_pvip":false,"replies":[{"id":"15301","content":"自己生成唯一ID就是实现麻烦一点，如果是bigint 类型自增的，存储空间和效率其实也不错的","user_name":"作者回复","user_name_real":"林晓斌","uid":"1264162","ctime":1543041796,"ip_address":"","comment_id":42707,"utype":1}],"discussion_count":1,"race_medal":0,"score":"10132959121","product_id":100020801,"comment_content":"数据库做集群，用自增索性，需要给每台服务器设置不同步长，感觉很麻烦。但用自己生成的唯一id，像老师说的可能存储空间和效率没自增好，请问这是时候怎么考虑？","like_count":2,"discussions":[{"author":{"id":1264162,"avatar":"https://static001.geekbang.org/account/avatar/00/13/4a/22/2681d602.jpg","nickname":"林晓斌","note":"","ucode":"CDE42D44F26240","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":430170,"discussion_content":"自己生成唯一ID就是实现麻烦一点，如果是bigint 类型自增的，存储空间和效率其实也不错的","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1543041796,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":42577,"user_name":"LAMBO","can_delete":false,"product_type":"c1","uid":1214041,"ip_address":"","ucode":"10EDE0FC134FA8","user_header":"https://static001.geekbang.org/account/avatar/00/12/86/59/e8f58a2a.jpg","comment_is_top":false,"comment_ctime":1542973588,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"10132908180","product_id":100020801,"comment_content":"二叉搜索树的特点是：每个节点的左儿子小于父节点，父节点又小于右儿子。<br>换言之，新增的节点比当前节点小的话，放左边做子节点，反之放右边作子节点。","like_count":2},{"had_liked":false,"id":42396,"user_name":"JRich","can_delete":false,"product_type":"c1","uid":1114901,"ip_address":"","ucode":"66AE9D61533960","user_header":"https://static001.geekbang.org/account/avatar/00/11/03/15/293a185d.jpg","comment_is_top":false,"comment_ctime":1542948470,"is_pvip":false,"replies":[{"id":"15158","content":"往后追加就好了","user_name":"作者回复","user_name_real":"林晓斌","uid":"1264162","ctime":1542953025,"ip_address":"","comment_id":42396,"utype":1}],"discussion_count":3,"race_medal":0,"score":"10132883062","product_id":100020801,"comment_content":"为什么追加操作不会涉及到页分裂，按理说追加造成数据块满了，不是要申请新的数据页吗","like_count":2,"discussions":[{"author":{"id":1264162,"avatar":"https://static001.geekbang.org/account/avatar/00/13/4a/22/2681d602.jpg","nickname":"林晓斌","note":"","ucode":"CDE42D44F26240","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":430076,"discussion_content":"往后追加就好了","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1542953025,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1397315,"avatar":"https://static001.geekbang.org/account/avatar/00/15/52/43/25209d6c.jpg","nickname":"无边丝雨","note":"","ucode":"B2AD1EAB9E9308","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":21055,"discussion_content":"不是分裂而是新申请,新申请不叫分裂","likes_number":2,"is_delete":false,"is_hidden":false,"ctime":1569418697,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1065351,"avatar":"https://static001.geekbang.org/account/avatar/00/10/41/87/d26efb2e.jpg","nickname":"SuperSnow","note":"","ucode":"84C89AA8083E6A","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":129865,"discussion_content":"但是要插入一个比现有主键值小的值，就可能是要分裂。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1578742647,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":41953,"user_name":"xinput","can_delete":false,"product_type":"c1","uid":1096073,"ip_address":"","ucode":"8C45C7E341C9F1","user_header":"https://static001.geekbang.org/account/avatar/00/10/b9/89/f1ee3c57.jpg","comment_is_top":false,"comment_ctime":1542880233,"is_pvip":false,"replies":[{"id":"15054","content":"就是维护成本高，更新的时候得多更新几个","user_name":"作者回复","user_name_real":"林晓斌","uid":"1264162","ctime":1542883797,"ip_address":"","comment_id":41953,"utype":1}],"discussion_count":2,"race_medal":0,"score":"10132814825","product_id":100020801,"comment_content":"您好，我想问一下，如果对一个表的同一个字段创建多个索引，即索引名不同，但是都是同一个字段，会有什么影响","like_count":2,"discussions":[{"author":{"id":1264162,"avatar":"https://static001.geekbang.org/account/avatar/00/13/4a/22/2681d602.jpg","nickname":"林晓斌","note":"","ucode":"CDE42D44F26240","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":429954,"discussion_content":"就是维护成本高，更新的时候得多更新几个","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1542883797,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1140080,"avatar":"https://static001.geekbang.org/account/avatar/00/11/65/70/7e137498.jpg","nickname":"FOCUS","note":"","ucode":"DFE3078B632026","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":380707,"discussion_content":"那应该也会产生多个不同索引树啊","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1624638040,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":41842,"user_name":"mutexlock","can_delete":false,"product_type":"c1","uid":1258434,"ip_address":"","ucode":"FCE8B3AD122CEB","user_header":"https://static001.geekbang.org/account/avatar/00/13/33/c2/e135113a.jpg","comment_is_top":false,"comment_ctime":1542857822,"is_pvip":false,"replies":[{"id":"15025","content":"如果能有序插入自然是最好的，不过这个一般比较难吧，除了一些发号系统… ","user_name":"作者回复","user_name_real":"林晓斌","uid":"1264162","ctime":1542872443,"ip_address":"","comment_id":41842,"utype":1}],"discussion_count":1,"race_medal":0,"score":"10132792414","product_id":100020801,"comment_content":"老师，最后提到业务字段直接做主键的两个前提<br>1、只有一个索引；2、 该索引必须是唯一索引。<br>是不是还要加上业务字段必须有序？<br>如果该业务字段无序的话，还是会给索引的维护带来复杂性，这个复杂性和遍历两次索引树的性能如何权衡？","like_count":2,"discussions":[{"author":{"id":1264162,"avatar":"https://static001.geekbang.org/account/avatar/00/13/4a/22/2681d602.jpg","nickname":"林晓斌","note":"","ucode":"CDE42D44F26240","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":429915,"discussion_content":"如果能有序插入自然是最好的，不过这个一般比较难吧，除了一些发号系统… ","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1542872443,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":41809,"user_name":"冰点18","can_delete":false,"product_type":"c1","uid":1112370,"ip_address":"","ucode":"0BD9DBE5D3242E","user_header":"https://static001.geekbang.org/account/avatar/00/10/f9/32/8ced1824.jpg","comment_is_top":false,"comment_ctime":1542854074,"is_pvip":false,"replies":[{"id":"15027","content":"在innodb 里面不分的，就是LRU。<br><br>二级索引大起来也是很可怕的😄","user_name":"作者回复","user_name_real":"林晓斌","uid":"1264162","ctime":1542872633,"ip_address":"","comment_id":41809,"utype":1}],"discussion_count":2,"race_medal":0,"score":"10132788666","product_id":100020801,"comment_content":"索引哪些数据在内存，哪些数据在磁盘呢？聚簇索引因为包含整行的数据所以都在磁盘？二级索引就没必要放磁盘了吧，毕竟只有索引列和主键。","like_count":2,"discussions":[{"author":{"id":1264162,"avatar":"https://static001.geekbang.org/account/avatar/00/13/4a/22/2681d602.jpg","nickname":"林晓斌","note":"","ucode":"CDE42D44F26240","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":429908,"discussion_content":"在innodb 里面不分的，就是LRU。\n\n二级索引大起来也是很可怕的😄","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1542872633,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":2166073,"avatar":"https://thirdwx.qlogo.cn/mmopen/vi_32/k3YD3y3BzGDSdrwRJyJY4BXsNJibfM4uzOdDVKIAlFApR2FZCLg2ibrZtJ4vuahA3LHLW9GKzH5CMGqCDhWjhZqg/132","nickname":"戒酒的李白","note":"","ucode":"744E1A22761647","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":393770,"discussion_content":"是不是在缓存中也是以页为单位， 如果内存不够了， 会淘汰一些页。这个时候如果要查询这个页中的数据， 需要从磁盘读取到内存中。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1631590308,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":41591,"user_name":"J!","can_delete":false,"product_type":"c1","uid":1305003,"ip_address":"","ucode":"71C946119B59D1","user_header":"https://static001.geekbang.org/account/avatar/00/13/e9/ab/37903736.jpg","comment_is_top":false,"comment_ctime":1542810158,"is_pvip":false,"discussion_count":3,"race_medal":0,"score":"10132744750","product_id":100020801,"comment_content":"删除一个表的主键，那么所有二级索也会全部重建，因为删除一个主键后会生成一个隐藏的主键，对应的关系要全部发生变化，是这样的吗","like_count":2,"discussions":[{"author":{"id":1044546,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/f0/42/7728d4f5.jpg","nickname":"艿艿","note":"","ucode":"8F727AB7A7F6B2","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":28699,"discussion_content":"是滴。","likes_number":2,"is_delete":false,"is_hidden":false,"ctime":1570709234,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":2,"child_discussions":[{"author":{"id":1314724,"avatar":"https://static001.geekbang.org/account/avatar/00/14/0f/a4/0b49469f.jpg","nickname":"木子00","note":"","ucode":"8F78CA722EB29B","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":1044546,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/f0/42/7728d4f5.jpg","nickname":"艿艿","note":"","ucode":"8F727AB7A7F6B2","race_medal":0,"user_type":1,"is_pvip":true},"discussion":{"id":274348,"discussion_content":"难道你是【芋道源码】本人吗？头像也一样。","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1590571911,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":28699,"ip_address":""},"score":274348,"extra":""},{"author":{"id":1044546,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/f0/42/7728d4f5.jpg","nickname":"艿艿","note":"","ucode":"8F727AB7A7F6B2","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":1314724,"avatar":"https://static001.geekbang.org/account/avatar/00/14/0f/a4/0b49469f.jpg","nickname":"木子00","note":"","ucode":"8F78CA722EB29B","race_medal":0,"user_type":1,"is_pvip":true},"discussion":{"id":277387,"discussion_content":"嘿嘿(º﹃º )","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1591049762,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":274348,"ip_address":""},"score":277387,"extra":""}]}]},{"had_liked":false,"id":41463,"user_name":"skyoo","can_delete":false,"product_type":"c1","uid":1302503,"ip_address":"","ucode":"EBC0528BA02DD7","user_header":"https://static001.geekbang.org/account/avatar/00/13/df/e7/4ce5ed27.jpg","comment_is_top":false,"comment_ctime":1542787252,"is_pvip":false,"replies":[{"id":"14925","content":"前面都对了，除了最后一句：实际上，rowid就是聚集索引","user_name":"作者回复","user_name_real":"林晓斌","uid":"1264162","ctime":1542801822,"ip_address":"","comment_id":41463,"utype":1}],"discussion_count":2,"race_medal":0,"score":"10132721844","product_id":100020801,"comment_content":"对某个字段利用率很低的话 ,删除该字段普通索引,正常来说 没有啥影响,<br>如果删除主键的话 innodb 会对该表自动创建 生成一个ROWID 来定位,并且利用ROWID和辅助索引来回表, 相对来说没有主键 就没有聚集索引,效率方面肯定要低很多了<br>","like_count":2,"discussions":[{"author":{"id":1264162,"avatar":"https://static001.geekbang.org/account/avatar/00/13/4a/22/2681d602.jpg","nickname":"林晓斌","note":"","ucode":"CDE42D44F26240","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":429812,"discussion_content":"前面都对了，除了最后一句：实际上，rowid就是聚集索引","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1542801822,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1065351,"avatar":"https://static001.geekbang.org/account/avatar/00/10/41/87/d26efb2e.jpg","nickname":"SuperSnow","note":"","ucode":"84C89AA8083E6A","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":129869,"discussion_content":"并且，删除主键的话，普通索引的主键值虽然存在，但是也没用了。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1578742918,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":338312,"user_name":"chowhuijie","can_delete":false,"product_type":"c1","uid":1182004,"ip_address":"","ucode":"CCA69DE065370C","user_header":"https://static001.geekbang.org/account/avatar/00/12/09/34/1c81cf7c.jpg","comment_is_top":false,"comment_ctime":1647420806,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"5942388102","product_id":100020801,"comment_content":"索引：N叉树-为了让一次查询尽量少的读取磁盘，就需要让查询过程尽量少的访问数据块，我们就应该向使用N叉树靠近，也就是B树；innodb索引的这个N大约是1200，数据库读取的数据页的大小是16K，也就是第一层是16K，肯定在内存中放置了，第二层是16*1200KB，大约是20M，也有可能在内存中放置。<br>索引小结：因为mysql的索引是在存储引擎上实现的，所以不同的存储引擎使用到的索引是不一样的。innodb存储引擎用到的索引的数据结构就是B+树；<br>INNODB索引：在INNODB中，表都是根据主键的顺序以索引的方式进行存放的，也成为索引组织表；也就是说每一个索引在INNODB中都对应一棵B+树；一个表有几个索引，就有几棵树；B+树的叶子节点存储的是page，一个page包含多行；通常索引只能定位到page，page内部查找的话有一定的算法，比如二分查找；<br>索引类型：索引分为主键索引和非主键索引，主键索引的叶子节点存储的是整行数据，又称为聚簇索引；非主键索引，又称为二级索引、非聚簇索引，其叶子节点存储的是主键值。此处涉及到的知识点可是有回表哈；<br>索引维护：为了维护索引的有序性，在插入新的数据的时候，索引是需要更新的。为了保证mysql数据库的性能，我们通常会建表的时候设置一个自增的主键，这样可以保证聚簇索引的连续性，可以有效防止在数据页中间插入。如果我们不显示的设置自增主键，mysql也会采用一个默认值来作为虚拟主键。但是如果将一个业务单号：比如订单号作为主键的话，可能插入的数据在已有数据的中间，此时将会将后续的数据移动，如果正好要插入的数据的数据页满了，还会造成页分裂，造成性能严重下滑。当然有页分裂就有页合并，当相邻的两个数据页有数据删除的时候，利用率就会变低，这时会将数据页合并；<br>主键：如果表中除了自增的主键之外，还有一个字段是唯一的，也可以当做主键用，但是此时需要注意的是占用空间的大小了，比如用身份证号作为主键，那么非聚簇索引的叶子节点上都是一个身份证号的长度，约20个字节，显然比自增ID会更占用空间。显然主键越小，非主键索引叶子结点就越小，普通索引占用的空间也就更小。当然并不是所有的表都需要有一个自增的主键，比如特殊的业务场景，表中就一个索引，并且该索引还是唯一的，典型的KV场景。<br>","like_count":1},{"had_liked":false,"id":302238,"user_name":"tong","can_delete":false,"product_type":"c1","uid":1882517,"ip_address":"","ucode":"966DEDE81081D0","user_header":"https://static001.geekbang.org/account/avatar/00/1c/b9/95/cabab54b.jpg","comment_is_top":false,"comment_ctime":1626143282,"is_pvip":false,"discussion_count":1,"race_medal":0,"score":"5921110578","product_id":100020801,"comment_content":"老师你好，产生一个反向问题，如果一个表原来没有主键索引，只有普通索引<br>现在给它建立了主键索引，普通索引还会生效吗？","like_count":1,"discussions":[{"author":{"id":2420294,"avatar":"https://static001.geekbang.org/account/avatar/00/24/ee/46/7d65ae37.jpg","nickname":"木几丶","note":"","ucode":"FFDB958DA64F8C","race_medal":5,"user_type":1,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":390670,"discussion_content":"没有主键索引，那么innodb自动会给我们建一个，这时候如果我们再建一个主键索引，其实就相当于主键索引重建，也就是老师留的作业题，会使所有非主键索引的value值失效，面临着全部重建，影响巨大","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1629966378,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":299036,"user_name":"tangzc1","can_delete":false,"product_type":"c1","uid":1311254,"ip_address":"","ucode":"78CB596D2F33DC","user_header":"https://static001.geekbang.org/account/avatar/00/14/02/16/6fe3fe44.jpg","comment_is_top":false,"comment_ctime":1624433223,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"5919400519","product_id":100020801,"comment_content":"真正理解文章的知识点还是需要辅以查找各种其他资料来一起理解，比如什么是B+树，跟二叉树、B树的区别是什么，B+树存储数据的组织形态是什么样的，什么是页、什么是数据块等等，不然还是看的云里雾里。","like_count":1},{"had_liked":false,"id":296149,"user_name":"朝歌","can_delete":false,"product_type":"c1","uid":2640700,"ip_address":"","ucode":"C28BF3D7AD9D62","user_header":"https://static001.geekbang.org/account/avatar/00/28/4b/3c/576eae7f.jpg","comment_is_top":false,"comment_ctime":1622777633,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"5917744929","product_id":100020801,"comment_content":"老师，有以下两个疑问：<br>1、表在创建时未建主键，有多个唯一非空索引，怎么确认当前表引用的哪个字段做的聚簇索引？<br>2、后来修改某个字段为主键，整个表自动改用主键为聚簇索引的字段，会因此而重建一遍吗？","like_count":1},{"had_liked":false,"id":285259,"user_name":"FuriousEric","can_delete":false,"product_type":"c1","uid":1138576,"ip_address":"","ucode":"0A66DA938976F7","user_header":"https://static001.geekbang.org/account/avatar/00/11/5f/90/711efc88.jpg","comment_is_top":false,"comment_ctime":1616713004,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"5911680300","product_id":100020801,"comment_content":"老师，很多公司会使用雪花算法来生成唯一id当做db主键，根据算法，如果有两台机器(必定有一台机器的workerid)大一些，则生成的id不是单调递增而是趋势递增的，这样必定会造成B+树的页的数据要中间插入，从而影响性能。使用这个算法的公司难道都不考虑这个问题么？","like_count":1},{"had_liked":false,"id":271347,"user_name":"程序员班吉","can_delete":false,"product_type":"c1","uid":1478098,"ip_address":"","ucode":"BD48CF7649609A","user_header":"https://static001.geekbang.org/account/avatar/00/16/8d/d2/8a6be8d8.jpg","comment_is_top":false,"comment_ctime":1609572831,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"5904540127","product_id":100020801,"comment_content":"老师，针对这节课我有几个疑问。<br>1.对于一张表在何时会拆出一颗新的b+树？课中有提到对于一个整数索引的b+树每层直接点大概是1200，我的理解是每个节点数据的大小会影响子节点的数量，进而影响一张表何时创新的b+树，而这里所说的大小是数据页的大小限制决定的吗？<br>2. 一张表如果分成了多颗b+树在查询或者修改的时候如何快速定位到数据所在的那颗树？","like_count":1},{"had_liked":false,"id":211474,"user_name":"漠映残夕","can_delete":false,"product_type":"c1","uid":1201985,"ip_address":"","ucode":"AAE763C91146AB","user_header":"https://static001.geekbang.org/account/avatar/00/12/57/41/22e85c6c.jpg","comment_is_top":false,"comment_ctime":1587969348,"is_pvip":false,"discussion_count":1,"race_medal":0,"score":"5882936644","product_id":100020801,"comment_content":"老师，上面说到，非主键索引的叶子节点内容是主键的值。那没有主键时，非主键索引的叶子节点内容是什么","like_count":1,"discussions":[{"author":{"id":1314724,"avatar":"https://static001.geekbang.org/account/avatar/00/14/0f/a4/0b49469f.jpg","nickname":"木子00","note":"","ucode":"8F78CA722EB29B","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":274366,"discussion_content":"没有主键索引 InnoDB 会以rowid 建立索引的。非主键索引的叶子结点应该存储的事rowid多内容","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1590575199,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":202218,"user_name":"BugBean","can_delete":false,"product_type":"c1","uid":1834181,"ip_address":"","ucode":"B51232281AD9BC","user_header":"https://static001.geekbang.org/account/avatar/00/1b/fc/c5/ff8b770e.jpg","comment_is_top":false,"comment_ctime":1585925233,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"5880892529","product_id":100020801,"comment_content":"老师，分库分表后还用自增id做主键吗","like_count":1},{"had_liked":false,"id":196409,"user_name":"我们在路上","can_delete":false,"product_type":"c1","uid":1183518,"ip_address":"","ucode":"0DB77DB7C64C47","user_header":"https://static001.geekbang.org/account/avatar/00/12/0f/1e/6b6eb987.jpg","comment_is_top":false,"comment_ctime":1585279157,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"5880246453","product_id":100020801,"comment_content":"由于每个非主键索引的叶子节点上都是主键的值。如果用身份证号做主键，那么每个二级索引的叶子节点占用约 20 个字节，而如果用整型做主键，则只要 4 个字节，如果是长整型（bigint）则是 8 个字节。<br><br>老师，我觉得这句话表述有问题：既然把身份证作为主键了，就应该是主键索引；相对应的是自增ID为主键，应该描述为“两种情况下，身份证号为主键的索引树的每个节点，比ID为主键的索引树的每个节点占用空间大”，而不应该是叶子节点","like_count":1},{"had_liked":false,"id":192140,"user_name":"柚子","can_delete":false,"product_type":"c1","uid":1248611,"ip_address":"","ucode":"2F8CC2952E3122","user_header":"https://static001.geekbang.org/account/avatar/00/13/0d/63/85f471e2.jpg","comment_is_top":false,"comment_ctime":1584840077,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"5879807373","product_id":100020801,"comment_content":"再刷","like_count":1},{"had_liked":false,"id":185796,"user_name":"贾森安德森","can_delete":false,"product_type":"c1","uid":1071680,"ip_address":"","ucode":"7FF58646E0AD86","user_header":"https://static001.geekbang.org/account/avatar/00/10/5a/40/59de94de.jpg","comment_is_top":false,"comment_ctime":1583680638,"is_pvip":false,"discussion_count":1,"race_medal":0,"score":"5878647934","product_id":100020801,"comment_content":"看了两遍，终于有点明白了。 。。。。。","like_count":1,"discussions":[{"author":{"id":1135990,"avatar":"https://static001.geekbang.org/account/avatar/00/11/55/76/a55871ab.jpg","nickname":"孙庆良","note":"","ucode":"CA05C4CFEFB0F9","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":309763,"discussion_content":"如果对索引一点不了解的话，不适合直接看这篇。建议先搜索索引的基本介绍，有个大概了解再来看。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1601433408,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":127046,"user_name":"setevn","can_delete":false,"product_type":"c1","uid":1125593,"ip_address":"","ucode":"9858E3C8697122","user_header":"https://static001.geekbang.org/account/avatar/00/11/2c/d9/4c18b4bd.jpg","comment_is_top":false,"comment_ctime":1566543567,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"5861510863","product_id":100020801,"comment_content":"重建主键索引两步会触发两次表重建,  alter table T engine=InnoDB","like_count":1},{"had_liked":false,"id":120207,"user_name":"道法自然","can_delete":false,"product_type":"c1","uid":1182509,"ip_address":"","ucode":"F88FBFB34EE764","user_header":"https://static001.geekbang.org/account/avatar/00/12/0b/2d/4a6d7d41.jpg","comment_is_top":false,"comment_ctime":1564806822,"is_pvip":false,"discussion_count":1,"race_medal":0,"score":"5859774118","product_id":100020801,"comment_content":"数据按id自增有序插入，然后只做逻辑删除，根据 B+ 树的算法，节点的空间使用率是不是只有50%左右？","like_count":1,"discussions":[{"author":{"id":1065351,"avatar":"https://static001.geekbang.org/account/avatar/00/10/41/87/d26efb2e.jpg","nickname":"SuperSnow","note":"","ucode":"84C89AA8083E6A","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":129803,"discussion_content":"这个没关系吧，节点的空间使用率降低与分页有关吧。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1578739881,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":115279,"user_name":"长期规划","can_delete":false,"product_type":"c1","uid":1019332,"ip_address":"","ucode":"5EF65E9115834B","user_header":"https://static001.geekbang.org/account/avatar/00/0f/8d/c4/6f97daea.jpg","comment_is_top":false,"comment_ctime":1563523380,"is_pvip":false,"replies":[{"id":"42143","content":"一般我们说“结点”的时候，就是指代叶节点<br><br>不过也要看上下文哈","user_name":"作者回复","user_name_real":"林晓斌","uid":"1264162","ctime":1563544041,"ip_address":"","comment_id":115279,"utype":1}],"discussion_count":3,"race_medal":0,"score":"5858490676","product_id":100020801,"comment_content":"看完文章，发现之前对聚簇索别有误解😂。原来二级索引中叶结点会有主键，我以前以为是存记录地址呢。<br>有个问题请教下老师，一个结节（一般情况）下是占硬盘上的一页吗","like_count":1,"discussions":[{"author":{"id":1264162,"avatar":"https://static001.geekbang.org/account/avatar/00/13/4a/22/2681d602.jpg","nickname":"林晓斌","note":"","ucode":"CDE42D44F26240","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":459040,"discussion_content":"一般我们说“结点”的时候，就是指代叶节点\n\n不过也要看上下文哈","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1563544041,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1019332,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/8d/c4/6f97daea.jpg","nickname":"长期规划","note":"","ucode":"5EF65E9115834B","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":2405,"discussion_content":"噢噢，明白了","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1563544974,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":1,"child_discussions":[{"author":{"id":1065351,"avatar":"https://static001.geekbang.org/account/avatar/00/10/41/87/d26efb2e.jpg","nickname":"SuperSnow","note":"","ucode":"84C89AA8083E6A","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1019332,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/8d/c4/6f97daea.jpg","nickname":"长期规划","note":"","ucode":"5EF65E9115834B","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":129812,"discussion_content":"MyISAM是存的地址。如果修改了数据的位置的情况，InnoDB这种模式是不是就方便些。","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1578740344,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":2405,"ip_address":""},"score":129812,"extra":""}]}]},{"had_liked":false,"id":111203,"user_name":"恐龙虾了个皮了个姜哩个哩个啷","can_delete":false,"product_type":"c1","uid":1237435,"ip_address":"","ucode":"5AFDDF65BE461F","user_header":"https://static001.geekbang.org/account/avatar/00/12/e1/bb/cbeae2fa.jpg","comment_is_top":false,"comment_ctime":1562509992,"is_pvip":false,"discussion_count":1,"race_medal":0,"score":"5857477288","product_id":100020801,"comment_content":"老师你好，在索引维护部分有个问题，我看您说的是当插入ID为400的数据时，需要逻辑上挪动后边的数据，为什么是逻辑上，我搜索了相关知识了解到实际数据存储是按照聚簇索引存储的，因为聚簇索引B+树叶子节点存储的不就是实际数据行嘛？所以对于您说的这个逻辑上能解释一下嘛？还有我理解的实际存储情况是对的嘛？","like_count":1,"discussions":[{"author":{"id":1076899,"avatar":"https://static001.geekbang.org/account/avatar/00/10/6e/a3/bec136c0.jpg","nickname":"cxzm","note":"","ucode":"E94ACEF9D507A6","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":166590,"discussion_content":"InnoDB数据页中的记录是通过单向链表来关联的，实际每条记录的存储位置是随机的。","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1581415035,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":102991,"user_name":"redrain","can_delete":false,"product_type":"c1","uid":1292965,"ip_address":"","ucode":"1013F15FA1A423","user_header":"https://static001.geekbang.org/account/avatar/00/13/ba/a5/9f5ab366.jpg","comment_is_top":false,"comment_ctime":1560344070,"is_pvip":false,"discussion_count":2,"race_medal":0,"score":"5855311366","product_id":100020801,"comment_content":"老师，既然主键索引存储的是整行，那么只要有主键的表，索引长度应该基本都会大于表的占用空间大小吧，但实际好像不是这样，还是说表的大小包括了索引长度？","like_count":1,"discussions":[{"author":{"id":1065351,"avatar":"https://static001.geekbang.org/account/avatar/00/10/41/87/d26efb2e.jpg","nickname":"SuperSnow","note":"","ucode":"84C89AA8083E6A","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":129834,"discussion_content":"有主键的表就是有索引的表，也就是索引组织表，而索引组织表就是你说的表。不会存在有一个表，还有另外一个（索引+含有主键表）的表了。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1578740974,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1311032,"avatar":"https://static001.geekbang.org/account/avatar/00/14/01/38/104b96a3.jpg","nickname":"谭伟","note":"","ucode":"AEC724819A2773","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":269,"discussion_content":"主键是key,值是value，其它索引都只存了主键的key","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1561375784,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":101668,"user_name":"Sinyo","can_delete":false,"product_type":"c1","uid":1307297,"ip_address":"","ucode":"57B243E7AB86A5","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTJAibnPX9jW8kqLcIfibjic8GbkQkEUYyFKJkc39hZhibVlNrqwTjdLozkqibI2IwACd5YzofYickNxFnZg/132","comment_is_top":false,"comment_ctime":1559907715,"is_pvip":false,"discussion_count":1,"race_medal":0,"score":"5854875011","product_id":100020801,"comment_content":"老师，您提到叶子节点最底层满了就要往下扩展，请问这个扩展是会把原来叶子节点关联的页 移动到新的下层叶子节点下面么？","like_count":1,"discussions":[{"author":{"id":1065351,"avatar":"https://static001.geekbang.org/account/avatar/00/10/41/87/d26efb2e.jpg","nickname":"SuperSnow","note":"","ucode":"84C89AA8083E6A","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":129856,"discussion_content":"会的","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1578741965,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":89085,"user_name":"dayBlade","can_delete":false,"product_type":"c1","uid":1510022,"ip_address":"","ucode":"955A31A93EB02F","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTLVLGcUR9ibnyvzKcQ1eG8rf7d95fh3uUNO8cXxkeL8CUyDwssfXNbHdicAuicrcmeDXpreVNYibQuGGQ/132","comment_is_top":false,"comment_ctime":1556073862,"is_pvip":false,"replies":[{"id":"32283","content":"表小的时候问题不大，不过小表索引维护代价并不大，所以其实也是最好能按照查询需要建的。<br><br>总之，这不是个好习惯。。","user_name":"作者回复","user_name_real":"林晓斌","uid":"1264162","ctime":1556384679,"ip_address":"","comment_id":89085,"utype":1}],"discussion_count":2,"race_medal":0,"score":"5851041158","product_id":100020801,"comment_content":"我阿里的老大有时候建表都不用索引😂不建索引好吗？","like_count":1,"discussions":[{"author":{"id":1264162,"avatar":"https://static001.geekbang.org/account/avatar/00/13/4a/22/2681d602.jpg","nickname":"林晓斌","note":"","ucode":"CDE42D44F26240","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":448011,"discussion_content":"表小的时候问题不大，不过小表索引维护代价并不大，所以其实也是最好能按照查询需要建的。\n\n总之，这不是个好习惯。。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1556384679,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1199348,"avatar":"https://static001.geekbang.org/account/avatar/00/12/4c/f4/8eda0b19.jpg","nickname":"吃鸡吃鸡","note":"","ucode":"7C54E2C1A3E8B2","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":6610,"discussion_content":"高并发场景下，表小也不行，问题会被放大🤣","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1566990297,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":87327,"user_name":"小烟","can_delete":false,"product_type":"c1","uid":1056320,"ip_address":"","ucode":"AB7B36A11EF351","user_header":"https://static001.geekbang.org/account/avatar/00/10/1e/40/e2a2ef51.jpg","comment_is_top":false,"comment_ctime":1555569385,"is_pvip":false,"replies":[{"id":"31595","content":"👍","user_name":"作者回复","user_name_real":"林晓斌","uid":"1264162","ctime":1555724833,"ip_address":"","comment_id":87327,"utype":1}],"discussion_count":1,"race_medal":0,"score":"5850536681","product_id":100020801,"comment_content":"刷第二遍ing ","like_count":1,"discussions":[{"author":{"id":1264162,"avatar":"https://static001.geekbang.org/account/avatar/00/13/4a/22/2681d602.jpg","nickname":"林晓斌","note":"","ucode":"CDE42D44F26240","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":447401,"discussion_content":"👍","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1555724833,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":82878,"user_name":"渡劫达摩","can_delete":false,"product_type":"c1","uid":1465391,"ip_address":"","ucode":"A7005CBB34B698","user_header":"https://static001.geekbang.org/account/avatar/00/16/5c/2f/a9c8d42f.jpg","comment_is_top":false,"comment_ctime":1554342666,"is_pvip":false,"replies":[{"id":"30013","content":"删除一条不会的<br><br>主键没有要求“连续”存放哈，中间有个把空洞没事的<br><br>空洞太大了才会触发合并","user_name":"作者回复","user_name_real":"林晓斌","uid":"1264162","ctime":1554431935,"ip_address":"","comment_id":82878,"utype":1}],"discussion_count":1,"race_medal":0,"score":"5849309962","product_id":100020801,"comment_content":"老师，譬如身份证做主键，可以保证数据唯一性。如果一个表，是自增主键，那么插入数据不会造成页分裂，但是如果有一天删除一条记录，是不是会出现页合并的现象，因为主键不连续了","like_count":1,"discussions":[{"author":{"id":1264162,"avatar":"https://static001.geekbang.org/account/avatar/00/13/4a/22/2681d602.jpg","nickname":"林晓斌","note":"","ucode":"CDE42D44F26240","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":445761,"discussion_content":"删除一条不会的\n\n主键没有要求“连续”存放哈，中间有个把空洞没事的\n\n空洞太大了才会触发合并","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1554431935,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":81987,"user_name":"杨春鹏","can_delete":false,"product_type":"c1","uid":1172056,"ip_address":"","ucode":"518F38232F97B5","user_header":"https://static001.geekbang.org/account/avatar/00/11/e2/58/8c8897c8.jpg","comment_is_top":false,"comment_ctime":1554095938,"is_pvip":false,"replies":[{"id":"30019","content":"如果是“按索引查找”，那就不是扫描，而是用B+树查找，这个是可以快速定位记录的","user_name":"作者回复","user_name_real":"林晓斌","uid":"1264162","ctime":1554432495,"ip_address":"","comment_id":81987,"utype":1}],"discussion_count":1,"race_medal":0,"score":"5849063234","product_id":100020801,"comment_content":"全表扫描，是扫描整张表;<br>按索引查找，不也是扫描整个数组吗？难道不是类似于扫描整张表？<br>","like_count":1,"discussions":[{"author":{"id":1264162,"avatar":"https://static001.geekbang.org/account/avatar/00/13/4a/22/2681d602.jpg","nickname":"林晓斌","note":"","ucode":"CDE42D44F26240","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":445418,"discussion_content":"如果是“按索引查找”，那就不是扫描，而是用B+树查找，这个是可以快速定位记录的","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1554432495,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":64738,"user_name":"妥妥","can_delete":false,"product_type":"c1","uid":1206716,"ip_address":"","ucode":"5BC1C85CF60CAD","user_header":"https://static001.geekbang.org/account/avatar/00/12/69/bc/c22bf219.jpg","comment_is_top":false,"comment_ctime":1548897251,"is_pvip":true,"replies":[{"id":"22912","content":"Innodb 会给你创建一个不可见的主键索引","user_name":"作者回复","user_name_real":"林晓斌","uid":"1264162","ctime":1548908115,"ip_address":"","comment_id":64738,"utype":1}],"discussion_count":1,"race_medal":0,"score":"5843864547","product_id":100020801,"comment_content":"老师，我想问一下，一个表如果没有建立任何的索引，这个表的数据是以什么方式存储的呢？","like_count":1,"discussions":[{"author":{"id":1264162,"avatar":"https://static001.geekbang.org/account/avatar/00/13/4a/22/2681d602.jpg","nickname":"林晓斌","note":"","ucode":"CDE42D44F26240","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":438154,"discussion_content":"Innodb 会给你创建一个不可见的主键索引","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1548908115,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":62134,"user_name":"自信来自成功的体验","can_delete":false,"product_type":"c1","uid":1358428,"ip_address":"","ucode":"BD12277AF8BC45","user_header":"https://static001.geekbang.org/account/avatar/00/14/ba/5c/b666bce0.jpg","comment_is_top":false,"comment_ctime":1547952587,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"5842919883","product_id":100020801,"comment_content":"老师，能不能分享一下您当时阅读源码的一些经验心得或者用一个例子给我们做一次源码剖析？感觉这样的话内心更扎实","like_count":1},{"had_liked":false,"id":61727,"user_name":"如明如月","can_delete":false,"product_type":"c1","uid":1161049,"ip_address":"","ucode":"0D7FD0FCC11FAF","user_header":"https://static001.geekbang.org/account/avatar/00/11/b7/59/cf13fc22.jpg","comment_is_top":false,"comment_ctime":1547782651,"is_pvip":false,"replies":[{"id":"21907","content":"DBA可能也一脸委屈， “臣妾也是没办法呀^_^”","user_name":"作者回复","user_name_real":"林晓斌","uid":"1264162","ctime":1547785497,"ip_address":"","comment_id":61727,"utype":1}],"discussion_count":2,"race_medal":0,"score":"5842749947","product_id":100020801,"comment_content":"关于最后说的“可以监控information_schema.Innodb_trx表，设置事务阈值，超过就报警或则kill。”这种神奇的操作深有体会，有一个业务场景连接中断，最后发现DBA设置事务超过5分钟被kill掉了。排查了mysql超时时间还有数据库连接池设置都没有问题，最后问了DBA才发现原来是这个原因。","like_count":1,"discussions":[{"author":{"id":1264162,"avatar":"https://static001.geekbang.org/account/avatar/00/13/4a/22/2681d602.jpg","nickname":"林晓斌","note":"","ucode":"CDE42D44F26240","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":436971,"discussion_content":"DBA可能也一脸委屈， “臣妾也是没办法呀^_^”","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1547785497,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1065351,"avatar":"https://static001.geekbang.org/account/avatar/00/10/41/87/d26efb2e.jpg","nickname":"SuperSnow","note":"","ucode":"84C89AA8083E6A","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":129843,"discussion_content":"这种情况应该从应用开发层面入手解决，不要这么长的事务。","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1578741432,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":61296,"user_name":"八百","can_delete":false,"product_type":"c1","uid":1253530,"ip_address":"","ucode":"79F1F79ADF5A00","user_header":"https://static001.geekbang.org/account/avatar/00/13/20/9a/3b1c65fd.jpg","comment_is_top":false,"comment_ctime":1547655024,"is_pvip":false,"replies":[{"id":"21821","content":"额，“不准使用自增id”，第一次看到这样的规定。可否去了解一下原因，然后跟我们分享下^_^","user_name":"作者回复","user_name_real":"林晓斌","uid":"1264162","ctime":1547690283,"ip_address":"","comment_id":61296,"utype":1}],"discussion_count":5,"race_medal":0,"score":"5842622320","product_id":100020801,"comment_content":"公司要求不准用自增id，让用uuid，😂为啥。。难道为了以后分库吗","like_count":1,"discussions":[{"author":{"id":1264162,"avatar":"https://static001.geekbang.org/account/avatar/00/13/4a/22/2681d602.jpg","nickname":"林晓斌","note":"","ucode":"CDE42D44F26240","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":436823,"discussion_content":"额，“不准使用自增id”，第一次看到这样的规定。可否去了解一下原因，然后跟我们分享下^_^","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1547690283,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1246178,"avatar":"https://static001.geekbang.org/account/avatar/00/13/03/e2/5768d26e.jpg","nickname":"inrtyx","note":"","ucode":"81CD18FF34ABAB","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":212981,"discussion_content":"估计是怕展示在外面，可以被猜出来吧","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1585039213,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1489177,"avatar":"https://static001.geekbang.org/account/avatar/00/16/b9/19/f4ef2c9a.jpg","nickname":"秦穆之","note":"","ucode":"709C49BFCBB776","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":61894,"discussion_content":"我们的DBA都是鼓励使用自增主键，但是不建议使用该字段做业务的强耦合。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1574785570,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":2,"child_discussions":[{"author":{"id":1334527,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/WuVCibYmuGqFLnfIrr0BmkdzHwkialB0DibJ0YnymNNO2Wicy76ZxSvjD66sPVsd9SjkicSS4Z2iadTeOn7zGfwh9sxg/132","nickname":"灵犀andy","note":"","ucode":"3C3C36B070676C","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1489177,"avatar":"https://static001.geekbang.org/account/avatar/00/16/b9/19/f4ef2c9a.jpg","nickname":"秦穆之","note":"","ucode":"709C49BFCBB776","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":104023,"discussion_content":"该字段做业务的强耦合是什么意思？","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1577409694,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":61894,"ip_address":""},"score":104023,"extra":""},{"author":{"id":1065351,"avatar":"https://static001.geekbang.org/account/avatar/00/10/41/87/d26efb2e.jpg","nickname":"SuperSnow","note":"","ucode":"84C89AA8083E6A","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1334527,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/WuVCibYmuGqFLnfIrr0BmkdzHwkialB0DibJ0YnymNNO2Wicy76ZxSvjD66sPVsd9SjkicSS4Z2iadTeOn7zGfwh9sxg/132","nickname":"灵犀andy","note":"","ucode":"3C3C36B070676C","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":129844,"discussion_content":"在其他表中以此主键做为外键时，设置成外键约束。也就是不要有外键约束，这个约束业务逻辑是在程序中处理的。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1578741531,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":104023,"ip_address":""},"score":129844,"extra":""}]}]},{"had_liked":false,"id":53449,"user_name":"阿May的海绵宝宝","can_delete":false,"product_type":"c1","uid":1203058,"ip_address":"","ucode":"AA2B28DF8BEF80","user_header":"https://static001.geekbang.org/account/avatar/00/12/5b/72/4f8a4297.jpg","comment_is_top":false,"comment_ctime":1545646680,"is_pvip":false,"replies":[{"id":"19371","content":"每一层不止一个数据页哦","user_name":"作者回复","user_name_real":"林晓斌","uid":"1264162","ctime":1545654803,"ip_address":"","comment_id":53449,"utype":1}],"discussion_count":1,"race_medal":0,"score":"5840613976","product_id":100020801,"comment_content":"应该是这样理解吧？树高n，每一层就是一个数据块，最后一层包含若干个数据页，每个数据页里面有若干个数据行。","like_count":1,"discussions":[{"author":{"id":1264162,"avatar":"https://static001.geekbang.org/account/avatar/00/13/4a/22/2681d602.jpg","nickname":"林晓斌","note":"","ucode":"CDE42D44F26240","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":434142,"discussion_content":"每一层不止一个数据页哦","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1545654803,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":48147,"user_name":"赵威","can_delete":false,"product_type":"c1","uid":1299252,"ip_address":"","ucode":"6EB9425D9ED5B0","user_header":"https://static001.geekbang.org/account/avatar/00/13/d3/34/711b2fc1.jpg","comment_is_top":false,"comment_ctime":1544367701,"is_pvip":false,"replies":[{"id":"17146","content":"是，不过N叉树的树更“矮”","user_name":"作者回复","user_name_real":"林晓斌","uid":"1264162","ctime":1544372470,"ip_address":"","comment_id":48147,"utype":1}],"discussion_count":1,"race_medal":0,"score":"5839334997","product_id":100020801,"comment_content":"林老师你好，二叉树树高20就有可能要访问20个数据块，是不是意思每层对应一个数据块存储？树高多少就对应几个数据块？n叉树也是这样吗","like_count":1,"discussions":[{"author":{"id":1264162,"avatar":"https://static001.geekbang.org/account/avatar/00/13/4a/22/2681d602.jpg","nickname":"林晓斌","note":"","ucode":"CDE42D44F26240","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":432051,"discussion_content":"是，不过N叉树的树更“矮”","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1544372470,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":46584,"user_name":"……","can_delete":false,"product_type":"c1","uid":1304775,"ip_address":"","ucode":"A4CA8D58022E36","user_header":"https://static001.geekbang.org/account/avatar/00/13/e8/c7/aba1275d.jpg","comment_is_top":false,"comment_ctime":1543939921,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"5838907217","product_id":100020801,"comment_content":"老师的课太值了，无论是老师的文章还是留言，都有值得学习的地方和自己没有关注到的点。","like_count":1},{"had_liked":false,"id":44200,"user_name":"吴昊199it","can_delete":false,"product_type":"c1","uid":1004553,"ip_address":"","ucode":"BBBF336E2E831B","user_header":"https://static001.geekbang.org/account/avatar/00/0f/54/09/40ac13b8.jpg","comment_is_top":false,"comment_ctime":1543382736,"is_pvip":false,"replies":[{"id":"15796","content":"太长","user_name":"作者回复","user_name_real":"林晓斌","uid":"1264162","ctime":1543406176,"ip_address":"","comment_id":44200,"utype":1}],"discussion_count":1,"race_medal":0,"score":"5838350032","product_id":100020801,"comment_content":"老师，UUID作为主键，您怎么看","like_count":1,"discussions":[{"author":{"id":1264162,"avatar":"https://static001.geekbang.org/account/avatar/00/13/4a/22/2681d602.jpg","nickname":"林晓斌","note":"","ucode":"CDE42D44F26240","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":430676,"discussion_content":"太长","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1543406176,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":42385,"user_name":"Howie","can_delete":false,"product_type":"c1","uid":1127629,"ip_address":"","ucode":"30393BD92D9ADD","user_header":"https://static001.geekbang.org/account/avatar/00/11/34/cd/4e2cd598.jpg","comment_is_top":false,"comment_ctime":1542945538,"is_pvip":false,"replies":[{"id":"15144","content":"每一次“找儿子节点”都可能触发一次读盘","user_name":"作者回复","user_name_real":"林晓斌","uid":"1264162","ctime":1542947894,"ip_address":"","comment_id":42385,"utype":1}],"discussion_count":1,"race_medal":0,"score":"5837912834","product_id":100020801,"comment_content":"二叉树和其他数据结构在读磁盘上有什么区别呢，为什么二叉树就更耗时间呢","like_count":1,"discussions":[{"author":{"id":1264162,"avatar":"https://static001.geekbang.org/account/avatar/00/13/4a/22/2681d602.jpg","nickname":"林晓斌","note":"","ucode":"CDE42D44F26240","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":430074,"discussion_content":"每一次“找儿子节点”都可能触发一次读盘","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1542947894,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":42295,"user_name":"滔滔","can_delete":false,"product_type":"c1","uid":1303342,"ip_address":"","ucode":"6968B5771AF79D","user_header":"https://static001.geekbang.org/account/avatar/00/13/e3/2e/77ad18f4.jpg","comment_is_top":false,"comment_ctime":1542937892,"is_pvip":false,"replies":[{"id":"15133","content":"是的，是指一个数据页。分裂就是一变俩，再分出去一部分。","user_name":"作者回复","user_name_real":"林晓斌","uid":"1264162","ctime":1542941052,"ip_address":"","comment_id":42295,"utype":1}],"discussion_count":1,"race_medal":0,"score":"5837905188","product_id":100020801,"comment_content":"文中提到&quot;数据页写满了……&quot;，请问这里说的数据页指的是内存中的一个页(page)吗？哪里有详细关于页分裂的说明？","like_count":1,"discussions":[{"author":{"id":1264162,"avatar":"https://static001.geekbang.org/account/avatar/00/13/4a/22/2681d602.jpg","nickname":"林晓斌","note":"","ucode":"CDE42D44F26240","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":430038,"discussion_content":"是的，是指一个数据页。分裂就是一变俩，再分出去一部分。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1542941052,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":41931,"user_name":"Simon","can_delete":false,"product_type":"c1","uid":1303382,"ip_address":"","ucode":"97A1BF7C7306A4","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/amyOaS8hZJUQkiame9IxhSrh9Hsg7erkSdPwocSp2vB2PA0Tib32WBZm5s3oCkiaBVp8HMXlfXiczJP1xunCicvh1fg/132","comment_is_top":false,"comment_ctime":1542876914,"is_pvip":false,"replies":[{"id":"15039","content":"合并不是频繁操作，所以对删除的性能影响是可以忽略的。如果是随机删除数据确实差不多","user_name":"作者回复","user_name_real":"林晓斌","uid":"1264162","ctime":1542877526,"ip_address":"","comment_id":41931,"utype":1}],"discussion_count":1,"race_medal":0,"score":"5837844210","product_id":100020801,"comment_content":"老师您好，请问一下，自增主键是不是只对数据插入操作会简化索引的维护，如果是对数据的删除操作，因为删除操作会涉及页合并，所以对索引的维护是不是就跟普通主键索引一样了？谢谢！","like_count":1,"discussions":[{"author":{"id":1264162,"avatar":"https://static001.geekbang.org/account/avatar/00/13/4a/22/2681d602.jpg","nickname":"林晓斌","note":"","ucode":"CDE42D44F26240","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":429950,"discussion_content":"合并不是频繁操作，所以对删除的性能影响是可以忽略的。如果是随机删除数据确实差不多","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1542877526,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":41803,"user_name":"信信","can_delete":false,"product_type":"c1","uid":1303865,"ip_address":"","ucode":"8DF0EC045579FD","user_header":"https://static001.geekbang.org/account/avatar/00/13/e5/39/951f89c8.jpg","comment_is_top":false,"comment_ctime":1542852952,"is_pvip":false,"replies":[{"id":"15028","content":"嗯嗯，鱼和熊掌不可兼得。<br><br>不过我们是假设业务必须把这个字段设置为唯一索引。不把它设置成主键，设置成唯一索引也一样要面对这个问题。","user_name":"作者回复","user_name_real":"林晓斌","uid":"1264162","ctime":1542872719,"ip_address":"","comment_id":41803,"utype":1}],"discussion_count":1,"race_medal":0,"score":"5837820248","product_id":100020801,"comment_content":"有个疑问，文中提到KV场景适合用业务字段直接做主键，因为没有其他索引，不会浪费空间，但岂不是分裂现象仍然严重？因为不能保证业余字段顺序插入啊","like_count":1,"discussions":[{"author":{"id":1264162,"avatar":"https://static001.geekbang.org/account/avatar/00/13/4a/22/2681d602.jpg","nickname":"林晓斌","note":"","ucode":"CDE42D44F26240","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":429906,"discussion_content":"嗯嗯，鱼和熊掌不可兼得。\n\n不过我们是假设业务必须把这个字段设置为唯一索引。不把它设置成主键，设置成唯一索引也一样要面对这个问题。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1542872719,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":41654,"user_name":"落叶飞逝的恋","can_delete":false,"product_type":"c1","uid":1046429,"ip_address":"","ucode":"F9A95DB28BCF1E","user_header":"https://static001.geekbang.org/account/avatar/00/0f/f7/9d/be04b331.jpg","comment_is_top":false,"comment_ctime":1542814212,"is_pvip":false,"replies":[{"id":"15035","content":"赞逻辑，会推导是这次系统设计思路非常好的能力","user_name":"作者回复","user_name_real":"林晓斌","uid":"1264162","ctime":1542876865,"ip_address":"","comment_id":41654,"utype":1}],"discussion_count":1,"race_medal":0,"score":"5837781508","product_id":100020801,"comment_content":"关于思考题：<br>其实文中已经给出了答案：首先如果查询非聚集索引k列的话，其实最终还是利用到主键索引去查询最终的值。所以，对于思考题中的重建索引的话，如果直接删除聚集索引，那么这个表中建立的其他的非聚集索引都将无效，因为最后的直接索引都删除了，也通过索引查询不了。所以与之对应的删除非聚集索引而言，直接drop聚集索引的所消耗的性能是巨大的。","like_count":1,"discussions":[{"author":{"id":1264162,"avatar":"https://static001.geekbang.org/account/avatar/00/13/4a/22/2681d602.jpg","nickname":"林晓斌","note":"","ucode":"CDE42D44F26240","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":429870,"discussion_content":"赞逻辑，会推导是这次系统设计思路非常好的能力","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1542876865,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":41641,"user_name":"SplitMozzi💋","can_delete":false,"product_type":"c1","uid":1301969,"ip_address":"","ucode":"D59DE97DDF8C30","user_header":"https://static001.geekbang.org/account/avatar/00/13/dd/d1/ce5a4ed5.jpg","comment_is_top":false,"comment_ctime":1542813117,"is_pvip":false,"discussion_count":1,"race_medal":0,"score":"5837780413","product_id":100020801,"comment_content":"老师，以 InnoDB 的一个整数字段索引为例，这个 N 差不多是 1200。这个1200是怎么计算出来的？","like_count":1,"discussions":[{"author":{"id":1065351,"avatar":"https://static001.geekbang.org/account/avatar/00/10/41/87/d26efb2e.jpg","nickname":"SuperSnow","note":"","ucode":"84C89AA8083E6A","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":129867,"discussion_content":"N叉树中非叶子节点存放的是索引信息，索引包含key和point指针。point指针固定为6个字节，假如key为10个字节，那么单个索引就是16个字节。如果B+树中页大小为16K，那么一个页就可以存储1024个索引或N叉，此时N就是1024。由此，你如果将Key设置成8个，可能就是1200个左右。","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1578742794,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":41404,"user_name":"23333菜","can_delete":false,"product_type":"c1","uid":1302649,"ip_address":"","ucode":"582576647F18AE","user_header":"https://static001.geekbang.org/account/avatar/00/13/e0/79/75177e2f.jpg","comment_is_top":false,"comment_ctime":1542773610,"is_pvip":false,"replies":[{"id":"14840","content":"比如一个innodb 有一个主键索引和2个普通索引。这样就三棵树对吧。<br><br>然后InnoDB只要记录每棵树的根节点的位置就行了，有根节点，B+树就能拉出一整棵树","user_name":"作者回复","user_name_real":"林晓斌","uid":"1264162","ctime":1542779329,"ip_address":"","comment_id":41404,"utype":1}],"discussion_count":1,"race_medal":0,"score":"5837740906","product_id":100020801,"comment_content":"在 InnoDB 中，表都是根据主键顺序以索引的形式存放的，这种存储方式的表称为索引组织表。<br><br>这句话怎么理解？<br>索引表内部是B+的结构，那所有索引表在innodb中是怎么的结构，一条语句如何快速定位到某一个索引表的？<br>我的猜测是不是所有的索引表也是存在于一棵B+树上呢？通过一些索引表自身的标志？","like_count":1,"discussions":[{"author":{"id":1264162,"avatar":"https://static001.geekbang.org/account/avatar/00/13/4a/22/2681d602.jpg","nickname":"林晓斌","note":"","ucode":"CDE42D44F26240","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":429794,"discussion_content":"比如一个innodb 有一个主键索引和2个普通索引。这样就三棵树对吧。\n\n然后InnoDB只要记录每棵树的根节点的位置就行了，有根节点，B+树就能拉出一整棵树","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1542779329,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":41225,"user_name":"Justin","can_delete":false,"product_type":"c1","uid":1305601,"ip_address":"","ucode":"D49723FEA66731","user_header":"https://static001.geekbang.org/account/avatar/00/13/ec/01/978d54af.jpg","comment_is_top":false,"comment_ctime":1542761286,"is_pvip":false,"discussion_count":2,"race_medal":0,"score":"5837728582","product_id":100020801,"comment_content":"主键索引中如果存储整行数据的话，数据库怎么辨别数据是在内存中还是存在磁盘上呢？内存中的索引是整个索引的一部分吗？还是说内存中的索引存的是整行的地址呢？希望能得到解答 谢谢","like_count":1,"discussions":[{"author":{"id":1134266,"avatar":"https://static001.geekbang.org/account/avatar/00/11/4e/ba/580ec429.jpg","nickname":"小兔子乖乖","note":"","ucode":"E5CC0258CF8858","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":370725,"discussion_content":"索引有可能在内存中也有可能在磁盘上，如果查询语句要用到某个索引，对应的页在内存中就可以直接读内存，如果不在内存中的话需要从磁盘读到内存中来，一个数据页最少都存了2行数据","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1619517926,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1065351,"avatar":"https://static001.geekbang.org/account/avatar/00/10/41/87/d26efb2e.jpg","nickname":"SuperSnow","note":"","ucode":"84C89AA8083E6A","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":129872,"discussion_content":"索引应该在内存中，应该存的是整行的地址吧。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1578743300,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":360741,"user_name":"成葛格","can_delete":false,"product_type":"c1","uid":1030745,"ip_address":"广东","ucode":"A09A57D891FA50","user_header":"https://static001.geekbang.org/account/avatar/00/0f/ba/59/ffa298a2.jpg","comment_is_top":false,"comment_ctime":1666798865,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1666798865","product_id":100020801,"comment_content":"如果一个表没有主键，那么索引数据是怎么存的呢？","like_count":0},{"had_liked":false,"id":360520,"user_name":"Geek_3500af","can_delete":false,"product_type":"c1","uid":2930749,"ip_address":"浙江","ucode":"C24640BA2D1578","user_header":"","comment_is_top":false,"comment_ctime":1666610974,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1666610974","product_id":100020801,"comment_content":"老师，请教个问题：<br>数据的插入会引起 页分裂<br>数据的物理删除是直接删除磁盘上的数据吗？会引起页合并吗？<br>","like_count":0},{"had_liked":false,"id":359080,"user_name":"Geek_25a2c9","can_delete":false,"product_type":"c1","uid":2878622,"ip_address":"北京","ucode":"46EE5F7637A859","user_header":"","comment_is_top":false,"comment_ctime":1665223527,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1665223527","product_id":100020801,"comment_content":"老师似乎忽略了随着数据的插入root节点的调整","like_count":0},{"had_liked":false,"id":358720,"user_name":"Neil43","can_delete":false,"product_type":"c1","uid":1067171,"ip_address":"广东","ucode":"10F3039818E3BE","user_header":"https://wx.qlogo.cn/mmopen/vi_32/2nM9PaEsM4XTZuqQiavicyRuibcp8n1tBpL9mFTRbeqn47dzU9eGNoicJYUOO8tUiaU6pT2D8rjmG0DlBv1eFVWZrkQ/132","comment_is_top":false,"comment_ctime":1664618850,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1664618850","product_id":100020801,"comment_content":"我的理解：<br>重建主键索引的过程，会直接影响非主键索引，原有存储的非主键索引可能失效，因此如果要重建主键索引，同时需要重建非主键索引；重建非主键索引可以直接重建操作。","like_count":0},{"had_liked":false,"id":358284,"user_name":"张麻了","can_delete":false,"product_type":"c1","uid":3177025,"ip_address":"江苏","ucode":"1611DAE6F09397","user_header":"https://static001.geekbang.org/account/avatar/00/30/7a/41/0025eeec.jpg","comment_is_top":false,"comment_ctime":1664171368,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1664171368","product_id":100020801,"comment_content":"最近刚刚好在看考研数据结构B+树,B+树的节点应该是:最多有m个分支,最少m&#47;2向上取整个分支,每个分支对应一个节点里面的值,B+树的父节点的值是其子分支中最大的;<br>这里是不是画错了,画的是B树的图","like_count":0},{"had_liked":false,"id":358113,"user_name":"joey","can_delete":false,"product_type":"c1","uid":1336709,"ip_address":"广东","ucode":"499DF3B1387E8B","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/l4QiaERRErVOK3pAp783YvYqaia1AAJfEicib3ASkuWksiaNXWhsyc6gNM1Ga1H5dApE0ONKYlkSd0dqReHH4kguMfQ/132","comment_is_top":false,"comment_ctime":1663917020,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1663917020","product_id":100020801,"comment_content":"请问下：<br>1. B+树索引的非叶子节点存的是key和指向下一个结点的指针，这个指针信息是如何获取的？<br>2. 叶子节点之间是一个‘双向链表’，每个叶子节点都存有相邻叶子节点的指针。这个指针信息又是如何获取的？<br>我理解索引数据文件在磁盘上并没有这种指针的概念，只有加载到内存才会‘生成’？","like_count":0},{"had_liked":false,"id":351268,"user_name":"王生勃","can_delete":false,"product_type":"c1","uid":2510723,"ip_address":"","ucode":"E2F4E5650CA089","user_header":"https://static001.geekbang.org/account/avatar/00/26/4f/83/e256d0e8.jpg","comment_is_top":false,"comment_ctime":1657657758,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1657657758","product_id":100020801,"comment_content":"太牛逼了 深入浅出 ","like_count":0},{"had_liked":false,"id":349316,"user_name":"biby","can_delete":false,"product_type":"c1","uid":1153512,"ip_address":"","ucode":"2BC92D2FD960A9","user_header":"","comment_is_top":false,"comment_ctime":1655883185,"is_pvip":false,"discussion_count":0,"race_medal":1,"score":"1655883185","product_id":100020801,"comment_content":"没有创建主键索引，只有普通索引，查询的时候是如何做回表的，innodb是会创建一个默认的隐藏索引吗？","like_count":0},{"had_liked":false,"id":348925,"user_name":"我爱夜来香","can_delete":false,"product_type":"c1","uid":2609930,"ip_address":"","ucode":"10761E677EF05F","user_header":"https://static001.geekbang.org/account/avatar/00/27/d3/0a/92640aae.jpg","comment_is_top":false,"comment_ctime":1655556516,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1655556516","product_id":100020801,"comment_content":"老师,有个问题,假如某列全是字符串的话,怎么遍历B+Tree呢?是对字符串进行hash吗","like_count":0},{"had_liked":false,"id":346098,"user_name":"平凡之路","can_delete":false,"product_type":"c1","uid":1669273,"ip_address":"","ucode":"96CE12339BD5FD","user_header":"https://static001.geekbang.org/account/avatar/00/19/78/99/6060eb2d.jpg","comment_is_top":false,"comment_ctime":1652837960,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1652837960","product_id":100020801,"comment_content":"老师，咨询个问题，我用uuid做业务id，但是又不能做主键，我加一个自增主键，但这个自增主键在业务上没有意义，平时也不会用到自增主键查询，一般根据uuid的业务id查询，建立一个uuid普通索引，这样合理吗？","like_count":0},{"had_liked":false,"id":346096,"user_name":"平凡之路","can_delete":false,"product_type":"c1","uid":1669273,"ip_address":"","ucode":"96CE12339BD5FD","user_header":"https://static001.geekbang.org/account/avatar/00/19/78/99/6060eb2d.jpg","comment_is_top":false,"comment_ctime":1652837524,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1652837524","product_id":100020801,"comment_content":"刷几遍了，每次都有收获","like_count":0},{"had_liked":false,"id":345578,"user_name":"Edgar Huang","can_delete":false,"product_type":"c1","uid":2709243,"ip_address":"","ucode":"9369D45C0C5A00","user_header":"https://static001.geekbang.org/account/avatar/00/29/56/fb/3342e017.jpg","comment_is_top":false,"comment_ctime":1652411703,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1652411703","product_id":100020801,"comment_content":"如果对于分库分表的场景，自增ID就不适合了，这个时候该怎么办呢？","like_count":0},{"had_liked":false,"id":345243,"user_name":"Geek1173","can_delete":false,"product_type":"c1","uid":1732366,"ip_address":"","ucode":"865F0E493E7EDC","user_header":"https://thirdwx.qlogo.cn/mmopen/vi_32/PiajxSqBRaEKkFvuiaEntOvrP5Pv2CSBiayjRULB7QdoaDeozRl4hhSbWSP9flNhHu1lPCwM1Yg22bGyEI5iaIS3icQ/132","comment_is_top":false,"comment_ctime":1652154487,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1652154487","product_id":100020801,"comment_content":"这个专栏其实很久之前那订阅了，最近准备再刷一次。每次看到都有不同的收获。尤其是看看大家的留言，将不同的知识点穿插在一起，学习与巩固穿插在一起。 收获颇丰！！","like_count":0},{"had_liked":false,"id":345203,"user_name":"浩淼","can_delete":false,"product_type":"c1","uid":2991289,"ip_address":"","ucode":"7FD7EBE31035CD","user_header":"https://static001.geekbang.org/account/avatar/00/2d/a4/b9/e131028c.jpg","comment_is_top":false,"comment_ctime":1652104906,"is_pvip":true,"discussion_count":0,"race_medal":0,"score":"1652104906","product_id":100020801,"comment_content":"老师想问一下，现在单表亿级数据，现在知道的策略是分库分表和索引，有其他比较好的处理方式吗","like_count":0},{"had_liked":false,"id":344892,"user_name":"Geek_31057a","can_delete":false,"product_type":"c1","uid":2182824,"ip_address":"","ucode":"B8BFA5EDDF4091","user_header":"","comment_is_top":false,"comment_ctime":1651838714,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1651838714","product_id":100020801,"comment_content":"你一定看出来了，这就是典型的 KV 场景。由于没有其他索引，所以也就不用考虑其他索引的叶子节点大小的问题。这时候我们就要优先考虑上一段提到的“尽量使用主键查询”原则，直接将这个索引设置为主键，可以避免每次查询需要搜索两棵树。<br>======这里将索引设置为主键，那么这种非自增的作为主键，不是会导致页分裂吗？","like_count":0},{"had_liked":false,"id":344651,"user_name":"黄叶舞东风","can_delete":false,"product_type":"c1","uid":1998387,"ip_address":"","ucode":"4E6F5C37819420","user_header":"https://static001.geekbang.org/account/avatar/00/1e/7e/33/b16f6c0a.jpg","comment_is_top":false,"comment_ctime":1651711559,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1651711559","product_id":100020801,"comment_content":"为什么官方文档说的是 b tree?","like_count":0},{"had_liked":false,"id":342462,"user_name":"hao-kuai","can_delete":false,"product_type":"c1","uid":1272354,"ip_address":"","ucode":"DFDFDDDBA4503C","user_header":"https://static001.geekbang.org/account/avatar/00/13/6a/22/527904b2.jpg","comment_is_top":false,"comment_ctime":1650276764,"is_pvip":true,"discussion_count":0,"race_medal":0,"score":"1650276764","product_id":100020801,"comment_content":"1. 为了加速查询，需要添加索引<br>2.索引模型<br>a.哈希表：不适合做区间查询，适合做等值查询<br>b.有序数组：不适合做插入删除，适合做静态查询<br>c.N叉树<br>3. InnoDb索引模型为B+树<br>4. 索引类型：主键索引和非主键索引<br>a. 主键索引：查询一次；主键小则二级索引小<br>b. 非主键索引：又称二级索引，存储主键值，需要查询2次，又称回表","like_count":0},{"had_liked":false,"id":341799,"user_name":"Reuben","can_delete":false,"product_type":"c1","uid":1609733,"ip_address":"","ucode":"E3EF7B9D13DC36","user_header":"https://static001.geekbang.org/account/avatar/00/18/90/05/44eb601e.jpg","comment_is_top":false,"comment_ctime":1649836117,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1649836117","product_id":100020801,"comment_content":"老师如何解决或者避免name作为索引导致页分裂严重问题","like_count":0},{"had_liked":false,"id":341556,"user_name":"再见理想","can_delete":false,"product_type":"c1","uid":1245999,"ip_address":"","ucode":"FAC88B3F6F6DFD","user_header":"https://static001.geekbang.org/account/avatar/00/13/03/2f/0a5e0751.jpg","comment_is_top":false,"comment_ctime":1649688769,"is_pvip":true,"discussion_count":0,"race_medal":0,"score":"1649688769","product_id":100020801,"comment_content":"索引的作用：提高查询效率。<br>实现索引的方式：哈希表&#47;有序数组&#47;搜索树（innodb使用的b+树）<br>hash表：适合等值查询，不支持范围查询。hash冲突的问题需要用链表解决。适合key-value数据库。<br>有序数组：支持等值查询和范围查询，可以用二分法快速查询到指定的数据，复杂度为O(log(N)),但是数据更新时，需要数组移位，成本太高，所以只适合存储静态数据。<br>搜索树：二叉搜索树的特点是，父节点的左子树的所有节点的值小于父节点的值，右子树所有节点的值大于父节点的值，为了维持搜索树O(log(N))的查询复杂度，需要保证二叉树的平衡，即平衡二叉树。<br>           因为索引需要存储在磁盘上，为了降低查询磁盘次数，降低树的高度，这样就需要将二叉改为多叉。<br>innodb使用的 索引组织表方式，表都是根据主键的顺序以索引的形式存放的。<br>每一个索引都是一个B+树。<br>innodb索引又分为 主键索引(聚簇索引)和非主键索引（二级索引）<br>主键索引的叶子节点保存的是整行数据，而非主键索引的叶子节点的内容是主键的值。（所以不建议主键用过大的数据格式，防止索引树过大）<br>回表：当查询语句通过二级索引查询到主键Id时，当查询字段包括除主键Id和索引字段的其它字段时（覆盖索引的概念），需要再到主键索引树中根据主键Id查询数据，这个过程叫做回表。<br>索引维护：<br>B+树为维护数据的有序性，在插入新值的时候需要坐必要的维护，当新值是递增插入时，只需要追加到记录后面就可以了，而当新值在原有数据中间时，需要挪动后面的数据给新值空出一个位置，更糟糕的是如果原纪录所在数据页满了的时候，<br>会触发页分裂，这时候会申请一个新的数据页，并挪动部分数据过去，<br>插入可能会触发页分裂（自增主键是追加操作不会触发页分裂），<br>删除可能会触发页合并。（逻辑删除可以避免页合并）<br><br>思考题：<br>通过 SET MAX_EXECUTION_TIME 命令，来控制每个语句执行的最长时间，避免单个语句意外执行太长时间<br><br><br><br>","like_count":0},{"had_liked":false,"id":340032,"user_name":"Geek_25779e","can_delete":false,"product_type":"c1","uid":2632030,"ip_address":"","ucode":"505F8B5914039C","user_header":"https://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTJJHCYWxqxXBLTUPEgWDYdWfmmsaBw6NcqFqobImOdmu75NscbZJBO6maN7Q5SLKc0m490o7ialZAQ/132","comment_is_top":false,"comment_ctime":1648547912,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1648547912","product_id":100020801,"comment_content":"回表还有索引下推的优化，是否可以详细讲一下索引下推","like_count":0},{"had_liked":false,"id":340030,"user_name":"Geek_25779e","can_delete":false,"product_type":"c1","uid":2632030,"ip_address":"","ucode":"505F8B5914039C","user_header":"https://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTJJHCYWxqxXBLTUPEgWDYdWfmmsaBw6NcqFqobImOdmu75NscbZJBO6maN7Q5SLKc0m490o7ialZAQ/132","comment_is_top":false,"comment_ctime":1648547583,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1648547583","product_id":100020801,"comment_content":"请问回表操作是SERVER层进行的还是INNODB存储引擎执行的","like_count":0},{"had_liked":false,"id":338313,"user_name":"chowhuijie","can_delete":false,"product_type":"c1","uid":1182004,"ip_address":"","ucode":"CCA69DE065370C","user_header":"https://static001.geekbang.org/account/avatar/00/12/09/34/1c81cf7c.jpg","comment_is_top":false,"comment_ctime":1647420809,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1647420809","product_id":100020801,"comment_content":"索引删除：如果删除主键索引后再创建，影响会比较大，因为在删除的时候，所有的二级索引都会失效；在重建的时候，需要重新维护一遍其他索引的叶子节点的数据。删除普通索引后再重建，影响相对较小。<br>N叉树的N可以手动调整吗？可以按照调整K的大小的思路来说；5.6版本后，可以通过page的大小来间接控制；可以结合前缀索引、计算方法一起。<br>","like_count":0},{"had_liked":false,"id":338311,"user_name":"chowhuijie","can_delete":false,"product_type":"c1","uid":1182004,"ip_address":"","ucode":"CCA69DE065370C","user_header":"https://static001.geekbang.org/account/avatar/00/12/09/34/1c81cf7c.jpg","comment_is_top":false,"comment_ctime":1647420798,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1647420798","product_id":100020801,"comment_content":"索引：可以提高读写速度的数据结构-哈希表、有序数组、搜索树；<br>索引：哈希表-哈希表是以key-value的形式进行数据存储的，这种数据结构适用于等值查询的情景，不适用于范围查询。存储时先将key进行hash计算出某个确定位置，然后将value放在这个位置上。当然，如果多个key进行hash计算完成后，hash值一样的话，那么数组将延伸出一个链表，将value插入链表。其特点是：插入的快，只需要往链表的尾部进行追加，但是查询时分情况，如果是等值查询，那么找到指定的位置后，遍历链表即可找到；如果是非等值查询，那么需要分别遍历数组和链表。<br>索引：有序数组-有序（这里的有序是排序的意思）数组在等值查询和范围查询性能都比较好，有序数组查找最快的方式二分查找，时间复杂度是o(log(n))。如果仅仅是做查询用，有序数组的效率是最高的，但是如果用作插入用，每次插入都需要移动后续的元素，效率低下，所以有序数组索引通常用作静态存储引擎，比如保存21年某个城市的人口信息；<br>索引：搜索树（二叉树-红黑树-B树-B+树），其中二叉树的时间复杂度是o(log(n))，和有序数组的二分查找时间复杂度一样；二叉树的特点是，父节点的数据大于左侧叶子节点的数，小于右侧叶子节点的数。二叉树由于随着插入数据的增多，会呈现出不稳定的状态，因此出现了平衡二叉树，二叉树更新为平衡二叉树的时间复杂度也是o(log(n))。二叉树的搜索效率是树中最高的，但是由于层级相对多叉树高，查找读取时IO会增加，因此通常用作内存查找。数据库索引不使用二叉树，原因主要是索引不止在内存中，还有一部分在磁盘上。<br>索引：二叉树-二叉树的树高和节点之间的关系是2^h-1=c，其中h是树高，c是节点数；100w个节点的二叉树，树高基本上是20层，一次查询就需要访问20个数据块，一层一个数据块。也就是说，一个100W行的表，如果用二叉树的话，如果从磁盘中读取一个数据块的时间是10ms,查找一行数据就需要访问20*10ms的时长。<br>","like_count":0},{"had_liked":false,"id":337652,"user_name":"小叶","can_delete":false,"product_type":"c1","uid":1851730,"ip_address":"","ucode":"EFD624AD6B2686","user_header":"https://thirdwx.qlogo.cn/mmopen/vi_32/ooYDTtTQHL9CZQmonDOQSC4Af9S4uqicXzUicOqEJqSOtHyOZ81PTpxcTqK5ibNHsaNWJIuHiaVcxB8gIo9RNXsshA/132","comment_is_top":false,"comment_ctime":1646958335,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1646958335","product_id":100020801,"comment_content":"如果不设主键，只加索引，索引会生效吗","like_count":0},{"had_liked":false,"id":337156,"user_name":"Zz","can_delete":false,"product_type":"c1","uid":2048872,"ip_address":"","ucode":"D2EE5710911BFA","user_header":"https://static001.geekbang.org/account/avatar/00/1f/43/68/4a2b922a.jpg","comment_is_top":false,"comment_ctime":1646652514,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1646652514","product_id":100020801,"comment_content":"老师，innodb的二级索引是聚集索引还是非聚集呀","like_count":0},{"had_liked":false,"id":336417,"user_name":"伟","can_delete":false,"product_type":"c1","uid":2369399,"ip_address":"","ucode":"72C5C8D7F2A88F","user_header":"https://static001.geekbang.org/account/avatar/00/24/27/77/8493aa4a.jpg","comment_is_top":false,"comment_ctime":1646136344,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1646136344","product_id":100020801,"comment_content":"关于为什么要设置主键索引的角度讲不很不错，以前没这方面考虑","like_count":0},{"had_liked":false,"id":335395,"user_name":"林伟华","can_delete":false,"product_type":"c1","uid":1308094,"ip_address":"","ucode":"38BDA7DB6CAB09","user_header":"https://static001.geekbang.org/account/avatar/00/13/f5/be/f2c346e3.jpg","comment_is_top":false,"comment_ctime":1645501692,"is_pvip":true,"discussion_count":0,"race_medal":0,"score":"1645501692","product_id":100020801,"comment_content":"能否这么理解<br>所有的非主键索引保存的都是对应的主键索引的ID值","like_count":0},{"had_liked":false,"id":335394,"user_name":"林伟华","can_delete":false,"product_type":"c1","uid":1308094,"ip_address":"","ucode":"38BDA7DB6CAB09","user_header":"https://static001.geekbang.org/account/avatar/00/13/f5/be/f2c346e3.jpg","comment_is_top":false,"comment_ctime":1645501652,"is_pvip":true,"discussion_count":0,"race_medal":0,"score":"1645501652","product_id":100020801,"comment_content":"能否这么理解","like_count":0},{"had_liked":false,"id":335362,"user_name":"林伟华","can_delete":false,"product_type":"c1","uid":1308094,"ip_address":"","ucode":"38BDA7DB6CAB09","user_header":"https://static001.geekbang.org/account/avatar/00/13/f5/be/f2c346e3.jpg","comment_is_top":false,"comment_ctime":1645488033,"is_pvip":true,"discussion_count":0,"race_medal":0,"score":"1645488033","product_id":100020801,"comment_content":"叶子节点是否就是二叉树的顶部啊<br>存的又是page这样的数据 如何确定大小","like_count":0},{"had_liked":false,"id":335095,"user_name":"蝴蝶","can_delete":false,"product_type":"c1","uid":1193167,"ip_address":"","ucode":"8019924D99182F","user_header":"https://static001.geekbang.org/account/avatar/00/12/34/cf/0a316b48.jpg","comment_is_top":false,"comment_ctime":1645328176,"is_pvip":true,"discussion_count":0,"race_medal":0,"score":"1645328176","product_id":100020801,"comment_content":"drop primary key 我觉得是不是相当于使用了隐性的数据 id 作为索引,然后会导致所有的数据重新都要重新排布&#47;写一遍?","like_count":0},{"had_liked":false,"id":334266,"user_name":"Geek_4f06ca","can_delete":false,"product_type":"c1","uid":2331842,"ip_address":"","ucode":"69B37349DE3EC5","user_header":"","comment_is_top":false,"comment_ctime":1644834794,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1644834794","product_id":100020801,"comment_content":"主键索引都是递增的，那用B+树递增只有右子树，不就退化成链表了吗","like_count":0},{"had_liked":false,"id":333354,"user_name":"周国栋","can_delete":false,"product_type":"c1","uid":1222582,"ip_address":"","ucode":"CA46E833FB608E","user_header":"https://static001.geekbang.org/account/avatar/00/12/a7/b6/4831632e.jpg","comment_is_top":false,"comment_ctime":1644308982,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1644308982","product_id":100020801,"comment_content":"老师没有看懂R1、R2、R3等代表的是啥","like_count":0},{"had_liked":false,"id":330959,"user_name":"澎澎","can_delete":false,"product_type":"c1","uid":2017421,"ip_address":"","ucode":"C5BFC80157D50E","user_header":"https://static001.geekbang.org/account/avatar/00/1e/c8/8d/286b4024.jpg","comment_is_top":false,"comment_ctime":1642325982,"is_pvip":true,"discussion_count":0,"race_medal":0,"score":"1642325982","product_id":100020801,"comment_content":"索引定位到Page，page内部有个有序数组，通过二分法查找","like_count":0},{"had_liked":false,"id":330683,"user_name":"Geek_96e02d","can_delete":false,"product_type":"c1","uid":2891652,"ip_address":"","ucode":"0D403FF1798DFB","user_header":"https://thirdwx.qlogo.cn/mmopen/vi_32/PiajxSqBRaEIYOwDjibQ2uflhn2vicNeMI6TsC64nUseEJv2D2tiaDC7MgZNkqg16v1zHHJIR86iceMiaexXiaCxhV75w/132","comment_is_top":false,"comment_ctime":1642121085,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1642121085","product_id":100020801,"comment_content":"普通索引会全部回表？  那普通索引还有什么用？  是你查询的字段中没有全部被索引覆盖才会存在回表的情况去查询未建索引的字段数据好不好，建了字段的普通索引是能直接在叶子节点找到他想要的数据的","like_count":0},{"had_liked":false,"id":327560,"user_name":"一个无趣的俗人","can_delete":false,"product_type":"c1","uid":1691669,"ip_address":"","ucode":"25435088B10CA2","user_header":"https://static001.geekbang.org/account/avatar/00/19/d0/15/5851180d.jpg","comment_is_top":false,"comment_ctime":1640168196,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1640168196","product_id":100020801,"comment_content":"三刷，问题总结：<br><br>1、常见的索引模型有哪些？有什么优缺点<br><br>2、InnoDB 的索引和表内的记录数据是怎么保存的？二者有什么关系吗？<br><br>3、建表语句里一定要有自增主键吗？性能上有什么差异？业务实践上是否推荐使用 uuid 作为主键？有没有什么场景适合用业务字段直接做主键的呢？<br><br>4、“N叉树”的 N 值在 MySQL 中是可以被人工调整的么？<br><br>5、如何重建索引？删除掉主键索引（alter table T drop primary key）后，二级索引是否仍然有效？","like_count":0},{"had_liked":false,"id":322800,"user_name":"Wolf、Heart","can_delete":false,"product_type":"c1","uid":1111825,"ip_address":"","ucode":"9A6FC15DAF6269","user_header":"https://static001.geekbang.org/account/avatar/00/10/f7/11/714285d8.jpg","comment_is_top":false,"comment_ctime":1637592005,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1637592005","product_id":100020801,"comment_content":"有个问题请加下，根据文中描述，索引树的第一层甚至第二层都可能在内存中存在，如果在内存中存在，查找数据的过程是先走内存再到磁盘上从三层开始查找嘛？","like_count":0},{"had_liked":false,"id":321641,"user_name":"FelixFly","can_delete":false,"product_type":"c1","uid":1160461,"ip_address":"","ucode":"1D39A7C3D0E31F","user_header":"https://static001.geekbang.org/account/avatar/00/11/b5/0d/0e65dee6.jpg","comment_is_top":false,"comment_ctime":1636971182,"is_pvip":true,"discussion_count":0,"race_medal":0,"score":"1636971182","product_id":100020801,"comment_content":"面试中比较常见的一个问题是，innodb的索引结构为啥要使用B+树？除了能更好的配合磁盘的读写特性，减少单次查询的磁盘访问次数外可还有其他原因","like_count":0},{"had_liked":false,"id":321197,"user_name":"陈紫文","can_delete":false,"product_type":"c1","uid":2839605,"ip_address":"","ucode":"3C3EC81F339A33","user_header":"https://static001.geekbang.org/account/avatar/00/2b/54/35/6f1649e2.jpg","comment_is_top":false,"comment_ctime":1636703937,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1636703937","product_id":100020801,"comment_content":"如果出现需要分库与合库的操作，应该就不能使用自增主键了吧？毕竟很可能在合库时出现主键冲突问题","like_count":0},{"had_liked":false,"id":320956,"user_name":"Geek_4e4ec2","can_delete":false,"product_type":"c1","uid":1603078,"ip_address":"","ucode":"6DAD5EE4FFB195","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/zAZv4NyuS21Y1qk45j8JiaoEYdA5Zgc1PqpJsBokz5bZVmdkf6kNWvT4cUAAKAdH6TgN52DWZhiaH6wNFhw14nRg/132","comment_is_top":false,"comment_ctime":1636597777,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1636597777","product_id":100020801,"comment_content":"有几个点不太确定，麻烦指正一下：<br>1、一个节点就是一个数据页？如果是的话，为什么这样设计，一页多存几个节点不是更快吗？<br>2、页中的User Record指的是一个节点中的key？<br>感谢!","like_count":0},{"had_liked":false,"id":320852,"user_name":"buggetout","can_delete":false,"product_type":"c1","uid":1880582,"ip_address":"","ucode":"63A948EF415FDD","user_header":"https://static001.geekbang.org/account/avatar/00/1c/b2/06/2086d76d.jpg","comment_is_top":false,"comment_ctime":1636531655,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1636531655","product_id":100020801,"comment_content":"老师好，有个困惑的地方，我本地安装的是mysql8.0.26，并且使用默认存储引擎InnoDB，然后使用show index from table，得到的index_type 是BTREE，这是代表索引底层结构是B树吗？<br>","like_count":0},{"had_liked":false,"id":320029,"user_name":"小肥","can_delete":false,"product_type":"c1","uid":1157618,"ip_address":"","ucode":"0CC43CA3CDA880","user_header":"https://static001.geekbang.org/account/avatar/00/11/a9/f2/f3a574c6.jpg","comment_is_top":false,"comment_ctime":1636041560,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1636041560","product_id":100020801,"comment_content":"可以稍微讲一下B+tree的特征，不然看到图，会理解不了，父节点怎么出现在子节点当中了。","like_count":0},{"had_liked":false,"id":317846,"user_name":"豆","can_delete":false,"product_type":"c1","uid":2683492,"ip_address":"","ucode":"3B8C26C3E7290C","user_header":"https://static001.geekbang.org/account/avatar/00/28/f2/64/e32acee1.jpg","comment_is_top":false,"comment_ctime":1634991922,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1634991922","product_id":100020801,"comment_content":"请问1200是怎么算出来的呢，我看评论区说8+6 ，8是怎么来的， 主键不是int型么","like_count":0},{"had_liked":false,"id":317720,"user_name":"Z东","can_delete":false,"product_type":"c1","uid":1459774,"ip_address":"","ucode":"037B2BB2715DBA","user_header":"https://static001.geekbang.org/account/avatar/00/16/46/3e/8c75af6d.jpg","comment_is_top":false,"comment_ctime":1634902810,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1634902810","product_id":100020801,"comment_content":"N叉树的树根，可以在多个数据页吗？单页16kb，约1200个，再加多个根数据页，可以支持更多数据，为什么会限制树根在一页上呢？","like_count":0},{"had_liked":false,"id":317683,"user_name":"白有才","can_delete":false,"product_type":"c1","uid":1210652,"ip_address":"","ucode":"F81C6DE95427B9","user_header":"https://static001.geekbang.org/account/avatar/00/12/79/1c/c0d14793.jpg","comment_is_top":false,"comment_ctime":1634889183,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1634889183","product_id":100020801,"comment_content":"leftjoin和子查询哪个效率高呢?","like_count":0},{"had_liked":false,"id":317139,"user_name":"Pinocchio","can_delete":false,"product_type":"c1","uid":2335047,"ip_address":"","ucode":"2E7888C749D8FC","user_header":"https://static001.geekbang.org/account/avatar/00/23/a1/47/1235f11f.jpg","comment_is_top":false,"comment_ctime":1634694266,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1634694266","product_id":100020801,"comment_content":"老师好，有一点没太明白，n叉树跟数据块之间是怎么个关系，5.6后如何通过调整page大小影响n的","like_count":0},{"had_liked":false,"id":316992,"user_name":"明明如月","can_delete":false,"product_type":"c1","uid":2697683,"ip_address":"","ucode":"937488EEAA522E","user_header":"https://static001.geekbang.org/account/avatar/00/29/29/d3/b193a463.jpg","comment_is_top":false,"comment_ctime":1634634520,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1634634520","product_id":100020801,"comment_content":"哈希===分类","like_count":0},{"had_liked":false,"id":316837,"user_name":"学习学个屁","can_delete":false,"product_type":"c1","uid":1049017,"ip_address":"","ucode":"DF2D61E6FB2FCE","user_header":"https://static001.geekbang.org/account/avatar/00/10/01/b9/73435279.jpg","comment_is_top":false,"comment_ctime":1634562988,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1634562988","product_id":100020801,"comment_content":"修改主键索引会影响普通索引，要避免这种情况","like_count":0},{"had_liked":false,"id":313853,"user_name":"特立独行的猪","can_delete":false,"product_type":"c1","uid":1465344,"ip_address":"","ucode":"1440F96375740A","user_header":"https://static001.geekbang.org/account/avatar/00/16/5c/00/5d11e68d.jpg","comment_is_top":false,"comment_ctime":1632712912,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1632712912","product_id":100020801,"comment_content":"我只能理解到，一张表有几个索引，就有几颗树，每颗树不仅存在内存中，也存在磁盘里；如果是聚簇索引，叶子节点存的是该行的所有数据；而过是普通索引，叶子节点上存的是该行的主键，如果想要查询其他数据，需要回表。对于索引模型，不是很了解","like_count":0},{"had_liked":false,"id":313719,"user_name":"Seven","can_delete":false,"product_type":"c1","uid":2403766,"ip_address":"","ucode":"37D99CF8535CDE","user_header":"https://static001.geekbang.org/account/avatar/00/24/ad/b6/a8caa2c7.jpg","comment_is_top":false,"comment_ctime":1632632697,"is_pvip":false,"discussion_count":0,"race_medal":1,"score":"1632632697","product_id":100020801,"comment_content":"思考题：<br>重建普通索引，键B+树的key会变化，可能会因为这个key的数据结构影响部分功能；<br>主键索引的重建，会影响所有键索引的值，全部重构。","like_count":0},{"had_liked":false,"id":313679,"user_name":"stronger.","can_delete":false,"product_type":"c1","uid":1095136,"ip_address":"","ucode":"AD0F2BE338824C","user_header":"https://static001.geekbang.org/account/avatar/00/10/b5/e0/fc3ac264.jpg","comment_is_top":false,"comment_ctime":1632619495,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1632619495","product_id":100020801,"comment_content":"主键索引和rowid有什么区别呢？我的理解主键索引就是rowid。有很多人提到，在删除主键索引的过程中，会导致普通索引失效，其中普通索引的中的主键id指向变为rowid，不太理解","like_count":0},{"had_liked":false,"id":312667,"user_name":"altair","can_delete":false,"product_type":"c1","uid":2167648,"ip_address":"","ucode":"FE91C23E76412D","user_header":"https://static001.geekbang.org/account/avatar/00/21/13/60/4c569b0b.jpg","comment_is_top":false,"comment_ctime":1631933957,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1631933957","product_id":100020801,"comment_content":"1. 常见的数据结构包括hashmap，特点是O(1)的查询，删除和添加，但不支持range query。balanced tree （AVL tree，RB tree）O(logn) 查询，删除和添加，支持range query ， 但每一次访问子节点都可能触发一次磁盘 IO，效率低。而B+树本质上是一颗多叉 balanced tree，每个node 对应OS的一个或多page，一次访问读入整个page，缓存在内存中，一棵3层的B+tree可以存千万行数据，只需要 1～2次IO，效率极高。","like_count":0},{"had_liked":false,"id":312518,"user_name":"const","can_delete":false,"product_type":"c1","uid":1500149,"ip_address":"","ucode":"258BA2B11ED1B2","user_header":"https://static001.geekbang.org/account/avatar/00/16/e3/f5/f076b407.jpg","comment_is_top":false,"comment_ctime":1631847727,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1631847727","product_id":100020801,"comment_content":"如果删除二级索引，顶多数据查询变慢，此时会扫表。<br>如果删除主键索引，此时所有二级索引不可用，而且此时没有主键索引，系统会默认一个字段为主键，查询效率会非常慢。","like_count":0},{"had_liked":false,"id":312096,"user_name":"talen","can_delete":false,"product_type":"c1","uid":1182931,"ip_address":"","ucode":"36AC63A3827BE0","user_header":"https://static001.geekbang.org/account/avatar/00/12/0c/d3/f310be14.jpg","comment_is_top":false,"comment_ctime":1631623822,"is_pvip":true,"discussion_count":0,"race_medal":1,"score":"1631623822","product_id":100020801,"comment_content":"老师，非叶子节点，会存储一个指针，指向同层的非叶子节点吗？跟叶子节点一样","like_count":0},{"had_liked":false,"id":311359,"user_name":"TheOne","can_delete":false,"product_type":"c1","uid":1582134,"ip_address":"","ucode":"2A359780156A8B","user_header":"https://static001.geekbang.org/account/avatar/00/18/24/36/1c4af368.jpg","comment_is_top":false,"comment_ctime":1631186536,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1631186536","product_id":100020801,"comment_content":"为什么每个数据库都要有个ID字段？<br>能不能没有ID？可以，但引擎会进行检测，如果没有的话会自动加一个隐式ID<br>有一个主键ID的好处是什么？从性能上来说，ID保证了数据插入的有序性，它是追加插入的，这就方式不对原顺序进行修改，所以节省了时间。从空间上来说一个int类型的主键，占用的空间往往很小。最后，因为主键通常是聚簇索引，叶子节点存的是数据，所以能防止回表出现","like_count":0},{"had_liked":false,"id":311027,"user_name":"A 拽丫头","can_delete":false,"product_type":"c1","uid":1470434,"ip_address":"","ucode":"F875D99D18DF6E","user_header":"https://static001.geekbang.org/account/avatar/00/16/6f/e2/f3b05833.jpg","comment_is_top":false,"comment_ctime":1631023716,"is_pvip":true,"discussion_count":0,"race_medal":0,"score":"1631023716","product_id":100020801,"comment_content":"在 MySQL 中，索引是在存储引擎层实现的，所以并没有统一的索引标准，即不同存储引擎的索引的工作方式并不一样。而即使多个存储引擎支持同一种类型的索引，其底层的实现也可能不同。 <br>老师，这里可以详细讲下吗？  myisam 和  innodb 两种引擎分别是那些索引模型实现的，在网上找的答案五花八门的，也不知道那个对那个不对","like_count":0},{"had_liked":false,"id":303768,"user_name":"hello","can_delete":false,"product_type":"c1","uid":1649057,"ip_address":"","ucode":"4F42DAA5DB5C38","user_header":"https://static001.geekbang.org/account/avatar/00/19/29/a1/41607383.jpg","comment_is_top":false,"comment_ctime":1626971733,"is_pvip":true,"discussion_count":1,"race_medal":0,"score":"1626971733","product_id":100020801,"comment_content":"有个疑问，可以把非主键字段作为聚簇索引吗？如果可以怎么设置，又怎么验证设置成聚簇索引了呢？","like_count":0,"discussions":[{"author":{"id":1054827,"avatar":"https://static001.geekbang.org/account/avatar/00/10/18/6b/a1448af1.jpg","nickname":"贝影","note":"","ucode":"19545C8DCBF8A2","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":542856,"discussion_content":"没有主键，聚簇索引就是唯一索引","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1640865190,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":303380,"user_name":"Geek_5f2ccd","can_delete":false,"product_type":"c1","uid":2534827,"ip_address":"","ucode":"4E66416BD9ECD8","user_header":"","comment_is_top":false,"comment_ctime":1626762851,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1626762851","product_id":100020801,"comment_content":"如果是重建主键索引，需要一并重建非主键索引，因为非主键索引树中存了主键的值","like_count":0},{"had_liked":false,"id":296924,"user_name":"Geek_b35ff7","can_delete":false,"product_type":"c1","uid":2367759,"ip_address":"","ucode":"3BF5782F059B75","user_header":"https://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTLAvgLjLJQIb4B6p2micrDSGW7jkjyibia3MgGvkSv8zIOCdmcibfLqHcMK9NQkBTzfwgL7ngzPcG15Ug/132","comment_is_top":false,"comment_ctime":1623226025,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1623226025","product_id":100020801,"comment_content":"老师，索引是只定位到数据页吗？上面讲的主键索引不是含有整条数据吗？","like_count":0},{"had_liked":false,"id":296451,"user_name":"建强","can_delete":false,"product_type":"c1","uid":1397126,"ip_address":"","ucode":"62B03D0E0C64EC","user_header":"https://static001.geekbang.org/account/avatar/00/15/51/86/b5fd8dd8.jpg","comment_is_top":false,"comment_ctime":1622980354,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1622980354","product_id":100020801,"comment_content":"重建索引，根据索引的存贮结构可知，需要重建B+树，如果重建主键索引，由于主键索引是聚簇索引，记录数和索引key值一起存贮，重建主键索引会导致重建整个表的数据，对于大数据量的表效率很低，同时，所有的普通索引也必须重建，因此，如果先重建了普通索引，再重建主键索引，会导致普通索引的重建白做。<br>网上查了一下资料，对于InnoDB引擎，重建索引可以用这个语句替代：alter table T engine=InnoDB;<br>实际效果如何，没测试过。","like_count":0},{"had_liked":false,"id":293067,"user_name":"Geek_wurj","can_delete":false,"product_type":"c1","uid":2613564,"ip_address":"","ucode":"86BF3E8BDCB51F","user_header":"https://thirdwx.qlogo.cn/mmopen/vi_32/pvP3MYyMxUPYek4WqGiaYCcVvUXFlfkplSicsl7icDQt17RJRaP5K5cg4KDswYVj8fN5Qiax5nk4g8KHv2AXbCq6qw/132","comment_is_top":false,"comment_ctime":1621180499,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1621180499","product_id":100020801,"comment_content":"老师，请教下，主键索引（聚簇索引）的value存的是整行的数据，那意思是表的所有数据都存在内存中？是这个意思？如果是这样内存能抗住么？","like_count":0},{"had_liked":false,"id":290830,"user_name":"颛孙","can_delete":false,"product_type":"c1","uid":1180636,"ip_address":"","ucode":"6ED330F5A4DBD2","user_header":"https://static001.geekbang.org/account/avatar/00/12/03/dc/32ef4590.jpg","comment_is_top":false,"comment_ctime":1619773605,"is_pvip":false,"discussion_count":1,"race_medal":0,"score":"1619773605","product_id":100020801,"comment_content":"<br>假设一个页最多存1000个key，这个B+树叫做1000阶B+树<br>假设当前页（称作A页）已经存了99个key，在继续插入key的时候，按照B+树的算法，会将当前A页分裂成两个叶子节点（分裂成两个页）：A左页，A右页；<br>并且将1000&#47;2+1这个位置的key进位到父节点中；<br><br>这个时候，A左页就是500个key，A右页是499个key+新插入的key；<br><br>那么问题是：按照递增主键的方式，A左页的空间利用率只有50%，并且永远不会在向里面写入数据了，因为是主键自增，只会向A右页继续写数据；","like_count":0,"discussions":[{"author":{"id":1180636,"avatar":"https://static001.geekbang.org/account/avatar/00/12/03/dc/32ef4590.jpg","nickname":"颛孙","note":"","ucode":"6ED330F5A4DBD2","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":371930,"discussion_content":"是我理解错了。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1620059590,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":290576,"user_name":"WC","can_delete":false,"product_type":"c1","uid":1967551,"ip_address":"","ucode":"51574B47B535FB","user_header":"https://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTKP1muJcGWWlGHgsIoNhuExGMB6XPhcZ4vlLsW9oPvdqdyW3icve4WH2MAdoNcmBvV2SXcicZ1kWGOg/132","comment_is_top":false,"comment_ctime":1619625454,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1619625454","product_id":100020801,"comment_content":"公司为了不暴露业务量，使用雪花算法做主键，会不会很影响使用效率","like_count":0},{"had_liked":false,"id":290346,"user_name":"xanxus","can_delete":false,"product_type":"c1","uid":1654600,"ip_address":"","ucode":"FFF1EFD2ABCBAA","user_header":"","comment_is_top":false,"comment_ctime":1619511454,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1619511454","product_id":100020801,"comment_content":"“你可以想象一下一棵 100 万节点的平衡二叉树，树高 20。一次查询可能需要访问 20 个数据块。在机械硬盘时代，从磁盘随机读一个数据块需要 10 ms 左右的寻址时间。也就是说，对于一个 100 万行的表，如果使用二叉树来存储，单独访问一个行可能需要 20 个 10 ms 的时间，这个查询可真够慢的。”<br>以上是原文。 请问一下，既然打算用二叉树来实现的话，为什么还要用一个数据块来存储一个节点，为什么不是一个数据块来存一颗子树，个人认为如果用二叉树来实现的话，同样可以在最多4,5次磁盘io内来查询40亿数据。","like_count":0},{"had_liked":false,"id":290004,"user_name":"芋头","can_delete":false,"product_type":"c1","uid":1227492,"ip_address":"","ucode":"A9C875548E4EE5","user_header":"https://static001.geekbang.org/account/avatar/00/12/ba/e4/6df89add.jpg","comment_is_top":false,"comment_ctime":1619318812,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1619318812","product_id":100020801,"comment_content":"内容有点多，不知道怎么总结。大概回忆一下比较有帮助的几点。<br>1.索引的数据结构：hash适合等值查询，不适合区间查询（常用在KV数据库如Redis）；数组适合静态数据，树适合区间查询和等值查询。<br>2.数据库存储大多不适用二叉树，因为树高过高，会适用N叉树。<br>2.针对InnoDB引擎采用的是B+树，相对于二叉树来说，能更好的减少磁盘的IO次数。<br>3.InnoDB 是索引组织表，一张表对应好几颗B+树，<br>4.索引类型：主键索引、非主键索引<br>主键索引的叶子节点存的是整行的数据(聚簇索引)，非主键索引的叶子节点内容是主键的值(二级索引)<br>一个数据页满了，按照B+Tree算法，新增加一个数据页，叫做页分裂，会导致性能下降。空间利用率降低大概50%。当相邻的两个数据页利用率很低的时候会做数据页合并，合并的过程是分裂过程的逆过程。<br>5.B+树的叶子节点是page （页），一个页里面可以存多个行","like_count":0},{"had_liked":false,"id":289891,"user_name":"WZ","can_delete":false,"product_type":"c1","uid":1310099,"ip_address":"","ucode":"43B5BB6924A33F","user_header":"https://static001.geekbang.org/account/avatar/00/13/fd/93/9a3a3e83.jpg","comment_is_top":false,"comment_ctime":1619254603,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1619254603","product_id":100020801,"comment_content":"老师，我有两个问题：<br>1. 非主键索引中，一个索引值如果对应多个主键值，那这多个主键值是怎么保存的？<br>2. 一个表中可以没有主键吗？如果没有主键，但是有非主键索引，那么非主键索引里面保存的value是什么呢？","like_count":0},{"had_liked":false,"id":289754,"user_name":"心灵旅行","can_delete":false,"product_type":"c1","uid":1200917,"ip_address":"","ucode":"EA1E05A05F1E98","user_header":"https://static001.geekbang.org/account/avatar/00/12/53/15/e76027a0.jpg","comment_is_top":false,"comment_ctime":1619166396,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1619166396","product_id":100020801,"comment_content":"主键索引的树高是多少，跟数据规模有关系吧！有计算公司吗","like_count":0},{"had_liked":false,"id":289352,"user_name":"lleft","can_delete":false,"product_type":"c1","uid":1970443,"ip_address":"","ucode":"D573EB509455AE","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTIx1V1QAxC4NHaxYZGyuibBN8lcURJWc5nrnO4yic1kxnDemYV2FJGialf47kYX9qtDnZZOfe1SJeLicg/132","comment_is_top":false,"comment_ctime":1618986886,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1618986886","product_id":100020801,"comment_content":"留言多到已经看不完的地步了，有个问题还是要问下大佬，文中说自增键做主键，追加插入，不涉及到页分裂，但是树的高度发生变化的时候呢，比如树高从2层变成3层的时候呢？","like_count":0},{"had_liked":false,"id":289286,"user_name":"阿辉","can_delete":false,"product_type":"c1","uid":2480508,"ip_address":"","ucode":"4C3E451D8BB864","user_header":"https://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTKibWRTLrWvazVG9mveZM5bCpv1JAo4AiaKYNH6MaQDNZLzhMKoOdGyNeKmhwxmxyiaEzwjyCFLBRwGA/132","comment_is_top":false,"comment_ctime":1618969138,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1618969138","product_id":100020801,"comment_content":"打卡：<br>总结：<br>1.索引的作用：提高数据查询效率<br>2.常见索引模型：哈希表、有序数组、搜索树<br>3.哈希表：键 - 值(key - value)。<br>4.哈希思路：把值放在数组里，用一个哈希函数把key换算成一个确定的位置，然后把value放在数组的这个位置<br>5.哈希冲突的处理办法：链表<br>6.哈希表适用场景：只有等值查询的场景<br>7.有序数组：按顺序存储。查询用二分法就可以快速查询，时间复杂度是：O(log(N))<br>8.有序数组查询效率高，更新效率低<br>9.有序数组的适用场景：静态存储引擎。<br>10.二叉搜索树：每个节点的左儿子小于父节点，父节点又小于右儿子<br>11.二叉搜索树：查询时间复杂度O(log(N))，更新时间复杂度O(log(N))<br>12.数据库存储大多不适用二叉树，因为树高过高，会适用N叉树<br>13.InnoDB中的索引模型：B+Tree<br>14.索引类型：主键索引、非主键索引<br>主键索引的叶子节点存的是整行的数据(聚簇索引)，非主键索引的叶子节点内容是主键的值(二级索引)<br>15.主键索引和普通索引的区别：主键索引只要搜索ID这个B+Tree即可拿到数据。普通索引先搜索索引拿到主键值，再到主键索引树搜索一次(回表)<br>16.一个数据页满了，按照B+Tree算法，新增加一个数据页，叫做页分裂，会导致性能下降。空间利用率降低大概50%。当相邻的两个数据页利用率很低的时候会做数据页合并，合并的过程是分裂过程的逆过程。<br>17.从性能和存储空间方面考量，自增主键往往是更合理的选择。<br><br>思考题：<br>如果删除，新建主键索引，会同时去修改普通索引对应的主键索引，性能消耗比较大。<br>删除重建普通索引貌似影响不大，不过要注意在业务低谷期操作，避免影响业务。","like_count":0},{"had_liked":false,"id":289062,"user_name":"宁悦","can_delete":false,"product_type":"c1","uid":1901403,"ip_address":"","ucode":"68844C314FEEF8","user_header":"https://static001.geekbang.org/account/avatar/00/1d/03/5b/3cdbc9fa.jpg","comment_is_top":false,"comment_ctime":1618838282,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1618838282","product_id":100020801,"comment_content":"老师，创建了表A，（a,b,c）的联合索引，但是select * from A where c=1，为什么显示会使用索引啊？不是应该不遵守最左匹配吗？","like_count":0},{"had_liked":false,"id":288600,"user_name":"超","can_delete":false,"product_type":"c1","uid":1100075,"ip_address":"","ucode":"0E4C60D9238851","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/hDFZJXfNCG9cIXaysJZEZ931YIdeyRWzUP1oxNCdBZUyjmWtMzM05GibKb8F04m235kCMz4fINK6Q6A9l3DRvvg/132","comment_is_top":false,"comment_ctime":1618556974,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1618556974","product_id":100020801,"comment_content":"InnoDB的非主键索引的叶子节点为啥存的是主键索引，为啥不像MyISAM那样，直接存数据地址？这样设计有什么好处吗","like_count":0},{"had_liked":false,"id":288065,"user_name":"很大的勇气","can_delete":false,"product_type":"c1","uid":1695608,"ip_address":"","ucode":"7871D1C1E22F3F","user_header":"https://static001.geekbang.org/account/avatar/00/19/df/78/d4946736.jpg","comment_is_top":false,"comment_ctime":1618284759,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1618284759","product_id":100020801,"comment_content":"二叉搜索树示意图 画的不对吧。<br>二叉树结构定义：左子树小于父节点，右子树大于父节点。<br>图中给人的感觉是B小于A，A小于C。不符合定义。","like_count":0},{"had_liked":false,"id":287957,"user_name":"张三丰","can_delete":false,"product_type":"c1","uid":1155275,"ip_address":"","ucode":"3A6215A40B3B21","user_header":"https://static001.geekbang.org/account/avatar/00/11/a0/cb/aab3b3e7.jpg","comment_is_top":false,"comment_ctime":1618234195,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1618234195","product_id":100020801,"comment_content":"老师  为何递增主键不会引起页分裂呢  如果插入的时候当前数据页不够了一样会页分裂啊","like_count":0},{"had_liked":false,"id":287872,"user_name":"发飙的蜗牛","can_delete":false,"product_type":"c1","uid":2556491,"ip_address":"","ucode":"5D0F437C9EF708","user_header":"https://static001.geekbang.org/account/avatar/00/27/02/4b/1bbae1dd.jpg","comment_is_top":false,"comment_ctime":1618203444,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1618203444","product_id":100020801,"comment_content":"唯一索引查询需要回表吗？","like_count":0},{"had_liked":false,"id":287702,"user_name":"M","can_delete":false,"product_type":"c1","uid":2549902,"ip_address":"","ucode":"7FCD27D70154FD","user_header":"https://static001.geekbang.org/account/avatar/00/26/e8/8e/a9c349fb.jpg","comment_is_top":false,"comment_ctime":1618115457,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1618115457","product_id":100020801,"comment_content":"老师, 您文中提到KV场景的那一块, 不是说只能有一个索引嘛, 并且是唯一索引. 那为什么下面又说将主键设置为索引, 可以避免查询两棵树. 只有一个索引, 不是应该只有一棵树吗? 假如这个索引是非主键索引, 那我们查出主键之后, 是根据主键去遍历还是怎样的呢? 我没太明白是存储也是B+树结构还是...","like_count":0},{"had_liked":false,"id":287671,"user_name":"张滔","can_delete":false,"product_type":"c1","uid":1322636,"ip_address":"","ucode":"87ABAFF0E861E0","user_header":"https://static001.geekbang.org/account/avatar/00/14/2e/8c/b261e15a.jpg","comment_is_top":false,"comment_ctime":1618103526,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1618103526","product_id":100020801,"comment_content":"老师，请教个问题。为什么mysql写入大文本超级慢？比solr、es慢太多了","like_count":0},{"had_liked":false,"id":287652,"user_name":"恐龙","can_delete":false,"product_type":"c1","uid":1323030,"ip_address":"","ucode":"7B85A27E40D261","user_header":"https://static001.geekbang.org/account/avatar/00/14/30/16/4773d604.jpg","comment_is_top":false,"comment_ctime":1618069391,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1618069391","product_id":100020801,"comment_content":"最后留下的问题，第一步，先对字段k删除、添加索引，即销毁、重建B+ tree，叶子节点为主键id；<br>第二步，先删除主键，推测数据会重新组织，接着添加主键，会按id重建B+ tree，组织数据，并销毁删除主键后的数据组织形式；<br>存在一种可能，加入重建后的主键不是id，则字段k索引的B+ tree的叶子节点仍为原组间id，推测可能导致，以k为条件查询时，每个查询都是先查字段k的B+ tree，再以字段id进行遍历。这样理解有问题吗？","like_count":0},{"had_liked":false,"id":287149,"user_name":"TM","can_delete":false,"product_type":"c1","uid":1569910,"ip_address":"","ucode":"DCF88E51C5D2E8","user_header":"https://static001.geekbang.org/account/avatar/00/17/f4/76/5cc8d16e.jpg","comment_is_top":false,"comment_ctime":1617796478,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1617796478","product_id":100020801,"comment_content":"页分裂，是主键索引和普通索引都会分裂吗？","like_count":0},{"had_liked":false,"id":287127,"user_name":"Geeker丨007","can_delete":false,"product_type":"c1","uid":1128891,"ip_address":"","ucode":"72232278209627","user_header":"https://static001.geekbang.org/account/avatar/00/11/39/bb/607b7034.jpg","comment_is_top":false,"comment_ctime":1617784952,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1617784952","product_id":100020801,"comment_content":"老师，我不是很理解，覆盖索引得到的主键值，比如我们最终要查询其他字段的信息的时候，后续不是还是要去数据库里查一遍数据么？回表的话，还是根据主键去主键索引里面查询得到数据？为什么尽量不要回表呢？","like_count":0},{"had_liked":false,"id":286881,"user_name":"yangchen","can_delete":false,"product_type":"c1","uid":2459909,"ip_address":"","ucode":"49EBCD4975FFC9","user_header":"https://static001.geekbang.org/account/avatar/00/25/89/05/72406a14.jpg","comment_is_top":false,"comment_ctime":1617667691,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1617667691","product_id":100020801,"comment_content":"老师，innodb引擎的主键索引是B+树，非主键索引，用的是B+还是B树，我看有的资料说是B树，如果是B树，为什么选B树","like_count":0},{"had_liked":false,"id":286601,"user_name":"头晕的小骚年","can_delete":false,"product_type":"c1","uid":1234200,"ip_address":"","ucode":"EDA4B89BAA33F1","user_header":"https://static001.geekbang.org/account/avatar/00/12/d5/18/7f3b1af2.jpg","comment_is_top":false,"comment_ctime":1617418774,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1617418774","product_id":100020801,"comment_content":"推荐大家看一下这篇文章:https:&#47;&#47;zhuanlan.zhihu.com&#47;p&#47;81273236?utm_source=wechat_timeline","like_count":0},{"had_liked":false,"id":285183,"user_name":"bingo","can_delete":false,"product_type":"c1","uid":1671693,"ip_address":"","ucode":"1988E085CE2326","user_header":"https://static001.geekbang.org/account/avatar/00/19/82/0d/75b3647e.jpg","comment_is_top":false,"comment_ctime":1616659416,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1616659416","product_id":100020801,"comment_content":"如果使用的是 MySQL 5.6 或者更新版本，把 innodb_undo_tablespaces 设置成 2（或更大的值）。如果真的出现大事务导致回滚段过大，这样设置后清理起来更方便。“清理起来方便”是如何清理的呢？","like_count":0},{"had_liked":false,"id":285182,"user_name":"bingo","can_delete":false,"product_type":"c1","uid":1671693,"ip_address":"","ucode":"1988E085CE2326","user_header":"https://static001.geekbang.org/account/avatar/00/19/82/0d/75b3647e.jpg","comment_is_top":false,"comment_ctime":1616659311,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1616659311","product_id":100020801,"comment_content":"select id from table为什么优化器选择走二级索引呢？","like_count":0},{"had_liked":false,"id":284586,"user_name":"名字真难起","can_delete":false,"product_type":"c1","uid":1199894,"ip_address":"","ucode":"70A6D8A4B7966F","user_header":"https://static001.geekbang.org/account/avatar/00/12/4f/16/763d76f5.jpg","comment_is_top":false,"comment_ctime":1616374117,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1616374117","product_id":100020801,"comment_content":"终于理解了聚集索引和非聚集索引的区别了","like_count":0},{"had_liked":false,"id":283650,"user_name":"Artizan","can_delete":false,"product_type":"c1","uid":1275431,"ip_address":"","ucode":"C070C3E308AB56","user_header":"","comment_is_top":false,"comment_ctime":1615867045,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1615867045","product_id":100020801,"comment_content":"#### 1 索引的作用：<br><br>```<br>使用不同的数据结构来提高数据查询效率。<br>```<br><br>#### 2 常见的索引数据模型<br><br>哈希表<br><br>```<br>是一种K-V形式的表。 将key使用hash算法换算成一个确定的位置，然后把value就放在这个位置上。 但是有一个问题是 hash算法可能会重复。 这样就会导致地址重复，解决的方案是使用一个链表，拉出一串有序的扩展地址<br><br>优点： 做等值查询的时候速度就非常快<br>缺点： 做区间查询速度非常慢。<br>```<br><br>有序数组<br><br>```<br>按照key的顺序存储，这样查询用二分法就可以快速查询，时间复杂度是：O(log(N))<br><br>优点：做等值查询和范围查询的性能就相当优秀<br>缺点：为了维护有序，更新成本相当的高<br><br>所以： 有序数组索引只适用于静态存储引擎，比如你要保存的是 2017 年某个城市的所有人口信息，这类不会再修改的数据。<br>```<br><br>搜索树<br><br>```<br>二叉搜索树：每个节点的左儿子小于父节点，父节点又小于右儿子<br>          查询时间复杂度O(log(N))，更新时间复杂度O(log(N))<br><br>但是数据库存储大多不适用二叉树，因为树高过高，复杂度很高，会使用N叉树<br>```<br><br>学习各种数据库，包括nosql,先明白其数据模型是极其重要的。数据库是用来存储的，所以数据是关键。比如：<br><br>```<br>mysql的B+树；<br>redis底层的 SDS、整数数组、hash表、双向链表、压缩列表、跳表；<br>ES的倒排索引<br>```<br><br>#### 3 InnoDB 的索引模型：<br><br>```<br>1.在 InnoDB 中，每一张表其实就是多个 B+ 树，即一个主键索引树和多个非主键索引树。 <br>2.执行查询的效率，使用主键索引 &gt; 使用非主键索引 &gt; 不使用索引。 <br>3.如果不使用索引进行查询，则从主索引 B+ 树的叶子节点进行遍历。<br>```<br><br>其中：<br><br>主键索引（clustered  index）。叶子节点存放的是整行的数据。<br><br>非主键索引（secondary index）。叶子节点存放的是主键索引的值。<br><br>当只是用了secondary index的时候， 找了主键索引的之后，还可能需要去主键索引那里去找整行数据。 这个操作叫做“回表”。 但如果在secondary index上已经能找到对应的字段时候，就不必做回表操作了。 这个叫做使用到了“覆盖索引”<br><br><br><br>#### 4 索引的维护<br><br>问题： 一个数据页满了，按照B+Tree算法，新增加一个数据页，叫做页分裂，会导致性能下降。空间利用率降低大概50%。当相邻的两个数据页利用率很低的时候会做数据页合并，合并的过程是分裂过程的逆过程。<br><br>```<br>使用自增主键，正符合了我们前面提到的递增插入的场景。每次插入一条新记录，都是追加操作，都不涉及到挪动其他记录，也不会触发叶子节点的分裂。<br>```<br><br>使用自增主键还有其他的好处：<br><br>```<br>1. 可以节约索引空间。 因为secondary index上面是存储的主键索引的值， 主键长度尽量小， 这样普通索引叶子节点占用空间也就越小。<br>```<br><br>#### 5 思考题：<br><br>重建主键索引和非主键索引的sql如下。 请问这两种索引重建会带来什么影响<br><br>```<br># 重建secondary index<br>alter table T drop index k;<br>alter table T add index(k);<br><br>#重建primary index<br>alter table T drop primary key;<br>alter table T add primary key(id);<br>```<br><br>```<br>回答：<br>如果删除，新建主键索引，会同时去修改普通索引对应的主键索引，性能消耗比较大。<br>删除重建普通索引貌似影响不大，不过要注意在业务低谷期操作，避免影响业务<br>```<br>","like_count":0},{"had_liked":false,"id":283380,"user_name":"hello","can_delete":false,"product_type":"c1","uid":1649057,"ip_address":"","ucode":"4F42DAA5DB5C38","user_header":"https://static001.geekbang.org/account/avatar/00/19/29/a1/41607383.jpg","comment_is_top":false,"comment_ctime":1615735983,"is_pvip":true,"discussion_count":0,"race_medal":0,"score":"1615735983","product_id":100020801,"comment_content":"有个疑问，根据树的相关定义，叶子节点是没有子节点的节点，对于InnoDB 的主键索引来说所有的数据存储在叶子节点，那么层高里面的节点存储的是什么呢？","like_count":0},{"had_liked":false,"id":283050,"user_name":"蓝色的疯子","can_delete":false,"product_type":"c1","uid":1351289,"ip_address":"","ucode":"7CCAC6E4C33242","user_header":"https://static001.geekbang.org/account/avatar/00/14/9e/79/505afd9f.jpg","comment_is_top":false,"comment_ctime":1615531435,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1615531435","product_id":100020801,"comment_content":"文章提到“（有序数组）但是，在需要更新数据的时候就麻烦了，你往中间插入一个记录就必须得挪动后面所有的记录，成本太高。”，用链表是不是可以解决这个问题，为什么不使用链表呢？","like_count":0},{"had_liked":false,"id":282864,"user_name":"写bug的黑猫","can_delete":false,"product_type":"c1","uid":2440866,"ip_address":"","ucode":"D366EEC8EF54C6","user_header":"https://static001.geekbang.org/account/avatar/00/25/3e/a2/4b071f4f.jpg","comment_is_top":false,"comment_ctime":1615443991,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1615443991","product_id":100020801,"comment_content":"如果我的数据库表中只创建一个普通索引（非主键索引），它的索引b+树的叶子节点内容的是什么？","like_count":0},{"had_liked":false,"id":282675,"user_name":"yubo","can_delete":false,"product_type":"c1","uid":1813242,"ip_address":"","ucode":"7B95666C1769D1","user_header":"https://static001.geekbang.org/account/avatar/00/1b/aa/fa/8d12c0fe.jpg","comment_is_top":false,"comment_ctime":1615361342,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1615361342","product_id":100020801,"comment_content":"我终于搞懂为什么主键id是递增的了；自增主键的插入数据模式，正符合了我们前面提到的递增插入的场景。每次插入一条新记录，都是追加操作，都不涉及到挪动其他记录，也不会触发叶子节点的分裂。这个系列看得过瘾。<br>","like_count":0},{"had_liked":false,"id":282199,"user_name":"ben harden","can_delete":false,"product_type":"c1","uid":1512500,"ip_address":"","ucode":"6F1AAD00DA1B1B","user_header":"https://static001.geekbang.org/account/avatar/00/17/14/34/6e58aebe.jpg","comment_is_top":false,"comment_ctime":1615129469,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1615129469","product_id":100020801,"comment_content":"老师你好，数据页怎么理解，是B+树中数据存在数据页中吗？<br>","like_count":0},{"had_liked":false,"id":281278,"user_name":"超","can_delete":false,"product_type":"c1","uid":1202105,"ip_address":"","ucode":"F33DC41DEC04AB","user_header":"https://static001.geekbang.org/account/avatar/00/12/57/b9/5b317572.jpg","comment_is_top":false,"comment_ctime":1614673852,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1614673852","product_id":100020801,"comment_content":"自增主键的插入数据模式，正符合了我们前面提到的递增插入的场景。每次插入一条新记录，都是追加操作，都不涉及到挪动其他记录，也不会触发叶子节点的分裂。<br>老师 “不会触发叶子节点分裂” 这句话怎么理解?数据页数据满后,插入新数据后会去申请新的数据页进行“页分裂”过程。文中前面讲的和这句话联系不起来，望老师解答！","like_count":0},{"had_liked":false,"id":280713,"user_name":"御风","can_delete":false,"product_type":"c1","uid":1812807,"ip_address":"","ucode":"51C8212BE06364","user_header":"https://static001.geekbang.org/account/avatar/00/1b/a9/47/ded5da90.jpg","comment_is_top":false,"comment_ctime":1614324914,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1614324914","product_id":100020801,"comment_content":"自增主键不利于数据迁移，比如将多个子系统的数据合并到一个数据库。<br>","like_count":0},{"had_liked":false,"id":280561,"user_name":"Geek_684984","can_delete":false,"product_type":"c1","uid":2149833,"ip_address":"","ucode":"BAE0E43AA80892","user_header":"","comment_is_top":false,"comment_ctime":1614246965,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1614246965","product_id":100020801,"comment_content":"我理解还是得用业务数据做主键,减少回表,提高查询性能","like_count":0},{"had_liked":false,"id":280465,"user_name":"T","can_delete":false,"product_type":"c1","uid":1668015,"ip_address":"","ucode":"4CC56C9EC26B8E","user_header":"https://static001.geekbang.org/account/avatar/00/19/73/af/a0c708ec.jpg","comment_is_top":false,"comment_ctime":1614223857,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1614223857","product_id":100020801,"comment_content":"每一个叶子节点存储的实际上是若干页数据是 吧","like_count":0},{"had_liked":false,"id":277641,"user_name":"Geek_de5309","can_delete":false,"product_type":"c1","uid":1397733,"ip_address":"","ucode":"89BA74A802DD56","user_header":"","comment_is_top":false,"comment_ctime":1612501529,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1612501529","product_id":100020801,"comment_content":"老师，您说在叶子节点中间插入，会把后面的记录挪动，腾出空间，所以说记录在叶子节点内是按数组的方式物理上顺序连续存储？可是MySQL技术内幕innodb存储引擎那本书，194页说叶子节点内部记录也是双向链表，逻辑上连续，物理上不连续。如果是链表，那插入应该就不会涉及挪动其他记录了。数据在叶子节点内到底是顺序存储还是链式存储的呢？","like_count":0},{"had_liked":false,"id":276517,"user_name":"郭罗","can_delete":false,"product_type":"c1","uid":1347320,"ip_address":"","ucode":"2FAF2D2851C03B","user_header":"https://static001.geekbang.org/account/avatar/00/14/8e/f8/38a928eb.jpg","comment_is_top":false,"comment_ctime":1611982758,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1611982758","product_id":100020801,"comment_content":"老师，您好，我有点没有理解到N叉树的“N”和数据块之间的关系。我理解的是N应该只和mysql设置的page有关系吧？因为每次只从硬盘中加载page大小的数据到内存中来。所以“N”的大小应该是数据页大小&#47;(索引大小+指针大小)吧？还望老师能详细解惑。","like_count":0},{"had_liked":false,"id":275599,"user_name":"Long","can_delete":false,"product_type":"c1","uid":1318970,"ip_address":"","ucode":"2417242560360A","user_header":"https://static001.geekbang.org/account/avatar/00/14/20/3a/90db6a24.jpg","comment_is_top":false,"comment_ctime":1611612167,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1611612167","product_id":100020801,"comment_content":"二刷第二天，今天学习到的内容是：<br>1. 建议创建bigint的自增主键，减少使用业务主键。原因是减少分页和数量，也就是插入数据时B+树的分页动作。<br>2. 为什么采用B+树，就是减少树高，减少从磁盘读取的次数。","like_count":0},{"had_liked":false,"id":275157,"user_name":"书木子谢明","can_delete":false,"product_type":"c1","uid":1259879,"ip_address":"","ucode":"3090C080A570BE","user_header":"https://static001.geekbang.org/account/avatar/00/13/39/67/743128f7.jpg","comment_is_top":false,"comment_ctime":1611362394,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1611362394","product_id":100020801,"comment_content":"“主键索引的叶子节点存的是整行数据”，对于大型表（字段多，有clob，blob字段）也是整行数据都在主键索引叶子节点上？","like_count":0},{"had_liked":false,"id":275091,"user_name":"我的喵","can_delete":false,"product_type":"c1","uid":1736650,"ip_address":"","ucode":"A7435BDBDD2587","user_header":"https://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTKyuuhxu0HH4cIKCClCqx0LTurCCYWmNcFwfTWV5te5afsibp2yuDmC9mibEHx0Xy8QlvqvMWWcAib8g/132","comment_is_top":false,"comment_ctime":1611304142,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1611304142","product_id":100020801,"comment_content":"打卡：<br>1、实现索引场景的数据结构有哈希表、有序数组和搜索树。<br>2、其中哈希表由于无序性，只适用于等值查询的场景。<br>3、其中有序数组在查询方面可通过二分达到很好的查找性能，但是如果涉及数据更新成本为O（N）复杂度了，所以有序数组结构适用于静态存储引擎。<br>4、最后一个搜索二叉树，因为其特点，不论是查询还是更新后维护数的结构，复杂度均为0（Log(N)），但是又因为索引不止是存在于内存，还是要写到磁盘上的，所以使用二叉搜索数会导致数的高度过高，从而导致需要访问的数据块就较多，进而产生更多的磁盘IO。所以一般都是多叉搜索树，具体有几个叉要根据存储的数据。在<br>4、页分裂：B+树需要维护索引的有序性，进而如果将要插入的数据所在页满了，就需要从中间隔开分成两页维护索引的有序性<br>5、页合并：与插入数据相反，当删除数据时，如果数据页的利用率较低时，会将数据页进行合并<br>6、最好使用自增主键防止页分裂产生性能裂化，而如果说业务场景中只有一个索引，且这个索引是唯一索引，则直接可以作为主键，因为如果再新搞个自增主键，则业务唯一字段就变为了二级索引字段，会产生不必要的回表操作，导致性能裂化。","like_count":0},{"had_liked":false,"id":274893,"user_name":"凯文小猪","can_delete":false,"product_type":"c1","uid":1980201,"ip_address":"","ucode":"36D8AD0229547F","user_header":"https://static001.geekbang.org/account/avatar/00/1e/37/29/b3af57a7.jpg","comment_is_top":false,"comment_ctime":1611212183,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1611212183","product_id":100020801,"comment_content":"因为下篇还没有读，这里针对主键取值部分做一点讨论。我们的做法是在业务键上设立主键，业务键通常是唯一的且是自增长的，拿电商类场景来说，可以做成发号器+自己业务键排列，仍然是一个有序键，这个键通常是唯一的。主键用自增长的，唯一键就用生成的业务键，再设定几个联合索引实现索引覆盖。对于常规场景通常够用的。","like_count":0},{"had_liked":false,"id":274659,"user_name":"唯一@F","can_delete":false,"product_type":"c1","uid":1177943,"ip_address":"","ucode":"F9B57CDDEB97FA","user_header":"https://static001.geekbang.org/account/avatar/00/11/f9/57/f4d59403.jpg","comment_is_top":false,"comment_ctime":1611113857,"is_pvip":true,"discussion_count":0,"race_medal":0,"score":"1611113857","product_id":100020801,"comment_content":"如果某个字段建立索引之后，字段的值为NULL，这个NULL会存到索引里面去吗？为什么is NULL可以走索引但是is NOT NULL不能走索引？","like_count":0},{"had_liked":false,"id":273875,"user_name":"Geek_7788e0","can_delete":false,"product_type":"c1","uid":2154838,"ip_address":"","ucode":"79ACCD0B884579","user_header":"","comment_is_top":false,"comment_ctime":1610702915,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1610702915","product_id":100020801,"comment_content":"老师您好，想请问一下这句话如何理解<br>“也就是说，自增主键的插入数据模式，正符合了我们前面提到的递增插入的场景。每次插入一条新记录，都是追加操作，都不涉及到挪动其他记录，也不会触发叶子节点的分裂。”<br>    我的理解是：每次插入都是插入到B+树的叶子节点上，叶子节点总会满的，当叶子节点满时不是就会触发叶子结点的分裂吗？这与顺序插入和非顺序插入有什么关联呢？","like_count":0},{"had_liked":false,"id":272425,"user_name":"王小歪","can_delete":false,"product_type":"c1","uid":2276136,"ip_address":"","ucode":"3518550D9CA346","user_header":"https://static001.geekbang.org/account/avatar/00/22/bb/28/a547d2b3.jpg","comment_is_top":false,"comment_ctime":1610087796,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1610087796","product_id":100020801,"comment_content":"回表这个动作是在innodb层完成的还是先将id返回至server层执行器，然后由执行器根据id再调用innodb查询聚簇索引完成的？？？忘老师予以解惑，万分感谢","like_count":0},{"had_liked":false,"id":271985,"user_name":"zjm1314","can_delete":false,"product_type":"c1","uid":2351720,"ip_address":"","ucode":"63B0EAB7045054","user_header":"https://static001.geekbang.org/account/avatar/00/23/e2/68/ce547a12.jpg","comment_is_top":false,"comment_ctime":1609902027,"is_pvip":false,"discussion_count":1,"race_medal":0,"score":"1609902027","product_id":100020801,"comment_content":"如果索引不放在硬盘里，全放在内存里，那么用2叉树是最好的？","like_count":0,"discussions":[{"author":{"id":1397733,"avatar":"","nickname":"Geek_de5309","note":"","ucode":"89BA74A802DD56","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":348387,"discussion_content":"红黑树了解下","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1612532660,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":271980,"user_name":"zjm1314","can_delete":false,"product_type":"c1","uid":2351720,"ip_address":"","ucode":"63B0EAB7045054","user_header":"https://static001.geekbang.org/account/avatar/00/23/e2/68/ce547a12.jpg","comment_is_top":false,"comment_ctime":1609901108,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1609901108","product_id":100020801,"comment_content":"数据页是什么，硬盘存储数据的最小单位么？","like_count":0},{"had_liked":false,"id":271921,"user_name":"Do","can_delete":false,"product_type":"c1","uid":1313480,"ip_address":"","ucode":"EA11EBD6439D1B","user_header":"https://static001.geekbang.org/account/avatar/00/14/0a/c8/dae4a360.jpg","comment_is_top":false,"comment_ctime":1609862447,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1609862447","product_id":100020801,"comment_content":"有个问题请教一下，都说聚簇索引的叶子节点存放的是整行数据，但是我们一行数据一般都会比较大，那是不是说一个叶子节点就只能放一条数据了呢（如果大于8k或者16k），这样不是就导致整个树的高度变高了吗？<br>我的理解聚簇索引的叶子节点是不是应该存放真实数据页的指针呢？<br>请问实际的结构是怎样的呢？","like_count":0},{"had_liked":false,"id":271070,"user_name":"zixuan","can_delete":false,"product_type":"c1","uid":1131300,"ip_address":"","ucode":"C72920DD05B074","user_header":"https://static001.geekbang.org/account/avatar/00/11/43/24/3f9f7c70.jpg","comment_is_top":false,"comment_ctime":1609394357,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1609394357","product_id":100020801,"comment_content":"普通索引的结点值为什么不直接指向数据行的位置（就是帮你把第二次查主键索引提前做了）？不好维护？","like_count":0},{"had_liked":false,"id":270569,"user_name":"阿宝","can_delete":false,"product_type":"c1","uid":1439711,"ip_address":"","ucode":"EE22750E46A03E","user_header":"https://static001.geekbang.org/account/avatar/00/15/f7/df/60889fe8.jpg","comment_is_top":false,"comment_ctime":1609161739,"is_pvip":false,"discussion_count":2,"race_medal":0,"score":"1609161739","product_id":100020801,"comment_content":"老师，已理解了索引模型与查询，但在给表创建索时，没有指定它的索引模型，Mysql是怎么知道用别是哈希表、有序数组还是搜索树来给表建索引的？只有事先创建对应的索引，查询才会用到。","like_count":0,"discussions":[{"author":{"id":1439711,"avatar":"https://static001.geekbang.org/account/avatar/00/15/f7/df/60889fe8.jpg","nickname":"阿宝","note":"","ucode":"EE22750E46A03E","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":558370,"discussion_content":"我问的不是这个意思","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1648261074,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1134266,"avatar":"https://static001.geekbang.org/account/avatar/00/11/4e/ba/580ec429.jpg","nickname":"小兔子乖乖","note":"","ucode":"E5CC0258CF8858","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":370722,"discussion_content":"innodb只有b+树索引","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1619517425,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":268008,"user_name":"Geek_40c668","can_delete":false,"product_type":"c1","uid":1685451,"ip_address":"","ucode":"4F7B6A3D4F4DD1","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/WnbsIzp30vkf8OVicicMHv0Cepxt17aSxdUVIaiaEMullXPE79ywaETSaRl6WeyePiaqqFYoxmK0IXbaUKLpmibD4ng/132","comment_is_top":false,"comment_ctime":1608028649,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1608028649","product_id":100020801,"comment_content":"总结：<br>1.索引是什么：目录，可以快速定位到记录。<br>2.索引的实现：<br>    a. hash：通过hash函数计算记录存放位置<br>         优点：快速等值查询<br>         缺点：不支持区间查询，hash冲突<br>    b.有序数组：根据某个字段进行排序的数组<br>        优点：等值查询和区间查询都优秀<br>        缺点：插入数据太麻烦<br>    c. 搜索树：通过树结构可以均衡查询和删除复杂度(二叉树为例)<br>        优点：查询、插入的时间复杂都是log(n)<br>3.为什么采用B+树？<br>   因为2叉树树高度较大，访问必然次数较多，而磁盘访问又比内存操作慢的多，所以一般数据库都是采用N叉树作为索引结构。<br>  但是B+树的特点需要学习！！！<br>4.mysql索引：<br>    a.mysql的表是由多个B+树组成<br>    b. 主键索引（聚簇索引）。由指向整行数据的id节点组成的B+树。<br>    c. 非主键索引（二级索引）。只包含索引字段，并且指向id。<br>5.回表：通过非主键索引查询到id之后，根据id回到主键索树查找其他信息。<br>6.索引的行 叶？<br>   目前大概知道索引的叶子结点存放的是页，并可以根据页在页内进行二分查找。","like_count":0},{"had_liked":false,"id":265371,"user_name":"Geek_3c283d","can_delete":false,"product_type":"c1","uid":2315498,"ip_address":"","ucode":"B1B1D4930749DB","user_header":"","comment_is_top":false,"comment_ctime":1606879446,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1606879446","product_id":100020801,"comment_content":"讲的很好，nice","like_count":0},{"had_liked":false,"id":264719,"user_name":"Hunter","can_delete":false,"product_type":"c1","uid":2241837,"ip_address":"","ucode":"07F8E2EBD45B65","user_header":"https://static001.geekbang.org/account/avatar/00/22/35/2d/cd0a5440.jpg","comment_is_top":false,"comment_ctime":1606614822,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1606614822","product_id":100020801,"comment_content":"老师好，我觉得你画的B+树结构不完整或者说不正确，B+树的叶子节点之间是有指针的，这部分你没有画出来，也没有讲出来","like_count":0},{"had_liked":false,"id":264500,"user_name":"Geek_9789da","can_delete":false,"product_type":"c1","uid":2308968,"ip_address":"","ucode":"6A4A182A7E2C6B","user_header":"","comment_is_top":false,"comment_ctime":1606480157,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1606480157","product_id":100020801,"comment_content":"我之前试过，联合索引并非一定是按照最左前缀原则，通常是这样，如果非聚簇索引数据量小，可以不走索引，直接走全表扫描","like_count":0},{"had_liked":false,"id":262517,"user_name":"hotspot","can_delete":false,"product_type":"c1","uid":2282653,"ip_address":"","ucode":"873219EC84E6A3","user_header":"https://static001.geekbang.org/account/avatar/00/22/d4/9d/6568f79d.jpg","comment_is_top":false,"comment_ctime":1605755932,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1605755932","product_id":100020801,"comment_content":"有个问题：用身份证号做主键，那么每个二级索引的叶子节点占用约 20 个字节，这句话，为什么身份证号已经做主键了，还说每个二级索引的叶子节点","like_count":0},{"had_liked":false,"id":262208,"user_name":"T","can_delete":false,"product_type":"c1","uid":1668015,"ip_address":"","ucode":"4CC56C9EC26B8E","user_header":"https://static001.geekbang.org/account/avatar/00/19/73/af/a0c708ec.jpg","comment_is_top":false,"comment_ctime":1605665367,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1605665367","product_id":100020801,"comment_content":"索引的叶子节点是存的一页数据，还是一行数据","like_count":0},{"had_liked":false,"id":261964,"user_name":"Darren","can_delete":false,"product_type":"c1","uid":1233310,"ip_address":"","ucode":"C4E9C6DE31F351","user_header":"https://static001.geekbang.org/account/avatar/00/12/d1/9e/39baee9e.jpg","comment_is_top":false,"comment_ctime":1605591554,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1605591554","product_id":100020801,"comment_content":"老师，如果有回表的SQL是不是先查询主键，然后根据主键查询效率更高呢？","like_count":0},{"had_liked":false,"id":261963,"user_name":"Darren","can_delete":false,"product_type":"c1","uid":1233310,"ip_address":"","ucode":"C4E9C6DE31F351","user_header":"https://static001.geekbang.org/account/avatar/00/12/d1/9e/39baee9e.jpg","comment_is_top":false,"comment_ctime":1605591532,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1605591532","product_id":100020801,"comment_content":"也就是说，自增主键的插入数据模式，正符合了我们前面提到的递增插入的场景。每次插入一条新记录，都是追加操作，都不涉及到挪动其他记录，也不会触发叶子节点的分裂<br><br>老师，即使是自增也会存在上一个页满的情况吧？为什么不会叶子节点分裂呢","like_count":0},{"had_liked":false,"id":259842,"user_name":"二姐","can_delete":false,"product_type":"c1","uid":2290089,"ip_address":"","ucode":"3451748DE3895F","user_header":"","comment_is_top":false,"comment_ctime":1604851657,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1604851657","product_id":100020801,"comment_content":"普通索引叶子结点之所以不存储整行数据，而是存储主键的值，这是基于节约内存考虑吗？","like_count":0},{"had_liked":false,"id":258462,"user_name":"NonePro","can_delete":false,"product_type":"c1","uid":1629545,"ip_address":"","ucode":"B94BD45DF52925","user_header":"","comment_is_top":false,"comment_ctime":1604452356,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1604452356","product_id":100020801,"comment_content":"索引递增能减少插入时页分裂的可能，varchar字段修改导致长度变化会不会导致叶分裂呢？","like_count":0},{"had_liked":false,"id":256305,"user_name":"烫烫烫","can_delete":false,"product_type":"c1","uid":1386818,"ip_address":"","ucode":"C06018670DE76A","user_header":"https://static001.geekbang.org/account/avatar/00/15/29/42/43d4b1a8.jpg","comment_is_top":false,"comment_ctime":1603597323,"is_pvip":true,"discussion_count":0,"race_medal":0,"score":"1603597323","product_id":100020801,"comment_content":"老师，文中你说“N 叉”树中的“N”取决于数据块的大小，这里的数据块应该是数据页吧，老师的例子中N约为1200是怎么算出来的呢？我看评论有的说是16*1024&#47;(8+6)，其中16K是数据页默认大小，但这个算的是一个数据页可以存放多少条数据，应该不对吧（即使是不考虑数据页的头尾信息）？麻烦老师解惑","like_count":0},{"had_liked":false,"id":255576,"user_name":"uking","can_delete":false,"product_type":"c1","uid":1522824,"ip_address":"","ucode":"41005AC547327B","user_header":"https://static001.geekbang.org/account/avatar/00/17/3c/88/e83528da.jpg","comment_is_top":false,"comment_ctime":1603375242,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1603375242","product_id":100020801,"comment_content":"老师，我有两个问题，<br>第一：辅助索引如果区分度不高的话，那叶子结点岂不是有成千上万条个主键信息？<br>第二：上一篇文章讲到MVCC，在RC或者RR隔离级别下，获取的是快照版本的数据，那么在请求仅使用到覆盖索引的情况时，读的也是快照版本数据么？也就是说辅助索引的索引列在索引节点中也会包含多版本么？","like_count":0},{"had_liked":false,"id":254287,"user_name":"Geek_7a96ab","can_delete":false,"product_type":"c1","uid":2216479,"ip_address":"","ucode":"32B1FBEDC9221C","user_header":"","comment_is_top":false,"comment_ctime":1603096260,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1603096260","product_id":100020801,"comment_content":"在sql语句中使用between或in时，索引没使用。<br>表用的是innodb引擎, 普通索引，索引方式是btree","like_count":0},{"had_liked":false,"id":252921,"user_name":"Lily","can_delete":false,"product_type":"c1","uid":2224549,"ip_address":"","ucode":"DADAAA9F778169","user_header":"https://static001.geekbang.org/account/avatar/00/21/f1/a5/27dd9533.jpg","comment_is_top":false,"comment_ctime":1602515096,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1602515096","product_id":100020801,"comment_content":" 老师，关于 “主键长度越小，普通索引的叶子节点就越小，普通索引占用的空间也就越小” 这句话我有点疑问？<br>索引树内每个节点的大小应该是一定的，如16KB，只是里面存储的主键越小，一个页能存储的就越多，普通索引整体占用的空间就越小，同时也可能较少i&#47;o操作，不知道理解的对不","like_count":0},{"had_liked":false,"id":250826,"user_name":"sky","can_delete":false,"product_type":"c1","uid":1049994,"ip_address":"","ucode":"C0859057592720","user_header":"https://static001.geekbang.org/account/avatar/00/10/05/8a/e7c5a7e2.jpg","comment_is_top":false,"comment_ctime":1601255215,"is_pvip":false,"discussion_count":1,"race_medal":0,"score":"1601255215","product_id":100020801,"comment_content":"聚簇索引叶子节点会存整行数据，这样会导致存储重复数据吗","like_count":0,"discussions":[{"author":{"id":1135990,"avatar":"https://static001.geekbang.org/account/avatar/00/11/55/76/a55871ab.jpg","nickname":"孙庆良","note":"","ucode":"CA05C4CFEFB0F9","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":309765,"discussion_content":"不会，聚簇索引的叶子节点存了所有行数据，不会有重复，是按顺序来的。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1601433592,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":250583,"user_name":"石栖","can_delete":false,"product_type":"c1","uid":1496443,"ip_address":"","ucode":"35600F645A479F","user_header":"https://static001.geekbang.org/account/avatar/00/16/d5/7b/c512da6a.jpg","comment_is_top":false,"comment_ctime":1601140999,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1601140999","product_id":100020801,"comment_content":"请问OPTIMIZE TABLE [table_name] ，怎么样？和ALTER TABLE [table_name]  ENGINE = InnoDB相比较，区别在哪？","like_count":0},{"had_liked":false,"id":249956,"user_name":"Geek_d3cb3f","can_delete":false,"product_type":"c1","uid":2027229,"ip_address":"","ucode":"C492BFED3A38A9","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/DYAIOgq83eoibIPRa2kiaqficmBgJzgKE19dhZeXTCcGewveAxT9icn1aZwMsHIZkic6nsfn9g62nEzbJJREHicjTnTQ/132","comment_is_top":false,"comment_ctime":1600866452,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1600866452","product_id":100020801,"comment_content":"《数据库原理》中说：聚簇索引的叶子节点就是数据节点，而非聚簇索引的叶子节点仍然是索引节点，只不过有指向对应数据块的指针。<br><br>主键在默认情况下是有唯一键约束的聚簇索引，但它也可以指定为有唯一键约束非聚簇索引。但是，在MySQL中主键必须是聚集索引！！！而SQL Server的主键可以使用非聚集（唯一）索引，而聚集索引可以使非唯一或者可为null值的列。<br><br>在我看来，主键就是为了唯一键约束，索引是为了提高效率。","like_count":0},{"had_liked":false,"id":249329,"user_name":".","can_delete":false,"product_type":"c1","uid":2160907,"ip_address":"","ucode":"B9A8FCDF9534E1","user_header":"https://static001.geekbang.org/account/avatar/00/20/f9/0b/307fb9f8.jpg","comment_is_top":false,"comment_ctime":1600594991,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1600594991","product_id":100020801,"comment_content":"老师，思考题我可不可以这样理解：<br>如果用alter进行移除一个主键的时候，MySQL会默认用一个row_id进行重建聚簇索引，然后再用alter新增一个主键，会把原来的row_id的索引删除，再使用主键重新建一个聚簇索引，这样成本就太高了。","like_count":0},{"had_liked":false,"id":248952,"user_name":"piboye","can_delete":false,"product_type":"c1","uid":1066752,"ip_address":"","ucode":"7CFD8712857A85","user_header":"https://static001.geekbang.org/account/avatar/00/10/47/00/3202bdf0.jpg","comment_is_top":false,"comment_ctime":1600391264,"is_pvip":true,"discussion_count":0,"race_medal":0,"score":"1600391264","product_id":100020801,"comment_content":"先建另外一个名字的索引，再去删除索引，在rename索引。","like_count":0},{"had_liked":false,"id":248527,"user_name":"码农Kevin亮","can_delete":false,"product_type":"c1","uid":1116630,"ip_address":"","ucode":"D34562461CA0A1","user_header":"https://static001.geekbang.org/account/avatar/00/11/09/d6/5f366427.jpg","comment_is_top":false,"comment_ctime":1600214247,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1600214247","product_id":100020801,"comment_content":"请教老师，看到老师回复评论说不建议用uuid作为主键，想问若遇到数据迁移，那么自增id由于不存在不确定性，可能会与库中已有的id产生冲突，而且之前看过一种说法是数据表间不要设置物理约束，那么怎么保证数据迁移后的主键外键一致性?以及如何处理自增主键冲突问题呢？","like_count":0},{"had_liked":false,"id":248266,"user_name":"ltknow","can_delete":false,"product_type":"c1","uid":2009398,"ip_address":"","ucode":"8C1F0F36D374E7","user_header":"https://static001.geekbang.org/account/avatar/00/1e/a9/36/e49b9ccb.jpg","comment_is_top":false,"comment_ctime":1600084548,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1600084548","product_id":100020801,"comment_content":"使用select查询的时候，执行器会把要查询的数据信息丢给引擎，然后引擎再去查询这个数据。<br>索引就是引擎在去查询的时候使用的吗？因为索引可能会存在于磁盘之中，所以引擎使用索引去查询的时候需要先去磁盘把索引拿出来，如果这个是主键索引拿出来的就是整行的数据，普通索引就会只拿主键的值。<br>然后树上每一个节点都是存在一个磁盘块里面的，已二叉树为例，第一次读磁盘会把头节点取出来，拿到手里的是头节点的数据和左右子树的物理地址。然后再通过物理地址去取左右子树的信息，以此类推。<br>B+树是拿到头节点的信息和他下面一排子树的物理地址信息。这样查询磁盘的数量就会变少。","like_count":0},{"had_liked":false,"id":247350,"user_name":"何磊","can_delete":false,"product_type":"c1","uid":1047604,"ip_address":"","ucode":"78934C3ED4A342","user_header":"https://static001.geekbang.org/account/avatar/00/0f/fc/34/c733b116.jpg","comment_is_top":false,"comment_ctime":1599665400,"is_pvip":false,"discussion_count":1,"race_medal":0,"score":"1599665400","product_id":100020801,"comment_content":"老师好，我有一个问题<br>1为什么B+树高度是多少就load多少次磁盘呢？按理说越下面的层存的数据越多、越大，每一层所需的数据块是不一样的，这样每一层访问时也会加载不同数量的数据块，以及所需的内存大小。<br>更有最后一层数据量很大，内存不足以存下这么多内容怎么办？","like_count":0,"discussions":[{"author":{"id":1135990,"avatar":"https://static001.geekbang.org/account/avatar/00/11/55/76/a55871ab.jpg","nickname":"孙庆良","note":"","ucode":"CA05C4CFEFB0F9","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":309766,"discussion_content":"老师这篇文章属于高级篇，你可以先去搜一搜索引的基本介绍和数据结构，有了解之后再来看这篇，会轻松些。几句话不好解释这个问题，得结合图片看。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1601433710,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":246571,"user_name":"Geek_d5992a","can_delete":false,"product_type":"c1","uid":2162378,"ip_address":"","ucode":"49E88E56D36F1E","user_header":"","comment_is_top":false,"comment_ctime":1599407968,"is_pvip":false,"discussion_count":1,"race_medal":0,"score":"1599407968","product_id":100020801,"comment_content":"老师，为什么插入ID 为400 就要往后移动呢，B+ 树叶子节点不是用链表吗","like_count":0,"discussions":[{"author":{"id":1135990,"avatar":"https://static001.geekbang.org/account/avatar/00/11/55/76/a55871ab.jpg","nickname":"孙庆良","note":"","ucode":"CA05C4CFEFB0F9","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":309768,"discussion_content":"一个叶子节点存放的行记录数量是有限的，超过限制后，就要新申请数据页。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1601433818,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":245827,"user_name":"崔经刚","can_delete":false,"product_type":"c1","uid":1827943,"ip_address":"","ucode":"207FDF850860C4","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/P5lTnAkviacPGu5S5XJQGQdTpvkSjAVU9Nu2EYicIpMAjiaNP8aXDtfcIHicSnHw2fVIoqTWGGg48rZVzcficUlbgmw/132","comment_is_top":false,"comment_ctime":1599063509,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1599063509","product_id":100020801,"comment_content":"<br>老师，我想请教下。图4中，主键索引的B+树的叶子节点，比如100下面的R1，也是包含了主键ID的值吗？即R1(100，1)，那这样叶子节点不是包含了主键ID的两个重复值了吗？还是说，由于已经知道ID的值是100了，所以R1(1)呢？我觉得应该是后者，即R1(1)","like_count":0},{"had_liked":false,"id":245268,"user_name":"Throwable","can_delete":false,"product_type":"c1","uid":1066390,"ip_address":"","ucode":"5D50454D3F02F6","user_header":"https://static001.geekbang.org/account/avatar/00/10/45/96/9f5d449f.jpg","comment_is_top":false,"comment_ctime":1598880608,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1598880608","product_id":100020801,"comment_content":"谢谢老师。前公司DBA制定的规范中强制要求必须使用bigint unsigned的主键，之前没思考这样做的好处，看完这节课豁然开朗😁","like_count":0},{"had_liked":false,"id":245087,"user_name":"余佳超","can_delete":false,"product_type":"c1","uid":2127044,"ip_address":"","ucode":"4057F0F64BD753","user_header":"https://static001.geekbang.org/account/avatar/00/20/74/c4/0dabab2c.jpg","comment_is_top":false,"comment_ctime":1598829725,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1598829725","product_id":100020801,"comment_content":"老师，如果InnoDB的表不建立索引，它也是多个B+树构成的吗","like_count":0},{"had_liked":false,"id":243712,"user_name":"F","can_delete":false,"product_type":"c1","uid":1623985,"ip_address":"","ucode":"1C8EFA3B29DB5B","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTK3cxCib9BJKghiaSY5SicT3m5BN8EAx4SPYePEFGo4iaLGB9fiazXAdEzt6iamIiaOvjVsxWN7gqSuHDT3A/132","comment_is_top":false,"comment_ctime":1598254343,"is_pvip":false,"discussion_count":1,"race_medal":0,"score":"1598254343","product_id":100020801,"comment_content":"主键索引和唯一索引有什么关系？<br>主键索引是唯一索引的特例吗？<br>唯一索引的叶子节点也是存储的整行数据吗？","like_count":0,"discussions":[{"author":{"id":1062451,"avatar":"https://static001.geekbang.org/account/avatar/00/10/36/33/67904e86.jpg","nickname":"James","note":"","ucode":"886D1A102C1588","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":345045,"discussion_content":"主键索引是唯一索引的特例\n主键唯一索引存的是整行，二级唯一索引存的就是主键了\n","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1611646241,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":240872,"user_name":"helloworld","can_delete":false,"product_type":"c1","uid":1101762,"ip_address":"","ucode":"003700A99A910B","user_header":"https://static001.geekbang.org/account/avatar/00/10/cf/c2/a5b3ceaf.jpg","comment_is_top":false,"comment_ctime":1597107942,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1597107942","product_id":100020801,"comment_content":"林老师，我这是二刷了，有了疑问：<br><br>听老师在留言区回复说，主键索引的叶子结点存的是 page，page 里有多行。我理解的是，因为主键索引都是唯一的，每一个叶子结点应该只存一行才对。<br><br>林老师，我的理解错在哪里呢？","like_count":0},{"had_liked":false,"id":240768,"user_name":"小石头","can_delete":false,"product_type":"c1","uid":1690759,"ip_address":"","ucode":"7B2EC4C8C6192F","user_header":"https://static001.geekbang.org/account/avatar/00/19/cc/87/2a196164.jpg","comment_is_top":false,"comment_ctime":1597058422,"is_pvip":false,"discussion_count":1,"race_medal":0,"score":"1597058422","product_id":100020801,"comment_content":"弱弱的问下，既然“主键索引的叶子节点存的是整行数据”，那么整张表的数据都在内存里了，什么时候读硬盘呢","like_count":0,"discussions":[{"author":{"id":1135990,"avatar":"https://static001.geekbang.org/account/avatar/00/11/55/76/a55871ab.jpg","nickname":"孙庆良","note":"","ucode":"CA05C4CFEFB0F9","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":309771,"discussion_content":"索引和数据都在硬盘中。InnoDB的主键索引是聚簇索引，即整张表的数据就是以B+树组织的，索引和数据是一起存放的，在一个.ibd文件里，都在硬盘中。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1601434302,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":239981,"user_name":"summer","can_delete":false,"product_type":"c1","uid":1993986,"ip_address":"","ucode":"6F34505ECE6BAF","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTIn0FpbcH9JA9ztMoCZ24BjypZtXCmptVJ6G7ofj3mExRzVaAc4YLgRo6Mlj1OSvbQQicQh3EA2VqQ/132","comment_is_top":false,"comment_ctime":1596705704,"is_pvip":false,"discussion_count":1,"race_medal":0,"score":"1596705704","product_id":100020801,"comment_content":"读完后存在两个问题：<br>1 使用自增主键的好处有两个：（1）文章中提到，使用自增主键会递增插入，不涉及到挪到其他数据；（2）节省普通索引占用的空间。这里的好处应该和删除操作没有关系吧？<br>2 为了不进行分裂过程的逆过程，对于数据的删除，一般是建议逻辑删除吗？","like_count":0,"discussions":[{"author":{"id":1062451,"avatar":"https://static001.geekbang.org/account/avatar/00/10/36/33/67904e86.jpg","nickname":"James","note":"","ucode":"886D1A102C1588","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":345046,"discussion_content":"2 一般都是逻辑删除吧","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1611646320,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":237529,"user_name":"Geek_93a721","can_delete":false,"product_type":"c1","uid":2040594,"ip_address":"","ucode":"0168AEA57AF4EF","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTI4Gr57Aia5McdvyQco8hKpaibeeYUhQcMtaFhNtHESSF7MPq5OdQBQpCBYicl7Libt6MjWKNJvmGwODA/132","comment_is_top":false,"comment_ctime":1595855852,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1595855852","product_id":100020801,"comment_content":"老师 我想问下为啥非主键索引的叶子节点内容是主键的值，为啥不存为主键的地址？","like_count":0},{"had_liked":false,"id":237482,"user_name":"黑客时间","can_delete":false,"product_type":"c1","uid":1831324,"ip_address":"","ucode":"7E22D76EECAC4D","user_header":"https://static001.geekbang.org/account/avatar/00/1b/f1/9c/cd12361d.jpg","comment_is_top":false,"comment_ctime":1595843133,"is_pvip":false,"discussion_count":1,"race_medal":0,"score":"1595843133","product_id":100020801,"comment_content":"丁奇老师<br>既然Mysql在发现没有主键时，会默认创建一个row_id 作为聚簇索引，那么是不是可以不用创建主键了","like_count":0,"discussions":[{"author":{"id":1135990,"avatar":"https://static001.geekbang.org/account/avatar/00/11/55/76/a55871ab.jpg","nickname":"孙庆良","note":"","ucode":"CA05C4CFEFB0F9","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":309773,"discussion_content":"业务开发中，每个资源都是要有主键的，作为唯一标记。InnoDB自动生成的row_id不知道业务代码里能否读取到，即使能读到，也建议自己生成主键，自主可控。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1601434423,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":237272,"user_name":"Snow","can_delete":false,"product_type":"c1","uid":2076462,"ip_address":"","ucode":"D93FEB8E9042B5","user_header":"https://static001.geekbang.org/account/avatar/00/1f/af/2e/59b35e16.jpg","comment_is_top":false,"comment_ctime":1595762142,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1595762142","product_id":100020801,"comment_content":"非叶子结点存的应该是索引字段和页号吧，然后叶子结点是数据页","like_count":0},{"had_liked":false,"id":237024,"user_name":"Geek_4660f3","can_delete":false,"product_type":"c1","uid":1757482,"ip_address":"","ucode":"8B59B0C29EF88A","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTIMFaaIb1ZyU6zuYrT2WlD4RrsV2orxLonpIFwsx3ic01OLJ0N4dnSXQ3mFQxnbemiabKDw9810rX4Q/132","comment_is_top":false,"comment_ctime":1595658099,"is_pvip":false,"discussion_count":1,"race_medal":0,"score":"1595658099","product_id":100020801,"comment_content":"mysql默认索引一个节点的大小是16K，但是磁盘一页默认大小不是4K或者8K。那加载一个数据节点是不是要读多次磁盘。当修改索引节点大小的时候，是不是读磁盘的数量也会增加","like_count":0,"discussions":[{"author":{"id":1526355,"avatar":"https://static001.geekbang.org/account/avatar/00/17/4a/53/063f9d17.jpg","nickname":"moonfox","note":"","ucode":"902BFF40EFA9FA","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":333810,"discussion_content":"寻址只进行一次呀，之后就是读取16K的数据，读数据是很快的。如果发生了多次寻址，那说明16K的部分数据在其它磁道上，这种几率可以忽略吧。如果在相邻磁盘上，切换也会很快的","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1607618333,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":236984,"user_name":"鱼丸粗面","can_delete":false,"product_type":"c1","uid":1785016,"ip_address":"","ucode":"B2F3F75B0D1422","user_header":"https://static001.geekbang.org/account/avatar/00/1b/3c/b8/9489387c.jpg","comment_is_top":false,"comment_ctime":1595642564,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1595642564","product_id":100020801,"comment_content":"主键长度变小对于非叶子节点来讲也有很大好处吧，一个16kb的非叶子节点可以存储更多的索引数据，也就是提高了B+树的m值，在数据量大的时候可以有效降低树的高度，从而减少查询次数和磁盘io","like_count":0},{"had_liked":false,"id":236920,"user_name":"Zain","can_delete":false,"product_type":"c1","uid":1920896,"ip_address":"","ucode":"03EDF7B1BE9CF8","user_header":"https://static001.geekbang.org/account/avatar/00/1d/4f/80/19f946ba.jpg","comment_is_top":false,"comment_ctime":1595585081,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1595585081","product_id":100020801,"comment_content":"同学们问的问题和老师回答的都挺精彩的，要是极客的评论区能有检索功能就好了，哈哈哈","like_count":0},{"had_liked":false,"id":236275,"user_name":"浩子😃","can_delete":false,"product_type":"c1","uid":1024373,"ip_address":"","ucode":"ABE6A290713E2B","user_header":"https://static001.geekbang.org/account/avatar/00/0f/a1/75/abb7bfe3.jpg","comment_is_top":false,"comment_ctime":1595382913,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1595382913","product_id":100020801,"comment_content":"如果删除主键，那么还可以查询普通索引吗？普通索引是否还有回表行为？","like_count":0},{"had_liked":false,"id":234835,"user_name":"所念皆星河","can_delete":false,"product_type":"c1","uid":2061487,"ip_address":"","ucode":"E7DE2CAB5BABE3","user_header":"https://static001.geekbang.org/account/avatar/00/1f/74/af/6f7ccec6.jpg","comment_is_top":false,"comment_ctime":1594807167,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1594807167","product_id":100020801,"comment_content":"想问下:既然非主键索引查询时要回表,为什么不跟主键索引一样在叶子节点上都存储行数据呢,这样就不用回表了,是因为这样存储会过多占用数据库资源么?","like_count":0},{"had_liked":false,"id":234736,"user_name":"Geek_664206","can_delete":false,"product_type":"c1","uid":1480524,"ip_address":"","ucode":"585B39AA780B26","user_header":"","comment_is_top":false,"comment_ctime":1594782498,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1594782498","product_id":100020801,"comment_content":"有两个问题我没有想清楚，想请加下老师：<br>1.老师举例的非主键索引，图片中其实是一个唯一索引，每个K值对应了一个主键ID，如果是非主键索引，每个K值对应多个ID，那么应该怎么存储这些ID？<br>2.如果我使用了一个区分度特别低的列建立索引，比如性别字段(男、女)，那么B+树应该是个几叉树？叶子结点如何管理？如何存储主键ID？又如何进行页分裂呢？","like_count":0},{"had_liked":false,"id":234016,"user_name":"Geek_89d889","can_delete":false,"product_type":"c1","uid":2039836,"ip_address":"","ucode":"298EB25644BCB4","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTKD1mzRwEoY04e4oF4jBGhDicdSIZSUzLicyHyRpyFJovicnfTHhLSWiaicFLCqUIQricQBqkZO89b835yQ/132","comment_is_top":false,"comment_ctime":1594552984,"is_pvip":false,"discussion_count":1,"race_medal":0,"score":"1594552984","product_id":100020801,"comment_content":"mysql 为什么要用b+树 这个 有细讲吗 ？","like_count":0,"discussions":[{"author":{"id":1135990,"avatar":"https://static001.geekbang.org/account/avatar/00/11/55/76/a55871ab.jpg","nickname":"孙庆良","note":"","ucode":"CA05C4CFEFB0F9","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":309774,"discussion_content":"这篇文章没有从零开始讲，建议网上自己搜搜一下。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1601434465,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":233686,"user_name":"Geek_4660f3","can_delete":false,"product_type":"c1","uid":1757482,"ip_address":"","ucode":"8B59B0C29EF88A","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTIMFaaIb1ZyU6zuYrT2WlD4RrsV2orxLonpIFwsx3ic01OLJ0N4dnSXQ3mFQxnbemiabKDw9810rX4Q/132","comment_is_top":false,"comment_ctime":1594387169,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1594387169","product_id":100020801,"comment_content":"当添加数据的时候，对于自增的主键可以直接在后面添加不用造成数据移动，但是对于普通索引还是会造成叶子节点数据移动，节点分裂是的么？","like_count":0},{"had_liked":false,"id":232497,"user_name":"。。。","can_delete":false,"product_type":"c1","uid":1035567,"ip_address":"","ucode":"6882BABE9C3D6B","user_header":"https://static001.geekbang.org/account/avatar/00/0f/cd/2f/f4adcb41.jpg","comment_is_top":false,"comment_ctime":1594020030,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1594020030","product_id":100020801,"comment_content":"有序数组索引只适用于静态存储引擎, 其中的 静态存储引擎 怎么理解?","like_count":0},{"had_liked":false,"id":229660,"user_name":"HaydnSyx","can_delete":false,"product_type":"c1","uid":1185263,"ip_address":"","ucode":"2B4241CD385875","user_header":"https://static001.geekbang.org/account/avatar/00/12/15/ef/84ed23fb.jpg","comment_is_top":false,"comment_ctime":1593090594,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1593090594","product_id":100020801,"comment_content":"老师，联合索引的B+树结构是什么样的","like_count":0},{"had_liked":false,"id":227947,"user_name":"tree","can_delete":false,"product_type":"c1","uid":1308025,"ip_address":"","ucode":"AA7CA46DD3E88C","user_header":"https://static001.geekbang.org/account/avatar/00/13/f5/79/e844617c.jpg","comment_is_top":false,"comment_ctime":1592529243,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1592529243","product_id":100020801,"comment_content":"树高20，磁盘IO为20，网络上有太多迷惑性的答案了，给人的感觉就是一个数据块就一个节点，其实并不是，这里面涉及到平衡二叉树在外存的存储结构以及磁盘预读，局部性原理，说下我自己的理解，有错还请老师更正。<br>AVL在外存的存储结构一般有两种：第一种是顺序存储结构（数组），第二种是链式存储结构（链表），这就导致了在逻辑上很近的节点（父子）在物理上可能很远，无法利用局部性，于是读出的数据块很有可能只有我们想要的一个节点，因此，AVL的I&#47;O渐进复杂度跟树高（h）挂钩，为O（h）,所以树高20，其实I&#47;O的渐进复杂度就为20。","like_count":0},{"had_liked":false,"id":227829,"user_name":"tree","can_delete":false,"product_type":"c1","uid":1308025,"ip_address":"","ucode":"AA7CA46DD3E88C","user_header":"https://static001.geekbang.org/account/avatar/00/13/f5/79/e844617c.jpg","comment_is_top":false,"comment_ctime":1592489939,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1592489939","product_id":100020801,"comment_content":"老师好，请教一个问题，你可以想象一下一棵 100 万节点的平衡二叉树，树高 20。一次查询可能需要访问 20 个数据块。<br>数据块大小为4k，一次查询最坏情况可能要访问20个数据块，这是不是代表一个数据块只存储一个AVL节点，假设AVL节点大小只有100字节，那这样子其它空间不是浪费了吗，因为单看这句话给我的理解就是一个数据块就是一个AVL节点，希望老师可以帮我解答，谢谢老师","like_count":0},{"had_liked":false,"id":225547,"user_name":"Geek_d38f30","can_delete":false,"product_type":"c1","uid":1512147,"ip_address":"","ucode":"955D6480731336","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/ib1aca6ibMC3bcTZeVdTFalyyhdvy4DLQ7s4WBTWaw95k8IJNTUkZ5VwfB9rYwxVz3PAz4chBJhWcyMHib9KdEEnQ/132","comment_is_top":false,"comment_ctime":1591782513,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1591782513","product_id":100020801,"comment_content":"非主键索引是独立的，删了重建影响不大。但主键索引和数据放一起，删除了主键索引，非主键索引也要更新索引对应的主键id.","like_count":0},{"had_liked":false,"id":223998,"user_name":"微末凡尘","can_delete":false,"product_type":"c1","uid":1099525,"ip_address":"","ucode":"25EDFD0914D0F4","user_header":"https://static001.geekbang.org/account/avatar/00/10/c7/05/19c5c255.jpg","comment_is_top":false,"comment_ctime":1591252921,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1591252921","product_id":100020801,"comment_content":"(1)索引的目的：加快查询的速度，就和书的目录一样<br>(2)索引不但写在内存中还写在磁盘中<br>(3)索引的存储引擎主要有：innodb和myisam<br>(4)索引常见数据模型<br>    1）哈希表：以key和value存储数据的结构<br>        - 以某个哈希函数计算出一个哈希值，然后把数据放在这个哈希值的位置上<br>        - 哈希处理冲突的方法：链表<br>        - 哈希索引的使用场景为：等值查询，不适用与区间查询<br>    2）有序数组：按照顺序存储，查询的时候可以使用二分法，效率很高，时间复杂度为O(logn)<br>        - 查询效率很高，但是更新效率很低，需要移动大量的数据才行<br>        - 适用场景：适合静态存储引擎，比如某些数据不变的<br>    3）搜索树：每个节点的左节点小于父节点，父节点小于右节点，查询和更新的时间复杂度都是O(logn)<br>        - 数据库一般采用多叉树，而不是二叉树，因为二叉树的树太高，导致频繁的进行磁盘IO操作，影响效率<br>(5)innodb的存储引擎<br>      在 InnoDB 中，表都是根据主键顺序以索引的形式存放的，这种存储方式的表称为索引组织表。又因为前面我们提到的，InnoDB 使用了 B+ 树索引模型，所以数据都是存储在 B+ 树中的。<br>       1）索引类型<br>            主键索引(聚簇索引)：叶子节点存储的数据为真实数据，根据主键索引查询数据可以直接得到数据，效率比较高<br>             普通索引(二级索引)：叶子节点存储的数据为主键索引的值，根据普通索引查询，先查询到主键索引的值，然后再去查询到真实的数据，这个过程也叫做回表<br>【索引维护】<br>（1）B+树为了维护索引的有序性，所以需要做索引维护<br>        1）页分裂、页合并。 页分裂使空间利用率降低了50%。<br>                ~~一个数据页满了，按照B+Tree算法，新增加一个数据页，叫做页分裂，会导致性能下降。空间利用率降低大概50%。当相邻的两个数据页利用率很低的时候会做数据页合并，合并的过程是分裂过程的逆过程<br>（2）自增主键的使用场景<br>        1）主键长度越小，普通索引的叶子节点就越小，普通索引占用的空间也就越小<br>        2）业务字段做主键场景：1：只有一个索引 2：该索引必须是唯一索引 这是典型的kv场景<br>                由于没有其他索引，估不用考虑其它索引叶子节点大小的问题，故将该值设为主键索引<br>         ","like_count":0},{"had_liked":false,"id":220350,"user_name":"Pray、PF","can_delete":false,"product_type":"c1","uid":1706074,"ip_address":"","ucode":"1E3E4073763490","user_header":"https://static001.geekbang.org/account/avatar/00/1a/08/5a/4d709cf5.jpg","comment_is_top":false,"comment_ctime":1590225546,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1590225546","product_id":100020801,"comment_content":"更合适的情况第二种，因为如果是第一种索引建在非主键列上，会多一次遍历树，并且从存储空间上看也是比较浪费空间的","like_count":0},{"had_liked":false,"id":217202,"user_name":"David.cui","can_delete":false,"product_type":"c1","uid":1302228,"ip_address":"","ucode":"AB46F310403612","user_header":"https://static001.geekbang.org/account/avatar/00/13/de/d4/b83c4185.jpg","comment_is_top":false,"comment_ctime":1589439376,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1589439376","product_id":100020801,"comment_content":"mysql的secondary  index是不是独有的啊，其他数据库看不到有查询回表的现象","like_count":0},{"had_liked":false,"id":216379,"user_name":"Geek_a8be59","can_delete":false,"product_type":"c1","uid":1563985,"ip_address":"","ucode":"BEC0F57B51DC44","user_header":"https://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTKdiaUiaCYQe9tibemaNU5ya7RrU3MYcSGEIG7zF27u0ZDnZs5lYxPb7KPrAsj3bibM79QIOnPXAatfIw/132","comment_is_top":false,"comment_ctime":1589249111,"is_pvip":false,"discussion_count":1,"race_medal":0,"score":"1589249111","product_id":100020801,"comment_content":"老师您好，我有个问题请教一下。就是这边一个索引模型是有序数组。我想问的是这个有序数组和链表有什么区别，我记得在C中链表的插入数据的时候将两边的指针替换一下就好了，感觉并不会开销很大啊。如果这两个不是同一个东西，为什么不直接用有序的链表呢？","like_count":0,"discussions":[{"author":{"id":1596646,"avatar":"https://static001.geekbang.org/account/avatar/00/18/5c/e6/024c7d3b.jpg","nickname":"L","note":"","ucode":"C2D7FB938ABA3B","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":324452,"discussion_content":"数组是开辟一段连续的空间存档数据，链表是通过指针指向的地址，方式不一样。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1605103501,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":216018,"user_name":"李二木","can_delete":false,"product_type":"c1","uid":1103091,"ip_address":"","ucode":"30E03BB84ADB27","user_header":"https://static001.geekbang.org/account/avatar/00/10/d4/f3/129d6dfe.jpg","comment_is_top":false,"comment_ctime":1589168296,"is_pvip":true,"discussion_count":0,"race_medal":0,"score":"1589168296","product_id":100020801,"comment_content":"有个问题。一般表数据量都是线性增长的。在创建索引的时候，是N叉树，如果数据量增加到某一点，N叉树索引会变为X叉树吗？","like_count":0},{"had_liked":false,"id":215506,"user_name":"miao","can_delete":false,"product_type":"c1","uid":1997488,"ip_address":"","ucode":"E65D870386C4DE","user_header":"https://static001.geekbang.org/account/avatar/00/1e/7a/b0/0731afa8.jpg","comment_is_top":false,"comment_ctime":1589005533,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1589005533","product_id":100020801,"comment_content":"老师，问你个问题，之前有系统，是使用 36位的不重复key 做主键，这个你没介绍一下，跟 int 做主键的区别的利弊，36位的key 做主键弊端比较多，业务上可能会好点。不懂，如果像这种不重复的36位key ，是怎么做主键，走索引的呢？","like_count":0},{"had_liked":false,"id":215202,"user_name":"biubiubiu","can_delete":false,"product_type":"c1","uid":1994714,"ip_address":"","ucode":"0737CA75A697F5","user_header":"https://static001.geekbang.org/account/avatar/00/1e/6f/da/def130f9.jpg","comment_is_top":false,"comment_ctime":1588928064,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1588928064","product_id":100020801,"comment_content":"看了三遍<br>对索引有了一定的认识<br>递增与非递增的优缺点<br>以及理解了主键索引与非主键索引之间的区别<br>有所收获的感觉很棒<br>感谢","like_count":0},{"had_liked":false,"id":213647,"user_name":"Jc.Chen","can_delete":false,"product_type":"c1","uid":1180676,"ip_address":"","ucode":"36886491352CD4","user_header":"https://static001.geekbang.org/account/avatar/00/12/04/04/0af56558.jpg","comment_is_top":false,"comment_ctime":1588498998,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1588498998","product_id":100020801,"comment_content":"老师，这里“页分裂操作还影响数据页的利用率。原本放在一个页的数据，现在分到两个页中，整体空间利用率降低大约 50%”不是很明白；之所以分到两个页中，不是因为第一个页被占满了，才会分到第二页吗","like_count":0},{"had_liked":false,"id":212162,"user_name":"无名之辈","can_delete":false,"product_type":"c1","uid":1108247,"ip_address":"","ucode":"23AB28F44A769C","user_header":"https://static001.geekbang.org/account/avatar/00/10/e9/17/c78d3963.jpg","comment_is_top":false,"comment_ctime":1588068917,"is_pvip":true,"discussion_count":0,"race_medal":0,"score":"1588068917","product_id":100020801,"comment_content":"1.索引的常见模型以及模型的优劣试用场景<br>2.InnoDB索引模型和索引类型<br>3.回表<br>4.索引维护-页分裂<br>5.B+树详解<br>6.如何避免长事务的影响？","like_count":0},{"had_liked":false,"id":208781,"user_name":"阳光","can_delete":false,"product_type":"c1","uid":1964086,"ip_address":"","ucode":"8B9F6A14576636","user_header":"https://static001.geekbang.org/account/avatar/00/1d/f8/36/3f338c90.jpg","comment_is_top":false,"comment_ctime":1587437710,"is_pvip":false,"discussion_count":1,"race_medal":0,"score":"1587437710","product_id":100020801,"comment_content":"老师建立了索引访问10亿表 为什么说第二层很大概率在内存中","like_count":0,"discussions":[{"author":{"id":1526355,"avatar":"https://static001.geekbang.org/account/avatar/00/17/4a/53/063f9d17.jpg","nickname":"moonfox","note":"","ucode":"902BFF40EFA9FA","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":333812,"discussion_content":"第二层是1200个页，1200 * 16KB ，内存是放的下的","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1607618858,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":206123,"user_name":"Poppy","can_delete":false,"product_type":"c1","uid":1501505,"ip_address":"","ucode":"AF656A00521037","user_header":"https://static001.geekbang.org/account/avatar/00/16/e9/41/7cb2cf64.jpg","comment_is_top":false,"comment_ctime":1586789923,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1586789923","product_id":100020801,"comment_content":"打卡  好多知识点","like_count":0},{"had_liked":false,"id":205952,"user_name":"在西伯利亚森林养猫","can_delete":false,"product_type":"c1","uid":1952827,"ip_address":"","ucode":"325717E50D469F","user_header":"https://static001.geekbang.org/account/avatar/00/1d/cc/3b/8ce7c7b1.jpg","comment_is_top":false,"comment_ctime":1586762830,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1586762830","product_id":100020801,"comment_content":"&quot;自增主键的插入数据模式，正符合了我们前面提到的递增插入的场景。每次插入一条新记录，都是追加操作，都不涉及到挪动其他记录，也不会触发叶子节点的分裂。&quot;   我觉得有点问题呀大大，所以递增确实不会挪动其他的记录，但是会触发叶子节点的分裂吧，就像是你说的，当一个数据页满了之后，不也是会分成两个数据页吗？为什么说不会触发叶子节点的分裂呢？老师","like_count":0},{"had_liked":false,"id":205416,"user_name":"Mr.White","can_delete":false,"product_type":"c1","uid":1072871,"ip_address":"","ucode":"11BEC70E55F9B1","user_header":"https://static001.geekbang.org/account/avatar/00/10/5e/e7/135af4be.jpg","comment_is_top":false,"comment_ctime":1586612691,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1586612691","product_id":100020801,"comment_content":"索引的出现其实就是为了提高数据查询的效率，就像书的目录一样<br><br>以前去乐惠面试，面试官就问了一个类似的问题。我就说索引就是书的目录吧。他说我说的不具体。然后我就问哪怎么比喻好呢。 他说树杈。。 我。。。。 想想感觉这人有点逗比。","like_count":0},{"had_liked":false,"id":204611,"user_name":"Gradual","can_delete":false,"product_type":"c1","uid":1605804,"ip_address":"","ucode":"B39549533B005D","user_header":"https://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTLdUiaRzFib5cPVmuM3jdNu1AtrRKyj5ulC5ghKADk5QicVtUAibK52gIPJxqOddkH77sP375oSHkLXeA/132","comment_is_top":false,"comment_ctime":1586429078,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1586429078","product_id":100020801,"comment_content":"如果id为主键索引，k为普通索引，那么select id from t where k=xxx，通过k的b+树就拿到了id值，是不是不用回表了呢","like_count":0},{"had_liked":false,"id":203095,"user_name":"金重石頁⁴².₁₉₅","can_delete":false,"product_type":"c1","uid":1648865,"ip_address":"","ucode":"38F3DD549A5676","user_header":"https://static001.geekbang.org/account/avatar/00/19/28/e1/93886c86.jpg","comment_is_top":false,"comment_ctime":1586138990,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1586138990","product_id":100020801,"comment_content":"alter table T drop index 的做法会导致该字段索引一段时间内不可用。特别当字段行数较多，add index时间较长的时候。<br>我了解的做法：<br>repair table 的时候会重建 index<br>ALTER TABLE T ENGINE = InnoDB; 修改表属性等同重建表，索引也被重建<br>以上两种没有应用过不确定效率，但可能只针对行数较少的表效率高，同样可能影响查询<br><br>OPTIMIZE TABLE T<br>相当于在线重建表，索引也是在线重建，对查询影响较小<br><br>另外一种对非主键索引有效的方式是，新建一个索引，再删掉老的索引。<br><br>","like_count":0},{"had_liked":false,"id":203021,"user_name":"ArvinYo","can_delete":false,"product_type":"c1","uid":1080570,"ip_address":"","ucode":"278082A2A07F73","user_header":"https://static001.geekbang.org/account/avatar/00/10/7c/fa/ce48519e.jpg","comment_is_top":false,"comment_ctime":1586102808,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1586102808","product_id":100020801,"comment_content":"information_schema.Innodb_trx,老师这个值一般设置成多大比较好呢","like_count":0},{"had_liked":false,"id":192232,"user_name":"webs507wh","can_delete":false,"product_type":"c1","uid":1625555,"ip_address":"","ucode":"F93B8906D164F7","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/JF5ZUbI5KMFsTASqrVTUhpxyrOqGtBR4iaobxaASEjyZ7rPic50kzqQvNhFOw04MkyzUN0sc3pu7QsJwD57moibtw/132","comment_is_top":false,"comment_ctime":1584843809,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1584843809","product_id":100020801,"comment_content":"对b树算法不是很了解","like_count":0},{"had_liked":false,"id":191799,"user_name":"单色","can_delete":false,"product_type":"c1","uid":1907486,"ip_address":"","ucode":"A1DA6E497FD74C","user_header":"https://static001.geekbang.org/account/avatar/00/1d/1b/1e/f5c16f7e.jpg","comment_is_top":false,"comment_ctime":1584797182,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1584797182","product_id":100020801,"comment_content":"看专栏的时候，知识点理解了，但是相对一部分忘的也快，刷评论，看留言，忘的那些就有补回来了。继续多看多刷，冲冲冲！","like_count":0},{"had_liked":false,"id":189960,"user_name":"LOST","can_delete":false,"product_type":"c1","uid":1909835,"ip_address":"","ucode":"5CAE095974CCA4","user_header":"https://static001.geekbang.org/account/avatar/00/1d/24/4b/6457b730.jpg","comment_is_top":false,"comment_ctime":1584586023,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1584586023","product_id":100020801,"comment_content":"老师，二叉树这一块不太理解，用回您举的例子，假设我要查找ID_card_n2，请问具体是怎么实现？从UserA开始逐个做大小对比吗？根据图表，UserC&gt;UserA，UserC&gt;UserF ，那么UserA和UserF怎么区分？","like_count":0},{"had_liked":false,"id":189615,"user_name":"Sid","can_delete":false,"product_type":"c1","uid":1115041,"ip_address":"","ucode":"0461B574B2736B","user_header":"https://static001.geekbang.org/account/avatar/00/11/03/a1/e6a0f60b.jpg","comment_is_top":false,"comment_ctime":1584534531,"is_pvip":false,"discussion_count":1,"race_medal":0,"score":"1584534531","product_id":100020801,"comment_content":"想问下innodb的页的大小设置和磁盘块大小、操作系统里的页大小有什么关系？","like_count":0,"discussions":[{"author":{"id":1360250,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/DYAIOgq83erFY9H3mxyTpZ9gxAmdeKic565hicicDZmv7cjswd8hdernmxib0chdQrlDNKUZQ8AticQCgDdgVEmJNuA/132","nickname":"牧鱼","note":"","ucode":"0EB8FDD7A4BB2E","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":212507,"discussion_content":"没关系","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1584975364,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":189052,"user_name":"运维老胡","can_delete":false,"product_type":"c1","uid":1227007,"ip_address":"","ucode":"DF398BEE296E11","user_header":"https://static001.geekbang.org/account/avatar/00/12/b8/ff/249da6da.jpg","comment_is_top":false,"comment_ctime":1584450587,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1584450587","product_id":100020801,"comment_content":"删除索引和添加索引可以放在一起操作，避免2次开销，ALTER TABLE T DROP INDEX K,ADD INDEX K。主键索引如果是有大量数据的情况下，不建议操作，需要重建表数据，开销很大 ","like_count":0},{"had_liked":false,"id":186909,"user_name":"平凡之路","can_delete":false,"product_type":"c1","uid":1669273,"ip_address":"","ucode":"96CE12339BD5FD","user_header":"https://static001.geekbang.org/account/avatar/00/19/78/99/6060eb2d.jpg","comment_is_top":false,"comment_ctime":1583968235,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1583968235","product_id":100020801,"comment_content":"老师你好，如果一个表没有主键索引，只有普通索引，那普通索引存储的是什么呢","like_count":0},{"had_liked":false,"id":186632,"user_name":"Walk beside you","can_delete":false,"product_type":"c1","uid":1803932,"ip_address":"","ucode":"C3FDED0004C763","user_header":"https://static001.geekbang.org/account/avatar/00/1b/86/9c/f1c43834.jpg","comment_is_top":false,"comment_ctime":1583893869,"is_pvip":false,"discussion_count":1,"race_medal":0,"score":"1583893869","product_id":100020801,"comment_content":"老师，自增主键是好用，但是在删除数据的时候也会存在页合并的问题啊！那我是不是考虑可以执行假删除的操作","like_count":0,"discussions":[{"author":{"id":1360250,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/DYAIOgq83erFY9H3mxyTpZ9gxAmdeKic565hicicDZmv7cjswd8hdernmxib0chdQrlDNKUZQ8AticQCgDdgVEmJNuA/132","nickname":"牧鱼","note":"","ucode":"0EB8FDD7A4BB2E","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":212512,"discussion_content":"感觉这个不错。如果不是索引字段，不会影响索引","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1584975516,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":185413,"user_name":"study more","can_delete":false,"product_type":"c1","uid":1739834,"ip_address":"","ucode":"9E6BF84AC0F806","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/eBicObx4oYda2xhxI98OiayPvx0sJiaNFT94PuuaDjckf5icmibdkBDBNv41IvPV43QryKOQyUlasl3OolPGaeBTvnw/132","comment_is_top":false,"comment_ctime":1583577224,"is_pvip":false,"discussion_count":1,"race_medal":0,"score":"1583577224","product_id":100020801,"comment_content":"老师,在 @天天向上 innodb B+树主键索引的叶子节点存的是什么 的这条评论里, 我没有明白为什么主键索引叶子节点存的是页这一说法. 页 里面存储了整个主键索引树, 而主键索引的数据又是页?","like_count":0,"discussions":[{"author":{"id":1360250,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/DYAIOgq83erFY9H3mxyTpZ9gxAmdeKic565hicicDZmv7cjswd8hdernmxib0chdQrlDNKUZQ8AticQCgDdgVEmJNuA/132","nickname":"牧鱼","note":"","ucode":"0EB8FDD7A4BB2E","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":212484,"discussion_content":"主键索引存储的是叶子节点存储所有数据，而数据就是页","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1584974691,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":184359,"user_name":"Kvicii.Y","can_delete":false,"product_type":"c1","uid":1442588,"ip_address":"","ucode":"446BFA633569EA","user_header":"https://static001.geekbang.org/account/avatar/00/16/03/1c/c9fe6738.jpg","comment_is_top":false,"comment_ctime":1583297889,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1583297889","product_id":100020801,"comment_content":"聚簇索引叶子结点存的是数据页？数据页里面有多个行记录，相当于把页加载到内存度数据更快吧？","like_count":0},{"had_liked":false,"id":183716,"user_name":"geek","can_delete":false,"product_type":"c1","uid":1266089,"ip_address":"","ucode":"2A0A09B7C8C4D3","user_header":"https://static001.geekbang.org/account/avatar/00/13/51/a9/36df854c.jpg","comment_is_top":false,"comment_ctime":1583119612,"is_pvip":false,"discussion_count":1,"race_medal":0,"score":"1583119612","product_id":100020801,"comment_content":"https:&#47;&#47;dev.mysql.com&#47;doc&#47;refman&#47;5.7&#47;en&#47;innodb-physical-structure.html 老师以上的mysql官方的文档，为什么官方说是用B-Tree，实在不知道该如何是好，望回复解惑，不胜感激","like_count":0,"discussions":[{"author":{"id":1360250,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/DYAIOgq83erFY9H3mxyTpZ9gxAmdeKic565hicicDZmv7cjswd8hdernmxib0chdQrlDNKUZQ8AticQCgDdgVEmJNuA/132","nickname":"牧鱼","note":"","ucode":"0EB8FDD7A4BB2E","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":212485,"discussion_content":"B+树","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1584974757,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":181832,"user_name":"不吃番茄的西红柿","can_delete":false,"product_type":"c1","uid":1142465,"ip_address":"","ucode":"AC62CE8D23FACD","user_header":"https://static001.geekbang.org/account/avatar/00/11/6e/c1/e2cc1261.jpg","comment_is_top":false,"comment_ctime":1582641016,"is_pvip":false,"discussion_count":1,"race_medal":0,"score":"1582641016","product_id":100020801,"comment_content":"想问下老师,<br>1。如果是4层的情况下的话，那么存入id=1的时候，就是按照4层的方式来存(前三层存索引,最后一层存数据)，还是说第一层存索引，第二层存数据<br>2.如果当存入的数据大于了4层之后，那么数据库回报错吗？","like_count":0,"discussions":[{"author":{"id":1360250,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/DYAIOgq83erFY9H3mxyTpZ9gxAmdeKic565hicicDZmv7cjswd8hdernmxib0chdQrlDNKUZQ8AticQCgDdgVEmJNuA/132","nickname":"牧鱼","note":"","ucode":"0EB8FDD7A4BB2E","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":212488,"discussion_content":"1.存数据的永远是叶子。\n2.4层不够就5层啊","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1584974950,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":181407,"user_name":"牟晓宇","can_delete":false,"product_type":"c1","uid":1868825,"ip_address":"","ucode":"EF980465718550","user_header":"","comment_is_top":false,"comment_ctime":1582536403,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1582536403","product_id":100020801,"comment_content":"浅显易懂，文科生太喜欢这个逻辑了","like_count":0},{"had_liked":false,"id":179037,"user_name":"暖小喵","can_delete":false,"product_type":"c1","uid":1213188,"ip_address":"","ucode":"42F46360778076","user_header":"https://static001.geekbang.org/account/avatar/00/12/83/04/39865451.jpg","comment_is_top":false,"comment_ctime":1581901003,"is_pvip":false,"discussion_count":1,"race_medal":0,"score":"1581901003","product_id":100020801,"comment_content":"若果重建主键索引，那么因为所有的非主键索引的叶子节点的内容都是主键索引的id，会导致所有的非主键索引也会被维护重建，这样成本更高，而重建非主键索引，只需要修改对应的这颗b+树即可，不知道理解是否正确。","like_count":0,"discussions":[{"author":{"id":1360250,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/DYAIOgq83erFY9H3mxyTpZ9gxAmdeKic565hicicDZmv7cjswd8hdernmxib0chdQrlDNKUZQ8AticQCgDdgVEmJNuA/132","nickname":"牧鱼","note":"","ucode":"0EB8FDD7A4BB2E","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":212493,"discussion_content":"我感觉被维护的只是所有非主键索引的叶子节点","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1584975069,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":175435,"user_name":"飞火流苏","can_delete":false,"product_type":"c1","uid":1286444,"ip_address":"","ucode":"FD9948121EC3DD","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTImeO3D5b56uwnS9OqzsuhNiciaA3ekC49lNt7NaGoTZ3U7tfLKRLR3V0F7k8hEJQZ4mQD7hfGwWiceQ/132","comment_is_top":false,"comment_ctime":1580720473,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1580720473","product_id":100020801,"comment_content":"老师你好，你提到：&quot;考虑到树根的数据块总是在内存中的...树的第二层也有很大概率在内存中。&quot; 这是什么意思呢？","like_count":0},{"had_liked":false,"id":174778,"user_name":"lodestar","can_delete":false,"product_type":"c1","uid":1370431,"ip_address":"","ucode":"8965336601E7CD","user_header":"https://static001.geekbang.org/account/avatar/00/14/e9/3f/fcd2740c.jpg","comment_is_top":false,"comment_ctime":1580378640,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1580378640","product_id":100020801,"comment_content":"要用学习时间的两倍才能看完评论，oracle的索引存储数据块地址，使用块地址回表定位数据所在块。mysql索引存储页地址，使用回表去主键索引查找对应页，获得对应数据。是不是可以应为mysql使用b+树存储数据，oracle使用块存储数据。块需要文件系统支持，所以oracle有自己的文件系统，在各种小型机上也能安装，mysql在小型机上无法安装。不知道理解的是否正确。","like_count":0},{"had_liked":false,"id":174451,"user_name":"papaw","can_delete":false,"product_type":"c1","uid":1724942,"ip_address":"","ucode":"B88E39F6B907F8","user_header":"https://static001.geekbang.org/account/avatar/00/1a/52/0e/d875c2c5.jpg","comment_is_top":false,"comment_ctime":1580214530,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1580214530","product_id":100020801,"comment_content":"重建普通索引影响倒是还好，可以考虑在业务不繁忙的时候做。<br>重建主键索引影响就大了，应该会锁住整张表一段时间，因为B+树的叶子节点也会依赖主键索引，是根据主键索引排序的。还有其他的普通索引也会依赖主键索引。drop掉主键索引之后MySQL会根据找唯一索引作为主键索引，如果没有唯一索引就用rowId作为主键索引。drop再add,相当于重建两次索引。如果数据量比较大的时候，锁表的时间应该会很长。","like_count":0},{"had_liked":false,"id":173869,"user_name":"锋风封","can_delete":false,"product_type":"c1","uid":1116935,"ip_address":"","ucode":"8E1528DF975D82","user_header":"https://static001.geekbang.org/account/avatar/00/11/0b/07/9b0446a7.jpg","comment_is_top":false,"comment_ctime":1579746781,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1579746781","product_id":100020801,"comment_content":"老师有几个问题想问一下<br>1.字符串类型怎么构建索引？<br>2.如果是一个字符一个节点那么树的高度不会很高吗？和长度一样高（或者转成编码之后也是一个字符一个节点？） <br> 3.而且这个和数字不一样可能有些子串中间就可能找到了吧？毕竟不定长的","like_count":0},{"had_liked":false,"id":173865,"user_name":"wd","can_delete":false,"product_type":"c1","uid":1291150,"ip_address":"","ucode":"B7CA722AA174A7","user_header":"https://static001.geekbang.org/account/avatar/00/13/b3/8e/f1bcb754.jpg","comment_is_top":false,"comment_ctime":1579745757,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1579745757","product_id":100020801,"comment_content":"每一张表其实就是多个 B+ 树组成，树结点的 key 值就是某一行的主键，value 是该行的其他数据。<br>新建索引就是新增一个 B+ 树，查询不走索引就是遍历主 B+ 树。","like_count":0},{"had_liked":false,"id":173853,"user_name":"小予","can_delete":false,"product_type":"c1","uid":1442580,"ip_address":"","ucode":"3F5EAEE1746074","user_header":"https://static001.geekbang.org/account/avatar/00/16/03/14/e9ca2d09.jpg","comment_is_top":false,"comment_ctime":1579740309,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1579740309","product_id":100020801,"comment_content":"普通索引可以重建，但要考虑业务是否会受影响。 重建主健索引，相当于删除表，不应该重建","like_count":0},{"had_liked":false,"id":173508,"user_name":"晚风·和煦","can_delete":false,"product_type":"c1","uid":1236047,"ip_address":"","ucode":"0B1DB8F437A4B2","user_header":"","comment_is_top":false,"comment_ctime":1579583384,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1579583384","product_id":100020801,"comment_content":"老师，非索引组织表，比如说MyISAM或Memory，是不是不能创建聚集索引😂","like_count":0},{"had_liked":false,"id":173503,"user_name":"Tan","can_delete":false,"product_type":"c1","uid":1134688,"ip_address":"","ucode":"D261A69A889696","user_header":"https://static001.geekbang.org/account/avatar/00/11/50/60/7c954c92.jpg","comment_is_top":false,"comment_ctime":1579580299,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1579580299","product_id":100020801,"comment_content":"1.索引是用来提高查询效率的。<br>2.哈希表、有序数组、搜索数是3种常见的索引模型。<br>哈希表键值对KV模式，利用哈希函数把key转化成数字，直接通过数组下标访问O（1），等值查询效率高，但区间查询只能全部扫描，哈希使用链表解决key碰撞问题。数据的增减效率也高。<br>有序数组按顺序存储，查询是使用二分查找发，时间复杂度为O(log(N))，查询效率高，特别是区间查询非常有优势。但是数据增减是，为了维护有序性，其更新成本较高。适合数据更新少的那种静态数据应用场景。<br>搜索树，查询和更新的复杂度都是O(log(N))，数据库实际应用中，结合存储设备的特性使用了N叉树来减少读写磁盘的次数（N叉树的树高比较低），提高访问效率。<br>3.InnoDB存储引擎的索引模型是B+树，索引类型分两种：主键索引和非主键索引，主键索引的叶子节点存储的是行数据，非主键索引的叶子节点存储的是主键的值（如果没有创建主键索引索引，innoDB会以rowId作为主键创建主键索引）。通过非主键索引查询时，先查出对应的主键ID，再通过主键索引查到具体的行。此过程为回表，也因此，主键索引查询效率要高于非主键索引。<br>4.数据页满了，需要新增家数据页，称为页分裂，此过程会导致性能降低，空间利用率也会降低。反之，当数据删除时，两个相邻也的空间利用率很低并达到一定的阈值，为了提高空间利用率，会发生页合并。<br>4.当你的表结构只有一个索引，且这个索引又是唯一索引时，可以使用业务键为主键索引。<br>5.从存储空间以及性能两方面考虑，自增主键作为主键索引适用大部分场景，是不错的选择。<br>","like_count":0},{"had_liked":false,"id":172896,"user_name":"gavin","can_delete":false,"product_type":"c1","uid":1369440,"ip_address":"","ucode":"BF56CFB1CE1297","user_header":"https://static001.geekbang.org/account/avatar/00/14/e5/60/9243e306.jpg","comment_is_top":false,"comment_ctime":1579353968,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1579353968","product_id":100020801,"comment_content":"老师，只读为什么不用放在事务里面呢？","like_count":0},{"had_liked":false,"id":172590,"user_name":"Geek_9ae28f","can_delete":false,"product_type":"c1","uid":1721182,"ip_address":"","ucode":"6CFD52D02F6223","user_header":"","comment_is_top":false,"comment_ctime":1579228706,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1579228706","product_id":100020801,"comment_content":"问题：<br>    这两种重建索引的方法不合适，我觉着，应该先判断一下是否存在索引，然后再建立索引比较好。因为，为某个字段添加索引，需要创建一颗以这个字段为Key，主键值为Value的B+树，创建树的过程是很消耗性能的。若本来存在一个索引了，先删除再重建时没有必要的。","like_count":0},{"had_liked":false,"id":171902,"user_name":"晚风·和煦","can_delete":false,"product_type":"c1","uid":1236047,"ip_address":"","ucode":"0B1DB8F437A4B2","user_header":"","comment_is_top":false,"comment_ctime":1579051354,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1579051354","product_id":100020801,"comment_content":"老师，静态存储引擎是什么呢😂","like_count":0},{"had_liked":false,"id":171787,"user_name":"Geek_00d9d1","can_delete":false,"product_type":"c1","uid":1801135,"ip_address":"","ucode":"0A92DF446FE451","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTJfNhFhiaYNmEec4T2QWBZGTicSI8J9Tia3jibJica3H1mwdGaugN1aIjhqNW7CGZyujNGbgOSsc8Murhw/132","comment_is_top":false,"comment_ctime":1579011973,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1579011973","product_id":100020801,"comment_content":"联合索引（a,b）<br>select 0 from T where a=1 and b=2<br>会不会回表？","like_count":0},{"had_liked":false,"id":171215,"user_name":"SuperSnow","can_delete":false,"product_type":"c1","uid":1065351,"ip_address":"","ucode":"84C89AA8083E6A","user_header":"https://static001.geekbang.org/account/avatar/00/10/41/87/d26efb2e.jpg","comment_is_top":false,"comment_ctime":1578882823,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1578882823","product_id":100020801,"comment_content":"1、主键是 int 类型的与主键是 varchar 类型的表，建索引的方式也是根据左小右大的B+树规则吗？<br>2、那如果是这样的话，varchar类型的主键是通过什么样的计算来判断大小呢？<br>3、如果我产生的字符串数据是严格以递增的趋势，那是不是也和数据值自增ID的效果是一样的？","like_count":0},{"had_liked":false,"id":170872,"user_name":"SuperSnow","can_delete":false,"product_type":"c1","uid":1065351,"ip_address":"","ucode":"84C89AA8083E6A","user_header":"https://static001.geekbang.org/account/avatar/00/10/41/87/d26efb2e.jpg","comment_is_top":false,"comment_ctime":1578745400,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1578745400","product_id":100020801,"comment_content":"老师您好，请教一个问题。如果我不用int,bigint这种数据类型。我用自己的主键生成器，且生成的是严格递增的，类型是字符串类型的。这样有没有分裂方面的什么影响。当然长度也会尽量不会太长。","like_count":0},{"had_liked":false,"id":170871,"user_name":"SuperSnow","can_delete":false,"product_type":"c1","uid":1065351,"ip_address":"","ucode":"84C89AA8083E6A","user_header":"https://static001.geekbang.org/account/avatar/00/10/41/87/d26efb2e.jpg","comment_is_top":false,"comment_ctime":1578745052,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1578745052","product_id":100020801,"comment_content":"老师，请教一个问题。在实际应用中，我们怎么判断某个索引需要重新建立呢？","like_count":0},{"had_liked":false,"id":170297,"user_name":"简简单单","can_delete":false,"product_type":"c1","uid":1615572,"ip_address":"","ucode":"5DD625D84ED7D3","user_header":"https://static001.geekbang.org/account/avatar/00/18/a6/d4/f0207473.jpg","comment_is_top":false,"comment_ctime":1578563418,"is_pvip":false,"discussion_count":1,"race_medal":0,"score":"1578563418","product_id":100020801,"comment_content":"请问一下老师及大家 主键索引树中, 叶子节点key是id 那么 value是存的什么呢?  就是图4中的 R1~R5是什么?","like_count":0,"discussions":[{"author":{"id":1065351,"avatar":"https://static001.geekbang.org/account/avatar/00/10/41/87/d26efb2e.jpg","nickname":"SuperSnow","note":"","ucode":"84C89AA8083E6A","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":129873,"discussion_content":"存的是整行数据。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1578743321,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":169882,"user_name":"带刺的小黄瓜","can_delete":false,"product_type":"c1","uid":1103863,"ip_address":"","ucode":"98C75CDC482C01","user_header":"https://static001.geekbang.org/account/avatar/00/10/d7/f7/e41209e0.jpg","comment_is_top":false,"comment_ctime":1578467867,"is_pvip":false,"replies":[{"id":"65981","content":"👍","user_name":"作者回复","user_name_real":"林晓斌","uid":"1264162","ctime":1578511228,"ip_address":"","comment_id":169882,"utype":1}],"discussion_count":2,"race_medal":0,"score":"1578467867","product_id":100020801,"comment_content":"完犊子了，感觉跟不上啊，看了好几次还不行，还得看几次！","like_count":0,"discussions":[{"author":{"id":1264162,"avatar":"https://static001.geekbang.org/account/avatar/00/13/4a/22/2681d602.jpg","nickname":"林晓斌","note":"","ucode":"CDE42D44F26240","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":480761,"discussion_content":"👍","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1578511228,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1065351,"avatar":"https://static001.geekbang.org/account/avatar/00/10/41/87/d26efb2e.jpg","nickname":"SuperSnow","note":"","ucode":"84C89AA8083E6A","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":129876,"discussion_content":"要仔细的分享和思考一下就通了。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1578743338,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":169499,"user_name":"小豹子","can_delete":false,"product_type":"c1","uid":1346267,"ip_address":"","ucode":"972F3E6BF0FDEA","user_header":"https://static001.geekbang.org/account/avatar/00/14/8a/db/76ab84c6.jpg","comment_is_top":false,"comment_ctime":1578366225,"is_pvip":false,"discussion_count":1,"race_medal":0,"score":"1578366225","product_id":100020801,"comment_content":"hash表的优点是什么，mysql中我看到memory引擎是支持hash索引的，什么情况下使用hash索引更优呢？","like_count":0,"discussions":[{"author":{"id":1065351,"avatar":"https://static001.geekbang.org/account/avatar/00/10/41/87/d26efb2e.jpg","nickname":"SuperSnow","note":"","ucode":"84C89AA8083E6A","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":129877,"discussion_content":"进行key-value这种，通过key直接定位value的场景就用hash索引。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1578743371,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":167766,"user_name":"Lywane","can_delete":false,"product_type":"c1","uid":1446512,"ip_address":"","ucode":"2B0027AA069CE9","user_header":"https://static001.geekbang.org/account/avatar/00/16/12/70/10faf04b.jpg","comment_is_top":false,"comment_ctime":1577930679,"is_pvip":false,"discussion_count":1,"race_medal":0,"score":"1577930679","product_id":100020801,"comment_content":"思考题中两个sql可以合并为一条吧。如果先删除再加的话，假如删除后添加前存在查询，回导致速度低下","like_count":0,"discussions":[{"author":{"id":1065351,"avatar":"https://static001.geekbang.org/account/avatar/00/10/41/87/d26efb2e.jpg","nickname":"SuperSnow","note":"","ucode":"84C89AA8083E6A","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":129893,"discussion_content":"合并为一条的原因并不是这个。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1578743859,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":167623,"user_name":"花子翁","can_delete":false,"product_type":"c1","uid":1073674,"ip_address":"","ucode":"A687441DC6894F","user_header":"https://static001.geekbang.org/account/avatar/00/10/62/0a/26d00cb9.jpg","comment_is_top":false,"comment_ctime":1577881591,"is_pvip":false,"discussion_count":1,"race_medal":0,"score":"1577881591","product_id":100020801,"comment_content":"本文中说的数据块可以简单认为是数据页的意思吗？","like_count":0,"discussions":[{"author":{"id":1065351,"avatar":"https://static001.geekbang.org/account/avatar/00/10/41/87/d26efb2e.jpg","nickname":"SuperSnow","note":"","ucode":"84C89AA8083E6A","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":129895,"discussion_content":"个人认为可以。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1578743879,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":163602,"user_name":"RD","can_delete":false,"product_type":"c1","uid":1194858,"ip_address":"","ucode":"E3947B6E1681AD","user_header":"https://static001.geekbang.org/account/avatar/00/12/3b/6a/80d9c545.jpg","comment_is_top":false,"comment_ctime":1576754108,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1576754108","product_id":100020801,"comment_content":"出现的三种数据结构：<br>hash 的数据结构：使用数组+链表的数据结构，用 hash 函数对 key 哈希为数组下标。如果出现哈希冲突，则相同的 hash key 放入链表中。平均查询时间复杂度为 O(1)，最坏情况下会退化为链表查询O(n),当出现O(n)的情况下，需要转为平衡二叉树(四个旋转操作)，如果读操作&gt;写操作，转为严格平衡二叉树 AVL，否则转为非严格平衡二叉树红黑树。<br>数组：存储空间连续的数据结构，查询复杂度 O(1)，但如果进行插入或删除，需要移动剩余数组，所以为 O(n)。<br>搜索二叉树：对于树中每一棵子树都有，其左子树所有节点小于其根节点，其右子树所有节点大于其根节点，所以搜索二叉树的中序遍历结果为升序，其查询时间复杂度为 O(logn)，在最坏情况下转为链表 O(n)，针对最坏情况同 hash 处理方式相同。","like_count":0},{"had_liked":false,"id":163044,"user_name":"悟空WuKong","can_delete":false,"product_type":"c1","uid":1139455,"ip_address":"","ucode":"49AFD2B048C1BA","user_header":"https://static001.geekbang.org/account/avatar/00/11/62/ff/f71034e9.jpg","comment_is_top":false,"comment_ctime":1576645538,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1576645538","product_id":100020801,"comment_content":"总结：<br>1.索引的作用：提高数据查询效率<br>2.常见索引模型：哈希表、有序数组、搜索树<br>3.哈希表：键 - 值(key - value)。<br>4.哈希思路：把值放在数组里，用一个哈希函数把key换算成一个确定的位置，然后把value放在数组的这个位置<br>5.哈希冲突的处理办法：链表<br>6.哈希表适用场景：只有等值查询的场景<br>7.有序数组：按顺序存储。查询用二分法就可以快速查询，时间复杂度是：O(log(N))<br>8.有序数组查询效率高，更新效率低<br>9.有序数组的适用场景：静态存储引擎。<br>10.二叉搜索树：每个节点的左儿子小于父节点，父节点又小于右儿子<br>11.二叉搜索树：查询时间复杂度O(log(N))，更新时间复杂度O(log(N))<br>12.数据库存储大多不适用二叉树，因为树高过高，会适用N叉树<br>13.InnoDB中的索引模型：B+Tree<br>14.索引类型：主键索引、非主键索引<br>主键索引的叶子节点存的是整行的数据(聚簇索引)，非主键索引的叶子节点内容是主键的值(二级索引)<br>15.主键索引和普通索引的区别：主键索引只要搜索ID这个B+Tree即可拿到数据。普通索引先搜索索引拿到主键值，再到主键索引树搜索一次(回表)<br>16.一个数据页满了，按照B+Tree算法，新增加一个数据页，叫做页分裂，会导致性能下降。空间利用率降低大概50%。当相邻的两个数据页利用率很低的时候会做数据页合并，合并的过程是分裂过程的逆过程。<br>17.从性能和存储空间方面考量，自增主键往往是更合理的选择。","like_count":0},{"had_liked":false,"id":162985,"user_name":"先立个flag，完成才改名的咸鱼","can_delete":false,"product_type":"c1","uid":1470603,"ip_address":"","ucode":"DDD06E7E3587A8","user_header":"https://static001.geekbang.org/account/avatar/00/16/70/8b/67a2baf5.jpg","comment_is_top":false,"comment_ctime":1576637846,"is_pvip":false,"discussion_count":1,"race_medal":0,"score":"1576637846","product_id":100020801,"comment_content":"也就是说，自增主键的插入数据模式，正符合了我们前面提到的递增插入的场景。每次插入一条新记录，都是追加操作，都不涉及到挪动其他记录，也不会触发叶子节点的分裂。<br><br>这句话有问题吧，你一直insert的话叶子结点总会满的，满了之后势必要进行页分裂啊","like_count":0,"discussions":[{"author":{"id":1065351,"avatar":"https://static001.geekbang.org/account/avatar/00/10/41/87/d26efb2e.jpg","nickname":"SuperSnow","note":"","ucode":"84C89AA8083E6A","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":129900,"discussion_content":"一直追加，不够了，那就去申请一个新页就行了。当你插入一个比现有值小的值，需要移动，可能现在的页需要挪到其他的页，这个时候是分裂了。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1578744094,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":160744,"user_name":"晨思暮语","can_delete":false,"product_type":"c1","uid":1304974,"ip_address":"","ucode":"F21D2FDCDD6B43","user_header":"https://static001.geekbang.org/account/avatar/00/13/e9/8e/6dc15a91.jpg","comment_is_top":false,"comment_ctime":1576028128,"is_pvip":false,"discussion_count":1,"race_medal":0,"score":"1576028128","product_id":100020801,"comment_content":"老师您好，有一个问题不是很明白，就是图4中的叶子结点，左边图中主键的叶子节点不应该存储整行数据吗？这里最左边图中存储的是100和R1，其中R1为（100，1），合起来这一行在叶子节点中存储的不就是（100，100，1）了吗？是我哪里理解有误吗，请帮忙解惑，谢谢老师～","like_count":0,"discussions":[{"author":{"id":1065351,"avatar":"https://static001.geekbang.org/account/avatar/00/10/41/87/d26efb2e.jpg","nickname":"SuperSnow","note":"","ucode":"84C89AA8083E6A","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":129907,"discussion_content":"表也就是索引组织表，Key是100，data是1。图中只是为了标识清楚，将小框扩大出来，表示小框中有啥内容。不是100，100，1这么理解。这么重复存储想想也不应该这样，数据重复，没有意义了。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1578744358,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":160286,"user_name":"falleafe","can_delete":false,"product_type":"c1","uid":1691307,"ip_address":"","ucode":"46435941939610","user_header":"","comment_is_top":false,"comment_ctime":1575905230,"is_pvip":true,"discussion_count":1,"race_medal":0,"score":"1575905230","product_id":100020801,"comment_content":"还有在关注的吗，问下一个索引只有0，1两个值，如里有100万数据的吧，BTREE是怎么存储的？跟节点是1，下边一个是0的链表， 一个1的链表？全是0或全是1怎么分页","like_count":0,"discussions":[{"author":{"id":1065351,"avatar":"https://static001.geekbang.org/account/avatar/00/10/41/87/d26efb2e.jpg","nickname":"SuperSnow","note":"","ucode":"84C89AA8083E6A","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":129915,"discussion_content":"根结点可以为0或者1，如果一个页有1200叉，左叉为0，1199叉都为1的索引。抽像一下，100万条数据，0为50万，1为50万，那肯定1个0，1199个1的索引都存不下，那就向下层分，上层页指向下层页。0的就为1*1200，这样每个页里面可以存1200，这一下就够存50万的了。同样1199里面，每个也可以存1200，估计可以不用向下层拆页了。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1578744744,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":159787,"user_name":"张sir","can_delete":false,"product_type":"c1","uid":1209431,"ip_address":"","ucode":"52958DF6705208","user_header":"https://static001.geekbang.org/account/avatar/00/12/74/57/7b828263.jpg","comment_is_top":false,"comment_ctime":1575789231,"is_pvip":false,"discussion_count":1,"race_medal":0,"score":"1575789231","product_id":100020801,"comment_content":"请问，索引组织表，是指的是Ｂ＋树里只有索引的值，没有记录的值是吗？","like_count":0,"discussions":[{"author":{"id":1065351,"avatar":"https://static001.geekbang.org/account/avatar/00/10/41/87/d26efb2e.jpg","nickname":"SuperSnow","note":"","ucode":"84C89AA8083E6A","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":129917,"discussion_content":"表就是索引组织表，key为主键索引，data就是记录。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1578744780,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":159345,"user_name":"长期规划","can_delete":false,"product_type":"c1","uid":1019332,"ip_address":"","ucode":"5EF65E9115834B","user_header":"https://static001.geekbang.org/account/avatar/00/0f/8d/c4/6f97daea.jpg","comment_is_top":false,"comment_ctime":1575602822,"is_pvip":false,"discussion_count":1,"race_medal":0,"score":"1575602822","product_id":100020801,"comment_content":"老师，查询中使用二级索引时，一定会查到索引的叶结点才返回吗？我理解叶结点与非叶结点的区别是：叶结点中有主键，且叶结点相连。绝大部分查询都会访问索引叶结点吧","like_count":0,"discussions":[{"author":{"id":1065351,"avatar":"https://static001.geekbang.org/account/avatar/00/10/41/87/d26efb2e.jpg","nickname":"SuperSnow","note":"","ucode":"84C89AA8083E6A","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":129918,"discussion_content":"肯定会访问到叶子结点，只所以会有非叶子结点，那是因为不够存了嘛，所以才会产生新页，然后非叶子结点导向到叶子结点，找到主键，进行回表。","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1578744853,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":159084,"user_name":"nikename","can_delete":false,"product_type":"c1","uid":1254475,"ip_address":"","ucode":"0522876B6CBB5B","user_header":"https://static001.geekbang.org/account/avatar/00/13/24/4b/e6b3b281.jpg","comment_is_top":false,"comment_ctime":1575536061,"is_pvip":false,"discussion_count":1,"race_medal":0,"score":"1575536061","product_id":100020801,"comment_content":"https:&#47;&#47;blog.csdn.net&#47;weixin_43050247&#47;article&#47;details&#47;100100411 <br>竟然标记了原创","like_count":0,"discussions":[{"author":{"id":1065351,"avatar":"https://static001.geekbang.org/account/avatar/00/10/41/87/d26efb2e.jpg","nickname":"SuperSnow","note":"","ucode":"84C89AA8083E6A","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":129919,"discussion_content":"哈哈，no face","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1578744908,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":158762,"user_name":"工藤新一","can_delete":false,"product_type":"c1","uid":1754668,"ip_address":"","ucode":"F2AFB6F6A42FAA","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTLeXjFHy8wGyrDnm6ib7hjZNjocUHarn0XFc8zLc061Ax99bFmrLN9yAxicklpcjKFx2gHqUKWQ3MRw/132","comment_is_top":false,"comment_ctime":1575447652,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1575447652","product_id":100020801,"comment_content":"感谢！","like_count":0},{"had_liked":false,"id":158737,"user_name":"丹枫化雪","can_delete":false,"product_type":"c1","uid":1266371,"ip_address":"","ucode":"B4A8F48F798511","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTIX7ibExl4dApKGhw8UxvzEZ4OnhEXK3HYAwwqBtb5uuVfp4I2icicnZXLaQQymcccibAuiaPyqxMyBiajQ/132","comment_is_top":false,"comment_ctime":1575444136,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1575444136","product_id":100020801,"comment_content":"老师，请教个问题。对于如何重建索引我们已经知道了怎么做比较好了。可是对于一个索引我们怎么知道这个索引的 页利用率（就是空间利用率），或者说在实际应用中，我们根据什么来判断这个索引是否需要重建呢？","like_count":0},{"had_liked":false,"id":157529,"user_name":"周","can_delete":false,"product_type":"c1","uid":1269903,"ip_address":"","ucode":"EE475D1CFC46D6","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/qzricN4j5oafQ5MB6pd6uRjhrO05jibuibthBvgFkeQFcedFqKyOXGNj0eNw5KL8kozV1Yty7SWek8hIoyeviaSmXw/132","comment_is_top":false,"comment_ctime":1575186820,"is_pvip":false,"discussion_count":1,"race_medal":0,"score":"1575186820","product_id":100020801,"comment_content":"老师， 请教一个问题， 3张表关联，并且会模糊查询三张表中的某一个字段， 有没有什么比较好方案😁😁😁","like_count":0,"discussions":[{"author":{"id":1065351,"avatar":"https://static001.geekbang.org/account/avatar/00/10/41/87/d26efb2e.jpg","nickname":"SuperSnow","note":"","ucode":"84C89AA8083E6A","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":129933,"discussion_content":"首先不要join，其次这种查询本身在实际业务中应该属于统计类业务，可以做数据整理，不要放在事务表中了。另外，如果你想放在es中，可能会更好吧。个人理解。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1578745511,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":156182,"user_name":"James","can_delete":false,"product_type":"c1","uid":1134861,"ip_address":"","ucode":"48B0F2A334D1C1","user_header":"https://static001.geekbang.org/account/avatar/00/11/51/0d/fc1652fe.jpg","comment_is_top":false,"comment_ctime":1574829711,"is_pvip":false,"discussion_count":1,"race_medal":0,"score":"1574829711","product_id":100020801,"comment_content":"结合数据结构看应该就不会特别难。<br>比如二分查找适合查找静态有序数据，范围性数据。","like_count":0,"discussions":[{"author":{"id":1065351,"avatar":"https://static001.geekbang.org/account/avatar/00/10/41/87/d26efb2e.jpg","nickname":"SuperSnow","note":"","ucode":"84C89AA8083E6A","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":129938,"discussion_content":"并不一定是静态，有序就行。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1578745576,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":154839,"user_name":"pocher","can_delete":false,"product_type":"c1","uid":1696181,"ip_address":"","ucode":"FB6D297B84A6EB","user_header":"https://static001.geekbang.org/account/avatar/00/19/e1/b5/6d9d6861.jpg","comment_is_top":false,"comment_ctime":1574577579,"is_pvip":false,"discussion_count":1,"race_medal":0,"score":"1574577579","product_id":100020801,"comment_content":"聚簇索引，每一层对应多个叶子节点，并且一层对应一个数据块，每个叶子节点对应一个数据页，一个数据页16K。数据块是包含数据页吗？一个数据快下有多个数据页？是这样吗？","like_count":0,"discussions":[{"author":{"id":1065351,"avatar":"https://static001.geekbang.org/account/avatar/00/10/41/87/d26efb2e.jpg","nickname":"SuperSnow","note":"","ucode":"84C89AA8083E6A","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":129953,"discussion_content":"数据块应该就是数据页吧。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1578745973,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":152844,"user_name":"确认过眼神","can_delete":false,"product_type":"c1","uid":1245530,"ip_address":"","ucode":"E6D73A9D27A279","user_header":"https://static001.geekbang.org/account/avatar/00/13/01/5a/f7c989e4.jpg","comment_is_top":false,"comment_ctime":1574088497,"is_pvip":false,"discussion_count":1,"race_medal":0,"score":"1574088497","product_id":100020801,"comment_content":"老师，我有个问题：一个数据库表是按照主键id自增的，100条后，如果要删除其中的第52条数据，主键id=52的这条数据是真的删除了，进行树的重新排序？还是只是这条数据被隐藏了，树不进行重新排序？后者效率是否会更高一些，不会涉及到数据页的合并？","like_count":0,"discussions":[{"author":{"id":1065351,"avatar":"https://static001.geekbang.org/account/avatar/00/10/41/87/d26efb2e.jpg","nickname":"SuperSnow","note":"","ucode":"84C89AA8083E6A","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":129956,"discussion_content":"树应该暂时不会排序吧，只有你想重新建立索引才会吧。\n数据应该是删除了。\n有可能会涉及到页的合并。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1578746137,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":151485,"user_name":"缪文","can_delete":false,"product_type":"c1","uid":1042262,"ip_address":"","ucode":"59603B50EF5FC6","user_header":"https://static001.geekbang.org/account/avatar/00/0f/e7/56/c72997f3.jpg","comment_is_top":false,"comment_ctime":1573729789,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1573729789","product_id":100020801,"comment_content":"老师，二叉搜索树这里讲的不够严谨，应该是如果存在左子树，则左子树的所有节点都小于跟节点，如果存在右子树，则右子树的所有节点都大于跟节点","like_count":0},{"had_liked":false,"id":150595,"user_name":"学个球","can_delete":false,"product_type":"c1","uid":1019725,"ip_address":"","ucode":"7343F3C0CA981D","user_header":"https://static001.geekbang.org/account/avatar/00/0f/8f/4d/65fb45e6.jpg","comment_is_top":false,"comment_ctime":1573565342,"is_pvip":false,"discussion_count":1,"race_medal":0,"score":"1573565342","product_id":100020801,"comment_content":"对于 “数据页” 的概念，请问老师在专栏中有进行讲解吗？发现这个概念贯穿了挺多内容的。","like_count":0,"discussions":[{"author":{"id":1065351,"avatar":"https://static001.geekbang.org/account/avatar/00/10/41/87/d26efb2e.jpg","nickname":"SuperSnow","note":"","ucode":"84C89AA8083E6A","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":129965,"discussion_content":"一个页就是可以存多少行的这么一个单位。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1578746641,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":150590,"user_name":"学个球","can_delete":false,"product_type":"c1","uid":1019725,"ip_address":"","ucode":"7343F3C0CA981D","user_header":"https://static001.geekbang.org/account/avatar/00/0f/8f/4d/65fb45e6.jpg","comment_is_top":false,"comment_ctime":1573564295,"is_pvip":false,"discussion_count":2,"race_medal":0,"score":"1573564295","product_id":100020801,"comment_content":"对于老师说的 “你可以想象一下一棵 100 万节点的平衡二叉树，树高 20。一次查询可能需要访问 20 个数据块。”有些疑问，是二叉树的每一层分别对应一块不相同的数据块吗？还是指二叉树每一层中包含的结点分布在不同的数据块中，因为要一层一层的往下搜索？","like_count":0,"discussions":[{"author":{"id":1065351,"avatar":"https://static001.geekbang.org/account/avatar/00/10/41/87/d26efb2e.jpg","nickname":"SuperSnow","note":"","ucode":"84C89AA8083E6A","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":129968,"discussion_content":"你搜索的数据可能存储在任何一层中的某个结点中，所以，有可能搜索的一个查询需要逐步一层层的向下追踪，最后最多需要访问20个数据页才能把查询数据扒出来。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1578746795,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":1,"child_discussions":[{"author":{"id":1019725,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/8f/4d/65fb45e6.jpg","nickname":"学个球","note":"","ucode":"7343F3C0CA981D","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1065351,"avatar":"https://static001.geekbang.org/account/avatar/00/10/41/87/d26efb2e.jpg","nickname":"SuperSnow","note":"","ucode":"84C89AA8083E6A","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":182605,"discussion_content":"谢谢你的解惑！","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1582440221,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":129968,"ip_address":""},"score":182605,"extra":""}]}]},{"had_liked":false,"id":150426,"user_name":"yc","can_delete":false,"product_type":"c1","uid":1670122,"ip_address":"","ucode":"2E01505284DC4E","user_header":"https://static001.geekbang.org/account/avatar/00/19/7b/ea/a64f7822.jpg","comment_is_top":false,"comment_ctime":1573533243,"is_pvip":false,"discussion_count":1,"race_medal":0,"score":"1573533243","product_id":100020801,"comment_content":"请问一下老师，为什么基本都是用自增列作为主键，为什么不考虑把多个业务列作为主键呢","like_count":0,"discussions":[{"author":{"id":1065351,"avatar":"https://static001.geekbang.org/account/avatar/00/10/41/87/d26efb2e.jpg","nickname":"SuperSnow","note":"","ucode":"84C89AA8083E6A","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":129974,"discussion_content":"因为一是主键要尽量保证增序的，这样有利于分页存储。二是，如果主键索引太大了，普通索引最终要批向主键的，那多个业务做联合主键，那占用的空间也会很大。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1578746937,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":149639,"user_name":"枫","can_delete":false,"product_type":"c1","uid":1310357,"ip_address":"","ucode":"819CA7B97DD7E2","user_header":"https://static001.geekbang.org/account/avatar/00/13/fe/95/39856e4e.jpg","comment_is_top":false,"comment_ctime":1573299396,"is_pvip":false,"discussion_count":1,"race_medal":0,"score":"1573299396","product_id":100020801,"comment_content":"我的理解是，重建索引时，只会删除索引这个树，不会影响到主键树。而重建主键时，除了会删除主键树，索引树也会重组的。","like_count":0,"discussions":[{"author":{"id":1065351,"avatar":"https://static001.geekbang.org/account/avatar/00/10/41/87/d26efb2e.jpg","nickname":"SuperSnow","note":"","ucode":"84C89AA8083E6A","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":129975,"discussion_content":"删除主键树，普通索引树不会影响，不会重组的，只不过指向的主键也没啥用了。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1578746991,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":148281,"user_name":"Michael","can_delete":false,"product_type":"c1","uid":1435138,"ip_address":"","ucode":"2817C6A41C2E53","user_header":"https://static001.geekbang.org/account/avatar/00/15/e6/02/65a764fe.jpg","comment_is_top":false,"comment_ctime":1572967603,"is_pvip":false,"discussion_count":1,"race_medal":0,"score":"1572967603","product_id":100020801,"comment_content":"想问一下老师B+树分层的原理是什么","like_count":0,"discussions":[{"author":{"id":1065351,"avatar":"https://static001.geekbang.org/account/avatar/00/10/41/87/d26efb2e.jpg","nickname":"SuperSnow","note":"","ucode":"84C89AA8083E6A","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":129977,"discussion_content":"B+树就是N叉树，目的就是将树高变矮。以减少数据块的访问次数，减少I/O访问次数。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1578747047,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":146059,"user_name":"唐新","can_delete":false,"product_type":"c1","uid":1395863,"ip_address":"","ucode":"D6827D2DD3DAD8","user_header":"","comment_is_top":false,"comment_ctime":1572427028,"is_pvip":false,"discussion_count":1,"race_medal":0,"score":"1572427028","product_id":100020801,"comment_content":"有个问题：即使只有一个索引，并且是唯一索引，设置成主键索引的话，插入记录不可避免的是不是还是会有记录挪动","like_count":0,"discussions":[{"author":{"id":1065351,"avatar":"https://static001.geekbang.org/account/avatar/00/10/41/87/d26efb2e.jpg","nickname":"SuperSnow","note":"","ucode":"84C89AA8083E6A","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":129988,"discussion_content":"有可能，如果你的主键不是自增的，插入的比存在的主键值小，那就有可能会挪动。另外你删除一些现存的一些记录，会有可能会移动，以达到合并页的目的。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1578747542,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":143875,"user_name":"geek","can_delete":false,"product_type":"c1","uid":1234974,"ip_address":"","ucode":"BF9406F6ABDB7B","user_header":"https://static001.geekbang.org/account/avatar/00/12/d8/1e/985d5363.jpg","comment_is_top":false,"comment_ctime":1571802402,"is_pvip":false,"discussion_count":1,"race_medal":0,"score":"1571802402","product_id":100020801,"comment_content":"老师您好请问一下，删除主键索引对普通索引会有什么影响？","like_count":0,"discussions":[{"author":{"id":1065351,"avatar":"https://static001.geekbang.org/account/avatar/00/10/41/87/d26efb2e.jpg","nickname":"SuperSnow","note":"","ucode":"84C89AA8083E6A","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":129989,"discussion_content":"没啥影响，只不过普通索引所指向的主键也没啥用了。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1578747573,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":143145,"user_name":"小豹子","can_delete":false,"product_type":"c1","uid":1346267,"ip_address":"","ucode":"972F3E6BF0FDEA","user_header":"https://static001.geekbang.org/account/avatar/00/14/8a/db/76ab84c6.jpg","comment_is_top":false,"comment_ctime":1571638370,"is_pvip":false,"discussion_count":1,"race_medal":0,"score":"1571638370","product_id":100020801,"comment_content":"我想问下老师，mysql的btree索引存储空值吗？","like_count":0,"discussions":[{"author":{"id":1065351,"avatar":"https://static001.geekbang.org/account/avatar/00/10/41/87/d26efb2e.jpg","nickname":"SuperSnow","note":"","ucode":"84C89AA8083E6A","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":129993,"discussion_content":"建议不要为null吧。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1578747730,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":142422,"user_name":"null","can_delete":false,"product_type":"c1","uid":1446321,"ip_address":"","ucode":"25EEE4ADC8FE64","user_header":"https://static001.geekbang.org/account/avatar/00/16/11/b1/ea6c956c.jpg","comment_is_top":false,"comment_ctime":1571365780,"is_pvip":false,"discussion_count":1,"race_medal":0,"score":"1571365780","product_id":100020801,"comment_content":"如果一张没有主键，但在其他字段上加了索引，那这个索引的叶子节点会是整行数据吗？","like_count":0,"discussions":[{"author":{"id":1065351,"avatar":"https://static001.geekbang.org/account/avatar/00/10/41/87/d26efb2e.jpg","nickname":"SuperSnow","note":"","ucode":"84C89AA8083E6A","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":130000,"discussion_content":"不是，存的是主键，也就是row id","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1578747972,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":142187,"user_name":"zhaozp","can_delete":false,"product_type":"c1","uid":1099706,"ip_address":"","ucode":"BF390F5ED762CD","user_header":"https://static001.geekbang.org/account/avatar/00/10/c7/ba/4c449be2.jpg","comment_is_top":false,"comment_ctime":1571306709,"is_pvip":false,"discussion_count":1,"race_medal":0,"score":"1571306709","product_id":100020801,"comment_content":"老师请问下：如果一张表没有主键，也没有其他索引，数据怎么存储的？","like_count":0,"discussions":[{"author":{"id":1065351,"avatar":"https://static001.geekbang.org/account/avatar/00/10/41/87/d26efb2e.jpg","nickname":"SuperSnow","note":"","ucode":"84C89AA8083E6A","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":130003,"discussion_content":"没有主键会自动产生row id，和平常一样，该怎么存就怎么存。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1578748065,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":141520,"user_name":"沐","can_delete":false,"product_type":"c1","uid":1326537,"ip_address":"","ucode":"678F6A0C778CDD","user_header":"https://static001.geekbang.org/account/avatar/00/14/3d/c9/a1e6a307.jpg","comment_is_top":false,"comment_ctime":1571187512,"is_pvip":false,"discussion_count":0,"race_medal":3,"score":"1571187512","product_id":100020801,"comment_content":"索引的出现是为了提高数据的查询效率。<br>每一个索引在InnoDB里面对应一颗B+树。索引类型分为主键索引和非主键索引。<br>主键索引的叶子节点存的是整行数据。在InnoDB里，主键索引也被称为聚簇索引。<br>非主键索引的叶子节点内容是主键的值。在InnoDB里，非主键索引也被称为二级索引。<br>基于非主键索引的查询需要多扫描一颗索引树。","like_count":0},{"had_liked":false,"id":140058,"user_name":"b哥","can_delete":false,"product_type":"c1","uid":1691252,"ip_address":"","ucode":"A841D550A6E29C","user_header":"","comment_is_top":false,"comment_ctime":1570799020,"is_pvip":false,"discussion_count":1,"race_medal":0,"score":"1570799020","product_id":100020801,"comment_content":"4个字节大小的主键，数据量超过0xffffffff以后会怎么样？报错吗？","like_count":0,"discussions":[{"author":{"id":1065351,"avatar":"https://static001.geekbang.org/account/avatar/00/10/41/87/d26efb2e.jpg","nickname":"SuperSnow","note":"","ucode":"84C89AA8083E6A","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":130006,"discussion_content":"应该会抛数据库异常吧。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1578748105,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":138958,"user_name":"复兴","can_delete":false,"product_type":"c1","uid":1363230,"ip_address":"","ucode":"C172A87873001A","user_header":"https://static001.geekbang.org/account/avatar/00/14/cd/1e/692c3313.jpg","comment_is_top":false,"comment_ctime":1570517941,"is_pvip":false,"discussion_count":1,"race_medal":0,"score":"1570517941","product_id":100020801,"comment_content":"身份证号找姓名，使用有序数组来存储。这里有两个疑问1）不考虑身份证号的非数字字符，身份证号上面的数字比较大，使用数组存储index不是从0开始，跨的比较多，是不是有点浪费存储空间。2）考虑身份证号上面的非数字字符，使用有序数组来存储，是不是要先对key进行转换成数字。","like_count":0,"discussions":[{"author":{"id":1065351,"avatar":"https://static001.geekbang.org/account/avatar/00/10/41/87/d26efb2e.jpg","nickname":"SuperSnow","note":"","ucode":"84C89AA8083E6A","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":130009,"discussion_content":"转换成数据字好，跨的值多也罢。关键是没办法保证身份证的顺序性，因为你录入的身份证号码是随机的，随机的后果就是数据记录要挪动，成本比较高吧，性能也受影响。","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1578748250,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":138462,"user_name":"_or","can_delete":false,"product_type":"c1","uid":1394011,"ip_address":"","ucode":"6B4134A5F4FCC2","user_header":"https://static001.geekbang.org/account/avatar/00/15/45/5b/88ea2ede.jpg","comment_is_top":false,"comment_ctime":1570260038,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1570260038","product_id":100020801,"comment_content":"笔记：使用普通索引会先通过普通索引找到主键的值然后再通过主键索引重新查找，这称为回表，所以应该尽量使用主键索引进行查找，效率更高，不过b+树在插入&#47;删除时可能会出现拆分&#47;合并页操作，十分占用资源","like_count":0},{"had_liked":false,"id":137491,"user_name":"Geek_7d3b2a","can_delete":false,"product_type":"c1","uid":1163514,"ip_address":"","ucode":"7CE137DA330683","user_header":"","comment_is_top":false,"comment_ctime":1569752905,"is_pvip":false,"discussion_count":1,"race_medal":0,"score":"1569752905","product_id":100020801,"comment_content":"老师，您好<br>1).InnoDB是索引组织表，所以完整的数据记录都存在聚集索引的叶子节点上。也就是二级索引获取id之后，回表是指查询主键索引树？为何explain的rows有值呢<br>  2).如果查询的时候，内存已经存在id对应的行数据，还要回表主键索引树？还是直接取内存的值，不回表索引树？<br> 3). select id from t where b=1，按理说无需回表，直接取id值即可，为何explain的rows=1？<br>","like_count":0,"discussions":[{"author":{"id":1065351,"avatar":"https://static001.geekbang.org/account/avatar/00/10/41/87/d26efb2e.jpg","nickname":"SuperSnow","note":"","ucode":"84C89AA8083E6A","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":130020,"discussion_content":"1、因为主键索引树对应的data就是数据记录，那肯定有值啊。\n2、内存中都有相应Id了，那就直接获取获取行数据。\n3、rows=1只是表明有值返回吧。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1578748712,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":137481,"user_name":"追风的沙滩裤","can_delete":false,"product_type":"c1","uid":1637246,"ip_address":"","ucode":"114B2C5DDBB2FE","user_header":"https://static001.geekbang.org/account/avatar/00/18/fb/7e/4d4c9888.jpg","comment_is_top":false,"comment_ctime":1569750705,"is_pvip":false,"discussion_count":1,"race_medal":0,"score":"1569750705","product_id":100020801,"comment_content":"什么场景会使用读未提交呢<br>","like_count":0,"discussions":[{"author":{"id":1065351,"avatar":"https://static001.geekbang.org/account/avatar/00/10/41/87/d26efb2e.jpg","nickname":"SuperSnow","note":"","ucode":"84C89AA8083E6A","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":130014,"discussion_content":"每做一步数据获取和判断都要实时获取，实时判断，与谁操作无关，严格与数据此时值有关。这个还是看业务。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1578748522,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":137448,"user_name":"Geek_7d3b2a","can_delete":false,"product_type":"c1","uid":1163514,"ip_address":"","ucode":"7CE137DA330683","user_header":"","comment_is_top":false,"comment_ctime":1569743685,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1569743685","product_id":100020801,"comment_content":"老师您好，看了undo log相关，查了一些资料，忽然间对purge有一点疑问<br>purge可以理解为垃圾回收器，回收没有引用的undo log<br>    undo log分为：<br>\t    insert undo log<br>\t    update undo log<br>\t    \tinsert undo log是指在insert操作中产生的undo log。由于insert操作的记录，只是对本事务可见，其他事务不可见，所以undo log可以在事务提交后直接删除，而不需要purge操作。<br>\t\t\t\tupdate undo log是指在delete和update操作中产生的undo log。该undo log会被后续用于MVCC当中，因此不能提交的时候删除。提交后会放入undo log的链表，等待purge线程进行最后的删除。<br>   疑问？？<br>    1).update语句是通过update原来的语句为可删除，insert新记录实现的，那么是不是说明undo log就只存在insert和delete两种格式<br>    2).insert因为是本事务的，执行完直接删除即可，无需purge，那么需要purge的只有delete操作？只要记录不在用就purge?","like_count":0},{"had_liked":false,"id":136920,"user_name":"看这个灯泡，真亮！","can_delete":false,"product_type":"c1","uid":1670731,"ip_address":"","ucode":"97C644859B138F","user_header":"https://static001.geekbang.org/account/avatar/00/19/7e/4b/eafd4ff0.jpg","comment_is_top":false,"comment_ctime":1569554583,"is_pvip":false,"discussion_count":1,"race_medal":0,"score":"1569554583","product_id":100020801,"comment_content":"根据B树插入方法, 当插入数量操作某个节点的可容纳key的最大数量(2b-1)的时候, 依然需要挪动数据的.<br><br>所以作者说的这一段话:<br>也就是说，自增主键的插入数据模式，正符合了我们前面提到的递增.<br>每次插入一条新记录，都是追加操作，都不涉及到挪动其他记录，也<br>不会触发叶子节点的分裂<br><br>是不是有错误的!!?<br><br>","like_count":0,"discussions":[{"author":{"id":1065351,"avatar":"https://static001.geekbang.org/account/avatar/00/10/41/87/d26efb2e.jpg","nickname":"SuperSnow","note":"","ucode":"84C89AA8083E6A","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":130027,"discussion_content":"追加是递增的，直接申请新页就行，又不涉及挪动操作，这个不能称为分裂，可称之为申请吧。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1578748892,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":135922,"user_name":"鲲鹏飞九万里","can_delete":false,"product_type":"c1","uid":1093920,"ip_address":"","ucode":"82BD0C789DF612","user_header":"https://static001.geekbang.org/account/avatar/00/10/b1/20/8718252f.jpg","comment_is_top":false,"comment_ctime":1569303042,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1569303042","product_id":100020801,"comment_content":"老师，讲得真好","like_count":0},{"had_liked":false,"id":135244,"user_name":"榴芒科技","can_delete":false,"product_type":"c1","uid":1312485,"ip_address":"","ucode":"EC297012B1B942","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/DwZUsQhia0wIWNEfeGZ2srQWzVC04JjLFDwgmicpnNF3mUPdRJD6U6vviceJqMxGYUGtxaiaZWltyNtQ5fZhia7YN3w/132","comment_is_top":false,"comment_ctime":1569080985,"is_pvip":false,"discussion_count":1,"race_medal":0,"score":"1569080985","product_id":100020801,"comment_content":"老师你好， select id ，name from t where id=xx and name=aa 与 select id,name from t where id=xx 中 id为主键 ，name建立普通索引 ，第二句是不是效率更高 ，第一句还得回表？","like_count":0,"discussions":[{"author":{"id":1065351,"avatar":"https://static001.geekbang.org/account/avatar/00/10/41/87/d26efb2e.jpg","nickname":"SuperSnow","note":"","ucode":"84C89AA8083E6A","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":130030,"discussion_content":"是的。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1578749001,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":135236,"user_name":"博博","can_delete":false,"product_type":"c1","uid":1490403,"ip_address":"","ucode":"79FF6249DFC047","user_header":"https://thirdwx.qlogo.cn/mmopen/vi_32/GBU53SA3W8GNRAwZIicc3gTEc0nSvfPJw7iboAMicjicmP6egDcibib28DkUfTYOjMd31DIznmofdRZrpIXvmXvjV1PQ/132","comment_is_top":false,"comment_ctime":1569075048,"is_pvip":false,"discussion_count":1,"race_medal":0,"score":"1569075048","product_id":100020801,"comment_content":"老师我想问个问题， mysql在存储varchar的时候都会用一到两个额外的字节存储它的长度，这么做是为什么呢？ 学习mysql不久，还望老师解答。","like_count":0,"discussions":[{"author":{"id":1065351,"avatar":"https://static001.geekbang.org/account/avatar/00/10/41/87/d26efb2e.jpg","nickname":"SuperSnow","note":"","ucode":"84C89AA8083E6A","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":130031,"discussion_content":"同样期待。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1578749032,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":134270,"user_name":"　","can_delete":false,"product_type":"c1","uid":1172538,"ip_address":"","ucode":"DBE2DB5CC52C91","user_header":"https://static001.geekbang.org/account/avatar/00/11/e4/3a/16545faf.jpg","comment_is_top":false,"comment_ctime":1568788623,"is_pvip":false,"discussion_count":1,"race_medal":0,"score":"1568788623","product_id":100020801,"comment_content":"有个疑问——在典型的KV场景中用业务字段做主键，会不会出现需要维护索引而造成的性能问题？","like_count":0,"discussions":[{"author":{"id":1065351,"avatar":"https://static001.geekbang.org/account/avatar/00/10/41/87/d26efb2e.jpg","nickname":"SuperSnow","note":"","ucode":"84C89AA8083E6A","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":130033,"discussion_content":"kv需要索引吗？","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1578749102,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":130988,"user_name":"star_fan","can_delete":false,"product_type":"c1","uid":1181725,"ip_address":"","ucode":"BC914F9B599995","user_header":"https://static001.geekbang.org/account/avatar/00/12/08/1d/910b4924.jpg","comment_is_top":false,"comment_ctime":1567590640,"is_pvip":false,"discussion_count":1,"race_medal":0,"score":"1567590640","product_id":100020801,"comment_content":"老师，如果在允许为null的字段上建了索引，那么索引树是怎么存储null的？希望老师解答","like_count":0,"discussions":[{"author":{"id":1065351,"avatar":"https://static001.geekbang.org/account/avatar/00/10/41/87/d26efb2e.jpg","nickname":"SuperSnow","note":"","ucode":"84C89AA8083E6A","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":130036,"discussion_content":"看网上文章建议不要在允许为Null的字段上建立索引，会增加复杂性。期待此问题。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1578749142,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":130823,"user_name":"长期规划","can_delete":false,"product_type":"c1","uid":1019332,"ip_address":"","ucode":"5EF65E9115834B","user_header":"https://static001.geekbang.org/account/avatar/00/0f/8d/c4/6f97daea.jpg","comment_is_top":false,"comment_ctime":1567557228,"is_pvip":false,"discussion_count":1,"race_medal":0,"score":"1567557228","product_id":100020801,"comment_content":"老师，我有两个问题请教：<br>1. 在B＋树中，我之前理解，只有叶节点才存一条索引的完整记录，看您画的图中，在二级索引中，只有叶节点才有主键ID。如果这样，那每次查询都要查叶节点吗。但从查询效率上说，这样肯定慢<br>2. 面试的一个问题，如果一个表经常增删会变慢，如何解决？我理解，如果经常删除，数据页中会出现很多空洞，导致页变多，这是变慢的一个原因，不知道是不是这样？那MySQL会主动合并节点来消除空洞吗","like_count":0,"discussions":[{"author":{"id":1065351,"avatar":"https://static001.geekbang.org/account/avatar/00/10/41/87/d26efb2e.jpg","nickname":"SuperSnow","note":"","ucode":"84C89AA8083E6A","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":130038,"discussion_content":"1、也不会很慢，一是一二层都在内存中，B+树比较矮。\n2、有可能是方面原因，也有可能主键是不是递增，或者表中索引是不是建立的过多造成的？","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1578749270,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":129837,"user_name":"lcf枫","can_delete":false,"product_type":"c1","uid":1144171,"ip_address":"","ucode":"D51E8F68BD41CA","user_header":"https://static001.geekbang.org/account/avatar/00/11/75/6b/fd685164.jpg","comment_is_top":false,"comment_ctime":1567299420,"is_pvip":false,"discussion_count":1,"race_medal":0,"score":"1567299420","product_id":100020801,"comment_content":"老师。我有个疑问。前面说的二叉树以及B+树，树的高度等于从磁盘中查找的次数。关于这一点不是特别理解这两者的关系？","like_count":0,"discussions":[{"author":{"id":1065351,"avatar":"https://static001.geekbang.org/account/avatar/00/10/41/87/d26efb2e.jpg","nickname":"SuperSnow","note":"","ucode":"84C89AA8083E6A","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":130041,"discussion_content":"树高那就相当于一层需要指向另一层中的某个页，那这个过程是寻址的，寻址就需要磁盘I/O的，那就是磁盘查找的过程。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1578749355,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":127402,"user_name":"莫","can_delete":false,"product_type":"c1","uid":1606662,"ip_address":"","ucode":"154249A617AD80","user_header":"https://static001.geekbang.org/account/avatar/00/18/84/06/4ce710ae.jpg","comment_is_top":false,"comment_ctime":1566698387,"is_pvip":false,"discussion_count":1,"race_medal":0,"score":"1566698387","product_id":100020801,"comment_content":"老师，我有个问题请教一下，如果没有主键索引，那么非主键索引里面存的内容是什么呢","like_count":0,"discussions":[{"author":{"id":1346546,"avatar":"https://static001.geekbang.org/account/avatar/00/14/8b/f2/a6abbe45.jpg","nickname":"笼鱼","note":"","ucode":"CED5914D2C2964","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":6407,"discussion_content":"没有主键索引也没有唯一索引的话，mysql会将rowId设置为主键索引","likes_number":2,"is_delete":false,"is_hidden":false,"ctime":1566889623,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":127057,"user_name":"狼的诱惑","can_delete":false,"product_type":"c1","uid":1257043,"ip_address":"","ucode":"AE89DFC5963C42","user_header":"https://static001.geekbang.org/account/avatar/00/13/2e/53/bf62683f.jpg","comment_is_top":false,"comment_ctime":1566546532,"is_pvip":false,"discussion_count":1,"race_medal":0,"score":"1566546532","product_id":100020801,"comment_content":"老师好，想问一下，int类型索引存储时key就是具体的int值吗？varcher类型的索引，key是经过hash后存储吗？varcher类型具体怎么存的，查询时又是怎么查的？","like_count":0,"discussions":[{"author":{"id":1065351,"avatar":"https://static001.geekbang.org/account/avatar/00/10/41/87/d26efb2e.jpg","nickname":"SuperSnow","note":"","ucode":"84C89AA8083E6A","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":130049,"discussion_content":"int类型，Key应该就是int值吧。varchar这个应该是换算过，因为也要有大小的，具体怎么换算不知道，期待老师解惑。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1578749544,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":126651,"user_name":"JJj","can_delete":false,"product_type":"c1","uid":1196463,"ip_address":"","ucode":"EA53F2CEAFCFF1","user_header":"https://static001.geekbang.org/account/avatar/00/12/41/af/4307867a.jpg","comment_is_top":false,"comment_ctime":1566441237,"is_pvip":false,"discussion_count":1,"race_medal":0,"score":"1566441237","product_id":100020801,"comment_content":"请问下主键索引和普通索引的B+树非叶子节点存的是什么？","like_count":0,"discussions":[{"author":{"id":1065351,"avatar":"https://static001.geekbang.org/account/avatar/00/10/41/87/d26efb2e.jpg","nickname":"SuperSnow","note":"","ucode":"84C89AA8083E6A","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":130056,"discussion_content":"非叶子节点存的是一个页，这个页中应该是存的指向下级叶子结点的地址。个人理解哈。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1578749790,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":125691,"user_name":"码猿外","can_delete":false,"product_type":"c1","uid":1261748,"ip_address":"","ucode":"6D1862DF93CD54","user_header":"https://static001.geekbang.org/account/avatar/00/13/40/b4/11021a89.jpg","comment_is_top":false,"comment_ctime":1566227052,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1566227052","product_id":100020801,"comment_content":"为老师的详细讲解点赞，老师的文章不仅语言精炼紧凑，图也画的漂亮<br>BTW，请问老师是用什么工具画图的？","like_count":0},{"had_liked":false,"id":125083,"user_name":"汪洲","can_delete":false,"product_type":"c1","uid":1568162,"ip_address":"","ucode":"C03C6124788945","user_header":"https://static001.geekbang.org/account/avatar/00/17/ed/a2/73c2bdd5.jpg","comment_is_top":false,"comment_ctime":1566057308,"is_pvip":false,"discussion_count":1,"race_medal":0,"score":"1566057308","product_id":100020801,"comment_content":"老师，有个问题请教下：在KV场景下，用业务字段做主键，这样是解决了其他索引占用空间问题，因为没有其它索引了。但是当新插入一条中间值时，是不是还会存在比较高的索引维护成本呢？因为这数据不是追加的方式插入的，所以感觉还是没有加一个自增主键好啊？","like_count":0,"discussions":[{"author":{"id":1065351,"avatar":"https://static001.geekbang.org/account/avatar/00/10/41/87/d26efb2e.jpg","nickname":"SuperSnow","note":"","ucode":"84C89AA8083E6A","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":131984,"discussion_content":"这个就看kv采用的是什么数据模型了吧，如果采用这种递增才有更好查询优势的模型，那就要用递增了，关键KV与递增的这种约定没关系。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1578877416,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":124740,"user_name":"jack Wong","can_delete":false,"product_type":"c1","uid":1356930,"ip_address":"","ucode":"EDF88971815846","user_header":"https://static001.geekbang.org/account/avatar/00/14/b4/82/62548de6.jpg","comment_is_top":false,"comment_ctime":1565957556,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1565957556","product_id":100020801,"comment_content":"老师请教下，普通索引k可以將值为500的数据对应的主键获取到，再走一次主键索引，获取结果，我那时以为直接走普通索引就ok了。","like_count":0},{"had_liked":false,"id":124282,"user_name":"样","can_delete":false,"product_type":"c1","uid":1627700,"ip_address":"","ucode":"83AB67CD513B77","user_header":"https://static001.geekbang.org/account/avatar/00/18/d6/34/092cedcf.jpg","comment_is_top":false,"comment_ctime":1565851894,"is_pvip":false,"discussion_count":1,"race_medal":0,"score":"1565851894","product_id":100020801,"comment_content":"老师，有些表没有设置主键，那么普通索引是如何进行查询的？","like_count":0,"discussions":[{"author":{"id":1065351,"avatar":"https://static001.geekbang.org/account/avatar/00/10/41/87/d26efb2e.jpg","nickname":"SuperSnow","note":"","ucode":"84C89AA8083E6A","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":131992,"discussion_content":"没有指定主键，会产生一个默认的主键row id，那变通索引最终指向这个主键索引","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1578877521,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":123388,"user_name":"Lily Ning","can_delete":false,"product_type":"c1","uid":1307021,"ip_address":"","ucode":"685F6E92691B2B","user_header":"https://static001.geekbang.org/account/avatar/00/13/f1/8d/8073a09f.jpg","comment_is_top":false,"comment_ctime":1565665648,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1565665648","product_id":100020801,"comment_content":"老师，请问分区表修改分区名之后，索引为什么会失效呢","like_count":0},{"had_liked":false,"id":121231,"user_name":"妥协","can_delete":false,"product_type":"c1","uid":1249656,"ip_address":"","ucode":"7201DFE9C12669","user_header":"https://static001.geekbang.org/account/avatar/00/13/11/78/4f0cd172.jpg","comment_is_top":false,"comment_ctime":1565081386,"is_pvip":false,"discussion_count":1,"race_medal":0,"score":"1565081386","product_id":100020801,"comment_content":"老师，你画的图4，对于b+tree，叶子节点不是应该双向指针连在一起吗？","like_count":0,"discussions":[{"author":{"id":1065351,"avatar":"https://static001.geekbang.org/account/avatar/00/10/41/87/d26efb2e.jpg","nickname":"SuperSnow","note":"","ucode":"84C89AA8083E6A","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":131993,"discussion_content":"为什么?","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1578877591,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":119909,"user_name":"jjyyun","can_delete":false,"product_type":"c1","uid":1592576,"ip_address":"","ucode":"8824654F673087","user_header":"https://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTLIzE6JOuXsOamCWiaq8sHHVyCK44bdIOEqnE42veoZPEqxs5IJ8RT1Hicz0ZlPQFcbEFSwjV7icrfEw/132","comment_is_top":false,"comment_ctime":1564725246,"is_pvip":false,"discussion_count":2,"race_medal":0,"score":"1564725246","product_id":100020801,"comment_content":"老师我有一个问题，InnoDB的B+树的阶数是怎么确定的？","like_count":0,"discussions":[{"author":{"id":1065351,"avatar":"https://static001.geekbang.org/account/avatar/00/10/41/87/d26efb2e.jpg","nickname":"SuperSnow","note":"","ucode":"84C89AA8083E6A","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":132000,"discussion_content":"你说的这个阶数是层级吗？如果是层级就看一个节点的N是多少，N越大，那这一层级的页就越大，存储的数据就越多，进而进一步减少层级，B+树是“矮”的树。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1578877734,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1182509,"avatar":"https://static001.geekbang.org/account/avatar/00/12/0b/2d/4a6d7d41.jpg","nickname":"道法自然","note":"","ucode":"F88FBFB34EE764","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":3788,"discussion_content":"看key值的空间大小吧，老师举例了整数的话，大概一个节点能存1200个key，也就是1200阶","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1564811688,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":119186,"user_name":"Geek_27a248","can_delete":false,"product_type":"c1","uid":1542778,"ip_address":"","ucode":"6AC3AC42E6EEC9","user_header":"https://static001.geekbang.org/account/avatar/00/17/8a/7a/54003392.jpg","comment_is_top":false,"comment_ctime":1564535381,"is_pvip":false,"discussion_count":4,"race_medal":0,"score":"1564535381","product_id":100020801,"comment_content":"老师，我想问一下，建立索引是在建表的时候建立好还是等数据有了一定数据量在建立","like_count":0,"discussions":[{"author":{"id":1044546,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/f0/42/7728d4f5.jpg","nickname":"艿艿","note":"","ucode":"8F727AB7A7F6B2","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":28704,"discussion_content":"数据额","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1570709404,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1065351,"avatar":"https://static001.geekbang.org/account/avatar/00/10/41/87/d26efb2e.jpg","nickname":"SuperSnow","note":"","ucode":"84C89AA8083E6A","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":132006,"discussion_content":"根据你业务的需求了，如果前期已经很明确那就直接建立，如果后期明确就后边建立，这个跟有了一定数据量没多大关系吧。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1578877887,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":2,"child_discussions":[{"author":{"id":1542778,"avatar":"https://static001.geekbang.org/account/avatar/00/17/8a/7a/54003392.jpg","nickname":"Geek_27a248","note":"","ucode":"6AC3AC42E6EEC9","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1065351,"avatar":"https://static001.geekbang.org/account/avatar/00/10/41/87/d26efb2e.jpg","nickname":"SuperSnow","note":"","ucode":"84C89AA8083E6A","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":133548,"discussion_content":"其实我想表达刚开始没有创建索引、后期数据量有了、才创建索引、，此时与开始创建表时创建索引两种对比","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1578971056,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":132006,"ip_address":""},"score":133548,"extra":""},{"author":{"id":1065351,"avatar":"https://static001.geekbang.org/account/avatar/00/10/41/87/d26efb2e.jpg","nickname":"SuperSnow","note":"","ucode":"84C89AA8083E6A","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1542778,"avatar":"https://static001.geekbang.org/account/avatar/00/17/8a/7a/54003392.jpg","nickname":"Geek_27a248","note":"","ucode":"6AC3AC42E6EEC9","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":134806,"discussion_content":"哦，有数据量了然后创建索引应该没啥问题，有时候对于有的索引还从新再建立一边，以让页更紧凑呢，个人理解哈","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1579051184,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":133548,"ip_address":""},"score":134806,"extra":""}]}]},{"had_liked":false,"id":118501,"user_name":"JGOS","can_delete":false,"product_type":"c1","uid":1237592,"ip_address":"","ucode":"46A905A169408F","user_header":"https://static001.geekbang.org/account/avatar/00/12/e2/58/2468a5e9.jpg","comment_is_top":false,"comment_ctime":1564375789,"is_pvip":false,"discussion_count":1,"race_medal":0,"score":"1564375789","product_id":100020801,"comment_content":"老师，N叉树的这n个子节点，是存储在一个数据块中的吗？所以寻址一次，可以和这n个节点做比较，以减少io次数？","like_count":0,"discussions":[{"author":{"id":1065351,"avatar":"https://static001.geekbang.org/account/avatar/00/10/41/87/d26efb2e.jpg","nickname":"SuperSnow","note":"","ucode":"84C89AA8083E6A","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":132007,"discussion_content":"确切来说，N个子节点的地址存在一个数据页中，一个子节点就是一个数据页，16K，根据key的大小，可以算出每个子节点的N是多少。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1578877989,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":117498,"user_name":"清风","can_delete":false,"product_type":"c1","uid":1542078,"ip_address":"","ucode":"AB2D169746BC23","user_header":"https://static001.geekbang.org/account/avatar/00/17/87/be/7466bf26.jpg","comment_is_top":false,"comment_ctime":1564061170,"is_pvip":false,"discussion_count":1,"race_medal":0,"score":"1564061170","product_id":100020801,"comment_content":"老师，看网上说的，索引每个节点用一页存储；还有其他的说是B+tree的非叶子节点不存储真实的数据，这样每页可以加载更多的索引节点，可以加快查询速度，以上说法哪个是对的呢","like_count":0,"discussions":[{"author":{"id":1065351,"avatar":"https://static001.geekbang.org/account/avatar/00/10/41/87/d26efb2e.jpg","nickname":"SuperSnow","note":"","ucode":"84C89AA8083E6A","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":132010,"discussion_content":"你说的每个非叶子节点不存储真实数据，这样每页可以加载更多的索引节点。个人认为是对的，因为当一个叶子节点存不下的时候，它就会变成非叶子节点，然后产生下沉叶子节点，用来存数据，那非叶子节点这个时候应该存指向叶子节点的地址吧。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1578878102,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":117386,"user_name":"tommy","can_delete":false,"product_type":"c1","uid":1062373,"ip_address":"","ucode":"E6EDD4ECBA01D6","user_header":"https://static001.geekbang.org/account/avatar/00/10/35/e5/0b60d57e.jpg","comment_is_top":false,"comment_ctime":1564037535,"is_pvip":false,"discussion_count":1,"race_medal":0,"score":"1564037535","product_id":100020801,"comment_content":"“考虑到树根的数据块总是在内存中的” 我问一下，树根不就只有一个数据吗？","like_count":0,"discussions":[{"author":{"id":1065351,"avatar":"https://static001.geekbang.org/account/avatar/00/10/41/87/d26efb2e.jpg","nickname":"SuperSnow","note":"","ucode":"84C89AA8083E6A","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":132011,"discussion_content":"树根应该是一个节点，应该是一个页吧。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1578878129,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":116913,"user_name":"Northern","can_delete":false,"product_type":"c1","uid":1060908,"ip_address":"","ucode":"6B8DB4CF385029","user_header":"https://static001.geekbang.org/account/avatar/00/10/30/2c/333d7080.jpg","comment_is_top":false,"comment_ctime":1563937871,"is_pvip":false,"discussion_count":1,"race_medal":0,"score":"1563937871","product_id":100020801,"comment_content":"自增主键有什么缺点？","like_count":0,"discussions":[{"author":{"id":1044546,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/f0/42/7728d4f5.jpg","nickname":"艿艿","note":"","ucode":"8F727AB7A7F6B2","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":28708,"discussion_content":"例如说，如果返回自增 id 到前端，可以被人推算出业务情况。","likes_number":2,"is_delete":false,"is_hidden":false,"ctime":1570709532,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":116911,"user_name":"Geek_7b9b2d","can_delete":false,"product_type":"c1","uid":1598070,"ip_address":"","ucode":"91269B3247342F","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/1tSC62InSfL6zzx0FibT0TbAEhibibCiaOk9w9ialbuCnWCbYknkQQreibX7YYMhiaWRpFbFQxGgNRdu5qYHHRTKkw3qg/132","comment_is_top":false,"comment_ctime":1563937779,"is_pvip":false,"discussion_count":1,"race_medal":0,"score":"1563937779","product_id":100020801,"comment_content":"老师您好，看到这个的时候遇到一个问题，就是在市民表那里遇到：建立（身份证号+姓名）联合索引，如果遇到一个高频请求，通过身份证号查名字，那建立了联合索引以后是如何通过身份证号查到名字的呢？过程是怎样的呢？","like_count":0,"discussions":[{"author":{"id":1065351,"avatar":"https://static001.geekbang.org/account/avatar/00/10/41/87/d26efb2e.jpg","nickname":"SuperSnow","note":"","ucode":"84C89AA8083E6A","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":132019,"discussion_content":"因为身份证号+姓名就是索引Key，根据前缀索引已经找到Key了，那姓名自然就有了。因为姓名也是一个字段啊。","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1578878411,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":116628,"user_name":"追风","can_delete":false,"product_type":"c1","uid":1305694,"ip_address":"","ucode":"AA36C3970D74D2","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTK9FrYuvBxk4YuTgydgBUK8p6R4n8ibpZnicF8s1FaKMHPTDXb8BXI4WMDHZBhiaRyFTrFCfCjpRpib6w/132","comment_is_top":false,"comment_ctime":1563883297,"is_pvip":false,"discussion_count":1,"race_medal":0,"score":"1563883297","product_id":100020801,"comment_content":"“主键索引的叶子节点存的是整行的数据(聚簇索引)，非主键索引的叶子节点内容是主键的值(二级索引)。”疑问：没有主键索引的时候非主键索引的叶子节点内容是什么？","like_count":0,"discussions":[{"author":{"id":1065351,"avatar":"https://static001.geekbang.org/account/avatar/00/10/41/87/d26efb2e.jpg","nickname":"SuperSnow","note":"","ucode":"84C89AA8083E6A","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":132025,"discussion_content":"存的是默认主键row id","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1578878602,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":116608,"user_name":"kevin","can_delete":false,"product_type":"c1","uid":1281916,"ip_address":"","ucode":"36DF095090FEA6","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTJ3MIpUYUb2IzPYLcbFibzkUPtq1V8K1GDibhYf4N2kziby0rC5QVvqfibOoUia8b0wv5nHYiaYEF37f1Hw/132","comment_is_top":false,"comment_ctime":1563880568,"is_pvip":false,"discussion_count":1,"race_medal":0,"score":"1563880568","product_id":100020801,"comment_content":"1.MySQl中InnodDB的普通索引（key或index关键字），如果表中有多少个索引，就会有多少个索引树吗（如图四的索引树）？<br><br>2.索引树的构建策略是什么样的，有没有相关文档，比如树高，节点数量，索引树结构变更。","like_count":0,"discussions":[{"author":{"id":1065351,"avatar":"https://static001.geekbang.org/account/avatar/00/10/41/87/d26efb2e.jpg","nickname":"SuperSnow","note":"","ucode":"84C89AA8083E6A","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":132029,"discussion_content":"1、一个索引就是一个索引树了。\n2、索引树的构建策略就是B+树，也就是N叉树。树高，节点数据可看评论，此类问题被问的没十个，也有5个了。索引树结构变更，如果理解了你前面问的，自己一思考就出来了。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1578878740,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":115627,"user_name":"杨春鹏","can_delete":false,"product_type":"c1","uid":1172056,"ip_address":"","ucode":"518F38232F97B5","user_header":"https://static001.geekbang.org/account/avatar/00/11/e2/58/8c8897c8.jpg","comment_is_top":false,"comment_ctime":1563677984,"is_pvip":false,"discussion_count":1,"race_medal":0,"score":"1563677984","product_id":100020801,"comment_content":"一个数据页可以存储多少个节点（pagesize&#47;(keysize+pointsize)），不是提前计算好的吗？为什么会出现页分裂。","like_count":0,"discussions":[{"author":{"id":1044546,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/f0/42/7728d4f5.jpg","nickname":"艿艿","note":"","ucode":"8F727AB7A7F6B2","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":28711,"discussion_content":"因为要求 key 有序。如果插入的 key 是无须，就会分裂。\n并且，恰好满了","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1570709755,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":115619,"user_name":"杨春鹏","can_delete":false,"product_type":"c1","uid":1172056,"ip_address":"","ucode":"518F38232F97B5","user_header":"https://static001.geekbang.org/account/avatar/00/11/e2/58/8c8897c8.jpg","comment_is_top":false,"comment_ctime":1563676829,"is_pvip":false,"discussion_count":1,"race_medal":0,"score":"1563676829","product_id":100020801,"comment_content":"老师，您好！如果表中没有主键，只有普通索引，那么普通索引的叶子节点存储的是什么数据呢？","like_count":0,"discussions":[{"author":{"id":1044546,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/f0/42/7728d4f5.jpg","nickname":"艿艿","note":"","ucode":"8F727AB7A7F6B2","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":28712,"discussion_content":"rowid","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1570709767,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":114755,"user_name":"师恩磊","can_delete":false,"product_type":"c1","uid":1216657,"ip_address":"","ucode":"237A2B7D19E0A5","user_header":"https://static001.geekbang.org/account/avatar/00/12/90/91/aebfb724.jpg","comment_is_top":false,"comment_ctime":1563378013,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1563378013","product_id":100020801,"comment_content":"索引上总结：讲解了什么是索引，索引就是一种数据结构，分为哈希索引，有序数组索引，二叉树索引，N叉树索引，接着哈希索引，通过哈希函数计算出哈希值，确定索引位置，如果出现位置冲突，以链表的方式解决，这个数据结构方便等值查询，因为如果是区间查询的话，需要全表扫描，有序数组索引，方便区间查询和等值查询，但插入时麻烦，因为在中间插入，后面的元素还需要后移，二叉树索引，可以满足要求，但二叉树深度太深，数据库io太频繁，故采用N叉树索引，减少io次数。使用索引与使用主键的区别，使用索引，是通过索引树找到主键ID，然后再通过主键树找到所需的数据，称为回表。又讲了索引维护，B+树为了维护索引的有序性，在插入新值的时候，需要做必要的维护，分为在数据的后面直接插入，在叶子节点的中间插入，如果该数据页已经满了，则需要申请新的数据页，然后把数据挪过去，这样性能会受到影响，也会影响利用率，称为页分裂，有页分裂，就会有页合并。还讲述了主键用证件号好，还是用自增id做主键好，因为如果用身份证号做主键，那么二级索引的叶子节点占用约20个字节，而如果用整型的话，差不多4个字节。","like_count":0},{"had_liked":false,"id":114229,"user_name":"刘瑞","can_delete":false,"product_type":"c1","uid":1143234,"ip_address":"","ucode":"7E712BC281A8A7","user_header":"","comment_is_top":false,"comment_ctime":1563257632,"is_pvip":false,"discussion_count":2,"race_medal":0,"score":"1563257632","product_id":100020801,"comment_content":"老师好，想问个问题，如果一个表中没有主键，那么他的数据结构是什么样的，比如一个id，name，age的表，name有索引，那么他的数据结构也是b+tree以name为区分的吗，他的数据是不是就不用回表了？","like_count":0,"discussions":[{"author":{"id":1044546,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/f0/42/7728d4f5.jpg","nickname":"艿艿","note":"","ucode":"8F727AB7A7F6B2","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":28714,"discussion_content":"会有一个使用 rowid 形成的聚簇索引。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1570709805,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":1,"child_discussions":[{"author":{"id":1143234,"avatar":"","nickname":"刘瑞","note":"","ucode":"7E712BC281A8A7","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1044546,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/f0/42/7728d4f5.jpg","nickname":"艿艿","note":"","ucode":"8F727AB7A7F6B2","race_medal":0,"user_type":1,"is_pvip":true},"discussion":{"id":80757,"discussion_content":"谢谢","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1576193944,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":28714,"ip_address":""},"score":80757,"extra":""}]}]},{"had_liked":false,"id":114111,"user_name":"迈克尔嘿嘿","can_delete":false,"product_type":"c1","uid":1601276,"ip_address":"","ucode":"F73CAFCE84C8EF","user_header":"https://static001.geekbang.org/account/avatar/00/18/6e/fc/a7ff61e5.jpg","comment_is_top":false,"comment_ctime":1563239285,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1563239285","product_id":100020801,"comment_content":"老师，我买课买得晚，不知道你现在还有时间答疑不。<br>老师，你讲<br>“为了让一个查询尽量少地读磁盘，就必须让查询过程访问尽量少的数据块。”<br><br>那么对于叶子节点的这块数据是从磁盘一次性加载到内存中吗？  比如这个叶子节点有1000行的数据，那么同一块数据在磁盘上存放的方式又是怎么样，会很分散吗？跟磁盘的扇区相关的知识有没有什么关系呢？","like_count":0},{"had_liked":false,"id":113534,"user_name":"賢","can_delete":false,"product_type":"c1","uid":1286884,"ip_address":"","ucode":"D837D27DFB4E2A","user_header":"https://static001.geekbang.org/account/avatar/00/13/a2/e4/47fd0f81.jpg","comment_is_top":false,"comment_ctime":1563071380,"is_pvip":false,"discussion_count":1,"race_medal":0,"score":"1563071380","product_id":100020801,"comment_content":"老师请问通过增加自增主键可以减少新增数据时索引的页分裂问题，那新增时，普通索引是否也存在页分裂的问题？","like_count":0,"discussions":[{"author":{"id":1308297,"avatar":"https://static001.geekbang.org/account/avatar/00/13/f6/89/2200e166.jpg","nickname":"文武冠冕寂寞侯","note":"","ucode":"C537F05607B285","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":1897,"discussion_content":"我的理解：普通索引和聚簇索引性质上都是一样的，都是一个有序的多叉树，只是聚簇索引上面每个叶子节点保存的是完整的记录，并且排序按照主键排序，如果主键是有序的话，就是一直在追加数据，如果主键不是有序的话，那么就需要按照主键找到所在的位置，就会产生页分裂。普通索引就是按照普通列排序，只是叶子节点保存的是主键，不是完整的数据，其他和聚簇索引是一样的，如果普通列是递增的，那数据就是追加，如果不是，就页分裂。","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1563074195,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":113475,"user_name":"颜海航","can_delete":false,"product_type":"c1","uid":1308159,"ip_address":"","ucode":"5644F6328BF901","user_header":"https://static001.geekbang.org/account/avatar/00/13/f5/ff/523fb378.jpg","comment_is_top":false,"comment_ctime":1563026845,"is_pvip":false,"discussion_count":1,"race_medal":0,"score":"1563026845","product_id":100020801,"comment_content":"老师您好 ，您好的数据块的大小是磁盘数据块的大小还是MySQL的page页大小？","like_count":0,"discussions":[{"author":{"id":1065351,"avatar":"https://static001.geekbang.org/account/avatar/00/10/41/87/d26efb2e.jpg","nickname":"SuperSnow","note":"","ucode":"84C89AA8083E6A","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":132039,"discussion_content":"page","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1578878959,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":111834,"user_name":"小怪","can_delete":false,"product_type":"c1","uid":1108016,"ip_address":"","ucode":"E604BC8EF1B429","user_header":"https://static001.geekbang.org/account/avatar/00/10/e8/30/0a4eca46.jpg","comment_is_top":false,"comment_ctime":1562629156,"is_pvip":false,"discussion_count":1,"race_medal":0,"score":"1562629156","product_id":100020801,"comment_content":"老师好，我在业务上遇到一个问题：<br>1、我们有一张资产表，里面有对应的字段asset_id和amount，asset_id也就是币的id，比如BTC、ETH这些，amount是用户的资产金额，asset_id是int，长度在1-100之间，amount是decimal(32,16)<br>2、我们现在有一个业务需求是需要找出amount在XX-YY区间的所有用户<br>3、于是我们创建了asset_id、amount两个普通索引，但是效果很不明显，一来是因为asset_id的区分读不高，二来是amount这个经常没使用到索引<br><br>请老师指点迷津","like_count":0,"discussions":[{"author":{"id":1065351,"avatar":"https://static001.geekbang.org/account/avatar/00/10/41/87/d26efb2e.jpg","nickname":"SuperSnow","note":"","ucode":"84C89AA8083E6A","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":132045,"discussion_content":"个人理解，为啥还要建立这两个字段的联合索引呢，直接在amount上建立索引就行了，你怎么也得回表，因为你查的是用户信息。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1578879189,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":111171,"user_name":"衬衫的价格是19美元","can_delete":false,"product_type":"c1","uid":1397631,"ip_address":"","ucode":"655F925451F772","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTKVUskibDnhMt5MCIJ8227HWkeg2wEEyewps8GuWhWaY5fy7Ya56bu2ktMlxdla3K29Wqia9efCkWaQ/132","comment_is_top":false,"comment_ctime":1562497850,"is_pvip":false,"discussion_count":1,"race_medal":0,"score":"1562497850","product_id":100020801,"comment_content":"键和索引是什么关系呢？指定了主键后也就是指定了主键索引，指定了唯一键后也就是指定了唯一索引对吗？","like_count":0,"discussions":[{"author":{"id":1065351,"avatar":"https://static001.geekbang.org/account/avatar/00/10/41/87/d26efb2e.jpg","nickname":"SuperSnow","note":"","ucode":"84C89AA8083E6A","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":132046,"discussion_content":"指定了键就默认创建了索引，没有指定键也是可以创建索引（普通索引），个人这么理解哈。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1578879238,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":110474,"user_name":"zhangwei","can_delete":false,"product_type":"c1","uid":1246639,"ip_address":"","ucode":"B71CBA5311846F","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/PiajxSqBRaEIvrwfqAuRkaK8Pl2apHKFZxd5mjnFhROMNcg5qXUT4AxE2ZTTia5Hg6pmFM1vozq3vZiagJoaJ4Pyg/132","comment_is_top":false,"comment_ctime":1562286137,"is_pvip":false,"discussion_count":2,"race_medal":0,"score":"1562286137","product_id":100020801,"comment_content":"老师好，二级索引叶子结点的主键是有序的吗？如果不是，这张图可能会误导。","like_count":0,"discussions":[{"author":{"id":1044546,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/f0/42/7728d4f5.jpg","nickname":"艿艿","note":"","ucode":"8F727AB7A7F6B2","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":28720,"discussion_content":"是 key 要求有序，value 不需要有序。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1570709941,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":1,"child_discussions":[{"author":{"id":1065351,"avatar":"https://static001.geekbang.org/account/avatar/00/10/41/87/d26efb2e.jpg","nickname":"SuperSnow","note":"","ucode":"84C89AA8083E6A","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1044546,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/f0/42/7728d4f5.jpg","nickname":"艿艿","note":"","ucode":"8F727AB7A7F6B2","race_medal":0,"user_type":1,"is_pvip":true},"discussion":{"id":132048,"discussion_content":"普通索引的索引树也应该是B+树，在存储的时候也应该是按照左小右大的规律吧，只不过相应该的主键value顺序不同了。但是映射到主键索引树，主键肯定是有序的。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1578879362,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":28720,"ip_address":""},"score":132048,"extra":""}]}]},{"had_liked":false,"id":110426,"user_name":"nicozhu","can_delete":false,"product_type":"c1","uid":1434109,"ip_address":"","ucode":"0F1CE21EC7228D","user_header":"","comment_is_top":false,"comment_ctime":1562254582,"is_pvip":false,"discussion_count":1,"race_medal":0,"score":"1562254582","product_id":100020801,"comment_content":"丁老师好 那根节点在插入的时候是怎么选择的 ，是不是每次插入，整颗树都要判断呢？","like_count":0,"discussions":[{"author":{"id":1065351,"avatar":"https://static001.geekbang.org/account/avatar/00/10/41/87/d26efb2e.jpg","nickname":"SuperSnow","note":"","ucode":"84C89AA8083E6A","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":132051,"discussion_content":"判断什么？大小，还是要产生下级节点？","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1578879392,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":110206,"user_name":"残天噬魂","can_delete":false,"product_type":"c1","uid":1506609,"ip_address":"","ucode":"A2AD8303A4518D","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/q2HwchogzNiavKhIB4GfAxH6B88NhSoC7B7keVEUqiaP6JPokDUNJLYehocOyqYqrhA3iaxywyRXLYkYJjDUQESZw/132","comment_is_top":false,"comment_ctime":1562208011,"is_pvip":false,"discussion_count":1,"race_medal":0,"score":"1562208011","product_id":100020801,"comment_content":"老师，问一下，按照您说的，如果以叉数1200的B+数来存储索引，那是不是数据量在1200以内，也就是整张表的记录数少于1200的话，只会存在一个根节点，这个根节点也就是叶子节点对么？","like_count":0,"discussions":[{"author":{"id":1065351,"avatar":"https://static001.geekbang.org/account/avatar/00/10/41/87/d26efb2e.jpg","nickname":"SuperSnow","note":"","ucode":"84C89AA8083E6A","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":132057,"discussion_content":"个人觉得，是的。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1578879531,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":110171,"user_name":"残天噬魂","can_delete":false,"product_type":"c1","uid":1506609,"ip_address":"","ucode":"A2AD8303A4518D","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/q2HwchogzNiavKhIB4GfAxH6B88NhSoC7B7keVEUqiaP6JPokDUNJLYehocOyqYqrhA3iaxywyRXLYkYJjDUQESZw/132","comment_is_top":false,"comment_ctime":1562203875,"is_pvip":false,"discussion_count":1,"race_medal":0,"score":"1562203875","product_id":100020801,"comment_content":"老师好，我想问一下，假设一个表里面，有100W条数据，这个表中有一个唯一自增索引key，也就是说有100W个索引，那在这个key的B+树中，root节点存储数据有什么规律吗？","like_count":0,"discussions":[{"author":{"id":1065351,"avatar":"https://static001.geekbang.org/account/avatar/00/10/41/87/d26efb2e.jpg","nickname":"SuperSnow","note":"","ucode":"84C89AA8083E6A","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":132091,"discussion_content":"根节点存的就是下级节点的地址。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1578881654,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":109464,"user_name":"yhui","can_delete":false,"product_type":"c1","uid":1512714,"ip_address":"","ucode":"1AAAF47E41FFB8","user_header":"https://static001.geekbang.org/account/avatar/00/17/15/0a/c450e565.jpg","comment_is_top":false,"comment_ctime":1562037096,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1562037096","product_id":100020801,"comment_content":"监控 information_schema.Innodb_trx 表，设置长事务阈值，超过就报警 &#47; 或者 kill？<br><br>      这个具体怎么操作，直接在Innodb_trx表里把那条记录删除吗？","like_count":0},{"had_liked":false,"id":108682,"user_name":"beiler","can_delete":false,"product_type":"c1","uid":1192989,"ip_address":"","ucode":"0A62FE86617486","user_header":"https://static001.geekbang.org/account/avatar/00/12/34/1d/169cd800.jpg","comment_is_top":false,"comment_ctime":1561855341,"is_pvip":false,"replies":[{"id":"39544","content":"索引可以快速定位记录，这个好处还是需要的","user_name":"作者回复","user_name_real":"林晓斌","uid":"1264162","ctime":1561983565,"ip_address":"","comment_id":108682,"utype":1}],"discussion_count":2,"race_medal":0,"score":"1561855341","product_id":100020801,"comment_content":"既然非主键查询还需要回表，那就没有存在的意义了，为什么要有非主键的查询呢","like_count":0,"discussions":[{"author":{"id":1264162,"avatar":"https://static001.geekbang.org/account/avatar/00/13/4a/22/2681d602.jpg","nickname":"林晓斌","note":"","ucode":"CDE42D44F26240","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":456079,"discussion_content":"索引可以快速定位记录，这个好处还是需要的","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1561983565,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1237583,"avatar":"https://static001.geekbang.org/account/avatar/00/12/e2/4f/df01f65e.jpg","nickname":"Danfēng","note":"","ucode":"E5B3451F1D0441","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":280756,"discussion_content":"因为有的业务需求，主键查询一般是id（bigint），而这个id一般不是给前端暴露，比如用户表，可能就是根据手机号查询，所以这个时候就是非主键查询了","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1591608487,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":108485,"user_name":"多襄丸","can_delete":false,"product_type":"c1","uid":1074310,"ip_address":"","ucode":"1AA1497C5A293C","user_header":"https://static001.geekbang.org/account/avatar/00/10/64/86/f5a9403a.jpg","comment_is_top":false,"comment_ctime":1561781837,"is_pvip":false,"discussion_count":1,"race_medal":0,"score":"1561781837","product_id":100020801,"comment_content":"这里的n叉树 和 b+树 是一样的吗？<br><br>","like_count":0,"discussions":[{"author":{"id":1065351,"avatar":"https://static001.geekbang.org/account/avatar/00/10/41/87/d26efb2e.jpg","nickname":"SuperSnow","note":"","ucode":"84C89AA8083E6A","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":132094,"discussion_content":"B+树就是N叉树的一种实现。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1578881698,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":108346,"user_name":"蒋旺Foo","can_delete":false,"product_type":"c1","uid":1265741,"ip_address":"","ucode":"4325AB9674975C","user_header":"https://static001.geekbang.org/account/avatar/00/13/50/4d/392f969b.jpg","comment_is_top":false,"comment_ctime":1561724592,"is_pvip":false,"discussion_count":1,"race_medal":0,"score":"1561724592","product_id":100020801,"comment_content":"老师，您好，有个疑惑：<br>文中提到“树高 20，一次查询可能需要访问 20 个数据块。” 求教。","like_count":0,"discussions":[{"author":{"id":1065351,"avatar":"https://static001.geekbang.org/account/avatar/00/10/41/87/d26efb2e.jpg","nickname":"SuperSnow","note":"","ucode":"84C89AA8083E6A","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":132095,"discussion_content":"这个问题问到的至少有三次了，可翻一下上面的评论。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1578881727,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":107803,"user_name":"时间是最真的答案","can_delete":false,"product_type":"c1","uid":1183601,"ip_address":"","ucode":"B90F3EF769F865","user_header":"https://static001.geekbang.org/account/avatar/00/12/0f/71/9273e8a4.jpg","comment_is_top":false,"comment_ctime":1561612537,"is_pvip":false,"discussion_count":1,"race_medal":0,"score":"1561612537","product_id":100020801,"comment_content":"有两个问题<br>一、实际项目中，使用自增主键，还有必要使用 业务id（类似32位UUID） 吗？<br>二、自增主键的删除会导致数据页的合并吗？","like_count":0,"discussions":[{"author":{"id":1065351,"avatar":"https://static001.geekbang.org/account/avatar/00/10/41/87/d26efb2e.jpg","nickname":"SuperSnow","note":"","ucode":"84C89AA8083E6A","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":132096,"discussion_content":"1、建议不要用uuid，至少要用整体趋于增长的类型。\n2、有可能会导致数据页的合并。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1578881799,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":107598,"user_name":"钱","can_delete":false,"product_type":"c1","uid":1009652,"ip_address":"","ucode":"2C92A243A463D4","user_header":"https://static001.geekbang.org/account/avatar/00/0f/67/f4/9a1feb59.jpg","comment_is_top":false,"comment_ctime":1561562316,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1561562316","product_id":100020801,"comment_content":"1：数据页具体指什么?内存中的数据页嘛?操作系统层面的概念?看评论中有回答，大小16KB，在内存中应该是操作系统层面的概念，不是MySQL系统特有的<br><br>2：获取自增ID的底层逻辑是怎么样的?高并发时是怎么控制的?<br><br>3：B+树保证叶子节点从左到右有序，是怎么实现的，新增效率怎么保证?使用B+树，使树更矮，减少和磁盘的交互次数，提高性能<br><br>4：<br><br>主键索引的叶子节点存储的是数据页，一个数据页可以存放多行数据，所以建议建立自增主键，构建索引，性能更佳，使其他非主键索引的创建更节省空间，并且主键是必须有的你不建MySQL会为你默认创建，这玩意太重要了<br><br>非主键索引的叶子节点存储的是主键索引的值<br><br>5：按主键索引查找会搜索一颗B+树，按非主键索引查询会搜索两棵树，如果，一张表只有两个字段一个建立主键索引，一个建立非主键索引，按非主键索引查询还是搜索两棵树嘛？没有什么优化嘛？因为搜索一棵树也是能够实现查询的目的的，不是吗？看评论也有这个问题，确实会优化，叫做覆盖索引<br><br>另外，注意如果一个非主键索引值对于N个主键索引值，此时就需要搜索N(回表N次主键索引B+树)+1(搜索一次非主键索引B+树，定位主键)次B+树，那非主键索引B+树的结构是啥？F-Z1&#47;Z2还是F-Z1、F-Z2？看到评论中提一样的问题了，是F-Z1、F-Z2的形式，这是有重复节点值的B+树，查找时需要注意下查找逻辑啦！<br><br>6：一张表对应于N棵B+树，每个索引对应一棵B+树，非主键索引的B+树依赖主键索引的B+树，所以，课后习题就是想强调这个啦！<br><br>7：回头想一下，索引是啥？本质就是一种能加快数据查询效率的数据结构，比如：哈希表、有序数组、平衡二叉树、N叉树，B+树是MySQL用的最好的一种。","like_count":0},{"had_liked":false,"id":107461,"user_name":"Demon.Lee","can_delete":false,"product_type":"c1","uid":1052859,"ip_address":"","ucode":"7F0E5493A8E345","user_header":"https://static001.geekbang.org/account/avatar/00/10/10/bb/f1061601.jpg","comment_is_top":false,"comment_ctime":1561539422,"is_pvip":false,"discussion_count":3,"race_medal":1,"score":"1561539422","product_id":100020801,"comment_content":"领导不允许用自增id做主键，说是不安全，必须用uuid，说是如果用自增id，一个id被知道了，则可以把所有数据都偷出来（因为是自增的），但是uuid就偷不了。其他没敢多问，我猜想可能是因为我们做的是saas软件，多个租户数据存在一个表中，用租户id区分，如果根据主键id查询，则A租户可能会故意查询B租户的数据，如果用自增id的话。","like_count":0,"discussions":[{"author":{"id":1065351,"avatar":"https://static001.geekbang.org/account/avatar/00/10/41/87/d26efb2e.jpg","nickname":"SuperSnow","note":"","ucode":"84C89AA8083E6A","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":132107,"discussion_content":"这个属于架构设计的范畴了，你可以将暴露出来的主键ID是自动随机生成的，然后在缓存中将此ID与真实的主键ID做mapping，这样就没问题了。你们领导不让用自增，改为用uuid，只是为了达到不能轻易被人通过主键获取其他数据的目的。更严格的角度来说，也还是有碰到获取其他ID数据的可能的，只是这种风险大大降低罢了。而且uuid也会导致数据库层面的性能问题。这个还是看你们的选择了。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1578882078,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1489177,"avatar":"https://static001.geekbang.org/account/avatar/00/16/b9/19/f4ef2c9a.jpg","nickname":"秦穆之","note":"","ucode":"709C49BFCBB776","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":61897,"discussion_content":"内部数据查询用主键id，但是该字段不会吐给用户。原则上，查询可以用主键查询，但是不能将主键和业务进行强耦合。一方面是安全问题，另一方面会增加数据拆分时的成本","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1574785866,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1044546,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/f0/42/7728d4f5.jpg","nickname":"艿艿","note":"","ucode":"8F727AB7A7F6B2","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":28730,"discussion_content":"这个肯定要做好数据权限额。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1570710290,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":107087,"user_name":"见＆不见","can_delete":false,"product_type":"c1","uid":1342533,"ip_address":"","ucode":"53C6167BB03424","user_header":"https://static001.geekbang.org/account/avatar/00/14/7c/45/19e24f98.jpg","comment_is_top":false,"comment_ctime":1561456855,"is_pvip":false,"discussion_count":1,"race_medal":0,"score":"1561456855","product_id":100020801,"comment_content":"老师 请教下非主键索引的叶子节点的内容是主键的值 这块主键的值具体是指什么呢？","like_count":0,"discussions":[{"author":{"id":1065351,"avatar":"https://static001.geekbang.org/account/avatar/00/10/41/87/d26efb2e.jpg","nickname":"SuperSnow","note":"","ucode":"84C89AA8083E6A","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":132109,"discussion_content":"具体就是指那个你所认为的主键呐。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1578882114,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":107079,"user_name":"刘瑞","can_delete":false,"product_type":"c1","uid":1143234,"ip_address":"","ucode":"7E712BC281A8A7","user_header":"","comment_is_top":false,"comment_ctime":1561455001,"is_pvip":false,"discussion_count":2,"race_medal":0,"score":"1561455001","product_id":100020801,"comment_content":"以 InnoDB 的一个整数字段索引为例，这个 N 差不多是1200左右<br>老师您好，想问下您这个1200是怎么得出来的？","like_count":0,"discussions":[{"author":{"id":1044546,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/f0/42/7728d4f5.jpg","nickname":"艿艿","note":"","ucode":"8F727AB7A7F6B2","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":28731,"discussion_content":"1200 的计算是，因为一个 Page 是 16 * 1024 byte ，每个索引都是 8 byte（假设 key 是 bigint）+ 6 byte（指针），所以计算可得约等于 1200 。\n","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1570710311,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":1,"child_discussions":[{"author":{"id":1143234,"avatar":"","nickname":"刘瑞","note":"","ucode":"7E712BC281A8A7","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1044546,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/f0/42/7728d4f5.jpg","nickname":"艿艿","note":"","ucode":"8F727AB7A7F6B2","race_medal":0,"user_type":1,"is_pvip":true},"discussion":{"id":80756,"discussion_content":"谢谢您","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1576193936,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":28731,"ip_address":""},"score":80756,"extra":""}]}]},{"had_liked":false,"id":106200,"user_name":"阿辉","can_delete":false,"product_type":"c1","uid":1266788,"ip_address":"","ucode":"A7EF42A10E2599","user_header":"https://static001.geekbang.org/account/avatar/00/13/54/64/8f3d000a.jpg","comment_is_top":false,"comment_ctime":1561202665,"is_pvip":false,"discussion_count":1,"race_medal":0,"score":"1561202665","product_id":100020801,"comment_content":"索引图里面的300，700是怎么来的。为什么不是200，500","like_count":0,"discussions":[{"author":{"id":1044546,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/f0/42/7728d4f5.jpg","nickname":"艿艿","note":"","ucode":"8F727AB7A7F6B2","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":28733,"discussion_content":"老师随便距离的。。。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1570710323,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":105769,"user_name":"gkb111","can_delete":false,"product_type":"c1","uid":1224217,"ip_address":"","ucode":"9B3154BCC9046B","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTLLUic3XzxET3L3QXxcTbeg96GMx1HkiaiaZdudchmOmtPnuEPHK5vYEeMkvJR098XljMbXDialYib3z6w/132","comment_is_top":false,"comment_ctime":1561082567,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1561082567","product_id":100020801,"comment_content":"索引，索引键与主键，b+树","like_count":0},{"had_liked":false,"id":105601,"user_name":"尔冬橙","can_delete":false,"product_type":"c1","uid":1225224,"ip_address":"","ucode":"0B013A49BC18DA","user_header":"https://static001.geekbang.org/account/avatar/00/12/b2/08/92f42622.jpg","comment_is_top":false,"comment_ctime":1561039798,"is_pvip":false,"discussion_count":1,"race_medal":0,"score":"1561039798","product_id":100020801,"comment_content":"老师，您说B+树索引跟节点是存在内存的，第二层也会有概率存在内存，您是指数据库缓存的情况么","like_count":0,"discussions":[{"author":{"id":1065351,"avatar":"https://static001.geekbang.org/account/avatar/00/10/41/87/d26efb2e.jpg","nickname":"SuperSnow","note":"","ucode":"84C89AA8083E6A","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":132114,"discussion_content":"应该是索引组织吧。加快获取数据的定位。个人理解。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1578882268,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":105343,"user_name":"Sancho","can_delete":false,"product_type":"c1","uid":1436391,"ip_address":"","ucode":"78849913082622","user_header":"https://static001.geekbang.org/account/avatar/00/15/ea/e7/9ce305ec.jpg","comment_is_top":false,"comment_ctime":1560989007,"is_pvip":false,"replies":[{"id":"38143","content":"17.28亿 😆","user_name":"作者回复","user_name_real":"林晓斌","uid":"1264162","ctime":1560997672,"ip_address":"","comment_id":105343,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1560989007","product_id":100020801,"comment_content":"1200的3次方是1.728e9，不是17亿","like_count":0,"discussions":[{"author":{"id":1264162,"avatar":"https://static001.geekbang.org/account/avatar/00/13/4a/22/2681d602.jpg","nickname":"林晓斌","note":"","ucode":"CDE42D44F26240","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":454641,"discussion_content":"17.28亿 😆","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1560997672,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":104436,"user_name":"Demter","can_delete":false,"product_type":"c1","uid":1158439,"ip_address":"","ucode":"BE3B6F726916CE","user_header":"https://static001.geekbang.org/account/avatar/00/11/ad/27/5556ae50.jpg","comment_is_top":false,"comment_ctime":1560753835,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1560753835","product_id":100020801,"comment_content":"老师好，可否问下联合索引的内部数据结构是啥样的，搜了好多资料没搜到","like_count":0},{"had_liked":false,"id":104201,"user_name":"Zhmystic_","can_delete":false,"product_type":"c1","uid":1373044,"ip_address":"","ucode":"86BC75792EEB5E","user_header":"https://static001.geekbang.org/account/avatar/00/14/f3/74/7cf45a42.jpg","comment_is_top":false,"comment_ctime":1560680052,"is_pvip":false,"discussion_count":1,"race_medal":0,"score":"1560680052","product_id":100020801,"comment_content":"老师，每一张表是好几个B+树，这个如何理解？","like_count":0,"discussions":[{"author":{"id":1164531,"avatar":"https://static001.geekbang.org/account/avatar/00/11/c4/f3/92f654f1.jpg","nickname":"Bug? Feature!","note":"","ucode":"F8FA8A0094FBA0","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":49771,"discussion_content":"你好，有几个索引，就有几棵树！","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1573634383,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":102671,"user_name":"0273522","can_delete":false,"product_type":"c1","uid":1163383,"ip_address":"","ucode":"B04365B8FC27AD","user_header":"https://static001.geekbang.org/account/avatar/00/11/c0/77/d05c6abd.jpg","comment_is_top":false,"comment_ctime":1560295223,"is_pvip":false,"replies":[{"id":"37380","content":"需要回表，是因为使用的索引上的信息不够，需要到主键索引上去取数据","user_name":"作者回复","user_name_real":"林晓斌","uid":"1264162","ctime":1560422223,"ip_address":"","comment_id":102671,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1560295223","product_id":100020801,"comment_content":"老师您好，为什么一定有一个回表过程。因为保存了主键数据量小吗？","like_count":0,"discussions":[{"author":{"id":1264162,"avatar":"https://static001.geekbang.org/account/avatar/00/13/4a/22/2681d602.jpg","nickname":"林晓斌","note":"","ucode":"CDE42D44F26240","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":453525,"discussion_content":"需要回表，是因为使用的索引上的信息不够，需要到主键索引上去取数据","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1560422223,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":102520,"user_name":"热心市民小侯","can_delete":false,"product_type":"c1","uid":1347767,"ip_address":"","ucode":"0F7D64B5F7193B","user_header":"https://static001.geekbang.org/account/avatar/00/14/90/b7/711aa6f9.jpg","comment_is_top":false,"comment_ctime":1560242163,"is_pvip":false,"replies":[{"id":"37382","content":"非常正确","user_name":"作者回复","user_name_real":"林晓斌","uid":"1264162","ctime":1560422282,"ip_address":"","comment_id":102520,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1560242163","product_id":100020801,"comment_content":"老师，我回顾这篇文章的时候突然相到一个问题：如果没有主键索引，那么普通索引它的叶子节点存的是怎样的数据呢？<br>我通过搜索了解到，如果没有主键，mysql会建立一个隐藏的主键，那么我猜测上面这个问题的答案，就是普通索引叶子节点存储的就是这个隐藏的主键，不知道对不对呢？","like_count":0,"discussions":[{"author":{"id":1264162,"avatar":"https://static001.geekbang.org/account/avatar/00/13/4a/22/2681d602.jpg","nickname":"林晓斌","note":"","ucode":"CDE42D44F26240","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":453460,"discussion_content":"非常正确","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1560422282,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":102465,"user_name":"Rayjun","can_delete":false,"product_type":"c1","uid":1002514,"ip_address":"","ucode":"61A3D1A3D03569","user_header":"https://static001.geekbang.org/account/avatar/00/0f/4c/12/f0c145d4.jpg","comment_is_top":false,"comment_ctime":1560227054,"is_pvip":true,"replies":[{"id":"37383","content":"方式没有区别","user_name":"作者回复","user_name_real":"林晓斌","uid":"1264162","ctime":1560422383,"ip_address":"","comment_id":102465,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1560227054","product_id":100020801,"comment_content":"主键是 int 类型的与主键是 varchar 类型的表，建索引的方式有区别吗","like_count":0,"discussions":[{"author":{"id":1264162,"avatar":"https://static001.geekbang.org/account/avatar/00/13/4a/22/2681d602.jpg","nickname":"林晓斌","note":"","ucode":"CDE42D44F26240","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":453437,"discussion_content":"方式没有区别","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1560422383,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":101446,"user_name":"大汉_客家族_数据工程_曾院士","can_delete":false,"product_type":"c1","uid":1215758,"ip_address":"","ucode":"AD73C36D617CA1","user_header":"https://static001.geekbang.org/account/avatar/00/12/8d/0e/1f49ade9.jpg","comment_is_top":false,"comment_ctime":1559810545,"is_pvip":false,"replies":[{"id":"36692","content":"合并功能是什么","user_name":"作者回复","user_name_real":"林晓斌","uid":"1264162","ctime":1560003563,"ip_address":"","comment_id":101446,"utype":1}],"discussion_count":2,"race_medal":0,"score":"1559810545","product_id":100020801,"comment_content":"既然MYSQL索引有合并功能，为什么要重建呢？","like_count":0,"discussions":[{"author":{"id":1264162,"avatar":"https://static001.geekbang.org/account/avatar/00/13/4a/22/2681d602.jpg","nickname":"林晓斌","note":"","ucode":"CDE42D44F26240","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":452966,"discussion_content":"合并功能是什么","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1560003563,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1065351,"avatar":"https://static001.geekbang.org/account/avatar/00/10/41/87/d26efb2e.jpg","nickname":"SuperSnow","note":"","ucode":"84C89AA8083E6A","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":132125,"discussion_content":"合并的话有可能也涉及空间利用率的情况，重建的话就将利用率最大化了。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1578882900,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":101120,"user_name":"那一夜","can_delete":false,"product_type":"c1","uid":1127542,"ip_address":"","ucode":"AA3C750FF0D744","user_header":"https://static001.geekbang.org/account/avatar/00/11/34/76/d81137fe.jpg","comment_is_top":false,"comment_ctime":1559721049,"is_pvip":false,"discussion_count":1,"race_medal":0,"score":"1559721049","product_id":100020801,"comment_content":"老师你好，二级索引对应B+树的叶子结点的数据页大小是16k左右，那每个数据页能够保存多少条数据除了主键的大小之外，是不是还取决于建立该索引那个字段类型的大小？","like_count":0,"discussions":[{"author":{"id":1065351,"avatar":"https://static001.geekbang.org/account/avatar/00/10/41/87/d26efb2e.jpg","nickname":"SuperSnow","note":"","ucode":"84C89AA8083E6A","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":132127,"discussion_content":"是的。严格来说取决于类型字节长度吧。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1578882955,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":100096,"user_name":"二蛋","can_delete":false,"product_type":"c1","uid":1239583,"ip_address":"","ucode":"6289A6399FF096","user_header":"https://static001.geekbang.org/account/avatar/00/12/ea/1f/23029bdb.jpg","comment_is_top":false,"comment_ctime":1559443458,"is_pvip":false,"discussion_count":2,"race_medal":0,"score":"1559443458","product_id":100020801,"comment_content":"非主键索引的叶子节点内容是主键的值。？这句话不理解啊，非主键索性就与主键没有关系了吧","like_count":0,"discussions":[{"author":{"id":1044546,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/f0/42/7728d4f5.jpg","nickname":"艿艿","note":"","ucode":"8F727AB7A7F6B2","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":28737,"discussion_content":"叶子节点是主键，然后在回表查呀。\n\n哈哈哈，碰到二蛋了。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1570710459,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":1,"child_discussions":[{"author":{"id":1239583,"avatar":"https://static001.geekbang.org/account/avatar/00/12/ea/1f/23029bdb.jpg","nickname":"二蛋","note":"","ucode":"6289A6399FF096","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1044546,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/f0/42/7728d4f5.jpg","nickname":"艿艿","note":"","ucode":"8F727AB7A7F6B2","race_medal":0,"user_type":1,"is_pvip":true},"discussion":{"id":379261,"discussion_content":"😂️","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1623787163,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":28737,"ip_address":""},"score":379261,"extra":""}]}]},{"had_liked":false,"id":99907,"user_name":"　　","can_delete":false,"product_type":"c1","uid":1560563,"ip_address":"","ucode":"0D736D44A24C56","user_header":"https://static001.geekbang.org/account/avatar/00/17/cf/f3/48fc6781.jpg","comment_is_top":false,"comment_ctime":1559356524,"is_pvip":false,"discussion_count":1,"race_medal":0,"score":"1559356524","product_id":100020801,"comment_content":"老师，有一个问题想问一下您<br>因为列的宽度比较长 所以我选择了拆成两张表，主表主键是自增，但是由于关联性我的子表不能让主键是自增，所以在部分数据存在主表，却不存在子表中时，如果后期我去维护并将该数据新增在子表里，这个时候是不是子表的查询效率会慢很多呢？","like_count":0,"discussions":[{"author":{"id":1065351,"avatar":"https://static001.geekbang.org/account/avatar/00/10/41/87/d26efb2e.jpg","nickname":"SuperSnow","note":"","ucode":"84C89AA8083E6A","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":132131,"discussion_content":"你可以将子表的主键设置成与主表一样的啊。另外你将部分数据维护在子表里面，这个与查询效率没有必然关系吧。这部分没咋明白。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1578883101,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":98190,"user_name":"大脚一巴掌","can_delete":false,"product_type":"c1","uid":1023995,"ip_address":"","ucode":"635ED93D77DCAF","user_header":"https://static001.geekbang.org/account/avatar/00/0f/9f/fb/80da4ddf.jpg","comment_is_top":false,"comment_ctime":1558927808,"is_pvip":false,"discussion_count":1,"race_medal":0,"score":"1558927808","product_id":100020801,"comment_content":"我理解删除二级索引应该不会有问题吧 但删除主键索引会导致其他二级索引失效？更新？如果数据量大应该不能简单执行这种语句吧？老板给个答案","like_count":0,"discussions":[{"author":{"id":1065351,"avatar":"https://static001.geekbang.org/account/avatar/00/10/41/87/d26efb2e.jpg","nickname":"SuperSnow","note":"","ucode":"84C89AA8083E6A","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":132133,"discussion_content":"是的。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1578883124,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":98071,"user_name":"Geek_d2b8db","can_delete":false,"product_type":"c1","uid":1289089,"ip_address":"","ucode":"C618EC5A15E39A","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTIzmgiap6rhW6ibqaVsJJbnZtIAJmuObZwxgqsHHR7gApzjKtZRADA26bGYcjjKdwecKkbDsibQ9SLxw/132","comment_is_top":false,"comment_ctime":1558889309,"is_pvip":false,"discussion_count":1,"race_medal":0,"score":"1558889309","product_id":100020801,"comment_content":"老师，select * from user和select id,name...等所有字段 from user 有什么区别吗？","like_count":0,"discussions":[{"author":{"id":1065351,"avatar":"https://static001.geekbang.org/account/avatar/00/10/41/87/d26efb2e.jpg","nickname":"SuperSnow","note":"","ucode":"84C89AA8083E6A","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":132134,"discussion_content":"个人理解没啥区别","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1578883145,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":97838,"user_name":"Aaron","can_delete":false,"product_type":"c1","uid":1066251,"ip_address":"","ucode":"B0C504A76297C7","user_header":"https://thirdwx.qlogo.cn/mmopen/vi_32/0Qp9pxHBvgdZAveKzsvUFFUicCJfe7ONzhC7jSNFQDNFvg0jRMXuqqZOdxG1qKosylUYrpIHUR2Q76w5m4HtVkg/132","comment_is_top":false,"comment_ctime":1558791508,"is_pvip":true,"discussion_count":1,"race_medal":0,"score":"1558791508","product_id":100020801,"comment_content":"如果一张表没有建任何索引，那么数据结构是什么样的？","like_count":0,"discussions":[{"author":{"id":1065351,"avatar":"https://static001.geekbang.org/account/avatar/00/10/41/87/d26efb2e.jpg","nickname":"SuperSnow","note":"","ucode":"84C89AA8083E6A","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":132135,"discussion_content":"会有一个默认主键row id","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1578883162,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":97516,"user_name":"xtz","can_delete":false,"product_type":"c1","uid":1164821,"ip_address":"","ucode":"778F15511805A3","user_header":"https://static001.geekbang.org/account/avatar/00/11/c6/15/7dbeec49.jpg","comment_is_top":false,"comment_ctime":1558687137,"is_pvip":false,"replies":[{"id":"34892","content":"innodb会自己创建一个主键出来","user_name":"作者回复","user_name_real":"林晓斌","uid":"1264162","ctime":1558708607,"ip_address":"","comment_id":97516,"utype":1}],"discussion_count":2,"race_medal":0,"score":"1558687137","product_id":100020801,"comment_content":"老师问个问题，假设一张表里没有主键，那么索引结构是什么样子的","like_count":0,"discussions":[{"author":{"id":1264162,"avatar":"https://static001.geekbang.org/account/avatar/00/13/4a/22/2681d602.jpg","nickname":"林晓斌","note":"","ucode":"CDE42D44F26240","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":451308,"discussion_content":"innodb会自己创建一个主键出来","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1558708607,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1010160,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/69/f0/714c2f83.jpg","nickname":"salmonl","note":"","ucode":"0F85E5AD2C52B2","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":53782,"discussion_content":"同样的问题，不去看看评论在留言么，老师真有耐心","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1574215920,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":97073,"user_name":"池渊","can_delete":false,"product_type":"c1","uid":1473985,"ip_address":"","ucode":"7FDF74531C11E0","user_header":"https://static001.geekbang.org/account/avatar/00/16/7d/c1/b7e69295.jpg","comment_is_top":false,"comment_ctime":1558580707,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1558580707","product_id":100020801,"comment_content":"你心里要有个概念，数据库底层存储的核心就是基于这些数据模型的。每碰到一个新数据库，我们需要先关注它的数据模型，这样才能从理论上分析出这个数据库的适用场景。<br>这句话对于不关心数据库底层实现的我十分受用，也更好的理解为什么在建表选择搜索引擎，而不是建库时选择。","like_count":0},{"had_liked":false,"id":95520,"user_name":"探索无止境","can_delete":false,"product_type":"c1","uid":1044178,"ip_address":"","ucode":"91D2A9907DFA79","user_header":"https://static001.geekbang.org/account/avatar/00/0f/ee/d2/7024431c.jpg","comment_is_top":false,"comment_ctime":1558075059,"is_pvip":false,"discussion_count":1,"race_medal":0,"score":"1558075059","product_id":100020801,"comment_content":"自增主键只是保证了我们的主键索引树不会出现页分裂的情况，但是其他普通索引树，因为不能保证顺序性，所以还是会出现页分裂的情况，这样的理解是否正确？","like_count":0,"discussions":[{"author":{"id":1065351,"avatar":"https://static001.geekbang.org/account/avatar/00/10/41/87/d26efb2e.jpg","nickname":"SuperSnow","note":"","ucode":"84C89AA8083E6A","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":132137,"discussion_content":"我是这么理解的。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1578883219,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":94265,"user_name":"do it","can_delete":false,"product_type":"c1","uid":1309911,"ip_address":"","ucode":"E0753912E8F2AF","user_header":"https://static001.geekbang.org/account/avatar/00/13/fc/d7/b102034a.jpg","comment_is_top":false,"comment_ctime":1557756645,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1557756645","product_id":100020801,"comment_content":"个人小结<br>索引作用:提高数据查询效率。<br>常见索引模型:哈希表，有序数组，搜索树。<br>1、哈希表:键-值(key-value)<br>     思路:把值放在数组中，用一个哈希函数把key换算成一个确定的位置，然后把value放在数组的这个位置。<br>     存在问题:哈希冲突问题。<br>      解决办法:链表法、二次哈希<br>使用场景:适用于等值查询。比如memcached和一些NOSQL引擎。<br>2、有序数组<br>适用场景:等值查询O(㏒n)和范围查询。只适合于静态存储引擎。<br>缺点:插入、删除需要挪动太多数据，成本太高。<br>3、二叉搜索树:左节点的值小于父节点，父节点的值小于右节点。<br>查询复杂度:O(㏒n)<br>更新复杂度:O(㏒n)<br>InoDB索引模型:B+树<br>B+树能够很好的配合磁盘的读写性能，减少单次查询的磁盘访问次数。<br>索引类型:主键索引(聚簇索引 clustered index)，非主键索引(二级索引 secondary index)。<br>主键索引的叶子节点存储的整行数据。<br>基于主键索引和非主键索引的查询有什么区别？<br>   主键查询只需搜索主键这棵树。<br>   普通索引K需要先搜索K索引树，获取到主键ID，再到主键索引树中搜索一次。这个过程称为回表。<br>索引维护:页分裂、页合并。<br><br>思考题:<br>Alter table T drop index k；<br>Alter table T add index k；<br>删除、新建普通索引，不会对其他索引产生影响。<br><br>Alter table T drop primary key；<br>alter table T add primary key(id)；<br>删除、新建主键索引会导致普通索引都失效，性能影响大。","like_count":0},{"had_liked":false,"id":94171,"user_name":"冥王星","can_delete":false,"product_type":"c1","uid":1311603,"ip_address":"","ucode":"CA43C381A69736","user_header":"https://static001.geekbang.org/account/avatar/00/14/03/73/38397da1.jpg","comment_is_top":false,"comment_ctime":1557737003,"is_pvip":false,"discussion_count":1,"race_medal":0,"score":"1557737003","product_id":100020801,"comment_content":"既然InnoDB引擎之中的索引是使用B+树组织的，那么普通数据的组织不是使用B+树组织的么，还是说是按照写入时间排列的？<br><br>另外，这里的介绍并没有说明回表的原因，那么为什么要回表呢？<br><br>另外文章中说的使用自增列整型可以避免索引树叶子的分裂，这是因为业务逻辑主键和其索引的位置映射关系不是线性导致的，有没有使用一种新型的业务逻辑主键和索引树位置的线性映射关系从而即使使用业务逻辑列作为主键也不会造成索引树叶子的分裂呢？","like_count":0,"discussions":[{"author":{"id":1065351,"avatar":"https://static001.geekbang.org/account/avatar/00/10/41/87/d26efb2e.jpg","nickname":"SuperSnow","note":"","ucode":"84C89AA8083E6A","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":132140,"discussion_content":"1、普通数据也应该是按照B+树组织的。\n2、回表是因为索引没办法将整行数据都当成索引吧，回表是通过主键查询你想查的数据，索引的目的是为了快速定位。\n3、你想的比较好，但是业务列当主键很难达成类似主键自增这种情况的，现实场景很难落地实操。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1578883361,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":92342,"user_name":"Geek_c1ecc4","can_delete":false,"product_type":"c1","uid":1514497,"ip_address":"","ucode":"63F746501F9AF8","user_header":"https://wx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTKRRuYEVOviabfV8l0CwczJLic2nvE3icHEaKSheicvKfstEEsa3SB2eVkejAPtXTWgOyLf02Ol3K4xaA/132","comment_is_top":false,"comment_ctime":1557237259,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1557237259","product_id":100020801,"comment_content":"@高枕<br>我来回答这个问题<br>你可以想象一下一棵 100 万节点的平衡二叉树，树高 20。一次查询可能需要访问 20 个数据块。<br><br>这里有点不理解，为什么树高20就是20个数据块？<br><br><br>每个叶子结点就是一个块，每个块包含两个数据，块之间通过链式方式链接。树高20的话，就要遍历20个块<br><br>每个叶子节点就是一个块，还是每个非叶子节点就是一个块，感觉是后者呢？这个地方不是很明白，请多多指教，谢谢。","like_count":0},{"had_liked":false,"id":91936,"user_name":"锦","can_delete":false,"product_type":"c1","uid":1468298,"ip_address":"","ucode":"CB0EB4B68C468B","user_header":"https://static001.geekbang.org/account/avatar/00/16/67/8a/babd74dc.jpg","comment_is_top":false,"comment_ctime":1557139467,"is_pvip":false,"discussion_count":1,"race_medal":0,"score":"1557139467","product_id":100020801,"comment_content":"N叉树的N取决于数据块的大小，可以通过控制数据块大小调整N，可以从Key的大小计算，Key越小，二级索引越小，存储空间越小，数据块大小相同的情况下，则N越小<br><br>那么问题来了，N越大越好还是越小越好呢？","like_count":0,"discussions":[{"author":{"id":1065351,"avatar":"https://static001.geekbang.org/account/avatar/00/10/41/87/d26efb2e.jpg","nickname":"SuperSnow","note":"","ucode":"84C89AA8083E6A","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":132141,"discussion_content":"N越大越好，这样可以减少I/O次数。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1578883413,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":91477,"user_name":"复兴","can_delete":false,"product_type":"c1","uid":1363230,"ip_address":"","ucode":"C172A87873001A","user_header":"https://static001.geekbang.org/account/avatar/00/14/cd/1e/692c3313.jpg","comment_is_top":false,"comment_ctime":1557042430,"is_pvip":false,"discussion_count":1,"race_medal":0,"score":"1557042430","product_id":100020801,"comment_content":"索引是按照字段的值大小维护成相应的btree结构，上面举得例子中id和k都是整型，很方便依据其大小维护成树结构，那么问题在于如果是字符串类型的字段，如上面的name字段，在name上建立索引，索引树怎么创建维护呢？","like_count":0,"discussions":[{"author":{"id":1065351,"avatar":"https://static001.geekbang.org/account/avatar/00/10/41/87/d26efb2e.jpg","nickname":"SuperSnow","note":"","ucode":"84C89AA8083E6A","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":132144,"discussion_content":"也应该是按照B+树的策略，只不过需要某种计算规则来计算字符串，这个规则是什么不是很清楚。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1578883497,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":90536,"user_name":"do it","can_delete":false,"product_type":"c1","uid":1309911,"ip_address":"","ucode":"E0753912E8F2AF","user_header":"https://static001.geekbang.org/account/avatar/00/13/fc/d7/b102034a.jpg","comment_is_top":false,"comment_ctime":1556549994,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1556549994","product_id":100020801,"comment_content":"个人小结<br>索引作用：提高数据查询效率。<br>索引数据结构：哈希表、有序数组、二叉树<br>哈希表：key-value 通过哈希函数把key映射为数组的下标。哈希函数存在哈希冲突问题，那么怎么解决呢？1.链表法<br>           特征：存储后的数据无序<br>           适用场景：等值查询<br>有序数组：<br>            特征：存储的数据有序，查找效率以二分法查找为例 O(logN)，所存在动态更新数据问题则不适用，因为需做大量的迁移操作<br>            适用场景：等值查询、范围查询、静态数据类型(例如：往年的数据信息，这种不会再更新的数据)<br>二叉搜索树：左节点小于父节点，父节点小于右节点；查询效率为O(logN)<br>            适用场景：等值查询，范围查询<br>            缺点：由于数据需要写入磁盘，二叉的话存在层级过深问题，导致访问数据需要多次访问磁盘，降低访问效率<br>           解决方法：采用N叉树<br><br>Mysql inodb 索引结构 B+树。<br>主键索引(聚簇索引)、二级索引。<br>主键索引的值是整行的数据，二级索引对应的值是主键索引的ID，也就是说通过二级索引查询的话需要先通过二级索引找到主键索引 ID，再拿着ID到主键索引中查找到对应的数据。<br>主键索引创建：PRIMARY KEY AUTO_INCREMENT<br>思考题<br>移除主键索引会导致所有的二级索引都重建；<br>移除二级索引的话不会影响其他的索引，影响相对较小","like_count":0},{"had_liked":false,"id":90191,"user_name":"退役的球童","can_delete":false,"product_type":"c1","uid":1196234,"ip_address":"","ucode":"CD5157830D9606","user_header":"https://static001.geekbang.org/account/avatar/00/12/40/ca/1313a90b.jpg","comment_is_top":false,"comment_ctime":1556444940,"is_pvip":false,"discussion_count":1,"race_medal":0,"score":"1556444940","product_id":100020801,"comment_content":"其实最开始我也不是很明白为什么顺序递增不会导致分裂？直到我看到了分裂后的数据存储示意图。假设分裂阈值为2，假设现节点中已经存储了如下值【1、2】。这个时候来了一个3，追加后的存储示意图为【1，2】【3】；分裂后的存储示意图为【1】【2,3】。分裂涉及50&#47;50的原则，所以会说有空间利用率的问题。","like_count":0,"discussions":[{"author":{"id":1397631,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTKVUskibDnhMt5MCIJ8227HWkeg2wEEyewps8GuWhWaY5fy7Ya56bu2ktMlxdla3K29Wqia9efCkWaQ/132","nickname":"衬衫的价格是19美元","note":"","ucode":"655F925451F772","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":1276,"discussion_content":"追加不会改变原来已经存储的数据，分裂会导致已经存储数据位置发生改变，是吗？","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1562495533,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":89086,"user_name":"dayBlade","can_delete":false,"product_type":"c1","uid":1510022,"ip_address":"","ucode":"955A31A93EB02F","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTLVLGcUR9ibnyvzKcQ1eG8rf7d95fh3uUNO8cXxkeL8CUyDwssfXNbHdicAuicrcmeDXpreVNYibQuGGQ/132","comment_is_top":false,"comment_ctime":1556074248,"is_pvip":false,"discussion_count":1,"race_medal":0,"score":"1556074248","product_id":100020801,"comment_content":"那我要是只有普通索引，没有主键索引，树里对应value放的是什么？整条数据吗？这时候怎么找？","like_count":0,"discussions":[{"author":{"id":1065351,"avatar":"https://static001.geekbang.org/account/avatar/00/10/41/87/d26efb2e.jpg","nickname":"SuperSnow","note":"","ucode":"84C89AA8083E6A","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":132145,"discussion_content":"没有主键索引，innodb会自动产生默认row id主键","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1578883540,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":88942,"user_name":"jacy","can_delete":false,"product_type":"c1","uid":1103456,"ip_address":"","ucode":"0022A8759DDCE6","user_header":"https://static001.geekbang.org/account/avatar/00/10/d6/60/f21b2164.jpg","comment_is_top":false,"comment_ctime":1556030294,"is_pvip":false,"discussion_count":1,"race_medal":1,"score":"1556030294","product_id":100020801,"comment_content":"有个疑问，辅索引为什么用b+树而不用b呢？","like_count":0,"discussions":[{"author":{"id":1065351,"avatar":"https://static001.geekbang.org/account/avatar/00/10/41/87/d26efb2e.jpg","nickname":"SuperSnow","note":"","ucode":"84C89AA8083E6A","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":132146,"discussion_content":"因为B+树是N叉树的一种实现，而N叉树对于innodb引擎来说更合适，主要是减少了I/O的访问数据块的次数。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1578883627,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":87187,"user_name":"拯救地球好累","can_delete":false,"product_type":"c1","uid":1339022,"ip_address":"","ucode":"7643439601EF4C","user_header":"https://static001.geekbang.org/account/avatar/00/14/6e/8e/5d309a85.jpg","comment_is_top":false,"comment_ctime":1555546620,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1555546620","product_id":100020801,"comment_content":"从长事务排查中看数据库排查中常用的手段:<br>1.数据库日志，包括general_log，error_log等。<br>2.数据库元信息表和运行时自带的某些监控表，其中会包含数据库事务，锁等信息。<br>3.数据库参数设置，成熟的数据库往往会对各种概念和场景设置大量可配参数。<br>4.业务代码审查","like_count":0},{"had_liked":false,"id":87182,"user_name":"拯救地球好累","can_delete":false,"product_type":"c1","uid":1339022,"ip_address":"","ucode":"7643439601EF4C","user_header":"https://static001.geekbang.org/account/avatar/00/14/6e/8e/5d309a85.jpg","comment_is_top":false,"comment_ctime":1555546283,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1555546283","product_id":100020801,"comment_content":"阅读完后应当能回答的问题:<br>1.索引的数据结构有哪些？数据库中索引的数据结构有哪些？各自的优点和缺点是什么？<br>2.一级索引和二级索引的概念？聚簇索引？<br>3.通常建议将业务无关的自增id作为主键，为什么？","like_count":0},{"had_liked":false,"id":86225,"user_name":"everyok22","can_delete":false,"product_type":"c1","uid":1213878,"ip_address":"","ucode":"3A3304CCDC5C5C","user_header":"","comment_is_top":false,"comment_ctime":1555327858,"is_pvip":false,"discussion_count":1,"race_medal":0,"score":"1555327858","product_id":100020801,"comment_content":"那等值查询哈希索引和数组索引哪个效率更高呢？","like_count":0,"discussions":[{"author":{"id":1065351,"avatar":"https://static001.geekbang.org/account/avatar/00/10/41/87/d26efb2e.jpg","nickname":"SuperSnow","note":"","ucode":"84C89AA8083E6A","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":132151,"discussion_content":"看使用场景","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1578884019,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":85200,"user_name":"caryr","can_delete":false,"product_type":"c1","uid":1480634,"ip_address":"","ucode":"9710A1F38F5133","user_header":"https://static001.geekbang.org/account/avatar/00/16/97/ba/b5b56c25.jpg","comment_is_top":false,"comment_ctime":1555000126,"is_pvip":false,"discussion_count":1,"race_medal":0,"score":"1555000126","product_id":100020801,"comment_content":"老师您好，有两个困惑，有空可以解答下吗？<br>1. N叉树，这个 N 差不多是 1200。1200怎么来的呀？   <br>2.如果新插入的主键 ID 值在页的中间，为什么需要逻辑上挪动后面的数据呀？不是没有满页有空位吗？页的内部存储逻辑是怎么样的呀？","like_count":0,"discussions":[{"author":{"id":1065351,"avatar":"https://static001.geekbang.org/account/avatar/00/10/41/87/d26efb2e.jpg","nickname":"SuperSnow","note":"","ucode":"84C89AA8083E6A","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":132154,"discussion_content":"1、可上翻评论。\n2、因为B+树也得遵循左小右大的规则吧，所以要挪后面的数据。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1578884079,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":84557,"user_name":"仔仔","can_delete":false,"product_type":"c1","uid":1477894,"ip_address":"","ucode":"38279D39F3252F","user_header":"https://static001.geekbang.org/account/avatar/00/16/8d/06/b4427636.jpg","comment_is_top":false,"comment_ctime":1554875592,"is_pvip":false,"discussion_count":1,"race_medal":0,"score":"1554875592","product_id":100020801,"comment_content":"对于小结的两种重建索引的形式，在数据量小的情况下问题应该都不大，但是在百万级别的数据情况下，索引重建和增加太慢，而且会锁表导致对该表的访问都被等待，不知道有没有特别的办法来解决？","like_count":0,"discussions":[{"author":{"id":1065351,"avatar":"https://static001.geekbang.org/account/avatar/00/10/41/87/d26efb2e.jpg","nickname":"SuperSnow","note":"","ucode":"84C89AA8083E6A","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":132156,"discussion_content":"alter table T engine=InnoDB","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1578884107,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":83852,"user_name":"理想","can_delete":false,"product_type":"c1","uid":1487915,"ip_address":"","ucode":"91F7134D735FF3","user_header":"https://static001.geekbang.org/account/avatar/00/16/b4/2b/54f33c3a.jpg","comment_is_top":false,"comment_ctime":1554724608,"is_pvip":false,"discussion_count":2,"race_medal":0,"score":"1554724608","product_id":100020801,"comment_content":"哎，我是初学者，都懵得很<br>假如，我有个商品档案，款号是唯一的，是建立一个自增主键好，还是用款号作为主键好？","like_count":0,"discussions":[{"author":{"id":1076067,"avatar":"https://static001.geekbang.org/account/avatar/00/10/6b/63/2cf06074.jpg","nickname":"水梦年华","note":"","ucode":"4BD7951D51DDCE","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":225472,"discussion_content":"这个如果款号是数字类型的话，我觉得用款号做为主键也是可以的","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1586359691,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1065351,"avatar":"https://static001.geekbang.org/account/avatar/00/10/41/87/d26efb2e.jpg","nickname":"SuperSnow","note":"","ucode":"84C89AA8083E6A","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":132157,"discussion_content":"不用想，当然是自增主键了。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1578884125,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":82805,"user_name":"渡劫达摩","can_delete":false,"product_type":"c1","uid":1465391,"ip_address":"","ucode":"A7005CBB34B698","user_header":"https://static001.geekbang.org/account/avatar/00/16/5c/2f/a9c8d42f.jpg","comment_is_top":false,"comment_ctime":1554327645,"is_pvip":false,"replies":[{"id":"30014","content":"如果是用innodb&#47;tokudb就不会<br>看下08篇，说的就是这个","user_name":"作者回复","user_name_real":"林晓斌","uid":"1264162","ctime":1554431976,"ip_address":"","comment_id":82805,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1554327645","product_id":100020801,"comment_content":"老师，有个问题困扰我很久了。譬如我要统计一个表里num列的总数(sum函数)，可能统计过程需要60秒，然后我在第30秒的时候改了表其中一行的数据，那么在60秒后统计到的数据总数会不会被这个更新操作所影响(是不是只有在只有可重复读模式，且开启事务时不会有影响)。","like_count":0,"discussions":[{"author":{"id":1264162,"avatar":"https://static001.geekbang.org/account/avatar/00/13/4a/22/2681d602.jpg","nickname":"林晓斌","note":"","ucode":"CDE42D44F26240","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":445729,"discussion_content":"如果是用innodb/tokudb就不会\n看下08篇，说的就是这个","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1554431976,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":82155,"user_name":"Bing","can_delete":false,"product_type":"c1","uid":1070258,"ip_address":"","ucode":"E9F46630FB1F3A","user_header":"https://static001.geekbang.org/account/avatar/00/10/54/b2/8811d29f.jpg","comment_is_top":false,"comment_ctime":1554131735,"is_pvip":false,"replies":[{"id":"30168","content":"是<br>会","user_name":"作者回复","user_name_real":"林晓斌","uid":"1264162","ctime":1554626067,"ip_address":"","comment_id":82155,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1554131735","product_id":100020801,"comment_content":"主键索引的叶子节点的值，是该行所有数据的值?如果行数比较多，会不会很大？","like_count":0,"discussions":[{"author":{"id":1264162,"avatar":"https://static001.geekbang.org/account/avatar/00/13/4a/22/2681d602.jpg","nickname":"林晓斌","note":"","ucode":"CDE42D44F26240","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":445492,"discussion_content":"是\n会","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1554626067,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":82066,"user_name":"George","can_delete":false,"product_type":"c1","uid":1103468,"ip_address":"","ucode":"6BD24945AC8253","user_header":"https://static001.geekbang.org/account/avatar/00/10/d6/6c/874ca8ad.jpg","comment_is_top":false,"comment_ctime":1554113463,"is_pvip":false,"replies":[{"id":"30016","content":"没问题呀","user_name":"作者回复","user_name_real":"林晓斌","uid":"1264162","ctime":1554432258,"ip_address":"","comment_id":82066,"utype":1}],"discussion_count":2,"race_medal":0,"score":"1554113463","product_id":100020801,"comment_content":"每一个索引在 InnoDB 里面对应一棵 B+ 树。<br><br>这句话有问题吧？","like_count":0,"discussions":[{"author":{"id":1264162,"avatar":"https://static001.geekbang.org/account/avatar/00/13/4a/22/2681d602.jpg","nickname":"林晓斌","note":"","ucode":"CDE42D44F26240","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":445455,"discussion_content":"没问题呀","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1554432258,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1164531,"avatar":"https://static001.geekbang.org/account/avatar/00/11/c4/f3/92f654f1.jpg","nickname":"Bug? Feature!","note":"","ucode":"F8FA8A0094FBA0","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":49772,"discussion_content":"有几个索引，就有几棵树","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1573634482,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":81766,"user_name":"Geek_603e81","can_delete":false,"product_type":"c1","uid":1338668,"ip_address":"","ucode":"FA9ECB1E6D707B","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTJerY3WgO21tR7ZTREl99rqII9YNIe2lAkTa53EL1UL4zOgId6o9FOnqLYERwania0m4pyslfkfeug/132","comment_is_top":false,"comment_ctime":1554029957,"is_pvip":false,"discussion_count":2,"race_medal":0,"score":"1554029957","product_id":100020801,"comment_content":"自增id和time时间两个一起做主键会怎样呢？  PRIMARY KEY (`id`,`time`)","like_count":0,"discussions":[{"author":{"id":1182004,"avatar":"https://static001.geekbang.org/account/avatar/00/12/09/34/1c81cf7c.jpg","nickname":"chowhuijie","note":"","ucode":"CCA69DE065370C","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":556576,"discussion_content":"高手","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1647420988,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1065351,"avatar":"https://static001.geekbang.org/account/avatar/00/10/41/87/d26efb2e.jpg","nickname":"SuperSnow","note":"","ucode":"84C89AA8083E6A","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":132162,"discussion_content":"那就是鸡肋了。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1578884334,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":81612,"user_name":"伟伟","can_delete":false,"product_type":"c1","uid":1348578,"ip_address":"","ucode":"FBF362BE78C4FD","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTI34ZlT6HSOtN2lqgTumX0piaB1v4d0ibDsuOebHBtpctXHtSdDFessicxok76ojxk6j0SVv1Rz2dQFg/132","comment_is_top":false,"comment_ctime":1553962231,"is_pvip":false,"discussion_count":1,"race_medal":0,"score":"1553962231","product_id":100020801,"comment_content":"老师，二叉树索引那张图看不懂，userA、B、C跟user1、2、3是什么联系啊？是怎么查找到user2的记录啊？","like_count":0,"discussions":[{"author":{"id":1065351,"avatar":"https://static001.geekbang.org/account/avatar/00/10/41/87/d26efb2e.jpg","nickname":"SuperSnow","note":"","ucode":"84C89AA8083E6A","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":132165,"discussion_content":"应该是数据对比，然后指向相应的下级页。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1578884388,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":81240,"user_name":"Nash","can_delete":false,"product_type":"c1","uid":1239904,"ip_address":"","ucode":"E634E1A53F526F","user_header":"https://static001.geekbang.org/account/avatar/00/12/eb/60/598942dd.jpg","comment_is_top":false,"comment_ctime":1553840349,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1553840349","product_id":100020801,"comment_content":"1.索引的常见模型<br>  （1）比较常见的有三种：哈希表、有序数组和搜索树<br>  （2）在 MySQL 中，索引是在存储引擎层实现的，所以并没有统一的索引标准，即不同存储引擎的索引的工作方式并不一样。而即使多个存储引擎支持同一种类型的索引，其底层的实现也可能不同。<br>2.InnoDB 的索引模型<br>  （1）在 InnoDB 中，表都是根据主键顺序以索引的形式存放的，这种存储方式的表称为索引组织表。每一个索引在 InnoDB 里面对应一棵 B+ 树。<br>  （2）根据叶子节点的内容，索引类型分为主键索引和非主键索引。<br>        主键索引的叶子节点存的是整行数据。在 InnoDB 里，主键索引也被称为聚簇索引（clustered index）。<br>        非主键索引的叶子节点内容是主键的值。在 InnoDB 里，非主键索引也被称为二级索引（secondary index）。<br>  （3）基于主键索引和普通索引的查询有什么区别？<br>        -&gt;如果语句是 select * from T where ID=500，即主键查询方式，则只需要搜索 ID 这棵 B+ 树;<br>        -&gt;如果语句是 select * from T where k=5，即普通索引查询方式，则需要先搜索 k 索引树，得到 ID的值为 500，再到 ID 索引树搜索一次。这个过程称为回表。<br>      也就是说，基于非主键索引的查询需要多扫描一棵索引树。因此，我们在应用中应该尽量使用主键查询。<br>3.索引维护<br>  （1）数据页分裂与合并产生的场景<br>  （2）‘设置自增主键’和‘使用主键查询’的好处","like_count":0},{"had_liked":false,"id":80890,"user_name":"天下行走","can_delete":false,"product_type":"c1","uid":1462449,"ip_address":"","ucode":"73A4CD8BB91235","user_header":"https://wx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTLfrbMvhKQYhxP6ziaHaj4KUNRzst8u7BZsWUsazK8oTLXcNH6sDGITl6icy3IiaGFe9Iiae12LuTrF1g/132","comment_is_top":false,"comment_ctime":1553750596,"is_pvip":false,"replies":[{"id":"29645","content":"对的","user_name":"作者回复","user_name_real":"林晓斌","uid":"1264162","ctime":1554048840,"ip_address":"","comment_id":80890,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1553750596","product_id":100020801,"comment_content":"原来如此，就说思考题中删除primary key后不完蛋吗，每一行都想到在哪了，应该是引擎自己会默认给暂时维护起来","like_count":0,"discussions":[{"author":{"id":1264162,"avatar":"https://static001.geekbang.org/account/avatar/00/13/4a/22/2681d602.jpg","nickname":"林晓斌","note":"","ucode":"CDE42D44F26240","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":445010,"discussion_content":"对的","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1554048840,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":80747,"user_name":"williamcai","can_delete":false,"product_type":"c1","uid":1158294,"ip_address":"","ucode":"B158F52C2D39BC","user_header":"https://static001.geekbang.org/account/avatar/00/11/ac/96/46b13896.jpg","comment_is_top":false,"comment_ctime":1553729765,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1553729765","product_id":100020801,"comment_content":"某页索引已经加载到内存，后来该页发生了分裂，该页要重新加载吗","like_count":0},{"had_liked":false,"id":79965,"user_name":"大胖小子","can_delete":false,"product_type":"c1","uid":1302419,"ip_address":"","ucode":"9ED9F3AA0BFC22","user_header":"https://static001.geekbang.org/account/avatar/00/13/df/93/ad66264b.jpg","comment_is_top":false,"comment_ctime":1553585037,"is_pvip":false,"discussion_count":2,"race_medal":0,"score":"1553585037","product_id":100020801,"comment_content":"老师，请教一下。在mysql innodb中，索引树一般多高那？一个节点存储多少是按照一页的大小来定吗？","like_count":0,"discussions":[{"author":{"id":1688939,"avatar":"https://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTLAia6hRmnSZyuLtKvxxXvg9vgUfwSReCOaHKGLKuRcNX2BCNdmCFSlXyBZvpSXia5LXKjAZKeBXKuw/132","nickname":"Geek_guan","note":"","ucode":"592603EB5F042D","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":275606,"discussion_content":"3层的树就可以存储千万级别的数据量了","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1590738866,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1065351,"avatar":"https://static001.geekbang.org/account/avatar/00/10/41/87/d26efb2e.jpg","nickname":"SuperSnow","note":"","ucode":"84C89AA8083E6A","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":132167,"discussion_content":"一般三、四层吧。一个节点存储多少一方面可以修改页的大小，一方面还是主要看Key有多大。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1578884459,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":78429,"user_name":"金十数据","can_delete":false,"product_type":"c1","uid":1390893,"ip_address":"","ucode":"E4BA783F2C8922","user_header":"https://static001.geekbang.org/account/avatar/00/15/39/2d/e367c30b.jpg","comment_is_top":false,"comment_ctime":1553145914,"is_pvip":false,"discussion_count":1,"race_medal":0,"score":"1553145914","product_id":100020801,"comment_content":"非主键索引保存的是主键的值，那这样就是说每个表最好要建立一个主键，那对于那些没有主键的表，非主键索引树保存的又是什么呢？","like_count":0,"discussions":[{"author":{"id":1065351,"avatar":"https://static001.geekbang.org/account/avatar/00/10/41/87/d26efb2e.jpg","nickname":"SuperSnow","note":"","ucode":"84C89AA8083E6A","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":132168,"discussion_content":"row id","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1578884485,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":78037,"user_name":"邵俊达","can_delete":false,"product_type":"c1","uid":1281460,"ip_address":"","ucode":"4B7DACE6DBCF95","user_header":"https://static001.geekbang.org/account/avatar/00/13/8d/b4/ff82483d.jpg","comment_is_top":false,"comment_ctime":1553059988,"is_pvip":false,"replies":[{"id":"28903","content":"是的，理解准确","user_name":"作者回复","user_name_real":"林晓斌","uid":"1264162","ctime":1553415723,"ip_address":"","comment_id":78037,"utype":1}],"discussion_count":2,"race_medal":0,"score":"1553059988","product_id":100020801,"comment_content":"请问，主键索引的叶子节点存的是整行数据，那主键索引的索引表是不是会比非主键索引的索引表大很多？","like_count":0,"discussions":[{"author":{"id":1264162,"avatar":"https://static001.geekbang.org/account/avatar/00/13/4a/22/2681d602.jpg","nickname":"林晓斌","note":"","ucode":"CDE42D44F26240","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":443944,"discussion_content":"是的，理解准确","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1553415723,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1237583,"avatar":"https://static001.geekbang.org/account/avatar/00/12/e2/4f/df01f65e.jpg","nickname":"Danfēng","note":"","ucode":"E5B3451F1D0441","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":280759,"discussion_content":"所以这就是不建议建立多个主键索引的原因？数据量大占用内存","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1591608788,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":77708,"user_name":"不似旧日","can_delete":false,"product_type":"c1","uid":1161271,"ip_address":"","ucode":"DF4C5E3AB9570C","user_header":"https://static001.geekbang.org/account/avatar/00/11/b8/37/98991aeb.jpg","comment_is_top":false,"comment_ctime":1552985594,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1552985594","product_id":100020801,"comment_content":"知识点总结:<br>1、常见的索引模型: 哈希表,树,有序链表<br>2、InnoDB使用了树模型, 每个索引都会产生一个B+树，这个数左边的值小于右边的值(哈希值),<br>3、主键上建的索引称为主键索引又叫做聚簇索引<br>4、其他索引叫做非主键索引也叫做二级索引, 二级索引存放的是主键索引的值<br>","like_count":0},{"had_liked":false,"id":75907,"user_name":"仗剑走天涯","can_delete":false,"product_type":"c1","uid":1135104,"ip_address":"","ucode":"52BB6877BB83DF","user_header":"https://static001.geekbang.org/account/avatar/00/11/52/00/8a3d86d5.jpg","comment_is_top":false,"comment_ctime":1552490197,"is_pvip":false,"discussion_count":1,"race_medal":0,"score":"1552490197","product_id":100020801,"comment_content":"关于树高20就需要访问20个数据块这点还是不能完全理解。我的理解主键索引会对应一课二叉树，树的叶子节点应该是一个指向数据块的指针，评论中有说叶子节点就是一个数据块，包含两个数据，请问是哪两个数据？为什么不是我理解的指向数据块的指针呢？如果这棵树在内存中，每次查找，只在最后的叶子节点上会访问数据块，所以，为什么是20个数据块呢？","like_count":0,"discussions":[{"author":{"id":1397631,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTKVUskibDnhMt5MCIJ8227HWkeg2wEEyewps8GuWhWaY5fy7Ya56bu2ktMlxdla3K29Wqia9efCkWaQ/132","nickname":"衬衫的价格是19美元","note":"","ucode":"655F925451F772","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":1277,"discussion_content":"从根节点到最终的叶子节点需要依次访问中间的节点，不访问中间节点怎么知道下一个节点在哪个位置呢？对二叉树来说，非叶子节点的数据块中的内容就是他的两个子节点的地址","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1562496344,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":75826,"user_name":"9080","can_delete":false,"product_type":"c1","uid":1114072,"ip_address":"","ucode":"D4DFBBC1B8394D","user_header":"https://static001.geekbang.org/account/avatar/00/10/ff/d8/fa77b4eb.jpg","comment_is_top":false,"comment_ctime":1552476665,"is_pvip":false,"discussion_count":1,"race_medal":0,"score":"1552476665","product_id":100020801,"comment_content":"老师好，我有两个问题请教您：<br>1.索引B+树高度是如何控制的，有限制吗？<br>2.叶子结点的数据页之间是双向指针链接还是单向指针？","like_count":0,"discussions":[{"author":{"id":1065351,"avatar":"https://static001.geekbang.org/account/avatar/00/10/41/87/d26efb2e.jpg","nickname":"SuperSnow","note":"","ucode":"84C89AA8083E6A","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":132169,"discussion_content":"1、高度根据N的大小，N越大高度也就越小。\n2、叶子结点之间有指针吗？","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1578884636,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":75628,"user_name":"Lucus","can_delete":false,"product_type":"c1","uid":1198800,"ip_address":"","ucode":"CE8EB70CB9D9F1","user_header":"https://static001.geekbang.org/account/avatar/00/12/4a/d0/d319c44a.jpg","comment_is_top":false,"comment_ctime":1552441634,"is_pvip":false,"replies":[{"id":"27663","content":"是的，各有利弊，这个就是索引组织形式的一个弊","user_name":"作者回复","user_name_real":"林晓斌","uid":"1264162","ctime":1552487167,"ip_address":"","comment_id":75628,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1552441634","product_id":100020801,"comment_content":"感觉这样重建主键不合适，如果drop了主键所有的非主键索引也失效了","like_count":0,"discussions":[{"author":{"id":1264162,"avatar":"https://static001.geekbang.org/account/avatar/00/13/4a/22/2681d602.jpg","nickname":"林晓斌","note":"","ucode":"CDE42D44F26240","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":442964,"discussion_content":"是的，各有利弊，这个就是索引组织形式的一个弊","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1552487167,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":75526,"user_name":"挨踢菜鸟","can_delete":false,"product_type":"c1","uid":1195409,"ip_address":"","ucode":"CC208C8749B228","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTJZuwMDaoJviaf3lZ5BOgAvTzLzmbGrMrCZ22krLSRyxpKUrVicU9pSnWsyuSHjksyNldBpXrRzUqeA/132","comment_is_top":false,"comment_ctime":1552408685,"is_pvip":false,"discussion_count":1,"race_medal":0,"score":"1552408685","product_id":100020801,"comment_content":"老师我还是没有明白100万个节点，树的高度是20，为什么数据块就是20，上面有人说每个叶子节点就是一个数据块，那么叶子节点不是有很多吗，怎么可能是20呢","like_count":0,"discussions":[{"author":{"id":1397631,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTKVUskibDnhMt5MCIJ8227HWkeg2wEEyewps8GuWhWaY5fy7Ya56bu2ktMlxdla3K29Wqia9efCkWaQ/132","nickname":"衬衫的价格是19美元","note":"","ucode":"655F925451F772","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":1281,"discussion_content":"100万个节点，那么就有100万个数据块。但是由于二叉树的结构，最多只需要访问20个节点就能定位","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1562496793,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":75367,"user_name":"Jike_chanpin_shishabi","can_delete":false,"product_type":"c1","uid":1201655,"ip_address":"","ucode":"DBE59491274446","user_header":"https://static001.geekbang.org/account/avatar/00/12/55/f7/af3feb56.jpg","comment_is_top":false,"comment_ctime":1552383689,"is_pvip":false,"discussion_count":1,"race_medal":0,"score":"1552383689","product_id":100020801,"comment_content":"老师，问个问题：文中说“我们在应用中应该尽量使用主键查询”，后边又说“自增主键往往是更合理的选择”。但是实际业务查询中用自增id做where条件的情况很少，这两个应该咋么取舍呢","like_count":0,"discussions":[{"author":{"id":1065351,"avatar":"https://static001.geekbang.org/account/avatar/00/10/41/87/d26efb2e.jpg","nickname":"SuperSnow","note":"","ucode":"84C89AA8083E6A","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":132172,"discussion_content":"实际中除了主页面查询外，其他cud操作，用主键挺多的，还有逻辑判断的时候也挺多。另外，根据业务需求对其他字段适当建立索引。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1578884807,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":74292,"user_name":"李二木","can_delete":false,"product_type":"c1","uid":1103091,"ip_address":"","ucode":"30E03BB84ADB27","user_header":"https://static001.geekbang.org/account/avatar/00/10/d4/f3/129d6dfe.jpg","comment_is_top":false,"comment_ctime":1552182865,"is_pvip":true,"replies":[{"id":"27197","content":"这个理由我感觉不太能说通。<br><br>如果我要乱删数据，还需要用id吗，直接delete ... limit 不就好了😆<br><br>","user_name":"作者回复","user_name_real":"林晓斌","uid":"1264162","ctime":1552229128,"ip_address":"","comment_id":74292,"utype":1}],"discussion_count":3,"race_medal":0,"score":"1552182865","product_id":100020801,"comment_content":"现在公司有个规定，表主键Id值不能是有顺序自增值，也就是比如10001,10002之内数据，原因是出于安全考虑， 解释是假如你通过一个Id去删除数据，你发现Id是有顺序，那么就乱删除其他数据。这样就只有选择UUID了。","like_count":0,"discussions":[{"author":{"id":1264162,"avatar":"https://static001.geekbang.org/account/avatar/00/13/4a/22/2681d602.jpg","nickname":"林晓斌","note":"","ucode":"CDE42D44F26240","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":442513,"discussion_content":"这个理由我感觉不太能说通。\n\n如果我要乱删数据，还需要用id吗，直接delete ... limit 不就好了😆\n\n","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1552229128,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1397315,"avatar":"https://static001.geekbang.org/account/avatar/00/15/52/43/25209d6c.jpg","nickname":"无边丝雨","note":"","ucode":"B2AD1EAB9E9308","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":21065,"discussion_content":"在代码层面id hash呀","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1569419353,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":1,"child_discussions":[{"author":{"id":1065351,"avatar":"https://static001.geekbang.org/account/avatar/00/10/41/87/d26efb2e.jpg","nickname":"SuperSnow","note":"","ucode":"84C89AA8083E6A","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1397315,"avatar":"https://static001.geekbang.org/account/avatar/00/15/52/43/25209d6c.jpg","nickname":"无边丝雨","note":"","ucode":"B2AD1EAB9E9308","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":132173,"discussion_content":"对头。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1578884843,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":21065,"ip_address":""},"score":132173,"extra":""}]}]},{"had_liked":false,"id":73158,"user_name":"Iriving","can_delete":false,"product_type":"c1","uid":1315821,"ip_address":"","ucode":"8166E34EF7F345","user_header":"https://static001.geekbang.org/account/avatar/00/14/13/ed/9355a22d.jpg","comment_is_top":false,"comment_ctime":1551832978,"is_pvip":false,"replies":[{"id":"27091","content":"数据行的（其实是主键索引）","user_name":"作者回复","user_name_real":"林晓斌","uid":"1264162","ctime":1552111895,"ip_address":"","comment_id":73158,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1551832978","product_id":100020801,"comment_content":"索引维护那里，如果r5所在的数据页满了，是指表的数据页还是索引的数据页？","like_count":0,"discussions":[{"author":{"id":1264162,"avatar":"https://static001.geekbang.org/account/avatar/00/13/4a/22/2681d602.jpg","nickname":"林晓斌","note":"","ucode":"CDE42D44F26240","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":441938,"discussion_content":"数据行的（其实是主键索引）","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1552111895,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":72616,"user_name":"洋","can_delete":false,"product_type":"c1","uid":1221187,"ip_address":"","ucode":"4AA54AF947A036","user_header":"https://static001.geekbang.org/account/avatar/00/12/a2/43/ac845f13.jpg","comment_is_top":false,"comment_ctime":1551678748,"is_pvip":false,"replies":[{"id":"26824","content":"你看一个算法，输入是所有字符串，输出是1-2^64，是不是一定存在两个不同的输入对应一个共同的输出？","user_name":"作者回复","user_name_real":"林晓斌","uid":"1264162","ctime":1551939984,"ip_address":"","comment_id":72616,"utype":1}],"discussion_count":2,"race_medal":0,"score":"1551678748","product_id":100020801,"comment_content":"不可避免地，多个 key 值经过哈希函数的换算，会出现同一个值的情况。  这句话没有理解，为什么会出现同一个值","like_count":0,"discussions":[{"author":{"id":1264162,"avatar":"https://static001.geekbang.org/account/avatar/00/13/4a/22/2681d602.jpg","nickname":"林晓斌","note":"","ucode":"CDE42D44F26240","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":441662,"discussion_content":"你看一个算法，输入是所有字符串，输出是1-2^64，是不是一定存在两个不同的输入对应一个共同的输出？","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1551939984,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1065351,"avatar":"https://static001.geekbang.org/account/avatar/00/10/41/87/d26efb2e.jpg","nickname":"SuperSnow","note":"","ucode":"84C89AA8083E6A","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":132175,"discussion_content":"哈哈，有点鸽笼定理。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1578885042,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":70392,"user_name":"洗澡水","can_delete":false,"product_type":"c1","uid":1150808,"ip_address":"","ucode":"D3133D0525C816","user_header":"","comment_is_top":false,"comment_ctime":1551091553,"is_pvip":false,"replies":[{"id":"25107","content":"因为二叉树更高，比如树高如果为20，就可能落在不同的20个数据块上","user_name":"作者回复","user_name_real":"林晓斌","uid":"1264162","ctime":1551092791,"ip_address":"","comment_id":70392,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1551091553","product_id":100020801,"comment_content":"老师，为什么二叉树会访问更多的数据块？","like_count":0,"discussions":[{"author":{"id":1264162,"avatar":"https://static001.geekbang.org/account/avatar/00/13/4a/22/2681d602.jpg","nickname":"林晓斌","note":"","ucode":"CDE42D44F26240","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":440605,"discussion_content":"因为二叉树更高，比如树高如果为20，就可能落在不同的20个数据块上","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1551092791,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":70308,"user_name":"k先生","can_delete":false,"product_type":"c1","uid":1221532,"ip_address":"","ucode":"76D292DC62B52D","user_header":"https://static001.geekbang.org/account/avatar/00/12/a3/9c/8a14b7db.jpg","comment_is_top":false,"comment_ctime":1551069073,"is_pvip":false,"replies":[{"id":"25090","content":"一个索引对应一棵B+树","user_name":"作者回复","user_name_real":"林晓斌","uid":"1264162","ctime":1551073586,"ip_address":"","comment_id":70308,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1551069073","product_id":100020801,"comment_content":"请问老师，看评论区有个疑惑，为什么一张表是多个B+树？","like_count":0,"discussions":[{"author":{"id":1264162,"avatar":"https://static001.geekbang.org/account/avatar/00/13/4a/22/2681d602.jpg","nickname":"林晓斌","note":"","ucode":"CDE42D44F26240","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":440558,"discussion_content":"一个索引对应一棵B+树","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1551073586,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":70230,"user_name":"苍茫","can_delete":false,"product_type":"c1","uid":1299149,"ip_address":"","ucode":"CED8598307BEAE","user_header":"https://static001.geekbang.org/account/avatar/00/13/d2/cd/6fb14677.jpg","comment_is_top":false,"comment_ctime":1551056487,"is_pvip":false,"replies":[{"id":"25038","content":"B+Tree是数据只存在叶子节点，中间节点都只有索引字段","user_name":"作者回复","user_name_real":"林晓斌","uid":"1264162","ctime":1551058107,"ip_address":"","comment_id":70230,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1551056487","product_id":100020801,"comment_content":"老师，请问这个B Tree  B+Tree有什么区别？","like_count":0,"discussions":[{"author":{"id":1264162,"avatar":"https://static001.geekbang.org/account/avatar/00/13/4a/22/2681d602.jpg","nickname":"林晓斌","note":"","ucode":"CDE42D44F26240","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":440502,"discussion_content":"B+Tree是数据只存在叶子节点，中间节点都只有索引字段","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1551058107,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":69724,"user_name":"唯她命","can_delete":false,"product_type":"c1","uid":1240398,"ip_address":"","ucode":"8F687E8D306840","user_header":"https://static001.geekbang.org/account/avatar/00/12/ed/4e/ef406442.jpg","comment_is_top":false,"comment_ctime":1550819109,"is_pvip":false,"replies":[{"id":"24825","content":"你理解的对，这里是示意图哈","user_name":"作者回复","user_name_real":"林晓斌","uid":"1264162","ctime":1550835794,"ip_address":"","comment_id":69724,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1550819109","product_id":100020801,"comment_content":"老师 那个ID索引 的B+树。里面只有name和id  是不是漏了K了，文章里面说主键索引应该 存储整个数据？","like_count":0,"discussions":[{"author":{"id":1264162,"avatar":"https://static001.geekbang.org/account/avatar/00/13/4a/22/2681d602.jpg","nickname":"林晓斌","note":"","ucode":"CDE42D44F26240","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":440245,"discussion_content":"你理解的对，这里是示意图哈","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1550835794,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":68538,"user_name":"天若有情天亦老","can_delete":false,"product_type":"c1","uid":1172029,"ip_address":"","ucode":"57F0B7D524C0CF","user_header":"https://static001.geekbang.org/account/avatar/00/11/e2/3d/9a52946b.jpg","comment_is_top":false,"comment_ctime":1550540212,"is_pvip":false,"discussion_count":1,"race_medal":0,"score":"1550540212","product_id":100020801,"comment_content":"分库分表也不能用自增主键","like_count":0,"discussions":[{"author":{"id":1044546,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/f0/42/7728d4f5.jpg","nickname":"艿艿","note":"","ucode":"8F727AB7A7F6B2","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":28747,"discussion_content":"snowflake 还是自增。或者数据库有个 id_seq 表。或者 redis 一样可以的呀。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1570710675,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":68034,"user_name":"六月有一个人","can_delete":false,"product_type":"c1","uid":1064482,"ip_address":"","ucode":"8671C1228A0CA2","user_header":"https://static001.geekbang.org/account/avatar/00/10/3e/22/51cef415.jpg","comment_is_top":false,"comment_ctime":1550393589,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1550393589","product_id":100020801,"comment_content":"讲的很好","like_count":0},{"had_liked":false,"id":67247,"user_name":"信念","can_delete":false,"product_type":"c1","uid":1133919,"ip_address":"","ucode":"A2F35A4CDD937E","user_header":"https://static001.geekbang.org/account/avatar/00/11/4d/5f/835a9d46.jpg","comment_is_top":false,"comment_ctime":1550114966,"is_pvip":false,"replies":[{"id":"23798","content":"uuid不是持续递增的，中间还是不免会插入到“中间”","user_name":"作者回复","user_name_real":"林晓斌","uid":"1264162","ctime":1550127390,"ip_address":"","comment_id":67247,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1550114966","product_id":100020801,"comment_content":"老师我想请教下uuid作为主键索引的，它在插入数据时是追加插入？还是需要挪动数据？","like_count":0,"discussions":[{"author":{"id":1264162,"avatar":"https://static001.geekbang.org/account/avatar/00/13/4a/22/2681d602.jpg","nickname":"林晓斌","note":"","ucode":"CDE42D44F26240","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":439113,"discussion_content":"uuid不是持续递增的，中间还是不免会插入到“中间”","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1550127390,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":65158,"user_name":"千年孤独","can_delete":false,"product_type":"c1","uid":1037215,"ip_address":"","ucode":"282CA1A68E8774","user_header":"https://static001.geekbang.org/account/avatar/00/0f/d3/9f/36ea3be4.jpg","comment_is_top":false,"comment_ctime":1549079716,"is_pvip":false,"replies":[{"id":"23098","content":"1. 肯定不是越多越好了😅，还是要维护代价的<br>2. 没看懂第二个问题；<br>3. InnoDB一定会有主键的，不管怎样，索引都不能“越多越好”","user_name":"作者回复","user_name_real":"林晓斌","uid":"1264162","ctime":1549101934,"ip_address":"","comment_id":65158,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1549079716","product_id":100020801,"comment_content":"mysql的索引并不是越多越好？是跟B+ 树算法的页分裂的性能和空间利用率下降有关吗？还是要区分有没有自增主键的情况下回答这个问题？<br>","like_count":0,"discussions":[{"author":{"id":1264162,"avatar":"https://static001.geekbang.org/account/avatar/00/13/4a/22/2681d602.jpg","nickname":"林晓斌","note":"","ucode":"CDE42D44F26240","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":438341,"discussion_content":"1. 肯定不是越多越好了😅，还是要维护代价的\n2. 没看懂第二个问题；\n3. InnoDB一定会有主键的，不管怎样，索引都不能“越多越好”","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1549101934,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":64038,"user_name":"sunsweet","can_delete":false,"product_type":"c1","uid":1027879,"ip_address":"","ucode":"787F9E1EC6A67E","user_header":"https://static001.geekbang.org/account/avatar/00/0f/af/27/76489618.jpg","comment_is_top":false,"comment_ctime":1548645269,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1548645269","product_id":100020801,"comment_content":"干货满满，感谢老师","like_count":0},{"had_liked":false,"id":63887,"user_name":"书生","can_delete":false,"product_type":"c1","uid":1103592,"ip_address":"","ucode":"5AEB78BD3B11A8","user_header":"https://static001.geekbang.org/account/avatar/00/10/d6/e8/00118b5d.jpg","comment_is_top":false,"comment_ctime":1548576733,"is_pvip":false,"replies":[{"id":"22602","content":"这是个好问题，适用的<br>后面会有文章提到这个","user_name":"作者回复","user_name_real":"林晓斌","uid":"1264162","ctime":1548594047,"ip_address":"","comment_id":63887,"utype":1}],"discussion_count":2,"race_medal":0,"score":"1548576733","product_id":100020801,"comment_content":"请问老师，自增主键在高并发量或者频繁插入的情境下，是否仍然适合使用呢？","like_count":0,"discussions":[{"author":{"id":1264162,"avatar":"https://static001.geekbang.org/account/avatar/00/13/4a/22/2681d602.jpg","nickname":"林晓斌","note":"","ucode":"CDE42D44F26240","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":437749,"discussion_content":"这是个好问题，适用的\n后面会有文章提到这个","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1548594047,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1237583,"avatar":"https://static001.geekbang.org/account/avatar/00/12/e2/4f/df01f65e.jpg","nickname":"Danfēng","note":"","ucode":"E5B3451F1D0441","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":280763,"discussion_content":"以前业务上遇到过，后面并发注册用户少了，但项目黄了，我也懒得去翻盘了","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1591608986,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":62098,"user_name":"冬瓜瓜","can_delete":false,"product_type":"c1","uid":1181599,"ip_address":"","ucode":"0EFB780C88F8D3","user_header":"https://static001.geekbang.org/account/avatar/00/12/07/9f/157ed758.jpg","comment_is_top":false,"comment_ctime":1547909919,"is_pvip":false,"replies":[{"id":"21981","content":"这个只是示例哈，在页分裂，树增高的过程中，会选择让树高最低的值","user_name":"作者回复","user_name_real":"林晓斌","uid":"1264162","ctime":1547962192,"ip_address":"","comment_id":62098,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1547909919","product_id":100020801,"comment_content":"老师 图中的B+树为啥是以3为分叉而不是以其他值分叉？","like_count":0,"discussions":[{"author":{"id":1264162,"avatar":"https://static001.geekbang.org/account/avatar/00/13/4a/22/2681d602.jpg","nickname":"林晓斌","note":"","ucode":"CDE42D44F26240","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":437094,"discussion_content":"这个只是示例哈，在页分裂，树增高的过程中，会选择让树高最低的值","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1547962192,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":59469,"user_name":"为你写下天边的眷顾","can_delete":false,"product_type":"c1","uid":1305110,"ip_address":"","ucode":"E09C81804F6D44","user_header":"https://static001.geekbang.org/account/avatar/00/13/ea/16/0eb1cc5a.jpg","comment_is_top":false,"comment_ctime":1547374891,"is_pvip":false,"replies":[{"id":"21415","content":"mysql分区表后面会说","user_name":"作者回复","user_name_real":"林晓斌","uid":"1264162","ctime":1547376939,"ip_address":"","comment_id":59469,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1547374891","product_id":100020801,"comment_content":"老师，有没有mysql分区表的讲解，以及生厂中的应用，与oracle的区别","like_count":0,"discussions":[{"author":{"id":1264162,"avatar":"https://static001.geekbang.org/account/avatar/00/13/4a/22/2681d602.jpg","nickname":"林晓斌","note":"","ucode":"CDE42D44F26240","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":436342,"discussion_content":"mysql分区表后面会说","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1547376939,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":58451,"user_name":"鹏程万里","can_delete":false,"product_type":"c1","uid":1114675,"ip_address":"","ucode":"5E23BBEC9E8209","user_header":"https://static001.geekbang.org/account/avatar/00/11/02/33/57678ea3.jpg","comment_is_top":false,"comment_ctime":1547085077,"is_pvip":false,"replies":[{"id":"21070","content":"就是不知道下标，要用值来查哦","user_name":"作者回复","user_name_real":"林晓斌","uid":"1264162","ctime":1547087088,"ip_address":"","comment_id":58451,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1547085077","product_id":100020801,"comment_content":"有个疑问：有序数组中为什么要用二分法查找呢？不可以直接利用数组下标寻址吗？","like_count":0,"discussions":[{"author":{"id":1264162,"avatar":"https://static001.geekbang.org/account/avatar/00/13/4a/22/2681d602.jpg","nickname":"林晓斌","note":"","ucode":"CDE42D44F26240","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":436068,"discussion_content":"就是不知道下标，要用值来查哦","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1547087088,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":58043,"user_name":"高山高","can_delete":false,"product_type":"c1","uid":1120547,"ip_address":"","ucode":"4F1D91E3C3FBB9","user_header":"https://static001.geekbang.org/account/avatar/00/11/19/23/849beae4.jpg","comment_is_top":false,"comment_ctime":1546966681,"is_pvip":false,"discussion_count":1,"race_medal":0,"score":"1546966681","product_id":100020801,"comment_content":"以innodb的整型字段而言，这个n差不多是1200。我知道是说1200个叉，但是我不太明白为什么是1200，希望作者能解答一下，谢谢","like_count":0,"discussions":[{"author":{"id":1065351,"avatar":"https://static001.geekbang.org/account/avatar/00/10/41/87/d26efb2e.jpg","nickname":"SuperSnow","note":"","ucode":"84C89AA8083E6A","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":132186,"discussion_content":"page=16KB,key+pointer=8B+6B,相除约1200","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1578885582,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":57564,"user_name":"目人可分😁","can_delete":false,"product_type":"c1","uid":1155558,"ip_address":"","ucode":"37487B09CCDEB8","user_header":"https://static001.geekbang.org/account/avatar/00/11/a1/e6/c0577a54.jpg","comment_is_top":false,"comment_ctime":1546836924,"is_pvip":true,"replies":[{"id":"20744","content":"1. 尽量少的<br>2. 对，这个是覆盖索引，不用回表","user_name":"作者回复","user_name_real":"林晓斌","uid":"1264162","ctime":1546843347,"ip_address":"","comment_id":57564,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1546836924","product_id":100020801,"comment_content":"问题一： 您说的“为了让一个查询尽量少地读磁盘，就必须让查询过程访问尽量少的数据块”，这里是不是应该&quot;查询过程访问尽量多的数据块&quot; 。问题二：如果是非主键索引会进行回表查询，那select k from table where k=1 这样的查询是不是就不用回表查询了呢，因为这个值在索引中已经有了啊，<br>留下的问题，我感觉如果碎片化严重的话，就要进行删除重建，相应的就可以直接使用重建命令","like_count":0,"discussions":[{"author":{"id":1264162,"avatar":"https://static001.geekbang.org/account/avatar/00/13/4a/22/2681d602.jpg","nickname":"林晓斌","note":"","ucode":"CDE42D44F26240","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":435644,"discussion_content":"1. 尽量少的\n2. 对，这个是覆盖索引，不用回表","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1546843347,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":56560,"user_name":"William","can_delete":false,"product_type":"c1","uid":1346215,"ip_address":"","ucode":"55F5D9DEE485B1","user_header":"https://static001.geekbang.org/account/avatar/00/14/8a/a7/674c1864.jpg","comment_is_top":false,"comment_ctime":1546490331,"is_pvip":true,"replies":[{"id":"20395","content":"05篇 “最左前缀原则”这一段","user_name":"作者回复","user_name_real":"林晓斌","uid":"1264162","ctime":1546491996,"ip_address":"","comment_id":56560,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1546490331","product_id":100020801,"comment_content":"<br>老师你好，我这有个这样的场景 ，我记得是讲过的，但是我没找到理论知识描述的地方，请老师指以下。 。<br><br>CREATE TABLE `t` (<br>  `id` int(11) NOT NULL,<br>  `a` int(11) DEFAULT NULL,<br>  `b` int(11) DEFAULT NULL,<br>  `c` int(11) DEFAULT NULL,<br>  PRIMARY KEY (`id`),<br>  KEY `t1` (`a`,`b`,`c`),<br>  KEY `t2` (`a`,`b`),<br>  KEY `t3` (`a`)<br>) ENGINE=InnoDB DEFAULT CHARSET=utf8<br>show index from t;<br><br>explain select * from t where a = 1  ;  &#47;&#47; t1<br><br>explain select b from t where b = 1  ;  &#47;&#47; 走t2 , 因为走覆盖索引了。 <br> 如果是select *  则为t1 <br><br>explain select * from t where c = 1  ;  &#47;&#47;t1 <br>如果有单独的c 索引 ，那么走单独的索引，但是在此场景是多余的所以。所以主需要一个t1 即可。 <br>这个理论在哪里了？<br><br><br>-- 结论：其只需要建立一个t1 索引即可 <br><br>-- 原理是什么？我忘记在哪篇文档里了。 <br><br><br><br><br><br><br><br><br>","like_count":0,"discussions":[{"author":{"id":1264162,"avatar":"https://static001.geekbang.org/account/avatar/00/13/4a/22/2681d602.jpg","nickname":"林晓斌","note":"","ucode":"CDE42D44F26240","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":435118,"discussion_content":"05篇 “最左前缀原则”这一段","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1546491996,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":55134,"user_name":"桃之夭夭","can_delete":false,"product_type":"c1","uid":1091722,"ip_address":"","ucode":"4CDD45167288BF","user_header":"https://static001.geekbang.org/account/avatar/00/10/a8/8a/76e1e828.jpg","comment_is_top":false,"comment_ctime":1546050416,"is_pvip":false,"discussion_count":1,"race_medal":0,"score":"1546050416","product_id":100020801,"comment_content":"老师，B+树的非主键索引是根据主键ID排序的吗？如果主键不是ID，是其他字段，那又根据什么排序呢？","like_count":0,"discussions":[{"author":{"id":1065351,"avatar":"https://static001.geekbang.org/account/avatar/00/10/41/87/d26efb2e.jpg","nickname":"SuperSnow","note":"","ucode":"84C89AA8083E6A","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":132191,"discussion_content":"不是根据主键ID排序，根据B+树策略进行排序，与主键索引树一样的规则。个人理解哈。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1578885875,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":54947,"user_name":"沁雨烟城","can_delete":false,"product_type":"c1","uid":1243707,"ip_address":"","ucode":"CAA5AD6A74A9EB","user_header":"https://static001.geekbang.org/account/avatar/00/12/fa/3b/29c9240f.jpg","comment_is_top":false,"comment_ctime":1545986945,"is_pvip":false,"discussion_count":1,"race_medal":0,"score":"1545986945","product_id":100020801,"comment_content":"想请教下页分裂是在非聚簇索引达到一定容量时候，对聚簇索引和非聚簇索引都新建一个页来存储多余部分数据吗","like_count":0,"discussions":[{"author":{"id":1065351,"avatar":"https://static001.geekbang.org/account/avatar/00/10/41/87/d26efb2e.jpg","nickname":"SuperSnow","note":"","ucode":"84C89AA8083E6A","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":132193,"discussion_content":"聚簇索引也可以分裂的，但不是靠非来触发。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1578885940,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":54485,"user_name":"乔克","can_delete":false,"product_type":"c1","uid":1315273,"ip_address":"","ucode":"28A797A4235B78","user_header":"https://static001.geekbang.org/account/avatar/00/14/11/c9/c3eae895.jpg","comment_is_top":false,"comment_ctime":1545881166,"is_pvip":false,"replies":[{"id":"19800","content":"不是呀，跟父节点比，小的走左，大的走右，不需要左右都扫","user_name":"作者回复","user_name_real":"林晓斌","uid":"1264162","ctime":1545903603,"ip_address":"","comment_id":54485,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1545881166","product_id":100020801,"comment_content":"二叉搜索树的特点是：每个节点的左儿子小于父节点，父节点又小于右儿子，那上面那个例子要查ID_card_n2的话可不可以理解为先查userB节点，依次向下找，找不到再来找userC节点？","like_count":0,"discussions":[{"author":{"id":1264162,"avatar":"https://static001.geekbang.org/account/avatar/00/13/4a/22/2681d602.jpg","nickname":"林晓斌","note":"","ucode":"CDE42D44F26240","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":434472,"discussion_content":"不是呀，跟父节点比，小的走左，大的走右，不需要左右都扫","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1545903603,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":54245,"user_name":"艾草","can_delete":false,"product_type":"c1","uid":1302279,"ip_address":"","ucode":"E0D8F58FE6D122","user_header":"https://static001.geekbang.org/account/avatar/00/13/df/07/7bf65329.jpg","comment_is_top":false,"comment_ctime":1545815335,"is_pvip":false,"replies":[{"id":"19617","content":"看一下第17篇","user_name":"作者回复","user_name_real":"林晓斌","uid":"1264162","ctime":1545818673,"ip_address":"","comment_id":54245,"utype":1}],"discussion_count":2,"race_medal":0,"score":"1545815335","product_id":100020801,"comment_content":"关于回表模块知识点有点问题：<br>如果不设置主键索引，那么非主键索引的叶子结点是什么。还会有回表的操作吗？","like_count":0,"discussions":[{"author":{"id":1264162,"avatar":"https://static001.geekbang.org/account/avatar/00/13/4a/22/2681d602.jpg","nickname":"林晓斌","note":"","ucode":"CDE42D44F26240","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":434405,"discussion_content":"看一下第17篇","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1545818673,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1065351,"avatar":"https://static001.geekbang.org/account/avatar/00/10/41/87/d26efb2e.jpg","nickname":"SuperSnow","note":"","ucode":"84C89AA8083E6A","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":132195,"discussion_content":"会默认产生主键row id","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1578886008,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":53757,"user_name":"孟翔","can_delete":false,"product_type":"c1","uid":1355462,"ip_address":"","ucode":"05483E4BF8FF10","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/lBOz003W9v9XgTmEs6mRdljc44FBhNMP6gVV6d2Yyzdgagsv9Um316giadwc7gvKksQg6E22oRtpsF5l5EV4zzw/132","comment_is_top":false,"comment_ctime":1545720546,"is_pvip":false,"replies":[{"id":"19517","content":"看一下 唯一索引和普通索引选择那一篇","user_name":"作者回复","user_name_real":"林晓斌","uid":"1264162","ctime":1545736169,"ip_address":"","comment_id":53757,"utype":1}],"discussion_count":2,"race_medal":0,"score":"1545720546","product_id":100020801,"comment_content":"想问下，主键索引会涉及到页分离、合并的问题。那普通索引是否也会有这个问题呢。这样带来的开销和主键索引有什么区别呢？","like_count":0,"discussions":[{"author":{"id":1264162,"avatar":"https://static001.geekbang.org/account/avatar/00/13/4a/22/2681d602.jpg","nickname":"林晓斌","note":"","ucode":"CDE42D44F26240","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":434232,"discussion_content":"看一下 唯一索引和普通索引选择那一篇","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1545736169,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1065351,"avatar":"https://static001.geekbang.org/account/avatar/00/10/41/87/d26efb2e.jpg","nickname":"SuperSnow","note":"","ucode":"84C89AA8083E6A","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":132197,"discussion_content":"规则是这样，但是要靠非主键索引快速定位到哪行数据。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1578886076,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":53519,"user_name":"阿May的海绵宝宝","can_delete":false,"product_type":"c1","uid":1203058,"ip_address":"","ucode":"AA2B28DF8BEF80","user_header":"https://static001.geekbang.org/account/avatar/00/12/5b/72/4f8a4297.jpg","comment_is_top":false,"comment_ctime":1545662162,"is_pvip":false,"discussion_count":1,"race_medal":0,"score":"1545662162","product_id":100020801,"comment_content":"1.树高20，从上至下查询经历20层，每一层经过的节点都是一个数据块？<br>2.只有主键索引的叶子节点才存在数据页（数据页中记录的是真是数据行），图中【（300,R3)(500,R4)(600,R5)】包含了这3个数据的叶子节点是一个数据页？<br>3.有个同学提出的问题（100,1）（200,1）（300,1）（400,1）这样的数据，在非主键索引B+树中，他的数据结构是下面这样的？<br>|￣￣1￣|￣￣1￣|￣￣1￣￣|￣￣1￣|<br>|￣100￣|￣200￣|￣300￣|￣400￣|<br>￣￣￣￣￣￣￣￣￣￣￣￣￣￣￣￣","like_count":0,"discussions":[{"author":{"id":1065351,"avatar":"https://static001.geekbang.org/account/avatar/00/10/41/87/d26efb2e.jpg","nickname":"SuperSnow","note":"","ucode":"84C89AA8083E6A","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":132198,"discussion_content":"1、是的。\n2、是的。\n3、是的。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1578886162,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":53009,"user_name":"Mr.钧👻","can_delete":false,"product_type":"c1","uid":1249939,"ip_address":"","ucode":"D781E030E79245","user_header":"https://static001.geekbang.org/account/avatar/00/13/12/93/3470fc43.jpg","comment_is_top":false,"comment_ctime":1545568637,"is_pvip":false,"replies":[{"id":"19204","content":"N的大小不只是数据块，还有单个索引值的字节大小哦。<br><br>整数字段就是int ","user_name":"作者回复","user_name_real":"林晓斌","uid":"1264162","ctime":1545572377,"ip_address":"","comment_id":53009,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1545568637","product_id":100020801,"comment_content":"请问老师，文中这句话：<br>以Innodb一个整数字段索引为例，这个N差不多是1200。<br><br>这句话不是很理解，N的大小是数据块决定的，那数据块的大小，和整数字段有什么联系呢？<br><br>整数字段是指char类型吧？","like_count":0,"discussions":[{"author":{"id":1264162,"avatar":"https://static001.geekbang.org/account/avatar/00/13/4a/22/2681d602.jpg","nickname":"林晓斌","note":"","ucode":"CDE42D44F26240","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":434016,"discussion_content":"N的大小不只是数据块，还有单个索引值的字节大小哦。\n\n整数字段就是int ","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1545572377,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":51784,"user_name":"sky","can_delete":false,"product_type":"c1","uid":1008071,"ip_address":"","ucode":"9FE5F43055D3AB","user_header":"https://static001.geekbang.org/account/avatar/00/0f/61/c7/b64ac05e.jpg","comment_is_top":false,"comment_ctime":1545239950,"is_pvip":false,"replies":[{"id":"18787","content":"Innodb会建一个长为6字节的不可见字段做主键","user_name":"作者回复","user_name_real":"林晓斌","uid":"1264162","ctime":1545271359,"ip_address":"","comment_id":51784,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1545239950","product_id":100020801,"comment_content":"主键索引叶子结点存储整行数据，是不是意味着表内的数据都存在了主键索引上？那么如果主键索引被删除了，数据是丢失了？还是","like_count":0,"discussions":[{"author":{"id":1264162,"avatar":"https://static001.geekbang.org/account/avatar/00/13/4a/22/2681d602.jpg","nickname":"林晓斌","note":"","ucode":"CDE42D44F26240","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":433619,"discussion_content":"Innodb会建一个长为6字节的不可见字段做主键","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1545271359,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":51690,"user_name":"吕","can_delete":false,"product_type":"c1","uid":1210890,"ip_address":"","ucode":"8F08E2CB81C4C3","user_header":"https://static001.geekbang.org/account/avatar/00/12/7a/0a/0ce5c232.jpg","comment_is_top":false,"comment_ctime":1545224304,"is_pvip":false,"replies":[{"id":"18716","content":"没看懂… 主键的叶子节点就是一整行","user_name":"作者回复","user_name_real":"林晓斌","uid":"1264162","ctime":1545229904,"ip_address":"","comment_id":51690,"utype":1}],"discussion_count":2,"race_medal":0,"score":"1545224304","product_id":100020801,"comment_content":"请教下，非主键索引的内容是主键的值，这个值代表的应该是主键的一组值吧，即多个值是主键的叶子节点","like_count":0,"discussions":[{"author":{"id":1264162,"avatar":"https://static001.geekbang.org/account/avatar/00/13/4a/22/2681d602.jpg","nickname":"林晓斌","note":"","ucode":"CDE42D44F26240","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":433575,"discussion_content":"没看懂… 主键的叶子节点就是一整行","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1545229904,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1065351,"avatar":"https://static001.geekbang.org/account/avatar/00/10/41/87/d26efb2e.jpg","nickname":"SuperSnow","note":"","ucode":"84C89AA8083E6A","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":132199,"discussion_content":"非主键的值是主键，并不是主键的那一行数据，你想查行中数据，需要根据获取的主键进行回表。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1578886328,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":49671,"user_name":"无名","can_delete":false,"product_type":"c1","uid":1110113,"ip_address":"","ucode":"2D2E877CF97138","user_header":"https://static001.geekbang.org/account/avatar/00/10/f0/61/68462a07.jpg","comment_is_top":false,"comment_ctime":1544751262,"is_pvip":false,"replies":[{"id":"17917","content":"不用外键挺好的，<br><br>数据量不大，这样我觉得OK","user_name":"作者回复","user_name_real":"林晓斌","uid":"1264162","ctime":1544763037,"ip_address":"","comment_id":49671,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1544751262","product_id":100020801,"comment_content":"我们公司现在所有的表都是用uuid作为主键，说解决分布式时简单；然后所有的外键都只是逻辑上的，也就是不实际建立外键，说为了操作方便。项目目前用户量也就10万左右，3-5年内也就千万内数据（预测）。这样的设计可取吗？","like_count":0,"discussions":[{"author":{"id":1264162,"avatar":"https://static001.geekbang.org/account/avatar/00/13/4a/22/2681d602.jpg","nickname":"林晓斌","note":"","ucode":"CDE42D44F26240","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":432713,"discussion_content":"不用外键挺好的，\n\n数据量不大，这样我觉得OK","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1544763037,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":49460,"user_name":"空白","can_delete":false,"product_type":"c1","uid":1147753,"ip_address":"","ucode":"65DA67B52A16B9","user_header":"https://static001.geekbang.org/account/avatar/00/11/83/69/77256c74.jpg","comment_is_top":false,"comment_ctime":1544692015,"is_pvip":false,"replies":[{"id":"17781","content":"你看一下09篇","user_name":"作者回复","user_name_real":"林晓斌","uid":"1264162","ctime":1544695572,"ip_address":"","comment_id":49460,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1544692015","product_id":100020801,"comment_content":"老师，您好， 在工作中会遇到，因为查询需求给一个键建立索引，但是后续会更新该建对应的值，这个会不会造成性能很慢呢？","like_count":0,"discussions":[{"author":{"id":1264162,"avatar":"https://static001.geekbang.org/account/avatar/00/13/4a/22/2681d602.jpg","nickname":"林晓斌","note":"","ucode":"CDE42D44F26240","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":432627,"discussion_content":"你看一下09篇","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1544695572,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":48679,"user_name":"自由的行者","can_delete":false,"product_type":"c1","uid":1339868,"ip_address":"","ucode":"182CF5F1FACF70","user_header":"https://static001.geekbang.org/account/avatar/00/14/71/dc/1700138a.jpg","comment_is_top":false,"comment_ctime":1544513749,"is_pvip":false,"replies":[{"id":"17492","content":"是的","user_name":"作者回复","user_name_real":"林晓斌","uid":"1264162","ctime":1544524414,"ip_address":"","comment_id":48679,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1544513749","product_id":100020801,"comment_content":"老师，咨询下，回写问题，通过普通索引查询，找到K索引树，得到对应的ID值，再到ID索引树查找。是不是在创建普通索引(index(k))时，就会在K索引树上附加上与值K对应主键ID的信息。<br>","like_count":0,"discussions":[{"author":{"id":1264162,"avatar":"https://static001.geekbang.org/account/avatar/00/13/4a/22/2681d602.jpg","nickname":"林晓斌","note":"","ucode":"CDE42D44F26240","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":432307,"discussion_content":"是的","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1544524414,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":48582,"user_name":"吴林辉","can_delete":false,"product_type":"c1","uid":1222971,"ip_address":"","ucode":"56F117300FF33D","user_header":"https://static001.geekbang.org/account/avatar/00/12/a9/3b/f4ca20d8.jpg","comment_is_top":false,"comment_ctime":1544491319,"is_pvip":false,"replies":[{"id":"17483","content":"就是所有的数据都在索引里，<br>有，堆组织表，比如myisam ","user_name":"作者回复","user_name_real":"林晓斌","uid":"1264162","ctime":1544523906,"ip_address":"","comment_id":48582,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1544491319","product_id":100020801,"comment_content":"在 InnoDB 中，表都是根据主键顺序以索引的形式存放的，老师，这句该怎么理解？还有，除了索引组织表，还有别的种类么","like_count":0,"discussions":[{"author":{"id":1264162,"avatar":"https://static001.geekbang.org/account/avatar/00/13/4a/22/2681d602.jpg","nickname":"林晓斌","note":"","ucode":"CDE42D44F26240","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":432258,"discussion_content":"就是所有的数据都在索引里，\n有，堆组织表，比如myisam ","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1544523906,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":48145,"user_name":"小卡","can_delete":false,"product_type":"c1","uid":1334746,"ip_address":"","ucode":"1E8B196F04B0E0","user_header":"https://static001.geekbang.org/account/avatar/00/14/5d/da/099acb75.jpg","comment_is_top":false,"comment_ctime":1544367323,"is_pvip":false,"replies":[{"id":"17161","content":"13篇会说到哈","user_name":"作者回复","user_name_real":"林晓斌","uid":"1264162","ctime":1544404685,"ip_address":"","comment_id":48145,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1544367323","product_id":100020801,"comment_content":"Optimize table这样的操作是不是就是让数据页合并","like_count":0,"discussions":[{"author":{"id":1264162,"avatar":"https://static001.geekbang.org/account/avatar/00/13/4a/22/2681d602.jpg","nickname":"林晓斌","note":"","ucode":"CDE42D44F26240","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":432050,"discussion_content":"13篇会说到哈","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1544404685,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":48095,"user_name":"周幕辰","can_delete":false,"product_type":"c1","uid":1241430,"ip_address":"","ucode":"904D82C48C970F","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/f4lPZg0qXT2FJvgmfiapD2R97e5TERdkibUBPpSM2dLoRY1xg2hCcE8rULmutkzFcWH5kibmRFicrZvzq1pp2lO7oQ/132","comment_is_top":false,"comment_ctime":1544351486,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1544351486","product_id":100020801,"comment_content":"主键索引，多叉树的N大小应该由行记录大小决定，即行记录100到400字节之间。N应该是40到160之间，那么千万记录的表应该是4层，需要把索引树遍历操作变成内存操作，所需内存应该是几百M到GB之间","like_count":0},{"had_liked":false,"id":48032,"user_name":"过去、今日","can_delete":false,"product_type":"c1","uid":1097197,"ip_address":"","ucode":"8E171203B06513","user_header":"https://static001.geekbang.org/account/avatar/00/10/bd/ed/95e8a314.jpg","comment_is_top":false,"comment_ctime":1544327041,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1544327041","product_id":100020801,"comment_content":"提问：<br>1、根据上面介绍，N叉树为了降低树的高度，减少磁盘寻址操作，但这样节点上数据就多了，节点上怎么快速查找数据不是很清楚？<br>2、节点数据存储在内存上的话，是不是也写入磁盘是按照页为单位存储的吗？<br>3、如果业务场景写操作多，这样页分裂和合并就多，mysql怎样控制这块的性能？<br>课后题：说一下我的理解<br> 如果普通索引，删除和添加我觉得没什么影响<br> 如果主键索引，删除因为普通索引的节点上存住主键值，会对其他普通索引有影响。添加的话普通索引也会重建吧<br>","like_count":0},{"had_liked":false,"id":48024,"user_name":"BliBala","can_delete":false,"product_type":"c1","uid":1320397,"ip_address":"","ucode":"EEDC80FF153A91","user_header":"https://static001.geekbang.org/account/avatar/00/14/25/cd/06767a5e.jpg","comment_is_top":false,"comment_ctime":1544324457,"is_pvip":false,"replies":[{"id":"17143","content":"还是主键，innodb 给加的😄","user_name":"作者回复","user_name_real":"林晓斌","uid":"1264162","ctime":1544357680,"ip_address":"","comment_id":48024,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1544324457","product_id":100020801,"comment_content":"老师，请教个问题，如果一个表没有主键，那么二级索引叶子结点的值会是什么呢？","like_count":0,"discussions":[{"author":{"id":1264162,"avatar":"https://static001.geekbang.org/account/avatar/00/13/4a/22/2681d602.jpg","nickname":"林晓斌","note":"","ucode":"CDE42D44F26240","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":431992,"discussion_content":"还是主键，innodb 给加的😄","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1544357680,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":47983,"user_name":"小李子","can_delete":false,"product_type":"c1","uid":1196293,"ip_address":"","ucode":"C5593E33CA6F4C","user_header":"https://static001.geekbang.org/account/avatar/00/12/41/05/5ba603f2.jpg","comment_is_top":false,"comment_ctime":1544279503,"is_pvip":false,"replies":[{"id":"17099","content":"行数据本身","user_name":"作者回复","user_name_real":"林晓斌","uid":"1264162","ctime":1544332613,"ip_address":"","comment_id":47983,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1544279503","product_id":100020801,"comment_content":"老师您好，聚簇索引叶子节点，存放的是数据行，还是数据行的磁盘地址？","like_count":0,"discussions":[{"author":{"id":1264162,"avatar":"https://static001.geekbang.org/account/avatar/00/13/4a/22/2681d602.jpg","nickname":"林晓斌","note":"","ucode":"CDE42D44F26240","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":431972,"discussion_content":"行数据本身","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1544332613,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":47078,"user_name":"火腿","can_delete":false,"product_type":"c1","uid":1308116,"ip_address":"","ucode":"40F17DBC18F5D5","user_header":"https://static001.geekbang.org/account/avatar/00/13/f5/d4/5a0a2f8d.jpg","comment_is_top":false,"comment_ctime":1544042377,"is_pvip":false,"replies":[{"id":"16824","content":"主要是得有具体场景…你提一个😄","user_name":"作者回复","user_name_real":"林晓斌","uid":"1264162","ctime":1544063898,"ip_address":"","comment_id":47078,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1544042377","product_id":100020801,"comment_content":"写得非常好, 能否指引下怎么设计整个数据库, 比如常见的电商网站. 如果太庞大,  能否挑其中的一个数据表做为例子, 这样结合来讲会更好理解.  谢谢.","like_count":0,"discussions":[{"author":{"id":1264162,"avatar":"https://static001.geekbang.org/account/avatar/00/13/4a/22/2681d602.jpg","nickname":"林晓斌","note":"","ucode":"CDE42D44F26240","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":431656,"discussion_content":"主要是得有具体场景…你提一个😄","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1544063898,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":47011,"user_name":"wuxue_123","can_delete":false,"product_type":"c1","uid":1327273,"ip_address":"","ucode":"3086949153D965","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTK9z4ADkhDVV2oNaRmetm5QMFB2ayr5hHIJGA3cGibkFxbiaCYuyPwJQB800dMFGqwslmuvXbdulDVw/132","comment_is_top":false,"comment_ctime":1544018787,"is_pvip":false,"replies":[{"id":"16778","content":"不是。这里说的唯一索引还是非主键索引的一种","user_name":"作者回复","user_name_real":"林晓斌","uid":"1264162","ctime":1544020033,"ip_address":"","comment_id":47011,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1544018787","product_id":100020801,"comment_content":"想问一下，唯一索引是和主键一样作为一级索引吗？","like_count":0,"discussions":[{"author":{"id":1264162,"avatar":"https://static001.geekbang.org/account/avatar/00/13/4a/22/2681d602.jpg","nickname":"林晓斌","note":"","ucode":"CDE42D44F26240","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":431636,"discussion_content":"不是。这里说的唯一索引还是非主键索引的一种","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1544020033,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":46987,"user_name":"杰之7","can_delete":false,"product_type":"c1","uid":1297232,"ip_address":"","ucode":"F7DA2E21085332","user_header":"https://static001.geekbang.org/account/avatar/00/13/cb/50/66d0bd7f.jpg","comment_is_top":false,"comment_ctime":1544015151,"is_pvip":false,"replies":[{"id":"16774","content":"第一个问题，对的，就是多叉树<br><br>第二个问题，其实主键索引上还是要存身份证号，主要节省空间，是节省在其它索引上，因为它们的叶子节点上都要存主键ID","user_name":"作者回复","user_name_real":"林晓斌","uid":"1264162","ctime":1544018771,"ip_address":"","comment_id":46987,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1544015151","product_id":100020801,"comment_content":"通过今天学习的索引课程，我们的目的是为了提高查询处理数据的效率，更是需要我们去渐渐培养熟悉数据存储模型的过程，通过这一节的学习，我们首先学习了常见的索引结构，哈希表、有序数组、多叉数，以及这几种结构查询的适应条件。老师，我的一个疑问是InnDB的B+索引模型是不是就是多叉数结构？理解了这点，然后根据索引模型中的N值，例如N等于1400，树高4层，就可以存储17亿行的数据，那对于10亿级别的查询就是非常快的过程。在下半节实战中也学习到了索引的维护，对于中间插入的列，需要进行逻辑上的维护。理解的主键索引的叶子结点存的是整行数据，非主键索引的叶子节点是主键的值，因为有主键和非主键进行索引时，首先通过非主键索引返回主键索引的值，然后通过主键索引返回需要我们知道的数据列。在所以也讲述的是否需要同时有主键和非主键，以身份证证号为例，如果身份证号设为非主键，那么需要为叶子节点提供20个字节的大小，而如果仅仅只要整形主键，可以是4个字节，这样占用的储存空间就越小了，老师，我理解的是否正确？没有学习计算机专业，也没有做过数据库方面的工作，希望您对于我的两个疑问给予解答，感谢同老师一同进步成长。","like_count":0,"discussions":[{"author":{"id":1264162,"avatar":"https://static001.geekbang.org/account/avatar/00/13/4a/22/2681d602.jpg","nickname":"林晓斌","note":"","ucode":"CDE42D44F26240","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":431629,"discussion_content":"第一个问题，对的，就是多叉树\n\n第二个问题，其实主键索引上还是要存身份证号，主要节省空间，是节省在其它索引上，因为它们的叶子节点上都要存主键ID","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1544018771,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":46855,"user_name":"xzy","can_delete":false,"product_type":"c1","uid":1002095,"ip_address":"","ucode":"1A44368083A19E","user_header":"https://static001.geekbang.org/account/avatar/00/0f/4a/6f/e36b3908.jpg","comment_is_top":false,"comment_ctime":1543991611,"is_pvip":false,"replies":[{"id":"16802","content":"总觉得不错","user_name":"作者回复","user_name_real":"林晓斌","uid":"1264162","ctime":1544029622,"ip_address":"","comment_id":46855,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1543991611","product_id":100020801,"comment_content":"Mysql 索引是帮助 Mysql 高效获取数据的数据结构<br><br>## 索引常见的模型<br>1. hash 表<br>设计思路，把 value 放到一个数组中，把 key 传入 hash 函数，计算出其在数组中的位置<br><br>缺点：区间查找数据慢<br>适用于只有等值查找的场景<br><br>2. 有序数组<br>往中间插入数据，需移动后面的全部数据。<br>只适用于静态存储引擎<br><br>3. 二叉搜索树<br>二叉树树高过高，Mysql 通过索引在硬盘中查找数据时，需要多次随机寻址，耗费时间较长，所以一般使用多叉树。<br><br>## InnoDB的索引模型<br>### InnoDB 使用 B+Tree 的索引模型<br><br>根据叶子节点存储的内容分为主键索引和非主键索引<br>* 主键索引：又称为聚簇索引，叶子节点存储整行数据<br>* 非主键索引：又称二级索引，叶子节点存储 ID 的值<br>::适用二级索引查询数据，需要一次回表::<br><br><br>### 索引维护<br>1. 乱序插入可能造成页分裂，也分裂可能降低50%的空间利用率<br>2. 主键的大小会影响二级索引叶子节点的大小<br><br>::基于以上两点建议使用自增主键::<br><br>业务字段作为主建的条件：<br>1. 只有一个索引<br>2. 该索引必须是唯一索引<br><br>因为只有一个索引不需要考虑二级索引叶子节点的大小。直接使用主键查询可以避免进行一次回表查询<br>","like_count":0,"discussions":[{"author":{"id":1264162,"avatar":"https://static001.geekbang.org/account/avatar/00/13/4a/22/2681d602.jpg","nickname":"林晓斌","note":"","ucode":"CDE42D44F26240","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":431573,"discussion_content":"总觉得不错","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1544029622,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":46772,"user_name":"Mr.Strive.Z.H.L","can_delete":false,"product_type":"c1","uid":1030198,"ip_address":"","ucode":"6D97E159E2EECD","user_header":"https://static001.geekbang.org/account/avatar/00/0f/b8/36/542c96bf.jpg","comment_is_top":false,"comment_ctime":1543979287,"is_pvip":false,"replies":[{"id":"16694","content":"Innodb 里面内存和数据页是一一对应的，内存分裂了，等到写回磁盘，看上去就是“磁盘上那棵树的叶子节点，也分裂了”","user_name":"作者回复","user_name_real":"林晓斌","uid":"1264162","ctime":1543982689,"ip_address":"","comment_id":46772,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1543979287","product_id":100020801,"comment_content":"有个疑惑想请教一下：<br>如果主键不是递增的，插入数据，会导致页分裂。那么说，索引在存储引擎中，肯定会有一部分缓存在内存中，这里插入数据，更新索引的时候，实际上是现在内存中更改索引（页满了进行页分裂）。那么索引的物理存储会有什么变化吗？或者说索引的物理存储格式是怎样的？","like_count":0,"discussions":[{"author":{"id":1264162,"avatar":"https://static001.geekbang.org/account/avatar/00/13/4a/22/2681d602.jpg","nickname":"林晓斌","note":"","ucode":"CDE42D44F26240","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":431540,"discussion_content":"Innodb 里面内存和数据页是一一对应的，内存分裂了，等到写回磁盘，看上去就是“磁盘上那棵树的叶子节点，也分裂了”","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1543982689,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":46380,"user_name":"李杰","can_delete":false,"product_type":"c1","uid":1257210,"ip_address":"","ucode":"4158EEAC790135","user_header":"https://static001.geekbang.org/account/avatar/00/13/2e/fa/420c0932.jpg","comment_is_top":false,"comment_ctime":1543911873,"is_pvip":false,"replies":[{"id":"16592","content":"这样可能处于不同的数据页，查询需要访问多个数据页的","user_name":"作者回复","user_name_real":"林晓斌","uid":"1264162","ctime":1543921107,"ip_address":"","comment_id":46380,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1543911873","product_id":100020801,"comment_content":"老师,主键主键索引的叶子节点存的是整行数据,是讲每行数据都加载到内存中了吗,感觉应该不是这样吧?如果只是记录的数据行所在硬盘上的地址,那id in (1,22,333,444)这样的不在一个数据块上的查询效率会高吗?","like_count":0,"discussions":[{"author":{"id":1264162,"avatar":"https://static001.geekbang.org/account/avatar/00/13/4a/22/2681d602.jpg","nickname":"林晓斌","note":"","ucode":"CDE42D44F26240","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":431438,"discussion_content":"这样可能处于不同的数据页，查询需要访问多个数据页的","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1543921107,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":45929,"user_name":"武俍俍","can_delete":false,"product_type":"c1","uid":1321973,"ip_address":"","ucode":"67A4888F7FF445","user_header":"https://static001.geekbang.org/account/avatar/00/14/2b/f5/11365f51.jpg","comment_is_top":false,"comment_ctime":1543820034,"is_pvip":false,"replies":[{"id":"16401","content":"叶子节点之间是指针链接的关系，改一个不用改别的哦","user_name":"作者回复","user_name_real":"林晓斌","uid":"1264162","ctime":1543821372,"ip_address":"","comment_id":45929,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1543820034","product_id":100020801,"comment_content":"老师好，请问一个问题。这里讲的索引B+树的叶子节点是一行数据，那对于每一行数据，内部是怎么存储的呢，有没有用到什么数据结构？如果仅仅是顺序写磁盘，那修改表结构的时候是不是每一个叶子节点对应的磁盘都要改，这样不会很低效吗？谢谢老师。","like_count":0,"discussions":[{"author":{"id":1264162,"avatar":"https://static001.geekbang.org/account/avatar/00/13/4a/22/2681d602.jpg","nickname":"林晓斌","note":"","ucode":"CDE42D44F26240","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":431276,"discussion_content":"叶子节点之间是指针链接的关系，改一个不用改别的哦","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1543821372,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":45827,"user_name":"王子瑞Aliloke有事电联","can_delete":false,"product_type":"c1","uid":1249400,"ip_address":"","ucode":"9ABE8E475E336B","user_header":"https://static001.geekbang.org/account/avatar/00/13/10/78/29bd3f1e.jpg","comment_is_top":false,"comment_ctime":1543801332,"is_pvip":false,"replies":[{"id":"16389","content":"分表会提，分布式数据库这45讲还没有涉及😓","user_name":"作者回复","user_name_real":"林晓斌","uid":"1264162","ctime":1543809594,"ip_address":"","comment_id":45827,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1543801332","product_id":100020801,"comment_content":"干货好多，老师太棒了，数据库讲的真好！<br>看了老师这四节内容，就敢吹牛~我擅长mysql😁<br>跟着老师好好学，这节知识量有点大，学了这个之后，再温习一遍数据结构，再看一遍&lt;&lt;高性能mysql&gt;&gt;,再回来学一遍。<br>老师，后面有分库分表的知识吧？分布式数据库方面的","like_count":0,"discussions":[{"author":{"id":1264162,"avatar":"https://static001.geekbang.org/account/avatar/00/13/4a/22/2681d602.jpg","nickname":"林晓斌","note":"","ucode":"CDE42D44F26240","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":431223,"discussion_content":"分表会提，分布式数据库这45讲还没有涉及😓","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1543809594,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":45660,"user_name":"小卡","can_delete":false,"product_type":"c1","uid":1334746,"ip_address":"","ucode":"1E8B196F04B0E0","user_header":"https://static001.geekbang.org/account/avatar/00/14/5d/da/099acb75.jpg","comment_is_top":false,"comment_ctime":1543739688,"is_pvip":false,"replies":[{"id":"16277","content":"你说的碎片整理是什么操作…","user_name":"作者回复","user_name_real":"林晓斌","uid":"1264162","ctime":1543774719,"ip_address":"","comment_id":45660,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1543739688","product_id":100020801,"comment_content":"老师，在进行数据碎片整理的时候，是不是就是数据页合并的过程！","like_count":0,"discussions":[{"author":{"id":1264162,"avatar":"https://static001.geekbang.org/account/avatar/00/13/4a/22/2681d602.jpg","nickname":"林晓斌","note":"","ucode":"CDE42D44F26240","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":431142,"discussion_content":"你说的碎片整理是什么操作…","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1543774719,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":45154,"user_name":"小陈","can_delete":false,"product_type":"c1","uid":1009385,"ip_address":"","ucode":"A03A299310AD18","user_header":"https://static001.geekbang.org/account/avatar/00/0f/66/e9/814d057a.jpg","comment_is_top":false,"comment_ctime":1543551017,"is_pvip":false,"discussion_count":1,"race_medal":0,"score":"1543551017","product_id":100020801,"comment_content":"林老师，主键索引的b+数的叶子节点存储的是整行记录，一行记录不是很大嘛，占有空间好大，主键索引的叶子节点是不是只存着记录的地址呢？","like_count":0,"discussions":[{"author":{"id":1065351,"avatar":"https://static001.geekbang.org/account/avatar/00/10/41/87/d26efb2e.jpg","nickname":"SuperSnow","note":"","ucode":"84C89AA8083E6A","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":132255,"discussion_content":"不是，存的就是整行记录。主键索引表可以理解为就是表吧。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1578892292,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":45153,"user_name":"小陈","can_delete":false,"product_type":"c1","uid":1009385,"ip_address":"","ucode":"A03A299310AD18","user_header":"https://static001.geekbang.org/account/avatar/00/0f/66/e9/814d057a.jpg","comment_is_top":false,"comment_ctime":1543551016,"is_pvip":false,"replies":[{"id":"16148","content":"不是，就是整行数据，大也没办法😄","user_name":"作者回复","user_name_real":"林晓斌","uid":"1264162","ctime":1543629965,"ip_address":"","comment_id":45153,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1543551016","product_id":100020801,"comment_content":"林老师，主键索引的b+数的叶子节点存储的是整行记录，一行记录不是很大嘛，占有空间好大，主键索引的叶子节点是不是只存着记录的地址呢？","like_count":0,"discussions":[{"author":{"id":1264162,"avatar":"https://static001.geekbang.org/account/avatar/00/13/4a/22/2681d602.jpg","nickname":"林晓斌","note":"","ucode":"CDE42D44F26240","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":430942,"discussion_content":"不是，就是整行数据，大也没办法😄","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1543629965,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":45112,"user_name":"yihang","can_delete":false,"product_type":"c1","uid":1012361,"ip_address":"","ucode":"A5506F085D1793","user_header":"https://static001.geekbang.org/account/avatar/00/0f/72/89/1a83120a.jpg","comment_is_top":false,"comment_ctime":1543547138,"is_pvip":false,"replies":[{"id":"16096","content":"单语句的时间是算在整个事务中的，所以长查询也会导致长事务哦<br><br>只读事务没更新，不会写回滚段，不过由于有一致性读，还是有可能要访问回滚段的","user_name":"作者回复","user_name_real":"林晓斌","uid":"1264162","ctime":1543589576,"ip_address":"","comment_id":45112,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1543547138","product_id":100020801,"comment_content":"查了一下，max_execution_time 是影响查询语句的超时时间：<br>The execution timeout for SELECT statements, in milliseconds. If the value is 0, timeouts are not<br>enabled.<br>max_execution_time applies as follows:<br>• The global max_execution_time value provides the default for the session value for new<br>connections. The session value applies to SELECT executions executed within the session that<br>include no MAX_EXECUTION_TIME(N) optimizer hint or for which N is 0.<br>• max_execution_time applies to read-only SELECT statements. Statements that are not read<br>only are those that invoke a stored function that modifies data as a side effect.<br>这样对长事务还有影响吗？进而思考了一下，只读事务内会维护回滚段吗？jdbc客户端驱动说可以用Connection.setReadOnly(true) 来提高性能，是不是同此有关呢，能有哪些优化？","like_count":0,"discussions":[{"author":{"id":1264162,"avatar":"https://static001.geekbang.org/account/avatar/00/13/4a/22/2681d602.jpg","nickname":"林晓斌","note":"","ucode":"CDE42D44F26240","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":430925,"discussion_content":"单语句的时间是算在整个事务中的，所以长查询也会导致长事务哦\n\n只读事务没更新，不会写回滚段，不过由于有一致性读，还是有可能要访问回滚段的","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1543589576,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":44458,"user_name":"酱了个油","can_delete":false,"product_type":"c1","uid":1059627,"ip_address":"","ucode":"5A13CA4EAACB81","user_header":"https://static001.geekbang.org/account/avatar/00/10/2b/2b/bebf6eed.jpg","comment_is_top":false,"comment_ctime":1543451491,"is_pvip":false,"replies":[{"id":"15887","content":"是的，不过别担心，这些操作成本都还好","user_name":"作者回复","user_name_real":"林晓斌","uid":"1264162","ctime":1543459276,"ip_address":"","comment_id":44458,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1543451491","product_id":100020801,"comment_content":"老师好，普通索引的b+树是不是无可避免的会出现插入、移动、分页的操作呀","like_count":0,"discussions":[{"author":{"id":1264162,"avatar":"https://static001.geekbang.org/account/avatar/00/13/4a/22/2681d602.jpg","nickname":"林晓斌","note":"","ucode":"CDE42D44F26240","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":430766,"discussion_content":"是的，不过别担心，这些操作成本都还好","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1543459276,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":44456,"user_name":"Spring","can_delete":false,"product_type":"c1","uid":1222211,"ip_address":"","ucode":"8175463FB4705B","user_header":"https://static001.geekbang.org/account/avatar/00/12/a6/43/cb6ab349.jpg","comment_is_top":false,"comment_ctime":1543450948,"is_pvip":false,"discussion_count":1,"race_medal":0,"score":"1543450948","product_id":100020801,"comment_content":"如果一个表没有主键，只有普通索引，它的结构是怎样的","like_count":0,"discussions":[{"author":{"id":1065351,"avatar":"https://static001.geekbang.org/account/avatar/00/10/41/87/d26efb2e.jpg","nickname":"SuperSnow","note":"","ucode":"84C89AA8083E6A","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":132256,"discussion_content":"会产生一个默认主键row id","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1578892342,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":44322,"user_name":"海曙云崖","can_delete":false,"product_type":"c1","uid":1303371,"ip_address":"","ucode":"DCAA7816359B14","user_header":"https://static001.geekbang.org/account/avatar/00/13/e3/4b/5046906a.jpg","comment_is_top":false,"comment_ctime":1543407742,"is_pvip":false,"replies":[{"id":"15813","content":"会","user_name":"作者回复","user_name_real":"林晓斌","uid":"1264162","ctime":1543408972,"ip_address":"","comment_id":44322,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1543407742","product_id":100020801,"comment_content":"在没有主键的情况下，MySQL 支持隐式主键。<br>像课后题这种情况，原来有主键后来删除，这个隐式主键会自动新建吗？","like_count":0,"discussions":[{"author":{"id":1264162,"avatar":"https://static001.geekbang.org/account/avatar/00/13/4a/22/2681d602.jpg","nickname":"林晓斌","note":"","ucode":"CDE42D44F26240","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":430726,"discussion_content":"会","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1543408972,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":44229,"user_name":"iiecunll","can_delete":false,"product_type":"c1","uid":1312114,"ip_address":"","ucode":"FC0070315108A1","user_header":"https://static001.geekbang.org/account/avatar/00/14/05/72/1d4c2499.jpg","comment_is_top":false,"comment_ctime":1543390102,"is_pvip":false,"discussion_count":1,"race_medal":0,"score":"1543390102","product_id":100020801,"comment_content":"请问：普通索引存的内容是主键，如果一张表没有主键，只有一个普通索引，那这个索引值存的是什么？","like_count":0,"discussions":[{"author":{"id":1185046,"avatar":"https://static001.geekbang.org/account/avatar/00/12/15/16/0aae41a1.jpg","nickname":"no13bus","note":"","ucode":"69FA1A719DA4F6","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":8879,"discussion_content":"默认的rowid","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1568090094,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":44146,"user_name":"skyun","can_delete":false,"product_type":"c1","uid":1002658,"ip_address":"","ucode":"38097F3FF1045C","user_header":"https://static001.geekbang.org/account/avatar/00/0f/4c/a2/00241866.jpg","comment_is_top":false,"comment_ctime":1543373387,"is_pvip":false,"discussion_count":1,"race_medal":0,"score":"1543373387","product_id":100020801,"comment_content":"这个n=1200是怎么算的，一个数据页默认16k（指针消耗占用几十字节），整形为4字节，16*1024&#47;4≈4000，算上指针消耗也不至于为1200，不知道我的理解有没有问题，望老师指正，疑惑不解不舒服","like_count":0,"discussions":[{"author":{"id":1065351,"avatar":"https://static001.geekbang.org/account/avatar/00/10/41/87/d26efb2e.jpg","nickname":"SuperSnow","note":"","ucode":"84C89AA8083E6A","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":132257,"discussion_content":"还有6个字节是指针","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1578892404,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":43894,"user_name":"laravel","can_delete":false,"product_type":"c1","uid":1305947,"ip_address":"","ucode":"A4CF206FFA593E","user_header":"https://static001.geekbang.org/account/avatar/00/13/ed/5b/cbcc8743.jpg","comment_is_top":false,"comment_ctime":1543319502,"is_pvip":false,"discussion_count":1,"race_medal":0,"score":"1543319502","product_id":100020801,"comment_content":"林老师，麻烦问一下。您在文章中举例子，说N叉树中，如果是一个整数类型的索引，N差不多是1200，这是怎么算出来的啊？求赐教","like_count":0,"discussions":[{"author":{"id":1065351,"avatar":"https://static001.geekbang.org/account/avatar/00/10/41/87/d26efb2e.jpg","nickname":"SuperSnow","note":"","ucode":"84C89AA8083E6A","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":132259,"discussion_content":"16K除以（4B+6B+其他B）应该是1200左右","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1578892581,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":43865,"user_name":"力挽狂澜爆炸输出的臭臭宁","can_delete":false,"product_type":"c1","uid":1155904,"ip_address":"","ucode":"E8D26181129BCA","user_header":"https://static001.geekbang.org/account/avatar/00/11/a3/40/e0df3b84.jpg","comment_is_top":false,"comment_ctime":1543313059,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1543313059","product_id":100020801,"comment_content":"1.常见的索引数据结构<br>2.innodb索引的种类<br>3.什么情况下使用自增索引更合适","like_count":0},{"had_liked":false,"id":43846,"user_name":"20","can_delete":false,"product_type":"c1","uid":1114370,"ip_address":"","ucode":"08BDC69C708335","user_header":"https://static001.geekbang.org/account/avatar/00/11/01/02/c2348ce4.jpg","comment_is_top":false,"comment_ctime":1543309005,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1543309005","product_id":100020801,"comment_content":"道阻且长啊","like_count":0},{"had_liked":false,"id":43703,"user_name":"守着云开","can_delete":false,"product_type":"c1","uid":1183885,"ip_address":"","ucode":"22220485396D0D","user_header":"https://static001.geekbang.org/account/avatar/00/12/10/8d/43edb2dd.jpg","comment_is_top":false,"comment_ctime":1543282220,"is_pvip":false,"replies":[{"id":"15608","content":"是","user_name":"作者回复","user_name_real":"林晓斌","uid":"1264162","ctime":1543286441,"ip_address":"","comment_id":43703,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1543282220","product_id":100020801,"comment_content":"B+树 每个节点是不是存储一页数据 也就是16kb ","like_count":0,"discussions":[{"author":{"id":1264162,"avatar":"https://static001.geekbang.org/account/avatar/00/13/4a/22/2681d602.jpg","nickname":"林晓斌","note":"","ucode":"CDE42D44F26240","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":430464,"discussion_content":"是","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1543286441,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":43701,"user_name":"tyy","can_delete":false,"product_type":"c1","uid":1302149,"ip_address":"","ucode":"C3B436E6562744","user_header":"https://static001.geekbang.org/account/avatar/00/13/de/85/da98e390.jpg","comment_is_top":false,"comment_ctime":1543282057,"is_pvip":false,"discussion_count":1,"race_medal":0,"score":"1543282057","product_id":100020801,"comment_content":"为什么主键的子节点的值是300，700。而不是300，500，700","like_count":0,"discussions":[{"author":{"id":1065351,"avatar":"https://static001.geekbang.org/account/avatar/00/10/41/87/d26efb2e.jpg","nickname":"SuperSnow","note":"","ucode":"84C89AA8083E6A","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":132260,"discussion_content":"举例而矣","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1578892660,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":43280,"user_name":"北落狮门","can_delete":false,"product_type":"c1","uid":1302064,"ip_address":"","ucode":"C5A951170001B9","user_header":"https://static001.geekbang.org/account/avatar/00/13/de/30/b468b41d.jpg","comment_is_top":false,"comment_ctime":1543204527,"is_pvip":false,"replies":[{"id":"15508","content":"在innodb里面这两个是相同的概念的","user_name":"作者回复","user_name_real":"林晓斌","uid":"1264162","ctime":1543228983,"ip_address":"","comment_id":43280,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1543204527","product_id":100020801,"comment_content":"老师：能讲一下聚簇索引和主键索引它们两者之间的关系嘛？","like_count":0,"discussions":[{"author":{"id":1264162,"avatar":"https://static001.geekbang.org/account/avatar/00/13/4a/22/2681d602.jpg","nickname":"林晓斌","note":"","ucode":"CDE42D44F26240","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":430347,"discussion_content":"在innodb里面这两个是相同的概念的","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1543228983,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":43208,"user_name":"Ivy","can_delete":false,"product_type":"c1","uid":1131135,"ip_address":"","ucode":"78156E0D5DEC52","user_header":"","comment_is_top":false,"comment_ctime":1543196074,"is_pvip":false,"discussion_count":1,"race_medal":0,"score":"1543196074","product_id":100020801,"comment_content":"老师， 我想请教一下这个n叉树中1200是怎么计算出来的？","like_count":0,"discussions":[{"author":{"id":1065351,"avatar":"https://static001.geekbang.org/account/avatar/00/10/41/87/d26efb2e.jpg","nickname":"SuperSnow","note":"","ucode":"84C89AA8083E6A","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":132263,"discussion_content":"16K除以（6B+keyB）大概是1200左右，key越大，N越小。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1578892763,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":43037,"user_name":"Johnnysong","can_delete":false,"product_type":"c1","uid":1303320,"ip_address":"","ucode":"56957031A698BB","user_header":"https://static001.geekbang.org/account/avatar/00/13/e3/18/86e8d7eb.jpg","comment_is_top":false,"comment_ctime":1543146090,"is_pvip":false,"replies":[{"id":"15377","content":"主键的值在普通索引的叶子结点中","user_name":"作者回复","user_name_real":"林晓斌","uid":"1264162","ctime":1543152558,"ip_address":"","comment_id":43037,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1543146090","product_id":100020801,"comment_content":"如果用身份证号做主键，那么每个二级索引的叶子节点占用约 20 个字节，而如果用整型做主键，则只要 4 个字节，如果是长整型（bigint）则是 8 个字节。----这个是怎么计算的","like_count":0,"discussions":[{"author":{"id":1264162,"avatar":"https://static001.geekbang.org/account/avatar/00/13/4a/22/2681d602.jpg","nickname":"林晓斌","note":"","ucode":"CDE42D44F26240","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":430282,"discussion_content":"主键的值在普通索引的叶子结点中","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1543152558,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":42942,"user_name":"Geek_9ca34e","can_delete":false,"product_type":"c1","uid":1222861,"ip_address":"","ucode":"9A9FDBBCCBE19B","user_header":"","comment_is_top":false,"comment_ctime":1543115672,"is_pvip":false,"discussion_count":1,"race_medal":0,"score":"1543115672","product_id":100020801,"comment_content":"老师你好，关于表主建设计能多给些建议麽？我知道主建最好自增，避免索引页分裂和减少二级索引的叶子节点存储空间，但是在分布式系统下或者微服务下，表的主建设计有好的建议麽？","like_count":0,"discussions":[{"author":{"id":1065351,"avatar":"https://static001.geekbang.org/account/avatar/00/10/41/87/d26efb2e.jpg","nickname":"SuperSnow","note":"","ucode":"84C89AA8083E6A","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":132264,"discussion_content":"可以考虑snowflake","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1578892802,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":42915,"user_name":"南山","can_delete":false,"product_type":"c1","uid":1119593,"ip_address":"","ucode":"94656FE4A6C378","user_header":"https://static001.geekbang.org/account/avatar/00/11/15/69/187b9968.jpg","comment_is_top":false,"comment_ctime":1543108016,"is_pvip":true,"replies":[{"id":"15346","content":"会的","user_name":"作者回复","user_name_real":"林晓斌","uid":"1264162","ctime":1543132747,"ip_address":"","comment_id":42915,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1543108016","product_id":100020801,"comment_content":"老师，对于分裂之后的页，当有新的索引数据插入的时候不会再插入到分裂后的页吗？","like_count":0,"discussions":[{"author":{"id":1264162,"avatar":"https://static001.geekbang.org/account/avatar/00/13/4a/22/2681d602.jpg","nickname":"林晓斌","note":"","ucode":"CDE42D44F26240","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":430243,"discussion_content":"会的","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1543132747,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":42782,"user_name":"WL","can_delete":false,"product_type":"c1","uid":1173771,"ip_address":"","ucode":"6277DCD776B87E","user_header":"https://static001.geekbang.org/account/avatar/00/11/e9/0b/1171ac71.jpg","comment_is_top":false,"comment_ctime":1543043259,"is_pvip":false,"discussion_count":2,"race_medal":0,"score":"1543043259","product_id":100020801,"comment_content":"思考题: 删除了主键索引是不是会导致其他的普通索引因为依赖聚簇索引而连带失效.","like_count":0,"discussions":[{"author":{"id":1911661,"avatar":"https://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTLDOKcx20Xxmu5j8WxiafoYvo3bIAFDg8OeicRic1icD597QuMC9O8FyV2Al9RxNfVZXK0gkGUx6M3CVQ/132","nickname":"多年以后","note":"","ucode":"D70E7A1ABE0F39","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":381596,"discussion_content":"不是会建一个rowid的主键吗","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1625136876,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1065351,"avatar":"https://static001.geekbang.org/account/avatar/00/10/41/87/d26efb2e.jpg","nickname":"SuperSnow","note":"","ucode":"84C89AA8083E6A","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":132265,"discussion_content":"是的","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1578893037,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":42692,"user_name":"狼猫","can_delete":false,"product_type":"c1","uid":1080112,"ip_address":"","ucode":"F911CC975F4218","user_header":"https://static001.geekbang.org/account/avatar/00/10/7b/30/1b50450b.jpg","comment_is_top":false,"comment_ctime":1543021853,"is_pvip":false,"discussion_count":1,"race_medal":0,"score":"1543021853","product_id":100020801,"comment_content":"老师您好，有个疑问:因为mysql是索引组织表，那如果我们只有一个主键索引的话是不是就只有一棵主键索引树了？那如果我们表中没有任何索引引擎会怎么办？没有树了？","like_count":0,"discussions":[{"author":{"id":1065351,"avatar":"https://static001.geekbang.org/account/avatar/00/10/41/87/d26efb2e.jpg","nickname":"SuperSnow","note":"","ucode":"84C89AA8083E6A","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":132267,"discussion_content":"主键索引树就是树啊。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1578893140,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":42531,"user_name":"余向华","can_delete":false,"product_type":"c1","uid":1119778,"ip_address":"","ucode":"263773616D2C83","user_header":"https://static001.geekbang.org/account/avatar/00/11/16/22/2205cf0a.jpg","comment_is_top":false,"comment_ctime":1542966130,"is_pvip":false,"discussion_count":2,"race_medal":0,"score":"1542966130","product_id":100020801,"comment_content":"对于这个问题，还是不大明白，老师可以再讲解一下吗？<br>你可以想象一下一棵 100 万节点的平衡二叉树，树高 20。一次查询可能需要访问 20 个数据块。","like_count":0,"discussions":[{"author":{"id":1065351,"avatar":"https://static001.geekbang.org/account/avatar/00/10/41/87/d26efb2e.jpg","nickname":"SuperSnow","note":"","ucode":"84C89AA8083E6A","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":132268,"discussion_content":"对于2叉树而言，层高20就可以容纳百万节点，那如果找一个数据，可能需要最多访问20个块就能找到。","likes_number":1,"is_delete":false,"is_hidden":false,"ctime":1578893209,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":1,"child_discussions":[{"author":{"id":1119778,"avatar":"https://static001.geekbang.org/account/avatar/00/11/16/22/2205cf0a.jpg","nickname":"余向华","note":"","ucode":"263773616D2C83","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1065351,"avatar":"https://static001.geekbang.org/account/avatar/00/10/41/87/d26efb2e.jpg","nickname":"SuperSnow","note":"","ucode":"84C89AA8083E6A","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":191760,"discussion_content":"赞","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1583032267,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":132268,"ip_address":""},"score":191760,"extra":""}]}]},{"had_liked":false,"id":42435,"user_name":"Chu~♡·の~","can_delete":false,"product_type":"c1","uid":1057960,"ip_address":"","ucode":"69B0FBEC66FD48","user_header":"https://static001.geekbang.org/account/avatar/00/10/24/a8/c0148cb8.jpg","comment_is_top":false,"comment_ctime":1542953602,"is_pvip":false,"discussion_count":1,"race_medal":0,"score":"1542953602","product_id":100020801,"comment_content":"针对面试那个问题的解答我没太看懂，调整key或者page的大小只能使得每个数据页存储更多的索引节点，并没有改变N的大小呀？","like_count":0,"discussions":[{"author":{"id":1065351,"avatar":"https://static001.geekbang.org/account/avatar/00/10/41/87/d26efb2e.jpg","nickname":"SuperSnow","note":"","ucode":"84C89AA8083E6A","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":132269,"discussion_content":"一个page=16K，根据key的字节数，再加上每个key有point 6个字节，那你想增大N，无非就是调大page或者减少key的字节长度。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1578893304,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":42401,"user_name":"冰魄","can_delete":false,"product_type":"c1","uid":1088853,"ip_address":"","ucode":"D152C0BEA3074D","user_header":"https://static001.geekbang.org/account/avatar/00/10/9d/55/9d240eef.jpg","comment_is_top":false,"comment_ctime":1542949210,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1542949210","product_id":100020801,"comment_content":"页分裂和页合并伴随着高并发是一个复杂的过程，老师是否可以分享一下这块的知识点。","like_count":0},{"had_liked":false,"id":42395,"user_name":"JRich","can_delete":false,"product_type":"c1","uid":1114901,"ip_address":"","ucode":"66AE9D61533960","user_header":"https://static001.geekbang.org/account/avatar/00/11/03/15/293a185d.jpg","comment_is_top":false,"comment_ctime":1542947854,"is_pvip":false,"discussion_count":1,"race_medal":0,"score":"1542947854","product_id":100020801,"comment_content":"N叉树的N取决于数据块的大小，为什么innodb整型索性的N是1200？这个数据块是什么意思？","like_count":0,"discussions":[{"author":{"id":1065351,"avatar":"https://static001.geekbang.org/account/avatar/00/10/41/87/d26efb2e.jpg","nickname":"SuperSnow","note":"","ucode":"84C89AA8083E6A","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":132270,"discussion_content":"16K除以（4B+6B+其他B）应该是1200左右","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1578893360,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":42344,"user_name":"shawn","can_delete":false,"product_type":"c1","uid":1010221,"ip_address":"","ucode":"8F6A8C7920996E","user_header":"https://static001.geekbang.org/account/avatar/00/0f/6a/2d/ec4ed8ce.jpg","comment_is_top":false,"comment_ctime":1542941808,"is_pvip":false,"replies":[{"id":"15153","content":"相邻的概率很低","user_name":"作者回复","user_name_real":"林晓斌","uid":"1264162","ctime":1542949562,"ip_address":"","comment_id":42344,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1542941808","product_id":100020801,"comment_content":"老师，根据留言，我想到一个问题。B-&#47;B+树会保证 节点与其左右儿子节点相邻么？<br>我记得B*有指向兄弟节点的指针，这样如果余兄弟节点相邻的话，从磁盘读取角度就比较快吧。","like_count":0,"discussions":[{"author":{"id":1264162,"avatar":"https://static001.geekbang.org/account/avatar/00/13/4a/22/2681d602.jpg","nickname":"林晓斌","note":"","ucode":"CDE42D44F26240","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":430061,"discussion_content":"相邻的概率很低","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1542949562,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":42326,"user_name":"shawn","can_delete":false,"product_type":"c1","uid":1010221,"ip_address":"","ucode":"8F6A8C7920996E","user_header":"https://static001.geekbang.org/account/avatar/00/0f/6a/2d/ec4ed8ce.jpg","comment_is_top":false,"comment_ctime":1542940542,"is_pvip":false,"replies":[{"id":"15135","content":"是的","user_name":"作者回复","user_name_real":"林晓斌","uid":"1264162","ctime":1542941166,"ip_address":"","comment_id":42326,"utype":1}],"discussion_count":2,"race_medal":0,"score":"1542940542","product_id":100020801,"comment_content":"老师，如果业务是带有时间序列的 自增字符串 比如 “YYYYMMDDDHHMMSS_XXXXXXX”，是符合B+树的有序插入吧？","like_count":0,"discussions":[{"author":{"id":1264162,"avatar":"https://static001.geekbang.org/account/avatar/00/13/4a/22/2681d602.jpg","nickname":"林晓斌","note":"","ucode":"CDE42D44F26240","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":430049,"discussion_content":"是的","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1542941166,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1065351,"avatar":"https://static001.geekbang.org/account/avatar/00/10/41/87/d26efb2e.jpg","nickname":"SuperSnow","note":"","ucode":"84C89AA8083E6A","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":132272,"discussion_content":"但是，字节太长了，增加了存储空间。尤其是普通索引而引发的存储空间。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1578893630,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":42287,"user_name":"Alexander","can_delete":false,"product_type":"c1","uid":1104100,"ip_address":"","ucode":"5EF394E93A1715","user_header":"https://static001.geekbang.org/account/avatar/00/10/d8/e4/7cc47d20.jpg","comment_is_top":false,"comment_ctime":1542937502,"is_pvip":false,"replies":[{"id":"15123","content":"等值查询就是where a=100","user_name":"作者回复","user_name_real":"林晓斌","uid":"1264162","ctime":1542938405,"ip_address":"","comment_id":42287,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1542937502","product_id":100020801,"comment_content":"什么叫等值查询","like_count":0,"discussions":[{"author":{"id":1264162,"avatar":"https://static001.geekbang.org/account/avatar/00/13/4a/22/2681d602.jpg","nickname":"林晓斌","note":"","ucode":"CDE42D44F26240","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":430036,"discussion_content":"等值查询就是where a=100","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1542938405,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":42247,"user_name":"安静","can_delete":false,"product_type":"c1","uid":1212634,"ip_address":"","ucode":"7C4DB6D81A48EB","user_header":"https://static001.geekbang.org/account/avatar/00/12/80/da/9c0c458c.jpg","comment_is_top":false,"comment_ctime":1542935577,"is_pvip":false,"discussion_count":1,"race_medal":0,"score":"1542935577","product_id":100020801,"comment_content":"工作中一直被dba怼，所以这一节的理解很透彻。","like_count":0,"discussions":[{"author":{"id":1065351,"avatar":"https://static001.geekbang.org/account/avatar/00/10/41/87/d26efb2e.jpg","nickname":"SuperSnow","note":"","ucode":"84C89AA8083E6A","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":132273,"discussion_content":"所以可以怼回去了。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1578893682,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":42056,"user_name":"陌上人 .","can_delete":false,"product_type":"c1","uid":1207075,"ip_address":"","ucode":"02D0044843172B","user_header":"https://static001.geekbang.org/account/avatar/00/12/6b/23/73f18275.jpg","comment_is_top":false,"comment_ctime":1542898650,"is_pvip":false,"discussion_count":1,"race_medal":0,"score":"1542898650","product_id":100020801,"comment_content":"如果语句是 select * from T where k=5，即普通索引查询方式，则需要先搜索 k 索引树，得到 ID 的值为 500，再到 ID 索引树搜索一次。这个过程称为回表。<br>老师 我想问下如果表中没有设主键索引(极端情况),此时搜索K索引数之后是如何get到此条数据的呢?","like_count":0,"discussions":[{"author":{"id":1065351,"avatar":"https://static001.geekbang.org/account/avatar/00/10/41/87/d26efb2e.jpg","nickname":"SuperSnow","note":"","ucode":"84C89AA8083E6A","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":132274,"discussion_content":"根据默认生成的主键row id","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1578893710,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":42022,"user_name":"信信","can_delete":false,"product_type":"c1","uid":1303865,"ip_address":"","ucode":"8DF0EC045579FD","user_header":"https://static001.geekbang.org/account/avatar/00/13/e5/39/951f89c8.jpg","comment_is_top":false,"comment_ctime":1542893778,"is_pvip":false,"replies":[{"id":"15090","content":"还是专指Innodb, 所以说，如果没有别的索引，就特别合适把这个唯一索引当主键索引用，没额外成本。如果有别的索引就要权衡大小的问题","user_name":"作者回复","user_name_real":"林晓斌","uid":"1264162","ctime":1542917071,"ip_address":"","comment_id":42022,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1542893778","product_id":100020801,"comment_content":"<br>老师回答我的问题中提到：<br>KV场景，我们是假设业务必须把这个字段设置为唯一索引。不把它设置成主键，设置成唯一索引也一样要面对这个问题。      <br>我很疑惑：业务字段设成唯一索引，不设成主键索引。岂不是唯一索引经常分裂，并且还需要回表查询，双重缺点。不如把业务字段设置成主键了吧？。。。还是说讨论的是innodb之外的引擎，不需要非得有个主键？。。<br>","like_count":0,"discussions":[{"author":{"id":1264162,"avatar":"https://static001.geekbang.org/account/avatar/00/13/4a/22/2681d602.jpg","nickname":"林晓斌","note":"","ucode":"CDE42D44F26240","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":429974,"discussion_content":"还是专指Innodb, 所以说，如果没有别的索引，就特别合适把这个唯一索引当主键索引用，没额外成本。如果有别的索引就要权衡大小的问题","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1542917071,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":41869,"user_name":"慕塔","can_delete":false,"product_type":"c1","uid":1302106,"ip_address":"","ucode":"5C6C668C1106A5","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/A94RKUfWfwzRzb68T9xskctQ43TBgXSBIL78p0N0ria2tQxmsTTJebYmefhkbHK7zwpoxokxs43UxpgDTdwm5tg/132","comment_is_top":false,"comment_ctime":1542863776,"is_pvip":false,"replies":[{"id":"15056","content":"前面的分析很好。<br><br>不能直接动手，要交给IO线程处理并发冲突。所以物理复制是一个新技术，要解决很多问题。😄","user_name":"作者回复","user_name_real":"林晓斌","uid":"1264162","ctime":1542884429,"ip_address":"","comment_id":41869,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1542863776","product_id":100020801,"comment_content":"为什么二级索引的value是主键索引呢？不这么做，一旦数据页的分解或合并会更改所有的B+树，特别对于二级索引要对很多不连续的数据页修改，会降低并发性能。这么做，数据页的操作只会影响主键的B+树，但这会影响二级索引的查询效率。还有个问题，如果用户显示两二级索引建在主键上，那会不会有两份数据？<br>接着问上次的问题啊，如果主从复制传redo到从机，在回放时，一个mtr更改多个数据页，除了锁住整个B+树外，还有没有其他能解决B+树分解的原子性呢😁谢谢","like_count":0,"discussions":[{"author":{"id":1264162,"avatar":"https://static001.geekbang.org/account/avatar/00/13/4a/22/2681d602.jpg","nickname":"林晓斌","note":"","ucode":"CDE42D44F26240","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":429928,"discussion_content":"前面的分析很好。\n\n不能直接动手，要交给IO线程处理并发冲突。所以物理复制是一个新技术，要解决很多问题。😄","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1542884429,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":41845,"user_name":"🐱您的好友William🐱","can_delete":false,"product_type":"c1","uid":1215456,"ip_address":"","ucode":"427786DB178965","user_header":"https://static001.geekbang.org/account/avatar/00/12/8b/e0/9a79ddac.jpg","comment_is_top":false,"comment_ctime":1542858496,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1542858496","product_id":100020801,"comment_content":"今天的blog有点长，不过收获很大，每次看完都要看一下留言区再学习一下！！更有收获！！","like_count":0},{"had_liked":false,"id":41833,"user_name":"壹口尘埃","can_delete":false,"product_type":"c1","uid":1002953,"ip_address":"","ucode":"F63EF6BCCB7355","user_header":"https://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTKVIjh4T1akib7wAQXiaMmTRVe89bT3tBAeSdFflCQSWjDZQOs5jeBEWLC1GyFshHjvhsIZKArO6ichw/132","comment_is_top":false,"comment_ctime":1542857104,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1542857104","product_id":100020801,"comment_content":"你好，我有一个问题一直没有解决：<br>一个好友关系表friend_info，设置了一个唯一索引：UNIQUE (virtual_id, friend_id) 和一个普通索引：INDEX (virtual_id)，后来发现UNIQUE其实已经为第一个字段virtual_id建立了索引，所以第二个普通索引就多余了，想把第二个索引 drop掉，但是因为这个表的数据量巨大（500万条数据），尝试了各种办法，一直没有把索引drop掉（等待5个小时以上依然没反应）<br>尝试的方法有：<br>1. DROP INDEX index_name ON table_name 或 ALTER TABLE table_name DROP INDEX index_name<br>2. 创建一个新表friend_info_new，从friend_info查询数据插入到friend_info_new中，然后drop掉friend_info表，再把friend_info_new rename为friend_info，但是到了最后一步重命名的表的时候，怎么着都成功不了，和上边一样的问题，等待几个小时也没反应。<br>望老师解答还有什么好的办法，谢谢！<br>","like_count":0},{"had_liked":false,"id":41830,"user_name":"王凯","can_delete":false,"product_type":"c1","uid":1306753,"ip_address":"","ucode":"4F91D6F85B45D1","user_header":"https://static001.geekbang.org/account/avatar/00/13/f0/81/8d539cba.jpg","comment_is_top":false,"comment_ctime":1542856219,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1542856219","product_id":100020801,"comment_content":"1. 重建非主键索引无其他影响<br><br>2. 重建主键索引影响非主键索引（但貌似也没有什么更好的办法呀😅）","like_count":0},{"had_liked":false,"id":41800,"user_name":"进击的大神","can_delete":false,"product_type":"c1","uid":1309990,"ip_address":"","ucode":"CACA5D884E8621","user_header":"https://static001.geekbang.org/account/avatar/00/13/fd/26/1a2c4e7c.jpg","comment_is_top":false,"comment_ctime":1542852625,"is_pvip":false,"replies":[{"id":"15029","content":"我把内存管理加到第一次答疑文章里面","user_name":"作者回复","user_name_real":"林晓斌","uid":"1264162","ctime":1542872773,"ip_address":"","comment_id":41800,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1542852625","product_id":100020801,"comment_content":"请老师讲解下数据页的概念，存在放内存还是物理磁盘上。索引结构是部分在内存还是全部在内存存放。谢谢！","like_count":0,"discussions":[{"author":{"id":1264162,"avatar":"https://static001.geekbang.org/account/avatar/00/13/4a/22/2681d602.jpg","nickname":"林晓斌","note":"","ucode":"CDE42D44F26240","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":429904,"discussion_content":"我把内存管理加到第一次答疑文章里面","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1542872773,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":41784,"user_name":"机智的豆沙包","can_delete":false,"product_type":"c1","uid":1039199,"ip_address":"","ucode":"F26CDBD15EFD44","user_header":"https://static001.geekbang.org/account/avatar/00/0f/db/5f/92f979a4.jpg","comment_is_top":false,"comment_ctime":1542851053,"is_pvip":false,"replies":[{"id":"15030","content":"现在基本上没有需要使用myisam的场景了，所以我们确实不打算介绍它…","user_name":"作者回复","user_name_real":"林晓斌","uid":"1264162","ctime":1542872828,"ip_address":"","comment_id":41784,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1542851053","product_id":100020801,"comment_content":"老师，前面的内容几乎全是innodb，能不能讲讲myisam？<br>或者介绍一下该如何选择引擎？","like_count":0,"discussions":[{"author":{"id":1264162,"avatar":"https://static001.geekbang.org/account/avatar/00/13/4a/22/2681d602.jpg","nickname":"林晓斌","note":"","ucode":"CDE42D44F26240","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":429899,"discussion_content":"现在基本上没有需要使用myisam的场景了，所以我们确实不打算介绍它…","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1542872828,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":41779,"user_name":"华仔","can_delete":false,"product_type":"c1","uid":1185183,"ip_address":"","ucode":"4D3304FE618F3A","user_header":"https://static001.geekbang.org/account/avatar/00/12/15/9f/84dfa9a7.jpg","comment_is_top":false,"comment_ctime":1542850693,"is_pvip":false,"replies":[{"id":"14975","content":"数据结构偶尔会提到，但MySQL 的代码这个专栏没有的","user_name":"作者回复","user_name_real":"林晓斌","uid":"1264162","ctime":1542852917,"ip_address":"","comment_id":41779,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1542850693","product_id":100020801,"comment_content":"老师，有讲核心逻辑代码和核心数据结构的部分么？很期待，","like_count":0,"discussions":[{"author":{"id":1264162,"avatar":"https://static001.geekbang.org/account/avatar/00/13/4a/22/2681d602.jpg","nickname":"林晓斌","note":"","ucode":"CDE42D44F26240","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":429895,"discussion_content":"数据结构偶尔会提到，但MySQL 的代码这个专栏没有的","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1542852917,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":41769,"user_name":"改个啥名字","can_delete":false,"product_type":"c1","uid":1302480,"ip_address":"","ucode":"954A17B322E0CA","user_header":"https://static001.geekbang.org/account/avatar/00/13/df/d0/ccc73e63.jpg","comment_is_top":false,"comment_ctime":1542850145,"is_pvip":false,"replies":[{"id":"14977","content":"就是长度定义的限制。 比如整型最大值是2的31次方，长整型是2的63次方","user_name":"作者回复","user_name_real":"林晓斌","uid":"1264162","ctime":1542853047,"ip_address":"","comment_id":41769,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1542850145","product_id":100020801,"comment_content":"自增主键最大值受什么限制？","like_count":0,"discussions":[{"author":{"id":1264162,"avatar":"https://static001.geekbang.org/account/avatar/00/13/4a/22/2681d602.jpg","nickname":"林晓斌","note":"","ucode":"CDE42D44F26240","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":429893,"discussion_content":"就是长度定义的限制。 比如整型最大值是2的31次方，长整型是2的63次方","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1542853047,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":41750,"user_name":"吕","can_delete":false,"product_type":"c1","uid":1210890,"ip_address":"","ucode":"8F08E2CB81C4C3","user_header":"https://static001.geekbang.org/account/avatar/00/12/7a/0a/0ce5c232.jpg","comment_is_top":false,"comment_ctime":1542848700,"is_pvip":false,"replies":[{"id":"14980","content":"其实更重要的原因是不定长…一开始不知道要开多大的数组，每个值后面的item个数也不同","user_name":"作者回复","user_name_real":"林晓斌","uid":"1264162","ctime":1542853355,"ip_address":"","comment_id":41750,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1542848700","product_id":100020801,"comment_content":"哈希表这种索引模型，为什么数组后面会拉出一个链表而不是数组呢？是不是就是因为链表的插入比数组的时间复杂度要低？","like_count":0,"discussions":[{"author":{"id":1264162,"avatar":"https://static001.geekbang.org/account/avatar/00/13/4a/22/2681d602.jpg","nickname":"林晓斌","note":"","ucode":"CDE42D44F26240","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":429886,"discussion_content":"其实更重要的原因是不定长…一开始不知道要开多大的数组，每个值后面的item个数也不同","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1542853355,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":41738,"user_name":"小雨淅淅","can_delete":false,"product_type":"c1","uid":1100392,"ip_address":"","ucode":"432DADC4073C06","user_header":"https://static001.geekbang.org/account/avatar/00/10/ca/68/a0061ab9.jpg","comment_is_top":false,"comment_ctime":1542847771,"is_pvip":true,"discussion_count":1,"race_medal":0,"score":"1542847771","product_id":100020801,"comment_content":"如果一张表只有普通索引没有主键索引就不会有回表的操作了吧，这样的话查询的流程是怎么样的呢？","like_count":0,"discussions":[{"author":{"id":1065351,"avatar":"https://static001.geekbang.org/account/avatar/00/10/41/87/d26efb2e.jpg","nickname":"SuperSnow","note":"","ucode":"84C89AA8083E6A","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":132285,"discussion_content":"会产生一个默认的主键 row id","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1578894639,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":41681,"user_name":"简白","can_delete":false,"product_type":"c1","uid":1043215,"ip_address":"","ucode":"6FEF61822B7355","user_header":"https://static001.geekbang.org/account/avatar/00/0f/eb/0f/f2803e83.jpg","comment_is_top":false,"comment_ctime":1542822484,"is_pvip":false,"replies":[{"id":"15033","content":"虽然SSD已经很快了，不过也很少有系统这么用","user_name":"作者回复","user_name_real":"林晓斌","uid":"1264162","ctime":1542876717,"ip_address":"","comment_id":41681,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1542822484","product_id":100020801,"comment_content":"磁盘数据块大小由什么决定呢？ssd硬盘是否可以用二叉树来做索引呢？","like_count":0,"discussions":[{"author":{"id":1264162,"avatar":"https://static001.geekbang.org/account/avatar/00/13/4a/22/2681d602.jpg","nickname":"林晓斌","note":"","ucode":"CDE42D44F26240","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":429876,"discussion_content":"虽然SSD已经很快了，不过也很少有系统这么用","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1542876717,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":41667,"user_name":"鼬","can_delete":false,"product_type":"c1","uid":1309124,"ip_address":"","ucode":"A5E1658D4F679A","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/dmy8r6lty2ODKKQVibxNiazIfia3k2ode2pS8GhzEzZFwROicNBDjqmqRWHynOg4TguoqSyHibsp41O6crOprgDxzjA/132","comment_is_top":false,"comment_ctime":1542817592,"is_pvip":false,"replies":[{"id":"15034","content":"还有指针消耗呢","user_name":"作者回复","user_name_real":"林晓斌","uid":"1264162","ctime":1542876766,"ip_address":"","comment_id":41667,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1542817592","product_id":100020801,"comment_content":"老师，我想问下“以 InnoDB 的一个整数字段索引为例，这个 N 差不多是1200”这个是怎么算的？我理解一个数据块大小为16K的话，一个整数大小为4个字节。谢谢","like_count":0,"discussions":[{"author":{"id":1264162,"avatar":"https://static001.geekbang.org/account/avatar/00/13/4a/22/2681d602.jpg","nickname":"林晓斌","note":"","ucode":"CDE42D44F26240","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":429873,"discussion_content":"还有指针消耗呢","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1542876766,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":41650,"user_name":"Nick","can_delete":false,"product_type":"c1","uid":1303145,"ip_address":"","ucode":"D453E42B9A8429","user_header":"https://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTIKa0PdjFnEpvGFBcED2P28ugPmwwRoCbeUfulpGEye8964F4nwChQyVfgVUia74TyDISvXTYJfQpA/132","comment_is_top":false,"comment_ctime":1542813656,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1542813656","product_id":100020801,"comment_content":"重建二级索引可以先新建，再删除老的，只有mdl锁，对业务基本无影响; 作为dba，拒绝重建主键😄   有两个疑问: 对于b＋树索引，如何确定 根节点，如何确定二级节点？一般情况下，建议单个表上索引不超过多少个，增加一个索引对插入效率降低多少，有木有经验值啊？感谢丁奇老师，68花的太值啦","like_count":0},{"had_liked":false,"id":41637,"user_name":"godba","can_delete":false,"product_type":"c1","uid":1303127,"ip_address":"","ucode":"E8EC95D46A669B","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/DYAIOgq83eqbvgoXt1DUp556dUvAibic0VD8koczxG84hfKwUWVzUz72luuR0Dib56RwjkBm2onEYrobUuxjjOiaAQ/132","comment_is_top":false,"comment_ctime":1542812770,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1542812770","product_id":100020801,"comment_content":"哈哈，以后要配合脑图学习了，干货太多，容易忘","like_count":0},{"had_liked":false,"id":41621,"user_name":"owen00sun","can_delete":false,"product_type":"c1","uid":1152231,"ip_address":"","ucode":"2E9D0435176800","user_header":"https://static001.geekbang.org/account/avatar/00/11/94/e7/d7c803d9.jpg","comment_is_top":false,"comment_ctime":1542812000,"is_pvip":false,"replies":[{"id":"14933","content":"分析得不错","user_name":"作者回复","user_name_real":"林晓斌","uid":"1264162","ctime":1542812925,"ip_address":"","comment_id":41621,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1542812000","product_id":100020801,"comment_content":"分库分表场景下，一定需要表里的某一个字段来映射到具体某一张表，例如有4个库共32张表，使用userId作为分表字段，配置userId % 32 = N 表示映射到具体某张表后，对该表的操作和普通的单表操作就一样了，索引的建立也是以单表为基础的。自增主键这个，通常是有统一的ID分配器控制，这样保证32张表的ID都不同，具体分配算法依据不同的中间件来，例如阿里的TDDL。单表的自增主键同样会建立聚簇索引。","like_count":0,"discussions":[{"author":{"id":1264162,"avatar":"https://static001.geekbang.org/account/avatar/00/13/4a/22/2681d602.jpg","nickname":"林晓斌","note":"","ucode":"CDE42D44F26240","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":429859,"discussion_content":"分析得不错","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1542812925,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":41617,"user_name":"吃西瓜不吐籽","can_delete":false,"product_type":"c1","uid":1195123,"ip_address":"","ucode":"D5409892361CC0","user_header":"https://static001.geekbang.org/account/avatar/00/12/3c/73/a1558528.jpg","comment_is_top":false,"comment_ctime":1542811712,"is_pvip":false,"replies":[{"id":"14937","content":"Uuid不是递增顺序，可以就直接用递增主键。是说递增主键本身会冲突吗？可以设置自增主键的步长，比如步长未2，这样一个奇数一个偶数","user_name":"作者回复","user_name_real":"林晓斌","uid":"1264162","ctime":1542813246,"ip_address":"","comment_id":41617,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1542811712","product_id":100020801,"comment_content":"自增主键我有这样一个疑惑，拿爬虫来说，数据库Ａ的ａ表会保存爬虫抓到的一部分数据，数据库Ｂ的ｂ表也会保存爬虫抓到的一部分数据，都是同一个爬虫的数据，数据类型相同，数据不同，这样就会出现ａ表主键和ｂ表主键相同的情况，但是他们的数据并不相同，这样的话如何将ａ表和ｂ表的数据有效的合并呢（不使用用脚本读出数据，再重新插入）？我平时用的是postgresql,导数据时就会出现冲突，目前是将主键更改为了uuid。","like_count":0,"discussions":[{"author":{"id":1264162,"avatar":"https://static001.geekbang.org/account/avatar/00/13/4a/22/2681d602.jpg","nickname":"林晓斌","note":"","ucode":"CDE42D44F26240","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":429857,"discussion_content":"Uuid不是递增顺序，可以就直接用递增主键。是说递增主键本身会冲突吗？可以设置自增主键的步长，比如步长未2，这样一个奇数一个偶数","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1542813246,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":41614,"user_name":"J!","can_delete":false,"product_type":"c1","uid":1305003,"ip_address":"","ucode":"71C946119B59D1","user_header":"https://static001.geekbang.org/account/avatar/00/13/e9/ab/37903736.jpg","comment_is_top":false,"comment_ctime":1542811537,"is_pvip":false,"replies":[{"id":"14934","content":"按照索引遍历的顺序，这样不用再排序","user_name":"作者回复","user_name_real":"林晓斌","uid":"1264162","ctime":1542812956,"ip_address":"","comment_id":41614,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1542811537","product_id":100020801,"comment_content":"查询出来的结果集默认是有序的吗，还是按使用索引的正序？","like_count":0,"discussions":[{"author":{"id":1264162,"avatar":"https://static001.geekbang.org/account/avatar/00/13/4a/22/2681d602.jpg","nickname":"林晓斌","note":"","ucode":"CDE42D44F26240","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":429856,"discussion_content":"按照索引遍历的顺序，这样不用再排序","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1542812956,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":41608,"user_name":"在路上","can_delete":false,"product_type":"c1","uid":1143372,"ip_address":"","ucode":"335960F683C23C","user_header":"https://static001.geekbang.org/account/avatar/00/11/72/4c/4d636a23.jpg","comment_is_top":false,"comment_ctime":1542811220,"is_pvip":false,"replies":[{"id":"14935","content":"没明白，图中画的是数字呀","user_name":"作者回复","user_name_real":"林晓斌","uid":"1264162","ctime":1542813041,"ip_address":"","comment_id":41608,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1542811220","product_id":100020801,"comment_content":"ID和K为什么不能直接搞个数据库表来演示，分两个图，这不是加大理解难度吗？我看了几遍，还是无法看懂文章中要表达的意思，建议最好还是按数字的方式来表达。","like_count":0,"discussions":[{"author":{"id":1264162,"avatar":"https://static001.geekbang.org/account/avatar/00/13/4a/22/2681d602.jpg","nickname":"林晓斌","note":"","ucode":"CDE42D44F26240","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":429854,"discussion_content":"没明白，图中画的是数字呀","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1542813041,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":41597,"user_name":"封建的风","can_delete":false,"product_type":"c1","uid":1302600,"ip_address":"","ucode":"811C24F093AF0F","user_header":"https://static001.geekbang.org/account/avatar/00/13/e0/48/3d72e81c.jpg","comment_is_top":false,"comment_ctime":1542810646,"is_pvip":false,"replies":[{"id":"14938","content":"是的，不过如果索引定义太长就可能打破这个结论哦","user_name":"作者回复","user_name_real":"林晓斌","uid":"1264162","ctime":1542813295,"ip_address":"","comment_id":41597,"utype":1}],"discussion_count":2,"race_medal":0,"score":"1542810646","product_id":100020801,"comment_content":"int类每个page能放1200个key.那么3层用3个page就能达到1200的三次方数据行数，<br>那么如果是page采用的16k，或者缩小key长度，层高也很难增加了，一般表很难达到4层高度了。","like_count":0,"discussions":[{"author":{"id":1264162,"avatar":"https://static001.geekbang.org/account/avatar/00/13/4a/22/2681d602.jpg","nickname":"林晓斌","note":"","ucode":"CDE42D44F26240","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":429852,"discussion_content":"是的，不过如果索引定义太长就可能打破这个结论哦","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1542813295,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1827943,"avatar":"http://thirdwx.qlogo.cn/mmopen/vi_32/P5lTnAkviacPGu5S5XJQGQdTpvkSjAVU9Nu2EYicIpMAjiaNP8aXDtfcIHicSnHw2fVIoqTWGGg48rZVzcficUlbgmw/132","nickname":"崔经刚","note":"","ucode":"207FDF850860C4","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":289144,"discussion_content":"没看明白这个留言。这里指的是，树高为3的三叉树，每个节点为一个page？","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1594004301,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":41593,"user_name":"kghch","can_delete":false,"product_type":"c1","uid":1313334,"ip_address":"","ucode":"E7E9DD543379B7","user_header":"http://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTIJKia3LYh56vXYniaOuY75PfsIAznb07H0WL0UDrceu4KGJFB3Xia2HAq1gw5KfaSse3kl2MHek79BQ/132","comment_is_top":false,"comment_ctime":1542810389,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1542810389","product_id":100020801,"comment_content":"重建主键索引，会触发所有非主键索引的重建，是个重量级操作。<br>重建非主键索引，只会影响其自己。但对数据库性能消耗较大。","like_count":0},{"had_liked":false,"id":41580,"user_name":"Cutler","can_delete":false,"product_type":"c1","uid":1228136,"ip_address":"","ucode":"2EDECFE039845B","user_header":"https://static001.geekbang.org/account/avatar/00/12/bd/68/3fd6428d.jpg","comment_is_top":false,"comment_ctime":1542809485,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1542809485","product_id":100020801,"comment_content":"1.用主键查只用读一次磁盘<br>2.非主键索引会回表","like_count":0},{"had_liked":false,"id":41561,"user_name":"oscarwin","can_delete":false,"product_type":"c1","uid":1131956,"ip_address":"","ucode":"492430BA342593","user_header":"https://static001.geekbang.org/account/avatar/00/11/45/b4/ec66d499.jpg","comment_is_top":false,"comment_ctime":1542806611,"is_pvip":false,"replies":[{"id":"14939","content":"User_id业务有要求必须是唯一索引的话，你这种情节就直接用来当主键吧","user_name":"作者回复","user_name_real":"林晓斌","uid":"1264162","ctime":1542813437,"ip_address":"","comment_id":41561,"utype":1}],"discussion_count":2,"race_medal":0,"score":"1542806611","product_id":100020801,"comment_content":"有一张用户表，user_id是唯一标识，user_id是随机的字符串，user_id长度也不等，表大概10来个字段。只需要以user_id为索引进行查询。如果以user_id建立主键索引，考虑数据量达到千万级别，这种情况下插入性能会比自增主键大概会差多少。数据量大了以后，本身以字符串做主键是不是也会成为瓶颈。望老师解答！","like_count":0,"discussions":[{"author":{"id":1264162,"avatar":"https://static001.geekbang.org/account/avatar/00/13/4a/22/2681d602.jpg","nickname":"林晓斌","note":"","ucode":"CDE42D44F26240","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":429843,"discussion_content":"User_id业务有要求必须是唯一索引的话，你这种情节就直接用来当主键吧","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1542813437,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1237583,"avatar":"https://static001.geekbang.org/account/avatar/00/12/e2/4f/df01f65e.jpg","nickname":"Danfēng","note":"","ucode":"E5B3451F1D0441","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":280771,"discussion_content":"这是要要考虑userId是否是有序性的了，","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1591610159,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":41553,"user_name":"喔～","can_delete":false,"product_type":"c1","uid":1172171,"ip_address":"","ucode":"FE2C87CE6FEBD8","user_header":"https://static001.geekbang.org/account/avatar/00/11/e2/cb/6bc95e09.jpg","comment_is_top":false,"comment_ctime":1542804196,"is_pvip":false,"replies":[{"id":"14942","content":"其实这两种都有。oracle里就两种都支持","user_name":"作者回复","user_name_real":"林晓斌","uid":"1264162","ctime":1542813874,"ip_address":"","comment_id":41553,"utype":1}],"discussion_count":3,"race_medal":0,"score":"1542804196","product_id":100020801,"comment_content":"老师，请教个问题，主键索引的叶子节点存放的是整条数据，还是数据指针，也是时间与空间的权衡，<br>业界普遍做法是怎样的呢？","like_count":0,"discussions":[{"author":{"id":1264162,"avatar":"https://static001.geekbang.org/account/avatar/00/13/4a/22/2681d602.jpg","nickname":"林晓斌","note":"","ucode":"CDE42D44F26240","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":429839,"discussion_content":"其实这两种都有。oracle里就两种都支持","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1542813874,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1397315,"avatar":"https://static001.geekbang.org/account/avatar/00/15/52/43/25209d6c.jpg","nickname":"无边丝雨","note":"","ucode":"B2AD1EAB9E9308","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":21100,"discussion_content":"叶子结点存放的到底是一页数据还是一行记录呀","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1569421650,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":1,"child_discussions":[{"author":{"id":1065351,"avatar":"https://static001.geekbang.org/account/avatar/00/10/41/87/d26efb2e.jpg","nickname":"SuperSnow","note":"","ucode":"84C89AA8083E6A","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":1397315,"avatar":"https://static001.geekbang.org/account/avatar/00/15/52/43/25209d6c.jpg","nickname":"无边丝雨","note":"","ucode":"B2AD1EAB9E9308","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":132289,"discussion_content":"一页","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1578895330,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":21100,"ip_address":""},"score":132289,"extra":""}]}]},{"had_liked":false,"id":41537,"user_name":"404  had found","can_delete":false,"product_type":"c1","uid":1025939,"ip_address":"","ucode":"BF6983EB50AC74","user_header":"https://static001.geekbang.org/account/avatar/00/0f/a7/93/62f03467.jpg","comment_is_top":false,"comment_ctime":1542802869,"is_pvip":false,"replies":[{"id":"14940","content":"会，但是没关系，代价其实还好。<br>Join 如果能够正确使用索引，其实还不错的。<br>这样说不太清楚， 其实有order by 也未必需要排序。后面有一篇专门讲排序","user_name":"作者回复","user_name_real":"林晓斌","uid":"1264162","ctime":1542813588,"ip_address":"","comment_id":41537,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1542802869","product_id":100020801,"comment_content":"如果一个表很大，有100W级别，有个字段需要做排序，按理说我们应该加上索引加快排序，如果该字段又会被修改，那会不会因为值的改变导致树节点分裂排序，导致数据库性能加大？还有连表查询好还是单表查询然后循环体再继续查询合适呢？如果2个表都很大加上排序需求很容易有filesort,该如何处理呢","like_count":0,"discussions":[{"author":{"id":1264162,"avatar":"https://static001.geekbang.org/account/avatar/00/13/4a/22/2681d602.jpg","nickname":"林晓斌","note":"","ucode":"CDE42D44F26240","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":429832,"discussion_content":"会，但是没关系，代价其实还好。\nJoin 如果能够正确使用索引，其实还不错的。\n这样说不太清楚， 其实有order by 也未必需要排序。后面有一篇专门讲排序","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1542813588,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":41496,"user_name":"TQ","can_delete":false,"product_type":"c1","uid":1236654,"ip_address":"","ucode":"D6949E5282AD90","user_header":"https://static001.geekbang.org/account/avatar/00/12/de/ae/2f95fa6b.jpg","comment_is_top":false,"comment_ctime":1542794214,"is_pvip":false,"replies":[{"id":"14923","content":"我本意是R1就是整行数据，抱歉引起歧义哈","user_name":"作者回复","user_name_real":"林晓斌","uid":"1264162","ctime":1542801361,"ip_address":"","comment_id":41496,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1542794214","product_id":100020801,"comment_content":"「图 4 InnoDB 的索引组织结构」左侧的主键索引树的叶子节点的内容，应该是(100, 1, R1), (200, 2, R2)... 吧？ <br>因为“主键索引的叶子节点存的是整行数据”，而图中左侧的主键索引树的叶子节点的内容为 (100, R1), (200, R2)... 没有体现出 k 值。","like_count":0,"discussions":[{"author":{"id":1264162,"avatar":"https://static001.geekbang.org/account/avatar/00/13/4a/22/2681d602.jpg","nickname":"林晓斌","note":"","ucode":"CDE42D44F26240","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":429821,"discussion_content":"我本意是R1就是整行数据，抱歉引起歧义哈","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1542801361,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":41455,"user_name":"fgdgtz","can_delete":false,"product_type":"c1","uid":1240401,"ip_address":"","ucode":"486CC4ACCC015C","user_header":"","comment_is_top":false,"comment_ctime":1542785702,"is_pvip":false,"replies":[{"id":"14945","content":"明天的，《索引下》你看完，应该能解答😄有问题再留言","user_name":"作者回复","user_name_real":"林晓斌","uid":"1264162","ctime":1542814744,"ip_address":"","comment_id":41455,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1542785702","product_id":100020801,"comment_content":"老师你好，我请问个有关索引的问题，我有个订单表 order 字段有 user_id(用户ID) ,status(订单状态,1:待付款，2：付款，4：失效，6：确认收货，7：结算),order_time(下单时间) ，业务需求上有根据&quot;全部&quot;,&quot;付款&quot;,&quot;结算&quot;,&quot;失效&quot;这几种状态分页获取用户的订单数据并根据下单时间排序,因为有涉及全部和根据状态查询，我是否应建两个类似这样的索引：user_id___status___create_time(针对状态查询)和user_id___create_time(针对获取全部查询)?建两个索引对更新数据与存储空间都有影响，而且两个索引也十分类似，如果只保留user_id___create_time,那根据某一状态查询时检测的数据可能过多，比如查失效单，有些用户最近的失效单在一个周前，分页查询一页10条失效单数据得检测几万数据，如果保留user_id___status___create_time，为了索引全用到那查询全部时就得麻烦的union all拼每个状态 比如分页第一页： select * from order tt  join (select t.id from ( (select  id,create_time from order where user_id = 1 and  status = 1 order by create_time desc LIMIT 0,10  ) union all  (select  id,create_time from order  where user_id = 1 and status = 4 order by create_time desc LIMIT 0,10  ) union all  (select  id,create_time from where user_id = 1 and status = 6 order by create_time desc LIMIT 0,10  )) as t order by t.create_time desc,t.id desc LIMIT 0,10) ts on ts.id=tt.id  order by create_time desc ，望老师能解答","like_count":0,"discussions":[{"author":{"id":1264162,"avatar":"https://static001.geekbang.org/account/avatar/00/13/4a/22/2681d602.jpg","nickname":"林晓斌","note":"","ucode":"CDE42D44F26240","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":429807,"discussion_content":"明天的，《索引下》你看完，应该能解答😄有问题再留言","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1542814744,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":41449,"user_name":"流逝的年华、","can_delete":false,"product_type":"c1","uid":1303311,"ip_address":"","ucode":"58BF54BFAB6581","user_header":"https://static001.geekbang.org/account/avatar/00/13/e3/0f/5f906f3a.jpg","comment_is_top":false,"comment_ctime":1542783791,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1542783791","product_id":100020801,"comment_content":"打卡","like_count":0},{"had_liked":false,"id":41445,"user_name":"alvin li","can_delete":false,"product_type":"c1","uid":1276344,"ip_address":"","ucode":"33DA2C48CE9F97","user_header":"https://static001.geekbang.org/account/avatar/00/13/79/b8/eeb50705.jpg","comment_is_top":false,"comment_ctime":1542781987,"is_pvip":false,"replies":[{"id":"14875","content":"后面有一篇讲唯一索引和普通索引的选择，会讲到写入优化","user_name":"作者回复","user_name_real":"林晓斌","uid":"1264162","ctime":1542783003,"ip_address":"","comment_id":41445,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1542781987","product_id":100020801,"comment_content":"有个疑问：一般建议使用自增主键，这样对于主键索引来说是顺序写，写效率和空间利用率会大很多，但是对于二级索引，还是没法避免随机写带来的页分裂和空间率用低的问题，请问针对二级索引有什么优化策略吗？还有就是希望对联合索引和坐下讲解哈。","like_count":0,"discussions":[{"author":{"id":1264162,"avatar":"https://static001.geekbang.org/account/avatar/00/13/4a/22/2681d602.jpg","nickname":"林晓斌","note":"","ucode":"CDE42D44F26240","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":429804,"discussion_content":"后面有一篇讲唯一索引和普通索引的选择，会讲到写入优化","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1542783003,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":41431,"user_name":"Na小Na","can_delete":false,"product_type":"c1","uid":1234044,"ip_address":"","ucode":"C49D9AE0A15207","user_header":"https://static001.geekbang.org/account/avatar/00/12/d4/7c/7e8c59f7.jpg","comment_is_top":false,"comment_ctime":1542779607,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1542779607","product_id":100020801,"comment_content":"老师说普通索引里存的是主键，那么如果一个表没有主键，只有普通索引，那索引里存的是啥？","like_count":0},{"had_liked":false,"id":41424,"user_name":"lfn","can_delete":false,"product_type":"c1","uid":1026593,"ip_address":"","ucode":"2E1558C6A12A89","user_header":"https://static001.geekbang.org/account/avatar/00/0f/aa/21/6c3ba9af.jpg","comment_is_top":false,"comment_ctime":1542779303,"is_pvip":false,"replies":[{"id":"14878","content":"索引要主动创建的。<br><br>自动判断再加索引，这个是最近热门的“self driven ”数据库，你的问题很潮哦😄<br><br>不过MySQL 还没支持","user_name":"作者回复","user_name_real":"林晓斌","uid":"1264162","ctime":1542783162,"ip_address":"","comment_id":41424,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1542779303","product_id":100020801,"comment_content":"emmm,我的意思是索引是什么时候建的？是新建表的时候就建？还是每条查询语句中，对于where后面的条件涉及到的字段，不存在索引就建？","like_count":0,"discussions":[{"author":{"id":1264162,"avatar":"https://static001.geekbang.org/account/avatar/00/13/4a/22/2681d602.jpg","nickname":"林晓斌","note":"","ucode":"CDE42D44F26240","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":429797,"discussion_content":"索引要主动创建的。\n\n自动判断再加索引，这个是最近热门的“self driven ”数据库，你的问题很潮哦😄\n\n不过MySQL 还没支持","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1542783162,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":41401,"user_name":"lfn","can_delete":false,"product_type":"c1","uid":1026593,"ip_address":"","ucode":"2E1558C6A12A89","user_header":"https://static001.geekbang.org/account/avatar/00/0f/aa/21/6c3ba9af.jpg","comment_is_top":false,"comment_ctime":1542773243,"is_pvip":false,"replies":[{"id":"14839","content":"如果全部没有索引可用，就只好全表扫描咯","user_name":"作者回复","user_name_real":"林晓斌","uid":"1264162","ctime":1542779177,"ip_address":"","comment_id":41401,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1542773243","product_id":100020801,"comment_content":"请问下老师，where查询后面的条件语句，一定会对相应字段建立索引么？","like_count":0,"discussions":[{"author":{"id":1264162,"avatar":"https://static001.geekbang.org/account/avatar/00/13/4a/22/2681d602.jpg","nickname":"林晓斌","note":"","ucode":"CDE42D44F26240","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":429791,"discussion_content":"如果全部没有索引可用，就只好全表扫描咯","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1542779177,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":41396,"user_name":"HwangZHen","can_delete":false,"product_type":"c1","uid":1215449,"ip_address":"","ucode":"E2BC782AFEF742","user_header":"https://static001.geekbang.org/account/avatar/00/12/8b/d9/c03fbd11.jpg","comment_is_top":false,"comment_ctime":1542772566,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1542772566","product_id":100020801,"comment_content":"课后题理解：<br>重建主键索引的语句应该写在同一条 alter table T drop primary key,add primary key(id);  如果分开写很可能在建的时候就主键冲突了。<br><br>","like_count":0},{"had_liked":false,"id":41389,"user_name":"ʸᵉ ᶠᵉᶮᵍ","can_delete":false,"product_type":"c1","uid":1280969,"ip_address":"","ucode":"BD6B8B01F78A21","user_header":"https://static001.geekbang.org/account/avatar/00/13/8b/c9/4281a2a3.jpg","comment_is_top":false,"comment_ctime":1542772083,"is_pvip":false,"discussion_count":1,"race_medal":0,"score":"1542772083","product_id":100020801,"comment_content":"如果要修改主键索引的话,是得先把其他索引都删除后,然后在修改主键索引,然后在重新建立普通索引,因为普通索引指向的是主键索引,当主键索引有变动,那就得全部跟着变.老师我说的对吗?","like_count":0,"discussions":[{"author":{"id":1065351,"avatar":"https://static001.geekbang.org/account/avatar/00/10/41/87/d26efb2e.jpg","nickname":"SuperSnow","note":"","ucode":"84C89AA8083E6A","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":132294,"discussion_content":"主键索引删除后，普通索引所指向的主键索引就失效了。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1578895608,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":41387,"user_name":"猿人谷","can_delete":false,"product_type":"c1","uid":1100149,"ip_address":"","ucode":"85106C7FB14C43","user_header":"https://static001.geekbang.org/account/avatar/00/10/c9/75/62ce2d69.jpg","comment_is_top":false,"comment_ctime":1542771875,"is_pvip":true,"replies":[{"id":"14842","content":"对你有帮助我就开心了😄","user_name":"作者回复","user_name_real":"林晓斌","uid":"1264162","ctime":1542779407,"ip_address":"","comment_id":41387,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1542771875","product_id":100020801,"comment_content":"这一讲看完，彻底涨知识了。","like_count":0,"discussions":[{"author":{"id":1264162,"avatar":"https://static001.geekbang.org/account/avatar/00/13/4a/22/2681d602.jpg","nickname":"林晓斌","note":"","ucode":"CDE42D44F26240","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":429787,"discussion_content":"对你有帮助我就开心了😄","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1542779407,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":41384,"user_name":"郭刚","can_delete":false,"product_type":"c1","uid":1292032,"ip_address":"","ucode":"22CB8ECE8E3DCA","user_header":"https://static001.geekbang.org/account/avatar/00/13/b7/00/12149f4e.jpg","comment_is_top":false,"comment_ctime":1542771544,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1542771544","product_id":100020801,"comment_content":"重建主键不合适，普通索引里面存的是key+主键，如果执行ALTER TABLE test DROP PRIMARY KEY;<br>在没有主键的情况下，数据库会默认创建一主键，待会重建完成。那就要把普通索引里面的值都要改二遍，效率极低。重建表更合适。","like_count":0},{"had_liked":false,"id":41376,"user_name":"super blue cat","can_delete":false,"product_type":"c1","uid":1078411,"ip_address":"","ucode":"27DBB28EF19AB3","user_header":"https://static001.geekbang.org/account/avatar/00/10/74/8b/840afbd8.jpg","comment_is_top":false,"comment_ctime":1542770597,"is_pvip":false,"replies":[{"id":"14844","content":"正文有提到选择主键索引的场景建议哈。 <br>嗯，你创建时表指定主键，innodb 就不用自己加row_id了了","user_name":"作者回复","user_name_real":"林晓斌","uid":"1264162","ctime":1542779558,"ip_address":"","comment_id":41376,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1542770597","product_id":100020801,"comment_content":"没记错的话，删除索引和添加索引都会锁表的，且重建索引也很吃io 添加删除索引最好是表空闲的时候做 不知道能不能回答到点上，基于这两个问题 请教一下老师 什么业务场景需要重考主键索引呢？ 建表时指定了主键索引，隐藏的row id还会存在吗？😂","like_count":0,"discussions":[{"author":{"id":1264162,"avatar":"https://static001.geekbang.org/account/avatar/00/13/4a/22/2681d602.jpg","nickname":"林晓斌","note":"","ucode":"CDE42D44F26240","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":429782,"discussion_content":"正文有提到选择主键索引的场景建议哈。 \n嗯，你创建时表指定主键，innodb 就不用自己加row_id了了","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1542779558,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":41366,"user_name":"倪大人","can_delete":false,"product_type":"c1","uid":1193052,"ip_address":"","ucode":"4798D69F3E86FB","user_header":"https://static001.geekbang.org/account/avatar/00/12/34/5c/6b4757a0.jpg","comment_is_top":false,"comment_ctime":1542769546,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1542769546","product_id":100020801,"comment_content":"关于作业，在本地试了下，发现保留k的索引删除primary key，之后再执行查询k的索引还是生效的。<br><br>猜测可能是删除primary key之后，k索引树里叶子节点存储的值不再是id，搜了一下，可能是https:&#47;&#47;blog.jcole.us&#47;2013&#47;05&#47;02&#47;how-does-innodb-behave-without-a-primary-key&#47;这篇文章里提到的implicit Row IDs？","like_count":0},{"had_liked":false,"id":41361,"user_name":"rabbitlog","can_delete":false,"product_type":"c1","uid":1002916,"ip_address":"","ucode":"6771E633362807","user_header":"https://static001.geekbang.org/account/avatar/00/0f/4d/a4/78ccca46.jpg","comment_is_top":false,"comment_ctime":1542768770,"is_pvip":false,"replies":[{"id":"14848","content":"回答不错。<br>后面这个问额我们会在《如何正确地回收空间》说到","user_name":"作者回复","user_name_real":"林晓斌","uid":"1264162","ctime":1542779895,"ip_address":"","comment_id":41361,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1542768770","product_id":100020801,"comment_content":"先回答一下文章的问题，重建普通索引，这个影响不大，只是会删除索引，然后遍历数据库数据，然后重建。重建主键索引稍微麻烦一些，根据文档： https:&#47;&#47;dev.mysql.com&#47;doc&#47;refman&#47;8.0&#47;en&#47;innodb-index-types.html  InnoDB 是需要一个主键索引的，所以drop primary index，会涉及到两个部分，增加一个隐藏列，生成新的主键索引，修改其他索引的对应的主键索引，这个操作对于整个数据库消耗都比较大，所以不建议这么做。<br>不过另外一个问题是： 为什么会重建索引，难道是觉得索引占的空间太大了？ 是不是可以及时优化？这个时候是不是 optimize 就可以了？ 另外无论是主键索引还是普通索引，都不建议online操作，普通索引drop 掉之后，当时来的查询一下子就会因为没有索引，出现大量的访问磁盘，整个数据库都被这些慢查询占了，建议是新建一个类似的索引，然后再drop 索引","like_count":0,"discussions":[{"author":{"id":1264162,"avatar":"https://static001.geekbang.org/account/avatar/00/13/4a/22/2681d602.jpg","nickname":"林晓斌","note":"","ucode":"CDE42D44F26240","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":429776,"discussion_content":"回答不错。\n后面这个问额我们会在《如何正确地回收空间》说到","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1542779895,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":41359,"user_name":"李志博","can_delete":false,"product_type":"c1","uid":1009109,"ip_address":"","ucode":"F3C72573B3C112","user_header":"https://static001.geekbang.org/account/avatar/00/0f/65/d5/88beb15a.jpg","comment_is_top":false,"comment_ctime":1542768616,"is_pvip":false,"replies":[{"id":"14849","content":"是，但是身份证长19位，<br><br>如果你还有别的索引，比如按照名字查、按照城市查这种，就要考虑主键值在其他索引的占用空间。<br><br>还有，随机插入速度慢些。","user_name":"作者回复","user_name_real":"林晓斌","uid":"1264162","ctime":1542780031,"ip_address":"","comment_id":41359,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1542768616","product_id":100020801,"comment_content":"老师,我有个问题,假如说我的查询都是根据身份证号查询的话,如果身份证号是主键索引,不就不用回表了嘛,这样性能会更高吧?","like_count":0,"discussions":[{"author":{"id":1264162,"avatar":"https://static001.geekbang.org/account/avatar/00/13/4a/22/2681d602.jpg","nickname":"林晓斌","note":"","ucode":"CDE42D44F26240","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":429775,"discussion_content":"是，但是身份证长19位，\n\n如果你还有别的索引，比如按照名字查、按照城市查这种，就要考虑主键值在其他索引的占用空间。\n\n还有，随机插入速度慢些。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1542780031,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":41358,"user_name":"帆帆帆帆帆帆帆帆","can_delete":false,"product_type":"c1","uid":1304645,"ip_address":"","ucode":"0CB732FFD07463","user_header":"https://static001.geekbang.org/account/avatar/00/13/e8/45/c58cb283.jpg","comment_is_top":false,"comment_ctime":1542768615,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1542768615","product_id":100020801,"comment_content":"@monkay 因为查找一个索引值的时候都是从根节点开始，然后分支节点，最后页节点。所以树高20的时候，你要查找一个索引值最少都要读20个数据块。","like_count":0},{"had_liked":false,"id":41353,"user_name":"Epic","can_delete":false,"product_type":"c1","uid":1295508,"ip_address":"","ucode":"34D7CBA6C8C04D","user_header":"https://static001.geekbang.org/account/avatar/00/13/c4/94/56d365ea.jpg","comment_is_top":false,"comment_ctime":1542768056,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1542768056","product_id":100020801,"comment_content":"OPTIMIZE TABLE重建表，优化","like_count":0},{"had_liked":false,"id":41352,"user_name":"饼子","can_delete":false,"product_type":"c1","uid":1085953,"ip_address":"","ucode":"981A44836A5216","user_header":"https://static001.geekbang.org/account/avatar/00/10/92/01/c723d180.jpg","comment_is_top":false,"comment_ctime":1542767821,"is_pvip":false,"replies":[{"id":"14818","content":"讲对了一半呢：）","user_name":"作者回复","user_name_real":"林晓斌","uid":"1264162","ctime":1542769021,"ip_address":"","comment_id":41352,"utype":1}],"discussion_count":2,"race_medal":0,"score":"1542767821","product_id":100020801,"comment_content":"感觉最好的方法就是只需要重建主键索引，因为其它索引会维护主键索引的引用，重建主键索引后，其它索引会被动更新！<br>","like_count":0,"discussions":[{"author":{"id":1264162,"avatar":"https://static001.geekbang.org/account/avatar/00/13/4a/22/2681d602.jpg","nickname":"林晓斌","note":"","ucode":"CDE42D44F26240","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":429774,"discussion_content":"讲对了一半呢：）","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1542769021,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1065351,"avatar":"https://static001.geekbang.org/account/avatar/00/10/41/87/d26efb2e.jpg","nickname":"SuperSnow","note":"","ucode":"84C89AA8083E6A","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":132297,"discussion_content":"其他索引不会被动更新。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1578895744,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":41349,"user_name":"向前走","can_delete":false,"product_type":"c1","uid":1112651,"ip_address":"","ucode":"8956E92DCEFB60","user_header":"https://static001.geekbang.org/account/avatar/00/10/fa/4b/c385f755.jpg","comment_is_top":false,"comment_ctime":1542767482,"is_pvip":false,"replies":[{"id":"14817","content":"不是的，即使是随机顺序插入的索引也是，查询也是能用上，也是能提升查询性能的。 只是插入数据的时候维护代价比自增主键大","user_name":"作者回复","user_name_real":"林晓斌","uid":"1264162","ctime":1542768996,"ip_address":"","comment_id":41349,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1542767482","product_id":100020801,"comment_content":"老师您好<br>      关于数据库主键的建立文章中提到一般是自增较好,我的理解是主要是索引采用了树的结构,主要是索引列的有序性,如果用uuid或其它string类型做主键,是否无法进行索引优化呢,或者说索引会失效呢,分布式系统中是否还是应该采用类似于snowflake来保证主键唯一的同时又具备索引优化的条件,而不应该使用uuid呢,之前的一个系统中,在存储订单的场景中,使用了订单表order和订单明细表order_detail,order_detail表通过关联order表的主键order_id,order表和order_detail表均为uuid生成,这样当数据量很大的时候(目前已经order_detail表有200多万条记录,order表大于10万记录,且不断递增),是否无法进行相关索引优化提高查询效率呢,主要报表统计时查询很慢,订单明细表是否应该通过订单号order_number(长整型数字)来关联从而索引列建在订单号上呢?小白求教,感谢","like_count":0,"discussions":[{"author":{"id":1264162,"avatar":"https://static001.geekbang.org/account/avatar/00/13/4a/22/2681d602.jpg","nickname":"林晓斌","note":"","ucode":"CDE42D44F26240","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":429773,"discussion_content":"不是的，即使是随机顺序插入的索引也是，查询也是能用上，也是能提升查询性能的。 只是插入数据的时候维护代价比自增主键大","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1542768996,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":41347,"user_name":"Geek_ye","can_delete":false,"product_type":"c1","uid":1287619,"ip_address":"","ucode":"55FFD828A981A2","user_header":"https://static001.geekbang.org/account/avatar/00/13/a5/c3/b048c0d6.jpg","comment_is_top":false,"comment_ctime":1542767132,"is_pvip":false,"replies":[{"id":"14819","content":"因为我们说不论是删除数据，还是增删过程都有可能导致数据页的空间利用率降低，所以有重建需求哦","user_name":"作者回复","user_name_real":"林晓斌","uid":"1264162","ctime":1542769129,"ip_address":"","comment_id":41347,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1542767132","product_id":100020801,"comment_content":"目前我们在初级阶段设置主键和索引一般就是id，也有使用到例如手机号或者身份证号，银行卡号等作为辅助索引，因为数据量小，几乎都没感觉到有什么区别，通过老师对哈希表，N叉树的点播，课下再去补充了相关的知识点，对一张表的执行逻辑和更快节约时间有了进一步认识，对于优化数据库有用，只不过重建这一块还是没懂，我们操作数据库行为时通常没写重建这个动作啊。","like_count":0,"discussions":[{"author":{"id":1264162,"avatar":"https://static001.geekbang.org/account/avatar/00/13/4a/22/2681d602.jpg","nickname":"林晓斌","note":"","ucode":"CDE42D44F26240","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":429771,"discussion_content":"因为我们说不论是删除数据，还是增删过程都有可能导致数据页的空间利用率降低，所以有重建需求哦","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1542769129,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":41333,"user_name":"nimil","can_delete":false,"product_type":"c1","uid":1197925,"ip_address":"","ucode":"19933068972746","user_header":"https://static001.geekbang.org/account/avatar/00/12/47/65/cce8eb34.jpg","comment_is_top":false,"comment_ctime":1542766142,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1542766142","product_id":100020801,"comment_content":"这讲看完有种涨姿势的感觉","like_count":0},{"had_liked":false,"id":41329,"user_name":"Lugyedo","can_delete":false,"product_type":"c1","uid":1011793,"ip_address":"","ucode":"EB5E456B638E70","user_header":"https://static001.geekbang.org/account/avatar/00/0f/70/51/f1825adb.jpg","comment_is_top":false,"comment_ctime":1542765992,"is_pvip":true,"discussion_count":1,"race_medal":0,"score":"1542765992","product_id":100020801,"comment_content":"自增的主键索引每次都是递增插入的，不需要重建吧；普通索引插入新数据的时候就会重建吧","like_count":0,"discussions":[{"author":{"id":1065351,"avatar":"https://static001.geekbang.org/account/avatar/00/10/41/87/d26efb2e.jpg","nickname":"SuperSnow","note":"","ucode":"84C89AA8083E6A","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":132299,"discussion_content":"主键索引要是有删除呢？是不是有页合并的情况发生，也会有页利用率的情况吧。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1578895895,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":41324,"user_name":"马上想好","can_delete":false,"product_type":"c1","uid":1193316,"ip_address":"","ucode":"053C41AE647E30","user_header":"https://static001.geekbang.org/account/avatar/00/12/35/64/1ad5530d.jpg","comment_is_top":false,"comment_ctime":1542765773,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1542765773","product_id":100020801,"comment_content":"期待下一篇。","like_count":0},{"had_liked":false,"id":41322,"user_name":"Goal","can_delete":false,"product_type":"c1","uid":1307012,"ip_address":"","ucode":"C337CD4C7E07B0","user_header":"https://static001.geekbang.org/account/avatar/00/13/f1/84/7d21bd9e.jpg","comment_is_top":false,"comment_ctime":1542765440,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1542765440","product_id":100020801,"comment_content":"这节读起来有点费劲，说明我对索引这块知识储备不足， 还是先看一下各种索引的分类特点以及，innodb引擎相关的B+树的概念","like_count":0},{"had_liked":false,"id":41319,"user_name":"jeffery","can_delete":false,"product_type":"c1","uid":1219972,"ip_address":"","ucode":"35E2DAA386FB86","user_header":"https://static001.geekbang.org/account/avatar/00/12/9d/84/171b2221.jpg","comment_is_top":false,"comment_ctime":1542765313,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1542765313","product_id":100020801,"comment_content":"干货十足！层次分明、原理透彻、跳表是mysql8.0新功能增加的吧、期待以后的干活","like_count":0},{"had_liked":false,"id":41313,"user_name":"Jason","can_delete":false,"product_type":"c1","uid":1308126,"ip_address":"","ucode":"7FFD6DFCE6EB36","user_header":"https://static001.geekbang.org/account/avatar/00/13/f5/de/c33e531e.jpg","comment_is_top":false,"comment_ctime":1542765149,"is_pvip":false,"replies":[{"id":"14854","content":"1. 这个“热访问”没关系的，我们就要他集中才好，写又顺序，读在内存。 不过你说的是不是“热点更新”…这是另外一个话题<br>2.  明天的文章会解决你说的回表问题，后面有篇文章专门讲count(*), 一下拖出两篇你这个是好问题👍🏿","user_name":"作者回复","user_name_real":"林晓斌","uid":"1264162","ctime":1542780559,"ip_address":"","comment_id":41313,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1542765149","product_id":100020801,"comment_content":"课程收获<br>基本上很清楚，但是有些问题<br>首先，主键要求顺序更好，否则产生页分裂，但是如果顺序，导致最高点的热访问，这该怎么权衡呢<br>其次，是身份证，一般where列都是，如果用二级索引，主键列短了，但是回表的代价会不会更大<br>还有一个，就是虽然有主键，select count(*)会慢很多，应该是索引组织表的缘故，不过不确定，来问一下<br>课后问题<br>二级索引，可以新建一个索引替换，以空间换时间，否则感觉要锁表<br>主键，总感觉不能动，二级索引都有依赖，感觉迁移到新表后替换更好<br>不过，有个疑问，本来二级索引会存储主键数据，依赖主键，但如果这个表本身没有主键，二级索引会依赖唯一键，普通索引等，但是后面建立的主键会有影响吗？是其他索引依赖它，还是它依赖唯一键呢<br>技术太菜，好多不懂(=_=)","like_count":0,"discussions":[{"author":{"id":1264162,"avatar":"https://static001.geekbang.org/account/avatar/00/13/4a/22/2681d602.jpg","nickname":"林晓斌","note":"","ucode":"CDE42D44F26240","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":429759,"discussion_content":"1. 这个“热访问”没关系的，我们就要他集中才好，写又顺序，读在内存。 不过你说的是不是“热点更新”…这是另外一个话题\n2.  明天的文章会解决你说的回表问题，后面有篇文章专门讲count(*), 一下拖出两篇你这个是好问题👍🏿","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1542780559,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":41312,"user_name":"大王拍我去巡山","can_delete":false,"product_type":"c1","uid":1067406,"ip_address":"","ucode":"94A1EE540BC9CA","user_header":"https://static001.geekbang.org/account/avatar/00/10/49/8e/e6eaf434.jpg","comment_is_top":false,"comment_ctime":1542765124,"is_pvip":true,"discussion_count":2,"race_medal":0,"score":"1542765124","product_id":100020801,"comment_content":"老师你好：之前看过一遍文章，一直有疑惑：一个innoDB引擎的表，数据量非常大，根据二级索引搜索会比主键搜索快，文章阐述的原因是主键索引和数据行在一起，非常大搜索慢，我的疑惑是：通过普通索引找到主键ID后，同样要跑一边主键索引，还望老师解惑。。。","like_count":0,"discussions":[{"author":{"id":1065351,"avatar":"https://static001.geekbang.org/account/avatar/00/10/41/87/d26efb2e.jpg","nickname":"SuperSnow","note":"","ucode":"84C89AA8083E6A","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":132301,"discussion_content":"你那个普通索引应该是联合索引吧，然后查询的字段在联合索引中存在，这个时候是可以不用回表了。如果是这个情况，查找普通索引表比查找主键索引表应该是快点吧。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1578896062,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]},{"author":{"id":1044546,"avatar":"https://static001.geekbang.org/account/avatar/00/0f/f0/42/7728d4f5.jpg","nickname":"艿艿","note":"","ucode":"8F727AB7A7F6B2","race_medal":0,"user_type":1,"is_pvip":true},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":28752,"discussion_content":"不会把。T T 不是会回表呢","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1570711058,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":41299,"user_name":"嘿嘿和哈哈","can_delete":false,"product_type":"c1","uid":1040976,"ip_address":"","ucode":"D1DF7BB312BFAC","user_header":"https://static001.geekbang.org/account/avatar/00/0f/e2/50/9cc482c6.jpg","comment_is_top":false,"comment_ctime":1542764797,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1542764797","product_id":100020801,"comment_content":"还是需要多听。多尝试反复的听。","like_count":0},{"had_liked":false,"id":41250,"user_name":"zx","can_delete":false,"product_type":"c1","uid":1059177,"ip_address":"","ucode":"444F6FF495BC2F","user_header":"https://static001.geekbang.org/account/avatar/00/10/29/69/c1575a7a.jpg","comment_is_top":false,"comment_ctime":1542762452,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1542762452","product_id":100020801,"comment_content":"这讲真的好，快快更新，大佬！","like_count":0},{"had_liked":false,"id":41240,"user_name":"o9","can_delete":false,"product_type":"c1","uid":1101332,"ip_address":"","ucode":"E373E82A39BBFE","user_header":"https://static001.geekbang.org/account/avatar/00/10/ce/14/b488f241.jpg","comment_is_top":false,"comment_ctime":1542761911,"is_pvip":false,"replies":[{"id":"14859","content":"别着急，咱这不是才第四讲嘛😄<br><br>我觉得有些点要讲透是要靠例子的，后面的实践篇都是索引相关。","user_name":"作者回复","user_name_real":"林晓斌","uid":"1264162","ctime":1542781463,"ip_address":"","comment_id":41240,"utype":1}],"discussion_count":1,"race_medal":1,"score":"1542761911","product_id":100020801,"comment_content":"看了这些篇文章，一个感受就是讲的太少，有好些内容没有涉及到，还有就是有的内容没有讲透😔","like_count":0,"discussions":[{"author":{"id":1264162,"avatar":"https://static001.geekbang.org/account/avatar/00/13/4a/22/2681d602.jpg","nickname":"林晓斌","note":"","ucode":"CDE42D44F26240","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":429741,"discussion_content":"别着急，咱这不是才第四讲嘛😄\n\n我觉得有些点要讲透是要靠例子的，后面的实践篇都是索引相关。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1542781463,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":41218,"user_name":"陈新仁","can_delete":false,"product_type":"c1","uid":1309925,"ip_address":"","ucode":"C0F8E3BC334A45","user_header":"https://static001.geekbang.org/account/avatar/00/13/fc/e5/c26c67ea.jpg","comment_is_top":false,"comment_ctime":1542760628,"is_pvip":false,"replies":[{"id":"14866","content":"后面有一篇实践篇专门讲 这俩区别的 😄","user_name":"作者回复","user_name_real":"林晓斌","uid":"1264162","ctime":1542782498,"ip_address":"","comment_id":41218,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1542760628","product_id":100020801,"comment_content":"老师能补充下唯一索引跟普通索引的区别吗？","like_count":0,"discussions":[{"author":{"id":1264162,"avatar":"https://static001.geekbang.org/account/avatar/00/13/4a/22/2681d602.jpg","nickname":"林晓斌","note":"","ucode":"CDE42D44F26240","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":429732,"discussion_content":"后面有一篇实践篇专门讲 这俩区别的 😄","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1542782498,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":41181,"user_name":"泉","can_delete":false,"product_type":"c1","uid":1027355,"ip_address":"","ucode":"F3447D3D5D5197","user_header":"https://static001.geekbang.org/account/avatar/00/0f/ad/1b/0c558e7e.jpg","comment_is_top":false,"comment_ctime":1542756991,"is_pvip":false,"replies":[{"id":"14867","content":"点赞","user_name":"作者回复","user_name_real":"林晓斌","uid":"1264162","ctime":1542782515,"ip_address":"","comment_id":41181,"utype":1}],"discussion_count":1,"race_medal":0,"score":"1542756991","product_id":100020801,"comment_content":"打卡","like_count":0,"discussions":[{"author":{"id":1264162,"avatar":"https://static001.geekbang.org/account/avatar/00/13/4a/22/2681d602.jpg","nickname":"林晓斌","note":"","ucode":"CDE42D44F26240","race_medal":0,"user_type":2,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":429721,"discussion_content":"点赞","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1542782515,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":true,"parent_id":0,"ip_address":""},"score":2,"extra":"{\"reply\":true,\"user_type\":2}","child_discussion_number":0,"child_discussions":[]}]},{"had_liked":false,"id":41160,"user_name":"T^T","can_delete":false,"product_type":"c1","uid":1119467,"ip_address":"","ucode":"FE31BA42B9D8C2","user_header":"https://static001.geekbang.org/account/avatar/00/11/14/eb/d2d9678c.jpg","comment_is_top":false,"comment_ctime":1542743600,"is_pvip":false,"discussion_count":0,"race_medal":0,"score":"1542743600","product_id":100020801,"comment_content":"期待周五的","like_count":0},{"had_liked":false,"id":41150,"user_name":"朱月俊","can_delete":false,"product_type":"c1","uid":1017707,"ip_address":"","ucode":"4DA0728B862FBD","user_header":"https://static001.geekbang.org/account/avatar/00/0f/87/6b/0b6cd39a.jpg","comment_is_top":false,"comment_ctime":1542733738,"is_pvip":false,"discussion_count":1,"race_medal":0,"score":"1542733738","product_id":100020801,"comment_content":"主键索引树不仅存储主键，还会存储实际数据，如果删除主键索引，实际数据岂不是也顺带被删了?<br>普通索引被删除，相当于毁掉一棵树，这棵索引树可以后台线程异步清理，无妨。","like_count":0,"discussions":[{"author":{"id":1065351,"avatar":"https://static001.geekbang.org/account/avatar/00/10/41/87/d26efb2e.jpg","nickname":"SuperSnow","note":"","ucode":"84C89AA8083E6A","race_medal":0,"user_type":1,"is_pvip":false},"reply_author":{"id":0,"avatar":"","nickname":"","note":"","ucode":"","race_medal":0,"user_type":1,"is_pvip":false},"discussion":{"id":132304,"discussion_content":"啥意思，删除主键索引，实际数据行肯定留着啊，只不过会自动产生row Id主键。","likes_number":0,"is_delete":false,"is_hidden":false,"ctime":1578896341,"is_liked":false,"can_delete":false,"is_complain":false,"is_top":false,"parent_id":0,"ip_address":""},"score":2,"extra":"","child_discussion_number":0,"child_discussions":[]}]}]}